docno="lists-000-2901113"
received="Sat Aug 21 11:41:52 1999"
isoreceived="19990821154152"
sent="Sat, 21 Aug 1999 10:35:41 -0500"
isosent="19990821153541"
name="Advocate"
email="wotw@inebraska.com"
subject="The wstrcmp to wstrcasecmp patch"
id="v04205500b3e4773c917f@[209.50.4.88]"
charset="us-ascii"
expires="-1"


To:html-tidy@w3.org

diff -rc5 tidy26jul99/attrs.c tidy26jul99-wstrcasecmp/attrs.c
*** tidy26jul99/attrs.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/attrs.cFri Aug 20 17:36:28 1999
***************
*** 242,252 ****
   static Attribute *lookup(char *s)
   {
       Attribute *np;
 
       for (np = hashtab[hash(s)]; np != null; np = np->next)
!         if (wstrcmp(s, np->name) == 0)
               return np;
       return null;
   }
 
   static Attribute *install(char *name, uint versions, AttrCheck *attrchk)
--- 242,252 ----
   static Attribute *lookup(char *s)
   {
       Attribute *np;
 
       for (np = hashtab[hash(s)]; np != null; np = np->next)
!         if (wstrcasecmp(s, np->name) == 0)
               return np;
       return null;
   }
 
   static Attribute *install(char *name, uint versions, AttrCheck *attrchk)
diff -rc5 tidy26jul99/clean.c tidy26jul99-wstrcasecmp/clean.c
*** tidy26jul99/clean.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/clean.cFri Aug 20 17:47:11 1999
***************
*** 297,307 ****
       AttVal *av;
       char *classname;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcmp(av->attribute, "style") == 0)
               break;
       }
 
       /* if style attribute already exists then append property */
 
--- 297,307 ----
       AttVal *av;
       char *classname;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcasecmp(av->attribute, "style") == 0)
               break;
       }
 
       /* if style attribute already exists then append property */
 
***************
*** 466,476 ****
   {
       AttVal *av;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcmp(av->attribute, "style") == 0)
               break;
       }
 
       /* if style attribute already exists then insert property */
 
--- 466,476 ----
   {
       AttVal *av;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcasecmp(av->attribute, "style") == 0)
               break;
       }
 
       /* if style attribute already exists then insert property */
 
***************
*** 520,539 ****
       AttVal *av;
       char *s1, *s2, *style;
 
       for (s2 = null, av = child->attributes; av; av = av->next)
       {
!         if (wstrcmp(av->attribute, "style") == 0)
           {
               s2 = av->value;
               break;
           }
       }
 
       for (s1 = null, av = node->attributes; av; av = av->next)
       {
!         if (wstrcmp(av->attribute, "style") == 0)
           {
               s1 = av->value;
               break;
           }
       }
--- 520,539 ----
       AttVal *av;
       char *s1, *s2, *style;
 
       for (s2 = null, av = child->attributes; av; av = av->next)
       {
!         if (wstrcasecmp(av->attribute, "style") == 0)
           {
               s2 = av->value;
               break;
           }
       }
 
       for (s1 = null, av = node->attributes; av; av = av->next)
       {
!         if (wstrcasecmp(av->attribute, "style") == 0)
           {
               s1 = av->value;
               break;
           }
       }
***************
*** 648,662 ****
   */
   void AddFontStyles(Node *node, AttVal *av)
   {
       while (av)
       {
!         if (wstrcmp(av->attribute, "face") == 0)
               AddFontFace(node, av->value);
!         else if (wstrcmp(av->attribute, "size") == 0)
               AddFontSize(node, av->value);
!         else if (wstrcmp(av->attribute, "color") == 0)
               AddFontColor(node, av->value);
 
           av = av->next;
       }
   }
--- 648,662 ----
   */
   void AddFontStyles(Node *node, AttVal *av)
   {
       while (av)
       {
!         if (wstrcasecmp(av->attribute, "face") == 0)
               AddFontFace(node, av->value);
!         else if (wstrcasecmp(av->attribute, "size") == 0)
               AddFontSize(node, av->value);
!         else if (wstrcasecmp(av->attribute, "color") == 0)
               AddFontColor(node, av->value);
 
           av = av->next;
       }
   }
***************
*** 671,681 ****
 
       prev = null;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcmp(av->attribute, "align") == 0)
           {
               if (prev)
                   prev->next = av->next;
               else
                   node->attributes = null;
--- 671,681 ----
 
       prev = null;
 
       for (av = node->attributes; av; av = av->next)
       {
!         if (wstrcasecmp(av->attribute, "align") == 0)
           {
               if (prev)
                   prev->next = av->next;
               else
                   node->attributes = null;
***************
*** 1107,1117 ****
 
           while (av)
           {
               next = av->next;
 
!             if (wstrcmp(av->attribute, "style") == 0)
               {
                   av->next = null;
                   style = av;
               }
               else
--- 1107,1117 ----
 
           while (av)
           {
               next = av->next;
 
!             if (wstrcasecmp(av->attribute, "style") == 0)
               {
                   av->next = null;
                   style = av;
               }
               else
diff -rc5 tidy26jul99/entities.c tidy26jul99-wstrcasecmp/entities.c
*** tidy26jul99/entities.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/entities.cFri Aug 20 17:48:00 1999
***************
*** 293,303 ****
   static struct nlist *lookup(char *s)
   {
       struct nlist *np;
 
       for (np = hashtab[hash(s)]; np != NULL; np = np->next)
!         if (wstrcmp(s, np->name) == 0)
               return np;
       return NULL;
   }
 
   static struct nlist *install(char *name, uint code)
--- 293,303 ----
   static struct nlist *lookup(char *s)
   {
       struct nlist *np;
 
       for (np = hashtab[hash(s)]; np != NULL; np = np->next)
!         if (wstrcasecmp(s, np->name) == 0)
               return np;
       return NULL;
   }
 
   static struct nlist *install(char *name, uint code)
diff -rc5 tidy26jul99/lexer.c tidy26jul99-wstrcasecmp/lexer.c
*** tidy26jul99/lexer.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/lexer.cFri Aug 20 17:49:37 1999
***************
*** 734,744 ****
       {
           prev = null;
 
           for (attr = node->attributes; attr; attr = attr->next)
           {
!             if (wstrcmp(attr->attribute, "xmlns") == 0)
                   break;
 
               prev = attr;
           }
 
--- 734,744 ----
       {
           prev = null;
 
           for (attr = node->attributes; attr; attr = attr->next)
           {
!             if (wstrcasecmp(attr->attribute, "xmlns") == 0)
                   break;
 
               prev = attr;
           }
 
Only in tidy26jul99-wstrcasecmp: parser-diff
diff -rc5 tidy26jul99/parser.c tidy26jul99-wstrcasecmp/parser.c
*** tidy26jul99/parser.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/parser.cFri Aug 20 17:50:18 1999
***************
*** 2884,2896 ****
       AttVal *attribute;
 
       /* search attributes for xml:space */
       for (attribute = element->attributes; attribute; attribute = 
attribute->next)
       {
!         if (wstrcmp(attribute->attribute, "xml:space") == 0)
           {
!             if (wstrcmp(attribute->value, "preserve") == 0)
                   return yes;
 
               return no;
           }
       }
--- 2884,2896 ----
       AttVal *attribute;
 
       /* search attributes for xml:space */
       for (attribute = element->attributes; attribute; attribute = 
attribute->next)
       {
!         if (wstrcasecmp(attribute->attribute, "xml:space") == 0)
           {
!             if (wstrcasecmp(attribute->value, "preserve") == 0)
                   return yes;
 
               return no;
           }
       }
***************
*** 2925,2935 ****
       if (XMLPreserveWhiteSpace(element))
           mode = Preformatted;
 
       while ((node = GetToken(lexer, mode)) != null)
       {
!         if (node->type == EndTag && wstrcmp(node->element, 
element->element) == 0)
           {
               FreeNode(node);
               break;
           }
 
--- 2925,2935 ----
       if (XMLPreserveWhiteSpace(element))
           mode = Preformatted;
 
       while ((node = GetToken(lexer, mode)) != null)
       {
!         if (node->type == EndTag && wstrcasecmp(node->element, 
element->element) == 0)
           {
               FreeNode(node);
               break;
           }
 
diff -rc5 tidy26jul99/tags.c tidy26jul99-wstrcasecmp/tags.c
*** tidy26jul99/tags.cMon Jul 26 16:03:05 1999
--- tidy26jul99-wstrcasecmp/tags.cFri Aug 20 17:36:16 1999
***************
*** 238,248 ****
   static Dict *lookup(char *s)
   {
       Dict *np;
 
       for (np = hashtab[hash(s)]; np != null; np = np->next)
!         if (wstrcmp(s, np->name) == 0)
               return np;
       return null;
   }
 
   static Dict *install(char *name, uint versions, uint model,
--- 238,248 ----
   static Dict *lookup(char *s)
   {
       Dict *np;
 
       for (np = hashtab[hash(s)]; np != null; np = np->next)
!         if (wstrcasecmp(s, np->name) == 0)
               return np;
       return null;
   }
 
   static Dict *install(char *name, uint versions, uint model,



