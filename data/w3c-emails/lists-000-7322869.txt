docno="lists-000-7322869"
received="Fri May 19 04:57:59 2000"
isoreceived="20000519085759"
sent="Thu, 18 May 2000 16:44:37 -0400 (EDT)"
isosent="20000518204437"
name="DMGoncalves"
email="david@scanlonassociates.com"
subject="Re: Replacement tags"
id="000701bfc109$c9c3c4e0$1300a8c0@dave-nt.WinProxy"
charset="iso-8859-1"
inreplyto="Replacement tags"
expires="-1"


To:<html-tidy@w3.org>

Dave,

Thank you for your reply.  I am not using XML; just HTML 4. I'm not even sure what XML is exactly :-)

Unfortunately, I cannot predict what tags will be used, so defining the tags individually will not work.  Any tag that begins with a pound sign # will be intercepted by my server-side app. before it feeds out the result.  This permits me to dynamically parse and effectively handle tags which may have never been defined before.  This is true for anyone who uses Borland Delphi to develop web applications (although many developers choose to use only a handful of hard-coded replacement tags).

I was hoping there would be some method to use to instruct TIDY to ignore tags according to a wildcard, mask, or other pattern.  Or perhaps just ignore all unrecognized tags. After all, even the popular browsers can ignore unrecognized tags without complaint; it they just don't use the tag (and it remains hidden). 

As it is, TIDY often will stop successfully tidying as soon as it encounters one of my tags, returning a mostly blank document as a result.

I see that TIDY supports tags for other development environment that use a similar tag structure ...   such as <# ... #>.  I hope you will consider providing support for Delphi's <# ... > tag format.

If there's no way around this, then I guess I won't be able to use TIDY for this project <#sigh>. However TIDY will still be useful for checking my simple HTML documents.  Thanks again for your time, and for developing (and supporting!) this great utility.

Warm Regards,

David Goncalves



