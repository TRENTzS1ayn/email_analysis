docno="lists-001-1220717"
received="Tue Nov  7 23:24:25 2000"
isoreceived="20001108042425"
sent="Tue, 7 Nov 2000 23:25:32 -0500 "
isosent="20001108042532"
name="Rao, Rajesh"
email="RRao@mportal.com"
subject="RE: tidy as a C++ library?"
id="B7BB4AC1259FD411844100D0B784ACB00543F4@MPORTAL_SRV2"
charset="windows-1252"
inreplyto="tidy as a C++ library?"
expires="-1"


To: 'Andr? Blavier '<ablavier@wanadoo.fr>
Cc:"'html-tidy@w3.org'"<html-tidy@w3.org>

COM Wrapper to the Tidy lib was a blessing in one of the projects that 
i am involved with it. It is working well and have had no problems with the
same. ( the client is not really MT and i dont foresee it to be either)
But i think your line of thought is very appealing and you have my vote on
pursuing the effort.

-----Original Message-----
From: Andr? Blavier
To: html-tidy@w3.org
Sent: 11/7/00 3:40 PM
Subject: tidy as a C++ library?

Hi everybody,

I'm the author of TidyGUI (a Windows GUI port of tidy) and TidyCOM (a
Windows COM component wrapper for tidy). I'd like to investigate your
opinion about a port of tidy as a Standard C++ library.
I've come up with this idea because TidyCOM has a significant drawback:
it
is not reentrant, so it can't be safely used on multi-threaded servers.
I
often receive requests asking me to make TidyCOM thread-safe. However,
TidyCOM is just a thin wrapper around Dave's C code and the numerous
global
variables of the original code are still there.
I think the way to go is to rewrite tidy as a pure C++ library: I could
then
make TidyCOM reentrant and, as a side effect, we would also be able to
embed
tidy more easily in various C++ applications, on multiple platforms.
Now, I'm aware of the following:
- We already have a very nice object-oriented, multi-platform port of
tidy:
JTidy.
- Porting to C++ will require a lot of work.
- Keeping the C++ code synchronised with Dave's code won't be easy.
So, before I start working on this project, I'd be glad to know what you
think about it: Would Tidy++ be a valuable asset for the community? Or
do
you think Java is a one-size-fits-all solution?

Thanks for your input.

    -- Andr? Blavier (ablavier@wanadoo.fr)



