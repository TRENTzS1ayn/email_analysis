docno="lists-001-13701799"
received="Fri Nov 16 10:36:41 2001"
isoreceived="20011116153641"
sent="Fri, 16 Nov 2001 10:27:23 -0500"
isosent="20011116152723"
name="Peter O Sigurdson/Markham/IBM"
email="sigpete@ca.ibm.com"
subject="Re: Allowing other tags..."
id="OFA7BF2E22.0FB66DEB-ON85256B06.0054B141@mkm.can.ibm.com"
charset="us-ascii"
inreplyto="Allowing other tags..."
expires="-1"

To: Hans Deragon<deragon@aqiii.org>,html-tidy@w3.org



Hans, why do you feel you need to introduce an addition tag?  The reason
I'm asking is that often implementation problems can be removed by walk
further up the tree to the design, or even up to the analysis and
revisiting your final outcome and what assumptions you are making about why
you need to go down a particular implementation path.  What value would
these new tags have to what you are trying to do?

When the only tool you have is a hammer, everything around you looks like a
nail.  Start by building better tools!



                                                                                                                    
                    Hans Deragon                                                                                    
                    <deragon@aqiii       To:     html-tidy@w3.org                                                   
                    .org>                cc:                                                                        
                    Sent by:             Subject:     Allowing other tags...                                        
                    html-tidy-requ                                                                                  
                    est@w3.org                                                                                      
                                                                                                                    
                                                                                                                    
                    11/16/2001                                                                                      
                    09:38 AM                                                                                        
                    Please respond                                                                                  
                    to Hans                                                                                         
                    Deragon                                                                                         
                                                                                                                    
                                                                                                                    



Greetings.


  I am considering using jtidy as part of a tool I am creating to
generate static pages.  Part of my tool requires the addition of tags
such as <staticpage> within the html documents.

  Now jtidy obviously complains about this since <staticpage> is not a
valid html.  I began to look at your source code and manage to have it
ignore any unknown tag under the <body> scope.  I still am looking a way
for jtidy to automatically generate the </staticpage> so the document
becomes automatically xml compliant.

  Ok, my question.  Would you accept the addition of an option within
jtidy which would cause it to ignore additional tags and just process
them to become xml compliant?  Off course, this option would be off by
default to keep jtidy backward compatible (and it makes sense to have
this option off for most usages).  But this feature might be very
interesting for other projects simillar to mine where they would want
their tags remain unprocessed (except for making them xml compliant).

  I am asking because the code change will require many changes within a
few files.  Thus, its not a simple patch.  I cannot therefore fork my
own jtidy, watch you guys fixing the main tree and adding features and
then manually add my feature to each of your new releases.  This is why
I would like my changes to be brought into the main tree.

  And if you have any suggestion on how to implement it, be my guess.
 Since this is OO, reverse engineering it to understand what is going in
is a bit difficult, and my solution might not be the most elegant/optimize.

  BTW, jtidy is great.  I'm glad I have discovered it.  Thanks for the
product.


Sincerely,
Hans Deragon



