docno="lists-001-13713768"
received="Fri Nov 16 10:52:02 2001"
isoreceived="20011116155202"
sent="Fri, 16 Nov 2001 10:51:46 -0500"
isosent="20011116155146"
name="Hans Deragon"
email="deragon@aqiii.org"
subject="Re: Allowing other tags..."
id="3BF53612.80407@aqiii.org"
charset="us-ascii"
inreplyto="OFA7BF2E22.0FB66DEB-ON85256B06.0054B141&#64;mkm.can.ibm.com"
expires="-1"


To: Peter O Sigurdson/Markham/IBM<sigpete@ca.ibm.com>
CC:html-tidy@w3.org

Peter O Sigurdson/Markham/IBM wrote:

>Hans, why do you feel you need to introduce an addition tag?  The reason
>I'm asking is that often implementation problems can be removed by walk
>further up the tree to the design, or even up to the analysis and
>revisiting your final outcome and what assumptions you are making about why
>you need to go down a particular implementation path.  What value would
>these new tags have to what you are trying to do?
>
>When the only tool you have is a hammer, everything around you looks like a
>nail.  Start by building better tools!
>
I want to build a template driven system for processing html files.
New tags are placeholders and instructions for how to manipulate the 
html files.

And I want these tags to be in xml format.  I then pass the html files 
through jtidy
to make them xml compliant.  Then, using DOM functionnality, I can 
manipulate
easily the different html and resolve their dependencies.  I then create 
a new
XML structure resulting from the merging of many files, and use this 
structure
to generate the final static page (I might pass this final static page 
again through
jtidy).

Its not the most efficient way of doing, but I am not seeking most 
efficiency CPU
or memory wise.  I am seeking for the most efficient use of existing 
code, keeping
maintenance easy, etc...  Using jtidy, I have no parsing to do!  It 
provides me
the DOM document of my HTML pages (hopefully with my tags intact).  Then
I only have to play with the Nodes, replacing them, deleting them, etc.. 
to get
the final structure.


Ciao
Hans Deragon



