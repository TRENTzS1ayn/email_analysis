docno="lists-001-7109442"
received="Tue Jan 16 15:04:05 2001"
isoreceived="20010116200405"
sent="Tue, 16 Jan 2001 09:54:47 -0500 (EST)"
isosent="20010116145447"
name="Joseph E. Baldus"
email="natalis_jb@hotmail.com"
subject="Fwd: Re: TidyCom"
id="F617tXjs5FGJziWwSoR000007d7@hotmail.com"
expires="-1"

To:html-tidy@w3.org



Please note the defect I describe below. Thank you for your efforts!

JB


----Original Message Follows----
From: Andr? Blavier <ablavier@wanadoo.fr>
Reply-To: Andr? Blavier <ablavier@wanadoo.fr>
To: "Joseph E. Baldus" <natalis_jb@hotmail.com>
Subject: Re: TidyCom
Date: Tue, 16 Jan 2001 10:46:22 +0100

Joe,

I'm sorry for this late reply to your message.
Thanks for your feedback on this strange <xsl:text> problem.

You are not doing anything wrong in your VB code. The problem seems to be in
the core tidy code. I suggest you submit it to the tidy mailing list.

     -- Andr?

----- Message d'origine -----
De : Joseph E. Baldus <natalis_jb@hotmail.com>
? : <ablavier@wanadoo.fr>
Envoy? : vendredi 22 d?cembre 2000 16:45
Objet : TidyCom


 > Hi:
 >
 > Thanks for your work on TidyCom! It has been working very well for me but
I
 > found that it fails to format an XSL string that is well formed and
includes
 > the <xsl:text> element. When I try and Tidy the XSL, the returned string
is
 > empty. What I found is that if I change the element name to <xsl:textX> 
or
 > somethins else, then the string get's Tidied correctly...
 >
 > This is some sample XSL that I'm working with:
 >
 > FAILS (Tidy returns zero length string):
 > ========================================
 > <?xml version="1.0"?>
 > <xsl:stylesheet version="1.0">
 >   <xsl:text>Test</xsl:text>
 > </xsl:stylesheet>
 >
 > OK (Tidy returns the string Tidied):
 > ========================================
 > <?xml version="1.0"?>
 > <xsl:stylesheet version="1.0">
 >   <xsl:textX>Test</xsl:textX>
 > </xsl:stylesheet>
 >
 >
 > I am using VB; TidyCom is set to XML format and this is the code I'm 
using
 > to execute TidyCom:
 >
 >
 >     Dim lstrXML As String
 >     Dim TidyObj As TidyCOM.TidyObject
 >
 >     Set TidyObj = CreateObject("TidyCOM.TidyObject")
 >
 >     TidyObj.Options.InputXml = True
 >     TidyObj.Options.OutputXml = True
 >     TidyObj.Options.LiteralAttributes = True
 >
 >     lstrXML = TidyObj.TidyMemToMem(CodeMax1.Text)
 >
 >
 > Please let me know if I'm doing something wrong here, if this is a known
 > problem, etc.
 >
 > Thanks again for your great tool!!
 >
 > Merry Christmas,
 > Joe Baldus
 >
 >
 > _________________________________________________________________
 > Get your FREE download of MSN Explorer at http://explorer.msn.com
 >


_________________________________________________________________
Get your FREE download of MSN Explorer at http://explorer.msn.com



