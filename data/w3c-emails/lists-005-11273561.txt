docno="lists-005-11273561"
received="Thu Oct  5 14:03:52 2000"
isoreceived="20001005180352"
sent="Thu, 5 Oct 2000 11:03:01 -0700"
isosent="20001005180301"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="RE: Making &quot;LABEL&quot; optional"
id="NDBBIKLAGLCOPGKGADOJMEMHDLAA.ejw@cse.ucsc.edu"
charset="iso-8859-1"
inreplyto="200010051701.NAA09659&#64;tantalum.atria.com"
expires="-1"

To:<ietf-dav-versioning@w3.org>



> Lisa has asked that we make LABEL functionality optional
> (i.e. move it into advanced).
>
> I personally have no problem with that, since labeling
> is pretty much orthogonal to CHECKOUT/CHECKIN.
>
> Does anyone object? (and if so, please give some reasonably
> specific rationale).

I object.

A label is a mechanism for giving a specific revision a human readable name,
as opposed to the server (machine) generated version identifier.  While it
is true that you can support linear versioning without the use of labels, it
is similarly true that you *could* have a filesystem automatically generate
an identifier for each file as it is created.  My point? The ability to
assign a human-meaningful name to a specific revision allows people to more
easily remember ones that are significant.  Instead of remembering that
version 1.6 was the one sent out to customers, a label of "Release_A" can be
used instead. Thus the label feature addresses a basic cognitive recall
problem inherent in the use of machine generated identifiers for revisions.
Since the machine generated identifiers are part of core versioning, the
remedy for them should also be part of core.

The vast majority of commercial and research versioning systems provide some
mechanism for assigning a human readable name to a revision, typically in
the form of a label.  I will take the liberty of assuming that they are not
blindly coding a feature everyone else has, and have provided it because it
offers a function their user base has found to be useful.  Doesn't it seems
that such a commonly occurring versioning feature should also be part of our
core versioning?

Finally, I am sure that there exist user communities that are confused by
the very notion of versioning, who will never use the label feature.
Similarly, I am sure there are communities of novice word processing users
that are confused by the very notion of word processing, and never use the
spell checking feature.  Does that argue for removal of spell checking from
"core" word processing? I think not.

- Jim



