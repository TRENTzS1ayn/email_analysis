docno="lists-005-11353174"
received="Thu Oct  5 21:10:44 2000"
isoreceived="20001006011044"
sent="Thu, 5 Oct 2000 18:03:32 -0700"
isosent="20001006010332"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="Arguments for simpler core versioning"
id="IAEBKAABDEIIBHMILFBPIEIKCAAA.lisa@xythos.com"
charset="iso-8859-1"
expires="-1"

To:<ietf-dav-versioning@w3.org>



I suggested support for labels (other than the server-defined version-name)
ought to be part of "advanced" versioning, meaning that a server that was
core-versioning-compatible would not have to support these features.  Jim
among others contended that most versioning systems had labelling therefore
it was justifiably part of "core", one of the required features for all
servers.

Well, I did a brief bit of web research to see if I could back up my
position.  I ignored real source control systems because I figured they
would have rich versioning features of all kinds and particularly support
for labeling (you will get no argument from me that these are important
features for source control systems).  I also looked up support for forking,
although it seems "core" can already nicely accomodate whether a server
supports forking or not, now that I understand how things work.  I included
all of my results out of those I found which supported versioning, even
though one does support labelling.

1.  Document Management Alliance See http://www.aiim.org/dma  [1]
 - DMA 1.0 designed for linear versioning only (extensible later,
presumably, to branched versioning)
 - No required support for labelling (no standard for defining labels -- and
the DocVersion object doesn't have a label field)

2.  Cyberteams does not support labelling or forking (though they're
considering it, their current versioning support does not have these extra
features)

3.  Xerox Docushare sure does not seem to have forking or labeling
 - http://docushare.xerox.com/en-us/Help/quickref.html
 - http://docushare.xerox.com/en-us/Help/manual/dsman5.htm#File_Versions
 - my best guess is that labelling is not supported, because there's no way
in the user interface to do that.
 - checking out a document automatically locks it, thus preventing
auto-forking through multiple checkouts

4.  Documentum
 - http://www.documentum.com/customer/education/courses/framelink.html
 - Definitely supports versioning in terms of "keeps old versions"
 - DOES support labelling
 - don't think it supports forking though

5.  Keymage
 - Supports versioning & version labels
 - doesn't support forking

6. DOCsFusion
 - http://www.hummingbird.com/products/dkm/pdf/DOCSFusion.pdf
 - Supports 99 "Major versions" per doc and 26 "sub-versions" per major
version -- is that forking?
 - does not support version labelling (just version comments, author,
typist, and deleting a version)

6. Xythos does not support labelling or forking -- can I count this one :)
 - You might have guessed this from my position, but in fact I've long felt
the features weren't necessary for simple document management
 - you can try versioning out on sharemation btw -- turn versioning "on" for
a resource
 - our customers aren't beating down our doors asking for forking or
labelling, I don't know that anybody has noticed the "lack"

Finally, products which support versioning but do not provide sufficient
information for me to see what versioning features are available in detail:
engenda, dynabase, glyphica (now CoVia).


--lisa


[1] DMA is Document Management Alliance -- a consortium working for
interoperability among doc mgmt systems.  DMA has discussed whether webdav
would suit them as a protocol (their stuff is mostly programming-oriented
rather than protocol oriented) and many people have suggested as much.



