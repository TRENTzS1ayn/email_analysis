docno="lists-005-11435511"
received="Fri Oct  6 15:47:33 2000"
isoreceived="20001006194733"
sent="Fri, 6 Oct 2000 12:51:00 -0700"
isosent="20001006195100"
name="Dennis E. Hamilton"
email="infonuovo@email.com"
subject="RE: Arguments for simpler core versioning"
id="NDBBKEGCNONMNKGDINPFGEBOENAA.infonuovo@email.com"
charset="iso-8859-1"
inreplyto="IAEBKAABDEIIBHMILFBPIEIKCAAA.lisa&#64;xythos.com"
expires="-1"

To:"Lisa Dusseault"<lisa@xythos.com>,<ietf-dav-versioning@w3.org>


Nice analysis.

I think it is inappropriate to use DMA in this comparison however.

DMA 1.0 only standardizes those properties essential to holding the model
together.  That is, they are required to support realization of the model /
architecture itself.  These are almost all synthetic and live, in the WebDAV
sense, and they are structural in nature.  The DMA specification doesn't
address externally-meaningful (non-live) properties, or ones needed to make
an application of the DMA model practically useful at all.

For example, there are no well-known properties for obvious things like
title, author, or anything like that (except for metadata descriptions,
where there are specific provisions for human meaningful names and
descriptive texts, all conformed to the locale / language of the human
operator).

The DMA 1.0 Versioning model, even though it anticipates branching and
merging, doesn't even provide any synthetic labeling or version
identification mechanism.  It is all done navigationally.  It is expected
that any representation of the dmaClass_VersionDescription class of objects
would certainly provide properties of that ilk, but the specification is
silent on the matter.

PS: It is not expected that version labels would be projected onto the
dmaClass_DocVersion class even though that is the way we named the puppy --
the DMA versioning model allows a DocVersion to be a version in more than
one way, so in the general case all labeling must be on the
VersionDescription, which leads from a particular place in a VersionSeries
to a DocVersion (or other versionable object).  A single DocVersion can be
the target of multiple VersionDescriptions.

Finally, I might as well put in my druthers:

1.I think the version label should be part of core versioning.
2.It should not employ case-insensitivity ever.
3.I am not clear on how one would specify server-determined restrictions on
the character set used in  labels, so I suppose one would not do that.

-- Dennis

AIIM DMware Technical Coordinator
http://www.infonuovo.com/dmware
------------------
Dennis E. Hamilton
InfoNuovo
mailto:infonuovo@email.com
tel. +1-206-779-9430 (gsm)
fax. +1-425-793-0283
http://www.infonuovo.com

-----Original Message-----
From: ietf-dav-versioning-request@w3.org
[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault
Sent: Thursday, October 05, 2000 18:04
To: ietf-dav-versioning@w3.org
Subject: Arguments for simpler core versioning


[ ... ]

1.  Document Management Alliance See http://www.aiim.org/dma  [1]
 - DMA 1.0 designed for linear versioning only (extensible later,
presumably, to branched versioning)
 - No required support for labelling (no standard for defining labels -- and
the DocVersion object doesn't have a label field)

[ ... ]



