docno="lists-005-11561531"
received="Sun Oct  8 21:24:00 2000"
isoreceived="20001009012400"
sent="Sun, 8 Oct 2000 21:23:26 -0400 (EDT)"
isosent="20001009012326"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: Making &quot;LABEL&quot; optional"
id="200010090123.VAA14743@tantalum.atria.com"
inreplyto="OFD8995C95.F04F1BFB-ON85256972.00564A96&#64;raleigh.ibm.com"
expires="-1"


To:ietf-dav-versioning@w3.org


   From: "Jim Amsden/Raleigh/IBM" <jamsden@us.ibm.com>

   Labels have a role separate from support from baselining. They're just a
   mechanism for distinguishing revisions that is controled by the client.

The clients already have this capability via properties like
DAV:comment, DAV:displayname, and DAV:creator-displayname.  Combined
with server defined properties such as DAV:version-name and
DAV:getmodificationdate, a user can distinguish one version from
another without the use of labels.

   Without labels, clients that want to get a consistent set of revisions
   will have to remember all the server-generated URLs and/or version
   names.

This is what baselines are for as well, but if a set of users have no
need for getting a consistent set of versions (beyond what is
currently selected as the targets of the version selectors), requiring
that every versioning implementation provide this functionality places
an unnecessary burden on versioning servers targeted at those users.
The fact that there are a significant communitiy of users that care
about versioning, but not labeling/baselining, has been demonstrated
by Lisa's survey of versioning systems.

   From: "Jim Amsden/Raleigh/IBM" <marjorie@us.ibm.com>

   Note that just because a versioning repository manager doesn't
   support labels doesn't mean that a WebDAV server on that repository
   manager can't support labels.

True, but I'm not sure how this is relevant to the current discussion.
Nobody was saying that labels cannot be implemented (clearly they can
be).  Lisa's point was that it is a non-trivial effort for
functionality that an important class of clients will not use.

   We should be careful about using existing repository
   implementations solely as an argument for including/excluding
   functions.

The point being made by enumerating existing versioning
systems without label support was that labeling is demonstrably
not essential versioning functionality for a significant
class of users that do want versioning functionality.

   I agree with JimW that labeling versions is a
   fundamental concept that should be part of core. That fact that a
   number of repository managers don't support this doesn't provide
   motivation for moving it to advanced to me because 1) these
   repository managers aren't trying to be THE Web distributed
   authoring and versioning protocol (supporting distributed,
   multi-user, multi-version access),

A repository manager is not a protocol, nor does it try to be
one.  It just provides functionality to a class of users.
If a demonstrably useful versioning system cannot be marshalled
through the WebDAV versioning protocol without adding in
functionality not needed by users of that system, this
in my view would represent a flaw in the protocol.

   2) they aren't prime movers in the repository marketplace,

I'm not sure how you determined who the "prime movers in the
repository marketplace".  I consider the systems identified
by Lisa to represent an important class of systems for which
the WebDAV versioning protocol should be appropriate.

   3) a number of the ones Lisa mentioned would like to add label support.

Since nobody was stopping them from doing so, the fact that they
chose not to include label support in the current versions of
their systems tells me that this is not an essential feature
of a system that provides versioning support.

Cheers,
Geoff



