docno="lists-005-11731388"
received="Wed Oct 11 17:59:09 2000"
isoreceived="20001011215909"
sent="Wed, 11 Oct 2000 17:58:31 -0400 (EDT)"
isosent="20001011215831"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: Making &quot;LABEL&quot; optional"
id="200010112158.RAA19142@tantalum.atria.com"
inreplyto="39E4CDFE.86088F2E&#64;verticalsky.com"
expires="-1"


To:ietf-dav-versioning@w3.org


   From: Ross Wetmore <rwetmore@verticalsky.com>

   Is this really the case? Or is just the case for older linear documents.

There are still a lot of largely independent documents (linear is not
really the issue, since you can have useful hyperlinks between
largely independent documents).

   I agree with your arguments if in fact you have standalone objects as in 
   your examples. But are these examples a reasonably representative set, 
   or just a particular subset?

I found Lisa's survey reasonably representative.  She mentioned all the
DMS systems I was familiar with, and clearly did not select out just
those that supported her view.

   It seems certainly not the case for a Web document which may consist 
   of a hierarchy of pages, images, MM files and maybe even some sort of 
   personalization data so Joe's story unfolds differently than Jane's
   because of a different set of choices. 

Sure, that all happens, but for a lot of documents it doesn't happen.
In particular, documents and links to documents are designed to be
largely independent of the content of that particular document, so
that documents *can* be changed independently.  (Maintaining a web
of tightly interdependent documents is *very* hard, and labels only
begin to address the complexities that are introduced ... you probably
need activities and merge support before you even begin to get it
under control).

   Perhaps it would be useful to outline a few more scenarios which could be
   used to decide just what "core" functionality means, and which types of
   documents would be applicable to or excluded from "core versioning".

I believe that Lisa's scenario is the key one for core versioning.
You have a set of largely independent documents that evolve over time,
and for a variety of reasons you want to be able to easily go back and
look at the earlier states of those documents.

Cheers,
Geoff



