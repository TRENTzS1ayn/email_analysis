docno="lists-005-11740578"
received="Wed Oct 11 20:56:14 2000"
isoreceived="20001012005614"
sent="Wed, 11 Oct 2000 17:59:39 -0700"
isosent="20001012005939"
name="Dennis E. Hamilton"
email="infonuovo@email.com"
subject="RE: Making &quot;LABEL&quot; optional"
id="NDBBKEGCNONMNKGDINPFCENCENAA.infonuovo@email.com"
charset="iso-8859-1"
inreplyto="IAEBKAABDEIIBHMILFBPGEINCAAA.lisa&#64;xythos.com"
expires="-1"

To:"Lisa Dusseault"<lisa@xythos.com>,"Jim Amsden/Raleigh/IBM"<jamsden@us.ibm.com>
Cc:<ietf-dav-versioning@w3.org>


Hmm,

I think we are missing something here.  I wouldn't want to assume what a
particular application of labels might be for (i.e, the intent) as opposed
to what it is (i.e., the extent).

More than that, I see a problem of coherence (e.g., interoperability over
time or across systems and also up/down-level).

Perhaps it is more useful to come at it like this: - Is it legitimate for
someone to use whatever property is identified for label as a property on a
core-only system, so that if the system were upgraded or the data was
transported to a system with advanced versioning support, everything would
work consistently?  That is, on one level it is an user-defined property,
but with semantics from the advanced versioning specification?   Is there
some semantics on this property for which this would be a problem?

[I realize that this is a conversation that might be worth holding about
other non-core properties too, but I don't have the draft at hand, so I will
be Socratic instead.]

[[Some of this might have sorted out if there were specific measures of what
it means to achieve interoperabilty by WebDAV and by WebDAV + DeltaV.  Oh
well ... There was a specific measure for ODMA and it got broken anyhow
going from ODMA 1.5 to ODMA 2.0]]


-- Dennis

AIIM DMware Technical Coordinator
http://www.infonuovo.com/dmware
------------------
Dennis E. Hamilton
InfoNuovo
mailto:infonuovo@email.com
tel. +1-206-779-9430 (gsm)
fax. +1-425-793-0283
http://www.infonuovo.com


-----Original Message-----
From: ietf-dav-versioning-request@w3.org
[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault
Sent: Wednesday, October 11, 2000 08:58
To: Jim Amsden/Raleigh/IBM
Cc: ietf-dav-versioning@w3.org
Subject: RE: Making "LABEL" optional


[ ... ]

Is there a justification for supporting labelling that does not require
advanced source-related concepts like "consistent set of revisions", or that
cannot be satisfied by using the version's comment or date properties?

Lisa

-----Original Message-----
From: ietf-dav-versioning-request@w3.org
[mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Jim
Amsden/Raleigh/IBM
Sent: Sunday, October 08, 2000 8:48 AM
To: ietf-dav-versioning@w3.org
Subject: Re: Making "LABEL" optional



Labels have a role separate from support from baselining. They're just a
mechanism for distinguishing revisions that is controled by the client.
Without labels, clients that want to get a consistent set of revisions will
have to remember all the server-generated URLs and/or version names.
Although possible, this is state that the server should generally be
providing for clients so they don't have to persist this kind of
information.




Since many document management clients don't want or need baselining
or configuration functionality, the document management versioning
servers do not want to have to provide the infrastructure
(i.e. labels) for it.

Cheers,
Geoff

   Date: Fri, 06 Oct 2000 14:38:26 -0700
  From: "Henry K. Harbury" <hharbury@assetvalue.com>

   I agree with Jim - but I would also add that labels provide more than
just
  a human readable name, they provide the ability to define a unique
  configuration of the resources in the repository.  One often does not want
  to get everything from the repository, just the subset of resources in the
  configuration identified by a unique label.  Baselines provide this type
of
  functionality in advanced versioning and labels provide it in core.  If
  labels are removed from core, how is this accomplished?
  -- Henry.



