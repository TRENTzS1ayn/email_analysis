docno="lists-005-11857970"
received="Mon Oct 16 11:40:05 2000"
isoreceived="20001016154005"
sent="Mon, 16 Oct 2000 11:39:13 -0400"
isosent="20001016153913"
name="Vasta, John"
email="jvasta@rational.com"
subject="Questions on the LABEL method"
id="982A819715AC804D915E8A053B48CBB8043AF8@sus-ma1it04.rational.com"
charset="iso-8859-1"
expires="-1"


To:ietf-dav-versioning@w3.org

The Marshalling section of the LABEL method says:

"The request MAY include a Depth header.  If it does include a Depth header,
the response MUST be a 207 Multi-Status."

Does this mean that a multistatus response would be returned even if there
were no errors? In RFC2518, the responses for recursive operations are not
specified this way; 207 is only returned if there are errors on a resource
other than that denoted by the request URI. Shouldn't LABEL be consistent
with that behavior? (The same question applies to the SET-TARGET method.)

When executing a recursive label operation, must the server return an error
on any unlabelable resources it finds (e.g. unversioned resources), or can
it silently ignore them? The SET-TARGET method can be applied to a
collection which is not a version selector; should the LABEL method work the
same way?

If the LABEL request URI refers to a checked-out version selector (and there
is no Target-Selector header), what should the response be? It appears that
the request should fail, since a checked-out version selector has no target,
but what precondition violation should be reported?
DAV:must-be-version-or-version-selector doesn't seem right, since the
request does refer to a version selector, and DAV:must-select-version only
seems to apply when a Target-Selector header is used.

John Vasta



