docno="lists-005-13948417"
received="Wed Dec 13 20:13:09 2000"
isoreceived="20001214011309"
sent="Wed, 13 Dec 2000 17:15:38 -0800"
isosent="20001214011538"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Working collections"
id="20001213171537.M8951@lyra.org"
charset="us-ascii"
inreplyto="OF87D4EDB3.89B39150-ON852569B4.0013556A&#64;raleigh.ibm.com"
expires="-1"

To: Jim Amsden<jamsden@us.ibm.com>
Cc:ietf-dav-versioning@w3.org


Subversion (SVN) doesn't use workspaces, so the .o files are only on the
local machine. Standard "ignore" rules tell the SVN client to not add them
to the repository.

In the working collection model that we agreed on, if you put those .o files
into the working collection, then yes: they're going to go into the
repository. If you didn't want them there, then don't put them there.

We have no other precedent that says "well, ignore <these> files when
performing your operation." I see no reason to do the same for a checkin of
a working collection.

Cheers,
-g

On Tue, Dec 12, 2000 at 10:32:00PM -0500, Jim Amsden wrote:
> What about all those .o files (derived files) that happen to be in the same
> workspace, and should never be versioned?
> 
> 
> 
> 
>    From: Greg Stein <gstein@lyra.org>
> 
>    On Wed, Nov 22, 2000 at 03:39:25PM -0500, Geoffrey M. Clemm wrote:
>    > ...
>    > I have what I believe is a simpler proposal.  You can create as many
>    > non-versioned resources as you want in a working collection.  When
>    > you checkin a working collection, all non-versioned resources are put
>    > under version control, and are replaced by their (newly created)
>    > version history resource.  The "put under version control" works
>    > leafs up, so you can create trees of non-versioned resources inside
>    > of a working collection before checking it in.  The working collection
>    > is deleted on checkin, as a working resource is, but all your work is
>    > saved in the standard form of versions and version histories.
>    > ...
>    > How's all this sound?
> 
>    Sounds terrific, and it shouldn't be too hard to model code-wise.
> 
> Excellent.  I'll write up this working collection proposal up for
> general review.
> 
> Cheers,
> Geoff
> 
> 

-- 
Greg Stein, http://www.lyra.org/



