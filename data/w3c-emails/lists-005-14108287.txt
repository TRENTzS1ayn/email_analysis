docno="lists-005-14108287"
received="Sat Dec 16 16:28:01 2000"
isoreceived="20001216212801"
sent="Sat, 16 Dec 2000 13:31:12 -0800"
isosent="20001216213112"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Minutes Delta-V breakout meeting 14-Dec-00"
id="20001216133112.G30887@lyra.org"
charset="us-ascii"
inreplyto="200012161503.KAA29194&#64;tantalum.atria.com"
expires="-1"

To:ietf-dav-versioning@w3.org


On Sat, Dec 16, 2000 at 10:03:53AM -0500, Geoffrey M. Clemm wrote:
> 
>    From: "Lisa Dusseault" <lisa@xythos.com>
> 
>    The reason why "core" versioning servers, e.g. document management servers,
>    need a way to list existing versions (what I think is meant by "version
>    history")  is because you need a way to tell the client what the URLs for
>    previous versions are.  The URLs are not calculable by clietns.
> 
> I don't think Greg was questioning the need to have a way
> of getting a list of existing versions.  I think he was just
> saying that he doesn't need anything more than the DAV:version-tree
> report (i.e. doesn't need the version history to actually be
> a resource).

Correct. Version histories do not add anything to our system at this point.
We will support the version-tree, though.

That said: I *do* know how/what a version history resource would be within
our system, and could provide the functionality; it is simply that the
client doesn't need it at this time.

[ and, in fact, I don't see its purpose in general. if you could somehow
  browse and acquire an HREF to a history, then you'd have a resource that
  tells you a bunch of version resources. But that doesn't tell you anything
  about the version-controlled resources (e.g. they're layout/structure, how
  they were made visible to users). So basically, you have an unstructured
  index to some data, but without a way to properly structure it. Seems a
  bit pointless :-) ]

>...
> Yes, the DAV:version-tree report lets you say what properties you want
> to see.  If you support version history resources, you can use the
> DAV:property report (which returns an extended PROPFIND-like response).

How is a property report useful? There is the mapping problem back to the
version-controlled resources (VCR).

Hmm. I guess "detached" version histories aren't useful. When they are still
hooked in via a VCR, then it handy because you can link from a VCR to a
history to versions within a property report.

Oh, whoops. I think that I will have version histories. I forgot that I was
planning to do prop reports just like that for some functionality
(specifically, to call up a change log with users, times, comments). hehe...
call me clueless :-)

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/



