docno="lists-005-14117953"
received="Sun Dec 17 10:21:55 2000"
isoreceived="20001217152155"
sent="Sun, 17 Dec 2000 10:21:45 -0500"
isosent="20001217152145"
name="Jim Amsden"
email="jamsden@us.ibm.com"
subject="Re: Minutes Delta-V breakout meeting 14-Dec-00"
id="OFEF00E735.E6BD8F4D-ON852569B8.0052E007@raleigh.ibm.com"
charset="us-ascii"
inreplyto="Minutes Delta-V breakout meeting 14-Dec-00"
expires="-1"

To:ietf-dav-versioning@w3.org


Greg,
Glad to see we're hitting some our your issues.


A third model: the client does a CHECKOUT to get a working resource, then
does a bunch of PUT/PROPPATCH to that working resource. When the client is
done, it does a CHECKIN.
<jra>This was the model Tim was referring to, he just left out the 
checkout. The checkout can be done either when the client gets the 
resource to indicate an intent to change and/or reserve the resource, or 
when ready to do the updates on the server. The protocol can support 
either policy.</jra>

>...
> Suggested that there be no branching in core, no labels in core, but 
that
> there should be a version history available in core.

Um. Why? At the moment, I'm not seeing a need for these in Subversion. I'd
like to understand the need for these in the core.
<jra>The purpose of the version history resource is just to provide a 
place to get information about the versioned resource, and to provide a 
resource the server can iterate over in a report/list. This is in case 
there are no version-controlled resources on a version and it becomes 
"lost".</jra>


Couldn't you do this with a property report, fetching the DAV:activity-set
for each version resource identified by DAV:version-set of the version
history resource?
<jra>We could, but this is likely to be a common operation, especially 
just before merging an activity into a a workspace.</jra>



