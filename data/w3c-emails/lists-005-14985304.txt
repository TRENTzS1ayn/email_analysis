docno="lists-005-14985304"
received="Fri Dec 22 04:12:04 2000"
isoreceived="20001222091204"
sent="Fri, 22 Dec 2000 09:11:01 +0000"
isosent="20001222091101"
name="Tim_Ellison@uk.ibm.com"
email="Tim_Ellison@uk.ibm.com"
subject="live properties (was: comments on deltav-10.5 from Yaron Goland,  Act One)"
id="802569BD.003275CA.00@d06mta07.portsmouth.uk.ibm.com"
charset="us-ascii"
expires="-1"

To:ietf-dav-versioning@w3.org




      (II.5) Move all DAV:supported-xxx properties to the OPTIONS response.
       Move all DAV:xxx-collection-set properties to the OPTIONS
       response.

   Done.

   <tim>
       Do we need DAV:supported-live-properties?
       Servers are required to protect the names of all live properties
       (whether they support them or not), so PROPPATCH will fail if the
       property is unsupported.
       Servers should not define a live property that it does not support,
       and PROPFIND would return 404 Not Found.
   </tim>

 <Geoff>
    Since the protocol does not distinguish between dead and
    live properties, a server has no way of knowing whether
    the PROPPATCH was to a dead property or to a live property
    that it doesn't know about.
 </Geoff>

<tim_2>
  I recall that we used to say that servers must protect all defined
  live properties (i.e., names) in the spec, even those properties that
  were unsupported.  I didn't see that statement in a quick scan of the
  latest spec, so has it been dropped?
  If yes, then I presume it is now encumbant upon clients to (a) check
  that a live property is supported before setting it (and expecting it
  to have any effect on the server), and (b) check that a live property
  is supported before getting it to check that some other client didn't
  violate (a).
  It would seem to be less of a burden for the server to protect the
  property name (and effectively enforce (a)) than expect the client to
  do two queries (OPTIONS and PROPPATCH/FIND) for each live property
  operation.
</tim_2>


Tim



