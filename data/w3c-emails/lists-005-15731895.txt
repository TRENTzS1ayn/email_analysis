docno="lists-005-15731895"
received="Tue Apr 10 06:35:49 2001"
isoreceived="20010410103549"
sent="Tue, 10 Apr 2001 06:35:48 -0400"
isosent="20010410103548"
name="Edgar@EdgarSchwarz.de"
email="Edgar@EdgarSchwarz.de"
subject="version-controlled configuration always checked-out"
id="200104101035.GAA27264@tux.w3.org"
expires="-1"


To:ietf-dav-versioning@w3.org
Cc:Edgar@EdgarSchwarz.de

Clemm, Geoff" <gclemm@rational.com> wrote:
> A version-controlled configuration is always associated with a
> baseline-controlled collection (and is used to capture the state
> of the configuration rooted at that baseline-controlled collection).
> Since you can always check-out/modify/check-in the members of the
> baseline-controlled collection,
Why must this be allowed ? If I have a version-controlled configuration
which I got from a baseline and it's a version of a component (subbaseline)
I don't want the possibility of changing resources in my workspace which are
controlled by the baseline as long as I don't want to change anything in this
component.
To do this I should do a CHECKOUT on the version-controlled configuration.
This also helps for creating new baselines of my master configuration.
As long as I didn't CHECKOUT the subbaseline I don't have to check for any changes
in this component but just put the subbaseline path and it's current
version in my subbaseline-set.

Then I would like to remove a restriction on subbaselines. In 11 you require 
the resources of subconfigurations to be removed from under the root collection
of the configuration. This effectively leads to a flat set of configurations
in a workspace. This is inconvenient for structuring large projects with heavy
reuse of subconfigurations and subsubconfigurations.
You only have to state that a collection contained in a baseline-controlled
collection which is itself baseline-controlled isn't considered a resource
belonging to the configuration but must be added as a subbaseline if wanted.

Then I'm happy that you keep UPDATE. Exposing an old version is THE basic
functionality of versioning. So it should be available as an explicit action
(Like the good old 'co -r' of RCS). Even if I agree that you can do it implicitly
e.g. in Clearcase by changing a views config spec.

Cheers, Edgar
-- 
edgar@edgarschwarz.de                    http://www.edgarschwarz.de
*          DOSenfreie Zone.        Running Native Oberon.         *
Make it as simple as possible, but not simpler.     Albert Einstein



