docno="lists-005-15741019"
received="Tue Apr 10 07:09:45 2001"
isoreceived="20010410110945"
sent="Tue, 10 Apr 2001 04:11:19 -0700"
isosent="20010410111119"
name="Greg Stein"
email="gstein@lyra.org"
subject="checked-out VCC (was: Re: Versioning TeleConf Agenda, 4/6/01 (Friday) 12-1pm EST)"
id="20010410041119.Z31832@lyra.org"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E2335&#64;SUS-MA1IT01"
expires="-1"

To:ietf-dav-versioning@w3.org


On Mon, Apr 09, 2001 at 01:19:58PM -0400, Clemm, Geoff wrote:
> A version-controlled configuration is always associated with a
> baseline-controlled collection (and is used to capture the state
> of the configuration rooted at that baseline-controlled collection).
> Since you can always check-out/modify/check-in the members of the
> baseline-controlled collection, this effectively lets you modify
> that membership of that baseline-controlled collection, unconstrained
> by the current state of the associated version-controlled configuration.

In the above description, you're modifying the baseline-controlled
collection (BCC). You aren't modifying the VCC.

I still see no point in putting the VCC in a permanently-checked-out state.

If you're concerned about consistency between the BCC and the baseline
referred to by the checked-in VCC, then the answer is to make the BCC
readonly. Not to say the VCC is always checked out.

Checking out the VCC would then allow the BCC to be modified. I have no
opinion on whether a server can always (force) a VCC to remain checked out.
But the spec should not mandate that situation.

[ in Subversion, the VCC cannot be checked out and the BCC is readonly; you
  must use working resources to create a new baseline, all of which is then
  merged into the BCC and VCC ]

Cheers,
-g

-- 
Greg Stein, http://www.lyra.org/



