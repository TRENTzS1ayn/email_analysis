docno="lists-006-0764023"
received="Tue Jun  5 05:45:16 2001"
isoreceived="20010605094516"
sent="Tue, 5 Jun 2001 11:44:31 +0200"
isosent="20010605094431"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="AW: Removing the DAV:activity and DAV:version-history and DAV:baseline resource type values"
id="NDBBKJABLJNMLJELONBKKENFCNAA.stefan.eissing@greenbytes.de"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E2424&#64;SUS-MA1IT01"
expires="-1"

To:<ietf-dav-versioning@w3.org>


> Von: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]Im Auftrag von Clemm, Geoff
> 
> [...]
> 
>    It will also remove the possibility of ambiguity being
>    inadvertantly introduced by some later addition to the
>    specification (though due diligence would dictate that the future
>    designers avoid such pitfalls).
> 
> This I believe remains the key argument.  Is future interoperability
> improved, unaffected, or harmed through the addition of these new
> resourcetype values?  My argument is the "like a duck" argument
> (i.e. if it looks like a duck and acts like a duck, even if it is some
> refinement of a duck, if your client does not know about that
> "duck refinement", it is better for your client to treat it as a duck
> than to treat it as an "unknown resource").

I think it's not only future interoperability, but also interoperability
as such which can be improved by explicitly stating the type of a resource.
Rumour has it that code can have bugs. Sticking to the analogies in this 
thread, if your mother-in-law does not report a property properly, the 
alligator might look like a duck and eat your client alive.

Well. 

How about a <D:implements> property which has all supported flavours
of a resource? This could help keep resourcetype backward compatible.
Otherwise I would favour extending resourcetype...

//Stefan



