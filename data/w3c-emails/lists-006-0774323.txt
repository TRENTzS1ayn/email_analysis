docno="lists-006-0774323"
received="Tue Jun  5 06:03:09 2001"
isoreceived="20010605100309"
sent="Tue, 5 Jun 2001 10:44:53 +0100"
isosent="20010605094453"
name="Tim_Ellison@uk.ibm.com"
email="Tim_Ellison@uk.ibm.com"
subject="RE: Removing the DAV:activity and DAV:version-history and DAV :baseline resource type values"
id="80256A62.003675C2.00@d06mta07.portsmouth.uk.ibm.com"
charset="us-ascii"
inreplyto="Removing the DAV:activity and DAV:version-history and DAV :baseline resource type values"
expires="-1"

To:"DeltaV \(E-mail\)"<ietf-dav-versioning@w3.org>




"Jim Whitehead" <ejw@cse.ucsc.edu> wrote:
> >
> > This doesn't feel right. Tim's point about supersets worries me.
> > And clients that don't look at enough scope to be able to differentiate
> > future/private types.
> >
> > We have specific types of resources in the spec. Semantic/conceptual
types
> > of resources. It seems better to state "this resource is of <THIS>
type"
> > than to let it be inferred by the property set.
> >
> > That inference step is rather brittle over time.
>
> I agree with Greg. I believe that all client implementors can correctly
> implement a simple string comparison against the value(s) in
> DAV:resourcetype. I do not have faith that *all* client implementors will
> (a) think about the issue long enough to realize that they can, in fact,
> infer the resource types from the supported live properties,

Then this has to be spelled out in the spec in such a fashion that client
implementors don't have to discover it.

> and (b)
> implement the inference logic uniformly and correctly. Clients and
servers
> don't even support the "charset" MIME parameter uniformly, and this is
> relatively simple in comparison.

We are asking clients to do far more than Set comparisons if they are to
use Delta-V effectively.  I don't think this is a matter of complex
implementation.

> Therefore, I recommend that the DeltaV specification *keep* the
> DAV:activity, DAV:version-history, and DAV:baseline resourcetype values.

It's worse than that; I was also suggesting extending the existing resource
types as detailed in preious posts.

Tim



