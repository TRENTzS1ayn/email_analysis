docno="lists-006-10676309"
received="Thu Jul 12 13:15:59 2001"
isoreceived="20010712171559"
sent="Thu, 12 Jul 2001 10:15:37 -0700"
isosent="20010712171537"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: auto-checkout and auto-checkin"
id="HPELJFCBPHIPBEJDHKGKEEPLCIAA.lisa@xythos.com"
charset="us-ascii"
inreplyto="OF79FA609B.6EEA0C1E-ON80256A87.003BA2F2&#64;portsmouth.uk.ibm.com"
expires="-1"

To:"Tim Ellison"<Tim_Ellison@uk.ibm.com>,"DeltaV"<ietf-dav-versioning@w3.org>


> It was simpler, but some folk complained that their use case was not
> satisfied by it.  I recall the "make the lifetime of the
> check-out the same
> as that of the lock" as a reasonable request, but the others I forget.

Then let's clearly identify the use cases and satisfy them, or at least the
important ones.  The current spec for the behaviour has now allowed for
THREE independent interpretations (Tim's, John's, mine) and puts a
horrendous burden on the client to understand the effect of any possible
combination that the server might have for these two properties and their
three or four possible values.

I know of two use cases so far that I believe people are actually going to
implement:

A.  No auto-versioning is done.
B.  Server auto-versions once for every lock/unlock that included at least
one write operation.  Server auto-versions once for every write operation
that isn't part of a lock.

I recall there was at least one other in way this used to be done (before
breaking it into two separate properties), but I don't have an old version
of the draft handy.

Lisa



