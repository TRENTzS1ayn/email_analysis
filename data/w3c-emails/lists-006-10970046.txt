docno="lists-006-10970046"
received="Tue Jul 17 04:48:44 2001"
isoreceived="20010717084844"
sent="Tue, 17 Jul 2001 04:56:14 -0400"
isosent="20010717085614"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: auto-checkout and auto-checkin"
id="3906C56A7BD1F54593344C05BD1374B103A389DC@SUS-MA1IT01"
inreplyto="auto-checkout and auto-checkin"
expires="-1"


To:ietf-dav-versioning@w3.org

   > From:  Jim Amsden
   > > If the DAV:auto-version value is DAV:checkout, when a 
   > > modification request is applied to a checked-in 
   > > version-controlled resource, the request is automatically 
   > > preceded by a checkout operation.

   > How would a non-versioning aware client check this back in? 

   From: John Hall [mailto:johnhall@evergo.net]

   They wouldn't.

That is correct.  The checkin would have to be done by a 
versioning-aware client.

   I don't think we should define that state.  It is
   there because it mimic's the effect of the old
   auto-checkout-unlocked without an auto-checkin-unlocked.

This state is required for an important baseline use case.  In
particular, DAV:checkout will commonly be the DAV:auto-version value
for version-controlled configurations.  This allows a basic versioning
client to modify a version-controlled member of a baseline-controlled
collection (i.e. CHECKOUT/CHECKIN, UPDATE, MERGE) without creating a
new baseline for every CHECKIN/UPDATE/MERGE.  An advanced versioning
client would then be used to create a new baseline (by checking in the
version-controlled configuration).

Cheers,
Geoff



