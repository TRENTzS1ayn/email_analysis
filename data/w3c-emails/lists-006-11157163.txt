docno="lists-006-11157163"
received="Thu Aug  2 21:18:50 2001"
isoreceived="20010803011850"
sent="Thu, 2 Aug 2001 21:18:19 -0400 "
isosent="20010803011819"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Appendix A &ndash;&ndash; Resource Classification"
id="3906C56A7BD1F54593344C05BD1374B103CA91E6@SUS-MA1IT01"
inreplyto="Appendix A &ndash;&ndash; Resource Classification"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: John Hall [mailto:johnhall@evergo.net]

   23.4 Why should VERSION-CONTROL be listed on a resource that is already
   under version control?

VERSION-CONTROL is defined as being a no-op on a version-controlled
resource, but it is a supported method (it just is defined to do
nothing).  This is done so a client does not have to be aware of
whether or not a server automatically puts a resource under version
control when it is created.

   It would be interesting if we allowed
   VERSION-CONTROL to remove a resource from version control, but we don't.

The post-conditions of an UNVERSION-CONTROL would be very different from
that of VERSION-CONTROL (the opposite, in fact), so using the same
method name for both would be misleading.  It would be like having
the same method name for CHECKOUT and CHECKIN.

   If VERSION-CONTROL only appears on versionable but non-versioned
   resources then that can communicate something interesting to the client.

The same information is conveyed by seeing whether VERSION-CONTROL
is supported, but the DAV:auto-version property is not.

   23.9 UNCHECKOUT (checkout-in-place) is missing.

It appears in the drafts on our web site.  Are you sure you are
looking at section 23.9?

Cheers,
Geoff



