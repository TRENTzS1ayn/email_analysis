docno="lists-006-1246339"
received="Thu Jun  7 04:50:35 2001"
isoreceived="20010607085035"
sent="Thu, 7 Jun 2001 10:50:15 +0200"
isosent="20010607085015"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="AW: Removing the DAV:activity and DAV:version-history and DAV:baseline resource type values"
id="NDBBKJABLJNMLJELONBKEEONCNAA.stefan.eissing@greenbytes.de"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B1033E5A55&#64;SUS-MA1IT01"
expires="-1"

To:"DeltaV \(E-mail\)"<ietf-dav-versioning@w3.org>


> [mailto:ietf-dav-versioning-request@w3.org]Im Auftrag von Clemm, Geoff
> 
> If you believe there is a useful line drawn between "resource state"
> and "resource type", then it is necessary to unambiguously define "state"
> and
> "type" (in particular, in a way that allows you to distinguish one
> from the other).
 
Nice try. ;-)

I'd be happy with a useful definition of what can appear inside 
resourcetype and how that matches to the different kind of resources 
mentioned in deltaV (and possibly other extensions).

I see two ways to resolve this issue in the Spec:

1) Top-Down: the spec defines types of resources and for each
   type then defines what live properties it holds and what state
   it can have.

2) Bottum-Up: The current spec is enhanced by a chapter which
   algorithmically defines how to detect the resource type from
   the supported-xxx-set. Ideally this would also describe how
   future extensions should add to this algorithm for their new
   types. 

Could the creators of deltaV agree on a way to go forward? Please?

//Stefan

PS. As Tim wrote: the spec itself, the concepts etc. are all fine and
there is no argument about that. 

> Cheers,
> Geoff
> 
> -----Original Message-----
> From: Lisa Dusseault [mailto:lisa@xythos.com]
> Sent: Wednesday, June 06, 2001 12:00 PM
> To: Clemm, Geoff; DeltaV (E-mail)
> Subject: RE: Removing the DAV:activity and DAV:version-history and
> DAV:bas eline resource type values
> 
> 
> If you believe that whether a resource is under version control 
> or not, is a
> matter of state, then leave it OUT of resourcetype.  It's not called
> "resourcestate".
> 
> Version, version History, and others are still types.
> 
> But draw a line somewhere.
> 
> lisa
> 
> > -----Original Message-----
> > From: ietf-dav-versioning-request@w3.org
> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff
> > Sent: Wednesday, June 06, 2001 8:07 AM
> > To: DeltaV (E-mail)
> > Subject: RE: Removing the DAV:activity and DAV:version-history and
> > DAV:bas eline resource type values
> >
> >
> > I think Tim's point was that if "under version control"
> > (e.g. "version-controlled-resource") is part of
> > the "type" of a resource, then "checked-out" and "checked-in"
> > would equally usefully be considered as part of the type
> > (since the significantly affect what methods can be
> > applied to that resource).
> >
> > In each case, you have the same resource (i.e. when you
> > put a resource under version control, it is the same resource
> > but has some additional live properties and methods you can
> > apply to it).
> >
> > Cheers,
> > Geoff
> >
> > -----Original Message-----
> > From: Stefan Eissing [mailto:stefan.eissing@greenbytes.de]
> > Sent: Wednesday, June 06, 2001 6:27 AM
> > To: DeltaV (E-mail)
> > Subject: AW: Removing the DAV:activity and DAV:version-history and DAV
> > :baseline resource type values
> >
> >
> >
> >
> > > [mailto:ietf-dav-versioning-request@w3.org]Im Auftrag von
> > > Tim_Ellison@uk.ibm.com
> > > [...]
> > >
> > > My view of the world...
> > >
> > > Here's the list of elements that could appear in a
> > DAV:resourcetype.  Some
> > > of these can be combined to provide a really meaningful
> > experience for the
> > > client.  Obviously, some combinations are invalid.
> > >      <DAV:checked-in/>
> > >      <DAV:checked-out/>
> > >      <DAV:collection/>
> > >      <DAV:working-resource/>
> > >      <DAV:version-controlled-resource/>
> > >      <DAV:version/>
> > >      <DAV:version-history/>
> > >      <DAV:workspace/>
> > >      <DAV:version-controlled-configuration/>
> > >      <DAV:baseline/>
> > >      <DAV:activity/>
> > >
> >
> > What is your rationale for checked-in/out in the type? I think
> > I have missed something in the spec, since it feels like a
> > property to me.
> >
> > > So,
> > > <DAV:resourcetype>
> > >      <DAV:activity/>
> > > </DAV:resourcetype
> > >
> > > would be good, that is, not surprisingly, an activity resource.
> > >
> > > <DAV:resourcetype>
> > >      <DAV:checked-out/>
> > >      <DAV:version-controlled-resource/>
> > >      <DAV:collection/>
> > >      <DAV:workspace/>
> > > </DAV:resourcetype>
> > >
> > > would be good too, it is a checked-out, version-controlled
> > resource for a
> > > workspace collection.  And so on.
> > >
> > > Tim
> > >
> > >
> 
> 



