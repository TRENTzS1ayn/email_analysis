docno="lists-006-1377569"
received="Fri Jun  8 14:14:27 2001"
isoreceived="20010608181427"
sent="Fri, 8 Jun 2001 14:13:39 -0400 "
isosent="20010608181339"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Removing the DAV:activity and DAV:version-history and DAV:bas eline resource type values"
id="3906C56A7BD1F54593344C05BD1374B1018E2446@SUS-MA1IT01"
charset="iso-8859-1"
inreplyto="Removing the DAV:activity and DAV:version-history and DAV:bas eline resource type values"
expires="-1"


To:"DeltaV (E-mail)"<ietf-dav-versioning@w3.org>

   From: Stefan Eissing [mailto:stefan.eissing@greenbytes.de]

   I see two ways to resolve this issue in the Spec:

   1) Top-Down: the spec defines types of resources and for each
      type then defines what live properties it holds and what state
      it can have.

   2) Bottum-Up: The current spec is enhanced by a chapter which
      algorithmically defines how to detect the resource type from
      the supported-xxx-set. Ideally this would also describe how
      future extensions should add to this algorithm for their new
      types. 

   Could the creators of deltaV agree on a way to go forward? Please?

Minimally, I will do #2, by including an enhanced version of Tim's
"property-o-rama" posting (thanks again, Tim!).  The discussion
of whether or not to extend DAV:resourcetype as well can go on
in parallel.

Note: one issue with some of the suggested new values for
DAV:resourcetype is that they would breaks the current protocol
semantics that the value of DAV:resourcetype is copied from a
checked-out resource to a version by CHECKIN, and from a version to a
version-controlled resource by UPDATE.  Clearly we could fix this up
by talking about what values got added to and deleted from
DAV:resourcetype by these operations, but it is kind of nice and
simple the way it is now.

Cheers,
Geoff



