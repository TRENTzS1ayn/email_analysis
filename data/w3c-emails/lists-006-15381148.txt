docno="lists-006-15381148"
received="Wed Oct 24 03:11:37 2001"
isoreceived="20011024071137"
sent="Wed, 24 Oct 2001 09:11:25 +0200"
isosent="20011024071125"
name="Julian Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: DTD for supported-method-set (3.1.3)"
id="JIEGINCHMLABHJBIGKBCCECNDFAA.julian.reschke@greenbytes.de"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B1049BD456&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>,<ietf-dav-versioning@w3.org>


> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff
> Sent: Wednesday, October 24, 2001 6:05 AM
> To: ietf-dav-versioning@w3.org
> Subject: RE: DTD for supported-method-set (3.1.3)
>
> ...
>
>    b) Do we agree that the attribute name is not qualified (so it is in no
>    namespace)?
>
> The intention was for every element and attribute type to be declared
> in the DAV: namespace, so the attribute "name" is declared in the
> DAV:namespace, as is the element type "supported-method-set" and
> the element type "supported-method".

Well.

First of all, this is a very uncommon way to use attributes. In vocabularies
like XSLT, XSL-FO or XHTML, attributes are declared with no namespace and
rely on their context. Namespaced prefixes usually only appear in
vocabularies where the attributes can appear on elements in other
namespaces, such as xml:lang (XML itself), xlink:role (XLink) or xsi:type
(XML Schema).

So besides that this would be very strange, the DTD fragment doesn't specify
it (well, it can't really, because DTDs do not know about namespaces).

The closest thing you *could* write as DTD would be something like:

<!ELEMENT supported-method ANY>

<!ATTLIST supported-method dav:name NMTOKEN #REQUIRED>

and then have normative text explain what the prefix is supposed to mean
there.

So my suggestion would be

a) to define that the name attribute is in no namespace,

b) fix the DTD fragment,

c) add examples to this (and maybe other) definitions. (Sorry).

>    In retrospective, just defining properties in terms of DTDs --
> while DTDs
>    can by definition not be normative for WebDAV (*) -- isn't a good idea.
>    (*) DTDs can not properly capture namespace information.
> Neither can they
>    adequately model the extensible model defined in section C.2.2
> of RFC2518
>
> (<http://www.greenbytes.de/tech/webdav/rfc2518.html#rfc.section.C.2.2>).
>
> I'll let the folks that like DTD's respond to that (:-).

Did I open a can of worms? DTDs can not be used for normative descriptions
of XML vocabularies like WebDAV's. Even the W3C doesn't attempt to do that.



