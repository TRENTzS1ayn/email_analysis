docno="lists-006-15686344"
received="Mon Oct 29 09:54:19 2001"
isoreceived="20011029145419"
sent="Mon, 29 Oct 2001 09:53:46 -0500"
isosent="20011029145346"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Definition of a configuration"
id="3906C56A7BD1F54593344C05BD1374B104AC75EE@SUS-MA1IT01"
inreplyto="Definition of a configuration"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: Peter Raymond [mailto:Peter.Raymond@merant.com]

   So we have this "concept" called a configuration which is ALL
   resources rooted at a collection (with Depth:infinity) and we have
   a concept called a "version-controlled configuration" which is all
   VERSION-CONTROLLED resources rooted at a collection which is
   captured in a baseline.  I think the terminology is a little odd
   because every member of the configuration has the
   DAV:version-controlled-configuration property even though some of
   the members of the configuration are not in the "version-controlled
   configuration" (eg they are not version-controlled).

The best way to think of the DAV:version-controlled-configuration
property on a non-version-controlled resource is that it indicates
the VCCn that the non-VCR would become a member of when it is
put under version control.  One way this property would be used was
if you were running against a server that required an explicit
client checkout of a VCCn in order to change it, the DAV:v-c-cn 
property on the non-VCR would tell you what VCCn you would have
to check out before you could apply VERSION-CONTROL to that non-VCR.

   I know it's too late to change this, but feel we should have some
   explanation of this available somewhere, eg in the FAQ, use case
   doc or somewhere.  It would have been very easy for me to miss this
   subtle point and incorrectly code the property to ONLY appear on
   version-controlled resources.

This is now a topic in the FAQ (in the "Properties" section).

Cheers,
Geoff



