docno="lists-006-15866919"
received="Mon Nov  5 12:52:41 2001"
isoreceived="20011105175241"
sent="Mon, 5 Nov 2001 12:51:57 -0500 "
isosent="20011105175157"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Merge with activity"
id="3906C56A7BD1F54593344C05BD1374B103F8AD52@SUS-MA1IT01"
inreplyto="Merge with activity"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: Konstantin Knizhnik [mailto:KKnizhnik@togetherlab.com]

   It seems to me that MERGE with activity should cause applying only
   logical change captured by the activity to the merge target.

That would be nice (and I really mean that, it would be nice), but
that concept is rarely implemented in practice (for various reasons,
including the infeasibility of automatically applying a "delta" to
many of the document formats that are used nowadays), and therefore it
would not be conducive to interoperability if that were the required
behavior.

   But I didn't find confirmation of this my assumption in the
   specification. Moreover it was mentioned here (13.12 additional
   MERGE semantic) that the latest version selected by this activity
   is a merge source. So looks like merge with activity is equivalent
   to a sequence of merges with the last versions from the
   activity. And in this case the role of activity as logical change
   is lost!

"Lost" is probably too strong a phrase ... what you risk is the
(unintentional) capture of changes from one or more other activities.
As an added-value service, a server could detect those cases, and
return an error in cases where this unintentional capture would
take place.  Even this capability is not sufficiently uniformly
provided for us to require this functionality from a repository
provider.

   It is not possible to apply only that changes which are identified
   by the activity without any changes done in the intermediate
   versions between common ancestor and merge source. So it will no be
   possible for example to apply bug fix from the development of new
   release project (development) to the current release support
   project (production) automatically.  If activity is really can be
   applied as logical change, then why it is not described in the
   specification?

If there is sufficient support from repository implementors for this
behavior, then I agree it would be worth standardizing (we'd probably
define a new type of "source" element, e.g. DAV:logical-change which
takes the URL of an activity as its value).

Cheers,
Geoff



