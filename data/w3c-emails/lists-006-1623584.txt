docno="lists-006-1623584"
received="Tue Jun 12 20:38:38 2001"
isoreceived="20010613003838"
sent="Tue, 12 Jun 2001 17:38:29 -0700"
isosent="20010613003829"
name="John Hall"
email="johnhall@evergo.net"
subject="RE: Question on support for in-place editing"
id="003b01c0f3a1$2ac6f4e0$0400a8c0@xythosjohnhall"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E2468&#64;SUS-MA1IT01"
expires="-1"

To:"'Clemm, Geoff'"<gclemm@rational.com>,"'DeltaV'"<ietf-dav-versioning@w3.org>


From: ietf-dav-versioning-request@w3.org
[mailto:ietf-dav-versioning-request@w3.org] On Behalf Of Clemm, Geoff

   From: Lisa Dusseault [mailto:lisa@xythos.com]


   By "in-place editing" I mean that when the VCR is checked out,
clients can
   do any number of PUT, PROPPATCH and other write operations, before
finally
   checking in.  In the meantime, this work-in-progress is available for
other
   users to see if they have permission to read the resource.

   First question: Does anybody plan to implement DeltaV this way?

I would strongly consider this an option, if a default GET and PROPFIND
did not reference the work in progress but instead referenced the
last-checked-in-version.

Imagine this:
After checkout, GET/PROPFIND from users that don't have the resource
checked out refer to the last checked in copy.  PUT/PROPPATCH are
illegal.

For the user with the resource checked out, all operations apply to the
checkout-in-place copy.

That gives you most of the functionality of the working resource model,
avoids things like UPDATE/MERGE interactions with working resources, and
avoids placing extra demands on the client.

If we weren't trying to be compatible with a 3rd party DAV + revision
but not DeltaV server, I'd propose that we do it this way.  The 3rd
party server puts the working resource in an independent namespace.

[Lest no one confuse us, I do work for Lisa at Xythos.  But she works in
CA and I work in WA where it is cheaper to live.  We have independent
opinions.]



