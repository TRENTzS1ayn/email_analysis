docno="lists-006-16530135"
received="Thu Dec 20 10:07:48 2001"
isoreceived="20011220150748"
sent="Thu, 20 Dec 2001 10:04:39 -0500"
isosent="20011220150439"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Re[2]: baselines &amp; namespaces"
id="3906C56A7BD1F54593344C05BD1374B1053F659F@SUS-MA1IT01"
inreplyto="Re[2]: baselines &amp; namespaces"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: Konstantin Knizhnik [mailto:KKnizhnik@togetherlab.com]

   Consider the following situation: we have
   version-controlled-directory /x placed under baseline control and
   version-controlled-directory /x/y belonging to the different
   configuration. Now if we extract baseline (without subbaselines)
   from version-controlled-configuration for /x in some workspace, how
   we should handle /x/y belonging to the other configuration and all
   it's members ?

To make this more concrete: let's assume that "some workspace" is
/ws/kk, and that /ws/kk/x is under baseline control, and
version-controlled configuration associated with /ws/kk/x selects a
baseline from the baseline history /repo/bh/8.  Now a new baseline
(/repo/bl/22) for /repo/bh/8 is created in some other workspace, and
we decide to MERGE /repo/bl/22 into /ws/kk.

   Should created version-controlled-resource /x contain binding to "y"?

Yes.  Although it is not a binding "to" y, but rather a binding "named" y.

   Should we create version-controlled-resource for /x/y?

It depends.  Let /repo/vh/12 be the version-history that is identified
by the version-controlled binding named "y" in the version of /x
selected by /repo/bl/22.  If before the MERGE, there was a VCR that
selected a version of /repo/vh/12, then /ws/kk/x/y is just a binding
to that VCR.  If there was no such VCR, then the server creates a new
VCR at /ws/kk/x/y.

   If so, which version should it select? Server dependent (initial,
   latest, random,...) 

If a new VCR was created, the DAV:checked-in version of that VCR is an
arbitrary version of /repo/vh/12.  I tried to require that it select
the root version in this case, but a couple members of the design team
insisted this this choice had to be left up to the server.


   Should it also be done for members of /x/y?

Yes.  One of the advantages of picking the "root" version is that if
it is a collection, it is common for the "root" version to be empty,
so you don't have to traverse down the tree picking random versions
all the way down.

Cheers,
Geoff
h



