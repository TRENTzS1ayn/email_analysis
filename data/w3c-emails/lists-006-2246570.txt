docno="lists-006-2246570"
received="Fri Jun 15 07:12:49 2001"
isoreceived="20010615111249"
sent="Fri, 15 Jun 2001 11:29:57 +0100"
isosent="20010615102957"
name="Tim_Ellison@uk.ibm.com"
email="Tim_Ellison@uk.ibm.com"
subject="RE: Removing a resource: A compromise that satisfies?"
id="80256A6C.003CA5EE.00@d06mta06.portsmouth.uk.ibm.com"
charset="us-ascii"
inreplyto="Removing a resource: A compromise that satisfies?"
expires="-1"

To:ietf-dav-versioning@w3.org




"Clemm, Geoff" <gclemm@rational.com> wrote:
> Before we got much further with this thread, let's
> examine the underlying premise that "deleting the
> versions when the VCR is deleted" is an important
> use case.

Whether it is an important use case or not, the proposal that you made so
far seems relatively harmless since it permits a server to delete versions
in a fashion that retains the 'referential integrity' that people wanted.
Clearly there will be servers that do not allow version deletion at all,
and they are free to retain that policy; but for servers that do allow
version deletion I do not see significant difference to the server
implementing the proposal and a client implementing the same deletion as a
policy.  Either way the versions will have gone.

> This is the web, so everybody and their grandmother
> (and for sure, www.google.com) will have cached copies
> of anything you put up on the web, so an argument
> that blowing away old versions at server defined
> URL's will somehow make that data go away is rather
> unrealistic, isn't it?

I don't buy this argument at all -- the argument for DELETE is not 'erase'
the data but rather to make it unaccesible (it is a namespace operation)?

> And if it doesn't really go
> away, why do we care that there are also a few obscure
> server-defined URL's that contain a copy of a
> version of this data?

The server admin sure cares that there are copies of the version data left
on the server.

> So perhaps we should reach agreement that this is a
> compelling use case before we consider supporting it
> by introducing either additional protocol elements
> or making server behavior less consistent and predictable.

This is always a good idea.

> So my revised position is that we defer any action
> on this proposal until the group reaches consensus
> that this is in fact a compelling use case.

Agreed.

Tim



