docno="lists-006-2290017"
received="Fri Jun 15 10:45:40 2001"
isoreceived="20010615144540"
sent="Fri, 15 Jun 2001 10:51:05 -0400"
isosent="20010615145105"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Question on Checking (of Working Resource vs. VCR): is this r ight?"
id="3906C56A7BD1F54593344C05BD1374B10350A719@SUS-MA1IT01"
charset="iso-8859-1"
inreplyto="Question on Checking (of Working Resource vs. VCR): is this r ight?"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: Lisa Dusseault [mailto:lisa@xythos.com]

   We might also consider trying to remove the dependency [of the
   working-resource option on the update option], since one would
   think that in a non-forking server, a CHECKIN would 99% of the time
   be followed by a UPDATE to push the latest content to the VCR.
   Rolling those two actions into one request (unless specified
   otherwise) would save a round-trip, because the CHECKIN and UPDATE
   can't be pipelined if you have to wait for the successful response
   to the CHECKIN before knowing how to send the UPDATE.

If folks agree that this is worth making an addition to the
protocol to support, I'd suggest the fillowing:

Add a property to a working resource like "DAV:checked-out-VCR".  Set
this property on the working resource created when a CHECKOUT is
applied to a VCR with the DAV:apply-to-version option.  A client is of
course free to add/delete/change this property.  Then add a
postcondition to "CHECKIN" that says that if there is a
DAV:checked-out-VCR on the working resource being checked in,
the specified VCR will automatically be updated to reflect the
content and dead properties of that version.

And I will also point out that we would then have a live property
that would distinguish a working resource from a checked-out
version-controlled resource ... (and thus remove one of the
objections of using DAV:supported-live-property-set to classify
versioning resources ... I can sense Tim either smiling widely,
or groaning loudly, or both :-).

Cheers,
Geoff



