docno="lists-006-2309937"
received="Fri Jun 15 12:49:45 2001"
isoreceived="20010615164945"
sent="Fri, 15 Jun 2001 09:47:30 -0700"
isosent="20010615164730"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="RE: Basic Property Behavior"
id="AMEPKEBLDJJCCDEJHAMIAEJBDAAA.ejw@cse.ucsc.edu"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B10350A364&#64;SUS-MA1IT01"
expires="-1"

To:<ietf-dav-versioning@w3.org>


I agree with this decision as well.

At present, DeltaV *already* has too many options. It is my opinion that the
benefit to be gained by adding another option concerning versioning of
properties is swamped by the interoperability problems it would raise.

If a server needed to maintain property whose semantics required it to be
the same across all revisions, then this could be made into a live property
with that behavior. But, a client should have the expectation that arbitrary
dead properties are versioned along with the resource contents.

- Jim

> Yes, this issue was raised and debated a couple of IETF's ago,
> and the consensus was that the implementation burden on a server
> to support versioned dead properties was not sufficient to
> introduce a major source of
> interoperability problems (i.e. clients that expected to be
> able to version properties would not interoperate effectively
> with servers that did not, and vica versa).
>
> Note that the server defines the versioning behavior of any
> server defined (and therefore, live) properties, so a server is
> certainly free to make all of its server defined properties
> non-versioned.



