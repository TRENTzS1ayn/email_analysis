docno="lists-006-2816854"
received="Tue Jun 19 13:40:11 2001"
isoreceived="20010619174011"
sent="Tue, 19 Jun 2001 13:40:02 -0400"
isosent="20010619174002"
name="Jim Amsden"
email="jamsden@us.ibm.com"
subject="[ietf-dav-versioning] &lt;none&gt;"
id="OFE49F3FD7.360C6732-ON85256A70.005F274C@raleigh.ibm.com"
charset="us-ascii"
expires="-1"

To:ietf-dav-versioning@w3.org


> 2) the difficulty clients will have in determining the
> type of the resource - they have to know the property
> semantics instead of relying on the server to hide these
> semantics,

No, they just need to look and see if the properties and/or methods are
supported to correctly type the resource.  The latest draft of the spec 
has
an appendix that spells this out.

> and 3) perhaps reducing future protocol flexibility because
> we've allow too much semantics into clients that will restrict
> protocol evolution.

Again, no semantics is required to correctly 'type' a resource.

In response to Tim:

The "semantics" I referred to above is checking for the existence of some 
set of properties. What if changes in the protocol necessitate changes in 
these properties at some time in the future? This also leads down the 
slippery slope of using properties with particular values to determine 
type - that is, confusing state with dynamic type. Most modern computer 
languages in common use do use named types and do not require clients to 
look inside to figure out what they are. Smalltalk, C++, and Java (at 
least by default) don't even let clients see in. Encapsulation is a good 
thing. I think it would be nice if WebDAV could use it too.



