docno="lists-006-2915611"
received="Tue Jun 19 23:54:15 2001"
isoreceived="20010620035415"
sent="Tue, 19 Jun 2001 23:59:53 -0400"
isosent="20010620035953"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Removing the DAV:activity and DAV:version-history and  DAV:ba seline  resource type values"
id="3906C56A7BD1F54593344C05BD1374B103624F09@SUS-MA1IT01"
inreplyto="Removing the DAV:activity and DAV:version-history and  DAV:ba seline  resource type values"
expires="-1"


To:ietf-dav-versioning@w3.org

By "typeless", I meant that you do not declare the type of a
variable in a Smalltalk routine.  You just apply a method to it, and
if that method is not supported by that object, then you get
a runtime error.

So the analogy is that just as it is bad form in a Smalltalk
routine to ask an object "are you of type xxx", it is bad
form in a HTTP client to ask a resource "are you of resourcetype
xxx".

But this is just an analogy, and HTTP is not Smalltalk, so
even if we agreed that the analogy is valid, it really wouldn't
answer the question, so please forgive my playing analogy games
in the first place.  And if anyone choses to continue this
analogy, I promise not to respond (:-).

But if someone has something specific and concrete that you
could do by inspecting the value of DAV:resourcetype that you
could not do by inspecting the values of DAV:supported-method-set
and DAV:supported-live-property-set, I would be interested.

Note that I did not see enough support (or any support, for
that matter :-) in the working group
for removing DAV:activity, DAV:version-history, or DAV:baseline,
so I am assuming that they stay unless there is a sudden
groundswell of support for taking them out.

Cheers,
Geoff

-----Original Message-----
From: Jim Amsden [mailto:jamsden@us.ibm.com]
Sent: Tuesday, June 19, 2001 5:25 PM
To: ietf-dav-versioning@w3.org
Subject: RE: Removing the DAV:activity and DAV:version-history and
DAV:ba seline resource type values


Geoff says:
>>But I do care in general that DeltaV (and in general WebDAV)
protocols be designed to encourage good client design, and
it seems to me that there is a basic lesson from programming
language design (i.e. that typeless languages are more suited
to environments where clients and servers get changed)
that is being ignored in this drive to extend DAV:resourcetype.<<

Just to clarify, Smalltalk in not a typeless language, it is strongly 
typed, but employes dynamic typing. That is, it determines the type of a 
class at runtime rather than compile  time. Such late binding provides 
extra flexibility in the language at some cost in performance. In any 
case, such types are named and described with meta-classes in Smalltalk. 
Imagine using the Smalltalk class libraries without class names!



