docno="lists-006-4020623"
received="Sun Jun 24 16:07:51 2001"
isoreceived="20010624200751"
sent="Sun, 24 Jun 2001 13:07:48 -0700"
isosent="20010624200748"
name="John Hall"
email="johnhall@evergo.net"
subject="RE: Resolving outstanding issues in DeltaV"
id="000201c0fce9$578fdf40$0400a8c0@xythosjohnhall"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B103625712&#64;SUS-MA1IT01"
expires="-1"

To:"'Clemm, Geoff'"<gclemm@rational.com>,<ietf-dav-versioning@w3.org>


> [mailto:ietf-dav-versioning-request@w3.org] On Behalf Of Clemm, Geoff
> From: Lisa Dusseault [mailto:lisa@xythos.com]
> A garbage collector that deletes objects that still have 
> references to them is as much of a bug (and arguably, more of 
> a bug) than a garbage collector that misses some objects.

Missing objects is fatal.

Deleting objects that have references, in a loosely coupled system where
the references are understood to be conditional (files on the web --
ever seen a broken link?) is a feature.

>    Solutions to problem 1 might involve something like a "orphaned
>    resources report" that allowed the storage losses to be "found".
> 
> Such a report is reasonable (and we certainly will be 
> providing a custom report of this kind for my server), but 
> since this report is independent of the current feature set, 
> I would not suggest holding up standardizing on the current 
> set of features in order to reach consensus on the semantics 
> and protocol for this report.

This report would not cause changes to the current feature set, but
without it the feature set is not complete without additions.  Is
completeness required to be a draft, or just relative stability?



