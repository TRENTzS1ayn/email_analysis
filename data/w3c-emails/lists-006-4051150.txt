docno="lists-006-4051150"
received="Tue Jun 26 03:45:06 2001"
isoreceived="20010626074506"
sent="Tue, 26 Jun 2001 17:44:25 +1000"
isosent="20010626074425"
name="Alan Kent"
email="ajk@mds.rmit.edu.au"
subject="Re: Versioning collections question"
id="20010626174425.K21551@io.mds.rmit.edu.au"
charset="us-ascii"
inreplyto="20010626171700.J21551&#64;io.mds.rmit.edu.au"
expires="-1"

To: DeltaV<ietf-dav-versioning@w3.org>


On Tue, Jun 26, 2001 at 05:17:00PM +1000, Alan Kent wrote:
> Or put another way, the URI bindings to members of a collection are
> a part of the parent collection and so are versioned with the member
> collection.

An interesting follow on is that to check out a collection, I always
get out all the members. I cannot get partial subtrees.
("I want to check out /foo and /foo/a/..., but not /foo/b" is not
possible since the container /foo will contain the "b" binding
so "b" will be visible). I guess "b" does not have to be in the
"checked-out" mode or something - ie, read only (??).
I don't know if this is important.

Hmmm, another question. What do bindings identify? A particular version
of a collection? The latest version of a collection? If I check in
a new version of a collection, does the parent collection need to be
modified to point to the new version? Does checking in the parent
collection in turn require the check in of its parent, all the way
up to the root of the configuration? Does this mean adding a new
file to a configuration always results in a versioning riple from
that resource's parent collection up to the root collection?

Ok, I think this means I don't understand how collection versioning
works because I don't know how a binding in a collection identifies
the member. Does it identify a version history, a particular version,
or what? What semantic information does a version of a collection
hold?

ajk



