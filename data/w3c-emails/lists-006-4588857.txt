docno="lists-006-4588857"
received="Tue Jan 16 13:56:26 2001"
isoreceived="20010116185626"
sent="Tue, 16 Jan 2001 13:55:26 -0500 (EST)"
isosent="20010116185526"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: is this example valid?"
id="200101161855.NAA17542@tantalum.atria.com"
inreplyto="20010116103613.C7070&#64;lyra.org"
expires="-1"


To:ietf-dav-versioning@w3.org


   From: Greg Stein <gstein@lyra.org>

   Grr. The below doesn't work either. The Label: would apply to file.c, not
   /the/baseline/selector.

   Okay... separate question: can I "slash through" a baseline?

   Off the cuff, I'd say "no, the baseline is an arbitrary set of version
   resources, rather than a structured/hierarchical set of version resources."

Correct.

   The problem is how to get to a specific version resource given a label for a
   baseline and a (relative) path within that baseline. And in as few
   operations as possible, of course :-)

You would have to:
- locate that baseline,
- use BASELINE-CONTROL to instantiate that baseline in some collection, and
- issue the checkout against the appropriate member of that collection

Assume that /repo/proj1 identifies your subversion repository, you want
the baseline labeled "foo", and the name in that baseline was "/some/file.c"
(and specifying just enough XML to get the point across):

------------------------

PROPFIND /repo/proj1
  <DAV:prop> <DAV:baseline-selector/> </DAV:prop>
=>
  <DAV:baseline-selector> /bs/x235 </DAV:baseline-selector>

PROPFIND /bs/x235
  Label: foo
  <DAV:prop> <DAV:version/> </DAV:prop>
=>
  <DAV:version> /bl/id93 </DAV:version>

BASELINE-CONTROL /baseline-collection/proj1/foo
  <DAV:baseline> /bl/id93 </DAV:baseline>

CHECKOUT /baseline-collection/proj1/foo/some/file.c

------------------------

The choice of the name for this baseline controlled collection
is up to the client.  This client probably called it "foo"
because the baseline is currently labeled foo, so that seems
a reasonable thing to put in the URL for that collection.

Cheers,
Geoff



