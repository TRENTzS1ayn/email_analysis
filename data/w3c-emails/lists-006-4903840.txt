docno="lists-006-4903840"
received="Thu Jan 18 17:45:48 2001"
isoreceived="20010118224548"
sent="Thu, 18 Jan 2001 17:44:54 -0500 (EST)"
isosent="20010118224454"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: proppatch label-name-set?"
id="200101182244.RAA24553@tantalum.atria.com"
inreplyto="20010118130419.F7731&#64;lyra.org"
expires="-1"


To:ietf-dav-versioning@w3.org

   From: Greg Stein <gstein@lyra.org>

   SVN will automatically label a baseline for later access. The
   question is how can the SVN client compensate for servers that
   *don't* auto-label baselines in some way?

If the SVN client depends on "auto-label"ing of any kind, then it
is likely to have trouble with any non-SVN client, since even if
it did auto-label, it is extremely unlikely that it will use the
same labeling scheme as SVN uses (increasing integers, as I recall).

Can't you make the SVN client just use the baseline-URL, instead of
depending on a linear sequence of integers?  (Your answer to this
might point a way towards an interoperable approach).

   I have figured out, though, how to discover the auto-labels -- I'll just ask
   for the DAV:label-name-set in the MERGE operation. It will be non-empty for
   the new baseline resource, and empty for all the new version resources.

That is true.  If you get back no auto-labels, will the SVN client
still be able to work?

   [ it would be nice to return nothing at all (e.g. no <DAV:label-name-set/>
     empty element) for the version resources, but that seems illegal ]

I imagine most robust clients will treat nothing at all as equivalent
to an empty property element, so I'd think either way would be OK.
(Or is this distinction important to some clients?)

Cheers,
Geoff



