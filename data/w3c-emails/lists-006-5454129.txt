docno="lists-006-5454129"
received="Thu Feb  1 17:48:20 2001"
isoreceived="20010201224820"
sent="Thu, 01 Feb 2001 22:48:23 +0000"
isosent="20010201224823"
name="Roy Seto"
email="Roy.Seto@oracle.com"
subject="Re: Patches"
id="3A79E7B7.980679C9@oracle.com"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E2206&#64;SUS-MA1IT01"
expires="-1"


To:ietf-dav-versioning@w3.org

(Question 1) I agree that moves and deletions make the
DAV:baseline-comparison REPORT more expressive than a sparse
configuration concept would be. But I'm concerned whether
this lends itself to efficient implementation for release
management purposes. For large products, baselines are big,
and patch deltas between them might often be small. Would
time and space efficiency suffer because the only way to
name the (small) patch is to compare two (big) baselines?

Of course, a release management system could cache the
results of the DAV:baseline-comparison REPORT, but this
would not be a namable WebDAV resource in the URL namespace.


(Question 2) Suppose an author wanted to define a patch as
the set of merge target versions from a patch activity into
the mainline activity, where the reference baseline was the
baseline defining the initial release. How could the patched
baseline be computed?

Roy

"Clemm, Geoff" wrote:
> 
> You can create a new baseline in the collection,
> and then use the DAV:compare-baseline report
> to describe the differences.
> 
> Creating a collection that just contains the
> "changed files" doesn't really capture the change,
> since it can only capture additions, and not
> moves or deletions.
> 
> Cheers,
> Geoff
> 
> -----Original Message-----
> From: Eric Sedlar [mailto:Eric.Sedlar@oracle.com]
> Sent: Wednesday, January 31, 2001 2:43 PM
> To: DeltaV (E-mail)
> Subject: Patches
> 
> What's the best way to model a patch set in deltaV?  (Let's say I want to
> create a
> configuration including only the files in a collection, recursively, that
> have changed since
> a particular baseline.)
> 
> --Eric



