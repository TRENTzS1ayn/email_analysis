docno="lists-006-5482968"
received="Thu Feb  1 22:54:55 2001"
isoreceived="20010202035455"
sent="Thu, 1 Feb 2001 22:53:48 -0500 (EST)"
isosent="20010202035348"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: Patches"
id="200102020353.WAA05160@tantalum.atria.com"
inreplyto="3A79E7B7.980679C9&#64;oracle.com"
expires="-1"


To:ietf-dav-versioning@w3.org


   From: Roy Seto <Roy.Seto@oracle.com>

   (Question 1) I agree that moves and deletions make the
   DAV:baseline-comparison REPORT more expressive than a sparse
   configuration concept would be. But I'm concerned whether
   this lends itself to efficient implementation for release
   management purposes. For large products, baselines are big,
   and patch deltas between them might often be small. Would
   time and space efficiency suffer because the only way to
   name the (small) patch is to compare two (big) baselines?

The DeltaV baseline mechanism was carefully designed to allow
for efficient implementation of large baselines.  In particular,
a baseline is a version, so unless it is the (empty) root baseline,
it will have at least one predecessor baseline, and therefore
can be implemented as a delta from that predecessor.  This means
that the cost of a baseline can be proportional to the changes
from its predecessor, rather than to the number of versions in it.

   Of course, a release management system could cache the
   results of the DAV:baseline-comparison REPORT, but this
   would not be a namable WebDAV resource in the URL namespace.

There is no need to make this be a namable resource, since it
is just an implementation mechanism.  The baseline is all that
needs to be named.

   (Question 2) Suppose an author wanted to define a patch as
   the set of merge target versions from a patch activity into
   the mainline activity, where the reference baseline was the
   baseline defining the initial release. How could the patched
   baseline be computed?

Not quite sure what you mean here.  By "merge target version",
I assume you mean the DAV:checked-in or DAV:checked-out version
of the merge target?  (The merge target is a version-controlled
resource, not a version).  I'm not sure what you mean by
"from a patch activity into the mainline activity" (you merge
into a collection or a version-controlled resource, not into
another activity).  Also, what do you mean by the "reference
baseline"?  And what is the "patched baseline"?

Cheers,
Geoff



