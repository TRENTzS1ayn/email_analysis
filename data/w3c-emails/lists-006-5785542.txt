docno="lists-006-5785542"
received="Fri Feb  2 15:12:21 2001"
isoreceived="20010202201221"
sent="Fri, 2 Feb 2001 12:09:48 -0800"
isosent="20010202200948"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: Core versioning issues and nits"
id="CNEEJCPIOLHKIOFNFJDPEEOGCCAA.lisa@xythos.com"
charset="US-ASCII"
inreplyto="802569E7.00422867.00&#64;d06mta07.portsmouth.uk.ibm.com"
expires="-1"

To:<Tim_Ellison@uk.ibm.com>,<ietf-dav-versioning@w3.org>


> > 2) Versioning of Properties
> >
> > We need a kind of property that applies to all versions,
> > or to put another way, properties that apply to the
> > version-controlled resource itself.  For example, the
> > "owner" property maybe ought to apply to the whole shebang:
> > when you change the owner, the new owner has to be responsible
> > for everything, from the first version to the last and
> > including the version-controlled resource and version history.
>
> The version history refers to all the versions, and so that
> would be the
> natural place to put the creator display name of the
> 'component' owner.
>
> What would be the meaning/role of a resource that refers to
> all the version
> history and all the version-controlled resources?

I didn't mean to imply that there would be a kind of resource that
refers to all the version history and the associated VCR.  I think there
are enough new resources already :)

What I'd like is a straightforward statement (in the spec, not just in
mail!) that the VCR can have all sorts of properties, including custom
(dead) properties, that can be considered to apply to document as a
whole, including all its versions.  I've given examples of the need for
such properties.

What that kind of statement requires is a way to PROPPATCH a VCR without
creating a new version.  The spec specifically states in 2.1.2: "A PUT
or PROPPATCH to a version-controlled resource with the DAV:auto-version
property set will automatically check out that resource prior to
executing the PUT or PROPPATCH... a new version is created in the
version history of that resource."  This makes it impossible to have
custom properties on the VCR.

Please resolve this.  Placing custom properties on the VHR is
unacceptable, because a VHR doesn't appear in regular collections the
way a VCR does.  You would have to make one request to collection
'/lisa/' to find all the VCRs and all the URLs to the VHRs, then make
'n' requests to all the VHR URLs to find the values of the custom
property.

Lisa



