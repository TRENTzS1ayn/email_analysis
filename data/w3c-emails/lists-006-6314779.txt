docno="lists-006-6314779"
received="Sun Feb  4 21:34:26 2001"
isoreceived="20010205023426"
sent="Sun, 4 Feb 2001 18:35:39 -0800"
isosent="20010205023539"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Labels and Status"
id="20010204183539.E26044@lyra.org"
charset="us-ascii"
inreplyto="200102050143.UAA19927&#64;tantalum.atria.com"
expires="-1"

To:ietf-dav-versioning@w3.org


I think the point here is to have mutable properties (e.g. "status") on
immutable resources (e.g. version resources). That doesn't make sense to me
at all.

IMO, the mutable information is kept elsewhere and simply refers to the
immutable items.

I'd agree with Geoff: let's limit the scope and complete the DeltaV spec.

Cheers,
-g

On Sun, Feb 04, 2001 at 08:43:08PM -0500, Geoffrey M. Clemm wrote:
> 
> I agree with the points Lisa makes below, but I believe this
> kind of work should be done as a general WebDAV property
> metadata effort (there are lots of interesting property
> metadata information that you'd like to define and discover),
> and not something embedded in the versioning protocol
> (I'd say we've done more than our share by tackling the
> "report" problem :-).
> 
> Cheers,
> Geoff
> 
>    From: "Lisa Dusseault" <lisa@xythos.com>
> 
>    I'd second what James says, only make it even more general.
> 
>    Yes, many versioning systems have "status" properties on versions,
>    and the "status" property should be mutable, i.e. should be
>    writable = without creating a new version.  (Immutable properties
>    never change on old versions; changing an immutable property
>    creates a new version).
> 
>    However, there are also publishing or workflow processes which require
>    their own mutable properties.  For example, "publishing-status" or
>    "editing-status" or "approval-status" or "invoice-status"...  We can't
>    be expected to predict all these, however it's a common need, and
>    defining only 'status' would not solve the general problem.
> 
>    Thus, versioning needs a general way to allow creation of custom
>    properties which are mutable, AND custom properties which are =
>    immutable.  The server would of course reject requests for mutable
>    properties if it does not support mutability, but we need a
>    standard way for clients to ask for this.

-- 
Greg Stein, http://www.lyra.org/



