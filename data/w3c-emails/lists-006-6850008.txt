docno="lists-006-6850008"
received="Tue Feb  6 11:16:16 2001"
isoreceived="20010206161616"
sent="Tue, 6 Feb 2001 08:14:54 -0800"
isosent="20010206161454"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: Labels and Status"
id="CNEEJCPIOLHKIOFNFJDPMECJCDAA.lisa@xythos.com"
charset="US-ASCII"
inreplyto="3A7F4FC5.AC1178F5&#64;allerton.de"
expires="-1"

To:<jjh@ira.uka.de>
Cc:"ietf-dav-versioning"<ietf-dav-versioning@w3.org>


> Mutable properties are application defined properties on a
> version resource
> or version controlled resource with the following characteristics:
>
>    1. they can be changes at any time by a WebDAV client; and
>
>    2. they are cleared on a target version resource when that
> resource is checked out.

Can you explain this?  By "target version resource", do you mean when a
new version is created with checkout, that mutable properties are
cleared?  That does make sense.

> This is certainly better than nothing, but three problems remain:
>
>   1. how can one trace who changed this property last;
We don't trace who makes changes to regular properties in WebDAV.  I
would call this out of scope.  A server can always do event logging
according to its own design, without interfering with WebDAV.

>   2. how can access to such a property be controlled; and
I can tell you, this group will definitely not address property access.
The ACL discussion may address property access control at some point.

>   3. how can standard mutable properties be defined later?
Lots of ways...
 - PROPPATCH could be extended to have an extra XML element or attribute
to declare a new property mutable (PROPFIND may be extended to have the
same)
 - A new method like CREATE-MUTABLE could create new mutable properties,
which thereafter are set/read with PROPPATCH/PROPFIND.  In order to find
out which properties are mutable, one could define a REPORT
"mutable-properties".  This has the advantage of not requirng changes to
PROPPATCH/PROPFIND.
 - Two new methods mirroring PROPPATCH/PROPFIND:  PATCH-MUTABLE and
FIND-MUTABLE.  Presumably they'd duplicate the syntax, but only work
with mutable properties on versions.  (kind of icky, if you ask me, but
it's an idea).

lisa



