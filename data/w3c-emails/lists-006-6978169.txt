docno="lists-006-6978169"
received="Wed Feb  7 12:29:05 2001"
isoreceived="20010207172905"
sent="Wed, 7 Feb 2001 09:27:23 -0800"
isosent="20010207172723"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: DeltaV Lack of global properties"
id="CNEEJCPIOLHKIOFNFJDPKEEBCDAA.lisa@xythos.com"
charset="us-ascii"
inreplyto="802569EC.003088B0.00&#64;d06mta07.portsmouth.uk.ibm.com"
expires="-1"

To:<Tim_Ellison@uk.ibm.com>,<ietf-dav-versioning@w3.org>


> Just to be pedantic for a minute, if the client was totally versioning
> unaware then they would be unaware that versions of the
> resource exist, or
> the need for "global" properties.  A versioning unaware
> client would set a
> dead property on an autoversioned version-controlled
> resource, and that
> would be carried forward through subsequent versions of the resource.

But they would be aware of the need for a property like
"Editor-in-Chief", they may need to get or set the value of this
property.

> Ok, so if a client was, say, versioning aware (i.e., knows
> versions exist)
> but versioning challenged<g> (i.e., cannot make versioning
> calls) then they
> could query the DAV:version-history property of the VCR
> (using PROPFIND) to
> get to the version history resource and set properties there (using
> PROPPATCH).  It would not require any versioning specific methods to
> implement the "global" properties.

But they would also potentially know about the property
"Editor-in-Chief".  And the versioning-aware client can look at past
versions, where the "Editor-in-Chief" property really should not have a
different value.

So how are the two clients supposed to use the same property
interoperably?

Lisa



