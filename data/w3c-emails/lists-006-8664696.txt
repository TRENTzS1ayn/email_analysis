docno="lists-006-8664696"
received="Fri Feb 16 20:10:56 2001"
isoreceived="20010217011056"
sent="Fri, 16 Feb 2001 17:09:47 -0800"
isosent="20010217010947"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="Status-reporting &amp; refusing depth header"
id="CNEEJCPIOLHKIOFNFJDPKEMOCDAA.lisa@xythos.com"
charset="iso-8859-1"
expires="-1"

To:"Ietf-Dav-Versioning@W3. Org"<ietf-dav-versioning@w3.org>


I've started looking at draft 13...

Section 2.1 says: "If a Depth request header is included, the request
MUST be applied separately to the collection itself and to all members
of the collection that satisfy the Depth value.  "

The REPORT method needs a way for the server to say that it DOESN't
support the Depth: header on that particular report.  Reports can be
expensive to calculate, and the server needs a way to refuse that
expense at will.  At least, by refusing to support depth on certain
reports, the server has a better option than refusing to support the
report altogether.

Please take a look at the status-reporting draft, section 6.8, for a way
to deal with this that's quite general-purpose ...
http://www.ietf.org/internet-drafts/draft-ietf-webdav-status-00.txt

This is clearly my opportunity to introduce the status-reporting draft
on this list. It's a version 00 draft, but the design has already gone
through some review on the dav list, a status list and at the last WG
meeting.  It's completely compatible with DeltaV, because it can use the
DeltaV XML elements as "detail-code" elements.  DeltaV leaves this open
through the clause "unless otherwise negotiated", and since the
status-reporting draft includes a way for the client to ask for advanced
status-reporting using a special header, there's a way to negotiate.

However, it's been pointed out that the extra header could be cut off if
the client could be assumed to support advanced status-reporting simply
by nature of the kind of request being made.  E.g. if the deltaV draft
required clients to support advanced status-reporting, then whenever the
server has an error to report on one of the deltaV methods
(VERSION-CONTROL, REPORT, etc) it could return the advanced
status-reporting body.

For deltaV clients that already have to parse XML response bodies when
error conditions are reported, there is extremely little extra work
required:  just look in the "response-detail" element, then in the
"status-detail" element, then in the "detail-code" element to find the
actual error code element.  The rest can be ignored.

lisa



