docno="lists-006-9350948"
received="Tue Mar 27 18:04:00 2001"
isoreceived="20010327230400"
sent="Tue, 27 Mar 2001 18:04:35 -0500"
isosent="20010327230435"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Proposed Simplifications to the DeltaV protocol"
id="3906C56A7BD1F54593344C05BD1374B1018E2308@SUS-MA1IT01"
inreplyto="Proposed Simplifications to the DeltaV protocol"
expires="-1"


To:ietf-dav-versioning@w3.org

No, we would not propose that the "feature sets" have defined
"compliance level" tags.  The intent is to allow 
new "feature sets" to be created,
without requiring a new "tag" to be defined for compliance checking.

In particular, suppose you define a new feature set that is
some old feature set (e.g. "a", "b", "c") plus features "x" and "y".
Instead of having to add another tag, you can just publish that
"a", "b", "c", "x", "y" is now a "package", and then a server
that supports that package would return:
"a", "b", "c", "x", "y".

The old clients will check if "a", "b", "c" are all in
the supported feature set of a server,
and if so, they will talk to it.

The new clients will check if "a", "b", "c", "x", "y" are all in
the feature set.

And for non-standard clients that just care about "do you support
feature x", they will be able to find that out as well.

Cheers,
Geoff


-----Original Message-----
From: Steve K Speicher [mailto:sspeiche@us.ibm.com]
Sent: Tuesday, March 27, 2001 2:51 PM
To: ietf-dav-versioning@w3.org
Subject: Re: Proposed Simplifications to the DeltaV protocol




>The fifth (and final) proposed simplification was to define a set of
>four feature "packages", and to state that a versioning server SHOULD
>support at least one of those packages.  This then allows a versioning
>client to look for one of the four defined feature packages, rather
>than worrying about all possible combinations of features.  Note: a
>server still exposes its functionality as a set of features.

Are these "packages" going to be represented as "DAV Compliance Classes"?
For example, classes 3, 4, 5 & 6.

Just curious.  Thanks,
Steve



