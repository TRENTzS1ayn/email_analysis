docno="lists-007-0474748"
received="Mon Apr 22 09:37:12 2002"
isoreceived="20020422133712"
sent="Mon, 22 Apr 2002 14:27:45 +0100"
isosent="20020422132745"
name="Tim Ellison"
email="Tim_Ellison@uk.ibm.com"
subject="RE: Label header vs PROPFIND depth 1"
id="OFDDBF047E.55238D97-ON80256BA3.0049971B@portsmouth.uk.ibm.com"
charset="us-ascii"
inreplyto="Label header vs PROPFIND depth 1"
expires="-1"

To:"Deltav WG"<ietf-dav-versioning@w3.org>



"Julian Reschke" <julian.reschke@greenbytes.de>

> > From: ietf-dav-versioning-request@w3.org
> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Tim Ellison
> > Sent: Monday, April 22, 2002 3:10 PM
> > To: Deltav WG
> > Subject: RE: Label header vs PROPFIND depth 1
> >
> > "Julian Reschke" <julian.reschke@greenbytes.de>
> >
> > > I think it breaks a very basic assumption about PROPFIND's depth
> > handling:
> > > for a given collection member, you will get the same response
> > element for
> > > depth:1 on it's parent and depth:0 for a PROPFIND on itself.
> >
> > Wait, maybe I didn't make it clear.  The label: header applies to the
>
> Seems so.
>
> > version-controlled resource identified by the request-URL; and then the
> > depth operation proceeds on the labelled *version*.  The only version
with
> > members is a versioned collection, whose members are version histories.
>
> This seems to apply to the case where I have version controlled resources
in
> a version controlled collection. But what happens if the collection
itself
> isn't version-controlled?

As written in section 8.3, the label: header only applies if the
request-URI identifies a version-controlled resource.

> > > What's the motivation for this change? Currently I can't think of a
> > reason,
> > > and it certainly makes it harder to come up for consistent variant
> > handling
> > > in WebDAV.
> >
> > It is a short-hand for referencing the version associated with a
> > version-controlled resource.
>
> Misunderstanding :-)
>
> I wasn't asking for the motivation for this *feature*, I was asking for
the
> motivation for changing a basic feature about how PROPFIND works on
> collections...

...and do we agree that it doesn't?  It just changes the resource that the
method is applied to.

Regards,
Tim



