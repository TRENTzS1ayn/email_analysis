docno="lists-007-0485375"
received="Mon Apr 22 09:45:00 2002"
isoreceived="20020422134500"
sent="Mon, 22 Apr 2002 15:44:33 +0200"
isosent="20020422134433"
name="Julian Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: Label header vs PROPFIND depth 1"
id="JIEGINCHMLABHJBIGKBCIEDGEHAA.julian.reschke@greenbytes.de"
charset="us-ascii"
inreplyto="OFDDBF047E.55238D97-ON80256BA3.0049971B&#64;portsmouth.uk.ibm.com"
expires="-1"

To:"Tim Ellison"<Tim_Ellison@uk.ibm.com>,"Deltav WG"<ietf-dav-versioning@w3.org>


> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Tim Ellison
> Sent: Monday, April 22, 2002 3:28 PM
> To: Deltav WG
> Subject: RE: Label header vs PROPFIND depth 1
>
> ...
>
> > This seems to apply to the case where I have version controlled
> resources
> in
> > a version controlled collection. But what happens if the collection
> itself
> > isn't version-controlled?
>
> As written in section 8.3, the label: header only applies if the
> request-URI identifies a version-controlled resource.

Well, exactly that *is* my problem.

I have a non-version-controlled collection with a versioned member resource.
A PROPFIND with label header and depth:1 will (or may) return a different
response element for the versioned resource than a PROPFIND with depth:0 on
the member resource itself.

So I'd like to clarify/correct RFC3253 that the Label header is handled just
like any other HTTP header which causes variant handling -- it applies to
the collection members as well.

Otherwise variant handling would differ between -- for instance -- "Label"
and "Accept-Language" -- and that doesn't make any sense at all.

> > > It is a short-hand for referencing the version associated with a
> > > version-controlled resource.
> >
> > Misunderstanding :-)
> >
> > I wasn't asking for the motivation for this *feature*, I was asking for
> the
> > motivation for changing a basic feature about how PROPFIND works on
> > collections...
>
> ...and do we agree that it doesn't?  It just changes the resource that the
> method is applied to.

Yes. But if the collection isn't versioned (does not vary on the Label
header), the Label header just should be *ignored* (for the collection), and
then *apply* to the indivual versioned members of the collection.



