docno="lists-007-0758711"
received="Tue Apr 23 19:28:21 2002"
isoreceived="20020423232821"
sent="Wed, 24 Apr 2002 01:28:49 +0200"
isosent="20020423232849"
name="Edgar Schwarz"
email="edgar@edgarschwarz.de"
subject="Configuration/baseline reports"
id="3CC5EE31.664C22B5@edgarschwarz.de"
charset="us-ascii"
expires="-1"


To: Deltav WG<ietf-dav-versioning@w3.org>

Hi Geoff (or any other XML experts),

I have a client and a server on a single machine which do the reporting
I describe
below. 
But if I want to distribute them to different machines they must speak
WebDAV-XML
with each other. That's a language I'm not fluent yet :-).
So perhaps somebody could give XML lessons to my client and server ?
I would like to get a XML example for that before I implement something
wrong.
BTW, wouldn't it be nice to add a scenario section to our faq-o-matic
FAQ ?
I would add the examples there if I get them.

Geoff wrote:
> Edgar schrieb:
>    Then I'm looking for some reports.  First I would like to have
>    information on a baseline. How can I get the list of versions and
>    subbaselines ?
> 
> To get the list of versions, do a PROPFIND Depth:Infinity on the
> DAV:baseline-collection of the baseline.  To get the subbaselines, get
> the DAV:subbaseline-set property of the baseline.
My starting point would be the baseline-controlled collection.
At first I guess I must find e.g
 bcc.version-controlled-configuration.checked-in.baseline-collection
Then I suppose I must do a PROPFIND on the baseline-collection (Forget
subbaselines
for the moment. I think I can figure that out by myself if I know the
other stuff)
As a result the client would like to be able to extract the following
information:
1{<path relative to bcc> <version url>} 
I hope I don't need too many requests for that.

Geoff wrote:
> Edgar schrieb:
>    Second I want to have information on a configuration. This means
>    state (checked-out, checked-in) and a list of VCRs, VCCs and their
>    states.
> 
> To get the DAV:checked-in and DAV:checked-out properties of the
> configuration, just PROPFIND the DAV:version-controlled-configuration
> of any member of the configuration for those two properties.
> 
> What list of VCR's did you have in mind?  If it is all the VCR's that
> are the member of the configuration, just PROPFIND Depth:Infinity
> the root collection of the configuration for DAV:checked-in and
> DAV:checked-out (any resource that has these properties is a VCR
> that is a member of the configuration).
Could you give me an example beginning with a root collection perhaps
with
a checked-out version-controlled-configuration with two VCRs. One
checked-in,
one checked-out. And again my client would like to be able to learn
something: 
{<path relative to bcc> <version url> (checked-out | checked-in)}

And then I want my client to do a 'compare-baseline-with-configuration'
to tell
me what I already changed in my workspace in comparison to a baseline.
But that's
my problem to solve. Even if it would be nice to delegate this to a
'compare-baseline-with-configuration-report' :-)

> By VCC, did you mean VCCn or VCCl?
By VCC I meant VCCn. I don't care about VCCls at the moment:-) I hope I
will
remember next time to avoid writing VCC.


Then a remark to the label header discussion. Once upon at time I
thought labels
(Kowing RCS, ClearCase, ...) were a simple concept.
But in an HTTP header together with Depth they seem to make problems. By
this I mean
that they loose the property to be easily understood.
So perhaps it would be better to drop the Label header for PROPFIND and
require
an UPDATE(label) + PROPFIND instead ?

I think we must be careful to introduce functionality that's difficult
to grok.
So perhaps it's better to drop a clever shortcut when it's not obvious
what it
will do. But perhaps it's just a matter of learning the DeltaV mindset.

Cheers, Edgar



