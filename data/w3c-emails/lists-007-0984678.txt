docno="lists-007-0984678"
received="Fri Apr 26 11:10:44 2002"
isoreceived="20020426151044"
sent="Fri, 26 Apr 2002 17:10:06 +0200"
isosent="20020426151006"
name="Julian Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: Label header vs PROPFIND depth 1"
id="JIEGINCHMLABHJBIGKBCCENIEHAA.julian.reschke@greenbytes.de"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B103F8B15C&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>,"'Deltav WG'"<ietf-dav-versioning@w3.org>


Geoff,

- I'd like to see the label *header* deprecated
- I'm happy with the LABEL method and the label-name-set property
- I think that PROPFIND/label should be replaced by a specific REPORT
- I'm unsure about other methods that are currently affected by the
header -- what were the requirements...?
- Servers that decide to implement LABEL and DAV:label-name-set, but no not
support the label header should *not* report the LABEL feature in OPTIONS.

Julian

> -----Original Message-----
> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff
> Sent: Friday, April 26, 2002 4:54 PM
> To: 'Deltav WG'
> Subject: RE: Label header vs PROPFIND depth 1
>
>
> I am not surprised the Label header is proving to be problematic.
> The last time I tried to get rid of it (obviously unsuccessfully)
> was about a year ago.
>
> My first choice would be to deprecate the Label header altogether, and
> to instead define a DAV:labeled-version report on a VCR, whose
> parameters were a label and a list of property names.  The result of
> this report would be the values of the specified properties on the
> version selected by the specified label from the VCR identified by the
> request-URL.
>
> An alternative approach would be to deprecate the use of the Label
> header with a non-zero Depth request (either because of an explicit
> non-zero Depth header, or because a request is non-zero Depth by
> default).
>
> I'd be interested in responses on the following three questions:
>
> (1) Do these approaches address the issues raised?
> (2) Is there another approach that could be considered?
> (3) Which approach do you prefer?
>
> If we can get consensus on an approach, I'll add it to the RFC 3253
> Errata document.
>
> Cheers,
> Geoff
>
>



