docno="lists-007-10458356"
received="Fri Jan 29 13:42:20 1999"
isoreceived="19990129184220"
sent="Fri, 29 Jan 1999 10:39:29 -0800 (PST)"
isosent="19990129183929"
name="Chris Newman"
email="Chris.Newman@innosoft.com"
subject="Re: Coding method for group communication protocol"
id="Pine.SOL.3.95.990129095618.25085A-100000@elwood.innosoft.com"
charset="US-ASCII"
inreplyto="v04020a0bb2d6cf88cc80&#64;[130.237.150.138]"
expires="-1"

To: Jacob Palme<jpalme@dsv.su.se>
Cc:discuss@apps.ietf.org, SeniorOnline technical mailing list<sol-tech@ambra.omega.it>, SELECT EU project mailing list<select@dsv.su.se>


I'm very opinionated on the subject, so I'll gladly comment:

On Fri, 29 Jan 1999, Jacob Palme wrote:
> Coding method which we are considering are:
> 
> - XML (sent via HTTP). Advantage: Powerful, general-purpose,
>   a current fad.

If you're working on structured documents, I would recommend using XML and
DOM.  While each of these two pieces is mediocre by itself, I suspect the
combination of the two in a standards arena will be very valuable.

For general metadata, XML is just a mediocre syntax (it'd be good if there
weren't 6 ways to encode a character and junk like Processing Instructions
and CDATA were cut).  If simple A-V pairs will suffice, I'd go with RFC
822 style headers since they're more readable, but if nested structures
are needed XML syntax isn't a bad choice.

> - multipart/formdata (RFC 2388, RFC 1867). Advantage:
>   MIME-based, easy to produce test data since an ordinary
>   HTML form can be used.

It tends to be hard to treat multipart MIME objects as single entities
with current infrastructure.  While I consider this a flaw in the current
deployed infrastructure it would influence my choice.  When passing around
a collection of structured data, it's important to be able to treat that
collection as a single independent entity at times.

> - A variant of the DSN format (RFC 1894)

This is a simplified version of RFC 822 style headers.  A good choice if
A-V pairs is all you need.

> - CORBA

I know almost nothing about it.  My first impression is that it's trendy
junk, but I could be wrong.

> - A variant of LDAP, since some of the operations
>   we will define will be directory-type operations

I'm not fond of ASN.1 binary encodings -- they're at least as hard as text
(in programmer time) to marshal and unmarshal correctly, and require
additional programmer time to build a debugging and testing
infrastructure.

If your data is very directory-oriented and likely to gateway to LDAP
operations at times, I'd look at LDIF and/or text/directory.  Most
deployed LDAP servers have LDIF support for import/export. 

- Chris



