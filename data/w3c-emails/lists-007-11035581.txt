docno="lists-007-11035581"
received="Wed Mar 10 18:09:19 1999"
isoreceived="19990310230919"
sent="Wed, 10 Mar 1999 17:57:32 -0500"
isosent="19990310225732"
name="Keith Moore"
email="moore@cs.utk.edu"
subject="Re: need a reviewer (or three) for draft-cai-ssdp-v1-00.txt"
id="199903102257.OAA14058@astro.cs.utk.edu"
inreplyto="3FF8121C9B6DD111812100805F31FC0D08792FF7&#64;RED-MSG-59"
expires="-1"


To: Yaron Goland<yarong@microsoft.com>
cc:"'Keith Moore'"<moore@cs.utk.edu>,web@apps.ietf.org,discuss@apps.ietf.org

> My own experience shows that HTTP works like a champ over wireless. Its
> large granularity commands work extremely well over high latency links.

TCP doesn't work well over wireless links that have high packet loss rates.
Arguably the right way to solve this is with link-layer transmit or FEC, 
but you don't want to do that for some kinds of traffic.  And now that
TOS has been deprecated it's not clear (at least to me) how an application
can label its packets so that the link layer won't do this.

Whether you think HTTP works well over high latency links probably depends
on how you use it - especially the granularity of interaction that your
application needs.  For many applications the TCP connection setup already
causes a significant degree of latency.

> What issues do you have with HTTP over unicast and multicast UDP?

Just the obvious ones.

Keith



