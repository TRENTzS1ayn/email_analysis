docno="lists-007-1228488"
received="Wed Jun  5 06:20:59 2002"
isoreceived="20020605102059"
sent="Wed, 5 Jun 2002 11:20:38 +0100"
isosent="20020605102038"
name="Tim Ellison"
email="Tim_Ellison@uk.ibm.com"
subject="Re: question about Version-Control"
id="OF85A683A3.C002DC40-ON80256BCF.00381AE4@portsmouth.uk.ibm.com"
charset="us-ascii"
inreplyto="question about Version-Control"
expires="-1"

To:"IETF DAV"<ietf-dav-versioning@w3.org>




"Elodie Tasia" <e.tasia@ever-team.com> wrote:

> > A version is created as a copy because the version-controlled resource
can
> > be checked out and modified.  The version remains as an immutable copy
of
> > the inital state of the VERSION-CONTROL'led resource.
>
> Hmm, I compared the version-controlled resource to a sort of 'root', and
I
> thought it was immutable... I made a mistake.

A version-controlled resource is a resource with defined DeltaV behavior,
notably CHECKOUT to make it mutable and CHECKIN to capture it's state as a
version resource and make it immutable.  RFC3253 has lots to say about
version-controlled resources.

> But why is it possible to modify it, if I can create descendants with the
> first version of the history ?

You can either modify the checked-out version-controlled resource, or a
working resource of a version to create a descendant depending upon whether
the server or client is maintaining the 'workspace' or work in progress.
See section 2.1 for an overview of the differences.

Regards,
Tim



