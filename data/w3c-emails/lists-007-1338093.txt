docno="lists-007-1338093"
received="Sat Jun 15 13:00:51 2002"
isoreceived="20020615170051"
sent="Sat, 15 Jun 2002 19:00:47 +0200"
isosent="20020615170047"
name="Julian Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: LABEL request only allows one set, one add..."
id="JIEGINCHMLABHJBIGKBCEEFJEMAA.julian.reschke@greenbytes.de"
charset="iso-8859-1"
inreplyto="00ac01c21476$4e0f09a0$f8cb90c6&#64;moose"
expires="-1"

To:"Lisa Dusseault"<ldusseault@xythos.com>,"'Clemm, Geoff'"<gclemm@rational.com>,"'DeltaV \(E-mail\)'"<ietf-dav-versioning@w3.org>



Lisa,

I think the usage of "ANY" is intentional (for RFC3253). The wording just
states what DAV's XML enxtensibilty rules require -- the DAV:label element
may contain a sequence of arbitrary elements, of which there may be only one
DAV:add, DAV:set or DAV:remove element.

> -----Original Message-----
> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Lisa Dusseault
> Sent: Saturday, June 15, 2002 4:10 PM
> To: 'Clemm, Geoff'; 'DeltaV (E-mail)'
> Subject: RE: LABEL request only allows one set, one add...
>
>
>
> That's a great point, but it makes me realize I may be reading the
> definition wrong.  I had assumed it to be possible to add one
> label, remove
> a second and set a third, all in the same request. This
> assumption was based
> on the following language:
>
>      The request body MUST be a DAV:label element.
>
>       <!ELEMENT label ANY>
>       ANY value: A sequence of elements with at most one DAV:add,
>       DAV:set, or DAV:remove element.
>
> Perhaps this is supposed to mean that only one child element can be inside
> label, but "a sequence" does imply more than one.  If you mean to restrict
> it to one only, then the definition should be:
>
> <!ELEMENT label (add | set | remove)>
>
> Lisa
>
> > -----Original Message-----
> > From: ietf-dav-versioning-request@w3.org
> > [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff
> > Sent: Friday, June 14, 2002 8:24 PM
> > To: DeltaV (E-mail)
> > Subject: RE: LABEL request only allows one set, one add...
> >
> >
> >
> > I wouldn't say it was an oversight, but rather a use
> > case that wasn't sufficiently common to warrant making
> > the protocol more complicated to support it.
> > In particular, you would have to define the semantics
> > of what would happen if one part of the request would fail
> > and the other would succeed, and how to marshall that
> > error information.
> >
> > Cheers,
> > Geoff
> >
> > -----Original Message-----
> > From: Lisa Dusseault [mailto:ldusseault@xythos.com]
> > Sent: Friday, June 14, 2002 9:31 PM
> > To: DeltaV (E-mail)
> > Subject: LABEL request only allows one set, one add...
> >
> >
> >
> >
> > Is it an oversight that the LABEL request only allows one
> > set, one add, or
> > one remove at a time (or one of each, but not two of any?)
> >
> > For example, say I wanted to add <label-name>foo</label-name> and
> > <label-name>bar</label-name> to a version in one request.
> > The definition of
> > the LABEL request body is:
> >
> >   <!ELEMENT label ANY>
> >   ANY value: A sequence of elements with at most one
> >   DAV:add, DAV:set, or DAV:remove element.
> >
> >   <!ELEMENT add (label-name)>
> >   <!ELEMENT set (label-name)>
> >   <!ELEMENT remove (label-name)>
> >
> >   <!ELEMENT label-name (#PCDATA)> PCDATA value: string
> >
> > Since <add> can only contain one label-name, only one label
> > can be added per
> > each request.  I would have to issue two LABEL requests to
> > add both foo and
> > bar labels.
> >
> > Lisa
> >
>
>



