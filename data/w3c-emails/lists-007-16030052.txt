docno="lists-007-16030052"
received="Fri May  4 03:14:07 2001"
isoreceived="20010504071407"
sent="Fri, 4 May 2001 08:42:18 +0200"
isosent="20010504064218"
name="Jacob Palme"
email="jpalme@dsv.su.se"
subject="Re: Two new drafts: Multipart/Interleaved and  Application /BatchBeep"
id="p0501040db717fcbedc20@[130.237.161.46]"
charset="us-ascii"
inreplyto="200105031311.JAA18053&#64;astro.cs.utk.edu"
expires="-1"


To: IETF Applications Area general discussion list<discuss@apps.ietf.org>

At 09.11 -0400 01-05-03, Keith Moore wrote:
>  > In an e-mail name like:
>>
>>      John Smith <johns@foo.bar.net>
>>
>>  "John Smith", "johns", "foo", "bar" and "net" are distinct
>>  logical entitites which need to be separated in order to
>>  use the information to transport for example a personal
>>  reply to the sender of the replied-to message.
>
>for most purposes these entities do not need to be separated any more
>than the individual letters.  and it's arguably better if certain
>fields of an address aren't identified separately to every thing that
>handles an email message - for instance, only the primary mail exchanger
>for the domain of an address should be treating the local-part of that
>address separately.
>
>>  The characters "<", "@", "." and ">" are syntactic separators,
>>  put there in order to allow software to do this separation.
>
>as well as to be friendly to humans.
>putting XML inside an email address would be a disaster.

I agree. My example was not intended to say that XML would
be better in this case. It was just meant as a basis for
the comparison of XML and RFC822.

At 09.08 -0700 01-05-03, Dave Crocker wrote:
>In fact, you ignored the end of my note, citing a real-world 
>specification that is substantially different from the XML example 
>that you chose.  Although it takes more characters than a pure 
>RFC822 address, it is not as onerous as yours.

I am not saying that the examples in the end of your message are
wrong. Combining different encoding methods within data sent
is common and sometimes useful, even if it is not neat.

Since XML does not have any format for transmitting binary
date, it forces users of XML to use some other encoding format
than XML if they need to transmit binary data. That is one
of the main drawbacks of XML, compared to ASN.1-BER.

One main advantage with RFC822 e-mail addresses is that they
are short (compared to, for example, X.400 addresses). That
is probably one of several reasons which Internet mail has
succeeded and X.400 has not. The shortness is of value to
humans, who want to copy it from, for example, a business
card. From a user point of view, the choice of "@" as a
separator was maybe a mistake, a common beginners complaint
is "where do I find '@' on my keyboard".
-- 
Jacob Palme <jpalme@dsv.su.se> (Stockholm University and KTH)
for more info see URL: http://www.dsv.su.se/jpalme/



