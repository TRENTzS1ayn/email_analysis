docno="lists-007-16308887"
received="Mon May  7 15:50:33 2001"
isoreceived="20010507195033"
sent="Mon, 07 May 2001 15:49:48 -0400"
isosent="20010507194948"
name="Keith Moore"
email="moore@cs.utk.edu"
subject="Re: multipart/alternative extension"
id="200105071949.PAA23498@astro.cs.utk.edu"
inreplyto="a05100303b71ca008be26&#64;[216.43.25.67]"
expires="-1"


To: Pete Resnick<presnick@qualcomm.com>
cc: Keith Moore<moore@cs.utk.edu>,pkyone@netreon.com, Jacob Palme<jpalme@dsv.su.se>, IETF Applications Area general discussion list<discuss@apps.ietf.org>

> >With multipart/choices there is still potential for information loss,
> >because some clients fail to follow the specs regarding treatment
> >of multipart/unknown.
> 
> I've never known any implementation that actually throws away pieces
> of a multipart/unknown. But even if there were such a beast, one or
> two occurrences of actively broken software would not prevent any
> server from trying to send multipart/unknown when the vast majority
> of clients out there deal perfectly reasonably with it as
> multipart/mixed.

perhaps.  but it seems that we're starting to argue about which kind 
of brokenness is more widespread - brokenness on handling multipart/
alternative vs. broken on handling multipart/foo.  historically
these kinds of arguments have been difficult for IETF to evaluate.

Keith



