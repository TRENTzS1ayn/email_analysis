docno="lists-007-2140799"
received="Tue Jan 15 08:47:26 2002"
isoreceived="20020115134726"
sent="Tue, 15 Jan 2002 08:46:22 -0500"
isosent="20020115134622"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Adding a new file to an activity"
id="3906C56A7BD1F54593344C05BD1374B1056E19E1@SUS-MA1IT01"
charset="iso-8859-1"
inreplyto="Adding a new file to an activity"
expires="-1"


To:"Ietf-Dav-Versioning (E-mail)"<ietf-dav-versioning@w3.org>

   From: Kirmse, Daniel [mailto:daniel.kirmse@sap.com]

   suppose I have a repository landscape with a workspace under
   baseline-control. The workspace contains my VCR's. Checkout is done
   with DAV:apply-to-version and DAV:activity-set (href or new). So
   Work in process is represented by working-resources collected in
   activities.

   Well what if a client wants to add a file to the repository using a
   given activity (or a newly created one). The file should be placed
   under version control automatically. Do it have to directly add the
   file/resource to the workspace where all the VCR's are stored?

Yes.

   Or is there a way to have a working resource connected to the
   activity and creating the VCR of that file at checkin?

To keep that resource "hidden", your server would need to support
either multiple workspaces or version-controlled collections.
With multiple workspaces, you could create the new resource in
a second workspace, and it would be hidden until you MERGE'd
into the first workspace.  With version-controlled collections,
you could checkout the collection that is to contain the new
resource, add the resource to the working collection, and the
new resource will only be visible when you check in that working
collection. 

   May I perform a checkout to a not existing VCR (like locking a not
   existing resource in WebDAV to reserve the name) with
   apply-to-version and activoity-set to get an working-resource in my
   activity?

This is not currently supported (CHECKOUT can only be applied
to an existing checked-in resource).  There was no push to 
provide this kind of behavior because you can get the same effect
through working collections.  Also, the problems encountered with
the whole "lock null resource" concept would probably cause us
to shy away from something like this (this is kind of like a
"versioning-null resource), unless there were no alternative.

   What happens when I checkin this (creation of VCR,
   version-history etc.)?

If it were legal, creating the VCR and version history at checkin
time is probably what would happen.

   What happens when I want to revert this
   (uncheckout? is this defined for working-resources to - I suppose
   it is)

In general, if you want to cancel a checkout that resulted in a
working resource, just delete the working resource. 

Cheers,
Geoff



