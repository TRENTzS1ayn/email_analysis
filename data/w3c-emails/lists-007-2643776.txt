docno="lists-007-2643776"
received="Thu Jan 24 16:50:23 2002"
isoreceived="20020124215023"
sent="Thu, 24 Jan 2002 22:49:29 +0100"
isosent="20020124214929"
name="Julian Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: LABEL comparison"
id="JIEGINCHMLABHJBIGKBCEEAKDOAA.julian.reschke@greenbytes.de"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B103F8AEFA&#64;SUS-MA1IT01"
expires="-1"

To:<gclemm@rational.com>,<ietf-dav-versioning@w3.org>


> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of
> gclemm@rational.com
> Sent: Thursday, January 24, 2002 4:57 PM
> To: ietf-dav-versioning@w3.org
> Subject: RE: LABEL comparison
>
>
> This is one of the reasons that baselines should be used instead of
> labels, whenever possible (baselines are identified by URL's, not text
> strings, so they have none of these problems).
>
> As I recall, the "octet-by-octet" phrasing was written with the
> label header in mind, but I agree that this phrasing doesn't work
> so well with XML.  Perhaps some of the folks that care about labels
> could comment here?

I just re-read the lable header thread from almost one year ago.

While I agree that language information isn't relevant, I have serious
concerns about how it's currently described in the spec.

1) The matching should not refer to octets. This doesn't make sense if the
label has been set using XML marshalling.

2) I'd really like to see a working example of of a label containing
non-ASCII characters being passed through an HTTP header into a server. If
the description in the spec is sufficient, it should be easy to come up with
an example, right?

2b) As an alternative, I'd suggest URL-encoding the label's UTF-8 octet
representation (we know *this* works).

Julian



