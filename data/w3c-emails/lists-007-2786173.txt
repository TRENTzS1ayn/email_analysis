docno="lists-007-2786173"
received="Tue Jan 29 14:20:47 2002"
isoreceived="20020129192047"
sent="Tue, 29 Jan 2002 11:20:53 -0800"
isosent="20020129192053"
name="Roy Seto"
email="Roy.Seto@oracle.com"
subject="RE: Re (2): compare-baseline report with subbaselines"
id="MKEMLEPODEFMABCLLAOCKEKBCBAA.Roy.Seto@oracle.com"
charset="iso-8859-1"
inreplyto="200201282107.QAA24017&#64;tux.w3.org"
expires="-1"

To:<ietf-dav-versioning@w3.org>


I agree with Edgar that separate DAV:added-baseline and
DAV:deleted-baseline elements would make things easier for
clients, since they would not have to retrieve the
DAV:resourcetype for each added or deleted version to apply
special processing for subbaselines.

The same applies for DAV:changed-baseline over DAV:changed-version
if the server does not automatically recurse into changed
subbaselines. I don't have a strong opinion whether this recursion
should be done on client or server.

Roy

-----Original Message-----
From: Edgar@EdgarSchwarz.de

> We could:
> - Have subbaselines appear in DAV:added-version,
DAV:deleted-version,
> and DAV:changed-version elements.  This is reasonable, since a
baseline
> is a special kind of version
I would prefer to have DAV:added-baseline, DAV:deleted-baseline,
and DAV:changed-baseline elements. If not, the baseline aware
client has the
unnecessary work to find out whether it's a resource or a
configuration version.
And the non baseline client could be confused. Getting a
DAV:<x>-baseline element
would be easier to detect.



