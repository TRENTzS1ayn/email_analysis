docno="lists-007-3433792"
received="Thu Mar  7 18:14:06 2002"
isoreceived="20020307231406"
sent="Thu, 7 Mar 2002 18:13:33 -0500 "
isosent="20020307231333"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: locate-by-history report vs. Depth header"
id="3906C56A7BD1F54593344C05BD1374B103F8B027@SUS-MA1IT01"
charset="UTF-8"
inreplyto="locate-by-history report vs. Depth header"
expires="-1"


To:"Ietf-Dav-Versioning@W3. Org"<ietf-dav-versioning@w3.org>

The locate-by-history report logically runs against the entire configuration
rooted at the request-URL.  So in that sense, it is a "depth:infinity"
operation.
But that isn't how REPORT is defined.  REPORT is defined as "being run
separately
against every resource that satisfies the depth parameter".  Depth:1 says to
"run the request against the resource identified by the request-URL,
and then again on each of the internal members of the request-URL."
But that is never what you want, because you only want the REPORT run once
against
the configuration identified by the request-URL.

And that one case where I said that Depth:1 might make sense was just wrong.
You still run Depth:0 (i.e. just run the REPORT once), and the REPORT will
find all VCR's that match that version history in any of the workspaces.

Cheers,
Geoff

-----Original Message-----
From: Julian Reschke [mailto:julian.reschke@greenbytes.de]
Sent: Thursday, March 07, 2002 5:42 PM
To: Clemm, Geoff; Ietf-Dav-Versioning@W3. Org
Subject: RE: locate-by-history report vs. Depth header


> From: ietf-dav-versioning-request@w3.org
> [mailto:ietf-dav-versioning-request@w3.org]On Behalf Of Clemm, Geoff
> Sent: Thursday, March 07, 2002 9:49 PM
> To: Ietf-Dav-Versioning@W3. Org
> Subject: RE: locate-by-history report vs. Depth header
> 
> 
> Actually, the report clearly makes the most sense for depth=0 (perhaps
> that's what you
> meant to type?).

You managed to confuse me :-) It the request URI is the parent collection,
and the scope is the member of this collection, only depth = 1 seems to make
sense. Depth 0's scope would be just the parent collection, correct?



