docno="lists-007-3828457"
received="Tue Mar 26 14:36:08 2002"
isoreceived="20020326193608"
sent="Tue, 26 Mar 2002 20:22:19 +0100"
isosent="20020326192219"
name="B H, Girish"
email="g.b.h@sap.com"
subject="PUT/MKCOL on a Working Collection"
id="67B8CED503F3D511BB9F0008C75DAD6661B9DA@dbwdfx17.wdf.sap-ag.de"
charset="iso-8859-1"
expires="-1"


To:"'ietf-dav-versioning@w3.org'"<ietf-dav-versioning@w3.org>

Hi,
Lets say I have a working collection wcoll.  Now, I need to place a file,
file1,  into this working collection. And to update the content in the next
call. I am assuming that NO auto-version policies are used. The sequence of
operations would typically be:

1.  PUT /wcoll/file1     //created the file here.
2.  PUT /wcoll/file1     //updated the content here.

My doubt is whether a first version (and version history and
version-controlled resources) are created in step (1).  If so, then the
sequence of operations required would be:

1.  PUT /wcoll/file1     //created the file here - and placed it into
version control
2.  CHECKOUT /wcoll/file1 //create a working resource of the file
3.  PUT /wcoll/file1     //updated the content here.

Is this what RFC3253 specifies? If so, can somebody point out to me where in
the spec this is specified.

Section 14.10 of RFC3253 says that at the time of checkin of a working
collection, all non-version-controlled members of the working collection
have to be placed under version control.  If this is understood, then at
step (1) above, the server need not place the file under version control and
can wait until the time of checkin of wcoll1.  So the checkout in step (2)
above would not be required.
Am I getting the specifications correctly here?

If I am getting it right, then if I want to add a new collection coll2 under
wcoll, and a file file1 under coll2, then the sequence of operations would
be:

1.  MKCOL /wcoll/coll2     //created the collection here.
2.  PUT /wcoll/coll2/file1     //created a file under coll1. No checkout of
coll1 is required.

So, when wcoll is checkedin, coll2 and its members are placed under version
control. Is this right?

Girish



