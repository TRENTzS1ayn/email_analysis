docno="lists-007-4230550"
received="Tue Jul  9 12:47:27 2002"
isoreceived="20020709164727"
sent="Tue, 9 Jul 2002 12:46:11 -0400"
isosent="20020709164611"
name="Lisa Dusseault"
email="ldusseault@xythos.com"
subject="RE: error condition for delete of VHR when VCR is in checked-in c ollection"
id="27889B08CAEC7049B68FAD8717BA6017371BA9@ATL1VEXC006.usdom004.tco.tc"
charset="us-ascii"
inreplyto="error condition for delete of VHR when VCR is in checked-in c ollection"
expires="-1"


To:"Julian Reschke"<julian.reschke@greenbytes.de>,"Clemm, Geoff"<gclemm@rational.com>,<ietf-dav-versioning@w3.org>


> > I don't recall hearing of this approach, and don't see how it could
be
> > compatible with the spec, giving the DAV:delete-version-set
> > postcondition.
> 
> OK. It was originally suggested in section 4.2 of
> draft-dusseault-deltav-subset-00 [1], and up until some time ago, it
made
> a
> lot of sense to me.

FYI, I too have decided it is not a super idea to use DELETE of a VHR to
turn off versioning (though it's better than COPY/MOVE/DELETE). I still
believe some straightforward mechanism is needed to turn off versioning
for a resource.

> > COPY/DELETE/MOVE is the only interoperable way of removing something
> > from version control.  If you need a mechanism that doesn't create a
> > new resource, I'd suggest something like allowing a PROPPATCH to
> > remove the DAV:version-history property of the VCR, rather than
trying
> > anything related to VHR deletion.
> 
> Sounds good, and we'll look into this.

No, this is an even worse idea, and has been discussed before. 
1.  The COPY creates a new resource with a new creation date, owner,
etc. This is NOT the same as modifying an existing resource so that it
is no longer version-controlled.  It involves creating a new resource,
which may mean different access control settings inherited from the
parent, etc.
2.  If the server automatically does VERSION-CONTROL, then the client
ends up with TWO version-controlled resources, when it wanted zero. Now
the client has to clean up a mess.

As long as it is possible to turn a non-versioning resource into a
versioned resource with VERSION-CONTROL, it should be possible to do the
reverse operation in a way that doesn't involve the creation of new
resources.

Lisa



