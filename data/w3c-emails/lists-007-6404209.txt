docno="lists-007-6404209"
received="Thu Feb 13 17:14:29 2003"
isoreceived="20030213221429"
sent="Thu, 13 Feb 2003 23:13:58 +0100 (MET)"
isosent="20030213221358"
name="Edgar@EdgarSchwarz.de"
email="Edgar@EdgarSchwarz.de"
subject="un-version-control, unbaseline-control"
id="200302132213.XAA22254@post.webmailer.de"
expires="-1"


To:ietf-dav-versioning@w3.org
Cc:Edgar@EdgarSchwarz.de


"Julian Reschke" <julian.reschke@greenbytes.de> wrote:> 
> Regarding the what-is-the-need-question: it makes a difference whether you
> are building a new system that accurately reflects the deltaV model, or if
> you are busing deltaV to HTTP-marshall requests between systems that exist
> independantly of WebDAV. In the latter case, you really can't choose --
> you'll have to come up with a way to marshall that type of request (or
> you'll have to live with an unhappy customer).
Until today I thought UNVERSION-CONTROL (like UNCHECKOUT) would be nice to
have. Just do a COPY, DELETE, MOVE dance and all is well. Perhaps some information
is lost but who cares :-)
Now I was writing a test scenario to test some baseline stuff.
At first I wanted to have a clean slate which would mean that the baseline I want
to create doesn't exist. There I realized that UNVERSION-CONTROL has a bigger
brother named UNBASELINE-CONTROL.
The collection I want to unbaseline can have other configurations hidden in it.
So are these configurations preserved if I do a deep copy of the collection,
DELETE and MOVE it back ? Also this can be expensive.
If the subordinate configurations are preserved I could accept doing this also
for configurations. If not please read on.
The concept of unversion and unbaseline is easy to understand and at the moment
I think it would be cheap to realize it in my implementation.
Unbaseline also would make sense in some cases. Sometimes you want to restructure
your configurations. E.g. at my current work with Visual Studio .NET we have
a solution and many projects (Configurations and subconfigurations in DeltaV I guess).
Some people now want to repackage the projects because they think there are too many.
So perhaps UNBASELINE-CONTROL (and in it's wake UNVERSION-CONTROL) would be cheap but
clean concepts for big projects.

Cheers, Edgar



-- 
edgar@edgarschwarz.de                  "http://www.edgarschwarz.de"
"http://www.edgar-schwarz.de/forum/oberon"    Running Active Oberon
Make it as simple as possible, but not simpler.     Albert Einstein



