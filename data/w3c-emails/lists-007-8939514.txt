docno="lists-007-8939514"
received="Mon Feb  1 21:15:05 1999"
isoreceived="19990202021505"
sent="Mon, 01 Feb 1999 17:15:36 -0800"
isosent="19990202011536"
name="Roy T. Fielding"
email="fielding@kiwi.ics.uci.edu"
subject="Re: Application &quot;core protocol&quot; BOF/WG idea"
id="9902011715.aa16600@paris.ics.uci.edu"
inreplyto="Pine.SOL.3.95.990129112510.25085C-100000&#64;elwood.innosoft.com"
expires="-1"

To: Chris Newman<Chris.Newman@innosoft.com>
cc:discuss@apps.ietf.org


>I'd prefer to focus on a single "core protocol" based on the
>connection-based stateful client-server structure that most successful
>IETF application protocols follow.  There are obviously other protocol
>models with which we have far less experience, but most of those _are_
>research problems and thus out-of-scope. 

It has been my experience that an application protocol must match
the interaction style of the application components.  Otherwise, it will
fail to meet the minimal performance requirements of that application
and be replaced by an application protocol that does.  For example,
"stateful" excludes HTTP and any reasonable transfer protocol for
the Web.

I think that it won't be useful to come up with a "core" application
protocol unless those core components can adapt according to multiple
interaction styles and multiple underlying transports.  If that is too
large a scope, then the "common core" being developed must be limited
to a single interaction style.  Besides, if you are going to limit the
core to things occurring in two or more successful IETF protocols, then
the only application being supported is store-and-forward messaging.
I think a "store-and-forward core" is far more likely to be usable by
future protocols than a general application core that only considers
a subset of applications.

....Roy



