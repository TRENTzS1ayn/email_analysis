docno="lists-007-8948734"
received="Tue Feb  2 00:32:50 1999"
isoreceived="19990202053250"
sent="Mon, 1 Feb 1999 22:31:08 -0700"
isosent="19990202053108"
name="Steve Hole"
email="steve@execmail.com"
subject="Re: Application &quot;core protocol&quot; BOF/WG idea"
id="EXECMAIL.990201223108.A@gallileo.execmail.com"
charset="US-ASCII"
inreplyto="3.0.32.19990129130935.015c9e6c&#64;pop.dial.pipex.com"
expires="-1"

To: Graham Klyne<GK@dial.pipex.com>
Cc: Chris Newman<Chris.Newman@INNOSOFT.COM>,discuss@apps.ietf.org


On Fri, 29 Jan 1999 13:56:22 +0000 Graham Klyne <GK@dial.pipex.com> wrote:

> While I applaud the general intent, I echo other concerns that the goal 
> is too ambitious.
> 
> Specifically, I find the idea that we can "design a simple core protocol to
> address these problems" is something of a tall order.  What I do think may
> be achievable is to identify a range of problems, and then make
> recommendations about solutions to these.

I think that the term "core protocol" is misleading in many ways.    We 
really don't want a complete protocol in and of itself.     Seems to me 
that you could organize it into two distinct classes of thing that would 
be described:

1.   A general set of design guidelines for application protocols.   This 
would include things like binary vs. text commands and payload, encoding 
schemes, specification syntaxes, etc.

2.   A set of protocol components that you can assemble into a specific 
protocol.   This would include many of the things that Chris had in his 
message like authentication, ACL's, capabilities/extensions, etc.    
Not unlike a set of protocol subroutines or object classes.     The list of
accepted components can be quite small to begin with. 

Cheers.

---  
Steve Hole                           
Execmail Inc.
Mailto:Steve.Hole@execmail.com 
Phone: 780-424-4922



