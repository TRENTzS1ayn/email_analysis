docno="lists-007-9097332"
received="Tue Feb  9 07:48:06 1999"
isoreceived="19990209124806"
sent="Tue, 09 Feb 1999 12:47:59 +0000"
isosent="19990209124759"
name="Graham Klyne"
email="GK@dial.pipex.com"
subject="APPLCORE: An architectural question"
id="3.0.32.19990209104614.0069efc0@pop.dial.pipex.com"
charset="us-ascii"
expires="-1"


To:discuss@apps.ietf.org
Cc:ietf-applcore@imc.org

I perceive that there is an early decision that this group could make with
very significant downstream consequences.  It concerns the handling of
multiple overlapped requests.

(A) The approach taken by IMAP/AP is to build the concurrency into the
basic request/response protocol, including identifying tags as part of the
data stream.

(B) The aproach taken by HTTP-NG is to have a separate multiplexing layer
that allows a number of virtual duplex stream communications to be
conducted on a single underlying connection.  Thus, each concurrent
request/response is conducted in a separate data stream.

I see parallels here with development of multitasking operating systems:
(A) with asynchronous notification mechanisms built into the operaing
system interface (e.g. VMS);
(B) systems built using a synchronous basic interface and multithreading to
achieve concurrency within a process (e.g. Unix).

The MUX approach involves layering (with the overhead that implies),  while
request/response concurrency adds complexity to the application protocol.

I don't have a definite view on which way is best, but I tend to lean in
favour of the mux approach.

#g

PS:  is T/TCP alive or dead these days?


------------
Graham Klyne
(GK@ACM.ORG)



