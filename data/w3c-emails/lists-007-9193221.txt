docno="lists-007-9193221"
received="Tue Feb  9 15:14:22 1999"
isoreceived="19990209201422"
sent="Tue, 09 Feb 1999 12:06:59 -0800"
isosent="19990209200659"
name="Tom Harding"
email="tomh@thinlink.com"
subject="Re: APPLCORE: An architectural question"
id="36C09563.CCD1F04C@thinlink.com"
charset="us-ascii"
inreplyto="99Feb9.110901pst.&quot;105927&quot;&#64;augustus.parc.xerox.com"
expires="-1"


To:spreitze@parc.xerox.com
CC:discuss@apps.ietf.org

spreitze@parc.xerox.com wrote:

> > Another approach is for a higher-layer application protocol, or the application itself, to choose when to use multiple requests and when to open another connection.
>
> That's not an alternative.  The mere availability of a message muxing protocol doesn't relieve the higher layer of the responsibility of deciding how to use it.  This is a matter of the software in the peers, not the wire protocol (although the design of each naturally influences the design of the other).

I heartily agree that if webmux or another message multiplexing protocol is available, an application layer protocol like XP doesn't need any request/response tagging mechanism.  You just use multiple connections for everything instead of only when you explicitly want concurrency below the level of whole responses.



