docno="lists-007-9438840"
received="Thu Feb 11 19:03:39 1999"
isoreceived="19990212000339"
sent="Thu, 11 Feb 1999 15:57:09 -0800 (PST)"
isosent="19990211235709"
name="Chris Newman"
email="chris@innosoft.com"
subject="Re: APPLCORE rough concensus?"
id="Pine.SOL.3.95.990211154930.1858S-100000@elwood.innosoft.com"
charset="US-ASCII"
inreplyto="9902101532.AA17286&#64;pachyderm.pa.dec.com"
expires="-1"

To: Jim Gettys<jg@pa.dec.com>
Cc:discuss@apps.ietf.org


On Wed, 10 Feb 1999, Jim Gettys wrote:
> I don't want to be in a situation where HTTPng is believed to be the "one 
> size that fits all", even if HTTPng works out (and its not soup yet), 
> and would want it free to optimize to web operations, which have a different 
> set of constraints than many other applications protocols: e.g. low latency, 
> since a user is driving it is important for interactive feel, which is 
> NOT a requirement on, say, mail.  It is those kinds of requirements (along 
> with the "brittleness" of current systems like CORBA), that have made 
> me believe something other than CORBA or Java RMI is needed for the web.
> 
> It is also not clear to me that HTTPng requirements should bind APPLCORE
> hands, as the requirements may be found to be disjoint.
> 
> While the web is a common application protocol, it should not,
> in my opinion, be the only one.

I agree with all of this.

Perhaps APPLCORE and HTTPng will have sufficiently similar components that
they should be aligned for code re-use purposes.  Perhaps APPLCORE should
target simple low-end protocols akin to POP/SMTP/etc and HTTPng target
more complex high-end protocols (or even just web browsing) and they'll
be separate but useful tools for our toolbox.

- Chris



