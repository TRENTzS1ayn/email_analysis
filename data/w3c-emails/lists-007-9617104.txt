docno="lists-007-9617104"
received="Wed Feb 17 06:44:37 1999"
isoreceived="19990217114437"
sent="Wed, 17 Feb 1999 03:43:33 -0800"
isosent="19990217114333"
name="Josh Cohen"
email="joshco@microsoft.com"
subject="RE: Use of TELNET for testing protocols"
id="8B57882C41A0D1118F7100805F9F68B50631A9F0@RED-MSG-45"
inreplyto="Use of TELNET for testing protocols"
expires="-1"


To:"'Jacob Palme'"<jpalme@dsv.su.se>,discuss@apps.ietf.org

try WRS's 'sock' program
or Hobbits "netcat".

Both will give an equivalent server function.  You can bind on a port
and when a connectoin comes in, ie from a browser, the i/o will be on
stdin/stdout for you to manually enter.

> -----Original Message-----
> From: Jacob Palme [mailto:jpalme@dsv.su.se]
> Sent: Sunday, February 14, 1999 9:15 AM
> To: discuss@apps.ietf.org
> Subject: Use of TELNET for testing protocols
> 
> 
> At 23.27 +0100 99-02-11, Chris Newman wrote:
> > Efficiency brings in all sorts of tradeoffs.  One can make 
> a protocol use
> > a few fewer bytes on the wire by using a binary encoding, 
> but this has the
> > expense of requiring significant additional programmer time 
> to develop
> > debugging and testing suites since "telnet" doesn't work any more.
> 
> I know that you can use TELNET to test a server by
> simulating a client, by a human typing or pasting the client
> parts of a textual protocol.
> 
> But how can you use TELNET to test a client by simulating a
> server? This would certainly be very useful, and perhaps
> this is common knowledge which I have not acquired?
> 
> --------------------------------------------------------------
> ----------
> Jacob Palme <jpalme@dsv.su.se> (Stockholm University and KTH)
> for more info see URL: http://www.dsv.su.se/~jpalme
> 



