docno="lists-008-0403063"
received="Mon Nov 26 15:31:15 2001"
isoreceived="20011126203115"
sent="Mon, 26 Nov 2001 15:30:30 0500"
isosent="20011126203030"
name="Keith Moore"
email="moore@cs.utk.edu"
subject="Re: Requirements for reliable message delivery"
id="200111262030.fAQKUVT22900@astro.cs.utk.edu"
inreplyto="200111261851.NAA02580&#64;markbaker.ca"
expires="1"


To: Mark Baker<distobj@acm.org>
cc:brian@hursley.ibm.com(Brian E Carpenter),john_ibbotson@uk.ibm.com(John Ibbotson),discuss@apps.ietf.org(Discuss Apps),rpk@us.ibm.com(Richard P King)

> HTTP's application model is not at all restrictive.  IMHO, it's the
> most powerful and generic one ever created.  I wrote about this
> recently;
> 
> http://www.markbaker.ca/2001/09/draft-baker-http-resource-state-model

I like your description, but I fear it completely misses the point.  

First, the argument about whether HTTP is suitable has little to do with 
the state model of HTTP - issues like message direction, efficiency, 
security model, authentication, use of HTTP URIs, and compatibility with
firewalls are far more germaine.  It's worthwhile to think about the state 
model but this doesn't justify ignoring the other issues.

Second, the way that HTTP POST is typically used (and the way in which 
protocol authors want to use it) bears little resemblance to that
described in your draft.

Third, you have failed to support the argument that even the state model 
you describe in your draft is either 'powerful' or 'generic'.  

Most people who want to use HTTP aren't attracted to its state
model.  They're attracted to HTTP because it runs over port 80, works
through firewalls (usually), seems to have security (which may or 
may not be appropriate for the user's particular purpose), can be 
plugged into an existing server, and/or (mostly) because they are 
(somewhat) familiar and comfortable with it.  They (often incorrectly) 
assume that by simply using HTTP they can avoid worrying about protocol 
design issues.  

Keith



