docno="lists-008-0423250"
received="Mon Nov 26 16:50:57 2001"
isoreceived="20011126215057"
sent="Mon, 26 Nov 2001 16:50:24 0500"
isosent="20011126215024"
name="Keith Moore"
email="moore@cs.utk.edu"
subject="Re: Requirements for reliable message delivery"
id="200111262150.fAQLoOT23333@astro.cs.utk.edu"
inreplyto="200111262122.fAQLMjo34264&#64;pachyderm.pa.dec.com"
expires="1"


To:jg@pa.dec.com(Jim Gettys)
cc: Keith Moore<moore@cs.utk.edu>, Brian E Carpenter<brian@hursley.ibm.com>, Mark Baker<distobj@acm.org>, John Ibbotson<john_ibbotson@uk.ibm.com>, Discuss Apps<discuss@apps.ietf.org>, Richard P King<rpk@us.ibm.com>

> Is the IETF a place to develop such an alternative?  Unfortunately, I
> doubt it, given my experience.  It seems to have such vision at the low
> level packet level, but it seems that too few people who build applications
> hang out there, so at most, the IETF might bless such an alternative if
> and when one comes along...  To date, the IETF has at most been able to
> deal with applications protocols for a single application, and not for
> generic protocol frameworks, on which thousands of apps can be built.

Seems like the generic protocol framework is IP[*] (in a non-NATted world).  
TCP and UDP are less generic but still usable across large numbers of apps.

I'm sure there are higher-level frameworks which could also be widely
useful across large numbers of applications, though less than fully
generic.  My guess is that the trick to getting these accepted within 
IETF is (a) to be absolutely clear about their domain of applicability 
rather than to claim that they're fully generic, and (b) to respect 
the limitations of other technologies - e.g. DNS, URIs fair sharing of 
bandwidth when using UDP, port #s, TLS - used by the framework.

In other words the problem might be that there's a big impedance mismatch
between "people who build applications" and "people who build applications" 
because within the universe of applications there are vastly differing 
requirements.  A lot of "people who build applications" don't realize
that the needs of their applications, while perhaps quite common, are 
not necessarily representative of everyone's needs.

Someone who says "we've got the universal application framework" is likely
to get shot at by folks who don't want this universal application 
framework to keep them from doing what they need to do with the Internet.
OTOH, someone who says "we've got a useful framework for purpose X"
has a much better chance.

Keith

[*] of course there are things that even IP doesn't do well, so it's
not fully generic.  but we have to have some sense of scope. meanwhile, 
lower-layer folks are trying to make IP more flexible.



