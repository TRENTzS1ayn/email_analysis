docno="lists-008-0677780"
received="Wed Nov 28 16:39:40 2001"
isoreceived="20011128213940"
sent="Wed, 28 Nov 2001 08:59:05 0800"
isosent="20011128165905"
name="Marshall T. Rose"
email="mrose+mtr.netnews@dbc.mtview.ca.us"
subject="Re: Requirements for reliable message delivery"
id="047901c1782d$fd3895d0$fe0aa840@FATORA"
charset="Windows1252"
inreplyto="200111281528.fASFSkw424676&#64;pachyderm.pa.dec.com"
expires="1"


To:"Jim Gettys"<jg@pa.dec.com>
Cc:"Discuss Apps"<discuss@apps.ietf.org>,"Marshall Rose"<mrose@dbc.mtview.ca.us>

> The issue is really that the number of people who have designed protocols
> for even a large class of applications (e.g. Bob Scheifler's and my
> development of the X protocol), who are involved in the IETF is very low.
> For whatever reasons, the development of these general (or domain wide)
> protocols go on elsewhere.

i'm wondering if terminology isn't part of the problem here. e.g., i think
of X as being a protocol that supports one application, windowing, just like
i think of SMTP as being a protocol that supports one application,
messaging. how you choose to use the application protocol (e.g., biff, wm,
etc., vs. stock quotes, love letters, etc.) is up to you, but isn't it all
the same "application" as far as the network is concerned?


> We are again observing this with XML/RPC,
> SOAP, etc.  In fact, there seems to be some hostility toward these classes
> of protocols expressed by some of the IETF participants, along with
> some fundamental misunderstandings of requirements of application
protocols
> by some truly talented IETF old-timers.

i think the problem is when you juxtapose "application" with "protocol".

things like xml/rpc are far more interested in the "application" side than
the "protocol" side. and that's just fine, until you put a network inside
the application, at that point, you really wish that someone had done
something about security instead of just figuring that http would take care
of it.


> Unless/until this changes, I don't see the IETF venue being useful beyond
> formal standardization of such a protocol framework "after the fact",
> as in what happened with HTTP.
> ...

sometimes it's a bad idea to get involved with a "race to the bottom", and
sometimes the IETF just does take a pass on things...

/mtr



