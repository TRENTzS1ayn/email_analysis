docno="lists-008-9588762"
received="Mon Nov 25 15:40:59 2002"
isoreceived="20021125204059"
sent="Mon, 25 Nov 2002 10:49:52 0800"
isosent="20021125184952"
name="Joshua Allen"
email="joshuaa@microsoft.com"
subject="RE: Hashed URIs"
id="4F4182C71C1FDD4BA0937A7EB7B8B4C1061BAADE@red-msg08.redmond.corp.microsoft.com"
charset="usascii"
inreplyto="Hashed URIs"
expires="1"


To:"Paul Hoffman / IMC"<phoffman@imc.org>,"Clive D.W. Feather"<clive@demon.net>,<discuss@apps.ietf.org>,<uri@w3.org>


> 2) Appendix A will lead to lack of interoperability. You haven't
> shown why canonicalizing (that is, changing) the pre-hashed URI has
> any advantage.

I assume canonicalizing would *help* interop.  The point after all is to
have two URIs that are the same evaluate to the same.

> 3) Which leads to the biggest question: where are the real-world uses
> for this? Which actual content providers have said "I don't want to
> reveal the real URL for the thing you are comparing"? If those folks

FWIW, I think that a hashed URI scheme is rather useful for semantic web
applications.  Many semantic web applications already use
canonicalization and hashes internally to provide faster query and
comparison of URIs, and I think that the "one-way" nature of hashes will
make them a popular choice for people who wish to provide metadata
without necessarily revealing their web browsing habits.  For example:

* publish a "1 to 5 rating" of a web page, so that anyone visiting the
page can see all of the previous visitors' ratings
* publish a trust rating of a particular mailing list participant
* publish metadata associated with yourself in such a way that automated
spam tools cannot use the metadata to target you

The basic observation is that metadata can be very useful even if you do
not know beforehand what resource it belongs to -- so long as you can
associate metadata with a particular resource on demand.



