docno="lists-009-0961893"
received="Thu Dec 15 22:32:19 1994"
isoreceived="19941216033219"
sent="Fri, 16 Dec 1994 00:28:40 0600 (CST)"
isosent="19941216062840"
name="Albert Lunde"
email="AlbertLunde@nwu.edu"
subject="Re: HTTP: T-T-TTalking about MIME Generation"
id="199412160628.AA007439320@casbah.acns.nwu.edu"
inreplyto="ab169307050210042c52&#64;[192.190.111.20]"
expires="1"


To:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

> At 4:18 PM 12/15/94, Daniel W. Connolly wrote:
> >Hello? Mime encoding adds a few bytes between objects for the boundary.
> >HTTP is 8-bit clean, after all. No base64 needed.
> 
> Hmm - maybe I'm missing something, but I dont think you can put the file in
> WITHOUT encoding, if you are looking for a boundary, what if the file
> contained the wrong bytes and got interpreted as the boundary.

As I said earlier (while many of you were off at the IETF?), I'm
increasingly convinced that HTTP messages are (as the recent spec
suggests) MIME-like, not MIME conforming. With so many other
deviations from MIME, I suggest we should drop the (rather complex)
MIME multi-part structure based on boundaries, etc. and only allow
multi-part messages defined by a Content-Length byte count.

We'd still want to define conventions for how to count/treat EOL at
the start and end of bodies, and this would place some limits
on on-the-fly generation of multi-part types, but it would
be a lot easier to parse and would clarify the distinction between
header and body transport conventions. MIME is basically a
text based protocol. HTTP is a mixed text and binary protocol
that often looks like MIME, but isn't really.

-- 
    Albert Lunde                      Albert-Lunde@nwu.edu



