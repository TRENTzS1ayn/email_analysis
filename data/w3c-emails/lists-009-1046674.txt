docno="lists-009-1046674"
received="Fri Dec 16 07:59:52 1994"
isoreceived="19941216125952"
sent="Fri, 16 Dec 94 09:58:30 0600"
isosent="19941216155830"
name="Jim Seidman"
email="jim@spyglass.com"
subject="Re: HTTP: T-T-TTalking about MIME Generation"
id="9412161558.AA24742@hook.spyglass.com"
charset="usascii"
inreplyto="HTTP: T-T-TTalking about MIME Generation"
expires="1"


To: John Franks<john@math.nwu.edu>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

John Franks writes:
>Correct me if I am wrong, but I concluded from Spero's postings that
>nothing currently proposed including MGET, hold-open, or even HTTP-NG
>would improve (or even match?) the user's perceived performance
>currently given by Netscape.  By this I mean the ellapsed time until
>the user can start reading *all the text* and the ellapsed time until
>the user can jump to a new link.

I have to disagree here.  If the issue is how quickly all the text can be
downloaded, then the fastest way to do this is to send only the text and
then pass on the images later.  Especially for users on slower connections
(such as the ever-mentioned 14.4 SLIP connection) there is a notable
degradation in getting all of the text if several images are being sent
simultaneously.

There are several other reasons why multiple simultaneous connections a bad
idea.  As you pointed out, there are many aborted connections.  When
downloading one item at a time you are much more likely to have received
complete items which you can cache.  (For example, if you are downloading a
page with 15 images which are reused on other pages throughout the site, you
might at least get a few of them completely, rather than getting several
useless partial images which you'll then reload from scratch when they
appear on the next page.)

In my mind the only defensible reason for simultaneous connections is to
reduce the round trip time penalty for loading all the pieces of a document.
However there are already several discussions taking place here about other
ways to minimize the RTT issues.  Even something as trivial as having a
keep-alive and allowing the client to buffer up requests for images as it's
downloading the text would provide a major improvement.

--
Jim Seidman
Senior Software Engineer
Spyglass, Inc.



