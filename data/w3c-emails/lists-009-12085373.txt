docno="lists-009-12085373"
received="Tue Nov 14 13:12:22 1995"
isoreceived="19951114181222"
sent="Tue, 14 Nov 1995 12:59:10 0800"
isosent="19951114205910"
name="Shel Kaphan"
email="sjk@amazon.com"
subject="Re: using opaque strings to determine uniqueness"
id="199511142059.MAA26304@bert.amazon.com"
inreplyto="9511141931.AA04522&#64;acetes.pa.dec.com"
expires="1"


To: Jeffrey Mogul<mogul@pa.dec.com>
Cc: Brian Behlendorf<brian@organic.com>,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Jeffrey Mogul writes:
 > 
 > Hey folks, we're writing the spec, we should be able to require servers
 > (and proxies) to play by the rules.
 > 
 > If you recall, I suggested that an object without an explicit Expires:
 > header attached must always be validated by a proxy.  There are three
 > cases:
 > Expires: missing
 > validation required on every fetch from any cache
 > Expires: "never"
 > validation never required (immutable documents)
 > Expires: <some timestamp>
 > validation not required until <timestamp>, but
 > always required after that.
 > 

But do you really want to just ignore the case where the server has made an
incorrect estimate about the expires date and issues a new version of
a document before that date?

The typical case is that, while a file may change at any time, we
still want caches to cache it.  Yet we generally do not want users to
receive out of date, or more to the point, "previous" versions of
things to the versions they have already got.  These goals are
somewhat in contradition.

Brian's example could happen, and even if it is "valid" for it to
happen, it isn't "nice".  The point is that proxies can make *some*
efforts to prevent such things from happening, with some additional
bookkeeping, and with some (I claim not very much) less effective caching.

--Shel



