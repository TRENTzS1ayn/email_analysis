docno="lists-009-12739650"
received="Thu Nov 30 18:31:27 1995"
isoreceived="19951130233127"
sent="Thu, 30 Nov 95 18:23:16 PST"
isosent="19951201022316"
name="Jeffrey Mogul"
email="mogul@pa.dec.com"
subject="Re: Logic Bag concerns"
id="9512010223.AA02911@acetes.pa.dec.com"
inreplyto="199512010213.UAA11585&#64;hopf.math.nwu.edu"
expires="1"


To: John Franks<john@math.nwu.edu>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

    I would also vote for an opaque cache validator.  We would need an
    "If-cache-valid: <validator> " and an "If-cache-stale: <validator>"
    and we would need to specify their *semantics*.  E.g. for a Range:
    request with an If-cache-valid header send the range if valid, else
    send entire document.
    
Can you explain why we need both
If-cache-valid: <validator>
and
If-cache-stale: <validator>
instead of simply
Cache-validator: <validator>
along with a set of rules that explain how it is supposed to
be interpreted?

E.g., for
GET
Range: 3-8
Cache-validator: XYZZY
I would expect the semantics to be
if the validator of the actual object is XYZZY then
return range 3-8, else return the whole thing

You might argue that one could use:
GET
Range: 3-8
If-cache-stale: XYZZY
but this seems to mean
if the validator of the actual object is NOT XYZZY then
return range 3-8, else return nothing
but that doesn't make a lot of sense to me, because I don't think
it is rational to obtain a range of bytes if your cached copy
of the entire document is known to be invalid.

-Jeff



