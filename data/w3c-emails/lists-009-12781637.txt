docno="lists-009-12781637"
received="Fri Dec  1 14:25:45 1995"
isoreceived="19951201192545"
sent="Fri, 1 Dec 1995 14:13:06 0800"
isosent="19951201221306"
name="Shel Kaphan"
email="sjk@amazon.com"
subject="Re: Logic Bag concerns"
id="199512012213.OAA18352@bert.amazon.com"
inreplyto="9511302329.AA02031&#64;acetes.pa.dec.com"
expires="1"


To: Jeffrey Mogul<mogul@pa.dec.com>
Cc:dmk@allegra.att.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Jeffrey Mogul writes:
 >     I'm troubled by Logic Bags (3.11), which apparently have been added
 >     to support the Unless header and byte ranges.
 > 
 > People are beginning to find specific problems with Logic Bags
 > and Unless.  I'd like to raise a more general question: why do
 > we need this stuff at all?
 > 
 > I can see specific justifications for byte ranges, cache validators,
 > and (weakly justified, but required for compatibility) if-modified-since.
 > I don't see any rationale for a more general mechanism, but I do
 > see a lot of implementation pain.
 > 
 > I'd vote to remove Unless and Logic Bags from the 1.1 spec, unless
 > or until we have a concensus that these are necessary.  And I still
 > think we ought to be using a Cache-validator: header (syntax and
 > exact name to-be-determined, don't flame me about this!) with a 100%
 > opaque validator, rather than fooling around with elaborate schemes
 > that nobody seems to have any explicit need for.
 > 
 > -Jeff

Before I cast a vote to get rid of ``logic "bags"(?)''  I'd like to
hear from Roy and anyone else who likes this stuff as to (a)
specifically why they think it is justified, and (b) why worrying
about it is more pressing than some of the other things that need to
get done.  Though, truth be told, without some evidence as to its
utility I'm inclined to agree that it should not be included.  I'd
hate to see the baby thrown out with the bathwater though, so I'd like
to second (or third) Jeff's motion to do something rational about
opaque validators if we do take this out.   The problem is that we've
got two quite different mechanisms conflated here -- support for
validators and support for the first 2% of Common Lisp....and the rest
can't be far behind :^].

--Shel



