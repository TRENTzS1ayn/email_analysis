docno="lists-009-12940902"
received="Tue Dec  5 20:50:25 1995"
isoreceived="19951206015025"
sent="Tue, 5 Dec 1995 23:47:21 0500"
isosent="19951206044721"
name="Dave Kristol"
email="dmk@allegra.att.com"
subject="Re: twophase send concerns"
id="v01530501aceacfe8fcb9@[192.0.3.1]"
charset="usascii"
inreplyto="twophase send concerns"
expires="1"


To:rg@server.net
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

rg@server.net (Roger Gonzalez) wrote:
[...]
>>From my experience, it seems like Larry is correct; the server -does-
>need to hold the connection open.  Otherwise, (and I'm guessing this
>is due to a poor TCP implementation) as soon as the client sends a
>single byte on a closed connection, a TCP reset occurs, and the abort
>data is -lost- to the client, even though it physically went out on
>the wire.  I've watched this happen with a sniffer.

I can believe this happens.  It's an interesting question what a TCP
implementation should do when a program tries to send to a half-closed
connection.
>
>The big problem from my perspective is that the abort data is often
>quite important.  In particular, the place where I see this happen is
>in a PUT to a location that is unauthorized.  The -only- way I've
>gotten this to work is for the server to hold the connection open
>until the client notices the data to read and closes.

How does the server know the client has noticed the data and closed the
connection?

Dave Kristol



