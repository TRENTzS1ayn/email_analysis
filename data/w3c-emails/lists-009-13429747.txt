docno="lists-009-13429747"
received="Sat Dec  9 17:15:12 1995"
isoreceived="19951209221512"
sent="Sat, 09 Dec 1995 20:24:51 +0000"
isosent="19951209202451"
name="Sankar Virdhagriswaran, Crystaliz Inc."
email="sankar@fcrao1.phast.umass.edu"
subject="Re: making progress on StateInfo"
id="9512100058.AA18398@fcrao1.phast.umass.edu"
charset="usascii"
inreplyto="making progress on StateInfo"
expires="1"

To:"M. Hedlund"<hedlund@best.com>
Cc: Koen Holtman<koen@win.tue.nl>,"Sankar Virdhagriswaran, Crystaliz Inc."<sankar@fcrao1.phast.umass.edu>,koen@win.tue.nl,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com



>The advantage is that you can maintain several state-registers particular
>to parts of (or the whole) server without returning a full session history
>with each request; the token-database is client-side.  The disadvantage is
>that you blow away Dave's provision for an unspecified header-content.  A
>side effect would be the need to return more than one state-info token in
>the same request.

Sure. This will work, but, as I said, this is only one way. It will also
limit the implementation to using hierarchical organizations of state
information. That sort of organization is not optimal for flat look up.
Either the HTTP protocol provide complete support for various mechanisms for
implementing state or it punts it to outside programs, essentially acting as
a communication mechanism for state information between clients and servers.
Obviously, the first is not what we want to do. In that case, we are left to
do the second. 

Much like Roy argues for opaque cache identifiers (and individual servers
implementing their own mechanisms for comparisons), I am arguing for opaque
session information. Let server writers or CGI bin script writers implement
different quality of service features that they want, for the type of
session management they want to do.

Sankar Virdhagriswaran                         Phone: (508) 287 4511
Crystaliz Inc.                                 Fax:   (508) 287 4512



