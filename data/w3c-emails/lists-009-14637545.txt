docno="lists-009-14637545"
received="Thu Dec 28 07:48:39 1995"
isoreceived="19951228124839"
sent="Thu, 28 Dec 1995 10:44:29 0500"
isosent="19951228154429"
name="Roger Gonzalez"
email="rg@caffeine.server.net"
subject="Re: 'PUT' transaction reconsidered (was Re: twophase send concerns )"
id="199512281544.KAA02436@caffeine.server.net"
inreplyto="Pine.SUN.3.90.951228012557.26339C100000&#64;jobe.shell.portal.com"
expires="1"


To:dwm@shell.portal.com
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


>>>>> David W Morris writes:

>> write window eventually) instead of bitbucketing.  Unfortunately, I
>> have no idea if this is portable across all TCP implementations,
>> since closing only half a socket may be incorrectly implemented in
>> some OS's.

Dave> Not implemented may be more like the case. I can't find any
Dave> reference in WINSOCK for example to closing 1/2 a connection.

Consider this a field report to the effect that there is strong
evidence that this is the case.  Our winsock guru (one of the original
implementers of the FTP Software stack) spent 2 solid weeks trying to
coerce winsock to cope with the half-closed case.  His conclusion was
that it is either unimplemented or there is a bug in their
implementation.

Personally, I'd love to make the spec require a correct TCP
implementation, but somehow I don't think this will wash.

This implies to me that something -must- be put into the spec about
the required server behavior (i.e. must be willing to eat bytes for a
while) and suggestions about approaches to defending against
denial-of-service attacks.  (I.e. eat bytes for at most 5 seconds.)

Perhaps we could just require clients that are running on broken
platforms to send up a header that mentions what sort of stupid
gyrations the server needs to do:

  X-Braindamage: WinsockReset

:-)

-Roger

Roger Gonzalez                    NetCentric Corporation
rg@server.net                     56 Rogers Street
home   (617) 646-0028             Cambridge, MA 02142
mobile (617) 755-0635             work (617) 868-8600



60 09 3A EE FE 6A 1E CC   -pgp-   B7 F7 6B 0F 00 1D 01 C7 



