docno="lists-009-2575532"
received="Sat Dec 31 17:03:00 1994"
isoreceived="19941231220300"
sent="Sat, 31 Dec 94 18:00:02 0700"
isosent="19950101010002"
name="Paul Burchard"
email="burchard@horizon.math.utah.edu"
subject="Re: Draft 01 of HTTP/1.0"
id="9501010100.AA06398@horizon.math.utah.edu"
inreplyto="Draft 01 of HTTP/1.0"
expires="1"


To:fielding@avron.ICS.UCI.EDU
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

[Roy Fielding responds patiently to:]
> [Paul Burchard's hasty comments on the HTTP draft:]
> > (1)  In the definition of the Accept request header, there is no  

> > mention of a "version" modifier, e.g.,
> > Accept: text/html; version=3.0
> 

> The BNF for Accept (Section 5.5.8) includes *(";" parameter):

Ah, so it does!  Still, I think it's worth pointing this out  
specially, because gauging client capabilities reliably has been a  
real problem in the past.

> > (2)  The semantics of Expires should discourage clients from  

> > _indiscriminately_ trying to refetch objects, just because
> > they have expired.  Dynamically-created pages can be ephemeral,
> > without having time-dependent content that needs to be updated.
> 

> I will try to clarify that.

Unfortunately, what needs to be clarified is that my interpretation  
of Expires was incorrect. :-)

As Chris Lilley put it, I was taking a server-centric view of  
expiration, whereas Expires was always intended to refer to the  
client's viewpoint.  So, expiration *does* mean that the client is  
encouraged to re-fetch the URL.  I've updated my own server scripts  
accordingly.

--------------------------------------------------------------------
Paul Burchard<burchard@math.utah.edu>
``I'm still learning how to count backwards from infinity...''
--------------------------------------------------------------------



