docno="lists-009-3666489"
received="Wed Mar 15 13:22:03 1995"
isoreceived="19950315182203"
sent="Wed, 15 Mar 1995 22:13:36 &ndash;&ndash;100"
isosent="19950315231336"
name="Henrik Frystyk Nielsen"
email="frystyk@www5.cern.ch"
subject="Re: Question about POST in HTTP/1.0"
id="9503152113.AA01209@www5.cern.ch"
inreplyto="Question about POST in HTTP/1.0"
expires="1"


To:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,suresh@astra.thomtech.com


This is basically a question of how the client can know what will happen to
the data sent in a request. As HTTP is stateless there is no way the client
can get apriori knowledge of the result or what the server expects. This is
uniquely up to the server to decide.

It's a bit the same situation the other way round - the server doesn't know
what will happen to the data sent in a response. This might be of importance
in a collaborative work between a group of people with version control.

However, the client does know from the result of the request - it will (if
everything goes well) receive either a 200 (nothing created) or a 201 (created)

-- cheers --

Henrik Frystyk

> The HTTP/1.0 spec says that a POST can be used for:
> a) allowing an object to be created on the server
> that is subordinate to the URI in the request, or
> b) providing data for a data-handling process.
> 
> My question is, how does the client and server distinguish
> one case from the other? The client may intend one
> meaning but the server may take the other action.



