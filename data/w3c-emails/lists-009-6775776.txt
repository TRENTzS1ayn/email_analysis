docno="lists-009-6775776"
received="Fri Aug 11 14:29:12 1995"
isoreceived="19950811182912"
sent="Fri, 11 Aug 95 14:25:27 PDT"
isosent="19950811212527"
name="Paul Leach"
email="paulle@microsoft.com"
subject="Re: UDP or TCP?"
id="9508112212.AA09065@netmail2.microsoft.com"
inreplyto="UDP or TCP?"
expires="1"


To:mogul@pa.dec.com
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


----------
] From: Jeffrey Mogul  <mogul@pa.dec.com>
] To: Paul Leach
] Cc:  <netmail!http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com>;  <mogul@pa.dec.com>
] Subject: Re: UDP or TCP?
] Date: Friday, August 11, 1995 11:44AM
]
]     ] But simply going to UDP is not the answer, because UDP (without
]     ] some extra effort) does not offer any congestion-control mechanisms.
]     ] Sure, you can layer them on top of UDP, but I suspect that you would
]     ] quickly get back to something very similar to TCP.
]
]     All RPCs I know of do the extra flow control thing. For RPC, it is
]     very simple in the basic request/response case, as request/response
]     is naturally flow controlled -- this is why you don't quickly get
]     back to TCP for simple cases. When the in or out arguments are
]     large, then you do indeed have essentially the same problem as
]     TCP.
]
] Flow control is not congestion control.

I mis-wrote.  I meant to say congestion control. If a sender sends one 
packet, and waits for a response before sending another, then 
congestion automatically slows down the rate at which the sender transmits.

]
]     ] Paul, what does DCE RPC do for congestion avoidance and control
]     ] in WANs, when it uses UDP?
]
]     The protocol is designed to use slow start, sliding window, ack
]     maps, and serial numbered packets.
]
] Slow start (depending on exactly how it is done) will help with
] congestion.  It may not be a full solution.

Let me restate: the combination of the above items is everything TCP 
does, and more. ACk maps reduce retranmissions, and serial numbered 
packet reduce retransmission and make round trip time estimation more accurate.

]
]     I don't know how much of the protocol capacity is
]     exploited in any given implementation -- MS, OSF, and OSF members'
]     "enhanced" versions.
]
] If congestion control is not a mandatory part of the implementation,
] present in all cases, it would be unwise to deploy this as the basis
] for the Web.

I agree. Before using this protocol, the rules for an implementation 
that would be used for the Web should be tightened a lot.  An almost 
literal copying of the relevant portions of the TCP spec into its spec 
would do the trick. And the reference implementation should of course conform.

Paul



