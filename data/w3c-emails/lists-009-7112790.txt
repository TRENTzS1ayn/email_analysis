docno="lists-009-7112790"
received="Tue Aug 15 04:07:09 1995"
isoreceived="19950815080709"
sent="Tue, 15 Aug 1995 13:04:03 +0200 (MET DST)"
isosent="19950815110403"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: caching related topics in the draft and the httpwg discussion"
id="199508151104.NAA12658@wswiop05.win.tue.nl"
charset="USASCII"
inreplyto="199508142245.SAA28211&#64;beach.w3.org"
expires="1"


To:fielding@beach.w3.org
Cc:bne@bne.ind.eunet.hu,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Roy Fielding:
>[Endre Balint Nagy:]
>>If we used the Pragma: no-cache consistently, e.g. applying it to every
>>non-cacheable response, the life of cache implementors and administrators would
>>be much easier. Why not act that way?!
>
>I think this is partly because, up until last week, Pragma: no-cache was
>only a request header.

Another reason is that Pragma only affects caches in proxies, not caches in
browsers (user agents).  The Expires header affects all caches: 

  expires: <yesterday> 

is, as far as proxies are converned, equivalent to Pragma: no-cache.
Authors of dynamic services that want to prevent _all_ caching should thus
send an Expires header, not a Pragma, if they want to minimize number of
response headers sent.

So decisions not to cache must involve checking at least two headers.

But checking two headers for deciding not to cache is the easy thing: the
thing that makes the life of cache administrators hard is to come up with
good replacement heuristics for things that _are_ cached, heuristics that
can be based on a great number of headers.

Of course, if cache administrators want to be transparent for NetScape
cookies and other non-standard html extensions any one browser author feels
like introducing, they will have lots of trouble keeping up with browser
releases.  However, as a service author, I would never use a non-standard
extension that needs transparent caches *without* also including Pragma:
no-cache or Expires: <yesterday>.

Both Dave Kristol's and my stateful dialog support proposals add extra work
for cache implementors, but the difference with NetScape cookies is that,
this time, the specification of the work to be done can be found in the HTTP
standard document.

The main reason why my stateful dialog support proposal complicates caching
decisions is that it wants to introduce a distinction between frivolous
requests to disable caching (which a cache admininstator may want to ignore,
even if this means not confirming to the standard anymore), and serious
requests.

> ....Roy T. Fielding  Department of ICS, University of California, Irvine USA

Koen.



