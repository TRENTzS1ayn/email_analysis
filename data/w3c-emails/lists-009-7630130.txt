docno="lists-009-7630130"
received="Wed Aug 16 12:49:43 1995"
isoreceived="19950816164943"
sent="Wed, 16 Aug 1995 15:48:40 0400"
isosent="19950816194840"
name="Roy Fielding"
email="fielding@beach.w3.org"
subject="Re: multiple ContentEncoding"
id="199508161948.PAA03191@beach.w3.org"
inreplyto="199508161926.AA168031174&#64;hplb.hpl.hp.com"
expires="1"


To: Dave Kristol<dmk@allegra.att.com>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

>Section 8.7 of draft-ietf-http-v10-spec-01.ps says:
>
>If multiple encodings have been applied to a resource, the
>encoding-mechanisms must be listed in the order in which they
>were applied.
>====
>
>I think this is backward.  I think they should be listed in the order
>in which they must be applied by the client in the order they're listed.
>      ==== ==
>
>Consider foo.gz.Z.  Gzip was applied first, then compress.  NCSA HTTP
>1.3 produces this header:
>Content-Encoding: x-compress, x-gzip
>(It looks like the old CERN code I have doesn't support multiple
>encodings.)

I didn't think anyone did, but that interpretation is ugly.
Message header field values should be "added" via an append
operation.  Thus, each encoding becomes layered, and

     Content-Encoding: first
     Content-Encoding: second

has the same semantics as

     Content-Encoding: first, second

If we reverse the order, then added headers must be prepended.

 ....Roy T. Fielding  Department of ICS, University of California, Irvine USA
                      Visiting Scholar, MIT/LCS + World-Wide Web Consortium
                      (fielding@w3.org)                (fielding@ics.uci.edu)



