docno="lists-009-8599513"
received="Mon Aug 21 08:19:20 1995"
isoreceived="19950821121920"
sent="Mon, 21 Aug 1995 10:16:56 0500"
isosent="19950821151656"
name="Eric W. Sink"
email="eric@rafiki.spyglass.com"
subject="Re: HTTP/1.2 stuff:  try it out!"
id="9508211516.AA12803@rafiki.spyglass.com"
charset="usascii"
inreplyto="HTTP/1.2 stuff:  try it out!"
expires="1"


To: Dave Kristol<dmk@allegra.att.com>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


There's a slight syntactic difference between your implementation and the
one we've done between Spyglass and NCSA.  Just as an FYI: here's a copy of
a mail I sent recently which explains how our implementations work.  I'm
also exchanging mails with Alex Hopmann to try and resolve the syntactic
differences there as well.  Both your implementation and Alex's draft
specify a multipart response as an alternative to an accurate
Content-length.  That's fine -- we just have implemented it yet.

--

Here's how current implementations work.  NCSA Mosaic 2.6, NCSA HTTPd 1.5,
and Enhanced Mosaic 2.1 all support this and interoperate together, and all
implementations were done independently.  We didn't share code with NCSA at all.

Information on the NCSA implementation is at 
http://hoohoo.ncsa.uiuc.edu/beta-1.5/
http://hoohoo.ncsa.uiuc.edu/beta-1.5/howto/KeepAlive.html

If the client wants the connection kept alive, it sends the following header
with its request:

Connection: Keep-Alive

If the server recognizes this and wants to leave the connection open, it
sends back:

Connection: Keep-Alive

It may only send this header back if the it also sends back a Content-Length
header which the client may assume to be accurate.

If the connection is left open, then the client may send more requests along
the same connection.  Any time the Connection: Keep-Alive header is sent and
received back, then the connection should stay open.

The NCSA 1.5 server implementation also sends back

Keep-Alive: timeout=n, max=m

but Enhanced Mosaic 2.1 ignores these.

--
Eric W. Sink
Senior Software Engineer, Spyglass
eric@spyglass.com
All opinions expressed here are my own.



