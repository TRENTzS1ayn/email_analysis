docno="lists-009-9551299"
received="Wed Aug 30 10:52:13 1995"
isoreceived="19950830145213"
sent="Wed, 30 Aug 95 12:49:56 CDT"
isosent="19950830174956"
name="Daniel LaLiberte"
email="liberte@ncsa.uiuc.edu"
subject="Re: Comments on draft-v1003a."
id="9508301749.AA12390@void.ncsa.uiuc.edu"
inreplyto="199508301720.KAA20182&#64;bert.amazon.com"
expires="1"


To: Shel Kaphan<sjk@amazon.com>
Cc:ietf-lists@proper.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Shel Kaphan writes:
 > Paul Hoffman writes:
 >  > >Idempotent
 >  > 
 > Can anyone think of a word that means "without significant
 > side-effects"?  Maybe there's some good word from functional
 > programming languages. I think that is closer to what is needed than
 > "idempotent", which always did seem like not quite the right word.

No, side-effects are not the issue at all.  The result returned by the
server needs to be the "same" each time to be considered idempotent,
but each time a result is computed, it can have whatever side effects
it wants to.  It could have no side effects itself and still return
very different results each time - obviously, something else is having
a side effect in that case.

Actually, "same" can be quite different too, as long as it calls it
the "same".  The server decides what it thinks is equivalent to what.
If it decides badly, it is a bad service.

Any particular method may or may not be idempotent, in my opinion,
whether GET, POST, SEARCH or whatever.  There is no reason to define
in the spec that a particular method is always (or never) idempotent.
The server simply tells the client whether a particular use of a
method is idempotent with the no-cache header, or whatever it is
called now.

Daniel LaLiberte (liberte@ncsa.uiuc.edu)
National Center for Supercomputing Applications
http://union.ncsa.uiuc.edu/~liberte/



