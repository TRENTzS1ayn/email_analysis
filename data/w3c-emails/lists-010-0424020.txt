docno="lists-010-0424020"
received="Sun Mar 24 23:45:36 1996"
isoreceived="19960325044536"
sent="Mon, 25 Mar 1996 08:42:38 +0100"
isosent="19960325074238"
name="Harald.T.Alvestrand@uninett.no"
email="Harald.T.Alvestrand@uninett.no"
subject="Re: About that Host: header...."
id="199603250743.AA127799780@hplb.hpl.hp.com"
charset="usascii"
inreplyto="9603241946.aa17583&#64;paris.ics.uci.edu"
expires="1"


To:"Roy T. Fielding"<fielding@avron.ICS.UCI.EDU>
Cc: Alexei Kosut<akosut@nueva.pvt.k12.ca.us>,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Roy says:
> 
> Because it doesn't gain us anything more than just sending Host on
> all HTTP/1.x requests.  If there was something wrong with the Host
> solution, then I could understand the desire to do that.  However,
> given that there is nothing wrong with the Host solution, and Host
> has already been deployed, this all seems like a waste of time.

The things that are wrong with the Host: solution, to my mind, are:
- It STILL leaves us with a protocol where URLs are things that protocol
  entities have to break into little pieces and chew upon.
- It STILL leaves us with an UA-to-cache protocol that is incompatible with
  the UA-to-server and cache-to-server protocol.
- It STILL loses the method information.
- It STILL gives us no path to where it seems everyone wants to be, namely
  with full URLs, until we throw out HTTP/1.x altogether

These aren't "nothing". The question is which pain is lesser.

           Harald A



