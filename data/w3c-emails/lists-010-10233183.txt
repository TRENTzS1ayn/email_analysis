docno="lists-010-10233183"
received="Thu Oct 10 10:20:54 1996"
isoreceived="19961010142054"
sent="Thu, 10 Oct 1996 13:06:57 0500 (EST)"
isosent="19961010180657"
name="Foteos Macrides"
email="MACRIDES@sci.wfbr.edu"
subject="Re: draft-holtman-http-safe00.txt"
id="01IAH8T4V5KY00BIOP@SCI.WFBR.EDU"
charset="USASCII"
inreplyto="draft-holtman-http-safe00.txt"
expires="1"

To:dan@spyglass.com
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


Daniel DuBois <dan@spyglass.com> wrote:
>At 05:09 PM 10/10/96 +0200, Koen Holtman wrote:
>>some HTML form hacks would be needed to provide the same level of downwards
>>compatibility with existing browsers that Safe can provide, for example
>>
>>  <form action="..." method=post preferred_method=get-with-body>
>>   ....
>>  </form>.
>>So it boils down to cruft in HTTP vs. cruft in HTML.
>
>Aren't proxies disallowed from forwarding methods they don't understand?
>Wouldn't GETWITHBODY require a HTTP/1.2 (or rather, a 1.3, since servers
>would be forced to accept it in 1.2, but clients would need to not send it
>until 1.3, ala FullURL)?  Safe: yes could be sent today.

What the GETwithBody would be replacing in this discussion is
not just any GET, but ones which would otherwise have a ?searchpart.

The HTTP/1.1 draft states that Cache-Control and Expires headers
*can* be used to yield and regulate caching of replies from POST requests.
What exactly is still being sought via a GETwithBodyInsteadOfSearchpart
that can't be achieved via a POST with "Safe: yes" and Cache-Control/Expires
headers?  Are there *any* headers or procedures which can't be made to treat
a POST with "Safe: yes" as, in effect, a GETwithBodyInsteadOfSearchpart?

Fote

=========================================================================
 Foteos Macrides            Worcester Foundation for Biomedical Research
 MACRIDES@SCI.WFBR.EDU         222 Maple Avenue, Shrewsbury, MA 01545
=========================================================================



