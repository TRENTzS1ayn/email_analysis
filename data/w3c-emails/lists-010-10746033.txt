docno="lists-010-10746033"
received="Thu Oct 17 15:45:37 1996"
isoreceived="19961017194537"
sent="Thu, 17 Oct 1996 22:41:54 +0100 (BST)"
isosent="19961017214154"
name="Ben Laurie"
email="ben@gonzo.ben.algroup.co.uk"
subject="Re: 13.1.2 Warnings"
id="9610172241.aa14865@gonzo.ben.algroup.co.uk"
charset="USASCII"
inreplyto="199610172228.AAA08048&#64;wsooti04.win.tue.nl"
expires="1"

To: Koen Holtman<koen@win.tue.nl>
Cc:ben@algroup.co.uk,mogul@pa.dec.com,luotonen@netscape.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


Koen Holtman wrote:
> 
> Ben Laurie:
> >Jeffrey Mogul wrote:
> >> 
> >> You've made a convincing case that the existing design for Warning
> >> can yield bogus Warnings when HTTP/1.0 and HTTP/1.1 caches are
> >> combined.  (I believe we wrote the HTTP/1.1 caching rules so that
> >> an HTTP/1.1 cache in the position of your cache "B" would remove
> >> the Warning after doing a successful validation from cache "A",
> >> but of course it's too late to apply that to the HTTP/1.0 caches
> >> out there.)
> >> 
> >> So please suggest a solution!
> >> 
> >> I can see three options:
> >>       (1) Live with it.  This can only happen when an HTTP/1.0
> >>       cache is a client of an HTTP/1.1 cache, and presumably
> >>       in somewhat unusual cases, so maybe it's a temporary
> >>       problem.
> >
> >Something you'd have to live with for a long time, I suspect. Not an
> >acceptable option, IMHO.
> 
> I think (1) is the most acceptable solution of the three.  At some
> time, we need to add a note to the spec telling that 1.1 clients
> should be aware that 1.0 caches could send erroneous staleness related
> Warnings. The note should outline a method to deal with this.
> 
> It is not very bad if that method causes a few cache misses.  Even if
> chains with 1.0 caches in them will become common, responses with
> Warnings won't, so the impact on overall efficiency should be small.

It doesn't cause cache misses. It causes downstream 1.1 caches to operate
incorrectly. The solution (3) which works doesn't cause cache misses, either.
It causes clients downstream of a 1.0 cache to be unaware that a 1.1 cache
upstream of the 1.0 cache has served a stale document (which is no worse than
they would have got if directly connected to a 1.0 cache which had failed to
fetch the entity). In short, if you use method 3 to solve the problem, you
get service that is only as bad as you'd expect from a 1.0 cache. If you use
method 1, you poison downstream 1.1 caches.

Cheers,

Ben.

-- 
Ben Laurie                  Phone: +44 (181) 994 6435
Freelance Consultant and    Fax:   +44 (181) 994 6472
Technical Director          Email: ben@algroup.co.uk
A.L. Digital Ltd,           URL: http://www.algroup.co.uk
London, England.            Apache Group member (http://www.apache.org)



