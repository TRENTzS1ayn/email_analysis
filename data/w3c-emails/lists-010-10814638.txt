docno="lists-010-10814638"
received="Fri Oct 18 02:15:17 1996"
isoreceived="19961018061517"
sent="Fri, 18 Oct 1996 11:07:18 +0200 (MET DST)"
isosent="19961018090718"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: 13.1.2 Warnings"
id="199610180907.LAA07012@wsooti12.win.tue.nl"
charset="USASCII"
inreplyto="9610171829.aa11797&#64;paris.ics.uci.edu"
expires="1"


To:"Roy T. Fielding"<fielding@liege.ICS.UCI.EDU>
Cc:mogul@pa.dec.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Roy T. Fielding:
>
>Ummm, is there some reason why an HTTP/1.1 user agent cannot tell
>for itself whether or not a message is stale? 

Not as far as I can see.  However, the warning code also gives
potentially valuable information on _why_ the message is stale.  This
is why I prefer dealing with the problem when getting a warning out of
a 1.0 proxy, not when sending one to it.

The warning codes in the draft are:

  10 Response is stale
  11 Revalidation failed
  12 Disconnected operation
  13 Heuristic expiration
  14 Transformation applied

Note that warning 14 is not staleness-related, so whatever else we end
up doing, we must not remove the 14 warnings when sending a response
to a 1.0 proxy.

[...]
>As a separate issue, Warning is one of the headers that should be
>listed as MUST be sent in a 304 response,

I think you are right.  I recall that we updated the rules for
creating 304 (not modified) responses in a great hurry; we may have
overlooked more than just the warning stuff.  (Aside: I now suspect
that the Alternates header caching rules I listed in the TCN draft are
broken too because of similar 304 compatibility subtleties.)

>.....Roy

Koen.



