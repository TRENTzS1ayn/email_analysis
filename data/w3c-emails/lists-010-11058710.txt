docno="lists-010-11058710"
received="Sun Oct 20 21:15:46 1996"
isoreceived="19961021011546"
sent="Sun, 20 Oct 1996 21:09:42 PDT"
isosent="19961021040942"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="Re: Server response version number"
id="96Oct20.210942pdt."2759"@golden.parc.xerox.com"
inreplyto="3.0b28.32.19961020181757.0091e1d0&#64;pop.w3.org"
expires="1"

To:frystyk@w3.org
Cc:jcma@ai.mit.edu,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,w3c-http@w3.org


> 1) A client always sends a request using the latest version it supports.
> Only if the client already knows the version of the server and this version
> is inferrior to the version of the client, then it should downgrade to a
> version understood by the server.

Why bother downgrading? MAY downgrade, not SHOULD downgrade.

> 2) A server always responds with the same version as the request. Only if
> this version is not directly supported by the server, it should take the
> version that comes closest. If the semantics of the response requires a
> specific version and this is not the version of the client then it should
> return "505 HTTP Version not supported".

You say "always" in the first sentence and then give conditions when
it doesn't hold in the second. That's confusing.

Perhaps you mean to say that a server SHOULD respond with the same
version as the request?

On a related issue, I'm concerned about the possibility that a single
server might 'downgrade' depending on the URL rather than the version
of the requestor: I think there are clients that presume the version
of subsequent responses based on the version of previous responses.
(The problem are CGI-generated headers, and the possibility of
shortcutting header-rewriting.) I think the issue of 'downgrading'
should explicitly prohibit this behavior.

Larry



