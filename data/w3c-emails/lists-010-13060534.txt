docno="lists-010-13060534"
received="Tue Dec 10 09:21:00 1996"
isoreceived="19961210142100"
sent="Tue, 10 Dec 1996 02:44:14 0600 (CST)"
isosent="19961210084414"
name="Klaus Weide"
email="kweide@tezcat.com"
subject="Re: AcceptCharset support"
id="Pine.SUN.3.95.961210021910.22922O100000@huitzilo.tezcat.com"
charset="USASCII"
inreplyto="199612072328.AAA04691&#64;wsooti04.win.tue.nl"
expires="1"

To: Koen Holtman<koen@win.tue.nl>
Cc: cuckoo.hpl.hp.com@http-wg.uucp,www-international@w3.org


On Sun, 8 Dec 1996, Koen Holtman wrote:
> Klaus Weide:
> >
> [...using feature negotiation to negotiate on UTF-8....]
> 
> >Maybe it is the most practical way.  But no mechanism is in place yet,
> >while overloading the language header (and associated inventiveness with
> >new HTML tags) can be done now... 
> 
> Overloading a HTTP header and adding HTML tags will take _much_ more time
> than waiting for feature negotiation to be in place.

Let's hope so :).  However, with overloading I meant treating 
{Content,Accept}-Language headers (and related HTML tags or attributes)
as carrying character repertoire meaning - which is happening now. 

> But skimming the UTF-8 specification, I gather that UTF-8 is an encoding
> mechanism, not a character set.  HTTP offers the
> Accept-Encoding/Content-encoding headers to negotiate on this.  Or does
> using Accept-Encoding only shift the problem to negotiating which part
> of UCS you can render?

It would be *nice* if UTF-8 could be treated that way, like a C-E (or
C-T-E, for mail).  It could then be used for labelling and negotiation
of character encoding orthogonal to the question of repertoire.
But that isn't the case.

> When we reviewed the Accept-* header definitions for HTTP/1.1 early this
> year, we did not discuss the particular problem of character sets which
> could only be partially rendered, as would often be the case with unicode
> stuff.  It is certainly possible that HTTP/1.1 cannot solve this problem,
> and maybe HTTP/1.1 + feature negotation also can't solve it.

[...] 
> >  I don't think that a HTTP/HTML/Web specific
> >feature tag registration can take over the IANA charset registry's
>                               ^^^^^^^^^
> >function.
> 
> We are not aiming to take over any existing IANA registry.

I didn't mean that you were trying to do that.  But using feature tags
for negotiating (labelling) sub-repertoire, i.e. "which characters can
be (are) used" with utf-8, would effectively amount to using them for
a function that could up to recently be done using IANA registered
charsets alone.

  Klaus



