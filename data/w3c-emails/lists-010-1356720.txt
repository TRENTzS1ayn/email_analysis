docno="lists-010-1356720"
received="Tue Apr  2 18:13:52 1996"
isoreceived="19960402231352"
sent="Tue, 02 Apr 1996 18:02:06 0800 (PST)"
isosent="19960403020206"
name="Ned Freed"
email="NED@innosoft.com"
subject="Re: (INTEGOK) rough consensus"
id="01I32PWOARFIA8CV1S@INNOSOFT.COM"
charset="usascii"
inreplyto="Sun, 31 Mar 1996 16:11:43 -0800&quot; &lt;c=US%a=_%p=msft%l=RED-77-MSG-960401001143Z-1079&#64;red-06imc"
expires="1"

To: Paul Leach<paulle@microsoft.com>
Cc:"'http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com'"<http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com>


>      Note: the net result of the above is that the digest is
>      computed on the content that would be sent over-the-wire, in
>      network byte order, but prior to any transfer coding being
>      applied.

I basically agree with Roy about this section -- the simpler the prose is on
this point, the better.

However, there is still one problem remaining: The use of the term "network
byte order". It is wrong to use this term in this context. Network byte
order refers quite specifically to the ordering of bytes in network address
information. It is not only nonsensical to talk about a generic sequence
of octets being in network byte order, it is outright incorrect, as there
may be media types defined with embedded network address information in them
that isn't presented in network byte order.

The bytes ungoing checksumming are in whatever order the media type puts them
in for transfer of the content across the wire.

Ned



