docno="lists-010-14378764"
received="Mon Dec 30 09:55:39 1996"
isoreceived="19961230145539"
sent="Mon, 30 Dec 1996 12:53:11 0500"
isosent="19961230175311"
name="Blake Winton"
email="bwinton@incontext.ca"
subject="Re: HTTP response version, again"
id="3.0.1.32.19961230125310.006825f4@incontext.ca"
charset="usascii"
inreplyto="HTTP response version, again"
expires="1"


To:"Gregory J. Woodhouse"<gjw@wnetc.com>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

At 09:29 AM 12/30/96 -0800, Gregory Woodhouse wrote:
>> It's not the response that being labeled by the HTTP/1.1 header, it's
>> the server's capability.  There would be no reason to send an HTTP
>> header if it only had to match the client's request.
>A lot of people have said this, but I don't see where it is spelled out.

Well, in
http://www.ics.uci.edu/pub/ietf/http/draft-ietf-http-v11-spec-07.txt
(which I realize is just a draft, but still)...

  3.1 HTTP Version

  [snipped for brevity...]

  Applications sending Request or Response messages, as defined by this
  specification, MUST include an HTTP-Version of "HTTP/1.1". Use of this
  version number indicates that the sending application is at least
  conditionally compliant with this specification.

It seems to be spelled out pretty clearly...

Of course 3.1 also says

  Since the
  protocol version indicates the protocol capability of the sender, a
  proxy/gateway MUST never send a message with a version indicator which
  is greater than its actual version; if a higher version request is
  received, the proxy/gateway MUST either downgrade the request version,
  respond with an error, or switch to tunnel behavior.

So AOL's behaviour is to spec (respond with an error), although it would
have been nicer for them to go with option 1 or 3.

>This particular interpretation of the version number in the response is
>very counter-intuitive and so I think calls for some discussion in the
>document. Yes, I realize that versions with the same major version number
>are supposexd to be backwardly compatible, but this is an entirely
>different issue.

I agree that it is somewhat counter intuitive, but it also makes sense
when you consider that

  The HTTP version of an application is the highest HTTP version for which
  the application is at least conditionally compliant.

Given this, a server should _not_ be returning HTTP/1.0 to a 1.0 request,
since that is not the highest version for which it's compliant.
It does make life a little harder on browser and proxy writers, though.

Just my thoughts,
Blake.



