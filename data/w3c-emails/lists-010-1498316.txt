docno="lists-010-1498316"
received="Wed Apr  3 12:51:47 1996"
isoreceived="19960403175147"
sent="Wed, 03 Apr 96 15:43:08 0500"
isosent="19960403204308"
name="hallam@w3.org"
email="hallam@w3.org"
subject="Re: 505 HTTP Version Not Supported"
id="9604032043.AA13690@zorch.w3.org"
inreplyto="9604031842.AA16903&#64;sdrmis.jhuapl.edu"
expires="1"


To: Bob Jernigan<jern@spaceaix.jhuapl.edu>
Cc:hallam@w3.org,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


I really don't understand the arguments concerning 0.9. It really 
does have very little use. Consider the simplest possible HTTP 1.1
request

GET /foo/bar.html HTTP/1.1
Host: www.foobar.com:80



I don't think that this is very much more complex!

Then we have the simplest reply parser:-

1) Check for HTTP/x.x

2) If not present we have hit one of the very few remaining 0.9 servers.
act accordingly

3) Otherwise gobble up the status code and headers. If the first digit
of the status code was a 2 we have some content. Otherwise we don't.


If a language makes it difficult to implement such code easily then 
the solution is to try a new language. Perl and TK implementations
are not madatory for IETF acceptance. There are decent libraries arround
in any case. 

I would like to see a statement to the effect that 0.9 will be phased out in 
future versions of the protocol. For the entire period of use of 0.9 it has been 
subject to future revision. Its existence has never been guarnteed. When 0.9 was 
superceeded there were fewer than 100 Web servers in operation. I would be 
suprized if any of those servers was still in operation (bar possibly the REXX 
based servers on CERNVM and DESY-NEWLIB which are in any case condemned 
machines).

If one considers some of the problems occurring becuase of unread input etc. I 
very much doubt that many platforms could support a 0.9 server which is unaware 
of 1.0 with any great reliability. Remember that in the days of 0.9 the Web was 
in any case pretty ropey which was part of the need for a change. If a 1.0 
client connects to a 0.9 server the headers part of the 1.0 request will be 
unread by the server. This will in turn mean that the server will close the 
socket with unread data which in many stacks causes a reset command to be sent 
which is likely to result in unread data. This type of effect was a common 
problem in the 0.9 to 1.0 upgrade period.

The simplicity of implementing 0.9 should be set against the complexity of 
supporting 0.9 in a 1.1 framework.

I don't think we should continue to discuss the issue at this time. The best we 
can do in 1.1 is to warn people that 0.9 may not be required in future and that 
clients must not assume that it will be avaliable.


Phill



