docno="lists-010-15607912"
received="Wed Mar 19 02:03:16 1997"
isoreceived="19970319070316"
sent="Tue, 18 Mar 1997 18:51:29 +0100 (MET)"
isosent="19970318175129"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: Suggestion: Add CacheControl extensibility to Vary header"
id="199703181752.SAA29858@wsooti08"
charset="USASCII"
inreplyto="3.0.1.32.19970316141644.00a09100&#64;pop.w3.org"
expires="1"


To: Henrik Frystyk Nielsen<frystyk@w3.org>
Cc:koen@win.tue.nl,http-wg@cuckoo.hpl.hp.com

Henrik Frystyk Nielsen:
>
>At 07:21 PM 3/16/97 +0100, Koen Holtman wrote:
>
>>In stead of 
>>
>> Vary: Protocol, "http://some.org/a-required-extension"
>>
>>you can just as well use
>>
>> Vary: Protocol
>> Cache-control: vary-protocol="http://some.org/a-required-extension"
>>
>>or something, so there is no need to revise the Vary syntax: just use the
>>extensible cache-control syntax to convey your extra directive.
>
>This is not exactly what I am trying to achieve. It is not a question of
>describing which parts (headers, body, or complete message) of a response
>that are cacheble or not

I know the above is not a case of cache-control saying something about the
cachability of some part of the response.  But you are still allowed to use
the cache-control extensibility mechanism to get the extension you want.  If
it controls caches, it can be put in cache-control.  

You can also define a completely new header if you want.  My point is that
there is no need to incompatibily extend the unextendable Vary header.

[...]
>>You can also use the following hack, which will get you what you want even
>>under the current HTTP/1.1 spec.  If you have multiple protocol headers but
>>only want caches to vary on one, include an extra header like
>>
>>Proto-Vary: {http://some.org/a-required-extension {str "req"}}
>>
>>in the response, and send "Vary: proto-vary" in stead of "Vary: protocol".
         ^^^^^^^^
                Oops! I should have written request here

>>Strange, but fun.  Of course, you would usually want to have a shorter
>>encoding in the above proto-vary header.
>
>Throwing in random new headers is exactly what PEP tries to avoid

Yes, you have a point.  The above is a hack: if this functionality would be
needed often, you are better off defining clean new mechanism.

>Henrik

Koen.



