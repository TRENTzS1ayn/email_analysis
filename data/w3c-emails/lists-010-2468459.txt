docno="lists-010-2468459"
received="Fri Apr 19 10:06:34 1996"
isoreceived="19960419140634"
sent="Fri, 19 Apr 1996 13:02:00 0400"
isosent="19960419170200"
name="Mary Ellen Zurko"
email="zurko@osf.org"
subject="Proxy authentication"
id="199604191702.NAA19278@postman.osf.org"
charset="usascii"
inreplyto="Pine.SUN.3.91.960418224358.23293B100000&#64;hopf.math.nwu.edu"
expires="1"


To: John Franks<john@math.nwu.edu>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,zurko@osf.org

Proxy authentication, if I read it right, does not work for architectures 
with more than one proxy between the browser and server, each with their
own security needs. Section 2.5 of the DAA spec says:

" the proxy versions, Proxy-
  Authenticate and Proxy-Authorization, apply only to the current
  connection and must not be passed upstream or downstream. "

This needs to be fixed. We are working with proxies as stream transducers,
that can be piped to one-another or to (or from) firewall/caching proxies.
(See "Application-Specific Proxy Servers as HTTP Stream Transducers" in
WWW4, and our paper on using these for group annotation services in WWW5
for more information.) I believe that Digest Authentication should be passed
asap, but the Proxy Authentication looks seperable from DAA, and I don't
recall seeing this issue discussed in the working group.

The problem arises in setups such as a group of browsers using a single
group annotation proxy, which in turn proxies through a firewall to
organizationally external servers. Under the current proposal, the clients
can authenticate to the group annotation proxy, which can then impose its
security policy on its data and services. However, only the group annotation
proxy can authenticate to the firewall proxy. The firewall proxy would have 
to trust the group annotation proxy to never pass on requests from users
not authorized to use the firewall proxy, which is an unreasonable and
easily breakable reliance. A scheme that allowed each browser to authenticate
to each proxy would allow each proxy to maintain its own security policy
and make its own checks. 

Also, from a security architecture point of view, you definately want to
be able to authenticate the end user (browser) at any intervening proxy.
Was there some reason to draft the proxy authentication with this 
restriction?
Mez



