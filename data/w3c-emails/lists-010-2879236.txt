docno="lists-010-2879236"
received="Wed Apr 24 10:31:26 1996"
isoreceived="19960424143126"
sent="Wed, 24 Apr 96 13:26:46 0400"
isosent="19960424172646"
name="hallam@w3.org"
email="hallam@w3.org"
subject="Re: NULLRequest (Sect. 4.1)"
id="9604241726.AA05935@zorch.w3.org"
inreplyto="9604241654.AA05873&#64;zorch.w3.org"
expires="1"


To:jg@w3.org,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com
Cc:hallam@w3.org


I'm somewhat disturbed by calling CRLF a "NULL Request". This seems to me to 
open up a lot of opportunities to fall into holes when writing statements like 
"Every request receives a response code."

Plus I don't think it quite captures the problem for the server writer. Server 
writers are going to get extraneous CRLFs appended to certain content types and 
they have to be aware of that.



I suggest we call it what it is, a KLUGDE (or a hickup). Then we are not likely 
to commit an error later on by inadvertently refering to "Requests" and 
including NULL requests by mistake.

I think that there should also be a statement to warn server writers not to 
depend on the additional CRLF. 

I don't see that we really need to allow an unbounded stream of NULL-Kludges. 
There can only be one NULL kludge produced and that will occur after a request 
is sent. In CSP we would have -


Client = out?Full-Request -> 
(out!NULL-Kludge -> Client-Response | Client-Response)
Client-Response = in?Full-Response -> Client

Then we have a server -


Server = in?Full-Request -> 
(in?NULL-Kludge! -> Server-Response | Server-Response)
Server-Response = in?Full-Response -> Client


And a proxy looks like :-


Proxy = in?Full-Request -> 
(in?NULL-Kludge! -> Proxy-Response | Proxy-Response |
Proxy-Delegate)
Proxy-Delegate = ... something horrible...
Proxy-Response = in?Full-Response -> Client


Keeping that extra CRLF bug about is a real pain.


Phill



