docno="lists-010-4601636"
received="Tue Jul  9 16:24:07 1996"
isoreceived="19960709202407"
sent="Tue, 9 Jul 1996 16:08:18 0700"
isosent="19960709230818"
name="Paul Leach"
email="paulle@microsoft.com"
subject="RE: multihost virtual sites for HTTP 1.2"
id="c=US%a=_%p=msft%l=RED-77-MSG-960709230818Z17719@abash1.microsoft.com"
inreplyto="multihost virtual sites for HTTP 1.2"
expires="1"


To:"'http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com'"<http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com>,"'S.Venkatramanan@Eng.Sun.COM'"<S.Venkatramanan@eng.sun.com>



>----------
>From: S.Venkatramanan@Eng.Sun.COM[SMTP:S.Venkatramanan@Eng.Sun.COM]
>Subject: Re: multi-host virtual sites for HTTP 1.2
>
>
>> From http-wg-request@cuckoo.hpl.hp.com Tue Jul  9 15:24 PDT 1996
>> 
>> With the Host: header in HTTP/1.1 it is possible to efficiently and
>> easily make a single host act as many "virtual" Web sites.
>> 
>> What I'd like to see in HTTP/1.2 is the ability to easily and
>> efficiently make multiple hosts act like a single virtual Web site, so
>> that one can build huge web sites.
>
>I think this is just an implementation, or rather, a site
>setup/administration
>problem than a protocol defeciency.  How about using a round-robin DNS
>to map the hostname to multiple irons, use the power of such multiple
>hosts in the cluster to serve nfs mounted files from the same or similar
>pool.
>
>This will not necessitate redirection with Location: header;  the name
>megasoft.com becomes virtual and need not be heavily loaded; the contents
>need not be replicated as they are all NFS mounted and hence distributed
>in the network (may be high speed because they are all potentially
>co-located).
>
>May be there are some other issues I am missing in this simpleton approach.

You're right that this scales. But the proposal from my original mail
should be quite a bit more efficient, because in your suggestion every
request gets handled by two hosts instead of one, and all content makes
three trips through a network controller instead of one. For the same
reasons, latency is better when the request goes straight to the host
that has the resource.

In addition, there are issues when updates are allowed. I didn't point
this out in my original mail, but when the hosts are individually named,
a request that does an update can quite easily be redirected to the
"master" which processes all updates.

Paul



