docno="lists-010-5223980"
received="Tue Jul 16 07:28:22 1996"
isoreceived="19960716112822"
sent="Tue, 16 Jul 1996 07:19:04 0700"
isosent="19960716141904"
name="Erik Aronesty"
email="earonesty@montgomery.com"
subject="RE: Any interest in automatic linkupdating?"
id="c=US%a=_%p=Montgomery%l=EXCHANGE_SERVE-960716141904Z-240@sf-exch2.montgomery.com"
inreplyto="Any interest in automatic linkupdating?"
expires="1"


To:"'http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com'"<http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com>

nice thing about that is that the checking is done on somebody else's
Internet time.  unfortunately, I wouldn't want my client to waste my
hard earned money telling your server about some link.

a more reasonable standard might be

A.

SERVER RECIEVES REQUEST FOR UNAVAILABLE RESOURCE
1. Checks for the "Referer" header
2. If it is available it writes the URL of the request, as well as the
Referer in a ADVISE FILE

B.
ADVISE DAEMON BEGINS IT'S PROCESS

1. Reads the ADVISE FILE...at a time when connection activity is low

2. INITIATES A CONNECTION WITH THE REFERRING SERVER

----begin session----
ADVISE /your-referring-resource HTTP/1.X
Invalid-Resource: http://myserver/mybadurl
Valid-Resource: http://myserver/mygoodresource
----end session----

3. if Valid-Resource is not available ..it is left blank

4. if the server replies with a "405 -Method Not Available" ...it is
recommended that your server keep an "ADVISE N/A CACHE" .... and wait
some time before bugging that out of date machine again.


>----------
>From: James Marshall[SMTP:jsm@crl.com]
>Sent: Monday, July 15, 1996 4:56 PM
>To: Vance Huntley
>Cc: http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com
>Subject: Re: Any interest in automatic link-updating?
>
>I see I wasn't very clear in my first post-- let me apply some Windex: 
>
>Given the current HTTP standard, I don't see how to update a link the
>first time any user follows it; the best method I know is for the
>owning
>server to keep checking all links in its resources, and update those
>that
>are obsolete.  It would be more efficient (and more immediate) to
>update a
>link the first time someone discovers it's obsolete, instead of
>checking
>all links periodically.  Sort of like interrupt-driven versus polling. 
>
>If you know a way to do this with the current HTTP standard, then I'm
>the
>one being dense (and please let me know how) (I mean how to do it, now
>how
>dense). 
>
>The scheme I'm talking about involves adding or modifying an HTTP
>method
>to let any client SUGGEST to a server that a link in a resource needs
>updating.  The server is then expected to test the link with a HEAD
>request, before actually updating the link.  This suggestion mechanism
>allows anyone to notify any server that a link needs updating, while
>preventing unauthorized changes (the security concern that Dave Morris
>(Hi
>Dave!) brought up in his note). 
>
>Does this make more sense? 
>
>Cheers,
>James Marshall
>jsm@crl.com
>
>
>> I agree that updating broken links is a useful feature in a web server. 
>> But why does this need to be addressed in the standard?  Is this really 
>> anything more than a useful utility for webmasters  ( as opposed to a 
>> client-server communication issue which must be addressed in the 
>> standard )?
>> 
>> Apologies in advance if I'm just being dense :-)
>> 
>> ------------
>> Vance Huntley
>> vance@webgenesis.com --- 607.255.8499
>
>



