docno="lists-010-5535664"
received="Tue Jul 23 22:56:42 1996"
isoreceived="19960724025642"
sent="Wed, 24 Jul 1996 06:50:55 +0100"
isosent="19960724055055"
name="Martin Hamilton"
email="martin@mrrl.lut.ac.uk"
subject="Re: HTTP/1.2 topics and beyond"
id="199607240550.GAA06960@gizmo.lut.ac.uk"
charset="usascii"
inreplyto="9607122249.aa12854&#64;paris.ics.uci.edu"
expires="1"


To:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

"Roy T. Fielding" writes:

| An implementation guide should be just that -- go through the steps
| of typical and non-typical scenarios and describe how one might implement
| each step according to the standard.  When that is done and approved by
| actual implemeters of the protocol, go through the RFC (hopefully it will
| be one by then) and decide what has been duplicated.

Here's another way of thinking about the problem...  Over on the
www-proxy list we were discussing how to make the Web a bit more
resilient, in the proxy sense at least.  This seems to mean
things like browsers supporting fallback proxy servers and the
proxying of new protocol schemes, HTTP clients in general making
use of multiple A records and SRV when available, and honouring
TTLs in cached DNS lookups.  As an organization, we could really
use HTTP implementations which were smart enough to do at least
some of the more elementary things.  Heck, support for multiple
A records would be a *big* step forward for certain vendors'
software...

So, does this sort of thing belong in the HTTP specification ?
The spec has lots of implementation related info in it already,
so there is precedent.  Dilemma: it's already quite big.  Is the
new stuff really important enough that it should be included ?
Just another five pages or so ?  OK, maybe ten :-)

Martin



