docno="lists-010-6885833"
received="Sat Aug 10 07:47:34 1996"
isoreceived="19960810114734"
sent="Sat, 10 Aug 1996 16:44:10 +0200 (MET DST)"
isosent="19960810144410"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: New document on &quot;Simple hitmetering for HTTP&quot;"
id="199608101444.QAA19593@wsooti04.win.tue.nl"
charset="USASCII"
inreplyto="9608072300.AA01901&#64;acetes.pa.dec.com"
expires="1"


To: Jeffrey Mogul<mogul@pa.dec.com>
Cc:koen@win.tue.nl,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Jeffrey Mogul:
>
     [Koen Holtman:]
>    But to allocate max-uses values to proxies an efficient way, an
>    origin server seems to have to keeping per-proxy database of
>    `max-use-qouta-use-speed' (last two paragraphs of Section 2), which
>    adds some overhead to every request.
>
>Only if it really wants to be cautious about bounding the counting
>error.  I would imagine that the simplest servers would have a global
>setting for this value (e.g., always send "max-uses=10").

I just did some thinking about how good max-uses=10 would be at
bounding the error, and the conclusions are not good.

If you send 80 immutable pages with max-uses=10 to an un-cooperative
proxy with 500 web users behind it, then you will likely end up with a
measured count of 80, all hits measued at the origin server itself,
because the chance that more than 10 out of the 500 web users behind
the proxy will be interested in any one of your pages and generate a
hit count report before the page disappears from the cache is small.

However, you have handed out 80*10=1000 uses, which gives you 800 hits
as the upper bound.  So all you know is:

  80 <= actual hits <= 800

This is not what I call useful information.  Something like an
interesting upper bound would be

  80 <= actual hits <= 100

but I see no way in which max-uses can provide such a bound.

I suspect that max-uses counts higher than 3 will be disastrously
ineffective at yielding a useful upper bound if uncooperative caches
are common.

A proxy not being cooperative and only supporting max-uses seems about
as bad as a proxy not supporting hit counts at all.

I'd like to see *actual statistics* disprove my argument, but it seems
to me that without statistics, there is no way you can justify the
complexity of having max-uses.  It would be better to eliminate it and
instead add stuff to make being cooperative less costly (e.g. a method
to piggy-back hit count reports for other URLs on a request you have to
send anyway).

I am moderately interested in getting a working lightweight
demographics mechanism.  But I suspect that the current design won't
work well in practice.  It would require favorable actual statistics
for me to change my mind and support this design.

>-Jeff

Koen.



