docno="lists-010-6975881"
received="Mon Aug 12 07:47:33 1996"
isoreceived="19960812114733"
sent="Mon, 12 Aug 96 10:29:38 0400"
isosent="19960812142938"
name="jg@zorch.w3.org"
email="jg@zorch.w3.org"
subject="Re: Sticky stuff."
id="9608121430.AA20562@zorch.w3.org"
inreplyto="199608092212.AAA19354&#64;wsooti04.win.tue.nl"
expires="1"


To: Koen Holtman<koen@win.tue.nl>
Cc: Paul Leach<paulle@microsoft.com>,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,hallam@etna.ai.mit.edu

Specialized compression schemes always beat general ones, usually hands
down, as they know much more about the content of messages than a general
one can.  The algorithms in modems can't use the best compression algorithms
in any case, due to constraints on modem's behavior.

For example, many compression schemes only compress on a character by
character basis; in HTTP's case, you have a dictionary for long words,
reducing a string in the 8-10 byte range down to a single byte.

So arguing that modem compression makes protocol compression meaningless
is almost always incorrect (example; TCP header compression, that knows
about the details of TCP, gets about a 7:1 compression; compression in
modems is at best in the 2-3X range).

However, I agree with the sentiment that getting real data is a good idea,
though it can be work to get the data.  To encourage real data, read on...

I will assert that Paul's scheme over modems with data compression
will beat the modem alone by at least a factor of two in savings of bytes
actualy transmitted...  These should be real requests, including Accept:
and similar protocol features, to qualify.
First person to prove me wrong with running code 
and real data gets $50.  At worst, I'll learn something about how HTTP
works...
- Jim Gettys

 - Jim Gettys



