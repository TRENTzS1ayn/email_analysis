docno="lists-010-9203875"
received="Thu Aug 29 21:36:25 1996"
isoreceived="19960830013625"
sent="Fri, 30 Aug 1996 00:32:26 0400"
isosent="19960830043226"
name="John C. Mallery"
email="jcma@ai.mit.edu"
subject="Re: Question on ChunkSize sect 3.6, 8/12/96"
id="v0300780dae4c1cf26e63@[128.52.39.15]"
charset="usascii"
inreplyto="9608291956.aa10242&#64;paris.ics.uci.edu"
expires="1"


To:"Roy T. Fielding"<fielding@liege.ICS.UCI.EDU>
Cc: http working group<http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com>

At 7:56 PM -0700 1996-08-29, Roy T. Fielding wrote:
>  Under the circumstances, the spec could say
>
> #1       chunk          = chunk-size [ chunk-ext ] *(SP | HT) CRLF
>                        chunk-data CRLF
>
>and explicitly disallow any other LWS between chunk-size and chunk-data CRLF
>(as it does for the other cases where CRLF is acting as a delimiter).
>

Your description would require the ";" to immediately follow chunk-size 
and padding to appear between  the ";" and CRLF.

The present known server and client implementations are handling this:

#2       chunk          = chunk-size *(SP | HT) [ chunk-ext ] CRLF
                        chunk-data CRLF

Although one reference client doesn't parse [ chunk-ext ], and so
might need a small hack to detect ";" and skip *(SP | HT) to the CRLF.

Another alternative could be:

#3       chunk          = chunk-size *(SP | HT) [ chunk-ext ] *(SP | HT) CRLF
                        chunk-data CRLF

This would seem most robust, if a little longer.



