docno="lists-011-0814585"
received="Thu Mar 27 18:27:55 1997"
isoreceived="19970327232755"
sent="Thu, 27 Mar 1997 21:26:46 0500 (EST)"
isosent="19970328022646"
name="nemo/Joel N. Weber II"
email="devnull@gnu.ai.mit.edu"
subject="Re: ID: Proxy autoconfig"
id="199703280226.VAA07764@duality.gnu.ai.mit.edu"
inreplyto="ML3.1.859515266.5627.josh&#64;birdcage"
expires="1"


To:josh@netscape.com
Cc:dwm@xpasc.com,dmk@bell-labs.com,josh@netscape.com,http-wg@cuckoo.hpl.hp.com

   Date: Thu, 27 Mar 1997 18:14:26 -0800 (PST)
   From: Josh Cohen <josh@netscape.com>
   Sender: josh@birdcage.mcom.com

   2. DHCP is a one time configuration retreival, the proxy config can 
      change dynamically, and DNS allows a mechanism to do that.
   ( ie it has a lifetime )
      ( yes, DHCP has a lease, but I beleive that is meant to be more
long lived )

That was not how I interpreted it.

I think most of the DNS servers I work with have a 1 week lifetime.

My PC has an IP address that will last for the duration of this ppp
session--ie an hour or two.

   3. Service location is an appropriate way to advertise a service,
      which I beleive the proxy is.  The browser is discovering
      an available proxy service, not a host configuration option.

What's the difference between discovering DNS servers and discovering
HTTP proxies?

   4. DNS is much more commonly deployed where the web clients are
   (its usually a necessity ), while DHCP seems to be mainly
   popular on PCs

I understand that point.

But I don't think that the implementation you propose is not as clean.

   Yes, if thats all your saying, but these days, a common config would
   be something like:
   set http:// to go to proxy1 on port 80
   set ftp:// to go to proxy2 on port 80
   set https://*.evil.com to proxy 3 in port 443
   set no-proxy for mydomain.com yourdomain.com thishost.thatdomain.com

   and more complex ones are coming ie:
   send HTTP GETS to proxy2 on port 80
   send HTTP PUTS to proxy3 port 80.

OK, but I don't see any settings where I would want to have such a
complex setup.

Like I might run a proxy server on one of my computers at home if I
get organized.  But I would only need one proxy.

I'd guess you need thousands of users on your network before you'd
need multiple proxies.

And with proxy cache hierarcies, I would htink it would always work
to ask your local proxy for the document, and let the proxy figure
out how to talk to another proxy.  I don't see where the client would
have to know about that.



