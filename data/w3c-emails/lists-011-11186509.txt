docno="lists-011-11186509"
received="Tue Nov 18 18:13:58 1997"
isoreceived="19971118231358"
sent="Tue, 18 Nov 97 18:07:32 PST"
isosent="19971119020732"
name="Jeffrey Mogul"
email="mogul@pa.dec.com"
subject="Re: AcceptTransfer header field (was HTTP/1.1 Issues: TRAILER_FIELDS)"
id="9711190207.AA01495@acetes.pa.dec.com"
inreplyto="9711181717.aa11856&#64;paris.ics.uci.edu"
expires="1"


To:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

Roy Fielding writes:

    >    Likewise, chunked and identity are always required -- there is no
    >    reasonable use for refusal based on lack-of-encoding.  Thus, the only
    >    feature we actually need is the ability to request a given
    >    transfer-encoding be used.
    >    
    >I disagree.  With respect to "chunked", we could presumably change
    >All HTTP/1.1 applications MUST be able to receive and decode
    >        the "chunked" transfer coding,
    >to
    >All HTTP/1.1 applications MUST be able to receive and decode
    >        the "chunked" transfer coding, except for clients that
    >explicitly reject this transfer coding using a qvalue of 0
    >in an Accept-Transfer request header field.
    >
    >I'm not necessarily saying that we should do this, but it seems
    >safe to do so, and it might pay off for implementors of clients
    >with limited code space.
    
    No, we can't do that.  That has been written in stone (i.e.,
    deployed code).  It is also not desirable from a robustness
    perspective -- HTTP needs an indicator of message length in order
    to differentiate between complete and incomplete responses.  HTTP
    is unsafe for data transfer without that information, so we don't
    give the compliant application any choice.

Oops, Roy is right about this one.  I was rushing, and forgot
about the deployed base of chunk-sending applications.

-Jeff



