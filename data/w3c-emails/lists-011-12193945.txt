docno="lists-011-12193945"
received="Sat Nov 29 19:13:02 1997"
isoreceived="19971130001302"
sent="Sat, 29 Nov 1997 19:13:01 GMT"
isosent="19971129191301"
name="Phillip M. HallamBaker"
email="hallam@ai.mit.edu"
subject="Re: A common registry for MIME headers?"
id="01bcfcfa$7fa34000$06060606@russell"
charset="USASCII"
inreplyto="A common registry for MIME headers?"
expires="1"

To:"Larry Masinter"<masinter@parc.xerox.com>,http-wg@cuckoo.hpl.hp.com





>I personally think it would be better if there were a common
>registry for 'headers' that included the list of which
>were useful in HTTP, EMail, NetNews, within particular multipart
>types, etc.
>
>I think it would help in future coordination between extensions
>of mail, news, other kinds of 'push', etc.


I think that Larry's point is a good one but the problem is
somewhat deeper. The problem is that the RFC structure
does not really support the layered nature of the protocols,
nor is the need for continuing extensions handled at all well.

The area in which this is most apparent is NNTP where
almost half the 'de-facto' NNTP standard has been outside
the IETF process for a decade. The recent NNTP extensions
work has thus been preformed in a remedial rather than a
pro-active fashion.

Two models to bear in mind, the UK and US legislative
processes. The RFC process is basically that of the UK 
parliament. Bills correspond to Internet drafts. They can 
be introduced by any member at any time and have no 
weight. RFCs correspond to 'Acts' - i.e. fully processed
and approved bills that have made it thorugh the committee
cycle. Except that RFCs also include documents that would
in the UK system be considered 'orders in council' 'white
papers' and all the rest of parliamentary clutter.

The US legislative system is rather different in that the 
acts passed are essentially a set of editing instructions for
another document, a consolidated statement of the law.
This is essentially the French Revolutionary model, impose
a uniform code.

The advantage of this second model is that it allows much 
more scope for 'tweakage' of an extant spec. Additional
headers can be specified and added into the general mix
without having to re-issue every spec that is dependent on
them.

For example consider the Digest Authentication Spec,
should it dock or not? Ideally I would like to be able to
'dock' specifications of this type after the HTTP/1.1 
spec has been fully approved and without re-opening 
HTTP.

The case of specs that cross working group boundaries 
makes a mechanism of this type even more important.
For example the MIME group would never accept the
real and legitimate objections of the HTTP community 
that since HTTP is 8-bit clean it was imperative that
a content length engoding be allowed. What was actually
a transport issue (SMTP implementations are habitually
broken meaning that content-length is not stable) became
a structural imperative.

As much of the communications infrastructure becomes
embedded in the operating system it becomes even more
important to systematize the means by which facilities can
be added to the general infrastructure while taking account
of the specific limtations of particular protocols.

So a possible new structure for RFCs would be as a set of 
editing instructions. The protocol headers (or whatever)
would be specifie with a description for each. Then another
section would discuss the applicability of the headers to each 
of the MIME based transport protocols SMTP, NNTP and 
HTTP.

Some centralized document would be maintained with a
structure designed to allow component-wise editing (i.e. 
the addition of additional chunks). There might be cross
references in this document so that additional rationale
for a particular change might be found in an acompanying 
RFC..

In short this is not a simple 'registration' function but a 
fundamental change in the way the IETF operates. It would 
have many advantages, in particular avoiding the repetative
re-writing of introductory material which may or may not
contain substantive changes.

The problem is getting agreement to make such a change.
There are still folk that turn purple at the heretical suggestion
that RFCs should be issued in HTML. Their rationale being 
based on a bad experience with postscript. One ill fated 
experiment in the middle ages having proved that for all time
there can be no improvement on ASCII text. This is why
every single person down in Washington the week after next
will carry at least one RFC which has been misprinted.

And don't think for a moment that the response that everyone
will give to proposals for change is to agree with them but
lament at great length that they wont be changed.

Such things are the spark of revolutions.

            Phill



