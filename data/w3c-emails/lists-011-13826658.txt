docno="lists-011-13826658"
received="Wed Dec 17 12:43:04 1997"
isoreceived="19971217174304"
sent="Wed, 17 Dec 1997 10:43:20 PST"
isosent="19971217184320"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="Re: What is ContentLength?"
id="34981D48.CBAA347@parc.xerox.com"
charset="usascii"
inreplyto="21FD6499922DD111A4F600805FCCD6F2BC352C&#64;red-86msg.dns.microsoft.com"
expires="1"


To: Josh Cohen<joshco@microsoft.com>
Cc:"'koen@win.tue.nl'"<koen@win.tue.nl>,mogul@pa.dec.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

We need to resolve the issue of content-length and cascaded
transfer encodings quickly. We need two interoperable
implementations of this 'feature', even if it is implicit in
the spec, or else we should restrict the allowed set.

I don't think we should explore too many degrees of freedom.

* chunked is only allowed once, as the last transfer encoding
  applied.
* before chunked is applied, only one T-E should be sent,
  but recipients should accept all combinations (as long as
  there are no duplicates).
* no T-E's other than 'chunked' may be applied to multipart/
  content-types, but T-Es are allowed within a multipart type
  (e.g., multipart/byte-ranges, multipart/form-data).

The entire transmission is required to be either with content-length
or else self-delimited where multipart is the only self-delimited
media type, but chunked, gzip are self-delimited T-Es.


-- 
http://www.parc.xerox.com/masinter



