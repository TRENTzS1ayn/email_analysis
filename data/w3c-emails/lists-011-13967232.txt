docno="lists-011-13967232"
received="Fri Dec 19 10:08:15 1997"
isoreceived="19971219150815"
sent="Fri, 19 Dec 1997 10:08:15 0600 (CST)"
isosent="19971219160815"
name="John Franks"
email="john@math.nwu.edu"
subject="Re: Digest mess"
id="Pine.LNX.3.95.971219100005.517C100000@hopf.math.nwu.edu"
inreplyto="Pine.LNX.3.96.971219101948.23855E100000&#64;alice.agranat.com"
expires="1"

To: Scott Lawrence<lawrence@agranat.com>
cc:jg@w3.org,paulle@microsoft.com,ietf-http-wg@w3.org


Note the temporary mailing list: ietf-http-wg@w3.org

On Fri, 19 Dec 1997, Scott Lawrence wrote:

> 
>> John Franks:
> 
>> It is the client who must be concerned about reused nonces to avoid
>> a replay attack.  To avoid a replay attack the client would have to
>> keep a data base of all previous nonces and make sure they are not 
>> reused.
> 
> No - it only needs to keep the nonce it used for the outstanding
> request; if that does not produce the correct digest then it is not
> valid even if it would have been valid for some earlier request.  
> 

Maybe I am not understanding you.  It seems to me that if a client,
for example, regularly places an order and receives and acknowledgement
there is a possible replay attack.  

If an intermediary attacker intercepts the order he can impersonate
the server and offer a nonce from a previous transaction.  The client
then submits the order which is grabbed by the attacker and then the
attacker replays a previous acknowledgement with the dates changed.  A
similar attack might involve sending a fake 304 when in fact the
resource has changed.  This is what hash dates is supposed to prevent.
Am I missing something.

John Franks
john@math.nwu.edu



