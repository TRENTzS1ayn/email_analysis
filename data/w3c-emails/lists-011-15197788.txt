docno="lists-011-15197788"
received="Sat Jan 17 07:32:04 1998"
isoreceived="19980117123204"
sent="Sat, 17 Jan 1998 09:24:14 0600 (CST)"
isosent="19980117152414"
name="John Franks"
email="john@math.nwu.edu"
subject="Re: Some suggested changes to the HTTP draft"
id="Pine.LNX.3.96.980117090912.6749A100000@hopf.math.nwu.edu"
charset="USASCII"
inreplyto="Pine.LNX.3.96.980117081802.6507B100000&#64;hopf.math.nwu.edu"
expires="1"

To: Jacob Palme<jpalme@dsv.su.se>
Cc:http-wg@cuckoo.hpl.hp.com, Jim Gettys<jg@pa.dec.com>,  Nick Shelness<shelness@lotus.com>,  IETF working group on HTML in e-mail<mhtml@segate.sunet.se>


On Sat, 17 Jan 1998, John Franks wrote:
> 
> With a couple of minor well specified exceptions HTTP does not deal
> with Multipart objects as multipart, but as a single object.  There
> are no outer vs inner headers; only one set of headers.  What you
> might call inner headers are just part of the data to HTTP. The
> content of a MIME Multipart object is no different than the content of
> a binary file to HTTP.  An HTTP cache should be no more likely to use
> a heading inside a MIME Multipart object than to use a string inside
> an object of type application/octet-stream.
> 

I was wrong.  The paragraph above may describe current practice but it
is not what the spec says.  I just reread the relevant specification
sections, which I should have done before my post.

I don't know of any caches that parse multipart documents and
separately cache body parts, but I suppose they might exist.  I am not
sure why a transport protocol should be mucking about inside an entity
being transported -- even a multipart entity, but apparently it is
possible.

John Franks
john@math.nwu.edu



