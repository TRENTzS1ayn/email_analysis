docno="lists-011-2212108"
received="Thu Apr 17 11:02:56 1997"
isoreceived="19970417150256"
sent="Thu, 17 Apr 1997 12:59:37 0500"
isosent="19970417175937"
name="Fisher Mark"
email="FisherM@exch1.indy.tce.com"
subject="RE: Issues-list item &quot;CACHINGCGI&quot;"
id="c=US%a=_%p=THOMSON%l=TCEIS5-970417175937Z9532@tceis5.indy.tce.com"
charset="usascii"
inreplyto="Issues-list item &quot;CACHINGCGI&quot;"
expires="1"


To:"'vinodv@microsoft.com'"<vinodv@microsoft.com>,"'dmk@research.bell-labs.com'"<dmk@research.bell-labs.com>
Cc:"'http-wg@cuckoo.hpl.hp.com'"<http-wg@cuckoo.hpl.hp.com>

Dave, you wrote:

>Your experience may depend on what origin servers your proxy acts as
>proxy for.  None of the (HTTP/1.0) CGIs I've written (on Unix systems)
>produce any headers that would indicate anything about cachability.
>But they also don't contain Last-Modified.  I think that's typical of
>Unix-based servers and their CGIs.

I am not sure what is typical, but I have two CGI applications on our
Intranet (our Corporate Technical Memory electronic reference document
repository and our CAD Productivity Tools home-grown CAD tools
interface), both of which use caching control headers.  For CTM, cache
control is used to enforce data freshness as the repository database can
be updated at any time.  With the CAD Productivity Tools web, we must
authenticate users (using a home-brew variation on Digest
Authentication), so we need to keep the authentication cookie fairly
fresh to discourage session hijacking.

I would honestly expect to use cache control on any CGI that makes
database queries, unless the database was entirely and only controlled
by the CGI program.
================================================
Mark Leighton Fisher                   Thomson Consumer Electronics
fisherm@indy.tce.com                 Indianapolis, IN
"ViaCrypt?  Vhy not!"



