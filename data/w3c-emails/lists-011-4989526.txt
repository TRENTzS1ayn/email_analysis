docno="lists-011-4989526"
received="Tue Jul 22 14:46:59 1997"
isoreceived="19970722184659"
sent="Tue, 22 Jul 1997 17:41:24 0400"
isosent="19970722214124"
name="Joel N. Weber II"
email="devnull@gnu.ai.mit.edu"
subject="Re: Any objections to &quot;Acceptencoding: gzip, *;q=0&quot;?"
id="199707222141.RAA12983@mescaline.gnu.ai.mit.edu"
inreplyto="199707220739.JAA05987&#64;wsooti08.win.tue.nl"
expires="1"


To:koen@win.tue.nl
Cc:mogul@pa.dec.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

   From: koen@win.tue.nl (Koen Holtman)
   Date: Tue, 22 Jul 1997 09:39:19 +0200 (MET DST)

   Jeffrey Mogul:
   >
   [...]
   >  (a)Accept-Encoding: gzip, compress, no-identity
   >/* an explicit "no identity-encoding wanted" token */

   I like (a) best.  The trouble with adding q values to this header is
   that it makes selecting the `best' encoding much more complicated
   (decoding short floats and finding the highest one is too complicated
   to do in a simple shell script, for example), and this would
   discourage the deployment of servers which know about encodings.

I think it can be done in a shell script.  Noah Friedman is a sysadmin
I know who is very good at writing shell scripts.  I'm sure he could
write an adaquate script within a few hours.

Furthurmore, I think there are a lot of deployed servers which know
about q values for content-types.  If the code can't be recycled,
then the people who wrote it don't know what they're doing.

   I think that the knowledge that `gzip is better than compress is
   better than identity' can just as well be implemented at the server
   side, and implementing it there will be much cheaper.

Probably true.

However, there will be cases where identity is better than any
compressed setting, if you are on a very fast link, and the server
or client has a relatively slow processor.  These are very few;
for a modem connection, even with a 386 I'd want compression.

So I think that encoding that knowlege in the server is reasonable.



