docno="lists-011-5517383"
received="Thu Jul 24 15:29:28 1997"
isoreceived="19970724192928"
sent="Thu, 24 Jul 1997 15:06:16 0700"
isosent="19970724220616"
name="Roy T. Fielding"
email="fielding@kiwi.ics.uci.edu"
subject="Re: Any objections to &quot;Acceptencoding: gzip, *;q=0&quot;?"
id="9707241520.aa24741@paris.ics.uci.edu"
inreplyto="33D7A322.89F&#64;parc.xerox.com"
expires="1"

To: Larry Masinter<masinter@parc.xerox.com>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


>If you merely look at the specifications, there is enough
>evidence that HTTP/1.0 had intended the "accept*" headers
>to be consistent and that the distinctions in HTTP/1.1 were
>merely editorial oversight because different people wrote
>different parts. From that point to not require a burden
>of proof in order to reinstate consistency.

Sorry, that's nonsense.  The specifications are different because
the implementations are different.  Henrik and I spent well over a
year looking at different implementations in order to derive the
syntax for each header field -- had they been the same, we would have
been overjoyed to use a single syntax.  The most painful thing about
the HTTP spec work was dealing with shortsighted designs and then
having to explain them to others.

There is no q-value for Accept-Encoding because the following two
fields are not equivalent

   Accept-Encoding: x-gzip;q=1, x-compress;q=1

   Accept-Encoding: x-gzip, x-compress

for any of the existing server implementations of HTTP/1.x.
It is therefore wrong for the specification to suggest that it would be.

If such a change is made, then there must also be a requirement (not a note)
that prevents the use of a q-value with any encoding other than identity.
Otherwise, you will have changed the protocol.

.....Roy



