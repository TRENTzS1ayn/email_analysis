docno="lists-011-6217795"
received="Tue Jul 29 11:39:05 1997"
isoreceived="19970729153905"
sent="Tue, 29 Jul 1997 20:35:13 +0200 (MET DST)"
isosent="19970729183513"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: SetCookie2: &quot;additive&quot; vs. &quot;independent&quot;"
id="199707291835.UAA26959@wsooti08.win.tue.nl"
charset="USASCII"
inreplyto="01ILT3O3B5AQ00517U&#64;SCI.WFBR.EDU"
expires="1"


To: Foteos Macrides<MACRIDES@sci.wfbr.edu>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,http-state@lists.research.bell-labs.com

Foteos Macrides:
>
[...]
>The problem is that you're counting on $Version=0; being treated
>as a bad cookie by the old server or script, and don't know what error
>handling it's using.  It indeed would be desireable for the UA to
>communicate that it supports version 1 or greater cookie handling in
>those cases for which it is using cached version 0 cookies and doesn't
>yet know if the server or script can handle new cookies.  The simplest,
>most efficient way might be to send:
>
>Cookie2: $Version="1"
>Cookie: realoldnameA=realoldvalueA; realoldnameB=realoldvalueB[; ...]

I very much support this way of doing things.  I think we have to
assume, until it is proven otherwise, that a lot of old-style CGI
scripts out there will break on seeing extra version stuff in the
Cookie header.  Some old style scripts may even do consistency checks
which cause them to go into some error recovery mode if they see
cookies with version stuff in it.

Transmitting the `I can do cookie-2' info in an extra header is the
only safe way.

>Fote

Koen.



