docno="lists-011-6834498"
received="Fri Aug  1 07:36:22 1997"
isoreceived="19970801113622"
sent="Fri, 01 Aug 1997 10:33:36 0500 (EST)"
isosent="19970801153336"
name="Foteos Macrides"
email="MACRIDES@sci.wfbr.edu"
subject="Re: 301/302"
id="01ILX7H4J5EQ005FER@SCI.WFBR.EDU"
charset="USASCII"
inreplyto="301/302"
expires="1"

To:yarong@microsoft.com
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


Yaron Goland <yarong@microsoft.com> wrote:
>Absolutely, but unfortunately we can't change the thousands of scripts
>already out there and I don't believe we can just say "They are broken,
>tough." As Lynx has already found out, if you don't support 301/302 in
>the broken sense you just don't work with the content out there. 301/302
>are historical artifacts and we are stuck with them.

Please consider the historical recorded when discussing these
artifacts.  The 301/302 statuses are homologous to the /htbin, /cgi-bin,
'?' non-caching rules, which as Dave Morris pointed out were in effect
before there was any HTTP RFC.

Permanent redirection of form ACTIONs is a rarity, but 302
was and still is widely used with forms for searching Internet
resources and then redirecting the UA to the appropriate resource.
The dumping of POST content and use of GET for that redirection
makes it totally safe.  It is thus a very popular information
sharing design.

The HTTP/1.0 RFC changed the meaning of 302, requiring POST
content to be redirected as well, and the POST method to be retained.
Moreover, it did not include a status for doing what *all* existing
applications were doing for 302.  They had no need for the behavior
defined in the HTTP/1.0 RFC, and did have a need for the behavior
it eliminated.  Understandably, the behavior defined in the HTTP/1.0
RFC was ignored by all applications, include those whose implementors
earnestly place a high value on standards for interoperability.

This issue was raised in discussions of early HTTP/1.1 drafts,
but instead of fixing the bug of a misdefined 302, a 303 for the desired
behavior was added.  The 303 is not, in any valid sense of the word, a
new HTTP/1.1 status.  It is the valid 302 behavior, misnumbered.

Objections to retaining the misdefinition for 302, and instead
misnumbering it as 303, were raised during that discussion.

The reply was just no.

In that case I took just no for an answer, and conducted the
experiment.

It was a fiasco.

Fote

=========================================================================
 Foteos Macrides            Worcester Foundation for Biomedical Research
 MACRIDES@SCI.WFBR.EDU         222 Maple Avenue, Shrewsbury, MA 01545
=========================================================================



