docno="lists-011-7070878"
received="Mon Aug  4 18:08:21 1997"
isoreceived="19970804220821"
sent="Mon, 4 Aug 1997 17:50:54 0700"
isosent="19970805005054"
name="Yaron Goland"
email="yarong@microsoft.com"
subject="RE: Using Content-Encoding and ContentDisposition together"
id="11352BDEEB92CF119F3F00805F14F4850354E11C@RED-44MSG.dns.microsoft.com"
inreplyto="Using Content-Encoding and ContentDisposition together"
expires="1"


To:"'mcmanus@AppliedTheory.com'"<mcmanus@appliedtheory.com>,kweide@tezcat.com
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com

I also agree that the second one is correct. We should not confuse
content-encoding with the actual file. After all I could easily be
dealing with a server where I, a server side app, send the server a
plain text file with a content-disposition of .txt and the smart server
knowing it is talking to a UA that supports compression decides to
compress on the fly.
Yaron

> -----Original Message-----
> From:Patrick McManus [SMTP:mcmanus@AppliedTheory.com]
> Sent:Saturday, August 02, 1997 11:12 AM
> To:kweide@tezcat.com
> Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com
> Subject:Re: Using Content-Encoding and Content-Disposition
> together
> 
> In a previous episode Klaus Weide said...
> 
> 
> ::
> <http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-08.txt.
> gz>.
> 
> :: This is currently being served with headers (among others)
> :: 
> ::   Content-Encoding: gzip
> ::   Content-Type: text/plain
> :: 
> :: If one wanted to add a Content-Disposition header, should that be
> :: 
> ::   Content-Disposition: xxx;
> filename="draft-ietf-http-v11-spec-08.txt.gz"
> :: 
> :: or
> :: 
> ::   Content-Disposition: xxx;
> filename="draft-ietf-http-v11-spec-08.txt"
> 
> 
> I'd argue strongly that the second one is the right way, though the
> 19.6.1 definition of Content-Disposition doesn't help much. If it
> isn't the second one, than there is no way (well, cd is just a hint,
> but you get the idea) to save an unencoded version to disk that was
> transferred encoded.. a typical reason for saving the resource to disk
> is for interoperations with other software on the client machine, and
> then if you've got no other local software that knows how to the
> decoding, you're SOL.. that's going to be a problem for platforms like
> windows and mac where the web UA may be the only thing going that
> understands 'deflate' on a typical installation..
> 
> even using the second option as the right way doesn't prevent the UA
> from
> saving a compressed version for an entity that was transferred encoded
> (a checkbox in the save-as dialog indicating that would be a good
> implementation in my mind..)
> 
> 
> :: Current usage (typically larger files, which will be saved in
> :: compressed form) suggests the first alternative.  If
> 
> fwiw - netscape for unix implements it's save-as for the above
> resource as plain text. (the second option, though it isn't driven by
> a content-disposition: header)
> 
> -P



