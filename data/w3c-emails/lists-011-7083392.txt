docno="lists-011-7083392"
received="Mon Aug  4 18:37:45 1997"
isoreceived="19970804223745"
sent="Mon, 4 Aug 1997 18:35:28 0700 (PDT)"
isosent="19970805013528"
name="David W. Morris"
email="dwm@xpasc.com"
subject="RE: Using Content-Encoding and ContentDisposition together"
id="Pine.GSO.3.96.970804183110.15586B100000@shell1.aimnet.com"
charset="USASCII"
inreplyto="11352BDEEB92CF119F3F00805F14F4850354E11C&#64;RED-44MSG.dns.microsoft.com"
expires="1"

To: Yaron Goland<yarong@microsoft.com>
Cc:"'mcmanus@AppliedTheory.com'"<mcmanus@appliedtheory.com>,kweide@tezcat.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com,http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com




On Mon, 4 Aug 1997, Yaron Goland wrote:

> I also agree that the second one is correct. We should not confuse
> content-encoding with the actual file. After all I could easily be
> dealing with a server where I, a server side app, send the server a
> plain text file with a content-disposition of .txt and the smart server
> knowing it is talking to a UA that supports compression decides to
> compress on the fly.

Me too ... because as an application which created a compressed file
wanted it to stay compressed when the UA received it.  I recently 
received a file of xx.txt.gz ... had the UA ungzip it to show it and
then save it as xx.txt.gz but uncompressed.

But I'm not sure that the right solution isn't a new set of transfer
encodings or something similar.  It seems to me that 'content-' headers
mostly deal with describing the logical content and the confusion here
is because we are describing both logical content and transfer encoding.

Dave Morris



