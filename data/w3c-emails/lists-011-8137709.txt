docno="lists-011-8137709"
received="Tue Aug 12 10:55:36 1997"
isoreceived="19970812145536"
sent="Tue, 12 Aug 1997 12:53:41 0500 (CDT)"
isosent="19970812175341"
name="John Franks"
email="john@math.nwu.edu"
subject="Re: REVERSION"
id="Pine.SUN.3.96.970812125249.10474B100000@hopf.math.nwu.edu"
charset="USASCII"
inreplyto="REVERSION"
expires="1"

To:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com



On Tue, 12 Aug 1997, Josh wrote:

> 
> I request to a 1.1 server:
> GET http://www.foo.com/fo.html HTTP/1.0
> 
> So, what version is this ?:
> 
> HTTP/1.N 200 OK
> Server: toaster/2.0 
> Content-Length: 1024
> Cache-Control: minfree=0
> 
> 

If the request is to a 1.1 server the response should be HTTP/1.1...
I'll assume that is what you meant.  Then if "Cache-Control: minfree=0"
is defined in HTTP/1.N the message version by my definition would be
1.N.  A 1.M client being told that the message version is 1.N when M < N
is not too useful, but it knows to expect headers it does not
understand.  However, the 1.N version information might be of use to a
proxy between the two.

If you meant what is the message version if (as I believe is currently
the case) "Cache-Control: minfree=0" is undefined in any version of
HTTP then I don't know.  I guess a more careful definition would take
account of that "experimental" case.  

> 
    Klaus Weide wrote:
> > > As given by your formal definition, the "[message] version"
> > > can be trivially derived from the
> > > message.  It just requires tables of all headers defined by the various
> > > protocol versions, nothing else.  Therefore it is totally redundant.
> > > 
> > 
> Well, the table will presumably evolve over time, with
> protocol revisions, extensions, what have you...
> In the proxy, you wont have the same table to generate the
> version as you do in the server..  One may
> be older than the other and may compute a different
> version..
> If the computed version number was attached to the message/entity
> there wouldnt be a need to recompute it or any ambiguity.
> 

And at the very least the redundancy adds robustness.

> 
> At this point, its academic.  I beleive that the response
> version should be the entity/message version, it seems 
> that others feel it should be the server's version.
> Currently, its the server's version
> 

Agreed.

> Despite which is better, it would take a serious compelling
> breakage to change it, which isnt the case.  
> 

Agreed.


John Franks Dept of Math. Northwestern University
john@math.nwu.edu



