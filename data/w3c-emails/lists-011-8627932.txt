docno="lists-011-8627932"
received="Fri Aug 29 12:52:03 1997"
isoreceived="19970829165203"
sent="Fri, 29 Aug 1997 14:47:53 0500 (CDT)"
isosent="19970829194753"
name="Klaus Weide"
email="kweide@tezcat.com"
subject="Re: 301/302"
id="Pine.SUN.3.95.970829135349.8051M100000@huitzilo.tezcat.com"
charset="USASCII"
inreplyto="199708291831.UAA15800&#64;wsooti08.win.tue.nl"
expires="1"

To: Koen Holtman<koen@win.tue.nl>
Cc:http-wg%cuckoo.hpl.hp.com@hplb.hpl.hp.com


On Fri, 29 Aug 1997, Koen Holtman wrote:

> Klaus Weide:
> >
> [...]
> >The message where I proposed what is summarized above is at 
> ><URL: http://www.ics.uci.edu/pub/ietf/http/hypermail/1997q3/0402.html>.
> >(For some reason it doesn't show up immediately when one follows the
> >links into the archive from the Issues Page.)  There were several replies
> >that indicated agreement.
> 
> Being one of the people in Munich, I can report that we had no good
> reasons to prefer swapping over allocating a new code, it is just that
> we preferred swapping slightly more.  I also recall that we thought
> that swapping was the solution most often mentioned on the mailing
> list.
> 
> I do not think it is useful to spend too much time arguing which of
> the two is the better solution, we need to pick one and move on. 
> 
> Klaus, please tell us whether you can live with the spec using the
> swapping solution.  If you think that swapping is evil, we can try to
> get consensus on the 307 solution.  I for one can live with both
> solutions, and I think this is true for all people I discussed it with
> in Munich.

Given that, I would much really prefer to see consensus reached on the 307
proposal.

The swapping proposal has the advantage that it looks simpler.  It would
be a nice thing if this was the first HTTP RFC to be published, with no
prior history.  It is also easier to remember as a catchword, so I can
understand why it dominated the discussion.

IMO the alternative
 - takes account of the fact that previous RFCs have specified otherwise,
 - is better for those who have taken previous specs about 302 seriously,
 - is better for those who have taken RFC 2068 about 303 seriously,
 - is better for possible future use of 307 (now 302) functionality.

As an example for the 2nd and 3rd point, I offer Lynx as client
implementation.  A claim that no other (including server side) current
implementation of 303 exists which wwoul break ("The cat isn't really out
of the bag") would have to show this not only for servers in the usual 
sense, but for all CGI scripts etc.  

The disadvantages:
 - one more response code used,
 - an "aesthetically" less pleasing spec ("another wart"),
 - slightly less trivial editing changes.

I think the advantages outweigh the disadvantages.


    Klaus



