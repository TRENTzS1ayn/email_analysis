docno="lists-012-0299038"
received="Wed Feb 25 09:10:32 1998"
isoreceived="19980225141032"
sent="Wed, 25 Feb 1998 12:08:53 0500 (EST)"
isosent="19980225170853"
name="Scott Lawrence"
email="lawrence@agranat.com"
subject="Re: Why a chain?"
id="Pine.LNX.3.96.980225120149.1271I100000@alice.agranat.com"
charset="USASCII"
inreplyto="98Feb25.085453pst.&quot;52396(3)&quot;&#64;alpha.xerox.com"
expires="1"

To:Mike_Spreitzer.PARC@xerox.com
Cc:http-wg@cuckoo.hpl.hp.com



On Wed, 25 Feb 1998 Mike_Spreitzer.PARC@xerox.com wrote:

> Let me illustrate my question by asking for an analysis of the following
> situation.  Consider a rendering server whose job is to accept GET requests for
> arbitrary URIs and always respond with entities whose MIME type is some
> compressed bitmap type suitable for quick blasting onto a TV screen.  When
> asked to GET a URI, this server acts as a client to GET both the requested URI
> and any inlined images, then renders them all together to create the compressed
> bitmap response.  This is a non-chain shape: a request into a server causes
> multiple requests to go out of that server.  Among the questions I wonder about
> are: (1) is it fair to say this server is an "HTTP/1.1 server"?

  It certainly could be.  

> (2) is this server an "HTTP/1.1 proxy"?  

  No.  It is originating the response - I suppose that one could
characterize this as an HTTP-to-HTTP (H2H) gateway if the sources of the
composite image were obtained using HTTP, but that is essentially
irrelevant - no other server has the response that is being sent to the
user agent, so it is not acting as a proxy for another server.

> (3) what happens with the Last-Modified headers in the responses?  

  If I were creating such a thing, I would set the cache validators (both
L-M and Etag) such that they reflected the state of the composite; L-M to
the most recent L-M of the components, and the Etag some composite of the
Etag values for the components.

  



