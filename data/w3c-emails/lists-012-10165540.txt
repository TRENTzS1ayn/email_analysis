docno="lists-012-10165540"
received="Fri May 21 06:08:04 1999"
isoreceived="19990521100804"
sent="Fri, 21 May 1999 15:06:20 +1000"
isosent="19990521050620"
name="Nottingham, Mark (Australia)"
email="mark_nottingham@exchange.au.ml.com"
subject="General confusion about CacheControl headers"
id="D900F0C3D524D111971F00805F0D50E1022F4883@SV-MEEXCH01.au.ml.com"
charset="iso-88591"
expires="1"


To:http-wg@cuckoo.hpl.hp.com

Just to bring it to people's attention, and perhaps stimulate some
discussion;

I've noticed in dealing with many cache implementors, on this list and in
documentation around the net (including my own) that there's a lot of
confusion about the exact meaning of the various Cache-Control HTTP headers.

Some of this may have been cause by differences between RFC2068 and the
Draft Standard (rev-06), but I think it is more to do with their names.

Particularly:

* must-revalidate (response header), according to rev-06, does not mean that
the client (whether browser or cache) must revalidate on every request; it
means that a client cannot take liberties with the object's freshness.
proxy-revalidate is similar, but only applies to shared caches.

* no-cache as a response header does not mean that the object cannot be
stored in a cache; rather, it means that it must be revalidated upon every
request. As a request header, it means that a cached copy cannot be used.
IMHO this is unfortunately named, because of the different meanings in
different contexts.

The latest place I've noticed this is the HTTP State Management
documentation.

Regards,



Mark Nottingham
Internet Project Manager
Merrill Lynch Australasia (Melbourne)



