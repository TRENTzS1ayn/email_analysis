docno="lists-012-13370520"
received="Wed Apr  5 14:05:53 2000"
isoreceived="20000405180553"
sent="Wed, 5 Apr 2000 09:04:27 0400"
isosent="20000405130427"
name="Scott Lawrence"
email="lawrence@agranat.com"
subject="RE: Question of many METHODs"
id="001001bf9eff$78f16bc0$954768c0@agranat.com"
charset="iso-88591"
inreplyto="38EB06343CA.3707GOTO&#64;proxy"
expires="1"

To:<http-wg@cuckoo.hpl.hp.com>


> From: Kojiro Goto <goto@isp21.co.jp>
> Subject: Question of many METHODs

> I wonder if all of METHODs have been actually used (or
> implemented?) because there are so MANY METHODs
>
> [1] TRACE
>   This function is like UNIX TRCEROUTE COMMAND?
>   This is only for Debug?
>   Is it useful?

I've found it very usefull when trying to determine what various
proxies do to requests; it let's you see how the request arrived at
the server (as opposed to what you sent).

> [2] PUT
>   Is this the same as FTP PUT?

It serves the same purpose.

> [3] DELETE
>   This is to delete files on a server?

Yes.

>   If so, isn't it a security issue?

No more so than any other security issue - the server can enforce
whatever security it wants to for any method.

> [4] OPTIONS
>   What the function is for?

It was meant to be a means of probing what features the server
supported, but never really got finished in that no standard way of
expressing much usefull information was specified.

It is usefull as a no-op request for determining whether or not the
server supports 1.1, or for carrying a request to upgrade (see
"Upgrading to TLS Within HTTP/1.1" -
draft-ietf-tls-http-upgrade-04.txt; approved as Proposed Standard
but not yet out of the RFC Editors queue).

> A client (User Agent) must support all of these METHODs?

Since HTTP is always initiated by the client, it cannot be forced to
send any method, so in some sense it needn't support any methods it
doesn't want to.


--
Scott Lawrence      Director of R & D        <lawrence@agranat.com>
Agranat Systems   Embedded Web Technology   http://www.agranat.com/



