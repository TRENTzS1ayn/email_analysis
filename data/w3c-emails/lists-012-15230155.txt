docno="lists-012-15230155"
received="Thu Nov  2 15:58:35 2000"
isoreceived="20001102205835"
sent="Thu, 02 Nov 2000 11:00:47 0500"
isosent="20001102160047"
name="John Stracke"
email="francis@ecal.com"
subject="Re: Of HTTP/1.1 persistent connections and TCP Keepalive timers"
id="3A018FAF.4B58EB01@ecal.com"
charset="usascii"
inreplyto="200011020743.XAA06762&#64;breakaway.Stanford.EDU"
expires="1"


To:http-wg@hplb.hpl.hp.com
CC:Jeff.Hodges@KingsMountain.com

Jeff.Hodges@KingsMountain.com wrote:

> Q1. Do the popular browsers typically take the platform's OS's TCP defaults
> for
> the keepalive (if such capability is provided by the TCP/IP stack, and if it
> is actually used by the browser), or do they typically set this value to
> something in particular?

Sane applications typically do not use TCP keepalives.  TCP keepalives are a way
of consuming bandwidth in order to make your application less reliable.

See, keepalives are misnamed; idle TCP connections will be kept alive
indefinitely by default.  Using keepalives means you send an empty ACK every so
often to see if the remote host is still up.  The problem is that sending that
keepalive will also mean you drop the connection if some intermediate router is
down.  But, if your link is idle, you don't care whether an intermediate router
is down; you only care when you want to send data.  So keepalives just add
another way for your application to fail.

--
/==============================================================\
|John Stracke    | http://www.ecal.com |My opinions are my own.|
|Chief Scientist |=============================================|
|eCal Corp.      |Two words that do not go together: "Memorial |
|francis@ecal.com|Cookbook".                                   |
\==============================================================/



