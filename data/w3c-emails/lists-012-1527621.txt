docno="lists-012-1527621"
received="Fri Mar 27 16:51:55 1998"
isoreceived="19980327215155"
sent="Fri, 27 Mar 98 16:49:46 PST"
isosent="19980328004946"
name="Jeffrey Mogul"
email="mogul@pa.dec.com"
subject="Re: Comments on draft-ietf-http-v11-spec-rev03"
id="9803280049.AA04177@acetes.pa.dec.com"
inreplyto="5CEA8663F24DD111A96100805FFE6587031E3CA9&#64;red-msg51.dns.microsoft.com"
expires="1"


To:"'http-wg@cuckoo.hpl.hp.com'"<http-wg@cuckoo.hpl.hp.com>

    > How does
    > mark the cached object as "must-revalidate"
    > differ from
    > invalidate the cached object
    > 
    In my mind, at least, invalidate implies "never return it in
    response to any later request", and usually, that means to delete
    it from the cache. Whereas "must-revalidate" implies "keep the bits
    in the cache, but do a conditional GET (or whatever) before
    returning them in any later request".

    Thus, even if they are technically identical, the implication I
    would form upon reading the two alternatives are quite different.

I would agree that someone reading the phrase "should invalidate any
entities" who has no understanding of the "HTTP way", and who has
an understanding of CPU cache design, might understand it the way you did.

However, section 13.10 (the one in question) says specifically:

  In this section, the phrase "invalidate an entity" means that the cache
  should either remove all instances of that entity from its storage, or
  should mark these as "invalid" and in need of a mandatory revalidation
  before they can be returned in response to a subsequent request.

We added this paragraph precisely because the term "invalidate"
was being used in various different ways by different people.

-Jeff



