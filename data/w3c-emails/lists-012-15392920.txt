docno="lists-012-15392920"
received="Thu Nov  2 19:12:42 2000"
isoreceived="20001103001242"
sent="Thu, 2 Nov 2000 12:11:18 0700"
isosent="20001102191118"
name="Carl Kugler/Boulder/IBM"
email="kugler@us.ibm.com"
subject="Re: Of HTTP/1.1 persistent connections and TCP Keepalive timer"
id="OFA69C6997.D2D031D9ON8725698B.00690B5E@LocalDomain"
charset="usascii"
inreplyto="Of HTTP/1.1 persistent connections and TCP Keepalive timer"
expires="1"

To: Hyoung-Kee Choi<hkchoi@cc.gatech.edu>
Cc:http-wg@cuckoo.hpl.hp.com



>Sent by: hkchoi@cc.gatech.edu
>
>"Fielding, Roy" wrote:
>>
>> The decision on when to close is left to either side.  A server will
>> close the connection based on its resource-consumption requirements
>> which may vary substantially based on the type of server and the
>> number of clients it is intended to serve.  A client will close the
>> connection if it is connection-limited and needs to open many other
>> connections, or if it just believes in being network friendly.
>>
>> Unfortunately, none of the major browsers are network friendly,
>> so they typically ignore the connection (not even recognizing FIN
>> as an event) until they later attempt to use it again.  Most
>> general-purpose servers have a short activity time-out on
>> connections and will close the connection after that time-out
>> (typically under 10 seconds, though a high-activity server will
>> set this to one second or turn off persistent connections altogether).
>>
>
>
Ideally, you'd want the client to close the connection.  If the server
closes it, it has to keep the connection around in TIME_WAIT state for four
minutes, right?  So a server that agressively closes idle connections might
make matters worse for itself if the client makes requests more often than
once every 4 minutes (for example, the Windows 2000 IPP client polling
job-status evey minute or so).

     -Carl



