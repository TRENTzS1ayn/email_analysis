docno="lists-012-3182601"
received="Tue May 19 11:53:55 1998"
isoreceived="19980519155355"
sent="Tue, 19 May 1998 11:51:15 0700"
isosent="19980519185115"
name="Mark Stemm"
email="stemm@CS.Berkeley.EDU"
subject="Re: Nonorder processing in persistent connections"
id="3561D4A3.DDB60670@cs.berkeley.edu"
charset="usascii"
inreplyto="8B57882C41A0D1118F7100805F9F68B50340AAFB&#64;red-msg45.dns.microsoft.com"
expires="1"


To: Josh Cohen<joshco@microsoft.com>
Cc:koen@win.tue.nl,ZhouKang@cheerful.com,http-wg@cuckoo.hpl.hp.com

Josh Cohen wrote:

> I totally agree with you in preferring mux over out-of-order responses..
> While out-of-order would be on the 'good' list of things, effort
> spent on MUX would be more worthwhile, IMHO.  A MUX allows much
> more than out of order responses and the work on MUX can be leveraged
> for other things besides just HTTP.

Speaking of multiplexing protocols, a group of us at UC Berkeley and IBM
have developed a TCP implementation that does many of the same good
things as MUX (multiplexing many logical connections over a single TCP
connection), but in a way that does not require applications to be
modified or relinked with a new socket library. We do this by
integrating congestion control and loss recovery of simultaneous TCP
connections with the same destination at the sender. This implementation
is completely compatible with current TCP receivers and only requires
modifications to the sender-side networking stack.

We have a paper describing this implementation, which we call TCP-INT,
at http://www.cs.berkeley.edu/~stemm/publications/infocom98.ps.gz.

I'd appreciate your comments.

--Mark



