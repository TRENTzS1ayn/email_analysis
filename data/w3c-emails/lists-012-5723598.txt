docno="lists-012-5723598"
received="Tue Sep  1 08:19:23 1998"
isoreceived="19980901121923"
sent="Tue, 01 Sep 1998 15:11:42 +0000"
isosent="19980901151142"
name="Scott Lawrence"
email="lawrence@agranat.com"
subject="Re: Cachecontrol and Authentication"
id="35EC0EAE.87A564EC@agranat.com"
charset="usascii"
inreplyto="D900F0C3D524D111971F00805F0D50E1EED3D9&#64;SV-MEEXCH01.au.ml.com"
expires="1"


To:"Nottingham, Mark (Australia)"<mark_nottingham@exchange.au.ml.com>
Cc:http-wg@hplb.hpl.hp.com

Nottingham, Mark (Australia) wrote:

> Let's say a server has content that clients access through a 1.1-capable
> cache (this is internal, so it can be controlled). There is a section of
> the content that requires basic authentication, but the content does not
> change based upon that authentication; any user-specific changes
> controlled by the path, query and parameters.
> 
> What is the correct way to allow caches to keep, and satisfy requests
> from, a local copy, while still forcing the request to be revalidated

I believe that the correct way to do this is:

Cache-Control: must-revalidate

In addition to being controlled, I would also make it checked - look for a
1.0 revision in the Via header (so that you know whether or not you've got a
1.1 client or downstream proxy), and add 'Pragma: no-cache' header to
prevent 1.0 caches from holding it just in case.

-- 
Scott Lawrence           Consulting Engineer      <lawrence@agranat.com>
Agranat Systems, Inc.  Embedded Web Technology   http://www.agranat.com/



