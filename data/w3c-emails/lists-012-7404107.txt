docno="lists-012-7404107"
received="Tue Nov  3 20:31:06 1998"
isoreceived="19981104013106"
sent="Tue, 3 Nov 1998 12:06:25 0800 (PST)"
isosent="19981103200625"
name="David W. Morris"
email="dwm@XPASC.COM"
subject="Re: Netscape 4.5 and HTTP/1.1 AcceptEncoding"
id="Pine.GSO.3.96.981103120207.19335B100000@shell1.aimnet.com"
charset="USASCII"
inreplyto="Pine.LNX.3.96.981103141212.31614A100000&#64;hopf.math.nwu.edu"
expires="1"

To: John Franks<john@math.nwu.edu>
Cc: Dave Kristol<dmk@research.bell-labs.com>,http-wg@hplb.hpl.hp.com




On Tue, 3 Nov 1998, John Franks wrote:

> On Tue, 3 Nov 1998, Dave Kristol wrote:
> 
> I  think gzip and compress are different encodings.  The fact that
> a program called "gzip" understands both is not relevant.

me too ...

> 
> > 
> > 2) My server should not send 406, since it's only a SHOULD requirement
> > anyway.  Or perhaps it should send 406 only for HTTP/1.1 requests.
> > 
> 
> What does your server do if a client sends a request with *no* 
> Accept-Encoding?  I think that's what it should do in this case.
> (E.g. send it as application/octet-stream).
> 
> It is quite likely that there will be clients which support some
> content encodings but not all the ones you support.  I don't think you
> want your server to be in the situation where it completely refuses to
> serve a file to such clients.

Better I think is that the server maintain two versions or in this case,
uncompress on the fly ... or send a choice page that lets the user
click the link for the explicit file... my assumption being that the
request was for the resource w/o the _Z ... if the _Z is requested,
then John's approach is reasonable ... one of the things missed in
this whole mess is that the user *MAY* simply want the file delivered
unmolested and saved on the hard drive. It is quite inconvenient for
me when something is unziped or uncompressed by browsers, servers, etc.

Dave Morris



