docno="lists-012-8482614"
received="Tue Nov 17 17:58:04 1998"
isoreceived="19981117225804"
sent="Tue, 17 Nov 1998 18:55:29 +0100 (MET)"
isosent="19981117175529"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: My thoughts on issues ADAMS84b, ADAMS84"
id="199811171755.SAA24019@wsooti08.win.tue.nl"
charset="USASCII"
inreplyto="D181361D7C86D011925700805FFE898E01D09722&#64;spybem01.nap.spyglass.com"
expires="1"


To:swingard@spyglass.com(Wingard, Steve)
Cc:jg@pa.dec.com,http-wg@hplb.hpl.hp.com

Wingard, Steve:
>
>ADAMS84b (406 / Accept-Charset):
>
>To me, the main issue is that the language in 14.2 implies an
>"either/or" choice when it means to suggest optional additional
>behavior. 
>
>The description of the 406 status code (sec. 10.4.7) already says the
>response SHOULD also contain an explanatory entity (unless the response
>is to a HEAD request), *and* that the entity does not have to be
>"acceptable" to the user agent (according to the constellation of Accept
>header fields the user agent has sent).
>
>So I interpret the the clause: 
>
>   "...the server SHOULD send an error response with the 406 (not
>acceptable) status code, though the sending of an unacceptable response
>is also allowed."
>
>to mean 
>
>   "... the server SHOULD send an error response with the 406 (not
>acceptable) status code, though the character set of the response entity
>may not be acceptable to the user agent based upon the Accept-Charset
>information it provided."

No, that is probably not the intended meaning. I can't recall whether
I wrote that particular sentence but I definately wrote sentences like
it elsewhere.

The above probably refers to the usual problem of what to send as a
response for un-negotiated resources only available in a single form.
Sending an response with a known-unacceptable entity is not that good,
but sending an error response is hardly better, so in this case the
spec intends to allow the server author to freely choose between the
two evils.

No edit is required in my opinion.

>I think the SHOULD needs to stay a SHOULD, but the second part might be
>redundant given the existing language in 10.4.7.

True, one could see it as a restatement the language in 10.4.7.

Koen.



