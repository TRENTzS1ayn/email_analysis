docno="lists-012-8730821"
received="Thu Dec 10 16:55:22 1998"
isoreceived="19981210215522"
sent="Thu, 10 Dec 1998 08:50:07 PST"
isosent="19981210165007"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="RE: CacheControl and Pragma"
id="000e01be245d$244ae880$d411020d@copper.parc.xerox.com"
charset="iso-88591"
inreplyto="D900F0C3D524D111971F00805F0D50E10157FF71&#64;SV-MEEXCH01.au.ml.com"
expires="1"

To:"Nottingham, Mark (Australia)"<mark_nottingham@exchange.au.ml.com>
Cc:<http-wg@hplb.hpl.hp.com>


Mark Nottingham wrote:

> I can't find anything in the Draft that addresses the situation when
> both Cache-Control and Pragma: no-cache headers are set, and they are in
> conflict. 
> For instance, if I use
> 
> Cache-Control: must-revalidate
> Pragma: no-cache
> 
> on a HTTP response, it would be desireable to have it cached (and always
> revalidated) by HTTP 1.1 caches, and not cached by HTTP 1.0 caches.
> However, I can see nothing in the Draft about this, and some
> implementations, upon reading 14.32 Pragma, might never cache the
> object. While the action is safe, it's not ideal.
>  
> Am I missing something somewhere? Thanks.

The interaction of headers whose interaction is not specified
is not specified.

An origin server cannot depend on the precedence of
"Cache-Control: must-revalidate" and "Pragma: no-cache",
and a server (1.0 or 1.1) might ignore either or both.

Larry
-- 
http://www.parc.xerox.com/masinter



