docno="lists-012-8747192"
received="Thu Dec 10 19:09:41 1998"
isoreceived="19981211000941"
sent="Thu, 10 Dec 1998 20:07:13 +0100 (MET)"
isosent="19981210190713"
name="Koen Holtman"
email="koen@win.tue.nl"
subject="Re: CacheControl and Pragma"
id="199812101907.UAA16525@wsooti08.win.tue.nl"
charset="USASCII"
inreplyto="000e01be245d$244ae880$d411020d&#64;copper.parc.xerox.com"
expires="1"


To:masinter@parc.xerox.com(Larry Masinter)
Cc:mark_nottingham@exchange.au.ml.com,http-wg@hplb.hpl.hp.com

Larry Masinter:
>
>Mark Nottingham wrote:
>
>> I can't find anything in the Draft that addresses the situation when
>> both Cache-Control and Pragma: no-cache headers are set, and they are in
>> conflict. 
>> For instance, if I use
>> 
>> Cache-Control: must-revalidate
>> Pragma: no-cache
>> 
>> on a HTTP response, it would be desireable to have it cached (and always
>> revalidated) by HTTP 1.1 caches, and not cached by HTTP 1.0 caches.
>> However, I can see nothing in the Draft about this, and some
>> implementations, upon reading 14.32 Pragma, might never cache the
>> object. While the action is safe, it's not ideal.
>>  
>> Am I missing something somewhere? Thanks.
>
>The interaction of headers whose interaction is not specified
>is not specified.
>
>An origin server cannot depend on the precedence of
>"Cache-Control: must-revalidate" and "Pragma: no-cache",
>and a server (1.0 or 1.1) might ignore either or both.

Just to add to this: the preferred method of making responses cachable
by 1.1 caches and non-cachable by 1.0 caches is to combine
Cache-Control: something with Expires: <current time and date>.  The
interaction between these two _is_ specified.

>
>Larry

Koen.



