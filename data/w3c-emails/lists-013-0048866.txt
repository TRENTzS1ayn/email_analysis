docno="lists-013-0048866"
received="Sun Jun 10 23:12:33 2001"
isoreceived="20010611031233"
sent="Mon, 11 Jun 2001 00:13:03 +0200"
isosent="20010610221303"
name="Joris Dobbelsteen"
email="joris.dobbelsteen@mail.com"
subject="RE: http over udp?"
id="000601c0f1fa$85074ca0$0d0ba8c0@joris2k.local"
charset="iso-88591"
inreplyto="F143SOlbpH71yEXUIEA000142be&#64;hotmail.com"
expires="1"

To:"'Tapan Divekar'"<tapan_divekar@hotmail.com>
Cc:"WWW WG (E-mail)"<http-wg@cuckoo.hpl.hp.com>


Quite a late response, but I didn't have time earlier...

------Original Message-----
>From: Tapan Divekar [mailto:tapan_divekar@hotmail.com]
>Sent: Thursday, 07 June 2001 16:43
>To: joris.dobbelsteen@mail.com
>Subject: RE: http over udp?
>
>
>
>Hi Joris
>Thanks for the email. I would appreciate if you could answer
>my questions.
>>The issue is that you need some kind of session-management for the
>>'requests'. Having this solves requests over UDP greater than
>64KB and such
>>transmission back. Also, the client needs to know what it's
>requests are.
>>This is required in the case of multiple requests.
>>
>
>
>
>Im quite new as far as working of HTTP protocol is concerned..
>Could you pl.
>tell me more about the session mgmt protocol here?
>Is 64kb is a bottleneck for the UDP requests?
>
Depends on what you want. Relatively small HTML pages, some art and stuff
usually keep below 64kb, but there are pages that are way larger, and this
is even more common for art. Not to talk about downloads or IE's extensions,
like ActiveX Controls
>
>>The proposal on the ATT research site, still relies on TCP, however:
>>connections are made by the server rather than the client. So
>STILL TCP!!!
>>not solely UDP.
>>
>>A nice feature would be the easy implementation of HOL
>blocking / async
>>transfers of all files.
>
>Could you please elaborate more on this?
>
HOL blocking stands for Head-Of-Line Blocking: meaning if you send two
requests (using one connection-persistent connection) using TCP, one for a
large PDF file and another for a small image file, then first the large PDF
file must be downloaded before you can get the image. If you send the image
first and then the PDF file, this would be much nicer in some instances.

>
>Also it's nice for transports that can have packet
>>drops: live audio/video. But for this there are other
>protocols that do
>>better than HTTP.
>
>Which protocols other than HTTP would you consider better here? TCP?
>
No, MMS (Microsoft), RTSP (Apple Quicktime, Realplayer). These are designed
solely for audio/video and work on UDP/TCP and support multicast.
I hope you understand how IP, UDP, TCP, HTTP, ..... are related to
eachother...

IP is designed for addressing computers and routing requests easily.
TCP is a connection-based reliable protocol that works on top of IP.
UDP is a connection-less unreliable datagram protocol that works on top of
IP.
HTTP is a application protocol that usually works on top of TCP.

>
>
>>Next you need enourmes time-outs, since you don't know
>whether a server is
>>still handling your request or crashed or 'bobby' knows what else...
>>
>
>Ya, thats true
>Thanks a lot.. appreciate your help
>Tapan
>
>>
>>- Joris
>>
>

- Joris



