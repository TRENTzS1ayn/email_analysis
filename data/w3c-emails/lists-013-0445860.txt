docno="lists-013-0445860"
received="Tue Oct  9 22:01:54 2001"
isoreceived="20011010020154"
sent="Tue, 9 Oct 2001 13:58:41 0700"
isosent="20011009205841"
name="Larry Masinter"
email="LMM@acm.org"
subject="body on HEAD errror response"
id="NDBBKEBDLFENBJCGFOIJEELIFLAA.LMM@acm.org"
charset="usascii"
expires="1"

To:"HTTP Working Group"<http-wg@hplb.hpl.hp.com>
Cc:<http-wg@cuckoo.hpl.hp.com>


I believe that the HTTP spec is wrong, and should say that 2xx
responses to HEAD must not contain a body, but other responses
should.

==========================
We're having a problem reconciling the HTTP 1.1 spec with what 
servers are actually doing.  The HTTP spec says (section 4.3, message 
body):

    For response messages, whether or not a message-body is included with
    a message is dependent on both the request method and the response
    status code (section 6.1.1). All responses to the HEAD request method
    MUST NOT include a message-body, even though the presence of entity-
    header fields might lead one to believe they do. All 1xx
    (informational), 204 (no content), and 304 (not modified) responses
    MUST NOT include a message-body. All other responses do include a
    message-body, although it may be of zero length.

and also

9.4 HEAD

    The HEAD method is identical to GET except that the server MUST NOT
    return a message-body in the response. The metainformation contained
    in the HTTP headers in response to a HEAD request SHOULD be identical
    to the information sent in response to a GET request. This method can
    be used for obtaining metainformation about the entity implied by the
    request without transferring the entity-body itself. This method is
    often used for testing hypertext links for validity, accessibility,
    and recent modification.

But, in spite of this, every server we test against (and every one 
we've written ourselves) returns a body on ERROR responses to the 
HEAD request (e.g., HTML explaining the error on a 400, 401, 404, and 
so on).
=================================



