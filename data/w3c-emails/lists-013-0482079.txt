docno="lists-013-0482079"
received="Wed Oct 10 08:32:36 2001"
isoreceived="20011010123236"
sent="Wed, 10 Oct 2001 08:31:07 +0100"
isosent="20011010073107"
name="Matt Black"
email="MBlack@Smart421.com"
subject="Server closing socket without notice"
id="26A421F3F048114AB7EB808AEC0A53FD61F30D@smrtipsmsdev01.smart421.com"
charset="iso-88591"
expires="1"


To:"'http-wg@cuckoo.hpl.hp.com'"<http-wg@cuckoo.hpl.hp.com>

I am seeing SilverStream servers closing HTTP/1.1 connections immediately
after a small random number of GET requests without notice - no 'connection:
close' response header is returned with the last successful request.

Is this behaviour consistent with
a) the spirit of the RFC
b) the letter of the RFC

I understand that servers will close idle connections after some time, but
in this case a FIN packet arrives typically within 0.5 seconds of the last
successful request, which may be before or after the client has sent the
next request.  The client is not pipelining requests - it waits for a
response to each request before submitting the next - but does not expect
the behaviour described above.  The servers in question are not stressed.

If this behaviour is normal, can you confirm the natural corollary to this -
that any HTTP/1.1 client must cope with a 'null' response to any 2nd or
subsequent HTTP/1.1 request by creating a new socket and re-submitting the
request - even where no 'connection: close' response header was included
with the previous response?

Thanks,
Matt Black



