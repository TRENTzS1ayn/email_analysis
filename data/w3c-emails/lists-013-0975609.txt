docno="lists-013-0975609"
received="Wed Jan 30 13:44:08 2002"
isoreceived="20020130184408"
sent="Wed, 30 Jan 2002 14:43:22 +0100 (CET)"
isosent="20020130134322"
name="Rob J Meijer"
email="rmeijer@xs4all.nl"
subject="Re: How to make my application a server?"
id="Pine.BSI.4.10.10201301430590.12927100000@xs4.xs4all.nl"
charset="USASCII"
inreplyto="001101c1a974$69266930$5a010a0a&#64;HOANGPHAT.COM"
expires="1"

To: Viet Thang<thangpv@hoangphat.com.vn>
cc: HTTP MailingList<http-wg@hplb.hpl.hp.com>,http-wg@cuckoo.hpl.hp.com




On Wed, 30 Jan 2002, Viet Thang wrote:

> Hi all,
> I don't know it is a suitable group to ask you this question. But I hope someone of you can help me.
> In my application I would like to accept request from a web browser, process it upon the link and do something, for example  show a form, a message to user at server ( not to browser- it sends browser nothing). 
> 
> All ideas are appreciated 
> 
> thanks in advance!
> 

This flow seems flawed.
You either:

* Talk with the browser by letting your application be a simple webserver
  (probably on some non standard port)
Or:
* Put a small CGI on the server that proccesses the reqests from the
  client/browser, from this creates a request (for example a rpc call) to
  your application using whatever protocol you like (sunrpc,sysV IPC,
  XML-RPC, SOAP or whatever taste of IPC you, or the enviroment you wrote
  your application in is most comfortable with). Your application
  responds to the cgi, and the cgi processes your response and sends
  a suitable response to the client/browser.

In many cases making your application into a UDP based server on the same
host as the server (making UDP a reliable protocol what it otherwise is
not), and having a simple cgi (or server module if you expect heavy 
loads) convert the client's requests into simple UDP based request, and
converting the responses of your application in order to respond to the client.

Hope this helps.

Rob



