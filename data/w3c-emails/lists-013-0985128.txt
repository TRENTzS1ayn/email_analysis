docno="lists-013-0985128"
received="Thu Jan 31 07:04:05 2002"
isoreceived="20020131120405"
sent="Thu, 31 Jan 2002 13:58:09 +0700"
isosent="20020131065809"
name="Viet Thang"
email="thangpv@hoangphat.com.vn"
subject="Re: How to make my application a server?"
id="003701c1aa24$a6000bd0$5a010a0a@HOANGPHAT.COM"
charset="iso-88591"
inreplyto="Pine.BSI.4.10.10201301430590.12927100000&#64;xs4.xs4all.nl"
expires="1"


To:"Rob J Meijer"<rmeijer@xs4all.nl>
Cc:"HTTP MailingList"<http-wg@hplb.hpl.hp.com>,<http-wg@cuckoo.hpl.hp.com>

hi,
thanks for all your comments!
My application could not act as a server in the way we can use the server side script on it. Rob j Meijer's first solution seems rather suitable. Yes, that is really what I want to become my app. become.
It doesn't matter I listen to browser on what port, but I must parse the request from browser, Could you tell me more clearly about it?

Thanks!!!

----- Original Message ----- 
From: "Rob J Meijer" <rmeijer@xs4all.nl>
To: "Viet Thang" <thangpv@hoangphat.com.vn>
Cc: "HTTP MailingList" <http-wg@hplb.hpl.hp.com>; <http-wg@cuckoo.hpl.hp.com>
Sent: Wednesday, January 30, 2002 8:43 PM
Subject: Re: How to make my application a server?


> 
> 
> On Wed, 30 Jan 2002, Viet Thang wrote:
> 
> > Hi all,
> > I don't know it is a suitable group to ask you this question. But I hope someone of you can help me.
> > In my application I would like to accept request from a web browser, process it upon the link and do something, for example  show a form, a message to user at server ( not to browser- it sends browser nothing). 
> > 
> > All ideas are appreciated 
> > 
> > thanks in advance!
> > 
> 
> This flow seems flawed.
> You either:
> 
> * Talk with the browser by letting your application be a simple webserver
>   (probably on some non standard port)
> Or:
> * Put a small CGI on the server that proccesses the reqests from the
>   client/browser, from this creates a request (for example a rpc call) to
>   your application using whatever protocol you like (sunrpc,sysV IPC,
>   XML-RPC, SOAP or whatever taste of IPC you, or the enviroment you wrote
>   your application in is most comfortable with). Your application
>   responds to the cgi, and the cgi processes your response and sends
>   a suitable response to the client/browser.
> 
> In many cases making your application into a UDP based server on the same
> host as the server (making UDP a reliable protocol what it otherwise is
> not), and having a simple cgi (or server module if you expect heavy 
> loads) convert the client's requests into simple UDP based request, and
> converting the responses of your application in order to respond to the client.
> 
> Hope this helps.
> 
> Rob
> 
> 
> 



