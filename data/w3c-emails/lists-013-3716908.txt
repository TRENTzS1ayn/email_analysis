docno="lists-013-3716908"
received="Tue Dec 10 11:28:19 2002"
isoreceived="20021210162819"
sent="10 Dec 2002 11:28:08 0500"
isosent="20021210162808"
name="Scott Lawrence"
email="lawrence@world.std.com"
subject="Re: contentencoding and range headers"
id="uof7tu9d3.fsf@world.std.com"
charset="usascii"
inreplyto="JIEGINCHMLABHJBIGKBCOEGJFPAA.julian.reschke&#64;gmx.de"
expires="1"

To:"Julian Reschke"<julian.reschke@gmx.de>
Cc:"Scott Lawrence"<lawrence@world.std.com>,"Stefan Eissing"<stefan.eissing@greenbytes.de>,<ietf-http-wg@w3.org>



"Julian Reschke" <julian.reschke@gmx.de> writes:

> I agree that it depends on the definition of the entity body, which is [1]:
> 
> entity-body := Content-Encoding( Content-Type( data ) )
> 
> So I think Stefan's analysis is correct...

But Accept-Encoding does not _require_ the server to use the specified
encoding, it _offers_ to accept it.  So the request:

 GET /foo HTTP/1.1
 Host: example.com
 Accept-Encoding: gzip
 Range: 10000-19999

might return two completely different parts of /foo depending on
whether or not the server chose to apply the Content-Encoding.  Since
HTTP is stateless, you can't even count on any given server making the
same choice each time.

If you believe that interpretation, then I think you must conclude
that the combination is not very useful to the client.

The server I've worked on most didn't ever use Content-Encoding, so
it ignored Accept-Encoding.



