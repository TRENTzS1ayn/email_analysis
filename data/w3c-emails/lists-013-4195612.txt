docno="lists-013-4195612"
received="Wed Apr 30 12:53:30 2003"
isoreceived="20030430165330"
sent="Wed, 30 Apr 2003 12:50:00 0400 (EDT)"
isosent="20030430165000"
name="Pierre Phaneuf"
email="pphaneuf@nit.ca"
subject="Re: mistake in section 8.1.2 of RFC2616?"
id="3EAFFFBA.10402@nit.ca"
charset="usascii"
inreplyto="Pine.BSF.4.53.0304301036580.91392&#64;measurementfactory.com"
expires="1"


To:ietf-http-wg@w3.org





Alex Rousskov wrote:

>> In section 8.1.2, you can read the following:
>> 
>>> Once a close has been signaled, the client MUST NOT send any more
>>> requests on that connection.
>> 
>> Is it just me, or that "MUST NOT" would forbid pipelining? A
>> pipelining client MAY send more requests, but they will be ignored
>> by the server and it should be prepared to that possibility
>> (section 8.1.2.2 mentions that a client MUST be prepared to the
>> server closing the connection before it handled them all).
> 
> This is not meant to prevent pipelining. In this context, you should 
> interpret the above RFC wording as "once the close signal has been 
> received by the client, the client MUST NOT send any more requests on
> that connection." as opposed to your current interpretation of "once
> the close signal has been sent by the server, the client ..."

I know that this is the spirit of the document, but maybe it should be 
clarified in the errata.

I also suspect that it could be fine sending more requests to the server 
in a simplistic client implementation, since they will be harmlessly 
ignored by the server, but on the other hand, this requires being ready 
to re-send those requests, so while you're at it, better do it right.

Thank you!

-- 
Pierre Phaneuf
Mad Scientist, NITI R&D



