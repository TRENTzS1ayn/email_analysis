docno="lists-013-4539578"
received="Sun Jun  8 12:40:35 2003"
isoreceived="20030608164035"
sent="Sun, 8 Jun 2003 09:13:42 0600 (MDT)"
isosent="20030608151342"
name="Alex Rousskov"
email="rousskov@measurementfactory.com"
subject="Re:Re: Proxy and HTTP protocol versions"
id="Pine.BSF.4.53.0306080858360.85770@measurementfactory.com"
charset="USASCII"
inreplyto="Law14OE14ETiTSUPDc0003a4f0&#64;hotmail.com"
expires="1"

To: Sudha<ssudhaiyer@hotmail.com>
Cc:ietf-http-wg@w3.org




On Sat, 7 Jun 2003, Sudha wrote:

> My proxy server would always forward it to one configured server. I
> don't have to lookup the request header. I don't have to provide any
> caching feature.

Use a TCP tunnel then. You do not need an HTTP proxy. Moreover, you
may not need a TCP tunnel if your clients can connect to the origin
server directly instead.

> The reason I need this proxy is because, I want a way to forward all
> requests to a centralized server. And I want to write one on my own.

A TCP tunnel should work just fine, then. You can write your own or
use an existing one. For every TCP connection it accepts, the tunnel
should establish a TCP connection to the origin server and shovel
octets until either side terminates the connection. Keep in mind that
some networking gear (like an L7 switch, for example) can do that for
you.

Again, if the "centralized server" address can be public, then you do
not need a tunnel at all.

> The end server that I would be sending the request to is HTTP 1.1
> compliant. But, I doubt if the server properly implements
> 'Keep-alive' etc.

You contradict yourself. An HTTP/1.1 compliant server MUST properly
support persistent connections, among other things. I doubt there are
HTTP/1.1 compliant servers out there (because there is no test for
origin server compliance yet), but something like Apache should work
well enough.

> My question is, if there din't exist a proxy between the browser and
> the server, won't the browser and the server handle all these
> differences ?

Yes, they would.

> In which case, how should a proxy now make a difference?

Nobody said an HTTP proxy would make a difference in your case! The
reason to have a proxy is to add some new functionality (e.g., request
aggregation or caching or virus checking). In your case, the only
functionality that an origin server cannot support is (I am guessing)
a public IP address. If the origin server address is public, you do
not need a tunnel.

> Can't I just forward the request or just tunnel it as if it were
> HTTPS, and be assured that it works?

You can tunnel as if it were TCP. That is why I started with asking
you these questions instead of answering yours. :-)

HTH,

Alex.

-- 
                            | HTTP performance - Web Polygraph benchmark
www.measurement-factory.com | HTTP compliance+ - Co-Advisor test suite
                            | all of the above - PolyBox appliance



