docno="lists-013-4684995"
received="Tue Jan 28 11:16:18 2003"
isoreceived="20030128161618"
sent="28 Jan 2003 11:14:03 0500"
isosent="20030128161403"
name="Scott Lawrence"
email="lawrence@world.std.com"
subject="Re: expect header, clarification of status"
id="uu1ftw8tw.fsf@world.std.com"
charset="usascii"
inreplyto="0F8D753E-32D6-11D7-A23E00039384827E&#64;greenbytes.de"
expires="1"

To: Stefan Eissing<stefan.eissing@greenbytes.de>
Cc:ietf-http-wg@w3.org




> > What problems?

Stefan Eissing <stefan.eissing@greenbytes.de> writes:

> If a client submits a request against a HTTP/1.1 server with:
> 
> Expect: greenbytes-super-feature-enabled
> 
> it has no way, in my understanding, to know if
> 1) the feature is supported
> 2) the feature is unsupported and the server complies only to 2068
> 
> That makes the Expect header useless for extension checks until the
> protocol version is incremented some (far) time in the future.

> "Expect" is a very useful feature, but in order to use it reliably, one
> needs a way to discover its support for a certain resource. Don't
> you agree?

The same might be said of several HTTP features, but there just isn't
a mechanism in the protocol to help you right now.  We tried and
failed to make a richer OPTIONS response; that might have been a good
answer. 

I'm afraid that what you are stuck with is that if you want to extend
the protocol and be able to determine reliably whether or not that
extension is supported by a given resource, then you must also specify
a robust mechanism for checking for that support.

--
Scott Lawrence        
  http://world.std.com/~lawrence/
  Actively seeking work 



