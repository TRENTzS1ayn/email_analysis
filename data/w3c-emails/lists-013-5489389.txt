docno="lists-013-5489389"
received="Thu Oct 23 10:36:02 2003"
isoreceived="20031023143602"
sent="Thu, 23 Oct 2003 10:36:18 0400"
isosent="20031023143618"
name="Patrick R. McManus"
email="mcmanus@ducksong.com"
subject="Re: Chained proxies, persistent connections, authentication"
id="20031023143618.GA3490@ducksong.com"
charset="usascii"
inreplyto="2F9121839AC40648B42FBC550E932A71673A2D&#64;farnsworth.EUROPE.CLEARSWIFT.COM"
expires="1"

To: Rob Maidment<rob.maidment@clearswift.com>
Cc:"'ietf-http-wg@w3.org'"<ietf-http-wg@w3.org>



[Rob Maidment: Oct 23 15:31]
> 
> I am currently investigating a problem that occurs in this type of scenario:
> 
> browser -> proxy1 -> proxy2 -> server
> 
> Proxy1 is actually a Squid proxy, it is passing though the end-user
> authentication to proxy2.  The problem occurs because proxy1 is reusing
> connections to proxy2 for requests from different users, but proxy2 is only
> authenticating the first request on each new connection.  This means that
> subsequent requests are not being authenticated, and these requests are
> being treated as if they originated from the first user to use the
> connection.  
> 
> Which proxy is at fault?  I understood that one of the intended benefits of
> persistent connections was that a proxy would only have to authenticate the
> first request on each connection, which is a huge performance benefit.  

proxy2 is at fauilt. HTTP transactions are stateless.



