docno="lists-013-6538393"
received="Tue Apr 20 23:40:08 2004"
isoreceived="20040421034008"
sent="Wed, 21 Apr 2004 04:39:59 +0100"
isosent="20040421033959"
name="Jamie Lokier"
email="jamie@shareable.org"
subject="Re: Using OPTIONS for optional feature discovery &ndash;&ndash; advice"
id="20040421033959.GA24336@mail.shareable.org"
charset="usascii"
inreplyto="1082515141.16857.255.camel&#64;localhost.localdomain"
expires="1"

To: Scott Lawrence<scott@skrb.org>
Cc: Lisa Dusseault<lisa@osafoundation.org>,ietf-http-wg@w3.org



Scott Lawrence wrote:
> 00>   Note that byte ranges are already used in HTTP to do partial
> 00>   downloads (GET method).   However, they are not defined for uploads,
> 00>   and there are some missing pieces for uploads. For example, the HTTP
> 00>   specification has no way for the server to send errors if the byte
> 00>   range in a PUT is invalid. Byte ranges could be made to work in this
> 00>   specification but they're not the only way to do partial
> 00>   modifications.  Since reliable and tested patch algorithms already
> 00>   exist, those are preferred.
> 
> Just a comment here... the Range mechanism can (theoretically at least)
> operate on units other than bytes, and can do multiple ranges.  I
> think that it could be used for the sort of thing you envision, but I
> agree that a patch-like mechanism is probably more robust.

PUT with a byte range would be useful in another context: "resume upload".

Although PUT with multiple byte ranges could be used for partial
patch-like modifications, that doesn't offer any way to insert or
delete regions so as to move other parts of the file, or to truncae
the file.  The byte range syntax could be extended, but I don't see
the point.

-- Jamie



