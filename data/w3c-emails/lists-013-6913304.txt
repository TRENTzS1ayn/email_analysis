docno="lists-013-6913304"
received="Thu Apr 29 23:41:55 2004"
isoreceived="20040430034155"
sent="Thu, 29 Apr 2004 21:41:38 0600 (MDT)"
isosent="20040430034138"
name="Alex Rousskov"
email="rousskov@measurementfactory.com"
subject="Re: PATCH, gdiff, and randomaccess I/O"
id="Pine.BSF.4.58.0404292133370.79581@measurementfactory.com"
charset="USASCII"
inreplyto="1083282729.30884.96.camel&#64;bog"
expires="1"

To: Justin Chapweske<justin@chapweske.com>
Cc: Lisa Dusseault<lisa@osafoundation.org>, HTTP working group<ietf-http-wg@w3.org>




On Thu, 29 Apr 2004, Justin Chapweske wrote:

> One reasonable implementation might be to keep an I/O log of all of
> the operations that were performed on the resource.  Once the device
> is finished with its modifications, the PATCH method would be issued
> with a payload that is basically a replay of the local I/O log.

I would not call the above "random I/O" pattern because you are doing
a single fetch and a single patch operation as far as protocol is
concerned. The proposed PATCH method and even existing diff formats
seem to support the above use case reasonably well.

Can you think of any reason why PATCH with common diff formats cannot
support the above efficiently?

I was under impression that you are talking about supporting large
volume of micro updates (e.g., remove a single character in the middle
of a 100MB file) that must be committed in real time, one by one.
Doing so efficiently may require mechanisms different than proposed
PATCH.  However, your example seem to be within PATCH scope! Sorry if
I misunderstood the true meaning of the "random access I/O" term.

Thanks,

Alex.



