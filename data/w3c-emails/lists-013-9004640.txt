docno="lists-013-9004640"
received="Wed Oct 14 13:19:07 1998"
isoreceived="19981014171907"
sent="Wed, 14 Oct 1998 09:29:23 0700"
isosent="19981014162923"
name="Gregory Alan Bolcer"
email="gbolcer@gambetta.ics.uci.edu"
subject="Issue: Synchronous vs. Asynch."
id="9810140929.aa05250@paris.ics.uci.edu"
expires="1"

To:ietf-swap@w3.org


This might be an issue to consider.
Assume that you invoke a remote workflow
process across the Internet.  You monitor
the changes wither by subscribing to change
events or polling using the SWAP monitoring
methods.  You (the workflow at your end) decide
that things have changed and you want to 
stop or suspend the remote process (or even
just change the values in some significant way).  Do
you invoke the appropriate suspend commands
and wait to receive the termination values or
do you send the termination commands and subscribe for
the terminations values?   The question is,
should this take place synchronously or asynchronously?
I would argue for the latter as it implies less intrusive control
on a foreign system.   As a long running process
will definitely have to do some cleanup that may well go beyond
reasonable http and rpc timeouts.  

The analogy is a regular computer operating system.
When you are the user kill a process, from your standpoint
it looks like you are actually doing the termination,
but what is happening is you are 'requesting' that the
operating system terminte the process, which it
evaluates, schedules, completes, and cleans up.

Any comments?

Greg



