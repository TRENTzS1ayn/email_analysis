docno="lists-013-9210007"
received="Thu Oct 15 10:07:23 1998"
isoreceived="19981015140723"
sent="Thu, 15 Oct 1998 07:07:13 0700"
isosent="19981015140713"
name="Michael Oliver"
email="ollie@opentext.com"
subject="RE: Issue: Synchronous vs. Asynch."
id="003701bdf845$1b59be20$4265ecd0@olient"
charset="iso-88591"
inreplyto="8625669E.0049EE8C.00&#64;dstsmtp1.dstsystems.com"
expires="1"

To:<marobertson@dstsystems.com>,<ietf-swap@w3.org>


Good point Marc,

I agree that the focus of SWAP is server to server but as a protocol it must
serve as universal a set of implementations as it can to be successful.  I
can't see the receiver of  SWAP requests knowing or caring that the sender
of the request was a foreign workflow engine, an application running on a
client workstation or a process running on an embedded system.

I see Keith's point on the interaction being synchronous in so far as the
requestor gets an acknowledgement in a synchronous way and that
acknowledgement could include the change of state information.  In any case,
I think it is the requestor's option to implement in such a way to depend on
the change of state information to be included in the ack, but I think it
improper to have the requestor require the foreign system to actually change
state in a synchronous way.

Basically the requestor can request an immediate synchronous response but it
is always the foreign system's option to acknowledge the request with an
indicator that the change of state has been requested but has not occurred.

Michael Oliver
Senior Technical Research Engineer
Product Marketing
Open Text Corporation
7391 S. BullRider Ave.
Tucson, AZ 85747
(520)574-8272 Voice
(520)574-8273 Fax
ollie@opentext.com
http://www.opentext.com

-----Original Message-----
From:ietf-swap-request@w3.org [mailto:ietf-swap-request@w3.org] On Behalf
Of marobertson@dstsystems.com
Sent:Thursday, October 15, 1998 6:34 AM
To:ietf-swap@w3.org
Subject:RE: Issue: Synchronous vs. Asynch.





Marc A. Robertson@DST
10/15/98 08:33 AM

I need some help understanding this.  I was under the impression that SWAP
was intended to be a workflow server to workflow server protocol, like
interface 4 in the WfMC reference model.  However, at least some of the
arguments in favor of synchronous processing( keith swenson's, for example
) imply a workflow client to workflow server protocol, like interface 2 in
the WfMC reference model.  Which is it?  Or, is it intended to be used in
both roles?  If it is to be server to server, then I would say that async
is all that is required, and would be simpler to implement.  If it is to be
client to server, then sync is probably required to get the kind of
interaction desired in that environment


Marc Robertson
Staff Consultant
DST Systems, Inc.



