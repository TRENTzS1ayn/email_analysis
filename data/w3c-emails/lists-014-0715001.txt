docno="lists-014-0715001"
received="Fri Aug  2 23:23:39 1996"
isoreceived="19960803032339"
sent="Fri, 02 Aug 1996 20:23:27 0700"
isosent="19960803032327"
name="Phil Karlton"
email="karlton@netscape.com"
subject="compression and TLS"
id="3202C62F.31DF@netscape.com"
charset="usascii"
expires="1"


To:ietf-tls@w3.org

This is not a proposal for the TLS 3.1 specification, but here is some
information for those that would like to look forward past this year. I
mentioned an unpatented compression algorithm at the IETF meeting and
here (finally) is a pointer to it.

http://gatekeeper.dec.com/pub/DEC/SRC/research-reports/abstracts/src-rr-124.html

I am forwarding the following from somebody who wishes to be protected
from sending to a large list. :-)

PK

=============================================

Mike Burrows [of DEC] gave me the following recent reference for the
compression algorithm that you had in mind:

http://web2.airmail.net/markn/articles/bwt/bwt.htm

This is a paper by a third party (Mark Nelson). It includes source 
code and a link to the original paper by Burrows and Wheeler. Neither 
this paper nor the original paper are detailed enough to constitute 
a specification. Someone would need to put in some work to fix
parameters, etc., and in particular to fix a Huffman coder. This could
be a drawback.

There are several other implementation of this algorithm. Mark Nelson's 
is good but not great; it is apparently reasonably clean. Mike Burrows's 
is better, Mike says, but Digital is not distributing it. (It is 
being used in some products, but has never been licensed on its own. 
As far as we know, there are no patents on this algorithm.) In Mike's 
implementation, this algorithm is a bit slower but compresses better 
than gzip. 

Mike recommended considering another compression algorithm, to which 
he refers as Wheeler hashing because Wheeler discovered it in 1983. 
When Wheeler hashing is combined with a suitable Huffman back-end, 
it performs better than Unix compress in all dimensions. The algorithm 
was first described in: 

    Raita, T. and Teuhola, J. (1987), "Predictive text compression
    by hashing", ACM Conference on Information Retrieval

This algorithm has been patented (5,229,768) by K. Thomas in 1993, 
but given the dates the patent should probably not hold. The algorithm 
is used in the Internet Draft "PPP Predictor Compression Protocol" 
(see
ftp://venera.isi.edu/internet-drafts/draft-ietf-pppext-predictor-00.txt). 
This might be an advantage.



