docno="lists-014-11322968"
received="Thu Feb 26 11:55:20 2004"
isoreceived="20040226165520"
sent="Thu, 26 Feb 2004 16:55:18 +0000"
isosent="20040226165518"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Surreality: &#64;keywords prefix ."
id="403E24F6.2030504@mysterylights.com"
charset="usascii"
expires="1"


To:public-cwm-bugs@w3.org


This does very strange things indeed:

$ echo '@keywords prefix . @prefix : <#> . prefix q r . p q r .' | cwm

      @prefix : <#> .
     :rp     :rq :rr .

Oftentimes, triples using prefix are just ignored:

$ echo '@keywords prefix . @prefix : <#> . p q r . prefix q r .' | cwm

      @prefix : <#> .
     :p     :q :r .

This, however, works as expected:

$ echo '@keywords prefix . @prefix : <#> . p q r . q prefix r .' | \
    cwm | egrep -v '^[ \t]*#|^[ \t]*$'

      @prefix : <#> .
     :p     :q :r .
     :q     "prefix" :r .

Similar oddnesses can be gained from @keywords keywords .:

$ echo '@keywords prefix, keywords . @prefix : <#> . \
    keywords q r . prefix q r .' | cwm

Traceback (most recent call last):
   File "/misc/tools/cwm/cwm.py", line 653, in ?
     doCommand()
   File "/misc/tools/cwm/cwm.py", line 350, in doCommand
     p.load("", baseURI=_baseURI)
   File "/misc/tools/cwm/notation3.py", line 212, in load
     return self.loadBuf(stream.read())    # self._formula
   File "/misc/tools/cwm/notation3.py", line 220, in loadBuf
     self.feed(buf)
   File "/misc/tools/cwm/notation3.py", line 238, in feed
     i = self.directiveOrStatement(str,j)
   File "/misc/tools/cwm/notation3.py", line 248, in directiveOrStatement
     j = self.directive(str, i)
   File "/misc/tools/cwm/notation3.py", line 293, in directive
     "'@keywords' needs comma separated list of words")
notation3.BadSyntax: Line 1 of <file:.../keyword-test/>:
    Bad syntax ('@keywords' needs comma separated list of words)
    at ^ in: "@keywords prefix, keywords . @prefix : <#> .
    keywords q r . prefix q r .^..."

Clearly the bug is that declaration keywords are interfering in some 
way with standard @-less keywords, but I've no idea how to explain 
that ":rp :rq :rr" output without using the word cwmic :-)

-- 
Sean B. Palmer, <http://purl.org/net/sbp/>
"phenomicity by the bucketful" - http://miscoranda.com/



