docno="lists-014-12001609"
received="Mon May 10 14:50:44 2004"
isoreceived="20040510185044"
sent="Mon, 10 May 2004 20:50:19 +0200"
isosent="20040510185019"
name="Henry Story"
email="henry.story@bblfish.net"
subject="diff:replacement of a document."
id="E27E3695-A2B2-11D8-BE2D000A95D9FA7A@bblfish.net"
charset="USASCII"
expires="1"


To:public-cwm-talk@w3.org


Hi,

<background>
I am setting out to write a log file in RDF for James Gosling's BlogEd 
editor (https://bloged.dev.java.net/). The current log file is in a 
simple and inflexible binary format, so the improvement would be 
welcome.

We have settled on an OWL ontology derived from the Atom api.
Since people may change their blog entries we need to allow for changes 
in the theory represented by the RDF file. I was thinking to do this 
using diff:replacement as descibed by 
http://www.w3.org/DesignIssues/Diff

One of the nice thing about the RDF for our data file format is that it 
is statement based, so we can just append changes quickly to the end of 
the data file, and so in case of a crash it will be very easy to 
recover. It is also very close to the way James Gosling programmed his 
editor.
</background>

The idea would be to use diff:replacement somehow like this:

# up here lot of info about the Blog feed and its entry...
#
#
<> {
{ ?x blog:entry "1"; blog:text "RDF is difficult."}
diff:replacement
{ ?x blog:entry" "1"; blog:text "RDF is easy!"}
} <#newstate>

<#newstate> :asserts {
?x blog:entry "1";
   blog:publicationDate "12 May 2004, 12:00 UTC"
}

What I hope this says is that there is a theory that is a diff of this 
document's theory that can be generated by replacing the text of blog 
number 1 by "RDF is easy!". That theory is called #newstate. #newstate 
also asserts that its publication date is "12 May 2004, 12:00 UTC".

This way I can speak create a theory, create diffs of the theory, and 
changes to that diffed theory, and perhaps even make diffs of that 
theory, ad infinitum...

Is this close to being right?


PS. And also, what is a good book to read? I have "The Semantic Web" 
published by Wiley written by Daconta, Obrst, and Smith. And of course 
I have been reading what is on the web. The many tools are really 
helpful in helping one to get to grips quickly. I think I probably need 
to spend more time on cwm. 



