docno="lists-014-12740618"
received="Mon Dec  8 08:03:23 2003"
isoreceived="20031208130323"
sent="Mon, 8 Dec 2003 13:03:20 0000 "
isosent="20031208130320"
name="Miles, AJ (Alistair) "
email="A.J.Miles@rl.ac.uk"
subject="RDF ordering questions"
id="350DC7048372D31197F200902773DF4C04944053@exchange11.rl.ac.uk"
charset="iso-88591"
expires="1"


To: 'Danny Ayers'<danny666@virgilio.it>, Steve Cayzer<steve.cayzer@hp.com>,"Miles, AJ (Alistair)"<A.J.Miles@rl.ac.uk>,public-esw-thes@w3.org


Hi guys, 

Can I reduce the problem to the following stages:

Stage 1: Agree RDF encoding for 'traditional' mappings.

Stage 2: Agree RDF encoding for 'ordered' mappings.

Stage 3: Agree RDF encoding for combined ordered + traditional mappings.

?

Having a crack at stage 2, would something like the following be sufficient
[option 1] ...

<rdf:Description rdf:about="#A">
<soks-map:orderedMapping>
<rdf:Seq>
<rdf:_1 rdf:resource="#B"/>
<rdf:_2 rdf:resource="#C"/>
<rdf:_3 rdf:resource="#D"/>
<rdf:_4 rdf:resource="#E"/>
</rdf:Seq>
</soks-map:orderedMapping>
</rdf:Description>

... ?  I mean does this fall foul of Steve's numbering problem, or is it
simple enough for the numberings to be redefined if another concept is to be
inserted into the list?

Or am I right in understanding that if you use the attribute
parseType="collection" on a property, the ordering of the members is
preserved when the serialised statements are compiled into a graph?  So then
the following would also do the job (and dodges the numbering
problem)[option 2] ...

<rdf:Description rdf:about="#A">
<soks-map:orderedMapping parseType="collection">
<rdf:Description rdf:about="#B"/>
<rdf:Description rdf:about="#C"/>
<rdf:Description rdf:about="#D"/>
<rdf:Description rdf:about="#E"/>
</soks-map:orderedMapping>
</rdf:Description>

?

Al.

> -----Original Message-----
> From: public-esw-thes-request@w3.org
> [mailto:public-esw-thes-request@w3.org]On Behalf Of Danny Ayers
> Sent: 08 December 2003 09:34
> To: Steve Cayzer; Miles, AJ (Alistair) ; public-esw-thes@w3.org
> Subject: RE: mapping topicexchange to dmoz - testing the SKOS-Mapping
> vocab
> 
> 
> 
> The ordering does look like it could make life easier for app
> implementations, but-
> 
> > I see where you are going with 'ordered' mappings, but I 
> wonder if your
> > solution isn't a little brittle.
> > I mean, having defined 6 ordered mappings, what happens 
> when you need
> > another, numbered say 3.5?
> 
> I don't think that would be a problem, simply insert the new 
> mapping into
> the ordered list -the numbering isn't too important.
> But I think there are a couple of related issues - firstly 
> the loss of the
> absolute relevance level (narrow-match, broad-match) might 
> mean you end up
> with really weak matches being given the same significance as 
> strong ones.
> This may not be an issue in practice - nearest is probably 
> what you'd want
> while searching.
> 
> The other potential issue is how to handle the matching up 
> the taxo trees:
> 
> relevance
> 1. Arts/Movies/Titles/M/Matrix_Series/
> 2. Arts/Movies/Titles/M
> 3. Arts/Movies/Genres/Science_Fiction_and_Fantasy/
> 4. Arts/Movies/Genres
> 5. Arts/Movies/
> 
> > A way round this would be to allow relationships between mappings.
> > So a mapping to Arts/Movies/Titles/M/Matrix_Series/ is 
> 'better' than (more
> > relevant than? more specific than?) a mapping to
> > Arts/Movies/Genres/Science_Fiction_and_Fantasy/
> 
> Yep, that sounds like it could do the same job as the ordering in a
> (probably) more versatile fashion.
> 
> Cheers,
> Danny.
> 
> 



