docno="lists-014-12764115"
received="Wed Dec 10 07:04:35 2003"
isoreceived="20031210120435"
sent="Wed, 10 Dec 2003 12:00:53 0000"
isosent="20031210120053"
name="NJ Rogers, Learning and Research Technology"
email="Nikki.Rogers@bristol.ac.uk"
subject="Where do OWL and SKOS meet?"
id="935699244.1071057653@ilrthaako.ilrt.bris.ac.uk"
charset="usascii"
expires="1"

To: public-esw-thes<public-esw-thes@w3.org>



Hi all

I'm disliking the blurriness of ontologies versus thesaurus/other KOS 
distinctions in some of the discussion on this list. For me its what leads 
to those questions about whether/where we should be using OWL to represent 
thesaurus/KOS concept relations.  I feel we need to tackle such 
distinctions asap and I want to attempt to clarify what we are aiming to 
achieve in terms of the 20 mile high view of the problem space.

I present here an effort towards this clarification in terms of questions 
and answers and would be very grateful if you have the time to pick through 
these with me & correct me/affirm as appropriate.

Please note that I'm particularly alert to section 3.2 Context-induced 
ambiguity of http://jodi.ecs.soton.ac.uk/Articles/v01/i08/Doerr/  (a 
reference from Alistair Miles).  It's the bit that's troubling me in 
relation to using RDF to express knowledge.


*QUESTION 1:
What are we trying to do with the thesauri & general KOS out there?
Do we want to use them as controlled vocabulary assistance for  RDF 
authors/applications that try to find/map suitable rdf Literal values (for 
various arbitrary rdf properties),
OR
do we want to migrate thesauri completely and totally to ontologies (i.e. 
in order to use them for the *typing* of rdf resources)?

*ANSWER 1: I think we might want to use them in some cases for one or the 
other, and in some cases for both.
Explanation: I think some thesauri migrate "well" to ontologies e.g. 
thesauri for museum objects (or biological species). Why? Because they 
already tend to be talking about "things" (& their properties) & therefore 
'fit' well with the OWL ontology way of describing the world. 
(object-oriented).
But other thesauri/parts of thesauri may not fit well with this 
object-oriented view of the world, because they are about more abstract 
concepts (see answer 2 below). This has already been discussed on this list.


*QUESTION 2: But am I right in assuming OWL ontologies are for *typing* rdf 
resources? Are they only for that or do people use ontologies for providing 
rdf Literal values for any arbitrary properties?

*ANSWER 2: Well, OWL is for defining owl classes & their properties in the 
main, right?, and owl classes have extensions that are always a set of 
'things'. So this lends itself best to typing information for rdf:resources.
Examples: So "colour" can be an owl thing, but "white" is an owl individual 
(i.e. a member of the set of "colour"s).
And "farm" is an owl class (the 'type' of some property for sale for e.g.), 
but "agriculture" (in the sense that it means "farming") is neither an owl 
individual or an owl class - it's a thesaurus term right? a concept in the 
English language. It's unlikely it "belongs" in an ontology because it's 
unlikely someone would want to state an rdf:resource as being of <rdf:type> 
= 'farming'. (they'd be more likely to want to state that the <subject> 
property of some rdf:resource has the value 'farming', say, or that some 
resource of type person has <interests> = "farming" and so on.)


*QUESTION 3: Given the above position, what are our overall requirements 
for a thesaurus specification in RDF?

*ANSWER 3:

i) We want to be able to formally & syntactically express relationships 
between thesaurus concepts in rdf *independently* of the way we express 
ontological relationships.
Why?
EXPLANATION: Because we want to express the relationships in what I'll call 
"typing information" (that encapsulated in OWL ontologies) separately from 
the relationships between concepts which are not used for typing 
information.
Why?
because otherwise computers/users of/information on the network will likely 
become confused about the meaning of things - context confusion beware!
NOTE HOWEVER:
that it's easy to get confused here because the 'mode of' expression of 
relationships for thesauri/KOS *overlaps* with that for ontologies. i.e. 
typing information uses "broader than" "narrower than" & set relations for 
describing classes of things.
And in many cases we want to use this same approach for KOS's as well - 
because concepts too can be related by such relations.

ii) We also want to be able to *link* thesaurus concepts to ontology 
classes - i.e. where the context of thesaurus concepts is clearly linked to 
the class of objects which are being described with the assistance of these 
thesaurus-defined concepts.
Why?
E.g. because if *parts* of a well-known, useful thesaurus can be migrated 
to an ontology then we might want to express that - i.e. break a well-known 
thesaurus out into its ontological & thesaurus composite parts.
So we need 'hooks' if you like, to join
controlled vocabularies that can supply values for rdf:Literals
with
ontologies that supply values for rdf resource typing.

e.g.

<owl:Class rdf:ID="Wine">
<rdfs:subClassOf>
<owl:Restriction>
    <owl:onProperty rdf:resource="&dummy:wine_type"/>
    <owl:hasValue rdf:resource="#dry white"/>
    <rdfs:subClassOf rdf:parseType="resource">
       <owl:intersectionOf rdf:parseType="collection">
          <owl:Restriction>
             <owl:onProperty rdf:resource="&dummy:colour"/>
             <owl:hasValue rdf:resource="#white"/>
          </owl:Restriction>
          <owl:Restriction>
             <owl:onProperty rdf:resource="&dummy:sweetness"/>
             <owl:hasValue rdf:resource="#dry"/>
          </owl:Restriction>
       </owl:intersectionOf>
    </rdfs:subClassOf>
 </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>

Explanation: A rather silly e.g. but what I'm trying to show is that 
Alistair's examples that demonstrate how we can use OWL set relations to 
map thesaurus terms (e.g. 'dry white') to other terms ('dry' and 'white') 
are very helpful. But IMO we can only use this modelling in the case where 
we want to talk about thesaurus terms *in relation to* owl classes. When we 
can't/don't want to, then we need 'pure' skos modelling to support rdf 
representation of abstract concepts.


iii) We importantly want to express *additional* relationships for thesauri 
in RDF.  e.g. part of relationships, which are not the same as isa 
relationships (because thesauri/KOS typically have a number of different 
subsumption relationships for concepts). And that's why Alistair is 
tackling the issue of building SKOS vocabularies and mechanisms for concept 
representation.

So, to conclude, what I am wanting to explicitly state is that these are 
two connected, but distinct classes of problem:
- the expression of ontologies in RDF (i.e. classes, their properties & how 
these relate to each other)
- the expression of thesauri/other KOS in RDF (i.e. abstract concepts and 
how these relate to each other - and even how they relate to OWL classes 
etc.)

Do you agree?
Apologies for verbosity.

Nikki
----------------------
NJ Rogers, Technical Researcher
(Semantic Web Applications Developer)
Institute for Learning and Research Technology (ILRT)
Email:nikki.rogers@bristol.ac.uk
Tel: +44(0)117 9287096 (Direct)
Tel: +44(0)117 9287193 (Office)



