docno="lists-014-14999751"
received="Wed Feb 25 09:17:52 2004"
isoreceived="20040225141752"
sent="Wed, 25 Feb 2004 14:17:49 0000"
isosent="20040225141749"
name="Miles, AJ (Alistair) "
email="A.J.Miles@rl.ac.uk"
subject="Cracking the nut: separating semantics and structure"
id="350DC7048372D31197F200902773DF4C0494411F@exchange11.rl.ac.uk"
expires="1"


To:"'public-esw-thes@w3.org'"<public-esw-thes@w3.org>


Here's a possible solution to the longstanding problem of overloaded
semantics in thesaurus-style relationships.

We have a set of properties for building a CONCEPTUAL STRUCTURE.  These
structural properties carry very weak semantics, if any.  The skos:narrower
and skos:broader props allow organising concepts into a hierarchy.  The
skos:related property allows associative links between branches of the
hierarchy.  To reiterate, these props imply no semantics, they just allow
building of a structure, or to put it another way, structural organisation
of concepts.

We have a second set of properties which carry well defined semantics.
There is one for the instantive (instance-of) relationship - rdf:type.
There is one for the generic (class subsumption) relationship -
rdfs:subClassOf.  And there should be one for the partitive (part-of)
relationship - ??? (call it skos:partOf for now, although there must be some
reference property we could use).

So then these two sets of props are the building blocks for all other props.
For example:

skos:broaderInstantive
rdfs:subPropertyOfskos:broader;
rdfs:subPropertyOfrdf:type.

skos:broaderGeneric
rdfs:subPropertyOfskos:broader;
rdfs:subPropertyOfrdfs:subClassOf.

skos:broaderPartitive
rdfs:subPropertyOfskos:broader;
rdfs:subPropertyOfskos:partOf.

(or the alternative structural rendering of the partitive relationship ...)

skos:relatedPartOf
rdfs:subPropertyOfskos:related;
rdfs:subPropertyOfskos:partOf.

... So each one of these properties has a structural component and a
semantic component, and these two components have been factored out.  That's
the idea.

What does everyone think?

Al.

 



