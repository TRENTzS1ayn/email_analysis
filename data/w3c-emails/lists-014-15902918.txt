docno="lists-014-15902918"
received="Tue Mar 16 07:27:56 2004"
isoreceived="20040316122756"
sent="Tue, 16 Mar 2004 12:27:16 0000"
isosent="20040316122716"
name="Miles, AJ (Alistair) "
email="A.J.Miles@rl.ac.uk"
subject="Facets in SKOSCore 1.0"
id="350DC7048372D31197F200902773DF4C0494416B@exchange11.rl.ac.uk"
charset="iso-88591"
expires="1"


To:"'Tudhope D S (Comp)'"<dstudhope@glam.ac.uk>,"'public-esw-thes@w3.org'"<public-esw-thes@w3.org>

Hi Doug, all,
 
Should have mentioned, I tentatively decided to drop the skos:Facet class
and the skos:inFacet and skos:facetMember properties in SKOS-Core 1.0 after
there was some contention as to whether this had been modelled in the right
way.  
 
But Doug if you think the way it was done was OK for now, then I'm happy to
re-include it.
 
[So the proposed statements to re-add to SKOS-Core 1.0, in N3:
 
skos:Facet
        a    rdfs:Class;
        rdfs:subClassOf    skos:Concept;
        rdfs:subClassOf    rdfs:Class;
        rdfs:label    'Facet'.
 
skos:inFacet
        a    rdf:Property;
        rdfs:domain    skos:Concept;
        rdfs:range        skos:Facet;
        rdfs:subPropertyOf    skos:broaderInstantive;
        rdfs:label    'in-facet'.
 
skos:facetMember
        a    rdf:Property;
        rdfs:domain    skos:Facet;
        rdfs:range        skos:Concept;
        rdfs:subPropertyOf    skos:narrowerInstantive;
        owl:inverseOf    skos:inFacet;
        rdfs:label    'facet-has-member'.
        
]   
 
The statements above are based on the principal that facets are disjoint
classes (although the disjoint condition is sometimes broken and therefore
is not expressed as a formal constraint), and facet members are class
instances. 
 
Al.
 
--- 
Alistair Miles 
Research Associate 
CCLRC - Rutherford Appleton Laboratory 
Building R1 Room 1.60 
Fermi Avenue 
Chilton 
Didcot 
Oxfordshire OX11 0QX 
United Kingdom 
Email:        a.j.miles@rl.ac.uk 
Tel: +44 (0)1235 445440 
-----Original Message-----
From: public-esw-thes-request@w3.org
[mailto:public-esw-thes-request@w3.org]On Behalf Of Tudhope D S (Comp)
Sent: 15 March 2004 15:55
To: 'public-esw-thes@w3.org'
Subject: Re: Definition of "facet"


> Yes, I am becoming more and more convinced that thesauri and
> classification schemes are just alternative ways or arranging and
> presenting lists and groups of concepts. I therefore am very keen to
> help arrive at a single set of unambiguous terms which we can use to
> discuss these things, rather than having to qualify statements by saying
> that we are talking "in a thesaurus context" or "in a classification
> context".
Yes - it would be nice to move to a situation where we just defined a 
particular kind of KOS and its properties according to a standard KOS scheme
and set of terms.
 
> This is an interesting discussion - I wonder whether other people have
> views on whether what we are saying makes sense.  Are we making any
> progress towards a consensus of opinion?
Just picking up this thread having returned from a trip - 
I do think we are fairly close to a broad consensus on the basic notion of a
(simple) facet, 
without getting into any particular set of top level categories or
combination rules.
Eg as per Leonard's previous definitions of a homogeneous class of concepts
or the similar definitions in the BSI standards, Aitchison & Gilchrist, etc.
 
Some of the other issues, such as roles, synthesis rules for strings, and
fundamental categories belong I think to the (next) stage of higher level
schemes or OWL definitions for different kinds of KOS. 
 
However as regards the SKOS RDF scheme, I thought the original SKOS
definition of facet was fairly close* to this and I was sorry to see it
dropped it from the latest version. Did I miss some discussion on this or is
it considered something best left for the next version? 
 
* (My original question boiled down to a couple implementation details:
Is a 'facet' best modelled as a type of concept or as a separate entity,
when considering future OWL developments?
Is the Broader relationship best suited for concept-facet relationships, or
should it be a basic subclass/superclass relationship?)
 
Doug



