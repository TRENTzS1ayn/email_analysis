docno="lists-014-16435772"
received="Wed May  5 14:21:03 2004"
isoreceived="20040505182103"
sent="Wed, 5 May 2004 19:17:13 +0100 "
isosent="20040505181713"
name="Miles, AJ (Alistair) "
email="A.J.Miles@rl.ac.uk"
subject="Supporting arrays of concepts"
id="350DC7048372D31197F200902773DF4C04944282@exchange11.rl.ac.uk"
charset="iso-88591"
expires="1"


To:"'public-esw-thes@w3.org'"<public-esw-thes@w3.org>


This is a strawman proposal for addition to the SKOS-Core schema:

Some thesauri group concepts into ordered arrays, and label the array, e.g.

People
        <people by age>
        Children (0-12 years)
        Teenagers (13-19 years)
        Adults (over 20 years)

Since this sort of thing is common practise, and I believe will be a part of
the new British standard for thesauri (Leonard, Stella?), I thought we ought
to come up with a mechanism for representing it as part of the SKOS-Core
vocab.  

This sort of thing would also be useful in the Annotea bookmarks work. 

The problem is the best way to represent an ordered list in RDF.  The
consensus so far seems to be for using RDF Lists (collections).  The other
problem is how to connect an array to the parent concept.  Such a connection
cannot replace the skos:broader statements from the array members, and must
be synchronised with them.  

Anyway, I suggest the following additions:

skos:Arrayardfs:Class.

skos:arrayMemberListardf:Property;
rdfs:domainskos:Array.

skos:arrayParentardf:Property;
rdfs:domainskos:Array;
rdfs:rangeskos:Concept.

... which would lead to e.g. ...

[askos:Array;
rdfs:label'people by age';
skos:arrayParent:conceptD;
skos:arrayMemberList(:conceptA :conceptB :conceptC)
].

:conceptDaskos:Concept;
skos:prefLabel'People';
skos:narrower:conceptA;
skos:narrower:conceptB;
skos:narrower:conceptC.

:conceptAaskos:Concept;
skos:prefLabel'Children (0-12 years)';
skos:broader:conceptD.

:conceptBaskos:Concept;
skos:prefLabel'Teenagers (13-19 years)';
skos:broader:conceptD.

:conceptCaskos:Concept;
skos:prefLabel'Adults (over 20 years)';
skos:broader:conceptD.

Comments on any aspect of this suggestion?

Alistair.



