docno="lists-014-16445808"
received="Wed May  5 15:46:20 2004"
isoreceived="20040505194620"
sent="Wed, 5 May 2004 15:45:53 0400 "
isosent="20040505194553"
name="Houghton,Andrew"
email="houghtoa@oclc.org"
subject="RE: Supporting arrays of concepts"
id="B56ABE145BEB0C40A265238FCAA420DF01DC8E58@oa2server.oa.oclc.org"
charset="iso-88591"
inreplyto="Supporting arrays of concepts"
expires="1"


To:"'public-esw-thes@w3.org'"<public-esw-thes@w3.org>


> From: Miles, AJ (Alistair) [mailto:A.J.Miles@rl.ac.uk] 
> Sent: Wednesday, May 05, 2004 2:21 PM
> Subject: Supporting arrays of concepts
> 
> 
> This is a strawman proposal for addition to the SKOS-Core schema:
> 
> Some thesauri group concepts into ordered arrays, and label 
> the array, e.g.
> 
> People
>         <people by age>
>         Children (0-12 years)
>         Teenagers (13-19 years)
>         Adults (over 20 years)
> 
> Since this sort of thing is common practise, and I believe 
> will be a part of the new British standard for thesauri 
> (Leonard, Stella?), I thought we ought to come up with a 
> mechanism for representing it as part of the SKOS-Core vocab.  
> 
> This sort of thing would also be useful in the Annotea 
> bookmarks work. 
> 
> The problem is the best way to represent an ordered list in 
> RDF.  The consensus so far seems to be for using RDF Lists 
> (collections).  The other problem is how to connect an array 
> to the parent concept.  Such a connection cannot replace the 
> skos:broader statements from the array members, and must be 
> synchronised with them.  
> 

This seems like what is called Node Labels and used by AAT and
Dewey.  Node Labels can be thought of as concepts that participate
in the hierarchy structure but cannot be assigned as concepts.  In
Dewey, for example, it has the notion of centered entries.  If you
look at the printed edition these have a > (greater than sign)
preceeding the class span.  You cannot assign them as a class number
but they are present for the purposes of grouping the hierarchy, as
in your example.  Node Labels have all the same relationships as
concepts do, so many times they are represented as concepts.

The MARC21 Authorities format also has the concept of Node Labels,
see http://www.loc.gov/marc/authority/ecadcntr.html#mrca008, position
09 - Kind of record, value 'e'.  In addition, the MARC21 Classification
format has the concept of Node Labels, see
http://www.loc.gov/marc/classification/eccdclas.html#mrcc153, subfield
code $k - Summary number span caption hierarchy, which is used in
conjunction with position 07 - Type of number, value 'c' in the 008 
field, see http://www.loc.gov/marc/classification/eccdcntr.html#mrcc008.

SKOS currently doesn't take Node Label's into account with it's
prefLabel and altLabel elements.  It is possible that a Node Label
could have many different altLabel's.  I don't think that you need
to add additional structure to represent Node Labels.  Perhaps,
what is needed is to say that a concept must have either a group
of prefLabel elements (xml:lang'ed) or a group of nodeLabel elements
(xml:lang'ed) and can have any number of altLabel elements.  Since 
Node Labels will also have BT, NT, RT relationships, you will not 
need to duplicate that structure by reusing skos:Concept.


Andy.



