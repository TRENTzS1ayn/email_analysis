docno="lists-015-11632275"
received="Mon Sep 22 08:32:17 2003"
isoreceived="20030922123217"
sent="Mon, 22 Sep 2003 13:31:27 +0100"
isosent="20030922123127"
name="Richard Ishida"
email="ishida@w3.org"
subject="Re: The Return of &quot;WaSP Asks the W3C&quot;"
id="001301c38105$71df8740$6501a8c0@w3c40upc3ma3j2"
charset="usascii"
inreplyto="The Return of &quot;WaSP Asks the W3C&quot;"
expires="1"

To:<public-evangelist@w3.org>



I use XHTML 1.0 exclusively for my web pages these days.  I serve them
as text/html and follow the compatability suggestions in App C of the
xhtml spec.  I try to serve pages that will trigger standards-mode in
recent browsers**, but I do currently include some fallbacks for older
browsers, so I use xhtml transitional.

These are a few key practical reasons for my choice of xhtml:


[1]  I create all my xml and html documents in the same XML editor
(Xmetal).  This editor won't allow me to create xhtml that is not
well-formed or valid xml, so I don't really have to use the W3C
validator, nor do I get into a cyclical debugging process of editing,
validating, correcting, validating, ....  For example, my editor won't
even let me save the document if I have duplicate ids, or I'm missing
required attributes such as alt on <img>.

I find that saves time and helps me avoid tag soup and browser specific
extensions, even when I'm in a hurry.



[2] I regularly find myself wanting to process files using XSLT or
Python/Perl etc *some time after* I originally wrote them.  This is no
problem with xhtml pages.  

For example, I just improved my calendar page (team only). I figured out
how to extract information in XML from my calendaring system, then used
xslt to merge that with an xhtml template that contained all the rest of
my contact information.  If I had written the original page in html,
this would not have been so easy.  I've had these afterthoughts about
how to improve pages in conjunction with other xml data several times,
but since its all XML code I have no problem processing and integrating
the relevant files.



[3] I figure that if we continue to use HTML then browser developers
will have less incentive to implement xhtml properly.  I'd eventually
like to be able to use xhtml strict served as application/xhtml+xml, but
why would browser developers feel motivated to enable that if everyone
just continues to use html?



[4] Jeffrey Zeldman posits that its easier to author repurposable text
(eg. to be used on browsers but also mobile phones, pda's and other
specialised user agents) if xhtml is used.  I don't know if this is true
(but I don't see any harm in using xhtml, just in case).



[5] From a practical, rather than theoretical, viewpoint I don't really
see any reason why one *shouldn't* use xhtml at the moment, even served
as text/html.  Given the positive benefits mentioned above, this seems
as good a reason as any to use xhtml, given that this is the latest
technology.


Hope that's of some help,
RI


**  There is one tweak I have to make.  If I want my pages to trigger
standards-compliant mode in IE I have to remove the xml declaration
before posting.  I do this with a very simple Python script and it
causes no real problem (though it would be nicer not to, if anyone from
IE is listening!).

============
Richard Ishida
W3C

contact info: http://www.w3.org/People/Ishida/ 

http://www.w3.org/International/ 
http://www.w3.org/International/geo/ 

See the W3C Internationalization FAQ page
http://www.w3.org/International/questions.html



