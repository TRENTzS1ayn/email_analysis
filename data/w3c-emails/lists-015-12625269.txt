docno="lists-015-12625269"
received="Wed Mar 10 16:36:26 2004"
isoreceived="20040310213626"
sent="Wed, 10 Mar 2004 16:36:27 0500"
isosent="20040310213627"
name="Karl Dubost"
email="karl@w3.org"
subject="Re: Backward Compatible"
id="FCB6846D-72DA-11D8-9CF0000A95718F82@w3.org"
charset="ISO-88591"
inreplyto="261293DA-7130-11D8-9CF0000A95718F82&#64;w3.org"
expires="1"


To:public-evangelist@w3.org

It seems the message didn't have the intended success, which may be a 
proof of the difficulty to define the concept.

Le 08 mars 2004, ? 13:41, Karl Dubost a ?crit :
> I'm struggling with a question for the last month, and I would like to 
> hear your opinion on it.
>
> * What do we mean when we say backward compatible in the context of 
> the Web?
> * How would you define it?
> * Do you define it with regards
> - to the specifications?
> - to the tools?
> - to the authoring techniques?

To try to push forward, because many people seem to use it without 
having a clear definition of what it is. It seems often like a rabbit 
pulled out of a hat.

Jeffrey Zeldman said in an article
"""There is no true backward compatibility."""

in http://www.digital-web.com/features/feature_2002-09.shtml

"""
That this otherwise brilliant company wastes untold bandwidth to 
deliver a look and feel no one admires says everything you need to know 
about the entrenched mindset of developers who hold "backward 
compatibility" in higher esteem than reason, usability, or their own 
profits.

What do developers mean by "backward compatibility?" They mean using 
non-standard, proprietary (or deprecated) markup and code to ensure 
that every visitor has the same experience, whether they're sporting 
Netscape Navigator 1.0 or IE6. Held up as a Holy Grail of professional 
development practice, "backward compatibility" sounds good in theory. 
But the cost is too high and the practice has always been based on a 
lie.

There is no true backward compatibility. There is always a cut-off 
point. For instance, neither Mosaic (the first visual browser) nor 
Netscape 1.0 support HTML table-based layouts. By definition, then, 
those who use these ancient browsers cannot possibly have the same 
visual experience as folks who view the Web through later browsers like 
Netscape 1.1 or MSIE2.

Developers and clients who strive for backward compatibility inevitably 
choose a "baseline browser" (say, Netscape 3) beyond which they will 
make no effort. To support that baseline browser and those that 
succeeded it, developers layer their markup with a series of 
browser-specific, non-standard hacks and workarounds that add weight to 
every page. At the same time, they write multiple scripts to 
accommodate the browsers they've chosen to support, and use browser 
detection to feed each browser the code it likes best. In so doing, 
these developers further increase the girth of their pages, pump up the 
load on their servers, and ensure that the race against perpetual 
obsolescence will continue until they run out of money or go out of 
business.
"""



-- 
Karl Dubost - http://www.w3.org/People/karl/
W3C Conformance Manager
*** Be Strict To Be Cool ***




