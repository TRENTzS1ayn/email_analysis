docno="lists-015-3134407"
received="Thu Feb 13 07:31:51 2003"
isoreceived="20030213123151"
sent="Thu, 13 Feb 2003 12:29:09 +0000"
isosent="20030213122909"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="ANNOUNCEMENT: Redland RDF Application Framework 0.9.12"
id="28308.1045139349@hoth.ilrt.bris.ac.uk"
expires="1"

To:public-esw@w3.org




This and the Raptor work was done as part of WP10 deliverable 10.3
which is still ongoing.

Dave


       Redland RDF Application Framework 0.9.12
http://www.redland.opensource.ac.uk/

Redland is a C library that provides a high-level interface for RDF
allowing the RDF graph to be parsed from XML, stored, queried and
manipulated.  Redland implements each of the RDF concepts in its own
class via an object based API, reflected into the other language APIs
- - Java, Perl, PHP, Python, Ruby and Tcl. Some of the classes
providing the parsers, storage mechanisms and other elements are
built as modules that can be added or removed as required.

Redland 0.9.12 is a major release with many changes and improvements
(last was 2002-06-08).  The main changes are as follows

NEW FEATURES
 * Added contexts
   Statements added to Model (when using a Storage that supports
   contexts) can take an optional Node, returned by the new
   get_context method on Iterator and Stream classes.

   This is explained in greater detail in the full release notes:
     http://www.redland.opensource.ac.uk/RELEASE.html#rel0_9_12


FORMAT CHANGES
 * The persistent storage format was changed to support RDF typed
   literals and this will require an upgrade of any existing
   Berkeley/Sleepycat DB stores created by Redland 0.9.11 or
   earlier. A utility redland-db-upgrade is provided that creates
   an updated store from an existing one.

API CHANGEs  
 * Iterator and Stream classes. 
   The next/get_next method is split into get_object always
   returning a shared object and next methods.  get_context method
   added. (get_object is called current in higher level languaged APIs)

 * Model class.
   Method add_statement no longer takes ownership of the passed in
   statement. The caller now retains ownership.

   Method add_statements no longer frees the passed in
   librdf_stream; the caller must free it now.

 * Node and Model classes.
   Added RDF Datatyped Literals. Other literal is_wf_xml
   constructors and methods deprecated.

 * General
   All literals methods and constructors have no mention of the
   never-used or supported XML Space argument which hasis not part
   of an RDF literal.

OTHER CHANGES

 * Added a script utils/update-api-0912.pl to help automate the API
   changes as far as possible or warn about those that cannot be
   automatically updated.

 * Many portability and compiling fixes (OSX, gcc 3.x, FreeBSD,
   non-gcc compiler)

 * Updated to Raptor version 0.9.8 (RDF/XML and N-Triples parser)

 * Java API classes. Add finished() method replacing useless
   finalize().  Use Raptor message callbacks to get parser warnings
   and errors.

 * Build Java API working around the stupid things recent SWIG
   versions do.

 * Make Redland work with BDB/Sleepycat DB v4 (as well as v2 and v3).

 * Python API gains pydoc comments and HTML derived version.

 * Perl and Python APIs now receive Redland message callbacks.

 * Redland URI class now registers with Raptor rather than specially
   compile Raptor.

 * Added RDF/XML Serializer class and made higher level language APIs
   to it.

 * Update to Raptor version 0.9.8 (RDF/XML and N-Triples parser) -
   see the Raptor NEWS at
     http://www.redland.opensource.ac.uk/raptor/NEWS.html
   for more detailed changes since 0.9.5.

 * Added skeleton Ruby and PHP APIs.

 * Major source reorganisation.

See also the detailed 0.9.12 release notes at
http://www.redland.opensource.ac.uk/RELEASE.html#rel0_9_12

The release consists of the full sources, RPM binaries and SRPMS
packages for RedHat Linux 7.3.  It is also available from the
Redland SourceForge mirror site at http://sourceforge.net/projects/librdf/

The main web site lets you browse and check out the latest version of
the sources in CVS and use Redland in various demos.

I post updates about Redland and Raptor to the redland-dev list
which is one of the lists you can join from the list page at
  http://www.redland.opensource.ac.uk/lists/



