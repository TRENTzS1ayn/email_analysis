docno="lists-015-3739294"
received="Fri Jan 24 12:54:23 2003"
isoreceived="20030124175423"
sent="Fri, 24 Jan 2003 18:02:35 +0000"
isosent="20030124180235"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="RE: Vocabulary for result sets"
id="5.1.0.14.2.20030124175651.038fa8a0@127.0.0.1"
charset="usascii"
inreplyto="Pine.GSO.4.44.0301241538380.5743100000&#64;mail.ilrt.bris.ac. uk"
expires="1"


To: Libby Miller<Libby.Miller@bristol.ac.uk>
Cc:"Seaborne, Andy"<Andy_Seaborne@hplb.hpl.hp.com>,"'public-esw@w3.org'"<public-esw@w3.org>


Libby,

My take was that Andy's model/vocab catches this quite neatly, because what 
I read it to say way that the result set thus described can be asserted to 
be a correct result set [for a given knowledge base and query].  A subset 
of that, described in RDF by a subgraph of that given, is also a valid 
result set -- if it weren't, I'd have been concerned that the RDF semantics 
were being violated, in particular the subgraph lemma.

With Andy's vocabulary, I think one could also have a concept of a maximal 
result-set, of whose graph all valid result-set graphs are subgraphs.  Do 
you see where I'm going here?

I'm just about to shut down for travelling -- I don't know if I'll be able 
to continue this exchange over the next week.

#g
--

At 03:42 PM 1/24/03 +0000, Libby Miller wrote:

>I guess I mean that if you were associating a resultset with a query,
>there might be several different resultsets that would be ok. by this I
>mean several tables which are valid depending on whether the KB does
>transitive closure on classes or not etc. Maybe it does this: I find it
>difficult to read N3, and RDF schemas in general. Examples are the thing
>for me, so I guess I should get on and try and add to yours from the
>data we have.
>
>Many thanks for doing this Andy :)
>
>Libby
>
>On Fri, 24 Jan 2003, Seaborne, Andy wrote:
>
> > Libby,
> >
> > > you might also get multiple valid resultsets per query,
> > > depending on the
> > > power of the KB.
> >
> > I'm not sure which way round you mean "multiple valid resultsets per 
> query":
> > the vocabulary allows multiple solutions per result table.  And also
> > multiple result sets per result graph because it is rooted from a single
> > node.  The example uses <> as that node but there is no reason it has to be
> > that; you could have a bNode there, and have another starting bNode
> > somewhere else.
> >
> > Could you give an example of when there would be multiple result sets?  I
> > can image a "query request" to actually consist of a series of 
> "queries" all
> > of which should be executed.
> >
> >       Andy
> >
> > > -----Original Message-----
> > > From: Libby Miller [mailto:Libby.Miller@bristol.ac.uk]
> > > Sent: 24 January 2003 15:05
> > > To: Seaborne, Andy
> > > Cc: 'Graham Klyne'; 'public-esw@w3.org'
> > > Subject: RE: Vocabulary for result sets
> > >
> > >
> > >
> > > you might also get multiple valid resultsets per query,
> > > depending on the
> > > power of the KB.
> > >
> > > On Fri, 24 Jan 2003, Seaborne, Andy wrote:
> > >
> > > >
> > > > > -----Original Message-----
> > > > > From: Graham Klyne [mailto:GK@NineByNine.org]
> > > > > Sent: 23 January 2003 21:12
> > > > > To: Seaborne, Andy
> > > > > Cc: 'public-esw@w3.org'
> > > > > Subject: Re: Vocabulary for result sets
> > > > >
> > > >
> > > > ...
> > > >
> > > > >
> > > > > Hmmm... I wonder of there should be links to, or
> > > identifiers of, the
> > > > > knowledge-base and query used, so that valid results from
> > > > > different queries
> > > > > can be differentiated.  In practice, I think this kind of
> > > > > testing is a
> > > > > relatively closed-world activity, so maybe it doesn't matter.
> > > > >
> > > >
> > > > Graham,
> > > >
> > > > Good point.  A number of properties to annotate the result
> > > set would be
> > > > good.  Of course, nothing stops any properties being added
> > > ... but putting
> > > > them in the vocabulary encourages their use.
> > > >
> > > > Are there any suitable properties from other vocabularies to reuse?
> > > >
> > > > Also - this could be the result from a query, not just
> > > recording information
> > > > for a testcase.  In this case, we still have a
> > > query->single graph approach
> > > > but the presentation of the results isn't a subgraph of the
> > > original KB, but
> > > > an encoding of the variable bindings.  Each solution can be
> > > substituted into
> > > > the pattern for the query to generate a sequence of
> > > subgraphs, each of which
> > > > satisfy the query but the result set graph does not feel
> > > like knowledege
> > > > extraction anymore.
> > > >
> > > >   Andy
> > > >
> > > >
> > > >
> > >
> >
> >

-------------------
Graham Klyne
<GK@NineByNine.org>



