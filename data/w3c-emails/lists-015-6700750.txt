docno="lists-015-6700750"
received="Fri Dec  6 08:30:03 2002"
isoreceived="20021206133003"
sent="Fri, 6 Dec 2002 13:30:47 0000"
isosent="20021206133047"
name="Jim Ley"
email="jim@jibbering.com"
subject="Re: W3C Home page switched to full CSS layout"
id="01c801c29d2b$bf2f5520$ca969dc3@emedia.co.uk"
charset="iso-88591"
inreplyto="5.2.0.9.0.20021206124140.0190c3d8&#64;mail.btinternet.com"
expires="1"


To:<public-evangelist@w3.org>


"John Colby" <John.colby@btinternet.com>
> At 10:11 06/12/2002 +0000, you wrote:
> >And if you hane an XHTML version of your page you can easily produce a
> >HTML 4.01 version of your page with XSLT.  The content-management and
> >final form versions of the page do not need to be the same.
> >
>
> I'm really getting puzzled by al this insistence on HTML4.01. As I
> understood it, HTML4.01 is the last of the line of HTML recommendations
by
> W3C, we're now onto XHTML 1.0 (an XML application) and XHTML 1.1.
XHTML2.0
> proposals have been published. So why try to tie into a dying legacy
> language that has absolutely no future?

You're not tying yourself into anything, your publishing a document
today, XHTML has little support in the real world, HTML 4.01 has
universal support, converting from XHTML 1.0 strict to HTML 4.01 strict,
is a trivial machine conversion, that turns the XHTML document which will
render incorrectly in many browsers, into something that will render
correctly in [basically] all.

It's a good idea to be creating your content in a form which contains as
much semantics as you want, especially if as Karl suggests one of the
things you want to do is produce RSS feeds or other representations of
the same data. So absolutely creating XHTML versions of pages may be a
good idea (although I'd rather do it in an even more semantically rich
language like DocBook or XHTML 2.0 than vanilla XHTML 1.0).  There's no
persuasive argument I've seen (which is why I'm trying to get a
discussion in the evangelist list) that presenting XHTML as the FINAL
FORM to the client is a good idea, it's simply not supported, and
actually makes XSLT harder because you need to not do things which are
perfectly valid in XML.

Consider an XSLT or DOM approach which creates a br element, it's
perfectly legal to create <br/>  however doing so will create numerous
problems, and wouldn't be "as per Appendix C".

Jim.



