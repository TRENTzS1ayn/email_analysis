docno="lists-015-8708303"
received="Mon Sep  2 10:14:03 2002"
isoreceived="20020902141403"
sent="Mon, 02 Sep 2002 10:13:35 0400"
isosent="20020902141335"
name="ed nixon"
email="ed.nixon@lynnparkplace.org"
subject="Re: CSS and Netscape"
id="3D73720F.50309@lynnparkplace.org"
charset="usascii"
inreplyto="005d01c25267$f122e420$9a32f7c2&#64;laptop"
expires="1"


To: Isofarro<w3evangelism@faqportal.uklinux.net>
CC:public-evangelist@w3.org,list@webdesign-L.com


Isofarro wrote:
> <snip/>
> [Treating NN4 as a text-browser]
> This argument that developing websites that work in Netscape 4 results in
> double development time is a straw-man argument. It automatically assumes
> that there is duplication involved in the entire workstream of the website
> creation process.
This is all highly over generalized, including my post, and doesn't lend 
itself to anything other than highly overgeneralized discussion.

However, the fact that the problem is defined and solved in terms of NS4 
AND everyone else (which ignores the differences/quirks among the 
various versions of Internet Explorer, for example) means that every 
step of the process will have to contain cycles recognizing, checking 
and resolving for the "AND" of the relationship. If you are working as 
an individual, in a putative vacuum, and not in a large, contentious and 
complex organizational and project environment, the overhead will be 
minimal; otherwise it will be substantial. There will be costs that will 
not involve you and your templating activities.
> 
> We all know how important it is to separate content from presentation, and
> Netscape 4 friendliness is no exception. The only duplicate work items are
> the initial creation of templates, and the testing of those templates. The
> content should always be separate from the presentation, so this would be a
> non-duplicated process.

This is good theory and a great goal to pursue. As you know, what one 
confronts, however, is perception of what is on the screen by the people 
who are signing the cheque -- "I know what I like and this ain't it." 
One can try to be as smart as possible about the initial setup; but, 
there will be tremendous, irresistable pressure in the course of the 
work that will tend to erode the theory and complexify the product. 
Hence, more cycles and more cost, howbeit largely downstream and, for 
the moment, hidden.

> 
> On delivery, either deliver a dynamic website that delivers full compliant
> markup to all user agents except those identifying themselves as Netscape 4,
> or run it through an html preprocessor and generate two websites.

And the html preprocessor comes from where? At what cost?

These are the kinds of cost "externalities" that are conveniently 
forgotten, much like the costs of cleaning up after automobiles or 
nuclear power plants. And, if considered properly, these costs radically 
change the cost-benefit scenarios of most, if not all, Web development 
projects.

All of this has to be seen from a management and operational 
perspective, in addition to a designer, coder perspective, in order to 
have the proper view.

All I'm suggesting is that web development and operation is a very 
expensive proposition, too expensive; the mulitplicity of browsers and 
their glitches is one of the major factors in inflating the cost. There 
are others. Any cost conscious business contemplating getting into or 
upgrading a website deserves to be given the opportunity of looking at 
the (total and accurate) incremental costs of supporting each of the 
alternatives. Evloving to higher or more advanced levels of 
standardization offers the potential for decreasing the number of costly 
alternatives to something greater than one, which I think many people 
think is a good idea.

The marginal cost to a user of upgrading a browser, particularly if 
encouraged and assisted in helpful and efficent ways, is trivial in 
comparison to the aggregate costs to the industry or to a large 
organization. The fact that browser technologies have been historically 
"free" is probably the biggest externality we confront. Browsers are 
also the software application about which people know the least in terms 
of opperation.

Why don't we talk about how to most positively, expeditiously and 
synergistically move users away from NS4 rather than gritching and 
snitching about how to accommodate something we all agree (I hope) is a 
pain to work with and just plain bad technology? I'd like to suggest 
this thread move on to a more "evangelical" topics.

          ...edN



