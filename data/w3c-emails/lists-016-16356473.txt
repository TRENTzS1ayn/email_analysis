docno="lists-016-16356473"
received="Wed Apr 30 14:31:17 2003"
isoreceived="20030430183117"
sent="Wed, 30 Apr 2003 20:31:03 +0200"
isosent="20030430183103"
name="Bjoern Hoehrmann"
email="derhoermi@gmx.net"
subject="Re: Interpretation if %escapes in IRIs"
id="3ef50548.532587350@smtp.bjoern.hoehrmann.de"
charset="ISO-88591"
inreplyto="4.2.0.58.J.20030430115452.0520c7c0&#64;localhost"
expires="1"

To: Martin Duerst<duerst@w3.org>
Cc:public-iri@w3.org



* Martin Duerst wrote:
>>   Is there a section in the current IRI draft that specifies how
>>%-escapes in IRIs are to be interpreted?

>%-escapes in IRIs are handled mostly the same way as in URIs.
>There is no special text about this. Do you think there should
>be? If yes, where should it go? What should it say?

The %-escaping mechanism in RFC 2396 is an irreversible encoding, RFC
2396 says, you can escape "&" as %26 but it does not say, that %26 can
be unescaped to "&". RFC 2396 also does not specify how characters
outside the US-ASCII range have to be %-escaped, neither does the IRI
draft (except when IRIs are converted to URIs).

IMO, the IRI draft should say, that if %-escaping is used in an IRI, the
escape sequence must be generated from UTF-8 octets and %-escapes must
be interpreted as octets in an UTF-8 sequence.

This approach would be problematical if the IRI originates from an URI
that used %-escapes that could not be interpreted as UTF-8 sequence or
if people like to encode abitrary binary data in the IRI. The latter is
IMO not a valid use case for IRIs, if a specific scheme wants binary
data, it should first convert the bytes to characters (using e.g.
Base64) and then apply %-escpaping to these characters if necessary. The
former could be resolved by either making such URIs unconvertable or by
adding an additional escaping scheme for either non-UTF-8 octets or
UTF-8 octets (like http://www.example.org/%U0000F6 for
http://www.example.org/%f6), I prefer to make them unconvertable.

IRIs are a sequence of characters, I think this definition should not
change to a sequence of characters, intermixed with abitrary octets
after unescaping %-escapes.



