docno="lists-016-7731711"
received="Fri May 21 02:09:06 2004"
isoreceived="20040521060906"
sent="Fri, 21 May 2004 14:54:29 +0900"
isosent="20040521055429"
name="Martin Duerst"
email="duerst@w3.org"
subject="Fwd: Illustrate and explain &quot;character encoding&quot;"
id="4.2.0.58.J.20040521144939.07290290@localhost"
charset="usascii"
expires="1"


To:public-i18n-geo@w3.org
Cc: Bjoern Hoehrmann<derhoermi@gmx.net>


I'm forwarding this comment to the GEO list while Richard
is at a conference.

I think Bjoern has a very valid point. This reminds me of
a lecture I gave here at Keio just this week, where I tried
to explain character encoding to students in very basic terms.
http://www.w3.org/People/D%c3%bcrst/SFC/2004/0418Hagino.html.

Maybe some of that lecture can serve as a starting point,
although of course it needs quite some work.

Regards,    Martin.



>From: Bjoern Hoehrmann <derhoermi@gmx.net>
>To: www-i18n-comments@w3.org
>Date: Fri, 21 May 2004 05:10:23 +0200
>Subject: Illustrate and explain "character encoding"
>X-Archived-At: 
>http://www.w3.org/mid/40af6d77.20869488@smtp.bjoern.hoehrmann.de

>Hi,
>
>   [1] http://www.w3.org/TR/i18n-html-tech-char/
>   [2] http://www.w3.org/International/tutorials/tutorial-char-enc.html
>
>Could either or both please have some basic discussion and illustration
>of what a character encoding actually is? This is something difficult to
>teach as many people haven't ever got in touch with binary data, they
>use their text editor for "text" documents and most of the time it works
>just fine. That's something such documents should break at the very
>beginning; this is binary data, as in 100101010010101011010101010001...
>Something with an image or images, here is a poor example
>
> 
>http://lists.w3.org/Archives/Public/www-archive/2004May/att-0050/encoding.png
>
>Basically all [2] says about this is, relatively late in the document
>
>   ...
>   The character encoding reflects the way these abstract characters
>   are mapped to bytes for manipulation in a computer.
>   ...
>
>And [1] contains more or less nothing that would help to understand
>what's going on behind the scenes of the software readers use every day.
>Catch reader by logic. In my example, if the charset=utf-8 parameter
>is missing, how is a browser supposed to know how to turn 100101001...
>into characters? That does not work. That's what readers need to
>understand.
>
>regards.



