docno="lists-017-11813223"
received="Tue Feb 25 08:29:46 2003"
isoreceived="20030225132946"
sent="25 Feb 2003 14:29:43 +0100"
isosent="20030225132943"
name="Dominique Haza?lMassieux"
email="dom@w3.org"
subject="Re: Glossary Work Progress"
id="1046179784.7780.16.camel@stratustier"
charset="ISO-885915"
inreplyto="200302251204.46573.pcandela&#64;sophia.inria.fr"
expires="1"

To: Pierre Candela<Pierre.Candela@sophia.inria.fr>
Cc: QA Dev<public-qa-dev@w3.org>


Le mar 25/02/2003 ? 12:04, Pierre Candela a ?crit :
> Extract.xsl: the stylesheet used to extract relevant information from the 
> following documents:
> http://www.w3.org/TR/qaframe-spec/
> http://www.w3.org/TR/qaframe-intro/
> http://www.w3.org/TR/qaframe-test/

A few remarks about extract.xsl:
- it uses some saxon extension (all the elements prefixed with saxon: );
while it makes life easier, I'd much prefer if you could avoid doing so,
since that makes your XSLT not usable in a standard xslt processor. You
can replace most of your use of saxon:function by equivalent named
xsl:template (which are heavier to use, but are standard).
 
> The information extracted are:
> - document title
> - document version
> - number of editors
> - list of editors: fullname (contact mailbox)

Note that the part to extract the informations about the specification
(title, editors, ...) is not really necessary, since there is already a
style sheet that allows to extract those from a TR document:
http://www.w3.org/2001/10/trdoc2rdf.xsl
which itself uses a more generic style sheet to extract raw data from
such document:
http://www.w3.org/2001/10/trdoc-data.xslt

With xsl:import, you can directly import the features you need from one
or the other of these style sheets.

> - list of terms and their definitions
> 
> Glossary.txt: the fusion of the above text files. Generated by a Java routine.
> 
> Glossary.rdf: the first draft (incomplete and inaccurrate) of the glossary 
> using RDF Syntax

I've already sent you my notes about the RDF syntax. Here is how should
look an entry in an RDF glossary. Let's assume for the time being that
we map one glossary into one RDF schema; for instance, we create an RDF
schema for the glossary created in SpecGL
http://example.org/specGL/20030210
Such a schema would contain an entry for each term looking like:
<rdf:Description
rdf:about="http://example.org/specGL/20030210#discretionaryChoices">
<rdfs:label xml:lang="en">discretionary choices</rdfs:label>
<rdfs:comment>a value or behavior may be chosen from a well-defined
enumerated set of two or more possibilities</rdfs:comment>
<rdfs:isDefinedBy
rdf:resource="http://www.w3.org/TR/2003/WD-qaframe-spec-20030210/"/>
</rdf:Description>

One of the advantage of using RDF is that you don't need to build
specific tools to merge the results, since one of the by-design feature
of RDF is its mergeability and that there are already tool to do that.

Dom
-- 
Dominique Haza?l-Massieux - http://www.w3.org/People/Dom/
W3C/ERCIM
mailto:dom@w3.org




