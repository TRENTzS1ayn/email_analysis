docno="lists-017-14071287"
received="Tue Mar  2 11:31:55 2004"
isoreceived="20040302163155"
sent="Tue, 2 Mar 2004 16:31:20 +0000 (GMT)"
isosent="20040302163120"
name="Nick Kew"
email="nick@webthing.com"
subject="libcroco wishes #1"
id="Pine.LNX.4.53.0403021627160.15479@hugin.webthing.com"
charset="USASCII"
expires="1"

To:public-qa-dev@w3.org




I'd be looking to use the SAC API, so that's the primary focus of
my thoughts here.

* Robust parsing - should be capable of recovering - or trying to recover -
  after fatal error.
  The simplest regime for this would be on a fatal error to emit an
  error message, find the next "}", emit a message "skipping to line/char"
  and try to resume parsing after it.  But maybe we can do better.

* Messages should identify where they come from (file/line/col).
  This applies both to normal events and errors.

* Robust recovery from lesser errors
  e.g. if a value field is malformed, remaining rules in the ruleset
  should still be parsed.

* fragment parsing - e.g. for inlined styles

and one that could be implemented at a higher level:

* Parsing of property values to an O-O representation
  e.g. a box has position, size and colour attributes.
  colour has RGB, hex and (sometimes) tokenised representations.



-- 
Nick Kew



