docno="lists-017-14914626"
received="Wed May 26 05:52:24 2004"
isoreceived="20040526095224"
sent="Wed, 26 May 2004 10:46:34 +0100 (BST)"
isosent="20040526094634"
name="Nick Kew"
email="nick@webthing.com"
subject="Re: Fwd: Two validators"
id="Pine.LNX.4.53.0405261020030.1283@hugin.webthing.com"
charset="iso-88591"
inreplyto="6BBF6877-AEE9-11D8-8D39000393A63FC8&#64;w3.org"
expires="1"

To: QA Dev<public-qa-dev@w3.org>
Cc:ht@inf.ed.ac.uk



On Wed, 26 May 2004, olivier Thereaux wrote:

> On the topic of multiple SGML/XML parsers.
>
> Henry S. Thompson wrote:

(this response Cc: Henry)

> > It's really not a great idea to
> > keep trying to make openSP be a fully-compliant XML validator when
> > there is a _tiny_ user/developer community for it in that role,
> > compared to the huge amount of effort which is put into the top 3 or 4
> > XML validators.

Indeed, I don't think we're arguing with him about that.  Although the
W3C validator is still limited to OpenSP, various related projects such
as my own Site Valet and Bj?rn's MSIE validation bar use multiple parsers.

It's the relatively narrow but crucial subject of HTML validation
where we have no alternative in sight.

>  I would recommend rxp, since it's open source, fast,
> > produces good error messages and is a Univ. of Edinburgh product owned
> > and operated by Richard Tobin, member of the XML Core WG, but any of
> > the validators which did well in Rusty Harold's conformance
> > comparison, reported at XML Europe 2004, would do.

I used Xerces in mod_validator, because at the time of writing it was
the only available parser offering full validation (for values of
"available" that precluded anything-Java).

Nowadays I would choose libxml2 for new software.  Indeed, I regard
libxml2 as the way ahead for several reasons over and above the
validation we have:

(1) It's very fast (see the xmlbench results @sourceforge),
    widely-deployed, and easy to work with.
(2) I've used it successfully in the past for related projects
    (AccessValet, and more recently mod_annot).
(3) It has all the basics we need for extending it beyond validation
    to full conformance testing.
(4) It's the basis for libcroco, so should integrate well with CSS
    analysis.
(5) It has an active and responsive development community.

Henry (or anyone) want to present arguments for AN Other option?

-- 
Nick Kew



