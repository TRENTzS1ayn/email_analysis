docno="lists-017-15800775"
received="Wed Dec 11 12:05:05 2002"
isoreceived="20021211170505"
sent="Wed, 11 Dec 2002 12:01:21 0500"
isosent="20021211170121"
name="David Holmes"
email="dholmes@tibco.com"
subject="RE: Issue-0079: String-value vs. string-value of the typedvalue"
id="339902DC0E58D411986A00B0D03D843201C020E4@extmail.rtp.tibco.com"
charset="iso-88591"
inreplyto="Issue-0079: String-value vs. string-value of the typedvalue"
expires="1"


To:"'public-qt-comments@w3.org'"<public-qt-comments@w3.org>


Michael Kay,
I noticed throughout your reply a general emphasis on retaining the
original lexical form of the XML source.  I did a comparison of the two
latest drafts of the XQuery 1.0 and XPath 2.0 Data Model (Drafts 15 Nov 2002
and 16 Aug 2002) and found the following subtle change in the definition of
the dm:string-value accessor:

15 Nov 2002:
"The dm:string-value accessor can be used to recover the lexical
representation of an atomic value."

16 Aug 2002:
"The accessor dm:string-value can be used to recover a lexical
representation of the atomic value."

Do you notice the semantic difference ("a" becomes "the")?  I must confess
that I didn't. Should the latest definition be interpreted as "recover the
(original) lexical representation" or "recover the (canonical) lexical
representation" or something else? In the second case I wish to make it
quite clear that I am trying to say that the recovered lexical
representation is in no way constrained to be identical to the original
source lexical representation. Thus a "01" which is typed as xs:integer
would have a canonical lexical representation of "1".  If your
interpretation of the spec is the "original" version and the Data Model WG
confirm this interpretation then I stand corrected for mis-quoting the Data
Model spec and I thank you for pointing out the inaccuracy.

However, this does not change my previous proposal. Furthermore, if it is
true that this subtle difference reflects a change in the stance of the Data
Model WG then this actually strengthens my resolve to see that the Data
Model does not become tied to *the* original lexical form. I'm sure that I
don't need to elaborate on the implementation ramifications of retaining the
original lexical form and I would like to spare us all the mutual tedium of
doing so. However, if you do suggest retaining the original lexical form I
would like to hear your thoughts at least on the duplication of lexical and
typed values and the implications for integrity and memory usage.

I won't come back on all of your replies just now because I think that many
of them are conditional upon the questions I have made in these opening
paragraphs and the answers to them from yourself and the Data Model WG.

I look forward to your reply and thanks for your comments.

David Holmes



