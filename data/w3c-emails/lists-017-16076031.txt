docno="lists-017-16076031"
received="Thu Jul 11 15:30:21 2002"
isoreceived="20020711193021"
sent="Thu, 11 Jul 2002 14:46:41 0400 (EDT)"
isosent="20020711184641"
name="Tim Bray"
email="tbray@textuality.com"
subject="Re: Comments on April XQuery drafts (long,  sorry)"
id="3D2DD28F.5040201@textuality.com"
charset="usascii"
inreplyto="DFF2AC9E3583D511A21F0008C7E6210602679F5F&#64;daemsg02.softwareag.de"
expires="1"


To:"Kay, Michael"<Michael.Kay@softwareag.com>
Cc:public-qt-comments@w3.org





Kay, Michael wrote:

> It's not going to be easy to cut back: when 20% of a group really want a
> feature and the other 80% of the group consider it superfluous but harmless,
> the tendency is to put it in (the gHorribleKludge syndrome). And the large
> number of documents, I think, is a consequence of the large number of
> creative and talented individuals who want to contribute to this effort:
> it's hard to do anything about the root cause of this particular problem!

As I should have said (but didn't) I was really impressed by the quality 
of the thinking that XQuery evidences and I think it'll end up highly 
useful.  It's just crystal-clear that it would be better if there were 
less of it.  Yes, it's difficult and strenuous to cut back on features 
but the rewards are very high in terms of interoperability.

And if I may make one point that highly influenced the end-game when we 
were finishing up XML 1.0 in 1998: if you leave something out, you can 
always put it in later.  The reverse is not true.

> The only part of your comments where I tend to disagree with you is TB 7.
> Wherever there is something in XML that can't be retained through an XSLT
> transformation (DOCTYPE, CDATA sections, entity references), we get user
> complaints. 

I can see this point, and it sounds (mostly) like something on which 
reasonable people may disagree.  With the exception of XQuery on 
comments, which is nondeterministic, unsafe, and positively encourages 
bad practice.  It has no place whatsoever in XQuery and is highly likely 
to run into trouble in the AC or the XML community.  Also it's totally 
unsound architecturally. -Tim



