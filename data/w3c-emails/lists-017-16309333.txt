docno="lists-017-16309333"
received="Tue Jun 18 06:16:13 2002"
isoreceived="20020618101613"
sent="Tue, 18 Jun 2002 11:15:53 +0100"
isosent="20020618101553"
name="David Carlisle"
email="davidc@nag.co.uk"
subject="Re: feature request."
id="200206181015.LAA21062@penguin.nag.co.uk"
inreplyto="DFF2AC9E3583D511A21F0008C7E6210602679EE1&#64;daemsg02.softwareag.de"
expires="1"


To:Michael.Kay@softwareag.com
CC:DPawson@rnib.org.uk,public-qt-comments@w3.org



> There is a neat trick you can use for this: just declare your namespace as
> an extension namespace.

Oh. I use this trick a lot but I always throw in an empty xsl:fallback
element as well I thought this was needed and was surprised by your
comment

> The XSLT processor is required to ignore extension instructions in a
> namespace that it does not recognize.

the XSLT 1.0 spec seems a bit obscure here.

14.1 says

 An XSLT processor must not signal an error merely because a template
 contains an extension element for which no implementation is
 available.

However the preceding sentence is


  When such an extension element is instantiated, then the XSLT
  processor must perform fallback for the element as specified in [15
  Fallback]. 

and fallback says:

  if the instruction element has one or more xsl:fallback children, then
  the content of each of the xsl:fallback children must be instantiated
  in sequence; otherwise, an error must be signaled.  

I have always read this as saying if there are no xsl;fallback elements
then the "otherwise" clause implies that an error will be signaled.


David

_____________________________________________________________________
This message has been checked for all known viruses by Star Internet
delivered through the MessageLabs Virus Scanning Service. For further
information visit http://www.star.net.uk/stats.asp or alternatively call
Star Internet for details on the Virus Scanning Service.



