docno="lists-017-16479961"
received="Tue May  7 21:55:23 2002"
isoreceived="20020508015523"
sent="Tue, 7 May 2002 19:03:03 0400 (EDT)"
isosent="20020507230303"
name="Michael Kay"
email="michael.h.kay@ntlworld.com"
subject="RE: PSVI and XPath 2.0 data model"
id="001e01c1f61b$7cb0b570$6501a8c0@pcukmka"
charset="usascii"
inreplyto="p04330119b8fdd7b38643&#64;[192.168.254.4]"
expires="1"

To:"'Elliotte Rusty Harold'"<elharo@metalab.unc.edu>
Cc:<public-qt-comments@w3.org>,<xml-dev@lists.xml.org>


> On an unrelated matter, does XPath 2.0 bother to define how the PSVI
> is actually constructed from a specific XML document or does it allow
> processors to create whatever PSVI they want to whether or not that
> PSVI has any relation to the original XML document at all? For
> instance, is it acceptable for an XSLT2 processor to replace all
> child elements with attributes or convert rectangle elements into
> circle elements? or simply replace the entire input document with the
> Gospel According to Bob?

It is not acceptable for an XSLT2 processor (or an XSLT1 processor) to
modify the tree that is provided as its input. It is acceptable for
arbitrary processing to take place during the construction of that tree.
This processing is not part of what an XSLT processor does, but it can be
done by other software that you choose to run before running the XSLT
processor.

>
> Let me make a specific proposal here: the XSLT working draft should
> require that:
>
> 1. When two conformant XML processors are presented with the same XML
> document, whether as a stream, DOM Document, a sequence of SAX
> events, or some other form that can reasonably express a XML
> document; and
>
> 2. An XSLT stylesheet does not use any features explicitly
> marked as optional;

I think the closest we could get to that might be to require that an
implementor documents a method of constructing the input tree from an XML
document using the "standard mapping" of XML documents to trees.

We would also need to consider whether to put in a similar provision about
serialization.


Michael Kay
Software AG
home: Michael.H.Kay@ntlworld.com
work: Michael.Kay@softwareag.com



