docno="lists-017-16557261"
received="Thu May  9 14:45:20 2002"
isoreceived="20020509184520"
sent="Thu, 9 May 2002 08:36:47 0400 (EDT)"
isosent="20020509123647"
name="Jeni Tennison"
email="jeni@jenitennison.com"
subject="F&amp;O WD: Issue 150: Should we support comparisons  of date/time types that return indeterminate results?"
id="1251482335966.20020509133642@jenitennison.com"
charset="usascii"
expires="1"


To:public-qt-comments@w3.org

Hi,

You ask for comments on Issue 150: Should we support comparisons of
date/time types that return indeterminate results?

I strongly believe that you should support comparisons between
date/time types that return indeterminate results, and between
duration types that return indeterminate results. I think that this is
a question of finding a balance between logical robustness and
usability, and that usability should be more important. People
should be able to test whether a year is longer than a second, or
whether 35 days is longer than a month.

Given that there's support for dealing properly with error values in
logical expressions, why not have indeterminate results return an
error? Users can then choose to treat that error as true or false, or
deal with it specially, as their application requires.

I think that this is particularly important not for individual
comparisons but for the effect that it has on sorting. From what I can
tell, it's currently not possible to sort elements on attributes that
are declared with the type xs:duration, without taking extra steps to
convert them into one of the two xs:duration subtypes. I don't think
that users should be made to jump through this hoop -- it should "just
work".

Cheers,

Jeni
---
Jeni Tennison
http://www.jenitennison.com/



