docno="lists-017-2885290"
received="Wed Apr 30 03:52:15 2003"
isoreceived="20030430075215"
sent="Wed, 30 Apr 2003 09:54:15 +0200"
isosent="20030430075415"
name="Giles Hogben"
email="giles.hogben@jrc.it"
subject="RE: P3P Data Schema as XML Schema"
id="GAEKIJGJBJOBBJEFAHMLMEEDCJAA.giles.hogben@jrc.it"
charset="iso-88591"
inreplyto="NGBBJNKIMLOPPCFHEJEMEEMMDCAA.massimo&#64;w3.org"
expires="1"

To:"Massimo Marchiori"<massimo@w3.org>,"Joseph Reagle"<reagle@w3.org>
Cc:<public-p3p-spec@w3.org>,"Rigo Wenning"<rigo@w3.org>,"Jeremy Epling"<jepling@windows.microsoft.com>



My thoughts on this as an implementer. It would be good to have other
people's feedback:

1. As far as making custom schemas is concerned, the current version (let's
call it BDS and the new one XSD) is a complete non-starter. The syntax is so
unintuitive that no-one can make head or tail of it and the only custom data
schema I've seen had completely misunderstood it. The whole thing of having
DEF's, ref's and structrefs and matching using the first half of the ref
element is really a mess! Just take a look at the code I had to write in the
xsl files to get an XSD that makes sense.
2. From the same point of view, validating any new schemas is a nightmare.
Having built a (the only) system for parsing and validating generalised DS's
in our implementation, I can tell you that it was a horrible, horrible job.
3. I don't agree that this version makes it heavier. It means that any APPEL
like engine can just carry on doing sub-tree matching instead of going into
another regular expression based mode which we found added weight. You're
right that it will be slightly more verbose. Could you explain why you'd
want it "reference with a URI". Surely this could be solved - maybe by
referring to a particular element in the XSD - they are unique.
4. The format is so non-intuitive that it is very difficult to make sense of
it.
5. XSD does not have a formal semantics, but its informal semantics is a lot
easier to make sense of than BDS. I think the RDFS attempt at codifying the
BDS shows both how impossible it is for people to understand  the BDS format
and how confused the semantics are (vide our discussion about a year ago on
this subject) - the RDFS schema has a uri for EVERY possible combination of
allowed structures - I think it ends up being about 5000 lines because of
this!
6. What I am suggesting here has a 1-1 mapping to the old version with an
xslt so it's quite legacy-friendly isn't it. I don't think it should just
end up with a note that nobody is going to read.

Thoughts?

-----Original Message-----
From: public-p3p-spec-request@w3.org
[mailto:public-p3p-spec-request@w3.org]On Behalf Of Massimo Marchiori
Sent: 29 April 2003 18:54
To: Giles Hogben; Joseph Reagle
Cc: public-p3p-spec@w3.org; Rigo Wenning; Jeremy Epling
Subject: RE: P3P Data Schema as XML Schema



P3Pers, apologies for having missed the call today, XQuery is swamping me
these days.
Anyway, some quick words on the "P3P data schema in XML Schema".
This issue had already been tackled quite some time ago in the P3P spec
group (you might have wondered if somebody hadn't thought
about it before... right? ;)
In fact, this has at a time been discussed as an alternate proposal, and
finally rejected.
I'll state the reasons and some comments here, because these still apply
(which means, reopening this issue in P3P1.1 should then
again mean challenge again the "con" of the solution).

First big motivation: who needs it? What are the real advantages?
Implementers, at the time, let us know they didn't like the
"xml-schema way" (let's call it this way), because
a) it makes parsing heavier
b) it makes simple data declaration too verbose (as you have to duplicate
each subpart of a data element in begin and end tags)

This was the main objection at the time. Now, we are no more in the
designing phase (1.0), so tackling this issue again in 1.1 has
to face the new, crucial, additional problem:
c) what are the costs of adding an alternate format to the spec?

There was also other considerations that led not to consider that design,
that I'll recap here too:
d) splitting data elements (etc) in separate tags, apparently leads to the
loss of the "reference with a URI" property: you'd still
need to recombine the info in a single-line canonicalization to get this
property back (so, essentially going back to the status
quo).
e) makes DTD support more difficult

Ok, enough with historical motivations for today ;)
So all in all, the above considerations just apply if this proposal is going
to end in 1.1 (i.e., it's reopening the issue).
If it's instead a translation-only thing (like the RDFization note of P3P),
likely to end as a Note or so, then of course all the
above is moot ;)
-M


> -----Original Message-----
> From: public-p3p-spec-request@w3.org
> [mailto:public-p3p-spec-request@w3.org]On Behalf Of Giles Hogben
> Sent: Tuesday, April 29, 2003 6:28 PM
> To: Joseph Reagle
> Cc: public-p3p-spec@w3.org; Rigo Wenning; Jeremy Epling
> Subject: RE: P3P Data Schema as XML Schema
>
>
> Here are some more files on this issue
> I have corrected some small errors in the schema transform (e.g. it was
> outputting category element and attribute element definitions with global
> scope where it shouldn't have been).
> I have also included a 2 stage transform which avoids using extensions
(you
> do transform 1 and then transform2 on the results of transform1 to
eliminate
> duplicates) and, for the benefit of other members of list the files for
the
> policy transform I sent earlier.
>
> Apologies for confusing the acronyms BDS and BSD... BDS means the base
data
> schema and BSD is an OS...
>
> For those who don't want to get bogged down in nasty amounts of
complexity,
> just look at the file bdsfinal.xsd which is the final result schema, or
try
> the policy transformer on a policy (e.g. the one included). Hope the
> directory and file names are relatively self explanatory
>
> Regards
>
> Giles
>
>
>
>
> -----Original Message-----
> From: Joseph Reagle [mailto:reagle@w3.org]
> Sent: 28 April 2003 20:08
> To: Giles Hogben
> Subject: Re: P3P Data Schema as XML Schema
>
>
> On Saturday 26 April 2003 09:06, you wrote:
> > Yeah - sorry - it was the quickest and easiest way to get it to work
> > at the time - will try to send a self executing .jar file at some
> > point - maybe that'll help.
>
> I'm still not following, keep in mind I know nothing about MS IE and very
> little about Java (I'm more of a XML and Python person) <smile/>. I was
> expecting to do something like:
>   xsltproc bsdtransform.xsl p3p1_0.xml > converted_p3p_1_0.xsd
> then I can check a P3P instance against that schema:
>   xsv p3p.xml converted_p3p_1_0.xsd
>
> What is "BSD" btw?
>



