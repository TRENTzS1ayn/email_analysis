docno="lists-017-3984941"
received="Wed Jul 16 11:58:04 2003"
isoreceived="20030716155804"
sent="Wed, 16 Jul 2003 11:55:17 0400"
isosent="20030716155517"
name="Joseph Reagle"
email="reagle@w3.org"
subject="Re: [BH] The most generic binding"
id="200307161155.17481.reagle@w3.org"
charset="iso-88591"
inreplyto="20030716144319.GQ1359&#64;rigo.w3.org"
expires="1"

To: Rigo Wenning<rigo@w3.org>
Cc: Lorrie Cranor<lorrie@research.att.com>, public-p3p-spec<public-p3p-spec@w3.org>



On Wednesday 16 July 2003 10:43, Rigo Wenning wrote:
> So I give you the example of how powerful this could be. As it is
> generic to XML, it could be also used in RDF.

Ah, ok, though it seems to be complicate things for reasons I don't quite 
understand yet. Some questions/issues:
1. What is the benefit of splitting the policies out across these sections 
over the existing mechanism of having different DATA elements in different 
POLICY elements within a POLICIES?
2. In your example, this means that the XML application schema will have to 
permit these foreign P3P elements, which prexisting XML formats won't be 
able to accomodate, and all such future ones would have to take this into 
account for, which I think unlikely.

I do believe that in the future once we have the P3P data structures in 
standard XML/schema, it will probably make sense to reconsider the design 
of P3P with all of the stuff, but in the medium term P3P 1.0 gives you the 
granularity in the policy, and the XForms proposal gives us a way to map a 
form element with a DATA ref that one will find in the POLICY, right?



