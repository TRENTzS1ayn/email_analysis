docno="lists-017-4389834"
received="Wed Jun  4 09:57:02 2003"
isoreceived="20030604135702"
sent="Wed, 04 Jun 2003 09:51:38 0400"
isosent="20030604135138"
name="Eric BrunnerWilliams in Portland Maine"
email="brunner@nicnaa.net"
subject="Re: AGENDA: P3P spec call June 11"
id="200306041351.h54DpcNr011514@nicnaa.net"
inreplyto="45B08F88-9691-11D7-93B7000393DC889A&#64;research.att.com"
expires="1"


To: Lorrie Cranor<lorrie@research.att.com>
cc:public-p3p-spec@w3.org,brunner@nic-naa.net


> 6. Discuss bugzilla 168
> http://www.w3.org/Bugs/Public/show_bug.cgi?id=168
> 
> Consider adding human-readable explanation strings to all elements
> that don't have them
> - could be done for a specific set of elements or generically
> - it appears that the way the extension mechanism is defined in the
> P3P schema we cannot add such elements in arbitrary places -- for
> example, I think we can add them to high-level elements such as
> PURPOSE but not as sub-elements of individual PURPOSE elements

This problem arose in a different, but related context. There was a late
proposal to add a binary toggle to arbitrary portions of the EPP schema,
and one element of that schema is defined as:

In eppcom-1.0.xsd this type definition exists:

<!--
Non-empty token type.
-->
  <simpleType name="minTokenType">
      <restriction base="token">
 <minLength value="1"/>
      </restriction>
  </simpleType>

This was used to define the type of the element "email". I never saw a way
to extend such a type declaration.

In general, if one doesn't require what I think of as a "glue layer" between
what I think of as "application interfaces" and "system interfaces", there is
a possibility for subsequent awkwardness -- my years writing UNIX APIs is
showing.

Stuffing the extension "outside" of the element, as you've suggested on the
PURPOSE element (but not its arbitrary sub-elements), works.

Sorry I missed the last call.
Eric



