docno="lists-017-5244997"
received="Wed May 14 07:27:01 2003"
isoreceived="20030514112701"
sent="Wed, 14 May 2003 21:26:50 +1000"
isosent="20030514112650"
name="Patrick.Hung@csiro.au"
email="Patrick.Hung@csiro.au"
subject="RE: [BH] First (Very Rought) Outline of Beyond HTTP"
id="754324CDE8E4EE4498D8E0357D9136850160105F@saabbt.act.cmis.CSIRO.AU"
charset="iso-88591"
inreplyto="[BH] First (Very Rought) Outline of Beyond HTTP"
expires="1"


To:reagle@w3.org,public-p3p-spec@w3.org


Hi Joseph,

> Patrick, the service description is true to the scenario, but as I'm not a

> WSDL expert, what led you to include the my:Privacy element as a child of 
> the wsdl:definitions?

I just try to make it simple and follow the style of your XForm example [1].

There may have other much better approach... I have to think about it...
Auy idea?

> So if I understand the WSDL extension model, we would also have to have
our 
> own schema that includes a redefinition of globalExt or base my:Privacy on

> the ExtensibilityElement complexType? (I don't understand this myself yet 
> and haven't found a good example.)

Is this something that you are looking for [1]:

       <schema targetNamespace="http://registry.example.com/2003/ns1.xsd"
              xmlns="http://www.w3.org/2000/10/XMLSchema">
           <complexType name="OrderInfo">
              <all>
                 <complexType name="PersonalInfo">
                    <all>
                       <complexType name="Name">
                          <all>
                             <element name="First" type="string"/>
                             <element name="Middle" type="string"/>
                             <element name="Last" type="string"/>
                          </all>
                       </complexType>        
                       <complexType name="Address">
                          <all>
                             <element name="Street" type="string"/>
                             <element name="City" type="string"/>
                             <element name="State" type="string"/>
                             <element name="Zip" type="string"/>
                          </all>
                       </complexType>
                    </all>
                 </complexType>
                 <complexType name="DomainInfo">
                    <all>
                       <element name="TLD" type="string"/>
                       <element name="DomainName" type="string"/>
                    </all>
                 </complexType> 
              </all>
           </complexType>
           <element name="RegistrationStatus" type="string"/>
           <complexType name="Privacy">
              <attribute name="rel" type="string" use="required"/>
              <attribute name="href" type="string" use="required"/>
           </complexType>
       </schema>

I am lazy here so that I put all stuff into one schema
"http://registry.example.com/2003/ns1.xsd"
We should separate the data types and the P3P privacy policies into
different schemas.
Anyway, let's focus on the basic concept and approach first and then we can
polish
and debug it later.

> Also, I presume that our WSDL extension is optional. Privacy is not
optional 
> at the point of solicitation, but since we are saying a WSDL declaration
is 
> (usefully) redundant, I don't think we need to argue that a WSDL processor

> must understand our extension to even process the description.

Yes, I agree with you. I will write something about SOAP messages tomorrow.

[1] http://www.w3.org/P3P/2003/p3p-beyond-http/



