docno="lists-017-7501603"
received="Thu Jun 10 10:02:50 2004"
isoreceived="20040610140250"
sent="Thu, 10 Jun 2004 16:02:28 +0200"
isosent="20040610140228"
name="Giles Hogben"
email="giles.hogben@jrc.it"
subject="Proposal for XSD data schema backward compatibility"
id="HZ3J0L00.82X@isisms.sti.jrc.it"
charset="iso-88591"
expires="1"

To:public-p3p-spec@w3.org



Hi,
During the working group call yesterday, we came up with the following 
proposal for integrating the new data schema format:
This was agreed among those present on the call, but we would like to solicit 
wider approval/disapproval. Please let me know if you think I represented our 
discussion accurately, and if you agree/disagree with the proposal.
Lorrie - I have included the other two small issues that I flagged up in the 
spec document.

XSD Base Data Schema Backward compatibility proposal
-------------------------------------------------------------------------------

1. For policies using data elements from the P3P1.0 base data schema, 
policies must be publised in the P3P 1.0 format. This may be acheived 
however, but writing and validating the policy using the new schema format 
and then using the provided XSLT to transform back to the old format. W3C can 
provide such transforms as a service.
2. Policy authors creating or using custom schemas MUST use the new format.
They then have two options:
a. write the policy in the new format and transform back to the old format - 
the new elements will then not be validated by user agents (because the 
schema will not be found)
b. write the policy in the new format and transform back to the old format, 
BUT include an EXTENSION element which provides the elements in a format 
which validates against the new schema they have written. User agents 
implementing P3P1.1. must then validate such extensions (which can easily be 
done using a schema validator)

I would also like to draw your attention to a question which I included in 
the new format specification (Lorrie, perhaps we can put it in Bugzilla):
For the specification of  entity address data, XSD format following the old 
structure is somewhat cumbersome. because you end up with something like:

<user>
        <contact>
                <postal>
                        <name>
                                Entityname
                        </name>
                </postal>
        </contact>
</user>

<user>
        <contact>
                <postal>
                        <city>
                                Entitycity
                        </city>
                </postal>
        </contact>
</user>

<user>
        <contact>
                <postal>
                        <street>
                                Entitystreet
                        </street>
                </postal>
        </contact>
</user>

etc.....

One suggestion from a colleague is to change the format to the more efficient:

<user>
        <contact>
                <postal>
                        <name>
                                Entityname
                        </name>
                        <city>
                                Entitycity
                        </city>
                        <street>
                                Entitystreet
                        </street>
                </postal>
        </contact>
</user>

Another issue for bugzilla is that the term name appears twice - once for 
business and once for the user - apparently with different semantics 
(otherwise it would have been a data structure)-  but I would say it should 
only appear once.



