docno="lists-018-0042975"
received="Sun May 12 14:08:27 2002"
isoreceived="20020512180827"
sent="Sun, 12 May 2002 13:53:40 0400"
isosent="20020512175340"
name="scott_boag@us.ibm.com"
email="scott_boag@us.ibm.com"
subject="Re: [xml-dev] XPath 2.0  how much of XQuery should it include?"
id="OFEC2B3719.22F6F3A2ON85256BB7.005D85C2@lotus.com"
charset="usascii"
inreplyto="[xml-dev] XPath 2.0  how much of XQuery should it include?"
expires="1"

To: Jeni Tennison<jeni@jenitennison.com>
Cc:public-qt-comments@w3.org



Jeni Tennison <jeni@jenitennison.com> wrote:
> There seems like there should be a qualitative distinction between the
> jobs that XPath and XSLT carry out. I've demonstrated through my posts
> here that I'm surpremely unable to articulate what the distinction
> should be, but I know it ain't the one that's being made at the
> moment.

Jeni, I haven't kept up on all your threads and the replies (some of them),
but, if it hasn't been pointed out before: one articulation of the
difference between the responsibilities of XPath and XSLT:

XPath:
1) An addressing mechanism into trees and sequences.
2) Constructs sequences of values.
(And, yes, it might be interesting to try and separate (1) into a subset,
though I have my doubts given complex predicates).

XSLT:
1) Constructs trees.

The separation of these responsibilities helps to reduce the complexity of
either.  Each is a tool tuned to it's respective task.  Each can be
expected to have some redundant mechanism, such as iteration and
conditional evaluation.

The question is where you draw the line.  From your previous posts I
understand you think the line might be drawn in a different place.  While I
think we have it divided just about correctly now, obviously this may well
be an area of contention for years to come.

==================

> To be honest, I doubt whether many people have had the energy to go
> through the WDs, so any opinion they do have will have been formed by
> the generally positive demonstrations of XSLT 2.0 that there have been
> on the list or by the generally negative impression that XPath 2.0 is
> based on the PSVI and therefore hideously complex because XML Schema
> is hideously complex.

Yes, that's the general problem, not only with the mulberry list.

While your posts have been thought provoking, in terms of seeing the
hideously complex, I think you should keep in mind that you're still seeing
very intermediate results.  Hopefully some functionality is yet to be
pruned, some seemingly complex functionality needs polishing, and a few bad
(or incomplete) ideas need to fixed.  The question is, do we need a general
change of direction?  Given the many opinions and 3 years (or whatever it's
been) of discussion, I actually think we're doing fairly well, and the
results will be a healthy design balance, with very positive connotations
for the Web.  Certainly the results will not be perfect.  But I think we're
on a pretty reasonable track, with light being seen at the end of the long
tunnel.

Our design center(s) drives down to some very fundamental questions, such
as what is XML?  ASCII text that is tagged, or semantically rich typed
data?  With the introduction of schemas, the answer evolves somewhat from
the first to include the second.  I truly believe that even document users
will need and want the rich typed data, whether they know it yet or not,
and visa versa with data users.  Surely people will use XML in both
domains.  This is the magic, challenge, and risk of XML: trying to be all
things to all people.  To some extent, XPath 2.0 has to inherit these
challenges and risks.

-scott
(Speaking for myself... these are not necessarily representative views of
my company, or the XSL Working Group).



