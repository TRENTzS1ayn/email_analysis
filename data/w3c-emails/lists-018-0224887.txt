docno="lists-018-0224887"
received="Wed May 15 16:36:31 2002"
isoreceived="20020515203631"
sent="Mon, 13 May 2002 22:04:52 0400 (EDT)"
isosent="20020514020452"
name="Michael Fuller"
email="msf@mds.rmit.edu.au"
subject="Re: [xml-dev] XPath 2.0  how much of XQuery  should it include? [fwd]"
id="20020514120359.E17238@io.mds.rmit.edu.au"
charset="usascii"
inreplyto="[xml-dev] XPath 2.0  how much of XQuery  should it include? [fwd]"
expires="1"

To:public-qt-comments@w3.org


[Forwarded; original posted to XML-DEV]
-----
On Fri, May 10, 2002 at 01:57:47PM +0100, Jeni Tennison wrote:
> In XSLT+XPath 1.0, the two syntaxes are complementary.
[...]

> [In XSLT+XPath 2.0] There are roughly the same features in both: XSLT
> uses xsl:for-each, XPath uses for; XSLT uses xsl:choose, XPath uses if;
> XSLT uses xsl:sort, XPath uses sort-by();
[...]

> My argument is that it would be perfectly possible for XSLT and XPath
> 2.0 to work in a complementary way again. We could redraw the line
> where it was before, but allow a couple of extra shorthand features in
> the text-based syntax, namely conditional expressions and a simple
> mapping operator. But these should be shorthand features that are used
> for the most common kinds of looping and conditional expressions, not
> mirrors of the full functionality of XSLT.

[...]

Michael, Jonathan, et alia:
    as one of XML-DEV's lurking hundreds (thousands?) I think I should
    chip in with a "me too".  As far as I'm concerned, Jeni's observations
    in general, and this suggestion specifically, have been spot on.

    In particular, XPath 2.0/XSLT 2.0 should be fixing known problems and
    omissions in the 1.0 versions, without blowing out excessively.
    XPath is there to provide core functionality; other standards can
    extend on that, as required.

    For example, XSLT 1.0.  Based on XPath 1.0, it added an extra data type
    (the result tree fragment), an extra grammar production (the Pattern),
    and extra functions (document(), key(), ...) (document(), key(), etc.).
    
    In hindsight, keeping XPath 2.0/XSLT 2.0 clean and tight should
    have been a design goal.
    
    I suspect many of the lurking XML-DEVers (and XSL-LISTers, for that
    matter) are similarly in agreement with Jeni.  Silence doesn't
    necessarily mean apathy: there's simply been no need to add anything
    to what Jeni's said, other than a "me too" such as this.

    (Hmmm: should I also post this to public-qt-comments?)
    
Cheers,
Michael Fuller

-----



