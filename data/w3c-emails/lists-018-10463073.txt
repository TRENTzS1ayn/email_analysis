docno="lists-018-10463073"
received="Tue Jul  1 05:15:01 2003"
isoreceived="20030701091501"
sent="Tue, 1 Jul 2003 10:14:55 +0100"
isosent="20030701091455"
name="Jeni Tennison"
email="jeni@jenitennison.com"
subject="Re: MS-FO-LC1033: Allow concat strings to be sequences"
id="149480296149.20030701101455@jenitennison.com"
charset="usascii"
inreplyto="5C39F806F9939046B4B1AFE652500A3A05C2D70C&#64;RED-MSG10.redmond.corp.microsoft.com"
expires="1"


To:"Michael Rys"<mrys@microsoft.com>
CC:public-qt-comments@w3.org


Michael Rys wrote:
> 7.4.1 fn:concat: Why has $op to be xs:string? And not xs:string*.
> Allow xs:string* and concatenate them as well (see 7.4.2 remark that
> only holds if fn:concat(("a", "b")) would be a valid expression).
>
> Examples: fn:concat(("a","b")) should be "ab".
> fn:concat(("a","b"),"c") should be "abc".

The string-join() function provides the facility for concatenating
strings in a sequence, and is a lot more powerful than concat() for
doing so.

If this change were made, the backwards compatibility conversion rules
would also have to change. In XPath 1.0, given:

  concat('foo: ', foo)

you would get 'foo: ' concatenated with the string value of the
*first* of the <foo> elements, rather than the string values of the
<foo> elements all concatenated together. I think that changing the
backwards compatibility conversion rules to handle the case where the
type of the argument is xs:string* would cause problems elsewhere --
for example it would prevent string-join() from working properly in
backwards compatibility mode.

Cheers,

Jeni

---
Jeni Tennison
http://www.jenitennison.com/



