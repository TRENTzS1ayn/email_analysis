docno="lists-018-10520570"
received="Tue Jul  1 13:50:58 2003"
isoreceived="20030701175058"
sent="Tue, 1 Jul 2003 19:50:44 +0200 "
isosent="20030701175044"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: ORA-FO-INPUTTYPES"
id="DFF2AC9E3583D511A21F0008C7E62106073DCF93@daemsg02.softwareag.de"
inreplyto="ORA-FO-INPUTTYPES"
expires="1"


To: Stephen Buxton<stephen.buxton@oracle.com>,public-qt-comments@w3.org


> 
> Some functions take parameters with generic types, and define the 
> semantics of the atomization/conversion that is done inside the 
> function. Others expect to have more specific types passed 
> in. We think 
> the latter is preferable: functions should not be expected to do 
> type-conversion.
> 
> eg the boolean-not() function should take a boolean argument 
> rather than 
> item* - the caller should do the implicit or explicit casting 
> to boolean 
> before passing the argument to the function.
> 

The boolean() function is an explicit invokation of the "effective boolean
value" algorithm, and the not() function is its inverse. This algorithm is
defined on all kinds of input. If boolean() didn't convert its argument, the
user would need to call something that did - what would we name that
something?

Michael Kay 



