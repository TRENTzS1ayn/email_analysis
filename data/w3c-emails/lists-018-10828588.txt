docno="lists-018-10828588"
received="Wed Jul  2 05:05:25 2003"
isoreceived="20030702090525"
sent="Wed, 2 Jul 2003 10:05:20 +0100"
isosent="20030702090520"
name="Jeni Tennison"
email="jeni@jenitennison.com"
subject="Re: MS-FO-LC1047: 7.5.2 fn:matches"
id="192566121489.20030702100520@jenitennison.com"
charset="ISO-885915"
inreplyto="5C39F806F9939046B4B1AFE652500A3A05C2D86E&#64;RED-MSG10.redmond.corp.microsoft.com"
expires="1"


To:"Michael Rys"<mrys@microsoft.com>
CC:"Kay, Michael"<Michael.Kay@softwareag.com>,public-qt-comments@w3.org


Hi Michael,

[regarding errors in the examples of fn:matches()]
> The first one is within a line, but the strings are distributed over
> two lines.
>
> The second one is using the multi-line option, so it should find it,
> but it currently returns true. Etc.
>
> Either the examples are wrong or the description of multiline
> matching is confusing.

The behaviour for the particular examples is described in 7.5.1
Regular Expression Syntax, where it says:

  * In string mode, the metacharacter . matches any character
    whatsoever. In multiline mode, the metacharacter . matches any
    character except a newline (#x0A) character.

The first example:

  fn:matches(., "Kaum.*kr?hen")

is in string mode, so the metacharacter . matches any character
whatsoever, including newline (#x0A) characters. Thus it will return
true despite the fact that "Kaum" and "kr?hen" appear on different
lines, because the . can match the newline character between them.

The second example:

  fn:matches(., "Kaum.*kr?hen", 'm')

is in multiline mode, so the metacharacter . matches any character
aside from newline (#x0A) characters. Thus it will return false
because "Kaum" and "kr?hen" have a newline character (which can't be
matched by the .) between them.

Personally, I think that the spec is clear, but perhaps you have some
suggested wording that would make it clearer?

Cheers,

Jeni

---
Jeni Tennison
http://www.jenitennison.com/



