docno="lists-018-10848901"
received="Wed Jul  2 09:19:03 2003"
isoreceived="20030702131903"
sent="Wed, 2 Jul 2003 15:18:46 +0200 "
isosent="20030702131846"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: MS-FO-LC1047: 7.5.2 fn:matches"
id="DFF2AC9E3583D511A21F0008C7E62106073DCFB1@daemsg02.softwareag.de"
inreplyto="MS-FO-LC1047: 7.5.2 fn:matches"
expires="1"


To: Michael Rys<mrys@microsoft.com>,"Kay, Michael"<Michael.Kay@softwareag.com>,public-qt-comments@w3.org


Setting the flag to "m" (multi-line mode) means that each line is considered
separately, so ^ and $ match the end of a line. In the absence of this flag,
the entire string is considered as a single unit.

This may be confusing, but it is exactly how multi-line mode works in Java
and in Perl.

Michael Kay


> -----Original Message-----
> From: Michael Rys [mailto:mrys@microsoft.com] 
> Sent: 02 July 2003 01:53
> To: Kay, Michael; public-qt-comments@w3.org
> Subject: RE: MS-FO-LC1-047: 7.5.2 fn:matches
> 
> 
> The first one is within a line, but the strings are 
> distributed over two lines. 
> 
> The second one is using the multi-line option, so it should 
> find it, but it currently returns true. Etc.
> 
> Either the examples are wrong or the description of multiline 
> matching is confusing.
> 
> Best regards
> Michael
> 
> > -----Original Message-----
> > From: Kay, Michael [mailto:Michael.Kay@softwareag.com]
> > Sent: Tuesday, July 01, 2003 13:44 PM
> > To: Michael Rys; public-qt-comments@w3.org
> > Subject: RE: MS-FO-LC1-047: 7.5.2 fn:matches
> > 
> > > -----Original Message-----
> > > From: Michael Rys [mailto:mrys@microsoft.com]
> > > Sent: 01 July 2003 03:02
> > > To: public-qt-comments@w3.org
> > > Subject: MS-FO-LC1-047: 7.5.2 fn:matches
> > >
> > >
> > >
> > > Class: Editorial
> > >
> > > Examples seem to be wrong: first is false, second is true, 4th is
> true
> > >
> > 
> > Are you referring to the examples associated with the Wilhelm Busch 
> > stanza?
> > 
> > I believe these examples are correct, why do you think they 
> are wrong?
> > 
> > Michael Kay
> 



