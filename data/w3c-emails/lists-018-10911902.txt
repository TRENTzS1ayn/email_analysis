docno="lists-018-10911902"
received="Thu Jul  3 04:59:29 2003"
isoreceived="20030703085929"
sent="Thu, 3 Jul 2003 01:58:54 0700"
isosent="20030703085854"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: MS-FO-LC1047: 7.5.2 fn:matches"
id="5C39F806F9939046B4B1AFE652500A3A05C2D9A7@RED-MSG10.redmond.corp.microsoft.com"
charset="iso-88591"
inreplyto="MS-FO-LC1047: 7.5.2 fn:matches"
expires="1"


To:"Liam Quin"<liam@w3.org>,"Jeni Tennison"<jeni@jenitennison.com>
Cc:"Kay, Michael"<Michael.Kay@softwareag.com>,<public-qt-comments@w3.org>


As Mike pointed out, 'm' is the same as //m in Perl. I just find the term "multi-line" misleading since I (and others) read it as spanning more than one line.

Best regards
Michael

> -----Original Message-----
> From: Liam Quin [mailto:liam@w3.org]
> Sent: Wednesday, July 02, 2003 8:03 AM
> To: Jeni Tennison
> Cc: Michael Rys; Kay, Michael; public-qt-comments@w3.org
> Subject: Re: MS-FO-LC1-047: 7.5.2 fn:matches
> 
> On Wed, Jul 02, 2003 at 10:05:20AM +0100, Jeni Tennison wrote:
> > The first example:
> >   fn:matches(., "Kaum.*kr?hen")
> > is in string mode, so the metacharacter . matches any character
> > whatsoever, including newline (Hx0A) characters.
> [...]
> 
> > The second example:
> >
> >   fn:matches(., "Kaum.*kr?hen", 'm')
> >
> > is in multiline mode, so the metacharacter . matches any character
> > aside from newline (Hx0A) characters.
> 
> This seems to be exactly the opposite of the "m" modifier in Perl 5.
> Is there a reason for this incompatibility?  It's very confusing.
> 
> If there's a de facto standard for modifying regexp's for multiline
> matches, it's surely Perl.
> 
> Liam
> 
> --
> Liam Quin, W3C XML Activity Lead, liam@w3.org,
> http://www.w3.org/People/Quin/



