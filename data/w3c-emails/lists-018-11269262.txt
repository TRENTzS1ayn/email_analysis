docno="lists-018-11269262"
received="Wed Jul 16 14:07:47 2003"
isoreceived="20030716180747"
sent="Wed, 16 Jul 2003 19:59:43 +0200"
isosent="20030716175943"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: [XSLT] 2.9 Error Handling"
id="DFF2AC9E3583D511A21F0008C7E62106073DD000@daemsg02.softwareag.de"
inreplyto="[XSLT] 2.9 Error Handling"
expires="1"


To: Oliver Becker<obecker@informatik.hu-berlin.de>,public-qt-comments@w3.org

> 
> would you please explain the reason for having recoverable 
> errors? (Yes, they are already in XSLT 1.0, but nevertheless ...)

This is not something we have reviewed recently, and perhaps we should,
though it would be difficult now to change the rules.

I can't claim to give a historical answer to the question, but my
understanding is that the primary reason was a feeling that client-side XSLT
should try hard to avoid run-time errors and use fallback behaviour instead,
while other environments needed a more conventional approach to error
detection and reporting.

I think that other motivations have crept in for certain error conditions:
some errors are recoverable because it was felt that detecting the error
might be unreasonably expensive.

You can be fairly sure that when a W3C specification allows implementations
to differ, it was because the working group had difficulty getting
implementors to agree with each other, not because they thought that
allowing differences was intrinsically a good idea.

Michael Kay

> 
> If it is implementation-dependent whether such a recoverable 
> error will be reported or not, don't you think that this 
> leads to non-portable stylesheets? The XSLT developer might 
> not be aware of the recovering action when developing the 
> stylesheet. So, theoretically, an XSLT engine built 
> into a web browser could report the error (and nothing else), 
> while the developer's engine seems to work fine. Both are 
> standard compliant.
> 
> This kind of choice for the behaviour of an XSLT 
> implementation is a bad idea in my mind. It would be better 
> to require that all implementations must produce the same 
> defined result on a given input.
> 
> Best regards,
> Oliver Becker
> 
> 
> /-------------------------------------------------------------------\
> |  ob|do        Dipl.Inf. Oliver Becker                             |
> |  --+--        E-Mail: obecker@informatik.hu-berlin.de             |
> |  op|qo        WWW:    http://www.informatik.hu-berlin.de/~obecker |
> \-------------------------------------------------------------------/
> 



