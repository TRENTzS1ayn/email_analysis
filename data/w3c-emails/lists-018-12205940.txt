docno="lists-018-12205940"
received="Wed Jun  4 16:05:28 2003"
isoreceived="20030604200528"
sent="Wed, 4 Jun 2003 13:05:13 0700"
isosent="20030604200513"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: Query use case: dynamically subselecting a sequence of named elements"
id="5C39F806F9939046B4B1AFE652500A3A058251AF@RED-MSG10.redmond.corp.microsoft.com"
charset="usascii"
inreplyto="Query use case: dynamically subselecting a sequence of named elements"
expires="1"


To:"Ellis Cohen"<e.cohen@acm.org>,<public-qt-comments@w3.org>


$aStuff/*[local-name()=$parts]

Michael

> -----Original Message-----
> From: public-qt-comments-request@w3.org [mailto:public-qt-comments-
> request@w3.org] On Behalf Of Ellis Cohen
> Sent: Wednesday, June 04, 2003 10:55 AM
> To: public-qt-comments@w3.org
> Subject: Query use case: dynamically subselecting a sequence of named
> elements
> 
> 
> Suppose the element Stuff were defined as
> 
>    <!ELEMENT Stuff (Thing1, Thing2, ...., Thing99)>
> 
> If $aStuff identified a Stuff element node
> and $parts contained the sequence ('Thing24', 'Thing27', 'Thing82')
> 
> one would be sorely tempted to write  $aStuff/$parts
> to get the corresponding sub-elements of the Stuff node
> 
> That wouldn't work, but how easy would it be write the necessary
> expression
> (preferably in XPath alone) given $aStuff and $parts?
> 
> 



