docno="lists-018-13071935"
received="Thu Jun 12 17:45:40 2003"
isoreceived="20030612214540"
sent="Thu, 12 Jun 2003 23:45:20 +0200"
isosent="20030612214520"
name="Tobias Reif"
email="tobiasreif@pinkjuice.com"
subject="Re: SAG-FO01: Too many functions (general comment)"
id="3EE8F470.9000603@pinkjuice.com"
charset="UTF8"
inreplyto="DFF2AC9E3583D511A21F0008C7E62106073DCF09&#64;daemsg02.softwareag.de"
expires="1"


To:"Kay, Michael"<Michael.Kay@softwareag.com>
CC:public-qt-comments@w3.org


Kay, Michael wrote:

 > The cost of having too many functions, as I tried to point out, is
 > much greater than the man-day of coding that it takes to implement
 > each one.

I agree that cost of implementation is quite low. Thus cost of 
implementation ...

http://lists.w3.org/Archives/Public/public-qt-comments/2003Jun/0082.html
"The size of the library directly affects the cost of implementation, 
which experience shows is the major factor determining the success or 
failure of a proposed standard."

... is not a reason to remove all those functions.
(Again: If I have to implement them myself, I have to ship them with 
each app. And if they are built into the processor, they can be made 
much faster than when written in XSLT.)

 > Making facilities optional can be a useful procedural device that
 > reduces the resistance to cutting things out. If it helps to get a
 > decision made, then fine. In principle, though, it's an unsatisfactory
 > compromise.

I agree to a certain degree. So you could remove WXS ("XSD") dependency [1].

An other point:

http://lists.w3.org/Archives/Public/public-qt-comments/2003Jun/0082.html
"It also affects the cost of learning to use the language, which is 
another important predictor of success."

I very much support this requirement. Is

   for $i in 1 to count($s) return
     if ($s[$i] eq $v) then $i else ()

easier to learn than

   index-of()

? Not at all IMHO; it's much more difficult to learn.

Don't scrap useful, convenient, and easy to learn facilities; instead 
further develop them, and the language may flourish and may become 
popular in the community.
(The high cost of implementing all the WXS related stuff is much more 
likely to be a hindrance.)

Tobi

[1]
http://www.w3.org/TR/xslt20/#d0e1456
"The conformance rules for XSLT 2.0, defined in 21 Conformance, 
distinguish between a basic XSLT processor and a schema-aware XSLT 
processor."

-- 
http://www.pinkjuice.com/



