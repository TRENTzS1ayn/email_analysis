docno="lists-018-13353063"
received="Mon Jun 16 15:58:14 2003"
isoreceived="20030616195814"
sent="Mon, 16 Jun 2003 21:58:08 +0200"
isosent="20030616195808"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: [XSLT] 11.1.3 exclude-resultprefixes"
id="DFF2AC9E3583D511A21F0008C7E62106073DCF20@daemsg02.softwareag.de"
inreplyto="[XSLT] 11.1.3 exclude-resultprefixes"
expires="1"


To: Oliver Becker<obecker@informatik.hu-berlin.de>,public-qt-comments@w3.org


> the current specification of exclude-result-prefixes in XSLT 
> 2.0, section 11.1.3 is a little bit unclear what the value 
> "#all" means. Does it mean all namespaces in scope of the 
> element bearing that attribute or does it mean all namespaces 
> in scope of a literal result element? 

I agree with you, it's currently ambiguous. And I think the meaning should
be "all namespaces that are in scope for the element on which the
[xsl:]exclude-result-prefixes attribute appears.
> 
> Furthermore: Does the next sentence
> "In this case, any other prefixes are ignored."
> mean, it is no error if among these other prefixes is one 
> that is not bound to any namespace? 

Someone else already made this comment. I'm inclined to say that it should
be an error to mix #all with any other prefixes. That's the way we decided
to specify it for mode="#all", and there's no reason to be different here.
> 
> Last question: is it an error to use "#default" if there's no 
> declaration for the default namespace?
> 
Yes, I think this should be an error: it doesn't mean anything to exclude
the "null namespace", so we should disallow it.

Thanks for these useful comments - exactly the kind of nit-picking detail
that we need at this stage of the game!

Michael Kay 



