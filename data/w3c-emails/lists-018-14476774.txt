docno="lists-018-14476774"
received="Wed Jun 25 12:42:00 2003"
isoreceived="20030625164200"
sent="Wed, 25 Jun 2003 18:41:50 +0200"
isosent="20030625164150"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: [DM] stable order"
id="DFF2AC9E3583D511A21F0008C7E62106073DCF5C@daemsg02.softwareag.de"
inreplyto="[DM] stable order"
expires="1"


To: Don Chamberlin<chamberl@almaden.ibm.com>,"Kay, Michael"<Michael.Kay@softwareag.com>
Cc: Oliver Becker<obecker@informatik.hu-berlin.de>,public-qt-comments@w3.org


 


I believe that the "in other words" sentence is correct.  
 
The sentence is correct, but the introduction "in other words" suggests that
it is redundant (i.e. equivalent to the previous sentence), which it is not.
It's saying something different.
 
Michael Kay
 
 
 Our intention was to define an implementation-dependent ordering among the
documents and document fragments that are in-scope for a given query.
Furthermore, this ordering is stable during the execution of a given query. 
Cheers,
--Don Chamberlin




"Kay, Michael" <Michael.Kay@softwareag.com> 
Sent by: public-qt-comments-request@w3.org 


06/24/2003 09:46 AM 

        
        To:        Oliver Becker <obecker@informatik.hu-berlin.de>,
public-qt-comments@w3.org 
        cc:         
        Subject:        RE: [DM] stable order




> section 3.2 Document Order of the XQuery 1.0 and XPath 2.0 
> Data Model uses the term "stable" to characterize orders. I 
> do not find any definition in this document what a stable order is.

I agree that this is missing. I think that in other documents we use a
phrase such as "consistent for the duration of a query or transformation",
which reflects the intent.

> 
> Do you mean, if two nodes A and B whose order is 
> implementation-dependent are in some concrete order then this 
> order doesn't change within this model (for the lifetime of 
> this instance; never)? Does it have to be the same order 
> between two invocations of an implementation?

Who can say what the lifetime of an instance is?
> 
> Moreover, regarding distinct documents, the specification says
> 
>    "The relative order of nodes in distinct documents is 
>    implementation-dependent but stable. In other words, given two 
>    distinct documents A and B, if a node in document A is before a 
>    node in document B, then every node in document A is before every 
>    node in document B."
> 
> That sounds as if the second sentence ("In other words, ...") 
> is a conclusion or an explanation of the term "stable order", 
> but I can't 
> apply this meaning to attribute or namespace nodes.

I think the "In other words" is wrong. The second sentence is saying
something quite different from the first; it is saying that although it's
implementation-defined whether nodes from document D precede or follow nodes
from document E, they are never going to be intermingled.

Michael Kay



