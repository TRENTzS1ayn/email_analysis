docno="lists-018-15735168"
received="Tue Mar  4 19:39:26 2003"
isoreceived="20030305003926"
sent="Wed, 5 Mar 2003 01:39:18 +0100 "
isosent="20030305003918"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: XQuery 1.0  4.1 Namespace declarations"
id="DFF2AC9E3583D511A21F0008C7E621060453E109@daemsg02.softwareag.de"
inreplyto="XQuery 1.0  4.1 Namespace declarations"
expires="1"


To:Svgdeveloper@aol.com,public-qt-comments@w3.org




> -----Original Message-----
> From: Svgdeveloper@aol.com [mailto:Svgdeveloper@aol.com] 
> Sent: 04 March 2003 16:17
> To: public-qt-comments@w3.org
> Subject: XQuery 1.0 - 4.1 Namespace declarations
> 
> 
> 
> The following example, is not totally clear - at least to me.
> 
> declare namespace xx = "http://example.org"
> let $i := <foo:bar xmlns:foo = "http://example.org">
> <foo:bing> Lentils </foo:bing>
> </foo:bar>
> return $i/xx:bing
> 
> The example is intended to illustrate that namespace prefixes 
> need not be 
> identical for two names to match.
> 
> However, I am unclear (I appreciate that 2.5 Variable 
> Bindings is under 
> review) whether $i in the example is intended to bind to the 
> structure <foo:bar xmlns:foo = > "http://example.org"> 
> <foo:bing> Lentils </foo:bing> 
> </foo:bar>
> 
> or only to the outer <foo:bar> element node.
> 

The value of $i is an element node, the <foo:bar> element node, and this
element node has a child <foo:bing> element node, which in turn has a child
text node. You can think of $i as referring to the whole tree rooted at the
<foo:bar> element, but technically the value of the variable is the single
element node at the root of the tree.

Michael Kay



