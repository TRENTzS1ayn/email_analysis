docno="lists-018-16099964"
received="Tue Mar 11 12:00:27 2003"
isoreceived="20030311170027"
sent="Tue, 11 Mar 2003 08:59:14 0800"
isosent="20030311165914"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: document is not an element, is it?"
id="5C39F806F9939046B4B1AFE652500A3A04BA9B40@RED-MSG10.redmond.corp.microsoft.com"
charset="USASCII"
inreplyto="document is not an element, is it?"
expires="1"


To:"Kay, Michael"<Michael.Kay@softwareag.com>,"Todd A. Mancini"<todd.mancini@daxat.com>,"Jonathan Robie"<jonathan.robie@datadirect-technologies.com>,"MW"<onlymails@gmx.net>,<public-qt-comments@w3.org>


Thanks for the response. I think we need to take this discussion into
the WG list after this reply.

Your exposition makes sense but I don't think the documents currently
state it like that.

Note that anySimpleType in the formal semantics document is being used
for the purpose of type subsumption even though you cannot have a value
of that type. 

The relationship to item needs a better explanation in our documents
(which I remark in my latest document review) and what I refer to below
as a proposed issue.

Best regards
Michael

> -----Original Message-----
> From: Kay, Michael [mailto:Michael.Kay@softwareag.com]
> Sent: Tuesday, March 11, 2003 4:41 AM
> To: Michael Rys; Todd A. Mancini; Jonathan Robie; MW; public-qt-
> comments@w3.org
> Subject: RE: document is not an element, is it?
> 
> > There is an open issue proposed on whether item? should be
> > item* or not.
> >
> > We have anySimpleType?=anySimpleType* (since we do not have lists of
> > lists) and anyType? = anyType*. So if you want to make
> > anyType a subtype of item then you better have the
> > equivalence item?=item*.
> >
> > Best regards
> > Michael
> 
> Michael, you have me completely confused.
> 
> (a) I can't see the relevance of the above to Todd's comments
> (b) I am unaware of these issues
> (c) They don't make sense.
> 
> How can "item?" be the same as "item*"    (?)
> 
> How can "anyType" be a subtype of "item"? anyType is an annotation
> attached
> to element nodes; no XPath value can ever be an instance of anyType
> (because
> the typed value of a node with this label is not defined); item cannot
be
> used as an annotation on a node (because an annotation must be a
> schema-defined simple or complex type).
> 
> The set of types available in XML Schema (simple types and complex
types)
> and the set of types used for values in XPath are two overlapping
sets.
> Their intersection is the set of atomic types. Complex types appear in
> XPath
> ONLY as annotations of nodes. Node kinds like element() and comment()
> appear
> as XPath types but not as XML Schema types. "Item", being the union of
> node
> kinds and atomic types, is an XPath type but not an XML Schema type.
So
> "anyType" and "Item" are in completely unrelated parts of the space.
> 
> Michael Kay



