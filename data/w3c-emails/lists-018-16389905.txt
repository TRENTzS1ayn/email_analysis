docno="lists-018-16389905"
received="Mon Mar 24 16:10:29 2003"
isoreceived="20030324211029"
sent="Mon, 24 Mar 2003 13:10:36 0800"
isosent="20030324211036"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: FTS comments"
id="5C39F806F9939046B4B1AFE652500A3A04E5D86A@RED-MSG10.redmond.corp.microsoft.com"
charset="iso-88591"
inreplyto="FTS comments"
expires="1"


To: Kai Gro?johann<kai.grossjohann@uni-duisburg.de>,"Pat Case"<PCASE@crs.loc.gov>
Cc:<public-qt-comments@w3.org>


Dear Kai, while I see this as a use case, please note that the use case document also serves as a way for the working group to define what use cases it currently investigates for its current version of the language design. That means that certain use cases may be beyond the scope of the current version.

Best regards
Michael

> -----Original Message-----
> From: Kai Gro?johann [mailto:kai.grossjohann@uni-duisburg.de]
> Sent: Monday, March 24, 2003 13:05 PM
> To: Pat Case
> Cc: public-qt-comments@w3.org
> Subject: Re: FTS comments
> 
> 
> "Pat Case" <PCASE@crs.loc.gov> writes:
> 
> > From where I sit, the first thing we need is full-text querying in
> > XQuery encompassing functionalities which currently exist.
> >
> > As a librarian and expert searcher, I find even stemming algorithms
> > fail me often enough that I want to retain the crude, but totally
> > controllable predictable wildcards. I build better queries with
> > wildcards then I can with stemming, because stemming doesn't allow me to
> > decide which related words to include on a word by word basis. Just
> > because it is linguistically related doesn't mean it returns the results
> > I want. Stemming is black box which works against expert searchers as
> > often as it work for them. We feel the same about scoring and ranking.
> >
> > Different users benefit from different tools. I wouldn't expect a
> > novice user to use wildcards or to be so annoyed  with scoring and
> > ranking.
> 
> Thank you for the education.  I'm not an expert searcher, it never
> occurred to me that stemming could be a problem in this way.
> 
> > Which doesn't mean I wouldn't welcome the likes of a linguistic parser.
> >  It would be a boon to all end users. Are you recommending we add a use
> > case which calls an implementation-defined linguistic parser (as we did
> > for stemming) or are you recommending more than that?
> 
> It is very close.  I am suggesting to add a use case which does
> "linguistic phrase search" and leave it to the implementation whether
> they use a linguistic parser or map it to proximity search or they ask
> the Oracle of Delphi.
> 
> --
> A preposition is not a good thing to end a sentence with.



