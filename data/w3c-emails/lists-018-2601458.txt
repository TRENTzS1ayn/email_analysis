docno="lists-018-2601458"
received="Thu Oct 24 03:46:30 2002"
isoreceived="20021024074630"
sent="Wed, 23 Oct 2002 20:35:06 0400 (EDT)"
isosent="20021024003506"
name="Tim Bray"
email="tbray@textuality.com"
subject="Re: XSchema integration, responsiveness, and a  good  solution  to   the problem"
id="3DB73BEB.20709@textuality.com"
charset="usascii"
inreplyto="5.1.0.14.0.20021017100157.05656cb0&#64;ncmail.datadirecttechnologies.com"
expires="1"


To: Jonathan Robie<jonathan.robie@datadirect-technologies.com>
Cc:"Kay, Michael"<Michael.Kay@softwareag.com>,public-qt-comments@w3.org





Jonathan Robie wrote:

Oops, I was just reviewing this and realized that Jonathan had asked me 
a question, which I will answer and also address the use-case issue.

>
> The scope of the current XQuery was determined by the use cases, which
> were first published in February 2001 [1]. 

As I pointed out in my initial comments, this is simply not true.  See 
comment "TB5" in

http://lists.w3.org/Archives/Public/public-qt-comments/2002Jul/0007.html

which points out the entire lack of use cases for the "cast", "assert", 
and "validate" built-ins.

> Most of this functionality is
> implied by the requirements in our original requirements document, which
> was first published in January 2000 [2]. There was strong agreement in
> the Working Group to accept these use cases, and we have been proceeding
> on this basis ever since then. The only major functionality added to the
> use cases since then is support for W3C XML Schema - we now have a use
> case that illustrates this functionality [3], 

... ah, I see we are in agreement then.

> In your latest message on the XML Query Comments list, you indicate that
> your preferred solution would be to ship Basic XQuery, which basically
> leaves out support for W3C XML Schema complex types. I am assuming that
> most of the complexity you are talking about here involves support for
> complex types and the static semantics associated with this. Is that true?

Indeed.  It would be an unalloyed blessing for the community, for users, 
for vendors, and for the XQuery WG to move XQuery Basic to last call 
forthwith and release it as XQuery 1.0 - with a bit of work you should 
be able to get to Recommendation approximately a year earlier than if 
you proceed with support for all the complex-type rocket science.

> We have been very careful to publish our requirements and use cases very
> early in the life of the Working Group. Changing our requirements and
> use cases, which have both been published for quite a long time, and
> have had the consensus of the Working Group for all this time, would be
> extremely disruptive. As an AC Rep, I would not like to have my company
> participate in Working Groups under the understanding that the
> requirements may be changed years after consensus is achieved and the
> requirements are posted.

I agree, which is why I found the massive amount of specification-ware 
to support functionality unsupported by use-cases to be so very highly 
questionable, and why I'm concerned about the ex post facto insertion of 
use cases after the design is already done.  -Tim



