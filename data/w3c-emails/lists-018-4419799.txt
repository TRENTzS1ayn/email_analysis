docno="lists-018-4419799"
received="Sat Aug  2 09:31:21 2003"
isoreceived="20030802133121"
sent="Sat, 2 Aug 2003 15:31:07 +0200"
isosent="20030802133107"
name="james anderson"
email="james.anderson@setf.de"
subject="Re: Inherent Namespace Ambiguities  A Serious Fundamental Problem?"
id="9289D636-C4ED-11D7-B61C000393BB8814@setf.de"
charset="USASCII"
inreplyto="1c5.cad286c.2c5ceb5b&#64;aol.com"
expires="1"

Cc:xml-names-editor@w3.org,www-xml-blueberry-comments@w3.org,public-qt-comments@w3.org,www-tag@w3.org



On Saturday, Aug 2, 2003, at 12:24 Europe/Berlin, Svgdeveloper@aol.com 
wrote:

> It seems to me that, at a fundamental level, there is a problem with 
> the Namespaces in XML 1.0 Recommendation and the Namespaces in XML 1.1 
> specification. There is no mechanism defined to allow for change of 
> any type in the names (or their implied characteristics) in a 
> namespace.

while such a mechanism would be useful, there is no reason to require 
that it be an inherent part of xml namespace specifications. the 
Namespaces in XML recommendations specify which element in the value 
domain (NCName x IRI) is denoted by a given lexical expression of the 
form <NCName>:<NCName> (more or less). This has nothing to do with what 
the interpretation which some other specification or an application 
applies to the name.

the perception, that there is a problem, arises only if one confuses 
the identity of a name with its interpretation.

every interpretation depends on a mechanism. if that mechanism, by its 
nature, imposes a "context" on an interpretation for its internal 
symbols, then it can effect a 1-1 map between universal names and 
internal symbols and must simply ensure that each interpretation happen 
in the correct context.

if, on the other hand, the mechanism interprets all internal symbols 
globally, then it must establish contexts for interpreting the 
universal names and ensure that universal names map to the symbols 
which are associated with the specified interpretation.

in order to ease the implementation, one could standardize descriptions 
for relations among the sets of names [see eg.
http://lists.xml.org/archives/xml-dev/200105/msg00112.html]

none of this is "a problem". either of the above approaches will work. 
the serialization facilities in cl-http, for example 
[http://www.ai.mit.edu/projects/iiip/doc/cl-http/home-page.html], 
should be an adequate demonstration of how one can use packages to do 
this in a single binding context.  [see 
http://lists.xml.org/archives/xml-dev/200008/msg00626.html for a 
description of the general approach]

in no case is this a matter which an xml namespace standard must 
address.

...



