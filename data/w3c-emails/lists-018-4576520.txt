docno="lists-018-4576520"
received="Tue Aug  5 07:25:00 2003"
isoreceived="20030805112500"
sent="Tue, 5 Aug 2003 13:17:25 +0200"
isosent="20030805111725"
name="Stijn Vansummeren"
email="stijn.vansummeren@luc.ac.be"
subject="Incorrect normalized core grammar in may 2 draft of formal semantics?"
id="200308051317.26159.stijn.vansummeren@luc.ac.be"
charset="usascii"
expires="1"

To:public-qt-comments@w3.org



Dear List,

I have a few questions concerning the "Normalized core grammar",
Appendix A of the XQuery Formal Semantics.

As far as I can see, this grammar contains "orphaned" productions
(i.e. productions whose left-hand non-terminal can never be reached
from the Module non-terminal). Examples of these are ForExpr,
CastExpr, and all of the non-terminals they refer to. (I assume that
ForExpr isn't really necessary since its derivable expressions are
obtained in FLWORExpr). 

Moreover, (and please correct me if I'm wrong), I was under the
impression that all path expressions were normalized into
for-expressions and step expressions. So why are the PathExpr and
RelativePathExpr non-terminals necessary? Also, what is the need for
AdditiveExpr, MultiplicativeExpr, etc (used through CastExpr), since
all arithmetic expressions are normalized into standard function
calls. Shouldn't the syntax of CastExpr be of the form

       "cast as" AtomicType "$" VarName

(at least, that's the impression I got from the normalization rules in
section 4.12.3).

Finally, the rule for OperatorExpr has an empty right-hand-side. 

Any comments on these observations would be welcome. 

Best regards,

Stijn Vansummeren
University of Limburg (LUC)
3590 Diepenbeek
Belgium



