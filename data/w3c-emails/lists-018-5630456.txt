docno="lists-018-5630456"
received="Tue Aug 19 06:59:09 2003"
isoreceived="20030819105909"
sent="Tue, 19 Aug 2003 12:58:51 +0200"
isosent="20030819105851"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: [xslt2 func/op] tokenizing &quot;abba&quot; to (&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;a&quot;)"
id="DFF2AC9E3583D511A21F0008C7E62106073DD088@daemsg02.softwareag.de"
inreplyto="[xslt2 func/op] tokenizing &quot;abba&quot; to (&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;a&quot;)"
expires="1"


To: David Carlisle<davidc@nag.co.uk>,tobiasreif@pinkjuice.com
Cc:public-qt-comments@w3.org,ashokma@microsoft.com

> 
> The sentence 
> > If the supplied $pattern matches a zero length string...
> 
> should anyway (as this thread shows) be clarified, but as it 
> stands I think the natural interpretation of "matches" here 
> is the interprestation of matches used in replace(), and in 
> this case that is a greedy match as .? is greedy, so since it 
> is the entire regexp it is equivalent to . and will match 
> each character. While .? _could_ match an empty string, it 
> doesn't here so the empty string should not be used as separator.

That's a good point. The intended meaning of the sentence was

if (fn:matches("", $pattern))

but you are right to point out that a different interpretation is possible.

Michael Kay



