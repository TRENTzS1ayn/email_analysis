docno="lists-018-8800119"
received="Sun Feb  2 22:21:21 2003"
isoreceived="20030203032121"
sent="Sun, 2 Feb 2003 19:20:48 0800"
isosent="20030203032048"
name="XQuery"
email="xquery@attbi.com"
subject="Feedback on XQuery F&amp;O"
id="000001c2cb33$3fc7bb20$6601a8c0@brundage1"
charset="usascii"
expires="1"

To:<public-qt-comments@w3.org>



This feedback applies to the Nov15th XQuery F&O at
http://www.w3.org/TR/2002/WD-xquery-operators-20021115/

  ----

3 (Error function) and Issue #181 (semantics of fn:error)

Consider aligning this function with XSLT's message system (which can
optionally terminate or not).

  ----

8.3.1 (op:duration-equal) Dead code

This function is defined here, but not used in the operator mapping of the
XQuery spec.  Perhaps related to the open item to cut it (issue#185).

  ----

8.3.1-8.3.21 (op:*-equal) Useless definitions

"Returns true if and only if $operand1 is exactly equal to $operand2."
Well, duh.  But what is the meaning of the phrase "is exactly equal to" ??

(The ordinary date/time types point to the XML Schema spec, but for some
reason the Gregorian types do not.  For each type, either point to the XML
Schema spec, or else repeat its definitions here.  Don't make statements
that are devoid of content.)

  ----

13.1.7 (fn:deep-equal)

The equivalent XQuery given for deep-equal() is incorrect.  When both nodes
lack a name, the second condition fails.

A corrected version would be:

if (not(fn:empty(fn:node-name($parameter1)) and
fn:empty(fn:node-name($parameter2)))
  and (fn:node-name($parameter1) != fn:node-name($parameter2)) then false()
else

On a minor related note, this query given will also fail to compile, since
it always writes false instead of false().

  ----

14.3.1 (fn:sequence-deep-equal)

The sequence-deep-equal() function is strangely asymmetric with the
sequence-node-equal() function.  The latter returns the empty sequence if
either argument is empty, but the former does not.



