docno="lists-018-9239414"
received="Tue Feb 18 20:53:11 2003"
isoreceived="20030219015311"
sent="Tue, 18 Feb 2003 17:34:07 0500"
isosent="20030218223407"
name="Todd A. Mancini"
email="todd.mancini@daxat.com"
subject="RE: Why is STOPWORDs a MUST in XQuery/XPath FullText and not MAY?"
id="000d01c2d79d$d9842a70$0201a8c0@qodfathr"
charset="usascii"
inreplyto="5C39F806F9939046B4B1AFE652500A3A047AC29A&#64;RED-MSG10.redmond.corp.microsoft.com"
expires="1"

To:"'Michael Rys'"<mrys@microsoft.com>,<public-qt-comments@w3.org>


Michael,

 

No, that's what I thought it meant - that the system MUST supply support
for stopword elimination.  But why?  I fail to see a good reason to
mandate stopword support, but I understand that certain implementations
MAY want/need to have stopword support (because they need it to
perform).  I don't believe the majority of users want stopwords
(although many believe they need them, because they have been using
engines which require them).  My personal experiences indicate that
having stopwords is not regarded as nice functionality, just necessary
functionality for the 'older technology' full-text engines.

 

I'd be more inclined to agree that stopwords should be a MUST if you
could give me an example of a query which is more powerful to the user
due to the existence of stopword support (but not ignoring other
technologies, such as stemming, spelling, thesaurus, phrase detection,
etc.).  The use-cases for stopwords, in my opinion, highlight why
stopwords are bad and why a user would want to use an engine without
them.

 

To be clear, my point is this: if I can create a fantastic full-text
search engine that can handle queries which include common words such as
'the', it seems a little silly for me to then do extra development to
add stopword support simply so I can be compliant with the
specification.  This extra development does not make my engine any more
powerful, and I argue provides no benefit to my users.

 

Just my $0.02.

 

            Regards,

            -Todd



