docno="lists-019-10105332"
received="Mon Sep 22 19:07:17 2003"
isoreceived="20030922230717"
sent="Mon, 22 Sep 2003 16:07:14 -0700"
isosent="20030922230714"
name="Ashok Malhotra"
email="ashokma@microsoft.com"
subject="RE: MS-FO-LC1-017: cast untypedAtomic to other type with arithmetic and compare ops."
id="E5B814702B65CB4DA51644580E4853FB0ADB39D6@red-msg-12.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="MS-FO-LC1-017: cast untypedAtomic to other type with arithmetic and compare ops."
expires="-1"


To:"Michael Rys"<mrys@microsoft.com>,<public-qt-comments@w3.org>
Cc:"Jeni Tennison"<jeni@jenitennison.com>

The WGs discussed this on 9/16/2003 and decided not to make the change
suggested.  The rationale was essentially that expressed by Jeni
Tennyson in reply to your note which said: 

"The problem is that it would also mean that xs:untypedAtomic('2.5')+1
resulted in a dynamic error, since the untyped atomic value '2.5'
isn't a legal lexical representation of xs:integer. I think that this
would be disconcerting."

All the best, Ashok 

________________________________

From: public-qt-comments-request@w3.org
[mailto:public-qt-comments-request@w3.org] On Behalf Of Michael Rys
Sent: Monday, June 30, 2003 4:08 PM
To: public-qt-comments@w3.org
Subject: MS-FO-LC1-017: cast untypedAtomic to other type with arithmetic
and compare ops.

 

Class: Editorial      
 
Why don't we cast untypedAtomic to other type instead of directly to
xs:double and use xs:double only as fallback for arithmetic and compare?

 
This would mean that an expression such as xs:untypedAtomic(1)+1 results
in an integer(2) instead of a double(2.0e0) as it does now.
 
It would also be more consistent with the handling of untypedAtomic when
passing it to a function.
 
 



