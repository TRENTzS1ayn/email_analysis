docno="lists-019-10332478"
received="Wed Sep 24 10:52:48 2003"
isoreceived="20030924145248"
sent="Wed, 24 Sep 2003 16:49:24 +0200"
isosent="20030924144924"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: ORA-FO-UNORDERED 15.1.15 fn:unordered"
id="DFF2AC9E3583D511A21F0008C7E62106073DD14B@daemsg02.software-ag.de"
inreplyto="ORA-FO-UNORDERED 15.1.15 fn:unordered"
expires="-1"


To: Oliver Becker<obecker@informatik.hu-berlin.de>,public-qt-comments@w3.org

> 
> I'm sorry, but I don't understand what the *function* 
> fn:unordered really ought to do. 

Conceptually, fn:unordered returns an arbitrary permutation of its input
sequence.

In reality, it tells the optimizer that it needn't go to the trouble of
getting the input sequence in the right order, because the order isn't
needed. So it's a true function in terms of the formal semantics, but is
likely in practice to be treated as an optimization directive.

Consider the also discussed 
> distinct-values example.
> 
> <xsl:variable name="a" 
> select="distinct-values((1,2,3,2,1,2,3,2,1))" /> 
> <xsl:variable name="b" select="fn:unordered($a)" />
> 
> What are the values of $a and $b please?

Applying unordered() to the results of distinct-values() has no effect,
because the results are already in arbitrary order. The result is some
permutation of the sequence (1,2,3).
> 
> 
> By the way, I just noted the following:
> shouldn't the example of distinct-values uses the additional 
> pair of parentheses?
> 
> Instead of 
> fn:distinct-values(1, 2.0, 3, 2) returns something
> write
> fn:distinct-values((1, 2.0, 3, 2)) returns something
> 
Yes!

Michael Kay



