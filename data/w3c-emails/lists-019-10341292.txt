docno="lists-019-10341292"
received="Wed Sep 24 11:20:52 2003"
isoreceived="20030924152052"
sent="Wed, 24 Sep 2003 17:20:51 +0200 (MEST)"
isosent="20030924152051"
name="Oliver Becker"
email="obecker@informatik.hu-berlin.de"
subject="RE: ORA-FO-UNORDERED 15.1.15 fn:unordered"
id="200309241520.h8OFKpU5016226@mail.informatik.hu-berlin.de"
charset="us-ascii"
inreplyto="ORA-FO-UNORDERED 15.1.15 fn:unordered"
expires="-1"


To:public-qt-comments@w3.org



> > I'm sorry, but I don't understand what the *function* 
> > fn:unordered really ought to do. 
> 
> Conceptually, fn:unordered returns an arbitrary permutation of its input
> sequence.
> 
> In reality, it tells the optimizer that it needn't go to the trouble of
> getting the input sequence in the right order, because the order isn't
> needed. So it's a true function in terms of the formal semantics, but is
> likely in practice to be treated as an optimization directive.

I'm not convinced that it is a good idea to disguise this as a function.

Can I expect that

<xsl:variable name="a" select="some-function()" />
<!-- perhaps do something with $a -->
<xsl:variable name="b" select="unordered($a)" />

and

<xsl:variable name="b" select="unordered(some-function())" />

will always give the same result sequence for $b?

I think it should result in the same sequence, but I can hardly
imagine how this should be implemented reasonably.

Oliver Becker

/-------------------------------------------------------------------\
|  ob|do        Dipl.Inf. Oliver Becker                             |
|  --+--        E-Mail: obecker@informatik.hu-berlin.de             |
|  op|qo        WWW:    http://www.informatik.hu-berlin.de/~obecker |
\-------------------------------------------------------------------/



