docno="lists-019-11806144"
received="Fri Apr 16 04:07:01 2004"
isoreceived="20040416080701"
sent="Fri, 16 Apr 2004 01:06:31 -0700"
isosent="20040416080631"
name="Michael Rys"
email="mrys@microsoft.com"
subject="[FS] Editorial comments on section 2"
id="EB0A327048144442AFB15FCE18DC96C702A2ADBE@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
expires="-1"


To:<public-qt-comments@w3.org>


MS-FS-LC1-003
Section 2.1.1
Editorial

Introduce the notion and purpose of XQuery Core before talking about its
syntactic notation.

MS-FS-LC1-004
Section 2.1.1
Editorial

Please replace "language's semantics" with "languages' semantics" (there
are two!)

MS-FS-LC1-005
Section 2.1.2
Editorial

"Expr raises Error": Add note that bold names refer to other judgments.
In this case it is an auxiliary judgment.

MS-FS-LC1-006
Section 2.1.3
Editorial

Final Note is more confusing than helpful. It is not an algorithm since
the rules are descriptive. Please remove.

MS-FS-LC1-007
Section 2.1.4
Editorial

Using "env" for environment group is confusing.

MS-FS-LC1-008
Section 2.1.4
Editorial

The scoping of some of the environments (variables, namespaces) is not
understandable from the single sentence "Updating the environment
captures the scope of a symbol ". Please improve or give better example.

MS-FS-LC1-009
Section 2.1.5
Editorial

Composition of several inference rules should be explained.

MS-FS-LC1-010
Section 2.2
Editorial

Please do not use the term "value" as a synonym for "item" or "sequence
of items" (see similar comments on other documents). Thus rename the
section of 2.2 to "XML items" and perform other such alignments
throughout the document.

MS-FS-LC1-012
Section 2.2
Editorial

Please replace "Elements have a type annotation and contain a value"
with "Elements have a type annotation and contain a sequence of items"

MS-FS-LC1-013
Section 2.2
Editorial

Replace "Text nodes always contain one string value of type
xdt:untypedAtomic, therefore the corresponding type annotation is
omitted." with "Text nodes always contain one string value of type
xdt:untypedAtomic, therefore the corresponding type annotation is
omitted in the formal notation of a text node."

MS-FS-LC1-014
Section 2.2.1
Editorial

Replace "Notably sequences cannot be nested." with "Notably sequences
are automatically flattened." Since you can write nested sequences
syntactically: they are just flattened.

MS-FS-LC1-015
Section 2.2.2
Editorial

Replace "true as xsd:boolean " with "true as xs:boolean "

MS-FS-LC1-019
Section 2.3.2
Editorial

Replace "Generic node types (e.g., node()), " with "Generic node types
such as used in the SequenceType production (e.g., node()), "

MS-FS-LC1-020
Section 2.3.2
Editorial

Replace "The following is a type for a nillable element of type string"
with "The following is a type for a nillable element of type string with
name size"

MS-FS-LC1-022
Section 2.3.3
Editorial

Replace "with lower bound 0 or 1, and upper bound 1." with "with
minOccurs 0 or 1, and maxOccurs 1."

MS-FS-LC1-023
Section 2.3.3
Editorial

Replace "The "&" operator builds the "interleaved product" of two types.
For example,

  (element a & element b) =
    element a, element b
  | element b, element a

" with

"The "&" operator builds the "interleaved product" of two types. For
example,

  (element a & element b) 

which is equivalent to 

    element a, element b
  | element b, element a

"

MS-FS-LC1-025
Section 2.3.4
Editorial

"element street of type xsd:string*": Explain that this is sequence of
element with name street! People may bind * to xsd:string. Also, please
use xs:string and not xsd:string.

MS-FS-LC1-029
Section 2.4.1
Editorial

"In XQuery, static the input context may be defined by the processing
environment and by declarations in the Query Prolog ": Fix the sentence.

MS-FS-LC1-030
Section 2.4.1
Editorial

"Evaluation works by bottom-up application of evaluation rules over
expressions, starting with evaluation of literals and variables.": From
a query processing point of view, the expressions (such as path
expressions) are actually evaluated top-down. Please explain based on an
example and call out that the bottom-up application actually still may
lead to a top-down evaluation of an expression such as /a/b/c[@d=42].

MS-FS-LC1-031
Section 2.4.1
Editorial/Conformance

"Statically typed implementations are required to find and report type
errors during static analysis, as specified in this document. ": 
This should be qualified as subject to implementations inferring more
precise types. Also, some people read it as that the error messages are
normatively given in the specification. Please write this clearer.

MS-FS-LC1-032
Section 2.4.2
Editorial

Please call out that some of the parts of the syntax is hotlinked (since
it is not easily visible on a printed page or even on a browser).

MS-FS-LC1-033
Section 2.4.2
Editorial
"FWLR" -> "FLWOR"

MS-FS-LC1-034
Section 2.5.1
Editorial

"xdt: for XML Schema components and built-in types.": Actually the
XQuery/XPath built-in types. Please fix.

MS-FS-LC1-035
Section 2.5.2
Editorial

"fn:distinct-nodes(node*) as node*": Has been cut. Please use a function
that still exists. Also please use the F&O formatting for generic types.



