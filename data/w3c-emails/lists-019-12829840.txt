docno="lists-019-12829840"
received="Mon Feb 16 22:22:05 2004"
isoreceived="20040217032205"
sent="Mon, 16 Feb 2004 19:21:57 -0800"
isosent="20040217032157"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: [XQuery] MS-XQ-LC1-084"
id="EB0A327048144442AFB15FCE18DC96C7020F7EC4@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="[XQuery] MS-XQ-LC1-084"
expires="-1"


To:"Daniela Florescu"<danielaf@bea.com>
Cc:<public-qt-comments@w3.org>


Actually, I think that the spec is clear in the semantics (also see
section 4 in the language spec).

Best regards
Michael

> -----Original Message-----
> From: Daniela Florescu [mailto:danielaf@bea.com]
> Sent: Monday, February 16, 2004 11:41 AM
> To: Michael Rys
> Cc: public-qt-comments@w3.org
> Subject: Re: [XQuery] MS-XQ-LC1-084
> 
> Michael,
> 
> I think the spec is simply unclear what the semantics is in this case.
> 
> See BEA's comment:
>
http://lists.w3.org/Archives/Public/public-qt-comments/2004Feb/0455.html
> 
> If it remains like Jonathan would desire, and make the scope include
> all the subexpressions that are lexically within the element
> constructor,
> we do require more detailed examples to make users understand this.
> 
> See BEA's request for more detailed explanation here:
>
http://lists.w3.org/Archives/Public/public-qt-comments/2004Feb/0443.html
> 
> The fact that now the semantics of an expression depends on the
lexical
> position of the expression within the query will impact on the way
users
> will make use of the LET clauses and on the functions.
> 
> Best regards,
> Dana
> 
> 
> 
> On Feb 16, 2004, at 3:13 AM, Michael Rys wrote:
> 
> >
> > Section 3.7.1.2 Namespace Declaration Attributes
> > Technical
> >
> > Namespace declaration attributes should not affect the in-scope
> > namespace static context for expressions. We think that only the
ones
> > in
> > the prolog should affect the namespace prefixes inside expressions.
> >
> > We find the following semantics to be confusing:
> >
> > declare namespace b="uri1"; <a xmlns:b="uri2">{/b:c}</a> will look
for
> > {uri2}:c and not {uri1:c}. "uri2" should only affect the
construction
> > part.
> >
> > The same should then also hold for the computed constructors.
> >
> > Thus, we would like to have the following behaviour:
> >
> > Namespace declaration in prolog: Provides static namespace prefix
> > bindings for both constructors and expressions
> >
> > Namespace declaration on construction: Provides static namespace
prefix
> > bindings for constructors only, not for embedded expressions.
> >



