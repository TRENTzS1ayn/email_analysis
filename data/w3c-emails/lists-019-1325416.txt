docno="lists-019-1325416"
received="Tue May 13 04:43:34 2003"
isoreceived="20030513084334"
sent="Tue, 13 May 2003 10:42:18 +0200"
isosent="20030513084218"
name="Tobias Reif"
email="tobiasreif@pinkjuice.com"
subject="node equality: fn:node-equal()"
id="3EC0AFEA.70704@pinkjuice.com"
charset="us-ascii"
expires="-1"


To:public-qt-comments@w3.org


Hi

I'd like to compare two nodes for equality. I could do it by testing 
various aspects of the pair, thus writing my:node-equal(), but I'd 
prefer to have it available in the language.

I'm not sure if such a function is available already; otherwise, I 
suggest to add something like fn:node-equal(). It would test for 
equality (not identity), and simply return true or false. I think that 
would be like fn:deep-equal(), but would not recurse down the tree; it 
would only test the single node, or the root note of the tree if the arg 
is a tree.

Or perhaps something like fn:item-equal() would make sense: pairs of 
nodes or pairs of atomic values could be fed to it.

Tobi

P.S.

BTW, op:node-equal() still tests for identity instead of equality.

-- 
http://www.pinkjuice.com/



