docno="lists-019-13313320"
received="Tue Feb 17 11:09:33 2004"
isoreceived="20040217160933"
sent="Sun, 15 Feb 2004 11:28:09 -0800"
isosent="20040215192809"
name="Mary Holstege"
email="mary@cerisent.com"
subject="[QT] CER-05 Catching dynamic errors"
id="16431.51273.616000.710733@gargle.gargle.HOWL"
charset="us-ascii"
expires="-1"


To:public-qt-comments@w3.org



Query Lang [2.5.2] Cannot catch errors

Dynamic errors can be raised, for example through fn:error(), but there is no
means to catch them. This is a serious deficiency for writing robust
applications, as one must take immense pains to ensure that no expression can
ever, given any set of data, raise a dynamic error if one wants to produce an
application level error result instead of an implementation level one. 

Suggest: add try $expression catch $variable $expression
where the variable binds to the error and is an item
This expression will return the value of the try clause unless a dynamic error
was raised, in which case it will return the value of the catch clause. 

Example: A function with a parameter that you want to validate using
"validate". If it's not valid, the query blows up and cannot recover, for
example, by fixing up the bad data. The query should be able to do some
internal recovery. 
Example: A query performs a division somewhere resulting in an xs:decimal, and
it happens to result in an overflow, from which the application could benignly
recover. The application should be given that chance.



