docno="lists-019-13582687"
received="Tue Feb 17 11:44:15 2004"
isoreceived="20040217164415"
sent="Tue, 17 Feb 2004 08:44:05 -0800"
isosent="20040217164405"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: [General] CER-03 Input sources"
id="EB0A327048144442AFB15FCE18DC96C7020F807D@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="[General] CER-03 Input sources"
expires="-1"


To:<mary@cerisent.com>,<public-qt-comments@w3.org>


Why would such a function with completely implementation-defined
semantics (what does it return? A sequence of items? Document-nodes?
Element-nodes?) improve interoperability of the query?

If you want interop, request that every implementation defines the
implicit context to be a document or recommend that users bind data to a
variable and use the same name...

Michael

> -----Original Message-----
> From: public-qt-comments-request@w3.org [mailto:public-qt-comments-
> request@w3.org] On Behalf Of Mary Holstege
> Sent: Sunday, February 15, 2004 11:26 AM
> To: public-qt-comments@w3.org
> Subject: [General] CER-03 Input sources
> 
> 
> 
> [General] Input sources
> 
> There should be a standard mechanism to obtain a vendor-specified
"input
> sequence".  For document-oriented repositories this would be something
> like a
> list of all documents in the database so input()//foo[bar="x"] would
apply
> the
> XPath to every document in the database.  It could be a specially
named
> variable instead, but since doc() and collection() are functions, it'd
be
> more
> consistent to use input().  Using a standard mechanism helps query
> portability.
> 
> 



