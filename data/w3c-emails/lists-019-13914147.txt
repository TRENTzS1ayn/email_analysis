docno="lists-019-13914147"
received="Tue Feb 17 13:44:22 2004"
isoreceived="20040217184422"
sent="17 Feb 04 10:44:18"
isosent="20040217154418"
name="Stephen Buxton"
email="Stephen.Buxton@oracle.com"
subject="ORA-FO-266-B: Error codes should be normative (2)"
id="200402171844.i1HIiIG04475@rgmgw5.us.oracle.com"
expires="-1"


To:public-qt-comments@w3.org
Cc:


SECTION Annex D: Error Summary

The F&O document (as well as other documents) summarize error codes in an Annex that is labelled to be non-normative.  In some ways, this makes sense, because XQuery does not specify any sort of an API by which errors can be "returned" to any entity.  However, it is clear that there will be more than one such API (e.g., JSR 225, XQJ, is defining such an API for use by Java programmers). 

It would be a serious problem if each API, and each XQuery implementation, were free to return radically different error codes for identical errors, as programmers would be unable to write code that is portable among XQuery engines. 

Some way to make the error codes themselves normative (but, of course, *not* the natural-language phrase that is associated with the codes).

One approach might be to state that whenever the XQuery specification indicates that a specific error is to be raised, that the specified (normative) error code must be made available in an implementation-defined way to the agent that caused the XQuery to be evaluted by the XQuery engine.  This is crude and clumsy, but definitely better than nothing!  The alternative would be to create an SQL-like diagnostics facility that would allow users to execute a subsequent query to retrieve the error code, etc.  I doubt that would be acceptable for XQuery 1.0, but would be deferred to a future version. 

- Steve B.



