docno="lists-019-15006591"
received="Wed Feb 18 18:45:44 2004"
isoreceived="20040218234544"
sent="Wed, 18 Feb 2004 15:45:39 -0800"
isosent="20040218234539"
name="Don Chamberlin"
email="chamberl@almaden.ibm.com"
subject="Re: [XQuery] IBM-XQ-008: Transitivity of value comparisons"
id="OF48F226C6.D81276AD-ON88256E3E.00825454-88256E3E.008284A2@us.ibm.com"
charset="US-ASCII"
inreplyto="OFD7489023.E703BC7F-ON88256E37.00814D8A-88256E37.008304E4&#64;us.ibm.com"
expires="-1"

To: Don Chamberlin<chamberl@almaden.ibm.com>
Cc:public-qt-comments@w3.org


Dear Mr. Chamberlin,
On Feb. 18, 2004, the Query Working Group agreed to modify the XQuery 
document as suggested in your attached comment.
Regards,
--Don Chamberlin




Don Chamberlin <chamberl@almaden.ibm.com> 
Sent by: public-qt-comments-request@w3.org
02/11/2004 03:51 PM

To
public-qt-comments@w3.org
cc

Subject
[XQuery] IBM-XQ-008: Transitivity of value comparisons







(IBM-XQ-008) Section 3.5.1 (Value Comparisons): Value comparisons were 
intended to be transitive, but there is a case in which they are not. 
Suppose that A and C are values of type int (32 bits of precision) that 
differ in their low-order bit. Suppose that B is the value of type float 
(24 bits of precision) into which both A and C are converted by the rules 
for casting int to float. Then "A eq B" is true and "B eq C" is true, but 
"A eq C" is false. 

The language documents should state that the value comparison operators 
are transitive except in cases where precision is lost in type-casting of 
operands. 

--Don Chamberlin



