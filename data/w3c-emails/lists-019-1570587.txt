docno="lists-019-1570587"
received="Tue May 13 20:30:40 2003"
isoreceived="20030514003040"
sent="Wed, 14 May 2003 02:27:04 +0200"
isosent="20030514002704"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: /WD-xpath-datamodel-20030502/"
id="DFF2AC9E3583D511A21F0008C7E62106073DCE2B@daemsg02.software-ag.de"
inreplyto="/WD-xpath-datamodel-20030502/"
expires="-1"


To:David.Pawson@rnib.org.uk,public-qt-comments@w3.org


> > We have added statements in the XPath and XSLT specifications
> > saying that
> > the set of types may be extended by implementors, I think the 
> > Data Model
> > document probably needs to say something to reflect this.
> 
> Then does that mean that xslt and xpath need to extend the 
> datamodel, and are hence non-compliant to a data model built 
> for them, due to that extension?
> 

XSLT defines a concept of "extension functions", that is functions written
in a language other than XSLT. XQuery in its latest draft also has a similar
concept, called "external functions". The way extension functions are
written is entirely implementation-defined. One thing that has been found
useful, in support of extension functions, is to allow "extension types" for
the return values and arguments of such functions. Some XQuery implementors
also want to extend the type system to allow better interworking with SQL.
So the motivation for allowing extensions to the type system is
interoperability with other languages. Making the type system extensible
does not make the host languages non-compliant to the data model; it does of
course mean that stylesheets or queries that choose to use extension types
will be non-interoperable.

There is also some interest among some WG members in supporting alternative
schema languages, and an extensible type system seems a useful way of
enabling that, though I don't think anyone has explored all the implications
of doing this.

Michael Kay 



