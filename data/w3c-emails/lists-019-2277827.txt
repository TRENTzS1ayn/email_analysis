docno="lists-019-2277827"
received="Mon May 19 16:49:23 2003"
isoreceived="20030519204923"
sent="Mon, 19 May 2003 16:47:55 -0400"
isosent="20030519204755"
name="Norman Walsh"
email="Norman.Walsh@Sun.COM"
subject="Re: /WD-xpath-datamodel-20030502/"
id="877k8mslxg.fsf@nwalsh.com"
charset="us-ascii"
inreplyto="9B66BBD37D5DD411B8CE00508B69700F049E175D&#64;pborolocal.rnib.org.uk"
expires="-1"

To:David.Pawson@rnib.org.uk
Cc:public-qt-comments@w3.org



-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

/ David.Pawson@rnib.org.uk was heard to say:
| <quote>
| 3.7 Comments, Processing Instructions, and Whitespace
| Although the data model is able to represent comments, processing
| instructions, and insignificant whitespace, preservation of this information
| may be unnecessary and onerous for some applications.
|
| An instance of the data model can be constructed from an Infoset, a PSVI, or
| from some other data source entirely. Different applications may or may not
| choose to construct nodes in the data model to represent comments,
| processing instructions, and insignificant white space. These decisions are
| considered outside the scope of the data model. Consequently the data model
| makes no attempt to control or identify the sort of processing in this
| regard that an application uses to construct a data model instance.
| </quote>
|
| I am concerned about the 'may' in the first para, wrt XSLT applications.

A data model must be consistent, but it can be constructed any way you
like. There are no doubt implementations that will choose to discard
syntactic artifacts that they consider insignificant. Users who find
them significant will have to choose implementations accordingly.

Some applications will be utterly unable to preserve information about,
for example, comments that occur inside content with a simple type.

| I'd hope they would be required to be processed in an xslt application;
| If such an application is using this data model, then how can that be
| enforced?

It can't. Choose an implementation that does.

| E.g. I'd hope that the determination of the significance of white space is
| the choice of the end user. 

On this point, I think you're probably confusing xsl:strip-space and
xsl:preserve-space with the XML 1.0 notion of "significant
whitespace". They aren't related.

End users have no control over significant whitespace, that's entirely
a consequence of how the DTD or schema is written. Whitespace in
elements with element content is insignificant. (That's what
"insignificant whitespace" means.)

It may be that some applications will want to preserve this, but
there's no way that all implementors are going to agree to do so. The
data model doesn't say you have to throw it away, only that it's
outside the scope of the data model to say whether or not you do.

| Hence I disagree with this being outside the scope of this data model.

Has my explanation helped convince you?

                                        Be seeing you,
                                          norm

- -- 
Norman.Walsh@Sun.COM    | We think in generalities, but we live in
XML Standards Architect | detail--Alfred North Whitehead
Web Tech. and Standards |
Sun Microsystems, Inc.  | 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: Processed by Mailcrypt 3.5.7 <http://mailcrypt.sourceforge.net/>

iD8DBQE+yUL7OyltUcwYWjsRAn59AJwNLKpmvdGIWdFMv+N5Zo3iccOnPwCgoIhj
wirLI8C46L0izo7AC5u+1wc=
=Cxhn
-----END PGP SIGNATURE-----



