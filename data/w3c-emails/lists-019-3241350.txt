docno="lists-019-3241350"
received="Mon Nov  3 19:05:06 2003"
isoreceived="20031104000506"
sent="Mon, 3 Nov 2003 16:05:00 -0800"
isosent="20031104000500"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: Overloading functions in XSLT and XQuery"
id="EB0A327048144442AFB15FCE18DC96C7012C00DF@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="Overloading functions in XSLT and XQuery"
expires="-1"


To:"Kay, Michael"<Michael.Kay@softwareag.com>,"Noe Michejda"<noe_michejda@7thportal.pl>,<public-qt-comments@w3.org>

The reason is that the current built-in overloading with arity should
continue to work if we go to overloading based on the full signature
information. Once we allow the users to overload, I am concerned that we
get cases where overloading with arity will result in a different
resolution than overloading based on the typed signature. So instead of
having to deal with this in (for XQuery) the first version, we wanted to
postpone this feature.

 

Best regards

Michael (speaking for himself)

 

 

________________________________

From: Kay, Michael [mailto:Michael.Kay@softwareag.com] 
Sent: Sunday, November 02, 2003 8:17 AM
To: Noe Michejda; Michael Rys; public-qt-comments@w3.org
Subject: RE: Overloading functions in XSLT and XQuery

 

> 
> RE: Overloading functions in XSLT and XQuery> XQuery 1.0 
> decided to only allow overloading of XQuery's own built-in 
> functions and not provide overloading 
> > capabilities for the user-defined functions. 
> > This explains the perceived contradiction below. 
> 
> But XSLT allows overloaded user-defined functions. 
> This will be very inconvinient for products allowing using of 
> XSLT libraries in XQuery. And to some degree event for people 
> porting libraries from XSLT to XQuery. 
> 

Personally, I agree. I can't see any logical objection to overloading by
arity (two functions with the same name but different numbers of
arguments). I think it's very odd that the function calling mechanism in
XQuery allows for it, but that user-defined functions have to be
uniquely named.

Michael Kay 



