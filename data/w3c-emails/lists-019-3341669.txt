docno="lists-019-3341669"
received="Thu Nov  6 12:13:24 2003"
isoreceived="20031106171324"
sent="Thu, 6 Nov 2003 09:08:14 -0800"
isosent="20031106170814"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: WD-xpath-functions-20030502: casting xs:QName"
id="EB0A327048144442AFB15FCE18DC96C70136DD01@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="WD-xpath-functions-20030502: casting xs:QName"
expires="-1"


To:"james anderson"<james.anderson@setf.de>,"Jonathan Robie"<jonathan.robie@datadirect.com>
Cc:"Kay, Michael"<Michael.Kay@softwareag.com>,<public-qt-comments@w3.org>


> thank you, but no, it does not.
> 
> it neither deomstrates why one should need to do this nor why one
> should be allowed to. i keep asking for a demonstration because
neither
> an implementation of xslt, nor an implementation of xquery required
its
> implementation except specifically in order to satisfy the respective
> spec's stipulation that the function be defined. no robust application
> could seriously include the expression
> 
>      make-empty-element( xs:QName("james") )
> 
> the whole point of this typing business is to make things robuster
> isn't it? why, then, specify your language to include operations which
> do not necessarily close over the data domains. the only thing which
> makes sense is something of the order of
> 
>      make-empty-element( xs:UName("", "james") )
> 
> anything else is the logical equivalent of doing floating point
> arithmetic on pointers to known integer data.
> 
> ...

[Michael Rys] I personally agree. Although, since there is no type
called xs:UName you would need a function. 

Best regards
Michael



