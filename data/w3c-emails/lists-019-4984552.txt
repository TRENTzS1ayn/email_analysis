docno="lists-019-4984552"
received="Sun Nov 16 22:36:06 2003"
isoreceived="20031117033606"
sent="Sun, 16 Nov 2003 19:33:35 -0500"
isosent="20031117003335"
name="Elliotte Rusty Harold"
email="elharo@metalab.unc.edu"
subject="RE: Namespace prefixes for functions and operators considered con  fusing"
id="p06002004bbddc6d88c5e@[192.168.254.4]"
charset="us-ascii"
inreplyto="DFF2AC9E3583D511A21F0008C7E62106073DD2B3&#64;daemsg02.software-ag.de"
expires="-1"


To:"Kay, Michael"<Michael.Kay@softwareag.com>,public-qt-comments@w3.org


At 1:16 AM +0100 11/17/03, Kay, Michael wrote:
A personal response.

I have some sympathy with your comments, but...

I don't feel that the way we describe the semantics of operators in 
terms of a mapping to hypothetical functions is enormously helpful to 
the reader, and I have suggested in the past that it be changed. 
However, the working group felt that although such a change might be 
an editorial improvement, implementing the idea would involve a great 
deal of effort and risk introducing errors, and decided not to go 
down this route. There's nothing technically unsound in the current 
approach.

Hmm, for what it's worth I don't feel the definition of operators in 
terms of functions is necessarily a bad thing.

I would personally be in favour of having the core functions be in 
the null namespace, as they were in XPath 1.0, and abandoning the 
notion of a default namespace for functions. I think the introduction 
of the fn: namespace for core functions gives very little benefit and 
is an unnecessary complexity.

That's basically what I'm saying. I was trying to get my notes ready 
for tomorrow night's XQuery presentation to the New York XML SIG, and 
I was trying to make sense out of the changes to the operator 
namespace in the latest drafts. Then I realized that if I simply took 
out all references to function and operator namespaces from my notes, 
absolutely nothing was lost! You could still do everything you could 
do if you knew functions were in a namespace! In fact, the resulting 
notes were clearer and less confusing all around.

I find that whenever you can remove something with no loss in 
functionality, then it probably doesn't belong there in the first 
place. Who was it who said the work was done when there was nothing 
left to take away?

-- 

   Elliotte Rusty Harold
   elharo@metalab.unc.edu
   Effective XML (Addison-Wesley, 2003)
   http://www.cafeconleche.org/books/effectivexml
   http://www.amazon.com/exec/obidos/ISBN%3D0321150406/ref%3Dnosim/cafeaulaitA



