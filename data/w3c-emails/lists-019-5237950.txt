docno="lists-019-5237950"
received="Wed Nov 19 13:39:33 2003"
isoreceived="20031119183933"
sent="Wed, 19 Nov 2003 10:39:38 -0800"
isosent="20031119183938"
name="Sarah Wilkin"
email="swilkin@apple.com"
subject="[F&amp;O] Casting to numerics missing lexical check"
id="BB0D5BCA-1ABF-11D8-99AF-0003935B7D94@apple.com"
charset="US-ASCII"
expires="-1"


To:public-qt-comments@w3.org


In section 17.8, Casting to numeric types, all references to checking 
the intermediate value xs:string against the lexical were removed. This 
looks incorrect as with the new spec xs:float("foo") would be valid.

For example, for xs:float, the May'03 spec stated:
- If IV is not in the lexical space of xs:float, as defined in XML 
Schema Part 2: Datatypes, then an error is raise ("Invalid lexical 
value")
- Otherwise, TV is xs:float(IV) ...

But in the Nov'03 spec, it just says:
- If ST is xdt:untypedAtomic, xs:anySimpleType or xs:string or a type 
derived fromxs:string, SV is converted to  an intermediate value IV of 
type xs:string and TV is xs:float(IV).

It seems the rules should follow the form:
- If ST is xdt:untypedAtomic, xs:anySimpleType or xs:string or a type 
derived fromxs:string, SV is converted to  an intermediate value IV of 
type xs:string
- If IV is not in the lexical space of xs:float, as defined in XML 
Schema Part 2: Datatypes, then an error is raised ("Invalid lexical 
value")
- Otherwise, TV is xs:float(IV)

--Sarah



