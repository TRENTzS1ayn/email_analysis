docno="lists-019-6760215"
received="Sat Oct  4 13:19:53 2003"
isoreceived="20031004171953"
sent="Sat, 04 Oct 2003 19:19:11 +0200"
isosent="20031004171911"
name="Xavier Franc"
email="xfranc@online.fr"
subject="RE: Timezones in get-hours-from-dateTime etc."
id="3F7F010F.6090107@online.fr"
charset="us-ascii"
inreplyto="Timezones in get-hours-from-dateTime etc."
expires="-1"


To:public-qt-comments@w3.org


"to identify a minimal set of primitive functions that can
be composed to do everything you need to do"

Excellent goal, to which I am both suscribing and trying to contribute.

The intent of my suggestion about get-xxx-from-dateTime was simply to
unify the current specifications and the proposed mmodification
in a more general yet intuitive function.
It should not "bloat" the language by more than 0.05%, so it remains quite
acceptable, especially given the big simplifications that we are advocating.
in this part of the specifications.

In the respect of completeness, I would like to mention again the
necessity of constructors for date/time types that accept numeric arguments
like

          xs:date( $year as integer, $month as integer, $day as integer,
                   $timezone as ? )

          xs:time( $hours as integer, $minutes as integer, $seconds as double,
  $timezone ? )

This is the reciprocal of component extractors and allows any computation.


To help "unbloating" - at least from users point of view - there is also
still the possibility to collapse function names like
    get-hours-from-dayTimeDuration,
    get-hours-from-dateTime,
    get-hours-from-time...
into one overloaded 'get-hours'
same way for other functions get-*** etc.


> Adding more functions and parameters in the language makes everybody happy
> except those who want the language to be smaller - which is nearly
> everybody!
> 
> I would rather try to identify a minimal set of primitive functions that can
> be composed to do everything you need to do, rather than have lots of
> convenience features that bloat the language.
> 

-- 
Xavier FRANC



