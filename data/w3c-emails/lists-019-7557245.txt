docno="lists-019-7557245"
received="Tue Oct 14 16:21:58 2003"
isoreceived="20031014202158"
sent="Tue, 14 Oct 2003 13:21:54 -0700"
isosent="20031014202154"
name="Michael Rys"
email="mrys@microsoft.com"
subject="RE: Missing functions in XQuery 1.0 and XPath 2.0 Functions and O  perators"
id="EB0A327048144442AFB15FCE18DC96C701021BF2@RED-MSG-31.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="Missing functions in XQuery 1.0 and XPath 2.0 Functions and O  perators"
expires="-1"


To:"Erik Bruchez"<erik@bruchez.org>,"Kay, Michael"<Michael.Kay@softwareag.com>,<public-qt-comments@w3.org>




> -----Original Message-----
> From: public-qt-comments-request@w3.org [mailto:public-qt-comments-
> request@w3.org] On Behalf Of Erik Bruchez
> Sent: Tuesday, October 14, 2003 12:47 PM
> To: Kay, Michael; public-qt-comments@w3.org
> Subject: Re: Missing functions in XQuery 1.0 and XPath 2.0 Functions
and O
> perators
> 
> 
>  > Obviously there are hundreds (thousands!) of functions that we
could
>  > have included but have not. We have consciously tried to keep the
>  > library as small as possible, and in fact some people complain that
>  > it is already much too large compared with XPath 1.0.
> 
> I guess the approach I would have chosen would have been to look at
> existing libraries, for example the Java String and Pattern/Matcher
> classes, and try to match the functionality available there (which is
> there most of the time for a reason).
> 
So let's all just implement the functions of XPath 1.0 (since we need
them for backwards-compatibility). Then, should we use the Perl
functions, or the Java functions, or the C/C++/C# functions, or the
SQL-functions or the EXSLT functions and/or...

The point is that we attempt to design a function library that provides
the minimal support necessary to provide interoperability among
implementation. If you add too many functions, you will not get achieve
that and you will add to the delay of the spec...

Note that there is nothing that forbids us to add more functions later
or encourages implementers to provide additional functions in their
implementation which then can be used to gather information about their
usefulness. This then can be used to determine future extensions of the
function library...

Best regards
Michael



