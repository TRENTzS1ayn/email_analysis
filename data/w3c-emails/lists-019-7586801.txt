docno="lists-019-7586801"
received="Wed Oct 15 00:21:15 2003"
isoreceived="20031015042115"
sent="Wed, 15 Oct 2003 00:21:15 -0400"
isosent="20031015042115"
name="Liam Quin"
email="liam@w3.org"
subject="Re: Missing functions in XQuery 1.0 and XPath 2.0 Functions and O  perators"
id="20031015042115.GM5423@w3.org"
charset="us-ascii"
inreplyto="3F8C529F.2020201&#64;bruchez.org"
expires="-1"

To: Erik Bruchez<erik@bruchez.org>
Cc:public-qt-comments@w3.org



On Tue, Oct 14, 2003 at 12:46:39PM -0700, Erik Bruchez wrote:
> Sure. Let's say my regexp is:
>   "/some-path/([0-9]*)/xyz/([0-9]*)"
> I want to extract the first group and the second group.

speaking personally (i.e. without any W3C hats on!) I find this
use case compelling -- I have always found it frustrating when
languages add simple regexp matching without this, especially as
every regexp library I've ever used at the programming language
level provides the functionality.

There are lots of functions one might want -- I've often wanted
"ends-with" for looking at file extensions in XSLT, for example,
but implemented one myself as a named template.

On decoding URLs and a QUERY_SRING or QUERY_PATH, I suspect you'd
also want access to environment variables in order to access the
query in the first place, and that opens a whole new can of worms.

So, my take is I agree about the regexp function, but not so much
about unescaping URIs and splitting out parameters, I think.

Best,

Liam

-- 
Liam Quin, W3C XML Activity Lead, liam at w3.org, http://www.w3.org/People/Quin/



