docno="lists-019-7846733"
received="Thu Oct 16 15:16:29 2003"
isoreceived="20031016191629"
sent="Thu, 16 Oct 2003 12:16:13 -0700 (PDT)"
isosent="20031016191613"
name="Dimitre Novatchev"
email="dnovatchev@yahoo.com"
subject="Re: XQuery"
id="20031016191613.6054.qmail@web41104.mail.yahoo.com"
charset="us-ascii"
inreplyto="XQuery"
expires="-1"


To: Dimitre Novatchev<dnovatchev@yahoo.com>,public-qt-comments@w3.org
Cc:dnovatchev@gmx.net


The missing citation is:

[1] Simon Peyton Jones, Tackling the awkward squad: monadic input/output,
concurrency, exceptions, and foreign-language calls in Haskell, 
at: 
   http://research.microsoft.com/Users/simonpj/papers/marktoberdorf/

=====
Cheers,

Dimitre Novatchev.
http://fxsl.sourceforge.net/ -- the home of FXSL


> I completely support this and want to explain it from another angle:
> 
> Arguing against "non-determinism" in XQuery is in fact arguing against
> its
> being a functional (side-effects-free) language.
> 
> More on the relationship of non-determinism to exception handling in
> functional languages can be found in [1].
> 
> There, Simon-Peyton Jones says:
> 
> "In particular, by confining the non-deterministic choice to the IO
> monad
> we have prevented non-determinism from infecting the entire language."
> 
> There is a type-safe way to specify and implement order of evaluation in
> a
> functional language e.g. monads (the Haskell's do-notation), but such an
> implementation would be very difficult without having higher-order
> functions and lazy evaluation.
> 
> None of these two is defined in XPath 2.0 and XQuery, therefore
> implementing monads in the current version of these languages would be
> like putting the cart in front of the horse.
> 
> I think, however, that monads should be considered very seriously for a
> language such as XUpdate, if this language is to remain a functional
> one.


__________________________________
Do you Yahoo!?
The New Yahoo! Shopping - with improved product search
http://shopping.yahoo.com



