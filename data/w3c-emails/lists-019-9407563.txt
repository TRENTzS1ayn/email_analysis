docno="lists-019-9407563"
received="Wed Sep 10 10:11:45 2003"
isoreceived="20030910141145"
sent="Wed, 10 Sep 2003 16:11:35 +0200"
isosent="20030910141135"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: Inability of location steps to support multiple axes"
id="DFF2AC9E3583D511A21F0008C7E62106073DD0FE@daemsg02.software-ag.de"
inreplyto="Inability of location steps to support multiple axes"
expires="-1"


To:emerson@harvestman.net,public-qt-comments@w3.org,Michael.Kay@softwareag.com



> -----Original Message-----
> From: Emerson [mailto:emerson@harvestman.net] 
> Sent: 10 September 2003 12:52
> To: public-qt-comments@w3.org; Michael.Kay@softwareag.com
> Subject: RE: Inability of location steps to support multiple axes
> 
> 
> 
> Michael, could you point me to the grammar where this is 
> allowable in Xpath 2.0
> 
> I can see no such derivation:
> http://www.w3.org/TR/xpath20/#doc-StepExpr


A StepExpr can be a FilterStep, a FilterStep can be a PrimaryExpr, and a
PrimaryExpr can be a ParenthesizedExpr, which can have anything inside it.

In effect, you can now use any expression (subject to operator precedence
rules) as an operand of "/", though the type rules require the expression to
deliver node()*.

Michael Kay





>> So the above example would become:
>> 
>> "parent::a/(following-sibling::* | preceding-sibling::*)//text()"
>> 
>> Which in my opinion is logically much more concise...
>> 
>> It could be that I am missing something, but I believe your
>> proposal is possible in XPath 2.0. 
>
>Correct, this expression is valid in XPath 2.0.
>Michael Kay



