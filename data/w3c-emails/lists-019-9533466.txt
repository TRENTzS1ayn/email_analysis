docno="lists-019-9533466"
received="Thu Sep 11 20:14:30 2003"
isoreceived="20030912001430"
sent="Thu, 11 Sep 2003 20:14:30 -0400"
isosent="20030912001430"
name="Xan Gregg"
email="xan.gregg@jmp.com"
subject="XSLT Comments from XML Schema, part 2 (of 2)"
id="146DF86D-E4B6-11D7-B81E-003065FB861A@jmp.com"
charset="US-ASCII"
expires="-1"

To:public-qt-comments@w3.org



Dear colleagues:

This note completes our comments on XSLT 2.0 WD, 2003-05-02.

Xan Gregg, on behalf of the XML Schema WG

-------------------------------------

19.2 Validation
http://www.w3.org/TR/xslt20/#validation

   "The value strip indicates that the new node and each of the
   contained nodes will have the type annotation xs:anyType if it
   is an element, or xdt:untypedAtomic if it is an attribute."

We are reviewing xdt:untypedAtomic along with the rest of the Data
Model, so we only note that pending further review, we wonder why
xs:anySimpleType would not fill the above role for attributes.

   "The value strict indicates that type annotations are
   established by performing strict schema validity assessment
   on the element or attribute created by this instruction,
   according to the rules defined in [XML Schema] (Part 1,
   section 5.2 "Assessing Schema-Validity", validation method 3)."

We believe that here and in the corresponding text for "lax", you are
misinterpreting section 5.2 of XML Schema Part 1.  The strict/lax
choice is actually determined "depending on whether or not the element
information and the schema determine either an element declaration (by
name) or a type definition (via xsi:type) or not."

We suggest you refer directly to the Schema-Validity Assessment rules
for element and attributes instead of section 5.2.  That would also
avoid the problem that section 5.2 only deals with elements and complex
types as starting points.

See 3.2.4 ... Validation Rule:  Attribute Locally Valid
http://www.w3.org/TR/xmlschema-1/#cvc-attribute
See 3.3.4 ... Validation Rule:  Element Locally Valid (Type)
http://www.w3.org/TR/xmlschema-1/#cvc-type

   "In effect this means that the element or attribute being
   validated must be declared using a top-level declaration in the
   relevant schema, and must conform to its declaration. ... The
   relevant schema is found by firstly searching the schemas that
   have been imported using xsl:import-schema declarations in the
   stylesheet, and any schemas that have been implicitly imported
   using implementation-defined mechanisms. If this does not locate
   a schema containing a top-level definition of the element or
   attribute being validated, then the validation process may also
   locate schema components using any of the mechanisms described
   in [XML Schema] ...For example, ... implicitly from knowledge
   of the namespace ... or ... using the xsi:schemaLocation
   attribute of elements within the tree."

The mention of "searching the schemas that have been imported" seems to
contradict the earlier description of imports being treated like one
giant schema.  We suggest you define a term for the combined import
schema and using that term in this section.

   "The full schema validation process is invoked, except that
   identity  constraints, as defined in section 3.11 of
   [XML Schema] Part 1, are ignored."

We suggest you also ignore other document-wide validations supported
by XML Schema, such as ID/IDREF, ENTITY, and ENTITIES validation.



