docno="lists-019-9577016"
received="Mon Sep 15 22:11:22 2003"
isoreceived="20030916021122"
sent="Tue, 16 Sep 2003 03:07:38 +0100"
isosent="20030916020738"
name="Emerson"
email="emerson@harvestman.net"
subject="Abbreviated Syntax &quot;//&quot;"
id="000001c37bf7$4e103750$b63e353e@genesis"
charset="us-ascii"
expires="-1"

To:<public-qt-comments@w3.org>




Ive just noticed something that hasn't bothered me in the past due
mainly to an omission on my part.  In implementing some Xpath 2.0
features into my now hybrid 1.0 processor I noticed that according to
both specifications;

http://www.w3.org/TR/xpath20/#abbrev

The abreviated, location path in 1.0 speak, or path expression in 2.0
language  i.e. "//"
Is actually interpreted as "/descendant-or-self::node()/" rather than
"/descendant-or-self::node()"

I beg to ask, why the trailing slash "/" ?  

This forces the abreviated syntax to have a following step, when there
is a perfectly valid reason for wanting to use "//" alone.

I don't like to deviate, but this is one part of the grammar that I
don't think I will be enforcing...

emerson



