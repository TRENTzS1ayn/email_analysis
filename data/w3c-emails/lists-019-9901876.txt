docno="lists-019-9901876"
received="Sun Sep 21 17:55:49 2003"
isoreceived="20030921215549"
sent="Sun, 21 Sep 2003 14:55:36 -0700"
isosent="20030921215536"
name="Ashok Malhotra"
email="ashokma@microsoft.com"
subject="RE: ORA-FO-INTEGERPARAMS 7.4.6 fn:substring"
id="E5B814702B65CB4DA51644580E4853FB0AB92D23@red-msg-12.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="ORA-FO-INTEGERPARAMS 7.4.6 fn:substring"
expires="-1"


To:"Stephen Buxton"<stephen.buxton@oracle.com>,<public-qt-comments@w3.org>

Thank you for your comment.  fn:subsequence was given xs:double
parameters to align with substring which has double parameters for
backwards compatibility.  The new functions were given integer
parameters as they were new and there was no backwards compatibility
requirement.

All the best, Ashok 

________________________________

From: public-qt-comments-request@w3.org
[mailto:public-qt-comments-request@w3.org] On Behalf Of Stephen Buxton
Sent: Monday, June 30, 2003 7:47 AM
To: public-qt-comments@w3.org
Subject: ORA-FO-INTEGERPARAMS 7.4.6 fn:substring 

 

Functions and Operators, Section 7.4.6 fn:substring has a $startingLoc
parameter that is an xs:double. Why isn't this an xs:integer ? 

cf 7.4.15 fn:string-pad where the $padCount parameter is xs:integer.
cf 15.1.14 fn:subsequence where $startingLoc is double
cf 15.1.12 fn:insert-before, 15.1.13 fn:remove where $position is
integer 

If this is because of backwards-compatibility, an explanatory note to
that effect would be helpful.



