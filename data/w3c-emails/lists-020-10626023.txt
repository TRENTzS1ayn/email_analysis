docno="lists-020-10626023"
received="Thu Apr 29 08:08:09 2004"
isoreceived="20040429120809"
sent="Thu, 29 Apr 2004 13:06:01 +0100"
isosent="20040429120601"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: A Comparison of RDF Query Languages"
id="E864E95CB35C1C46B72FEA0626A2E808028A315E@0-mail-br1.hpl.hp.com"
inreplyto="A Comparison of RDF Query Languages"
expires="-1"


To:public-rdf-dawg@w3.org



I think the message is well-intentioned. It also goes to show how much
attention people are paying to DAWG (scary) and how much they care (good -
that's why we are here).  I'm glad they will comment on our working
documents.

Blasting to so many mailing lists is quite unnecessary as are ridiculously
long signatures.

This WG is proceeding with a different approach: requirements-driven,
including the remote access usage.  We have gathered some interesting,
grounded examples and have a requirements lists that we think important.

Some comments on the report:

== Methodology ==

I would have found a much greater discussion of the methodology helpful.
Section 2 of the report lists the features they wish to consider but without
significant justification.  It was also a  missed opportunity; instead of a
feature-oriented perspective, something that looked at the underlying
computational model would have been useful.

The list that does not distinguish between features that are innate because
of the computation model of the query language and those features that could
be easily added.  This WG can just add those features.

== RDQL correction ==

Without wanting to go through every example, there is one serious error
about RDQL (they used the Jena implementation).  The report states that
there is no access to graph entailment.  There is; and even the command line
application can access RDFS entailments.  In Joseki, a published model can
have an RDFS or OWL reasoner associated with it - the query executes against
that.

The approach we have taken for runtime use of data is that inference is a
feature of the data source, not the query language (there are also separate
APIs for the reasoner and for an ontology-centric view of the model).
Others have done much the same.  If the query is on an RDFS or OWL model,
then all entailments that the reasoner produces are available.  

Specifically, 

> 14 Entailment
> Return all instances of that are members of the class Publication.

 Why does this query (SeRQL)
   select Publication from {Publication} <rdf:type> {<s:Publication>}
 rate as "yes"

 when the RDQL equivalent
   SELECT ?p WHERE ( ?p rdf:type s:Publication ) 
 rate as "no"?  This will find all individuals with type publication.

Andy

-------- Original Message --------
> From: public-rdf-dawg-request@w3.org <>
> Date: 28 April 2004 19:59
> 
> On Wed, Apr 28, 2004 at 09:56:46AM -0700, Rob Shearer wrote:
> 
> > I'm not sure what the consensus view on this kind of stuff is. I think
> > the last thing we want is for other RDF groups to be arguing about
> > what a query language should be under the assumption that we're
> > hearing their input when we're clearly not (the attempted cross-post
> > to our mailing list didn't seem to go through).
> 
> Just to add another data point, I'm finding this report extremely
> useful, both in editing our UC&R doc and as a member of the WG
> thinking about where to start, what other tech requirements to propose,
> and so on. 
> 
> > I'm also a bit irked about surveys that don't include the REX
> > language; I realize I haven't put together enough resources to make
> > it accessible (hoping to at least post a summary of the f2f
> > presentation this weekend), but I really don't have the time to be
> > writing comprehensive documentation and language tutorials in more
> > than one forum. 
> 
> Is there anything about REX on the Web?
> 
> Best,
> Kendall Clark



