docno="lists-020-10636790"
received="Thu Apr 29 08:16:26 2004"
isoreceived="20040429121626"
sent="Thu, 29 Apr 2004 13:15:16 +0100"
isosent="20040429121516"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="Protocol/query interaction - computational cost of a query"
id="E864E95CB35C1C46B72FEA0626A2E808028A3163@0-mail-br1.hpl.hp.com"
expires="-1"


To: RDF Data Access Working Group<public-rdf-dawg@w3.org>



One of the things the comparison of query languages talks about is "safety".
There is an interaction with remote access here - does the query language
allow or encourage queries which do not terminate or incur excessive
computation?

In sending a query to a remote server, we should be aware we are sending
around a computation.  A query language that can cause infinite, or
excessive, computation at the server is not a good idea.  A query could be
analysable as to be being safe or the language could be designed so that it
is not possible, or probably not natural, to express unsafe constructs.

I don't like the idea that "DAWG-QL" needs to be analysable; I would prefer
that the language does not have features that allow excessive or infinite
computation unless that feature is really important.

This isn't a clear cut matter - if you ask a query that is not very
selective of a large dataset, you will get back a lot of results and it may
consume a lot of system resources.  But we can design things to avoid traps
for the application writer.

Andy

PS I like the phrase "RDQL is safe" which reminds me of the Hitch-Hikers
Guide to the Galaxy: "mostly harmless".  Not sure that translates to other
parts of the globe.



