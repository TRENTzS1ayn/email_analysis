docno="lists-020-10882672"
received="Tue May  4 08:27:47 2004"
isoreceived="20040504122747"
sent="Tue, 4 May 2004 13:26:55 +0100 "
isosent="20040504122655"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: testing disjunction"
id="E864E95CB35C1C46B72FEA0626A2E808028A3328@0-mail-br1.hpl.hp.com"
inreplyto="testing disjunction"
expires="-1"


To: Jos De_Roo<jos.deroo@agfa.com>,public-rdf-dawg@w3.org


Jos,

Interesting, especially in that it uses N3 formulae for the disjunction
parts and also that the disjunction is "top level" - the query is a
packaging of two queries.  One possibility is that we could address this
(some of this) through packing queries into requests.  We have split off two
disjunction cases (top level expressions, optional triples) and so we have
remaining as to whether there is sufficient need for other forms of
disjunction and also whether there is sufficient need for a general
mechanism that covers all usage.

Andy

-------- Original Message --------
> From: public-rdf-dawg-request@w3.org <>
> Date: 2 May 2004 02:24
> 
> Since our f2f meeting I am thinking about disjunction,
> but thinking doesn't help enough and so I tried to do some running
> code... It's a simple example, but suppose we have
> http://eulersharp.sourceforge.net/2004/04test/danP.n3
> and want to know the latitude and longitude of
> Cambridge or the latitude and longitude of Chicago
> then we write the query in N3 as
> http://eulersharp.sourceforge.net/2004/04test/danQ.n3
> and are able to get the selected graph
> 
> _:98_1 d:cityName "Cambridge".
> _:98_1 d:latitude 42.3.
> _:98_1 d:longitude -71.1.
> 
> _:5478_4 d:cityName "Chicago".
> _:5478_4 d:latitude 41.9.
> _:5478_4 d:longitude -87.6.
> 
> 
> (the da:from and da:select in the query are actually
> implemented like log:conjuction and log:implies and
> the scope of the bnodes is within the {} graphs)



