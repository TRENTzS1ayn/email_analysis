docno="lists-020-11002487"
received="Tue May  4 16:46:59 2004"
isoreceived="20040504204659"
sent="Tue, 4 May 2004 13:45:33 -0700"
isosent="20040504204533"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RE: Reqirement 3.5: subgraph results"
id="CFE388CECDDB1E43AB1F60136BEB49730280A2@rome.ad.networkinference.com"
charset="US-ASCII"
inreplyto="Reqirement 3.5: subgraph results"
expires="-1"


To:"Dan Connolly"<connolly@w3.org>
Cc:"RDF Data Access Working Group"<public-rdf-dawg@w3.org>


> >  in fact it
> > codifies that any such extension is explicitly illegal. 
> Queries along
> > the lines of "must these two nodes be related via either of 
> these two
> > properties?" suddenly become impossible to answer when that 
> answer is
> > derived via inference, or rules, or some higher-level 
> semantic language.
> 
> I don't understand how you come to that conclusion.
> 
> Our charter addresses this pretty clearly, no?
> 
> "1.8 Derived Graphs
> 
> The working group must recognize that RDF graphs are often constructed
> by aggregation from multiple sources and through logical 
> inference, and
> that sometimes the graphs are never materialized. Such graphs may be
> arbitrarily large or infinite."
>  -- http://www.w3.org/2003/12/swa/dawg-charter#derivedGraphs

"Logical inference" extends a *lot* farther than just appending triples
to an RDF graph.
There are a lot of ways to say "at least one of these two edges needs to
exist". It can be a consequence of an OWL ontology; it can be a
consequence of a rule encoded in a rules language; it can be a
consequence of any semantic layer you want to put on top of the basic
RDF data model. It does explicitly say something about what RDF graphs
are possible and what are not. But such knowledge does not necessarily
have any sensible encoding in RDF itself. (The best we've seen is
changing the query to little more than "get me the answers" and then
adding triples to the source RDF that say "this is an answer"; an
approach which is both bizarre and quite impractical in the case of more
than one variable which needs to be bound.)

If we really want to draw up a language which is completely incompatible
with any other technology, then that's one choice. I think it's a much
better use of our time to come up with a language for asking questions
about the data model which underlies the semantic web, and that data
model happens to be RDF.

> > The answer is simply "yes"; producing an RDF subgraph to 
> justify that
> > answer is impossible: the reasons have no canonical RDF 
> representation.
> 
> True, for some forms of inference, the "witness" graph is
> not a natural byproduct of the computation, if it exists
> at all.
> 
> [at this point the chair fails to suppress his frustration
> that W3C chose to continue to build more layers of semantic
> web technology without a corresponding proof syntax. sigh...]

[Any kind of proof syntax would assume that you already know exactly
what kinds of reasons there could be for particular answers, which
closes off the possibility of future languages for encoding knowledge.
But this is admittedly not a discussion we need to get into.]


Suffice it to say that I am pretty dead-set against this as a
requirement.
I think the ability to spit out RDF which mimics the source RDF would be
pretty neat and pretty useful, and we need to figure out whether the
query language itself will provide features for it, whether it will
always need to happen in client code, or whether there is something in
between. But putting it on the critical path is something I really don't
feel comfortable with.



