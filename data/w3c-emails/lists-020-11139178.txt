docno="lists-020-11139178"
received="Wed May  5 05:59:14 2004"
isoreceived="20040505095914"
sent="Wed, 5 May 2004 10:58:41 +0100 "
isosent="20040505095841"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: Reqirement 3.5: subgraph results"
id="E864E95CB35C1C46B72FEA0626A2E808028A33DD@0-mail-br1.hpl.hp.com"
inreplyto="Reqirement 3.5: subgraph results"
expires="-1"


To:"Eric Prud'hommeaux"<eric@w3.org>,public-rdf-dawg@w3.org


EricP wrote:
> If noone has worked out how to express the "fact that an edge of type
> either p1 or p2" in RDF, then I'm happy saying we don't define the
> answer in a DAWG-QL spec. Variable binding syntaxes from DAWG-QL may
> be useful in answering questions on graphs we can't express, but I bet
> we'll have a hell of a time defining test suites for them.

That's a useful characterisation. We have to build on something and not end
up reinventing a lot of machinary.  I think it would be more beneficial to
the semantic web to do an immediate first version (this WG) to be followed
by a wider version (another WG) if the first version uncovers the demand for
additional capabilities.  Guessing the capabilities of the full version is
hard and very time consuming.  Delaying hurts general deployment of
interoperable systems for basic, common usages.

As to the question: At the RDF level, bArcs would help but RDF does not
allow them.

Andy

-------- Original Message --------
> From: public-rdf-dawg-request@w3.org <>
> Date: 
> 
> On Tue, May 04, 2004 at 02:06:49PM -0700, Rob Shearer wrote:
> > 
> > > Neither do I...
> > > I would simply ask the following RDF/N3 kind of query
> > > (<graph>).da:from da:select {?N1 <p1> ?N2}, {?N1 <p2> ?N2}.
> > > and when getting a nonempty graph the answer is "true"
> > > as simple as that!
> > 
> > What's your original graph and what's your subgraph, Jos?
> > 
> > I'm offering a graph with two nodes and no edges, plus the fact that
> > an edge of type either p1 or p2 must exist between the two encoded in
> > some higher-level semantic language.
> > 
> > I can only see four possible subgraphs of the original graph: one
> > node, the other node, both nodes, or neither node. None of these
> > options explicates the answer.
> 
> I was under the impression that the problem we were solving was one of
> querying an RDF graph and potential inferences from that graph. If we
> try to solve the problem of communicating higher-level semantics in a
> way that naive RDF processors will understand, we'll be busy for a
> very long time. Therefor, I am happy to constrain the "fact that an
> edge of type either p1 or p2" to be expressible in RDF statements ala
> this example from the "OWL Guide" [1]:
> 
>   <owl:Class rdf:ID="Fruit">
>     <rdfs:subClassOf rdf:resource="#SweetFruit" />
>     <rdfs:subClassOf rdf:resource="#NonSweetFruit" />   </owl:Class>
> and another ground fact:
>   <ex:Fruit rdf:about="http://www.WordNet.org/grapefruit" />
> 
> Ask a question to which the answer is yes:
> ask (<http://www.WordNet.org/grapefruit> owl:Class ex:SweetFruit ||
>      <http://www.WordNet.org/grapefruit> owl:Class ex:NonSweetFruit)
> 
> and get back the following supporting evidence:
>   <owl:Class rdf:ID="Fruit">
>     <rdfs:subClassOf rdf:resource="#SweetFruit" />
>     <rdfs:subClassOf rdf:resource="#NonSweetFruit" />   </owl:Class>
>   <ex:Fruit rdf:about="http://www.WordNet.org/grapefruit" />
> 
> If noone has worked out how to express the "fact that an edge of type
> either p1 or p2" in RDF, then I'm happy saying we don't define the
> answer in a DAWG-QL spec. Variable binding syntaxes from DAWG-QL may
> be useful in answering questions on graphs we can't express, but I bet
> we'll have a hell of a time defining test suites for them.



