docno="lists-020-11601807"
received="Thu May  6 15:15:36 2004"
isoreceived="20040506191536"
sent="Thu, 6 May 2004 20:15:06 +0100"
isosent="20040506191506"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: requirement: rdfs query (for lack of a better name...)"
id="000101c4339e$72903800$0a01a8c0@atlas"
charset="us-ascii"
inreplyto="20040506180626.GJ5134&#64;login.ecs.soton.ac.uk"
expires="-1"

To:"'Steve Harris'"<S.W.Harris@ecs.soton.ac.uk>,<public-rdf-dawg@w3.org>



-------- Original Message --------
> From: public-rdf-dawg-request@w3.org <>
> Date: 06 May 2004 19:06
> 
> On Thu, May 06, 2004 at 12:52:40 -0500, Kendall Clark wrote:
> > Requirement
> > -----------
> > It should be possible to query the RDFS structure of an RDF graph to
> > find, for example, the parents and instances of a class or the class
> > tree. 
> > 
> > Discussion
> > ----------
> > I'm not sure whether this comes down, in the end, to a semantic
> > requirement or just a request for sugar for a particular kind of
> > query; but what my users need (and we have implemented in a really
> > ugly, API munging way) is the ability to ask for all the instances of
> > a class, all the parents of a class, and so on. Being able to do these
> > queries, and being able to do them "easily" (yes, I know, untestable,
> > but still...) is a real requirement for us.
> 
> Isn't that a question of what inference your RDFS engine supports?
> 
> If you do RDFS then (?x <rdfs:subclassOf> ?y) will give you
> all the superclasses of ?y in ?x.

Agreed, it does - but sometimes the application wants to find direct
subclass relationships and sometimes all the transitive entailments. e.g.
writing an editor. It is possible to want the both the direct relationship
in one part of the query pattern and yet want RDFS inference elsewhere in
the same query.

> 
> - Steve

Andy



