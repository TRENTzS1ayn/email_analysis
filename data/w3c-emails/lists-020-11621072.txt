docno="lists-020-11621072"
received="Thu May  6 15:36:20 2004"
isoreceived="20040506193620"
sent="Thu, 6 May 2004 12:32:09 -0700"
isosent="20040506193209"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RE: requirement: multigraph query"
id="CFE388CECDDB1E43AB1F60136BEB49730280AD@rome.ad.networkinference.com"
charset="US-ASCII"
inreplyto="requirement: multigraph query"
expires="-1"


To:"Kendall Clark"<kendall@monkeyfist.com>,<public-rdf-dawg@w3.org>


Is this proposed for the query language, or for the protocol? I realize
that requirements for both are in scope, but I'm curious what the intent
of the requirement is.

In SQL, for example, selection of the database is left to protocol,
while selection of table(s) is part of the query language.

If we're talking about aggregating a bunch of separate RDF repositories,
this seems clearly out of scope. The aggregation of multiple
repositories is nothing but a new repository. How repositories are
formed or composed is an architecural issue that is going to cost us a
year if we really do it the right way. Let's not do it--if you want to
write a query client which touches a dozen different repositories, then
write an app that joins them all into a local virtual repository and
then query that. The fact that your implementation of the repository
implements the query language in this complex way shouldn't change what
the language is. (Again, we're standardizing what results are right and
wrong, not how you get those results.)

> -----Original Message-----
> From: public-rdf-dawg-request@w3.org 
> [mailto:public-rdf-dawg-request@w3.org] On Behalf Of Kendall Clark
> Sent: 06 May 2004 10:47
> To: public-rdf-dawg@w3.org
> Subject: requirement: multigraph query
> 
> 
> 
> Requirement
> -----------
> It should be possible to specify one or more RDF graphs 
> against which a
> query shall be executed.
> 
> Discussion
> ----------
> This requirement admits of two (semantically and 
> operationally distinct)
> readings:
> 
>    - "aggregated query", which is syntactic sugar for multiple
>      queries, that is, union the results of multiple queries;
>          
>    - "union query" over multiple graphs, that is, query
>      the union of multiple graphs.
> 
> My users want both forms; I think we'd settle for the first, 
> weaker form.
> But if neither of these ends up in our spec, it's the first 
> thing we'll
> implement, which makes interop hard.
> 
> Kendall Clark
> 
> 



