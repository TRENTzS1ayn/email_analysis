docno="lists-020-11707343"
received="Thu May  6 18:19:19 2004"
isoreceived="20040506221919"
sent="Thu, 6 May 2004 18:18:10 -0400"
isosent="20040506221810"
name="Kendall Clark"
email="kendall@monkeyfist.com"
subject="Re: requirement: multigraph query"
id="20040506221810.GH12831@monkeyfist.com"
charset="us-ascii"
inreplyto="CFE388CECDDB1E43AB1F60136BEB49730280AD&#64;rome.ad.networkinference.com"
expires="-1"

To: Rob Shearer<Rob.Shearer@networkinference.com>
Cc: Kendall Clark<kendall@monkeyfist.com>,public-rdf-dawg@w3.org



On Thu, May 06, 2004 at 12:32:09PM -0700, Rob Shearer wrote:
> Is this proposed for the query language, or for the protocol? I realize
> that requirements for both are in scope, but I'm curious what the intent
> of the requirement is.

I had in mind for the query language. You could put the names of the
graphs into protocol, but that seems a strange choice.

> In SQL, for example, selection of the database is left to protocol,
> while selection of table(s) is part of the query language.

That's an unusable analogy, IMO.

> If we're talking about aggregating a bunch of separate RDF repositories,
> this seems clearly out of scope. 

First, I didn't say a *word* about "RDF repositories". I said multiple
graphs; either querying each graph and unioning the results, or
unioning the graphs then executing the query against it. That's
got nothing whatever to do with RDF repositories (which is a function
of how we *name* the multiple graphs, a position I didn't take in the requirement).

> The aggregation of multiple
> repositories is nothing but a new repository. 

Sure, but that's not my requirement.

> How repositories are
> formed or composed is an architecural issue that is going to cost us a
> year if we really do it the right way. Let's not do it--if you want to
> write a query client which touches a dozen different repositories, then
> write an app that joins them all into a local virtual repository and
> then query that. 

Well, "write it yourself" is feasible, but standardization is a good
thing. 

> The fact that your implementation of the repository
> implements the query language in this complex way shouldn't change what
> the language is. (Again, we're standardizing what results are right and
> wrong, not how you get those results.)

Well, I did carefully craft the requirement such that it was or was
meant to be optional. Given that the existing universe of RDF storage
servers has a wide range of capabilities, something like conformance
levels seems inevitable.

But, again, just so I'm clear, I asked for multigraph, not
multirepository query, which strikes me as an important distinction to
keep in mind. 

Kendall Clark



