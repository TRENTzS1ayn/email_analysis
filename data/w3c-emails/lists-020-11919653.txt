docno="lists-020-11919653"
received="Fri May  7 13:36:31 2004"
isoreceived="20040507173631"
sent="Fri, 7 May 2004 12:36:27 -0500"
isosent="20040507173627"
name="Pat Hayes"
email="phayes@ihmc.us"
subject="Re: requirement: rdfs query (for lack of a better name...)"
id="p06001f2abcc1781c8390@[10.0.100.76]"
charset="us-ascii"
inreplyto="20040506222258.GI12831&#64;monkeyfist.com"
expires="-1"


To: Kendall Clark<kendall@monkeyfist.com>
Cc: RDF Data Access Working Group<public-rdf-dawg@w3.org>


>On Thu, May 06, 2004 at 12:10:56PM -0700, Rob Shearer wrote:
>>  I could on at great length about how bad an idea I think this is, but
>>  I'll keep it short.
>
>Uh... that's, well, less than ideal and not the least bit
>persuasive. FWIW.
>
>>  Adding "just a little bit of inference" to the query language is the
>>  road to disaster. It just doesn't work that way.
>
>Where in my requirement does it say "just a little bit of inference"?
>Where does it imply it? I must have missed that bit. :>
>
>And, besides, charter thwack:
>
>   1.8 Derived Graphs
>
>   The working group must recognize that RDF graphs are often
>   constructed by aggregation from multiple sources and through logical
>   inference, and that sometimes the graphs are never
>   materialized. Such graphs may be arbitrarily large or infinite.
>
>>  What's more, adding support for just one particular flavor of
>>  supplementary semantic knowledge (RDFS) is great way to kill off use of
>>  any other knowledge sources.
>
>Uh... RDFS is hardly "one particular flavor of supplementary semantic
>knowledge". That's about as perverse a description as I can
>imagine.

Why? Seems to me to be exactly on the mark. 

>Besides, if you're worried about "killing off" OWL, that's an
>argument to do RDFS in 1.0 and OWL in 2.0, not an argument not to do
>RDFS at all.

The point is, if we allow inference, where do we stop? Why not stick 
to retrieving actual RDF, keep it as small and fast as possible, and 
leave inference to inference engines downstream of the actual query. 
Seems to me that querying is one thing, inference another.

BUt if we must involve inference, let me suggest a methodological 
strategy: we treat it as 'direct' retrieval from a virtual graph 
which is an appropriate inferential 'closure' (eg under transitivity 
of subClassOf). This keeps the discussion clean since we can 
distinguish retrieval-from-graph issues separate from 
which-graph-retrieved-from issues, and it helps keep inference 
strategy issues out of the way. It also BTW gives engine designers 
more leeway.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola(850)202 4440   fax
FL 32501(850)291 0667    cell
phayes@ihmc.us       http://www.ihmc.us/users/phayes



