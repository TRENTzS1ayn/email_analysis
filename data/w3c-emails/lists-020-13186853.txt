docno="lists-020-13186853"
received="Tue May 25 06:39:40 2004"
isoreceived="20040525103940"
sent="Tue, 25 May 2004 11:39:15 +0100"
isosent="20040525103915"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: Building a bridge from RDF to the web?"
id="E864E95CB35C1C46B72FEA0626A2E808031A988A@0-mail-br1.hpl.hp.com"
inreplyto="Building a bridge from RDF to the web?"
expires="-1"


To:"Thompson, Bryan B."<BRYAN.B.THOMPSON@saic.com>,"'public-rdf-dawg@w3.org'"<public-rdf-dawg@w3.org>


> From: Thompson, Bryan B. <>
> Date: 24 May 2004 20:49
> 
> One of the issues that became clear to me during the recent WWW meeting
> in NYC is that we are missing a bridge between the RDF model and XML.
> In particular, people who are going to be using the semantic web need
> a bridge from the RDF data model to application specific XML
> vocabularies (actually, we need one that goes the other way also, but
> that is, I think, a seperate question).  Perhaps the most common use
> case is querying an RDF resource and using the results to drive an XSL
> Transform, which in turn might generate XHTML.

If that bridge is a way to extract information from RDF models and get it
into both XHTML (for people) and XML (for people and for web services), then
I agree with you.  There isn't going to be one such form for presenting
information extracted from RDF so tools such as XSLT and XQuery seem to be
the toolsets to use.

There has been some work on this: Rob outlined the use of XQuery and OWL
data, and it reminded me of Jonathan Robie's presentation [1] at Cannes this
year.  The important aspect here is that access is to the abstract graph,
not the RDF/XML syntax.

Elsewhere, Howard talked about using paths to access the graph and
Treehugger [2] does this by dymanically materialising an XML document from
the RDF abstract graph.

This is getting stuff out of RDF.  The requirement it places on the WG, as I
see it, is to produce a format for variable bindings that is easily
digestable by other systems.  That does not automatically mean an XML format
because it is the output of XQuery functions but an XML format would work
(it can be made streamable which RDF isn't).

I have also seem people do queries in JSP taglibs to produce HTML and also
using Velocity to create XHTML from RDF - a standard library to do the
variable bindings to Velocity 

> 
> This issue has been more or less discussed in the context of templates,
> which did not receive strong support at the first f2f as a requirement
> for DAWG.

IIRC the "Templates" discussion was slightly different.  Its about
constructing new RDF from information pulled from existing RDF.  See the
SeRQL 'construct' [3] operation or "cwm --filter".

>  However I think that NOT having this is going to be a major
> stumbling block for adoption of the DAWG recommendation by application
> developers and is going to make it very difficult to get at that sense
> of loose coupling and content reuse that makes the web so exciting.
> 
> I would like to get a sense from people of how a DAWG spec could best
> facilitate this.  Do we need to do this ourselves?  Can we expose the
> data model query language in such a way that it can be usefully applied
> by XSL Transforms?  Should this be considered out of scope for the
> charter?
> 
> Thanks,
> 
> -bryan

[1] http://www.w3.org/2004/Talks/tp-robie/
[2] http://rdfweb.org/people/damian/treehugger/
[3] http://www.openrdf.org/doc/users/ch05.html#d0e1101



