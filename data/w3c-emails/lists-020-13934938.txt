docno="lists-020-13934938"
received="Mon Jun  7 12:38:59 2004"
isoreceived="20040607163859"
sent="Mon, 07 Jun 2004 11:39:22 -0500"
isosent="20040607163922"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: iTQL evaluation"
id="1086626362.21030.215.camel@dirk"
inreplyto="A802CE32-B896-11D8-AAFE-000A95C5686E&#64;tucanatech.com"
expires="-1"

To: Simon Raboczi<raboczi@tucanatech.com>
Cc: RDF Data Access Working Group<public-rdf-dawg@w3.org>



On Mon, 2004-06-07 at 10:25, Simon Raboczi wrote:
[...]
> > [itql-] 3.3 Extensible Value Testing
> 
> Extensibility is handled by considering a datatype processor to be a 
> named graph.  For example, the limited XML Schema support Kowari 
> currently has is represented by a named graph that notionally contains 
> an infinite number of statements, including 1 < 2, 1< 3, 1 < 4, 
> 2003-12-31 is before 2004-01-01, and so forth.

Hmm... nifty... that's a design I don't think I've seen before.

>   You extend by adding 
> new datatype processors, which from the language's point of view are 
> just new named graphs.  The predicates appearing in the statements 
> within those processors are your extended operations.  There's no 
> special syntactic support for extensibility; it just falls out of 
> having set operations in the "from" clause and being liberal about the 
> kinds of graphs the system is willing to query.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



