docno="lists-020-14271926"
received="Tue Jun  8 20:09:19 2004"
isoreceived="20040609000919"
sent="Tue, 8 Jun 2004 17:07:22 -0700"
isosent="20040609000722"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RE: Objective 4.6 &ndash;&ndash; additional semantic information"
id="CFE388CECDDB1E43AB1F60136BEB49730280D5@rome.ad.networkinference.com"
charset="us-ascii"
inreplyto="Objective 4.6 &ndash;&ndash; additional semantic information"
expires="-1"


To:"Jos De_Roo"<jos.deroo@agfa.com>
Cc:"RDF Data Access Working Group"<public-rdf-dawg@w3.org>


> It's getting late here, but I'll dump my case
> I've done a test with the given kb
>   :a :b :c.
>   :d :e :f.
> 
> and a test with the given kb
>   :a :b :c.
> 
> and a test with the given kb.
>   :d :e :f.
> 
> and a test with the given kb which is empty

Okay; so this is an example of doing disjunction in a query, and NOT an
example of supplementing an RDF graph with addtional semantic knowledge.
(Such an example is relevent to my complaint about "subgraph results",
but I don't see it as relevent to objective 4.6.)

> That are all RDF graphs.
> 
> The query is implemented with the --filter
> option of cwm and euler, which is an RDF formula
>   {:a :b :c} => {:yes :for <>}.
>   {:d :e :f} => {:yes :for <>}.
> but haven't yet thought about other designs...

You still haven't explicitly said what the user's query is; I'm assuming
it's just a plain "is either of these two specified triples in the
graph?"

> The answer is definitely an RDF graph like
>   :yes     :for <testC.n3> .
> (where testC.n3 is actually that filter file)
> or the empty graph for the fourth test.
> 
> I fail to see the harm in doing
> "encoding the answer within the query"...

I am quite happy that disjunction seems to be handled by this "filter"
functionality (since all we really need in this case is a "union"). But
you skipped a very big step here: the user had a query, and you encoded
it in a clever form that happens to get the right answer. Further, your
result is a triple in a form the user has never seen before, and you
have to marshal that back to something they might understand. The fact
that your answer of "true" comes back as an RDF triple that you have
added to the graph using some hand-written code for this query is
entirely beside the point; its RDF-ness doesn't help a bit.



