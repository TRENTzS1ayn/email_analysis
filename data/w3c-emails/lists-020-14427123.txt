docno="lists-020-14427123"
received="Wed Jun  9 17:27:03 2004"
isoreceived="20040609212703"
sent="Wed, 9 Jun 2004 14:25:15 -0700"
isosent="20040609212515"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RE: REX evaluation"
id="CFE388CECDDB1E43AB1F60136BEB49730280DA@rome.ad.networkinference.com"
charset="us-ascii"
inreplyto="REX evaluation"
expires="-1"


To:<kendall@monkeyfist.com>
Cc:"RDF Data Access Working Group"<public-rdf-dawg@w3.org>


> Is there anything on the Web about REX so that some of us could
> consider your evaluation critically? It's hard -- well, impossible,
> really -- to know what to make of this w/out independent access to the
> details.

I'm afraid not. Documentation for some of our own work on the OWL-query
form should be available as soon as the new version of our product is
released, but that's really quite specific to OWL.
It's nothing more than XQuery with the addition of the functions I
describe: http://www.w3.org/TR/xquery/

> Some questions:
> 
> > 4.2 Provenance
> > UNKNOWN
> > I don't understand this objective well enough to evaluate it.
> 
> Is this because "provenance" is overloaded or for other reasons?

This is because "provenance" isn't well-defined for me. I see an RDF
repository as an RDF repository; I thought the whole point of RDF was
that it made absolutely no difference who said something or where that
information was stored so long as somebody said it somewhere, and thus I
view all RDF data as just sitting in the same place. If you want to tell
me about additional meta-information about the triples themselves,
describe what the format of that data is and where it comes from, then
maybe I can tell you whether a REX system already supports querying it
or whether it's easy to extend it to do so. But I don't know enough
about the problem to even attempt a solution.

> > 4.4 User-Specifiable Serialization
> > FULLY SUPPORTED
> > One of the strengths of the language.
> 
> I don't understand this; can you say more about it?

XQuery FLWOR statements have extremely robust capabilities for
formatting results. Effectively, the result is a sequence, each element
of which is the result of evaluation of an XQuery expression with a set
of variables bound to a particular set of values.
In the absolute simplest case, you can write any XML expression (known
in XQuery as a "direct constructor"), and then plug in variable names
somewhere in the XML which will be substituted for that variable's
binding.

> > 4.5 Aggregate Query
> > UNKNOWN
> > I don't understand this objective well enough to evaluate it.
> 
> Well first, can I use REX to query multiple graphs in one query? If
> yes, what are the semantics of that query? If you can't query multiple
> graphs in one query, then I think it's not supported, right?

This requirement has always confused me, because it doesn't strike me as
something that a query language dictates. It would be perfectly sensible
to write a REX implementation which collected data from multiple sources
in order to answer a query, but that's the implementation doing that,
not the query language.

REX currently doesn't even address source selection (although it could
probably be added), so choosing "multiple graphs" as the source isn't
addressed, either. Whether this means that the language doesn't support
it (a valid assessment) or whether it means that the language doesn't
prevent it (also perfectly valid; see "local queries") is up to you.



