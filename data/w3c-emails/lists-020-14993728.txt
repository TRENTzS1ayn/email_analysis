docno="lists-020-14993728"
received="Sun Jun 13 16:58:10 2004"
isoreceived="20040613205810"
sent="Sun, 13 Jun 2004 21:44:00 +0200"
isosent="20040613194400"
name="Dirk-Willem van Gulik"
email="dirkx@asemantics.com"
subject="Re: New use case - RDFS/OWL related"
id="042C3FD5-BD72-11D8-A1C1-000A95CDA38A@asemantics.com"
charset="US-ASCII"
inreplyto="p06110435bceb623715e3&#64;[10.0.1.2]"
expires="-1"


Cc:"Seaborne, Andy"<andy.seaborne@hp.com>,public-rdf-dawg@w3.org
To: Jim Hendler<hendler@cs.umd.edu>



On Jun 8, 2004, at 2:51 PM, Jim Hendler wrote:

>  I think you missed the intent of my message - I tried to be  clear 
> that I was NOT talking about an open ended query -- I would not be 
> going to CYC and saying tell me what you know about cats, I would be 
> going to a graph and querying forthe bindings for a query something 
> like this
..snup..
>    Query the CYC graph for the pattern in which cat has a CLASSTYPE 
> (subclassof or equivalentClass)
> of a restriction class and return to me the names of what PROPerties 
> the restriction is on, what OWLterm the restriction uses (AllValues, 
> SomeValues, etc.) and what the RESTriction is.
..snup..
>   In practice I might do something different than this (perhaps 
> multiple queries for specific combinations as I needed them), but in 
> every case I am asking for specific properties of specific entities 
> from an RDF graph - in my opinion, this capability is why I devoted so 
> much of my past few years to making OWL an RDF language -- if I just 
> wanted to query documents, I would have agreed that an XML syntax was 
> sufficient -- but for linking and processing OWL, I want to use the 
> URIs and the graph
...
>  As far as 3.6 goes, I guess I could use optional features in the 
> above, I was thinking of multiple queries myself, but could go either 
> way ...

Query, and returning a (partial) tree from a certain point on is one 
thing - Querying multiple times as in "over -time-" and/or as the 
result of a previous query and looking at the aggregate result set is 
quite another - as you then suddenly are into transactions, locking and 
consistancy issues if the database is live; i.e. changes under your 
feet.

Sofar the emphasis on a 'one query' one answer has very much reasures 
me - and stayed well away of the usual rat holes.

Dw



