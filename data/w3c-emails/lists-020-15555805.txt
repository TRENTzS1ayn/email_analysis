docno="lists-020-15555805"
received="Thu Mar 11 11:34:23 2004"
isoreceived="20040311163423"
sent="Thu, 11 Mar 2004 16:33:56 -0000"
isosent="20040311163356"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="RE: Use case: AFS-1: &quot;Find the resource for the person called 'Jo hn  Smith'&quot;"
id="E864E95CB35C1C46B72FEA0626A2E80801EA138F@0-mail-br1.hpl.hp.com"
inreplyto="Use case: AFS-1: &quot;Find the resource for the person called 'Jo hn  Smith'&quot;"
expires="-1"


To:public-rdf-dawg@w3.org




-------- Original Message --------
> From: Janne Saarela <>
> Date: 11 March 2004 14:31
> 
> Very good starting point. Formally may I suggest
> we could use logic programming notation such
> 
> (X, FN:name, "John Smith")

Can do - Alberto has an extensive collection of examples [1] that take an
example and write them in any query language people care to add.  

In this case, I was trying to avoid writing the query into the use case
because it is more focused on requirements and the discussion is then on the
use case, not the solution.

We are at the stage of finding out what a use case is to this group - my
expectation is that we will thrash a few around then come up with a format
for wrting them down in a consistent way.  We need the regularity of form in
order to extract requirements in an systematic way.

Andy

[1] http://rdfstore.sourceforge.net/2002/06/24/rdf-query/

> 
> The evaluation result would then be either bindings
> for X or if closure is a requirement, we would return
> all triples with X bound to a different value.
> 
> I would like to see closure implemented with the query
> language in order to enable refined queries over
> the result graph.
> 
> Let me post another email about inference.
> 
> Janne



