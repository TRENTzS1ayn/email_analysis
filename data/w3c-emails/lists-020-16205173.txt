docno="lists-020-16205173"
received="Thu Mar 18 12:01:16 2004"
isoreceived="20040318170116"
sent="Thu, 18 Mar 2004 11:01:14 -0600"
isosent="20040318170114"
name="Kendall Clark"
email="kendall@monkeyfist.com"
subject="KGC-1: capability discovery"
id="20040318110114.A30447@monkeyfist.com"
charset="us-ascii"
expires="-1"


To:public-rdf-dawg@w3.org


-- Name --

Generically discover/publish server capabilities

-- Description --

Abelard often needs to query an arbitrary list of RDF storage servers
for assertions about a set of URIs he cares about. Abelard's client
software includes support for three different query
languages. Abelard's client software connects to each RDF storage
server and determines whether it supports one of the three query
languages it knows about. Abelard's client software chooses, based on
priorities set by Abelard, to send different queries to different
servers.

Heloise makes RDF available over the Web using an RDF storage
server. Heloise's server, implementing DAWG, supports the DAWG query
language; but it also supports the Versa[1] RDF path query
language. Heloise's server makes its query language capabilities
available in a machine readable form. It negotiates with clients in
order to choose the most appropriate query language that they have in
common.

-- Value --

Abelard can formulate queries in a variety of query languages, which
preserves his existing investment. Abelard's software vendor and
Heloise's software vendor can develop and sell extensible, relatively
generic systems.

Abelard and Heloise are able to exchange data in an interoperable
fashion without requiring out-of-band, human negotiation about
capabilities.

-- Other --

Rather than writing several parallel use cases just like this one, I
invite the reader to substite the following for "query languages" in
this use case:

     * RDF serialization types
     * context support
     * publicly available models with read access
     * publicly available models with write access

Footnotes: 
[1]  http://uche.ogbuji.net/tech/rdf/versa



