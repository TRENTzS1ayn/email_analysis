docno="lists-020-16265025"
received="Thu Mar 18 14:04:50 2004"
isoreceived="20040318190450"
sent="Thu, 18 Mar 2004 11:04:22 -0800"
isosent="20040318190422"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RS-1: Simple data retrieval"
id="CFE388CECDDB1E43AB1F60136BEB4973028039@rome.ad.networkinference.com"
charset="us-ascii"
expires="-1"


To:"RDF Data Access Working Group"<public-rdf-dawg@w3.org>


RS-1a:

A user has a large collection of data derived from a legacy database.
The original table contains records for people and offers two columns:
one for the person's name, and another for the person's age, stored as
an integer.
From this data source, an RDF data feed is made available which presents
triples of the form:

myDb:Row12345, myDb:hasName, "David Waddler"^^xsd:string
myDb:Row12345, myDb:hasAge, "27"^^xsd:int
myDb:Row12346, myDb:hasName, "Ernest Johnson"^^xsd:string
myDb:Row12346, myDb:hasAge, "83"^^xsd:int

The user wishes to retrieve the names (the value of the "hasName"
property) for every person with an age (the value of the hasAge
property) between 25 and 35.

RS-1b:

The legacy data source also contains a column for email addresses, so we
also have available triples of the form:

myDb:Row12345, myDb:hasEmail, "dwaddler@foo.bar"^^xsd:string
myDb:Row12346, myDb:hasEmail, "ernestj@bar.baz"^^xsd:string

The user wishes to write an application to send a personalized email to
every person between 25 and 35 years of age.

RS-1c:

Instead of ages being encoded as integers, they are encoded as dates of
birth:

myDb:Row12345, myDb:hasName, "David Waddler"^^xsd:string
myDb:Row12345, myDb:hasAge, "1976-11-21"^^xsd:date
myDb:Row12345, myDb:hasEmail, "dwaddler@foo.bar"^^xsd:string

The user wishes to build the application described in RS-1b.



