docno="lists-020-16401640"
received="Fri Mar 19 09:08:26 2004"
isoreceived="20040319140826"
sent="Fri, 19 Mar 2004 09:06:51 -0500"
isosent="20040319140651"
name="Kendall Clark"
email="kendall@monkeyfist.com"
subject="Re: Discover and publish a server's functionality"
id="20040319140651.GB28918@monkeyfist.com"
charset="us-ascii"
inreplyto="323B526A-7979-11D8-A9CA-000A95EAFCEA&#64;nokia.com"
expires="-1"

To:public-rdf-dawg@w3.org



On Fri, Mar 19, 2004 at 09:44:04AM +0200, Patrick Stickler wrote:
> 
> 
> This is a nice specialization of the more generically stated use cases
> 
> PS-1: Discovery of authoritative knowledge via URI
> PS-3: Third-Party Knowledge Discovery; query by known identity
>
> which apply to any resource whatsoever denoted by a URI, such as
> a web service.

I think so, yes; though I reserve the right to change my mind after
actually thinking about it. :>
 
> Thus, if the client software knows the URI of the web service in
> question, it can then (hopefully) use the DAWG solution to obtain
> a description of that web service, and decide how best (or if) to
> interact with that service.

Yes.

> "Negotiation" is taken to equate to the client learning what
> protocols, query languages, parameters, etc. the server supports
> and deciding for itself how best (or if) to proceed.

Exactly; and, though I guess this is already clear, I want clients to
be able to "learn" these things via RDF. (This is why I'm trying to
analogize to con-neg, though this is really more like capability
negotiation.)

The only diff in my use case and yr 1 & 3 is that I think DAWG will
have to -- and this takes us beyond *use cases* strictly speaking --
work out some actual RDF vocabulary and conventions. (I should look at
the capabilities stuff the W3 has already done, of course; but first I
wanna finish writing more UCs.)

Kendall



