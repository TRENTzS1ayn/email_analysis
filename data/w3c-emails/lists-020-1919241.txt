docno="lists-020-1919241"
received="Mon Jan 19 09:48:18 2004"
isoreceived="20040119144818"
sent="Mon, 19 Jan 2004 15:48:37 +0100"
isosent="20040119144837"
name="Kay, Michael"
email="Michael.Kay@softwareag.com"
subject="RE: [XPath] predicates (editorial)"
id="37B64F4BA60E9E4FB9F60929E05980242877D8@DAEMSG03.eur.ad.sag"
charset="us-ascii"
inreplyto="[XPath] predicates (editorial)"
expires="-1"


To:"Xavier Franc"<xfranc@online.fr>,<public-qt-comments@w3.org>

(Personal response)
 
I think you're right. This looks like a leftover from the way that
filter expressions were explained in XPath 1.0.
 
Michael Kay

-----Original Message-----
From: public-qt-comments-request@w3.org
[mailto:public-qt-comments-request@w3.org] On Behalf Of Xavier Franc
Sent: 17 January 2004 12:00
To: public-qt-comments@w3.org
Subject: [XPath] predicates (editorial)


A small inaccuracy in     3.2.2 Predicates

it reads:

By contrast, (preceding::foo)[1] returns the first foo element in
document order, 
 -> correct
...because the axis that applies to the [1] predicate is the child axis.
-> I dont see any child axis here
    If I am not mistaken, it should read something like "because the
   expression that applies to the [1] predicate is itself in document
order"
  (being a whole path expression, and not a simple reverse step)



