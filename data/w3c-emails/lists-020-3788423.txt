docno="lists-020-3788423"
received="Fri Jan 23 16:01:18 2004"
isoreceived="20040123210118"
sent="Fri, 23 Jan 2004 13:01:12 -0800 (PST)"
isosent="20040123210112"
name="Dimitre Novatchev"
email="dnovatchev@yahoo.com"
subject="RE: [F&amp;O] 15.1 zero-or-one, one-or-more, exactly-one"
id="20040123210112.95192.qmail@web41103.mail.yahoo.com"
charset="us-ascii"
inreplyto="33D970235519324D988AFFDE7EA2E24C92CC6A&#64;RED-MSG-41.redmond.corp.microsoft.com"
expires="-1"


To: Paul Cotton<pcotton@microsoft.com>
Cc:public-qt-comments@w3.org



--- Paul Cotton <pcotton@microsoft.com> wrote:
> I am responding to this comment thread on behalf of the XQuery and XSL
> Working Groups.
> 
> The WGs reviewed your comment [1] and agreed with the explanation that
> Michael Kay provided in [2].  The WGs were pleased to see that you
> responded positively to Michael's explanation in [2] in your message
> [3].
> 
> In you message of [3] you further asked:
> 
> > Why support such inappropriate type-checking?
> 
> The WGs also discussed this question and felt that this type of static
> type-checking is indeed useful and several WG members said that they
> will have implementations that will indeed implement this feature.  In
> addition it was pointed out that since static typing was an optional
> feature if you feel that this form of static typing is not useful then
> you will not have to implement it.
> 
> We would be grateful if you could confirm that this response resolves
> the questions you raised in your comments [1] and [3].

Thank you very much for your time in considering my comments.

The response to comment [1] explained the issue, but it does not eliminate
the problem that it would be difficult to understand the necessity of
those functions for users of implementations that do not support
conservative static type-checking.

Such explanations with appropriate examples have to be included in the
document in order to really resolve this issue.

As to the response to comment [3], the real issue with allowing "optional"
conservative static type checking is that this will force all programmers,
in order to achieve portability of their products when run with different
implementations, to always use these functions, even with implementations,
which do not support conservative static type checking. To be forced to do
this on all implementations that do not support conservative static
type-checking is not only inconvenient and cumbersome, but it also clearly
shows that the "optional" feature in reality will have the effects of a
mandatory one.

It follows from your response to comment [3] that the issue described in
the preceding paragraph has not been addressed and remains unresolved.

I propose to remove the text mentioning conservative type-checking --
either completely or to remove its qualification as an "optional" feature.

It must be clear that the fact that conservative static type-checking is
not mentioned in the document does not forbid any vendor to implement such
kind of type checking in their implementation.


Thank you again,

Dimitre Novatchev.

__________________________________
Do you Yahoo!?
Yahoo! SiteBuilder - Free web site building tool. Try it!
http://webhosting.yahoo.com/ps/sb/



