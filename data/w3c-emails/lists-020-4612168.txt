docno="lists-020-4612168"
received="Fri Jan 30 13:12:09 2004"
isoreceived="20040130181209"
sent="Fri, 30 Jan 2004 18:45:57 +0100 (MET)"
isosent="20040130174557"
name="Oliver Becker"
email="obecker@informatik.hu-berlin.de"
subject="[XSLT2] OB06 xsl:analyze-string"
id="200401301745.i0UHjvx8008136@mail.informatik.hu-berlin.de"
charset="us-ascii"
expires="-1"


To:public-qt-comments@w3.org


http://www.w3.org/TR/2003/WD-xslt20-20031112/#analyze-string

Hello,

the new functionality for processing simple text using regular expressions
is very useful. However, I wonder why it is restricted to one expression
per instruction.

A more powerful instruction could allow multiple regular expressions that
will be processed in lex-like manner [1]. That means the regex attribute
would be a property of xsl:matching-substring and not of xsl:analyze-string.
Replacing multiple substrings with proper markup then would require less
nested XSLT elements. Having only one xsl:matching-substring in this new 
semantics would behave exactly like the current version. 

Moreover, I believe this model reflects the template model of XSLT for
text processing: xsl:analyze-string is a container like xsl:stylesheet,
xsl:matching-substring is the counterpart for xsl:template.

I would be great if this enhancement of xsl:analyze-string could be
considered for the final XSLT specification.

Best regards,
Oliver Becker


[1] M. E. Lesk and E. Schmidt: "Lex - A Lexical Analyzer Generator"
    e.g. http://dinosaur.compilertools.net/lex/index.html


/-------------------------------------------------------------------\
|  ob|do        Dipl.Inf. Oliver Becker                             |
|  --+--        E-Mail: obecker@informatik.hu-berlin.de             |
|  op|qo        WWW:    http://www.informatik.hu-berlin.de/~obecker |
\-------------------------------------------------------------------/



