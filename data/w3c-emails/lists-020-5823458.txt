docno="lists-020-5823458"
received="Mon Mar  1 11:19:14 2004"
isoreceived="20040301161914"
sent="Mon, 1 Mar 2004 16:19:02 -0000"
isosent="20040301161902"
name="Michael Kay"
email="mhk@mhk.me.uk"
subject="RE: [XSLT2.0] 16.6.5 system-property"
id="20040301161914.4A48C3F5323@dr-nick.w3.org"
charset="us-ascii"
inreplyto="9B66BBD37D5DD411B8CE00508B69700F049E24A6&#64;pborolocal.rnib.org.uk"
expires="-1"

To:<David.Pawson@rnib.org.uk>,<public-qt-comments@w3.org>
Cc:<davidc@nag.co.uk>



# And this is in a type aware system?
# 
# Something is sadly wrong here, surely.
# 
# Since this backwards compatibility is so badly broken anyway,
# can't this one be fixed to make sense at least?
# 

We did look at the implications of changing the string-to-boolean conversion
rules. One use case is where recursive templates are used to process text a
word at a time, with a zero-length string used as the terminating condition.
It would be very unfortunate if recursion terminated prematurely simply
because the source document contained the English word "false".

So it's not just a case of retaining backwards compatibility. The current
rules, for certain use cases, are the right rules.

Incidentally, backwards compatibility is NOT badly broken. I've recently
been testing all the example stylesheets in my book under XSLT 2.0, and very
few changes are needed. We've worked very hard to ensure this, and the
argument that if things are only 99.8% backwards compatible then they might
as well only be 95% is one that needs to be fiercely resisted. It's all
about ensuring that the benefits of moving forward exceed the costs.

Michael Kay



