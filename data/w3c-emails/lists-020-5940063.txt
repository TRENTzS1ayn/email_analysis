docno="lists-020-5940063"
received="Wed Mar  3 03:56:58 2004"
isoreceived="20040303085658"
sent="Wed, 3 Mar 2004 08:56:03 -0000"
isosent="20040303085603"
name="Michael Kay"
email="mhk@mhk.me.uk"
subject="RE: defer cyclic module import until XQuery 1.0"
id="20040303085658.179C9A1201@frink.w3.org"
charset="us-ascii"
inreplyto="4044E53A.30208&#64;bothner.com"
expires="-1"

To:"'Per Bothner'"<per@bothner.com>
Cc:<public-qt-comments@w3.org>



OK, sorry: I phrased it wrong. In XSLT, if module A explicitly includes
module B, then B implicitly includes A, in the sense that everything in A
becomes visible in B. Although the references between modules can't be
cyclic, the references between templates and functions can. The essence of
the point I was trying to make is that there's no restriction on mutual
recursion between templates/functions in different modules.

Michael Kay

# -----Original Message-----
# From: Per Bothner [mailto:per@bothner.com]
# Sent: 02 March 2004 19:49
# To: Michael Kay
# Cc: public-qt-comments@w3.org
# Subject: Re: defer cyclic module import until XQuery 1.0
# 
# Michael Kay wrote:
# > It's worth pointing out that XSLT has always allowed cyclic includes and
# > imports, with no restrictions on forwards references or cross-module
# mutual
# > recursion.
# 
# There is this "Michael Kay" guy who seems to disagree with you:
# "XSLT Programmer's Reference", 1st edition, page 220:
# "A stylesheet must not directly or indirectly include itself."
# 
# Some guy with the same name is listed as editor of "XSL Transformations
# (XSLT) Version 2.0 - W3C Working Draft 12 November 2003" which says:
# "[ERR XT0180] It is a static error if a stylesheet module directly or
# indirectly includes itself." and
# "[ERR XT0210] It is a static error if a stylesheet module directly or
# indirectly imports itself."
# 
# Or are we talking about different things?
# 
# > So it can't be that difficult. Of course, no-one ever tried to
# > write the formal semantics for it.
# 
# It's not just formal semantics, but *static* semantics.  XQuery supports
# lexical scoping and static type-checking; XSLT has neither.  I'm sure
# one *can* do lexical scoping and static type-checking with mutually
# dependent modules (C does it, sort-of), but I'm also sure that the
# drafts I've seen don't come close to a consistent or workable
# specification, formal or informal.
# --
# --Per Bothner
# per@bothner.com   http://per.bothner.com/



