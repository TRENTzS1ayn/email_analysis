docno="lists-020-7076879"
received="Wed Mar 10 07:37:56 2004"
isoreceived="20040310123756"
sent="Wed, 10 Mar 2004 04:37:25 -0800"
isosent="20040310123725"
name="Ashok Malhotra"
email="ashokma@microsoft.com"
subject="RE: [F&amp;O] Underflow in date arithmetic"
id="EDB607C8AC991F40BE646533A1A673E8017A5E7E@RED-MSG-42.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="[F&amp;O] Underflow in date arithmetic"
expires="-1"


To:"Priscilla Walmsley"<priscilla@walmsley.com>,<public-qt-comments@w3.org>


Hi Priscilla:
We agreed to add wording to clarify the intent of the paragraphs you
identified at the meeting of the joint WGs last week.  

All the best, Ashok

-----Original Message-----
From: public-qt-comments-request@w3.org
[mailto:public-qt-comments-request@w3.org] On Behalf Of Priscilla
Walmsley
Sent: Wednesday, February 04, 2004 4:47 AM
To: public-qt-comments@w3.org
Subject: [F&O] Underflow in date arithmetic


In section 9.1.1 (Limits and precision), F&O says:

"A processor that limits the number of digits in date and time datatype
representations may encounter overflow and underflow conditions when it
tries to execute the functions in 9.7 Adding and Subtracting Durations
From
dateTime, date and time. In these situations, the processor .must.
return
zero in case of underflow and .must. raise an error [overflow in
date/time
arithmetic] in case of overflow."
 
The last sentence seems to imply that the return value for the functions
should be a numeric value 0 in the case of underflow. But this seems
strange, since none of the functions/operators described in that section
return numeric values in any other case.  I would think you would want
just
the part of the time or duration that is causing underflow (e.g. the
number
of seconds) to be treated as zero.  
 
Thanks,
Priscilla Walmsley



