docno="lists-020-9128521"
received="Mon May 17 20:02:55 2004"
isoreceived="20040518000255"
sent="Mon, 17 May 2004 17:02:41 -0700"
isosent="20040518000241"
name="Ashok Malhotra"
email="ashokma@microsoft.com"
subject="Casting from xs:float to xs:double"
id="EDB607C8AC991F40BE646533A1A673E8021D7D58@RED-MSG-42.redmond.corp.microsoft.com"
charset="us-ascii"
expires="-1"


To:"public comments"<public-qt-comments@w3.org>

According to appendix B <http://www.w3.org/TR/xquery/>  of the XQuery
spec.

A value of type xs:float (or any type derived by
restriction from xs:float) can be promoted to the type xs:double. The
result is the xs:double value that is the same as the original value.
This kind of promotion may cause loss of precision.

I'm wondering where the imprecision could come from.  Every xs:float
value can be represented EXACTLY as a xs:double value.
Read IEEE-754 float value can be represented exactly as an IEEE-754
double value.   So where could the loss of precision come from?




All the best, Ashok



