docno="lists-021-0229198"
received="Wed Mar 24 07:39:31 2004"
isoreceived="20040324123931"
sent="Wed, 24 Mar 2004 14:37:42 +0200"
isosent="20040324123742"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: thoughts and some refs about AFS-2 UC (simplicity, minimalism )"
id="0B678B08-7D90-11D8-858C-000A95EAFCEA@nokia.com"
charset="US-ASCII"
inreplyto="73D6FE0A-7D89-11D8-858C-000A95EAFCEA&#64;nokia.com"
expires="-1"


Cc: RDF Data Access Working Group<public-rdf-dawg@w3.org>,"ext Alberto Reggiori"<alberto@asemantics.com>, Andy ext Seaborne<andy.seaborne@hp.com>
To: Patrick Stickler<patrick.stickler@nokia.com>



On Mar 24, 2004, at 13:50, Patrick Stickler wrote:

>> in other words, CBD as defined by Patrick today is about returning 
>> "outbound" nodes from a URI (Andy's bNodes closure is another example 
>> of that AFAIK) - while sometimes the server might need/want to return 
>> "inbound" nodes or a mixture of the two.
>>
>> I found the RDF Objects [3] paper explaining this point a little bit 
>> more clearly.
>
> I'll have to have a look at that...

Right. It may in fact be useful to sometimes include "inbound" nodes 
based
on statements where the target resource is the object of some statement
about another resource -- but I think that this is a special case, and
one that can quickly overwhelm a client where the target resource is 
e.g.
a vocabulary term or a frequently referred to resource.

Also, references to that target, as the object of statements describing
other resources, may have highly specialized meaning that is not of
general utility to the agent, as the statements may relate to some
application or context of which the agent is ignorant.

So, again, while it will surely be useful to provide for all sorts of
"extraction algorithms" (to use the terminology of Alex' paper), I
still strongly feel that we should have a default, basic, core, typical
extraction algorithm which provides "RDF Objects" that most typical
SW agents are able to do useful things with.

Interestingly, I found Alex' paper, by the way, to very effectively
demonstrate exactly why we *do* want to provide for concise bounded
descriptions of resources and their utility in building distributed
open solutions -- in particular by pointing out that the most useful
kinds of descriptions are difficult to extract using queries alone and
require native implementation support to produce.

So, yes, it needs to be defined in the DAWG recommendation.

Cheers,

Patrick

--

Patrick Stickler
Nokia, Finland
patrick.stickler@nokia.com



