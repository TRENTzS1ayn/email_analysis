docno="lists-021-0744978"
received="Fri Mar 26 11:57:17 2004"
isoreceived="20040326165717"
sent="Fri, 26 Mar 2004 16:55:43 -0000"
isosent="20040326165543"
name="Seaborne, Andy"
email="andy.seaborne@hp.com"
subject="Optional triples"
id="E864E95CB35C1C46B72FEA0626A2E80801EA1A4C@0-mail-br1.hpl.hp.com"
expires="-1"


To: RDF Data Access Working Group<public-rdf-dawg@w3.org>



Eric mentioned optional triples [1].  There seem to be two, intertwined,
issues here. 

Something I get asked for is being about to match triples but not fail the
query if there is no match.  One case of these requests is the "get all
triples with Dublin Core properties".

The typical app writer request is about getting information out of the
graph.  In terms of the simple locate-extract-present framework [2], this
puts the disjunctive optional triples in the "extract" part of the process -
this helps in saying what happens if a query has non-optional patterns
linked by optional parts.  Rob pointed out [3] that optional paths (not just
single hop triple patterns)are needed if optionals are addressed.

I am not suggesting there is or is not a strong enough use case for
disjunction in the "locate" phase - I don't know.  There are some good
examples - it might be a matter more of how much coverage we want DAWG-QL to
be in the first instance.

Andy

[1] http://lists.w3.org/Archives/Public/public-rdf-dawg/2004JanMar/0185.html
[2] http://lists.w3.org/Archives/Public/public-rdf-dawg/2004JanMar/0040.html
[3] http://lists.w3.org/Archives/Public/public-rdf-dawg/2004JanMar/0184.html



