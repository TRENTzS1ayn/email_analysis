docno="lists-021-0783891"
received="Fri Mar 26 17:14:53 2004"
isoreceived="20040326221453"
sent="Fri, 26 Mar 2004 14:13:49 -0800"
isosent="20040326221349"
name="Rob Shearer"
email="Rob.Shearer@networkinference.com"
subject="RE: Concise Bounded Descriptions, bnode closure, OWL, and FOAF like models"
id="CFE388CECDDB1E43AB1F60136BEB4973028056@rome.ad.networkinference.com"
charset="us-ascii"
inreplyto="Concise Bounded Descriptions, bnode closure, OWL, and FOAF like models"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>,"RDF Data Access Working Group"<public-rdf-dawg@w3.org>


I'm afraid I don't entirely understand a lot of this. At the very least,
I think you're assuming a very very particular processing model and
assuming that the limitations of that particular implementation are
semantics implied by OWL.

Making a property inverseFunctional doesn't necessarily end any
algorithm or recursion. It simply asserts that under certain
circumstances it can be inferred that two different names refer to the
same instance. Any even mildly sophisticated RDF/OWL reasoner has at
least minimal separation between data retrieval and true inferencing.
Attempting to exploit inverse functional properties to prevent
particular aspects of data retrieval from happening is nothing but an
optimization and should absolutely *not* be required.

Perhaps I'm just misunderstanding; can you provide a sample data set and
explain just what you expect inverseFunctional assertions to change
about it?

> -----Original Message-----
> From: Patrick Stickler [mailto:patrick.stickler@nokia.com] 
> Sent: 25 March 2004 08:40
> To: RDF Data Access Working Group
> Subject: Concise Bounded Descriptions, bnode closure, OWL, 
> and FOAF like models
> 
> 
> 
> 
> I've been pondering about the extraction of concise bounded 
> descriptions
> in the case of "bnode-centric" models such as FOAF, and believe that
> OWL can provide a very elegant and simple solution to the 
> "overgeneration"
> of levels that will occur with the present RDF-only definition of
> concise bounded descriptions.
> 
> Essentially, owl:InverseFunctionalProperty is employed to bound the 
> depth of
> descriptions, such that, for any bnode object, if there exist any 
> statements
> for which it is the subject and which employ properties of rdf:type
> owl:InverseFunctionalProperty then those and only those statements are
> included in the description and the recursion ends there.
> 
> This provides just enough information about the bnode denoted resource
> for an agent to obtain a complete description of that uniquely 
> identified
> resource if necessary, in a system-independent manner (irrespective
> of system-specific bnode labels). In fact, the "fragment description"
> of the resource consisting of only its uniquely identifying properties
> constitute a query template, which should result in a complete 
> description
> of that resource.
> 
> If no statement with an instance of 
> owl:InverseFunctionalProperty exists
> for the bnode, then recursion continues, adding all 
> statements about the
> bnode delimited resource to the description.
> 
> Now, for vocabularies for which there do not (yet) exist any OWL
> ontology which specifies which properties are of rdf:type
> owl:InverseFunctionalProperty, the ability to submit auxiliary
> knowledge along with an RDF query really shines. If one knows they
> are querying a knowledge base using a particular bnode-centric
> vocabulary, they can include along with the query extra information
> such as, e.g.
> 
>     ex:emailAddress rdf:type owl:InverseFunctionalProperty .
> 
> or
> 
>     blargh:employeeNumber rdf:type owl:InverseFunctionalProperty .
> 
> etc.
> 
> to be taken into account when executing the query, and thus bounding
> the bnode closure in an effective manner.
> 
> In any case, one would *have* to continue recursion for bnode
> denoted resources where no uniquely identifying properties are
> evident, since otherwise, one is unnable to request a description of
> that bnode denoted resource in a system-independent, portable manner
> since bnode labels are system-dependent. So simply limiting the number
> of levels is not an optimal solution.
> 
> This OWL augmented approach to generating concise bounded descriptions
> at least helps to lessen the magnitude of the problem substantially
> (and completely solves the problem for FOAF, which already defines
> which properties are instances of owl:InverseFunctionalProperty).
> 
> Eh?
> 
> Patrick
> 
> --
> 
> Patrick Stickler
> Nokia, Finland
> patrick.stickler@nokia.com
> 
> 



