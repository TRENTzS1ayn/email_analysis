docno="lists-021-0904379"
received="Wed Mar 31 08:53:57 2004"
isoreceived="20040331135357"
sent="Wed, 31 Mar 2004 15:56:34 +0200"
isosent="20040331135634"
name="Dirk Colaert"
email="Dirk.Colaert@quadrat.be"
subject="Re: Use case: AFS-2:"
id="8C62F6881FC8D511BC52009027DC836E0200D7CC@SKYWALKER"
inreplyto="Use case: AFS-2:"
expires="-1"


To:"'public-rdf-dawg@w3.org'"<public-rdf-dawg@w3.org>

I got into this mail threads quite late, so, excuse me if I am repeating
things that have already been mentioned in other mails.
About the use case AFS-2
<< Finds all information available, without a priori knowledge of what to
retrieve>>
 
I'm a bit concerned about the word 'all'. Many databases and ontologies will
be very heavy. If you ask all information about something you have the risk
that the query will have very poor performance. In real life situations it
often happens that entities are very much related to each other. When I try
to imagine such a query for a hospital database and I'm asking 'any
information about patient <ID>' I will drag the whole database into the
result set (at least touching many, many tables).
 
Maybe we should consider a query: "What kind of information can you give me
about patient <ID> ?"  and then, in a second time: "Give me the medical
history of this patient".
 
Dirk
 
 
 
___________________________________
Dr. Dirk Colaert MD
Production, Information Systems Architect
Agfa
HealthCare Informatics
call +32 3 444 84 08
fax  +32 3 444 84 01
 



