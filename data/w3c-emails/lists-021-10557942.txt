docno="lists-021-10557942"
received="Fri Sep 26 15:55:49 2003"
isoreceived="20030926195549"
sent="Fri, 26 Sep 2003 20:53:40 +0100"
isosent="20030926195340"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: Tim on a stick (was Re: Telecon points)"
id="204FD356-F05B-11D7-BE7B-000A9580D8C0@w3.org"
charset="US-ASCII"
inreplyto="Tim on a stick (was Re: Telecon points)"
expires="-1"

To:public-sw-meaning@w3.org



In 
http://lists.w3.org/Archives/Public/public-sw-meaning/2003Sep/0097.html
Peter writes that my position is as follows.

> Here is my rigid caricature of this solution.  I have, however, 
> restricted
> the scope of information to that stored in the Semantic Web.
>
> 0/ Names in the Semantic Web are URI references with optional fragment
>    identifiers.
>
> 1/ The Semantic Web is fundamentally premised on the idea that there 
> is a
>    single intended definition for each name in the Semantic Web.
>
> 2/ The definition of a name in the Semantic Web is determined from all
>    documents stored (stored, not simply accessible) at the URI 
> constructed
>    by removing the optional fragment identifier, if any, from the name 
> no
>    matter which language, formal or otherwise, they are written in.


Not quite.   You (and Bijan) seem to get this a bit the wrong way 
around.
Not that the definition *must* be determined in a particular way.

2)  What can be done with a name is determined by the URI spec and other
specs invoked by the URI scheme registry.

2a. If the name starts with "http", one *might* perform the operation of
retrieving information using the  URI constructed
by removing the optional fragment identifier, if any, from the name.

2b. If one does, there are good reasons for believing that the 
information
returned, in whatever language, formal or otherwise, represents the 
intent
of the owner of the name.

2c.  The owner of the URI has the right to define the meaning of the 
term.

That is a fairly naive version of the protocol.
It does not tackle time changes, mistakes, deliberate misleading, and 
so on.
Mercifully such things  have already largely been explored in uses
of the web for other sorts of information.

So where this group does a little definitive statement on
what RDF means, 2a-c are not needed.
They belong to other specs.
However, when explaining how this all fits together, in a best 
practices thing,
they are needed.
Also it might be nice to model them where the existing specs are not 
formal enough
and could be more formal.


> 3/ The portion of a document that contributes to the definition of a 
> name
>    is that portion that related to the name (including fragment 
> identifier,
>    if present).

I haven't said that and I don't se how to say it in a way which makes 
sense.
While you can say it loosely in english, and in some cases everyone 
might
agree what part of the document
is involved, I don't think there is a clear line.

((Crude example:  An ontology defining ex:Elephant defines it in terms 
of some well
known ontology wko by saying:

    ex:Elephant rdfs:isSubClassOf   wko:Mammal .
    wko:Animal  rdfs:isSubClassOf  ex:InterestingThings .

What is relevant to the definition of ex:Elephant?
If you happend to know that

wko:Mammal rdfs:isSubClassOf wko:Animal.

then you have been told by the ontology that elephants are interesting.
If you don't you would deem the information irrelevant.))


> 4/ [Optional] The above is true only for names when they are used as
>    properties, not when they are used for other purposes.

No, The above applies to anything.  There are differences when they are
used for predicates or types.

As the spec says, the predicate (or type) defines the binary (or unary) 
relationship.
Practically, also, it seems to can expect to trace the "ontological 
closure" of an
RDF graph to a finite number of documents, while entire web closure will
be like following all links from a web page.. (very distracting!  ;-)

However, when trying to solve a problem, looking some of the subjects 
and objects
is an optional step which a semantic web agent is free to do.
(cwm does it to parts of a query in --mode=so for example)

<http://www.w3.org/People/Berners-Lee/card#i>



