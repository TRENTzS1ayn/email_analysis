docno="lists-021-11143444"
received="Wed Apr  7 20:32:48 2004"
isoreceived="20040408003248"
sent="Wed, 7 Apr 2004 20:32:46 -0400"
isosent="20040408003246"
name="John Black"
email="JohnBlack@deltek.com"
subject="RE: How does RDF/OWL formalism relate to meanings?"
id="D3C8F903E7CC024C9DA6D900A60725D9057C2613@DLTKVMX1.ads.deltek.com"
charset="iso-8859-1"
inreplyto="How does RDF/OWL formalism relate to meanings?"
expires="-1"


To:"Thomas B. Passin"<tpassin@comcast.net>,<public-sw-meaning@w3c.org>


> From: Thomas B. Passin
> 
> John Black wrote:
> 
> > ... You haven't mentioned resources, URIs, or the 
> identification of the 
> > former by the later.  Is that involved?  So far, it seems that you  
> > only need the main URI to hang the owl:FunctionalProperty 
> elements on,
> > since the meaning is actually created by the addition of functional 
> > properties.  Turning the question around, how does the 
> URI/Resources 
> > formalism relate to these meanings?  It would seem that the main 
> > URI was almost irrelevant, you could substitute one for another 
> > and, due to the functional properties, the meaning would be 
> the same.
> > Is this right?  How about the notion of the strength of one of my 
> > employees.  Are there functional properties I can use to get a URI 
> > to communicate to my audience that one of my employees is really 
> > strong?  How do I make a URI stand for my notion of strength, so 
> > that I can be sure my audience gets it?
> 
> It seems to me that you are conflating several different things -
> 
> 1) Conveying something to a human audience.
> 2) The machine-understandable "meaning" of some block of 
> RDF/OWL/whatever.
> 3) The "meaning" of URIs, and
> 4) The "meaning" of a resource.

Well, yes, they do seem to have become conflated, and I am trying to 
tease them apart.
 
> These are not totally unrelated, but they are not the same, 
> either.  Pat 
> Hayes (for one) has been telling you this.
 
Tell me about it, Bijan and Peter too.

> For human consumption, there are several primary ways to convey the 
> intended "meaning" of some particular URI - remembering that a URI 
> stands in some way for a "resource", which in turn may be retrievable 
> over a network or not, and may be abstract or not.

As I was asking Dan, why do I need to remember that a URI stands 
in some way (what way?) for a "resource"?  How does that relate 
to the meaning of the URI? 

> The most straightforward way is to attach NL labels to the 
> things in the 
> RDF graph.  People read the labels and get some sense out of 
> them.  They 
> see and read the relationships and get some sense out of them.  Note 
> that this process is very different from a process of precise 
> communication between machines or autonomous agents.
> 
> Another thing that is done is to have the URI for a resource point to 
> some readable text about the intended "meaning" (or at least 
> identity) 
> of the URI.  There is some ongoing debate about how to make 
> that work, 
> bearing in mind that the URI in question may or may not intend to 
> identify the actual web page that would be retrieved by 
> dereferencing it.
> 
> Next up the ladder would be to arrange for RDF to be received upon 
> dereferencing the URI of a resource.  The RDF (possibly with 
> some OWL, 
> which of course is also RDF) would be more precise than text, 
> but this 
> may or may not help a person grasp the ideas better.
> 
> Another step is to identify a resource by identifying 
> properties - that 
> might be an inverse functional property, but not necessarily. 
>  This is 
> like saying "the man standing next to my car" - this does not 
> describe 
> an inverse functional property but may nevertheless be all that is 
> needed.  Typically, several such properties would be used together to 
> help identify the resource (which may represent a concept or 
> a term in a 
> vocabulary) in question.
> 
> Remember that, to computers, it is all bits, that is to say, symbols. 
> So the whole ball of wax - Semantic Web-wise - is pretty much 
> a bunch of 
> abstract symbols and rules for their manipulation.  That is like 
> Newton's laws, for example.  They can be studied in an abstract 
> mathematical way as symbol manipulation, or they can be 
> studied from a 
> point of view grounded in the motion of real things that have 
> mass.  The 
> only way you are going to get a computer so grounded is to have its 
> results and its inputs be somehow appropriately interact with 
> the real 
> world.  And getting that to happen is something ouside of the 
> realm of 
> abstract symbol manipulation.
> 
> So you want your "audience" to grasp your notion of "strength"?  Then 
> tell them what it is, tell them that the URI 
> http://www.example.org/ontology/strength has a lable "John Black's 
> notion of Strength".  Point them to some online text that 
> explains it. 
> Just don't expect an RDF processor to magically know to make 
> all those 
> inferences that you hope your audience would.
> 
> What about OWL? Well, with neither RDF nor with OWL can you 
> say that "no 
> man can have an arm strength of more than 500 kg", just to 
> make a crude 
> example here.  But with OWL, you can restrict - in a standard 
> way that 
> an OWL processor would honor - the allowed values of 
> properties (to some 
> degree), including the "John Black's Strength" property.  That may 
> accomplish enough of what you want to be worth doing.
> 
> I realize that this post was long.  Does it start to address some of 
> your questions?

Yes.  Thanks for taking the time to answer.  Unfortunately it answers 
them in a way that is unsatisfactory.  For my applications, I need to 
send messages from people to machines, from machines to people, and 
from machines to other machines.  And at each step, I need for the 
people or machines to get my notion of strength, for they may need to 
make decisions based on it.  All of your methods of interpreting my 
URI/RDF/OWL for the meaning involve resorting to natural language.  
And due to the machine to machine links, this just won't work.  
Perhaps you could translate each of the above methods into something 
that a machine could do.

John Black

> 
> Cheers,
> 
> Tom P
> 
> 



