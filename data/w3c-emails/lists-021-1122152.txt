docno="lists-021-1122152"
received="Sun Aug 24 20:48:00 2003"
isoreceived="20030825004800"
sent="Sun, 24 Aug 2003 19:46:26 -0500"
isosent="20030825004626"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: relational data views of XHTML via XSLT"
id="1061772386.26999.254.camel@dirk.dm93.org"
inreplyto="1059492050.5339.181.camel&#64;stratustier"
expires="-1"

To: Dominique Haza?l-Massieux<dom@w3.org>
Cc: Joseph Reagle<reagle@w3.org>,public-rdf-in-xhtml-tf@w3.org, Tim Berners-Lee<timbl@w3.org>



Another case of using XSLT to specify
the RDF-meaning of an XML format:

[[

The best of both worlds
RDF (the model) is a good thing; RDF (the syntax) is a bad thing. "But,"
I hear you cry, "I don't care about the syntax because I have good RDF
tools!" How can we allow you to use your RDF tools on Atom, and do the
right thing with reusing existing ontologies, and keep the syntax simple
for people who simply want to parse Atom feeds in isolation, as XML?

We can make the XSLT transformation normative. Here it is, the result of
a 4-hour IRC chat. We should include it in the specification, maintain
it as the format changes, and mandate that it is the One True Way to use
Atom syndicated feeds as RDF.

Is this more work for the RDF folk? Sure. Now they need an XSLT parser
as well as their favorite RDF tool. But every platform that has robust
RDF tools (a small but growing number) also has robust XSLT tools.

]]]
 -- http://www.xml.com/pub/a/2003/08/20/dive.html

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



