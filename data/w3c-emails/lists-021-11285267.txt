docno="lists-021-11285267"
received="Fri Apr  9 11:23:03 2004"
isoreceived="20040409152303"
sent="Fri, 9 Apr 2004 11:22:51 -0400"
isosent="20040409152251"
name="John Black"
email="JohnBlack@deltek.com"
subject="RE: How does RDF/OWL formalism relate to meanings?"
id="D3C8F903E7CC024C9DA6D900A60725D905393810@DLTKVMX1.ads.deltek.com"
charset="iso-8859-1"
inreplyto="How does RDF/OWL formalism relate to meanings?"
expires="-1"


To:"Thomas B. Passin"<tpassin@comcast.net>,<public-sw-meaning@w3c.org>


> From: Thomas B. Passin
> Sent: Thursday, April 08, 2004 3:58 PM
> 
> John Black wrote:
> 
> >>From: Thomas B. Passin
> > 
> > If you are saying that the Resource and my meaning are 
> equivalent, and 
> > thus that the URI stands for my meaning, this would make sense.  
> 
>  From rfc 2396 -
> 
> "A Uniform Resource Identifier (URI) is a compact string of characters
>     for identifying an abstract or physical resource."
> 
> RDF does not change this.  Now an abstract resource could be a 
> "concept", and so a URI can be used to identify a concept.  

So now I have a URI that can (does? to whom? when?) identify my 
concept.  But what I wanted was to be able to use that URI to signify 
the concept to me and to those interpreters of my communications that I 
send it to.  I checked in two different web dictionaries and there is 
no overlap in the sense of these two words.  It seems that to identify 
and to signify are different.  So are you (and the Web Architecture 
document) saying that the web allows me to identify concepts with URIs, 
but its up to me to do something else to signify with those same URIs?  
Or is it that one can always signify a concept to someone if one can 
identify that concept to someone?  Actually, now I'm confused 
again.  It seems we have just shifted the problem to identify.  I create 
a URI on my web site and decide that it will identify for me the 
concept I want to work with, say 'strength'.  Now I want to use it to 
identify my concept to the recipients I am communicating with.  How do I 
do that?  Don't I have to tell them before hand that when they get my 
new URI, they should interpret it to mean 'strength' to them.  How can my 
URI identify something to someone unless I tell them what it identifies?

> This is much 
> like a key in a hash table, and in fact that could be an 
> actual method 
> of implementing a lookup in an application.
> 

In this case, either all my receipients have the same hash table 
that I used or I have to include the hash table every time I send the 
URI.  This is the computer equivelant of telling my recipients what my 
URI identifies to me, right?  I will need to put the explaination of 
the concept into the table, so that it can be retrieved with my new 
URI-key.  How do I do this on the web?  There is no global hash table 
and if everyone has their own hash table, how can I be sure that the 
content that was put in the hash table they decide to use is the same 
as the content I put in my hash table?  I can't think of a single 
computer application where I would store some data in one hash table, 
then send out the key to it, knowing other applications were going to 
apply it to their own hash tables containing who knows what content.

> As to the "meaning" of one of those concepts, well, of 
> course, that is 
> much trickier.  You probably can never quite get your notion 
> of what the 
> concept "means" to me in all its full glory, even if you explain for 
> hours.  So you have to tailor how much of that "meaning" you need 
> someone or something to work with.

I'm tired of this throwing up of hands whenever ideas about meaning 
are brought up.  Sure, a complete semantic analysis of natural language 
in human thought may be out of reach, but we don't need all of that to 
do some simple semantic thinking.  Bijan pointed me in the direction of 
Paul Grice, who put forth a theory of meaning, so I'm try to use some of 
those ideas, butcher them though I might, because we can't get much worse 
than common sense notions of meaning.  So lets say this, I want a sign, in 
this case a URI, to use to signify a concept.  And I want to send that sign,
not the concept or the meaning or the intention, just the sign, to an 
interpreter, human or not, in such a way, that when they get the sign, 
they will act as though, in a turing test sort of way, they know, or act 
as though they know, that I intended for them to know, or act as though they 
know, that I intended that sign to signify that concept.  And yes we can 
clarify that, as you and Pat have pointed out, by noting that the particular 
turing test we have in mind may not require retrieval of every aspect of the 
concept I had in mind, but it is suffcient if it just retrieves those elements 
that are critical to the successful passing of the particular turing test we 
have in mind for it.  And we can furthermore acknowledge that, the interpreter 
may even, in fact, retrieve a concept that for non-critical aspects of our 
test, are different from those of the concept we had in mind, just so long 
as it reconstructs enough of our concept to pass our tests.

That much being said, the question is, how can I be sure that the recipients 
of my message will have available to them and use exactly those critical 
aspects of my concept unless I tell them in advance exactly which of those 
critical elements of the concept I am signifying by that sign?


> For Web (and Semantic Web) use, we may try to go farther and 
> hook up the 
> URI to some information that attempts to explain it.
> 
> So I would say that the URI stands for (really: identifies) your 
> _concept_, but the "meaning" of the concept is another question.  The 
> URI is there to try to give a globally unique name or label, and with 
> luck or by design to be more useful by pointing to more information.
> 
> > Otherwise, 
> > this doesn't work.  I want my URIs to stand for what I 
> intend to mean by 
> > them. 
> 
> Fine - you publish the URI, it stands for whatever concept you want - 
> but now you have to impart to the user (human or otherwise) 
> enough about 
> that concept so that it can be used correctly.  But people 
> always end up 
> using things differently or misunderstanding, and you can't stop that 
> altogether, no matter what you say or publish.  You can just hope to 
> keep it under control when your purposes are involved.

Thats what I'm  asking, how do I keep it under control when it 
matters?

[snip]
 
> This is where the logicians on the RDF team got clever - or 
> where they 
> came up with a way to try to dance around the issues, take 
> your pick.  I 
> mean the matter of "interpretation".  Plain folks like me 
> tend to think 
> of an RDF data set as being pretty much like a database, 
> where you know 
> what each field is for.  But in reality, every concept 
> requires a heck 
> of a lot of context to really grasp and apply.

Then what I'm asking is, how can I make certain, in critical cases, 
that my interpreters have the critical amount of context necessary 
to correctly interpret my URI unless I tell them in advance exactly 
what context they require?  I guess this means something like, how 
can I make sure they use the necessary amount of the interpretation 
I need them to use unless I tell them what that is?

John Black

> Cheers,
> 
> Tom P
> 
> 



