docno="lists-021-12372054"
received="Thu Mar 25 02:07:29 2004"
isoreceived="20040325070729"
sent="Thu, 25 Mar 2004 00:56:09 -0500"
isosent="20040325055609"
name="Bijan Parsia"
email="bparsia@isr.umd.edu"
subject="Re: Self-descriptive assertions"
id="1D112046-7E21-11D8-AEC8-0003939E0B44@isr.umd.edu"
charset="US-ASCII"
inreplyto="20040324160445.GG11976&#64;markbaker.ca"
expires="-1"


Cc:public-sw-meaning@w3.org
To: Mark Baker<distobj@acm.org>


On Mar 24, 2004, at 11:04 AM, Mark Baker wrote:

> On Wed, Mar 24, 2004 at 01:34:02AM -0500, Bijan Parsia wrote:
>> Well, if I were writing a tutorial on iCal, I'd prolly publish the
>> examples on the web with type text/calendar.
>>
>> Have I violated RDF 2445?
>
> (watch those acronyms! 8-)

Heh.

> No, you haven't violated it.

Then it doesn't mandate that the publisher asserts the contents of 
documents in that mimetype.

>> Could you point to the language that shows
>> this?
>>
>> (I'm being perfectly serious about this. Just because people 
>> *normally*
>> mean to assert, e.g., their calendar by putting it on the web, and
>> other people normally (and correctly) take them as asserting it,
>> doesn't mean that the format mandated that assertion. And might not do
>> so for very good reasons!)
>>
>>> how that would be different
>>> semantically to a text/calendar document, and how that difference 
>>> would
>>> reveal itself in the messages.
>>
>> I don't believe it does. I think it's application specific.
>
> You have a point.
>
> I'm wondering if I had the wrong idea about what folks meant by
> "assert".  I was assuming that in order to have the equivalent of a
> text/calendar document, you'd need the graph plus a statement that the
> graph was asserted.  But what I hear you and Dan saying is that the
> equivalent is just the graph,

So I would assert.

> and that assertion is something richer.

Or other.

>   I
> can buy that, and it makes me happy because it means that all
> application/rdf+xml documents are mark:asserted.

Well, I don't know what that means :)

> This would mean that reification, parseType="literal", and using

Reification and literals prevent assertions from the point of view of 
the graph (as defined by RDF; a specific application might define other 
behavior).

> text/plain or application/xml, are all mechanisms that avoid making
> mark:assertions simply by not yielding triples from some RDF/XML.

Where is it mandated that a consumer of application/rdf+xml parses it 
to triples? I don't see that that is mandated by anything. It's 
application specific. Internet explorer or mozilla rendering using 
their XML view can be doing a right thing. A Relax ng validator that 
checks application/rdf+xml documents against the relax-ng schema will 
never parse to triples but is perfectly ok.

I'll note that even when there *was* some language along the "it's 
asserted" lines in the RFC, it wasn't nearly categorical:
http://www.aaronsw.com/2002/rdf-mediatype.html#anchor4

"""The social machinery includes the form of publication: publishing 
some unqualified statements on one's World Wide Web home page would 
generally be taken as an assertion of those statements. But publishing 
the same statements with a qualification, such as "here are some common 
myths", or as part of a rebuttal, would likely not be construed as an 
assertion of the truth of those statements. Similar considerations 
apply to the publication of assertions expressed in RDF. """

*would generally be taken* (but isn't mandated by this RFC, and could 
be incorrect). Etc. (The Simialr Considerations clause is devestating, 
IMHO.)

 From http://www.w3.org/2001/sw/RDFCore/mediatype-registration:

""" The application/rdf+xml media type allows RDF
    consumers to identify RDF/XML documents so that they can be processed
    properly."""

Nothing about triples.

"""   Applications which use this media type:

          RDF is device-, platform-, and vendor-neutral and is supported
          by a range of Web user agents and authoring tools.""""

The latter certainly could be an XML editor that knew nothing about 
triples.

I feel pretty darn Q.E.D.y at this moment. I see no evidence anywhere 
in any draft of the registration that suggests anything like what I've 
read you to suggest. And I find the counterexamples legion and 
compelling. *Even if* anyone found it important to try to specify, 
right now, formal technical mechanism for connectng, oh, web retrievals 
with assertings of RDF documents (or their graphs), the media type just 
is *such* the wrong place to do it.

> Right?

Not as far as I can tell.

> So, is what is meant here by "unassert" intended to obliterate a
> mark:asserted triple so that the result is, in effect, that the triple
> was never extracted?

No. Extraction and assertion are likewise distinct, I believe.

>  If so, I might have some more self-description
> issues. 8-)
>
> BTW, does it seem that mark:assertion is roughly equivalent to what 
> some
> would call a "speech act" (assuming there's a consistent definition for
> it)?

No. But I don't have *any* sense of what mark:assertion is. At all.

The closest i get is "parses to triples". Or something. But none of 
those variants are true of application/rdf+xml (*can* parse to triples 
yes; *must* parse to triples, no; intended to be parsed to triples and 
assigned as assertions by the publisher, no; if taken as asserted, all 
parsed triples are taken to be coasserted, yes).

Speech acts are well defined. Assertion is one type of speech act. So 
is promising.

> P.S. no apology required regarding the earlier message.  I apparently
> took it in the intended manner.

Technically, no apology was required *for you*, which is good. I'd hate 
to misjudge the tone of this interaction so.



