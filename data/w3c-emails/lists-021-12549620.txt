docno="lists-021-12549620"
received="Mon Mar 29 22:56:45 2004"
isoreceived="20040330035645"
sent="Mon, 29 Mar 2004 23:01:09 -0500"
isosent="20040330040109"
name="Mark Baker"
email="distobj@acm.org"
subject="Re: Self-descriptive assertions"
id="20040330040109.GO11976@markbaker.ca"
charset="us-ascii"
inreplyto="009AD992-8114-11D8-AEC8-0003939E0B44&#64;isr.umd.edu"
expires="-1"

To: Bijan Parsia<bparsia@isr.umd.edu>
Cc:public-sw-meaning@w3.org



On Sun, Mar 28, 2004 at 06:59:51PM -0500, Bijan Parsia wrote:
> Though, I don't see *why* I, qua sender, should be so sanguine that a 
> gif of an rdf/xml document is "safe" from communicating a graph. After 
> all, OCR is a legal operation on an image.

It's critical to distinguish between what a recipient might *do* with
a message, versus what a sender intends for the message to mean.  The
TAG media type document talks about "is" vs. "processing" for this
reason, I believe; it's up to the sender to prescribe the "is", and
the recipient to prescribe the processing.  The media type is what the
Web currently uses to make this distinction, and I'm interested in
trying to do things as currently-Web-friendly as possible.  If we
determine that the drawbacks of the current approach are too great, then
we can look at trying to deploy something new.

> MIME Types, afaict, just *don't* provide the propositional attitudes 
> you think they do. And I think that's a good thing. Headers seems a 
> better place.

Hey, media types are already specified in the header! 8-)

> [snip]
> >>So we disagree.
> >>
> >>There's also an Always/Usually issue. I think that Usually is fine, 
> >>but
> >>once you say Always then you've made your system way way way too 
> >>rigid.
> >>It's very hard to capture all the different implicit and explicit
> >>agreements and understandings people come up with (sanely) and encode
> >>in their programs. Hamfisting it just makes people either ignore your
> >>restrictions or not use your system.
> >
> >I agree with your general point, though I'd opt for something a lot
> >stronger than "usually" in this case since the value of the
> >architectural properties obtained by adopting such a constraint is so
> >great.
> 
> It's one of those trade off things, yes? If you push a constraint too 
> hard, it sometimes breaks the system

If enforcing a constraint breaks anything, then it shouldn't have been
a constraint in the first place! 8-O

> > But if you believe that what we've been discussing is one of
> >those cases where out of band agreement is valuable, I couldn't
> >disagree more.
> 
> Well, I believe a few things:
> 1) the current set of specs don't mandate your constraint (in so far 
> as I understand them)

I agree that the specs could do a better job at explaining the how and
why of all this.  So without good guidance from the specs, I always
think it's best to study the architecture of the system itself.  What
you're hearing from me is the result of several years of study by yours
truly, into self-description and the Web.

> 2) that fact doesn't bother me
> 3) it's easy to impose variants of your constraint which I think 
> aren't a good idea and hard to impose a good one
> 4) there's no substantive harm in the current lack (this is sorta a 
> 2 prime)

Well, there is harm done anytime an architectural constraint
(self-description, in this case) is relaxed, even if there's a very
good reason for doing so.  In this case, for whatever the gain (which
I don't see, BTW), we're sacrificing some security, reliability,
and visibility ... just off the top of my head.

Anyhow, I think that pretty much wraps up everything I wanted to say,
at least until there's a proposal on the table for how "assertions"
will be handled.

Thanks.

Mark.
-- 
Mark Baker.   Ottawa, Ontario, CANADA.        http://www.markbaker.ca



