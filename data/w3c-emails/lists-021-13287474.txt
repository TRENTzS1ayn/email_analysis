docno="lists-021-13287474"
received="Mon Apr  5 04:39:00 2004"
isoreceived="20040405083900"
sent="Mon, 5 Apr 2004 09:35:49 +0100 (BST)"
isosent="20040405083549"
name="Libby Miller"
email="Libby.Miller@bristol.ac.uk"
subject="Re: [WRLD] Some few questions about the formal description of the   TF"
id="Pine.GSO.4.58.0404050933370.6413@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="2E3B18A2-86D9-11D8-A5DB-000A95B2AE48&#64;asemantics.com"
expires="-1"

To: David Norheim<david@asemantics.com>
Cc:"McBride, Brian"<brian.mcbride@hp.com>, Jim Hendler<hendler@cs.umd.edu>, SWBPD<public-swbp-wg@w3.org>, NANNI Marco FTRD/DMI/SOP<marco.nanni@francetelecom.com>





On Mon, 5 Apr 2004, David Norheim wrote:

>
> >
> > [...]
> >
> >> So, for me the most important thing we have to do is to
> >> convince the reader that OWL is a good language and that he
> >> migth uses it as much as possible. Obviously the
> >> demonstration will based on some comparisons betwen the
> >> languages but always, in my mind, according to the fact that
> >> OWL is the most powerful one.
> >
> > At breakfast this morning, I used a chain saw to take the top off my
> > boiled
> > egg, as it was the most powerful tool I had available.  Shame I didn't
> > have
> > one of those loud pneumatic road digger thingies :)
> >
> > Seriously, though, the point I want to make is that there is a notion
> > of
> > appropriateness of a tool to a task.  It may be that there are no
> > tasks for
> > which RDFS is more appropriate that Owl, but perhaps that is something
> > to
> > examine rather than assume.
> >
> > Brian
> >
>
> Very good point Brian. Similar arguments have proven that SOAP/WSDL is
> not the ideal tool for ALL public web services (as HTTP with simple XML
> may be most appropriate in lots of cases).
>
> We could try to approach cases from bottom up, and try to see if we
> then find limitations in the technology for the specific task that will
> make us need to take one step higher in the "semantic cake". We then be
> able to point this out rather than jump to the most complex technology
> first.
>
> I would like to see us describe a list of use cases where it is clear
> that the "least complex" technology is appropriate, rather than the
> most powerful. Gradually we keep on moving up the stack, when we reach
> more and more complex problems that would *require* OWL. We should also
> comparing them with other known technologies like RDBMS, XML and Web
> Services to show that the latter ones are inappropriate (if so). Also
> point out what you lose by not using the higher layers in SW.
>
> Use cases to start from could be as easy as
>
> 1. News summaries, e.g. RDF site summary (RSS). Clearly "simple" enough
> to only use RDF + DC (hence RSS 1.0), but regardless of what we may
> think (?), also appropriate to use XML (RSS 2.0). But what problems
> arises with use of XML instead of RDF? (e.g. Unique identification).
> What do you lose by not using OWL?
>
> 2. Personal information, e.g. vCard, FOAF... What makes RDF appropriate
> here? Why is FOAF problems simple enough for RDF(S), and when do we
> need to introduce OWL?

FOAF uses OWL -  in particular, inverseFunctionalProperty, which
we need to avoid using uris for people (instead, homepage or mbox or
mbox_sha1sum are used to indirectly identify people).

Libby

>
> ...and then move to more and more complex.
>
> - David
>
>
>



