docno="lists-021-13299733"
received="Mon Apr  5 08:20:15 2004"
isoreceived="20040405122015"
sent="Mon, 5 Apr 2004 13:19:21 +0100 "
isosent="20040405121921"
name="McBride, Brian"
email="brian.mcbride@hp.com"
subject="RE: [WRLD] Some few questions about the formal description of the   TF"
id="E864E95CB35C1C46B72FEA0626A2E808028A27CD@0-mail-br1.hpl.hp.com"
inreplyto="[WRLD] Some few questions about the formal description of the   TF"
expires="-1"


To: David Norheim<david@asemantics.com>,"McBride, Brian"<brian.mcbride@hp.com>
Cc: Jim Hendler<hendler@cs.umd.edu>, SWBPD<public-swbp-wg@w3.org>, NANNI Marco FTRD/DMI/SOP<marco.nanni@francetelecom.com>




[...]

> 
> We could try to approach cases from bottom up, and try to see if we 
> then find limitations in the technology for the specific task 
> that will 
> make us need to take one step higher in the "semantic cake". 
> We then be 
> able to point this out rather than jump to the most complex 
> technology 
> first.
> 
> I would like to see us describe a list of use cases where it is clear 
> that the "least complex" technology is appropriate, rather than the 
> most powerful. Gradually we keep on moving up the stack, when 
> we reach 
> more and more complex problems that would *require* OWL.

Uses cases sounds good.

Is 'modeling power' the only factor involved?  Does tool support matter?
Performance?  One might be careful about the sort of thing one put in the
path of high transaction rate server.  Do we have much experience about such
matters?

 We 
> should also 
> comparing them with other known technologies like RDBMS, XML and Web 
> Services to show that the latter ones are inappropriate (if so). Also 
> point out what you lose by not using the higher layers in SW.
> 
> Use cases to start from could be as easy as
> 
> 1. News summaries, e.g. RDF site summary (RSS). Clearly 
> "simple" enough 
> to only use RDF + DC (hence RSS 1.0), but regardless of what we may 
> think (?), also appropriate to use XML (RSS 2.0). But what problems 
> arises with use of XML instead of RDF? (e.g. Unique identification). 
> What do you lose by not using OWL?
> 
> 2. Personal information, e.g. vCard, FOAF... What makes RDF 
> appropriate 
> here? Why is FOAF problems simple enough for RDF(S), and when do we 
> need to introduce OWL?

We might want to flesh these out with a little more detail on what people
are using them for and how they are being used.

Brian



