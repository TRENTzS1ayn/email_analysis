docno="lists-021-13807474"
received="Wed Apr 14 17:45:37 2004"
isoreceived="20040414214537"
sent="Wed, 14 Apr 2004 17:45:33 -0400 (EDT)"
isosent="20040414214533"
name="ewallace@cme.nist.gov"
email="ewallace@cme.nist.gov"
subject="RE: [UNITS, OEP] FAQ : Constraints on data values range"
id="200404142145.RAA03849@clue.msid.cme.nist.gov"
inreplyto="[UNITS, OEP] FAQ : Constraints on data values range"
expires="-1"


To:public-swbp-wg@w3.org,benoit.doumas@free.fr



benoit.doumas@free.fr wrote:

>Natasha : That said, I don't have an alternative solution, or any solution to 
>this problem. We'll certainly have to document it somehow in the BP 
>documents (the question will come up again and again), but it almost 
>seems like the documentation would be "there is no good way to do 
>it". Am I missing something?
>
>I've looked more deeply into the question and I realized that it is a well 
>known problem. I think there is no good solution at this moment to deal with 
>constraints on values. Logic deals with entities, and everything is just 
>entity. 
>I believe you can only reason on the nature of entities (unary predicates) and 
>on the link between entities (binary predicates). The formal model is not made 
>to reason on entities themselves, because in general entities are just simple 
>set without any order or whatever.
>But this is not the case for datatypes. So It is legitimate that we want to 
>reason on datatypes, in this case some modifications have to be made to the 
>formal model. I recommend a paper "Web Ontology Reasoning with Datatype Groups" 
>form J. Pan and I. Horrocks.
>I think this is a problem that has to be explain in a FAQ.

I think that we should follow a standard pattern for addressing these kinds of 
issues (apologies if such a format has already been chosen).
0) Title the modeling pattern.
1) Document some examples for the modeling pattern(s) that is(are) being requested.
2) Identify what sort of reasoning is expected to be supported by the modeling
   pattern.
3) Describe what can be represented in current Semantic Web languages.
4) Describe what reasoning support can be expected when using those representations.
5) Document what extensions (if any) to current languages would bridge the gap
   between user needs and current language capabilities.

0-4 should go into a FAQ.  5 would go into a list of requested extensions/additions
that SWBPD would maintain.  Having such a list would be useful as an input to
planning future elements of the Semantic Web Activity.


Here are some initial ideas for the "Constraints on data values range" issue
using the pattern I suggested above:

0) Title - suggest "DataValue range restrictions"

1) Examples - Need to gather some. They should at least include an Adult classified 
by age example, and at least one other exemplifying a floating point range bounded 
with non-zero min and max values.

2) Reasoning expected: 
    classification/consistency based on values within the range; 
    classification/consistency of ranges within another range; 
    ?identification of non-empty overlaps of range?; 
    ?other min and max values derived from these ranges? - this last one is clearly 
    domain and application specific - still - a single convention for representation
    of ranges would aid interoperability.

3) Representation methods alternatives:

 a) Countable ranges of discrete values (integers) only could be represented as 
    enumerated datatypes in OWL DL or Full as described in OWL Ref[1].  Then an
    allValuesFrom restriction could reference such a datatype.
 b) User defined restricted XSD datatypes could also be referenced by an allValuesFrom     restriction - intuitive, but not supported by OWL or RDF!
 c) RangeClasses could be defined with required property values to specify the units 
    and end points of the range - but how to reference these RangeClasses in a 
    restriction?

4) Reasoning support afforded by above alternatives:
 a) Would only support a subset of the types of ranges that users would want to 
    express but should support basic reasoning.
 b) Would work for discrete and continuous ranges.  Alone, it doesn't address units.
 c) Provides a nice package for all the information related to a range but without
    any current language support to tie that to the DatatypeProperty of interest.

5) Partial support should be acheivable now with alternative (a).  Full support for 
this feature would require some change to RDF and OWL specs which would add additional
requirements for DL and Full reasoners.  (b) seems the most natural choice for this.


-Evan


[1] http://www.w3.org/TR/owl-ref/#EnumeratedDatatype



