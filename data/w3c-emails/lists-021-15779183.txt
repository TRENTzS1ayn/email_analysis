docno="lists-021-15779183"
received="Wed Mar  3 07:02:41 2004"
isoreceived="20040303120241"
sent="Wed, 3 Mar 2004 12:58:49 +0100"
isosent="20040303115849"
name="NANNI Marco FTRD/DMI/SOP"
email="marco.nanni@francetelecom.com"
subject="RE: top-3's received so far"
id="BBBE5BAA3B351C488C415EA662EA88400BB4F3@ftrdmel2.rd.francetelecom.fr"
charset="us-ascii"
inreplyto="top-3's received so far"
expires="-1"


To:"Guus Schreiber"<schreiber@cs.vu.nl>,"SWBPD"<public-swbp-wg@w3.org>


Hello, 
here are some general points from FT R&D (Alain Leger and Marco NANNI)
(sorry for the style and my bad english)

Top 3 Prority

1) Repository of tools and demos applications
Well organized for industry to rapidly find out their possible
best choice of tools
Toy vs realistic demos applications (?) 
Show it works in realistic context !!

2) Interoperability (diversity will be the rule)
Ontology mappings
UML and KR
MPEG and RDFs/OWL

3) Guidelines 
Good Practices for faster hands-on and play with the technology
Industrial grade - whenever possible -
Success stories 

Other general points :

1) We think that we have to define (if possible) some basic rules to
help architects to 
do the good choices in such a way that these rules can help them in
answering questions like :
- When SWT are a better solution than all the other existing
solutions (OO techniques 
for examples)?
- are Ontologies only a way to exchange information (even
informally) between some partners or/and do I have or can i use SWT to
build/write almost all types of programs/applications/services ?
- How/when  can i detect that SWT are the best solutions to a
problem during my specification/development process ?
- Do i need SWT only when i need some reasonning capacity ?
- is there different set of rules according to the type of my
application/problem and its architecture  (critical/secondary
applications, intranet/internet, large amount of data vs small,
real-time application, need reasoning or not) in which different
languages, modelling techniques, tools,... are proposed
- what are the brigdes/links/level of compatibility with the
other techniques ?
- Do i have to take into account  my domain aera : eCommerce,
KM, IR, eLearning, internal/external IS refoundation when i have to
choose the tools, languages, rules, guidelines to build my application ?
- can I estimate the ROI ? 
- can i use some existing specification language like UML ? in a
new way ? with new extensions ? Can I traduce a UML specification in
some "SW specification" ?

2) It could be very interesting to have the possibility to use only
(everytime) OWL full to describe the datas and to have some tools or
guidelines that can help developpers with the tuning of the produced
ontologies according to the real technicals deployment constraints (see
below). It is perhaps necessary in some cases to  traduce all or some
parts of them in RDF, RDFS, OWL Lite, OWL DL,. This can be seen as a
top-down process (to the most complete/complexe  modelization to a
simplest one). Obviously it could be intersting to have the inverse
process (bottom-up)


Marco NANNI

  



