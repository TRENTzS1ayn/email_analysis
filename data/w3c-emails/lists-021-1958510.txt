docno="lists-021-1958510"
received="Thu May 29 19:04:21 2003"
isoreceived="20030529230421"
sent="29 May 2003 18:04:33 -0500"
isosent="20030529230433"
name="Dan Connolly"
email="connolly@w3.org"
subject="relational data views of XHTML via XSLT"
id="1054249473.4101.252.camel@dirk.dm93.org"
expires="-1"

To:public-rdf-in-xhtml-tf@w3.org
Cc: Tim Berners-Lee<timbl@w3.org>



I'm pretty much happy with the "don't embed; link"
answer to RDF and HTML, but I've run into a
few applications (geoURL, Creative Commons) that
aren't going to pick up RDF on that basis.

The part of this RDF-in-XHTML problem that intrigues
me is keeping the visible info and the metadata in sync.
In Cambridge, as we started exploring the possibilities
of alternative RDF syntaxes, somebody brought up the
possibility of reaching out of the RDF into the XHTML
content via XPath or something, so you could do...

 <dc:title rdf:valueMacro="//h:title/text()"/>
 <dc:creator rdf:valueMacro="//h:address/h:a/text()"/>

or some such so that the info from the HTML <title>
element and the dublin core title property would
automatically stay in sync; likewise the <address>
element and dc:creator.

Then I realized: expecting HTML authors to think
at this level is silly; they're not going to write
XPaths to relate RDF properties to their text.
They're just going to copy-and-paste and then
edit until it looks right on the screen. If we're
lucky, they'll maybe validate when they think they're done.

What is perhaps realistic is to get the folks
deploying the applications to write some XPath
stuff... XSLT, actually.

I've done it a few times

  Site Summaries in XHTML
  http://www.w3.org/2000/08/w3c-synd/

  Dublin Core Extraction Service
  http://www.w3.org/2000/06/dc-extract/form

  HyperRDF: Using XHTML Authoring Tools with XSLT to
  produce RDF Schemas
  http://www.w3.org/2000/07/hs78/

and I went thru the mental excercise of doing it
for creative commons and geoURL, and it looks easy.

I meant to work out more of the details of how
to use the XHTML profile attrbute and links
to XSLT "data view" extractors so that you can
have more than one of them and such... and to
evaluate this solution w.r.t. various requirements...
but the end of the day has come, so I'll send this
much; if folks chime in, perhaps that will provide
motivation to work out the remaining details.

Meanwhile, in addition to this bit that's my own
view, I did a little tweaking in this page
that I try to maintain from the community perspective...
  http://esw.w3.org/topic/EmbeddingRDFinHTML


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



