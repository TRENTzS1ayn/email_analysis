docno="lists-021-2287912"
received="Mon Feb 16 12:17:12 2004"
isoreceived="20040216171712"
sent="Mon, 16 Feb 2004 18:17:09 +0100"
isosent="20040216171709"
name="Dominique Haza?l-Massieux"
email="dom@w3.org"
subject="Re: Bootstrapping GRDDL"
id="1076951829.30689.140.camel@stratustier"
charset="ISO-8859-15"
inreplyto="1076067952.1822.2455.camel&#64;stratustier"
expires="-1"

To:public-rdf-in-xhtml-tf@w3.org
Cc:connolly@w3.org,timbl@w3.org


[follow-up on
http://lists.w3.org/Archives/Public/public-rdf-in-xhtml-tf/2004Feb/0003.html, added timbl in cc as suggested by DanC]

Le ven 06/02/2004 ? 12:45, Dominique Haza?l-Massieux a ?crit :
> While working on the GRDDL demo [1], it occurred to me that GRDDL can't
> be bootstrapped as of today; indeed, the GRDDL mechanism only applies to
> namespaces of root elements, and the GRDDL namespace [2] is only used in
> the context of an attribute on a root element, or of an XHTML profile

It was brought to my attention that it is not clear what I mean by
bootstrapping GRDDL; here is a try at clarifying this.

Given a web agent knowing the GRDDL mechanism (ie, the html profile OR
the attribute on the root element OR the RDF property associated to
namespace of the root element of a document), is it possible for this
web agent to discover the semantics associated to these items (profile,
attribute, namespace of the root element)?

Another way to see it is to imagine that somebody has developed a
GRDDL-clone using the same syntactic items (a profile, an attribute, an
RDF property), but on a different namespace. Is there a way for a
GRDDL-enabled agent to *discover* that they are the same thing (either
by the bias of an owl:sameAs statement somewhere, or through managing to
extract the same RDF statements by following its nose)?

I'm claiming that it's not possible as of today, because of the
syntactical items that we've chosen:
- GRDDL doesn't follow a profile URI; I think it would be pretty
straightforward to enable this (by making it the equivalent of following
a xmlns='http://example.net/foo' on a root element for the XML case),
and this would suffice to make GRDDL bootstrappable for the XHTML case
- GRDDL only follows the namespace URI of the root element in a
document, which means that in
<foo:root data-view:transformation="foo.xsl" />
the data-view:transformation attribute (and esp. its namespace) is
completely transparent to a GRDDL processor. The only solution I see to
this would be to make GRDDL more 'aggressive' by looking up the
namespaces of all the information items in a given XML document, but as
I said in my previous message, this has probably a cost higher than the
(relatively limited) benefit of making GRDDL bootstrappable.

Hoping this helps clarify my previous message,

Dom
-- 
Dominique Haza?l-Massieux - http://www.w3.org/People/Dom/
W3C/ERCIM
mailto:dom@w3.org





