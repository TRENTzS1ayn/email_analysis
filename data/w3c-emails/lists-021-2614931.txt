docno="lists-021-2614931"
received="Wed Jan 28 19:14:01 2004"
isoreceived="20040129001401"
sent="Wed, 28 Jan 2004 10:51:58 -0600"
isosent="20040128165158"
name="Dan Connolly"
email="connolly@w3.org"
subject="RE: let's specify meaning rather than processing"
id="1075308718.8156.332.camel@dirk.dm93.org"
inreplyto="NHENIIFPBIIGLIEEKIDAKECPCAAA.bwm&#64;hplb.hpl.hp.com"
expires="-1"

To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc: Dominique Haza?l-Massieux<dom@w3.org>,public-rdf-in-xhtml-tf@w3.org



On Wed, 2004-01-28 at 09:52, Brian McBride wrote:
[...]
> > >  and I wonder about using the same machanism as browsers use to
> > > specify a stylesheet, i.e a processing instruction.
> >
> > How is a processing instruction easier than an attribute?
> 
> I'm not defending it, but it would be a uniform mechanism for all XML
> documents.  Its a shame that XHTML is treated differently.  Is the reason
> for this that adding the attribute would break the DTD?

DTD-happiness is one motivation, but a stronger one is that
the XHTML has an explicit flexibility point in head/@profile,
but an agreement around a processing instruction doesn't layer
neatly that way.

That is: everybody is currently free to stick all sorts
of processing instructions in their XHTML document, and
we have no right to retrospectively specify what they
mean. We could earn the right by consent-of-the-governed
standards-making. But exploiting URI flexibility points
is so much more neat, clean, and fun!

It's analagous to this situation:

"If the HTML author understood and agreed to these encoding conventions,
then their HTML document will conform to the syntactic conventions. In
this case, the mapping preserves the author's meaning. But an author may
have accidentally conformed to the syntactic conventions without any
knowledge of Dublin Core at all. In that case, the mapping most likely
does not preserve the author's meaning."
  -- http://www.w3.org/2004/01/rdxh/spec#intro

Substitute GRDDL for Dublin Core, and processing instructions for
<meta> elements, et voila.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



