docno="lists-021-2694699"
received="Wed Jun  9 08:39:38 2004"
isoreceived="20040609123938"
sent="Wed, 09 Jun 2004 07:40:05 -0500"
isosent="20040609124005"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: GRDDL Implementations: garner.py and demo CGI"
id="1086784805.21030.598.camel@dirk"
inreplyto="40C6EA1D.2050908&#64;virgilio.it"
expires="-1"

To:danny666@virgilio.it
Cc:"Sean B. Palmer"<sean+rixt@infomesh.net>, RDF in XHTML task force<public-rdf-in-xhtml-tf@w3.org>



On Wed, 2004-06-09 at 05:44, Danny Ayers wrote:
> Dan, Sean,
> 
> Please correct me if I'm wrong, I haven't had time to pore over the source:
> Both glean.py and garner.py discover and apply a series of XSLTs to the 
> source XHTML, reading the resultant RDF/XML into a triplestore/model. 
> The merged model is then serialised out as RDF/XML.
> 
> Can't the same result be achieved without the Redland/Pyrple dependency?

Almost...
 
> Isn't a purely syntactical merge possible - just top & tail ('deroot') 
> the individual RDF/XML results, then glue them back into a common root. 

Yes, that's how the first version of glean.py worked.

But more recent versions support "following your nose" thru
profile/namespace documents, GRDDLing those, and looking
for statements of the form
  profile dataview:profileTransformation ?XFORM.

so there's some non-trivial RDF-level processing going on. I thought
about doing that with XSLT, but then thought better of it.

> I would guess XSLT could do this whilst retaining all the required 
> namespace declarations.
> 
> Feasible?
> 
> Cheers,
> Danny.
-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



