docno="lists-021-3012827"
received="Mon May 24 09:10:41 2004"
isoreceived="20040524131041"
sent="Mon, 24 May 2004 14:10:33 +0100"
isosent="20040524131033"
name="Mark Birbeck"
email="mark.birbeck@x-port.net"
subject="RE: Stopped struggling, now merely puzzled"
id="001401c44190$7f9454a0$6f01a8c0@W100"
charset="US-ASCII"
inreplyto="40AE53D7.5050102&#64;virgilio.it"
expires="-1"

To:<danny666@virgilio.it>
Cc:<public-rdf-in-xhtml-tf@w3.org>



Hi Danny,

First, if you were struggling, I apologise if I made things obtuse! But
thanks also for persevering with it.

To your final statement:

> when all you're getting is
> 
> <> xhtml2:reference p:WinstonChurchill .
> 
> which you could say anywhere with:
> 
> <span resource="p:WinstonChurchill" />
> 
> (assuming that's legal XHTML2)
> 
> so why not add
> 
> p:WinstonChurchill rdfs:label "Prime Minister" .
> 
> ?

You are right that in terms of something like a triple store, there is
little to choose between your syntax and mine. However, the advantage of
leaving the metadata near the text that it relates to, is that a smart
browser could do something clever with it, without having to have a built in
triple store.

For example, in this illustration moving the mouse over the words "Prime
Minister" could show a picture of Winston Churchill, or a link to some text
about him. The types of things I was thinking of would be that using this
URI and some knowledge of the document user, you could show one set of text
or links to a school kid, another lot of information to a post-graduate, and
a further set to a journalist.

In short, I think the 'location' of the information is more useful for
browser-type software than to triple stores. In addition, I think authors
are more likely to add it if they can just put it 'in position'.

Having said that, it may be worth making things explicit by specifying that
a processor automatically adds the label triples that you suggest. In my
proposal I was imagining that some indexer would do this behind the scenes,
so that when a user goes to some search engine and searches for "Prime
Minister", the engine could reply ... "do you mean Winston Churchill or Tony
Blair?" The way the engine would know this is because it has processed the
text within the element, but we could make this explicit with your approach
by saying that the following triples were added:

  p:WinstonChurchill rdfs:label "Prime Minister" .
  p:TonyBlair rdfs:label "Prime Minister" .

In this example it may not actually be that useful, since somewhere else you
would probably have said:

  p:WinstonChurchill t:job j:PrimeMinister .
  j:PrimeMinister rdfs:label "Prime Minister" .

This set of information would allow the same choices I gave above to be
presented to the search user, and would actually go one better than just
storing the content of the element since the original query could also be
conducted in another language.


Finally, you are right that if all you are concerned to do is ensure that
the document shows up when searched, then you can detach the reference from
its position:

  <link rel="xhtml2:reference"
resource="http://www.people.org/WinstonChurchill" />
  .
  .
  <span>Prime Minister</span>

As I said though, I like the idea of preserving the position of the metadata
since it can be used by 'smart browsers' [a].

Regards,

Mark


[a] I won't say 'semantic web browsers' because that term is being used
already to describe monolithic Java applications that understand RDF! I'm
talking about clever XML browsers that can augment documents as the user
surfs, using information that comes from a combination of the user's local
data, their intranet or company data, perhaps some paid for or university
data, and all topped off with a smattering of publicly available data.



Mark Birbeck
CEO and CTO
x-port.net Ltd.

Download our XForms processor from
http://www.formsPlayer.com/



