docno="lists-021-4483470"
received="Tue Jul  2 23:57:27 2002"
isoreceived="20020703035727"
sent="Tue, 2 Jul 2002 20:45:33 -0700"
isosent="20020703034533"
name="Rob McCool"
email="robm@robm.com"
subject="Re: TAP software"
id="20020702204533.A31068@flapjack.stanford.edu"
charset="us-ascii"
inreplyto="Pine.LNX.4.30.0207022217560.26478-100000&#64;tux.w3.org"
expires="-1"

To: Dan Brickley<danbri@w3.org>
Cc:public-rdf-tap@w3.org



> I didn't see mention of the TAP KB itself. I'm running a copy on my dev't
> box (http://rdfweb.org/2002/tap/) and it was pretty easy to get running,
> but wasn't at the time really packaged up. Is this part of the plan?

Yes, that's more on Guha's side of the fence though. There's a new download
script, which fixes a few of the bugs in the old one, at

http://tap.stanford.edu/cgi-bin/ng/download.cgi

If people can try it out, that'd be great. If you download the entire thing,
please be gentle. The entire KB is very large. The bugs reported in the old
one were periodically unparsable RDF output, and missing nodes. The new script
fixes these problems.

There's another idea, I think, which may later remove the instance data for
Athletes and Musicians and such, and brand such a schema "TAP Schema 1.0" to
specify that it's the first version. Kind of like HTML 1 versus HTML 2, etc. 
I'll leave this ball in Guha's court, because my expertise is more on the
software side of the fence.

> That raises the issue of dealing with distributed updates, since the
> installation allows the KB to be edited. I've no intention of doing that.
> Is the idea that there'll be lots of live installations of the KB. All
> using the same namespace? 

The Apache module will mostly serve the .rdf files read-only. The idea is
that people will install the KB as an rdf file, the server will compile it,
and then if people want to add to it, they can specify another RDF file with
the same namespace URL. The Apache module then merges the two and when you
ask it for data, it seamlessly makes them look the same.

For most peoples' data, though, it is intended that they will serve their 
own data via their own namespace, as a separate .rdf file, but perhaps using 
the vocabulary defined in the TAP KB.

> I talked a bit with Guha last month about
> possibility of partitioning the TAP namespace, with core concepts in one
> part, schema/onto concepts in another, and the bulk of the KB in other
> section(s).

This would be a good idea, I think.

> It'd also be useful to specify agreed namespace URIs for tap classes and
> properties, and some conventions for using tap concept IDs as identifiers
> in RDF instance data (either as URIs or as values for the properties of
> things).

True. So far, I've been using http://tap.stanford.edu/kb/Musician, for
instance. I think this is a question of deciding where the master TAP KB
is going to live, and choosing a URL for it.

> Oh, I had some nits to pick about GetData(). Can you point me at the
> latest spec so I get it right? Basic concern was that the protocol seemed
> to depend on XML infoset ordering of the elements that compose an RDF
> description. But I can't find the reference or my notes now...

Infoset ordering of the elements? I'm not sure I understand. The latest 
spec, which requires a few more examples, is at 
http://tap.stanford.edu/protocol/

with examples at
http://tap.stanford.edu/protocol/examples.html

The toolkit itself may diverge from these examples slightly, and there is one
case that is not entirely covered by the examples. The case is, what happens 
when the response is to say the original description is ambiguous? This is not 
covered in the examples document. Also, error conditions are completely 
neglected in the protocol documentation.

I will update them soon, where soon is "hopefully some time in the next 
couple of weeks".

> Anyhow, looking fwd to the code :)

I'll keep everybody posted!



