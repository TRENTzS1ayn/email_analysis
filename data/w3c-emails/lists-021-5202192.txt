docno="lists-021-5202192"
received="Tue Jan  7 21:12:38 2003"
isoreceived="20030108021238"
sent="Tue, 7 Jan 2003 18:12:07 -0800"
isosent="20030108021207"
name="Rob McCool"
email="robm@robm.com"
subject="Re: domainOf &amp; other problems"
id="20030107181207.A4470@flapjack.stanford.edu"
charset="us-ascii"
inreplyto="002001c2b6b8$b5781a20$bd7ba8c0&#64;rhm8200"
expires="-1"

To:"Richard H. McCullough"<rhm@cdepot.net>
Cc:public-rdf-tap@w3.org



> A quick question about "instanceOf".
> In RDF. "instanceOf" (isa) subsumes "individualOF" (isu) and "subClassOf" 
> (iss). Is that also true in TAP?  I noticed you don't have "individualOf".

If I understand your terminology correctly, we use rdf:type as "individualOf"
and rdfs:subClassOf as "subClassOf". We have a function called IsAncestor
which will scan for either (that is, if you ask if Person is an ancestor
of ActorTom_Hanks, where ActorTom_Hanks is "type Actor" and Actor is 
"subClassOf Person", then it will return true). However we don't have
an operator for it. 

I think Cyc calls these "instanceOf", "subClassOf", and "allInstanceOf",
if I remember an old discussion with Guha.

TAP also has two additional flags, includeSuperClasses and includeSubClasses,
which specify that in searching for the answer, look at sub classes of
property values, or at super classes. Consider this description:

type SportsTeam
term wizards

You might imagine this working in RDF, but in TAP it doesn't because the
Washington Wizards is a BasketballTeam, which is a subClassOf SportsTeam.
So to make this work, you would need to ask:

type SportsTeam includeSubClasses=yes
term wizards

This is all off the top of my head, but it should work.



