docno="lists-021-5211021"
received="Tue Jan  7 22:06:39 2003"
isoreceived="20030108030639"
sent="Tue, 7 Jan 2003 19:05:47 -0800"
isosent="20030108030547"
name="Richard H. McCullough"
email="rhm@cdepot.net"
subject="Re: domainOf &amp; other problems"
id="000c01c2b6c2$f5525700$bd7ba8c0@rhm8200"
charset="iso-8859-1"
inreplyto="20030107181207.A4470&#64;flapjack.stanford.edu"
expires="-1"


To:"Rob McCool"<robm@robm.com>
Cc:<public-rdf-tap@w3.org>

Very interesting !!!
I had the impression that rdf:type mapped to instanceOf, instead of individualOf.

BTW, in my MKR language, isa, isu, iss refer to adjacent levels in a specific
concept hierarchy/lattice.  I use a regular expression style of notation for multi-level
operators:
    is        0 levels (identity/alias)
    isa      1 level
    isa**n  n levels
    isa*     0 or more levels
    isa+    1 or more levels

Thus 
instanceOf       is   isa
individualOf      is   isu
subClassOf     is   iss*
allinstanceOf   is   isa+
============ 
Dick McCullough 
knowledge := man do identify od existent done
knowledge haspart proposition list

  ----- Original Message ----- 
  From: Rob McCool 
  To: Richard H. McCullough 
  Cc: public-rdf-tap@w3.org 
  Sent: Tuesday, January 07, 2003 6:12 PM
  Subject: Re: domainOf & other problems


  > A quick question about "instanceOf".
  > In RDF. "instanceOf" (isa) subsumes "individualOF" (isu) and "subClassOf" 
  > (iss). Is that also true in TAP?  I noticed you don't have "individualOf".

  If I understand your terminology correctly, we use rdf:type as "individualOf"
  and rdfs:subClassOf as "subClassOf". We have a function called IsAncestor
  which will scan for either (that is, if you ask if Person is an ancestor
  of ActorTom_Hanks, where ActorTom_Hanks is "type Actor" and Actor is 
  "subClassOf Person", then it will return true). However we don't have
  an operator for it. 

  I think Cyc calls these "instanceOf", "subClassOf", and "allInstanceOf",
  if I remember an old discussion with Guha.

  TAP also has two additional flags, includeSuperClasses and includeSubClasses,
  which specify that in searching for the answer, look at sub classes of
  property values, or at super classes. Consider this description:

  type SportsTeam
  term wizards

  You might imagine this working in RDF, but in TAP it doesn't because the
  Washington Wizards is a BasketballTeam, which is a subClassOf SportsTeam.
  So to make this work, you would need to ask:

  type SportsTeam includeSubClasses=yes
  term wizards

  This is all off the top of my head, but it should work.



