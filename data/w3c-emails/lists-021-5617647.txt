docno="lists-021-5617647"
received="Fri Jun 11 17:46:40 2004"
isoreceived="20040611214640"
sent="Fri, 11 Jun 2004 14:46:36 -0700"
isosent="20040611214636"
name="Rob McCool"
email="robm@robm.com"
subject="Re: TAP classes are strings, not classes"
id="20040611144636.A5517@flapjack.stanford.edu"
charset="us-ascii"
inreplyto="20040611193959.GP19333&#64;homer.w3.org"
expires="-1"

To: Dan Brickley<danbri@w3.org>
Cc:public-rdf-tap@w3.org



> I suppose there's an element of chicken and egg here. TAP project and
> list seemed a bit quiet, so people don't play with it so much. And
> people don't encourage you so you spend your cycles on other things.

Actually, what I meant was that I don't spend my time releasing things to
people. TAP is what I spend my time on, it's just a question of whether or
not I take the time to test, polish, and support a new release.

> For the record I'm a big TAP fan. IMHO the future of RDF interestingness
> is very much at the instance-data level, rather than clever-clever
> ontologies defined using detailed formal rules. Ontologies are all about
> making sweeping generalisations about the world. I guess there's a role
> for that, but the space between trivial/crass ("People and Documents are 
> disjoint") and contentiously detailed ("all humans are Male or Female")
> isn't a rich as some think. 

I agree with that assessment, and I think that it shows in a lot of TAP's
design and focus. I agree that languages like OWL do have a role, and that
they're not as rich as some believe, and the two examples you cite are very
good ones. These two examples are excellent for performing knowledge 
validation, ensuring that a scraper didn't go awry, or when putting information
from two sites together and trying to decide what lines up to what, but as 
far as new insights that can be gained from such rules I still haven't seen
a compelling example.

> TAP appeals to me because it takes a 
> very pragmatic approach, and does just enough of the generalities to
> provide something to hang detailed instance data on. The reference by
> description approach (http://tap.stanford.edu/tap/rbd.html etc) is 
> much needed.  Both these aspects of TAP are common I think to the 
> approach we've taken with FOAF, where the approach is also about getting
> some actual data out there (in our case distributed and harvestable),
> and about finding conventions for identifying things without appeal to
> the 'everything has a URI and everyone knows it' fairytale.
> 
> So that's why I'm interested to plug TAP data and vocab into FOAF.

I'm glad you like that aspect of it, because it gets the least attention
despite its being the real core of the thing. The assertion that everything
has a URI is exactly what RBD is made to avoid, and it's important enough
to us that we designed the system around it.



