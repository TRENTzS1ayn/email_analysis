docno="lists-021-7667073"
received="Fri Nov 21 14:09:11 2003"
isoreceived="20031121190911"
sent="Fri, 21 Nov 2003 13:41:59 -0500"
isosent="20031121184159"
name="Michael Kifer"
email="kifer@cs.sunysb.edu"
subject="Re: SWSL declarative semantics"
id="20031121184200.6CE4F112F30@kiferserv.kiferhome.com"
inreplyto="bparsia&#64;isr.umd.edu"
expires="-1"

To: Bijan Parsia<bparsia@isr.umd.edu>
Cc:public-sw-meaning@w3.org




> On Friday, November 21, 2003, at 07:21  AM, Michael Kifer wrote:
> > Note that I said "pictorial conventions *and other* notations".  And, 
> > second,
> > I said that this is needed for an *informal* conceptual model. That is,
> > this is not supposed to be the formalism itself, but a way to convey 
> > the
> > intuition behind the formalism to ordinary folks (knowledge engineers).
> 
> Documentation?
> 
> I'm a little confused about what the standards for a notation for an 
> *informal* conceptual model are. For example, most semantics are given 
> in a slightly stilted, semi-formal, natural language based notation. 
> That is, "standard" set theory notation, plus some logical symbols, 
> plus a bunch of, say, for OWL, English. In the RDF semantics document, 
> we have some helpful diagrams to help make what's going on clearer. I'm 
> not clear that these specified an informal conceptual model rather than 
> just elucidate the formalized model.
> 
> Are you really proposing a...er...*standard* notation for specifying 
> *informal* conceptual models? I think I don't have any idea of what 
> this would be *except* as an inadequate notation :)

A little inadequate notation can go a long way :-)

Let me give another example. In database design, you have very simple
constructs like functional dependencies, which are logical statements with
a model-theoretic semantics, normal forms, etc. And yet nobody works (and
cannot work) with them directly. Instead, people use E-R diagrams as an
intermediate *informal* conceptual model. I would further say that out of
the top of their head very few database designers can give you a correct
definition of a functional dependency or of the notion of entailment
between them. However, their informal, vague understanding
and the informal E-R model work reasonably well in most cases.

I am not claiming that something like this is fully possible on the
Semantic Web, but I believe informal conceptual models like these are
useful.


> > I think it is a mistake to think that programmers appeal to
> > model-theoretic semantics when they specify something in a logic-based
> > formalism.
> 
> Hmmmm. Perhaps they *should* :) They appeal, typically, to their 
> understanding of the constructs which may not be model theoretic. But, 
> one hopes, they interact with software written with the model theory as 
> a guide.


Yes, one hopes :-)


> > I believe that programmers need "rules of
> > thumb" that are natural enough to enable the programmers write correct
> > programs. This is where I see the role of the informal conceptual 
> > model.
> 
> Isn't this point independent? I mean, "prefer disjoint classes to 
> nominals (in OWL)" seems to be a useful rule of thumb for writing OWL 
> ontologies (especially, given current system) but it doesn't seem to be 
> about the *meaning* of the constructs.

There can be different rules of thumb. I meant the rules of thumb that
relate formal constructs and their uses to the conceptual model, which
(one hopes :-) is (informally) in agreement with the formal semantics.


> > I don't believe that model-theoretic semantics by itself is sufficient
> > to make sure that people use the language constructs correctly.
> 
> Well, no one, I think, thinks that. But there's several ways of going 
> wrong. One way would be that we "know" what we want to express, but due 
> to our unfamiliarity with the formalism, we end up saying something 
> stronger or weaker than we clearly desired. Personally, I tend to think 
> it unlikely for anyone to have that level of detailed knowledge 
> *without* having expressed it in a suitably formal way. In which case, 
> the informal notation isn't helpful.

I am not sure what you are arguing against here.
I do believe that SW languages must be defined formally.
You may question the usefulness of the intermediate
informal model, but the above paragraph doesn't say that. You are saying
that a formal semantics is necessary, which I absolutely agree with.

> 
> > Its role is to serve as a yardstick for correct implementation of the
> > language itself and as an arbiter in hairy cases. In both uses, it is a
> > took for an expert, not for an average Joe-knowledge-engineer.
> > (Even experts use the formal semantics in their day-to-day work
> > only when they get stuck.)
> >
> > Also, not that in my message I said that such a conceptual model is an
> > objective and not a requirement. In our slang this means that it is
> > something desirable, but we aren't sure that it is achievable in full.
> > However, this is achievable to some degree. To cite a trivial case, E-R
> > diagram is such a tool (for a very simple case). Another successful 
> > example
> > is Query by Example as it is implemented in, say, MS Access.
> 
> I wonder if this is all due to having an insufficiently expressive 
> formalism in the first place?

Yes, you are right. It doesn't mean, however, that it is beyond hope to try
to capture more.


--michael  

> 
> Cheers,
> Bijan Parsia.
> 
> 



