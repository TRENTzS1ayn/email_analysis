docno="lists-021-8859354"
received="Wed Oct 29 11:48:07 2003"
isoreceived="20031029164807"
sent="Wed, 29 Oct 2003 11:47:58 -0500 (EST)"
isosent="20031029164758"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: The RDF Approach to Indicating Language-In-Use"
id="20031029.114758.30680243.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="200310291509.h9TF95Gh008238&#64;roke.hawke.org"
expires="-1"


To:sandro@w3.org
Cc:public-sw-meaning@w3.org


From: Sandro Hawke <sandro@w3.org>
Subject: The RDF Approach to Indicating Language-In-Use
Date: Wed, 29 Oct 2003 10:09:05 -0500

> One issue jumped out at me during the last meeting, illuminating
> perhaps the central difference between Bijan's view and Tim's view.
> It was when Jim Hendler asked how one knew if an RDF document was
> supposed to be understood as an OWL document.  Bijan said to use
> application-specific logic [1].

I don't think that this is the real difference between the two views, but
let's continue.

[...]

> I think Bijan is suggesting that systems need to work this out on a
> case-by-case basis.  That doesn't scale or support ad-hoc
> interoperation like we want; it's just the fallback if we can't come
> up with anything better.  I think he is advocating falling back now
> out of concern that in trying to address this problem we'll end up
> creating possibly bigger ones, such as by mandating "strong
> ontological committment".

I would instead label Bijan's approach as the ``Do what you can'' approach.
Applications that only understand RDF would process documents that looked
like RDF as RDF.  Applications that can understand OWL (DL) would process
documents that look like OWL (DL) as OWL.  More sophisticated applications
could use whatever information is available to make the determination,
including any standards that emerge.  This appears to scale very well.

This concern, by the way, is orthogonal to ``strong ontological
commitment''.  One could buy into the ``strong ontological commitment'' but
still not buy into the view that the language (including semantics of
constructs) of a document for all applications is that specified by
URI-following, and vice versa.

> I think Tim is suggesting that RDF should work just like mail and web
> content, except (1) using URIs instead of a central registry, (2)
> using every URI in the content as if it were, in essense, another
> content-type value.
> 
> To review the effect of Content-Type labeling: a hypothetical web
> client which is a combination of user, programmer, and program, on
> encountering an unknown Content-Type value can, in theory, go to the
> media type registry [5] and find pointers to the documents needed to
> implement an appropriate handler for that type.  So any sufficiently
> motivated user/programmer/program can handle any content type, more or
> less.

Well, much more less than more, in my opinion.  In fact, I would label this
approach as the ``Depend on some powerful, inexplicable magic to happen''
approach. 

> The TAG has proposed that URIs can be used instead of a central
> registry [6].  That makes perfect sense to me if we hand-wave enough
> over the persistence issues.   According to this proposal, you could
> just dereference the Content-Type URI to get the necessary
> documentation and probably links to available implementations.

Sure, but what then can an application do with this?  It is not as if the
application can understand the documentation.  It is also unlikely that the
application can utilize pointed-at implementations, unless there is some
serious upgrading of both the web mechanisms for combining implementations
AND our understanding of how to combine implementations.

> The second half of Tim's suggestion, if I understand it right, is that
> the language-in-use for an RDF graph be determined by a combination
> (conjunction/intersection, I guess) of the languages defined in all
> the specs the user/programmer/agent finds by dereferencing all the
> URIs in the graph.

Again, this depends on some magic to take a spec and turn it into a
system. 

> It makes a certain sense.  Some of it can be automated, even, as we
> did with the Dingo example.

How much of the X spec to X implementation can be automated?  I expect that
only a vanishingly small portion can right now.  I am very pessimistic
that a useful portion can be automated in my lifetime, except for some
special cases like syntax.

> I do feel like something needs to be done beyond leaving it up to
> applications and subnets.  I imagine someone using owl:Class as a
> predicate relating people to an index of how "classy" a dresser they
> are .... and it seems like they are doing something wrong!  Yes, in
> that case, they are violating a W3C CR.  But what if they misuse
> dc:author as a synonym for rdf:type?  Even if you grant that W3C has
> some authority on correct use of RDF, does Dublin Core?  Or does the
> fact they they invented, published, and host that URL (the expansion
> of dc:author) actually count for something?
> 
>       -- sandro

Not in my books, at least not as a requirement on which to base the
entirety of the meaning of the semantic web.

[...]

Peter F. Patel-Schneider



