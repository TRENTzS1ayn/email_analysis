docno="lists-021-8882243"
received="Wed Oct 29 15:09:21 2003"
isoreceived="20031029200921"
sent="Wed, 29 Oct 2003 15:09:09 -0500 (EST)"
isosent="20031029200909"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: The RDF Approach to Indicating Language-In-Use"
id="20031029.150909.36427036.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="200310291937.h9TJbpH0011508&#64;roke.hawke.org"
expires="-1"


To:sandro@w3.org
Cc:public-sw-meaning@w3.org


From: Sandro Hawke <sandro@w3.org>
Subject: Re: The RDF Approach to Indicating Language-In-Use 
Date: Wed, 29 Oct 2003 14:37:51 -0500

> 
> 
> (Lots of good points; I understand your skepticism.)
> 
> Peter:
> > I would instead label Bijan's approach as the ``Do what you can'' approach.
> > Applications that only understand RDF would process documents that looked
> > like RDF as RDF.  Applications that can understand OWL (DL) would process
> > documents that look like OWL (DL) as OWL.  More sophisticated applications
> > could use whatever information is available to make the determination,
> > including any standards that emerge.  This appears to scale very well.
> 
> How does it handle the case of evil-OWL?  Or someone using dc:author
> as a synonym for rdf:type?  Maybe those aren't very real, but how
> about this: There's been a lot of confusion over whether the range of
> dc:author is/should be Author (a person) or AuthorsName (a Literal
> string).  If the powers-that-be in Dublin Core came down on one side
> or the other of this issue, what levers would they be able to use in
> moving the world to their chosen approach?

It doesn't.  This is a separate issue.  However, my view on this separate
issue is given below.

> Let's assume for simplicity that this is for a new version of the
> vocabulary, with a new namespace.
> 
> Some options: 
> 
>    1.  Documentation on their website, not at the namespace address
>    2.  Documentation on their website, at the namespace address
>    3.  OWL on their website, not at the namespace address
>    4.  OWL on their website, at the namespace address
>    5.  Advertising, including ads in appropriate trade magazines, and
>        encouraging word-of-mouth
>    6.  Search for invalid instance data and talk to the authors
>    7.  Target the tool makers, making sure they consider the
>        wrong approach in error (essentially hard coding the ontology)
>    8.  Target the laws and contracts around the world which currently
>        specify use of Dublin Core; make sure they refer to #1/#2
>    9.  Target the laws and contracts around the world which currently
>        specify use of Dublin Core; make sure they refer to #3/#4
> 
> Which of those seem good to you?   What else could they do?
> 
>     -- sandro

My view is that if one wants to use a name in the way consistent with the
way that its coiner (or anyone else, for that matter) intended it to be
used, then one simply imports a formal document that provides (part of)
this intent.  

If the Dublin Core decides that the range of dc:author should be a literal
string, then there should be an RDF (or OWL) document that includes
something like 
dc:author rdfs:range xsd:string .
in some document, perhaps the document available at dc:  
Applications that want to abide by this intent would import the document.
If some other person or group decides that the range of dc:author should be
foaf:person (or whatever) they should create a document that so indicates,
and then they (and others) could import that document.

So if one wants to provide information about a name, one should create one
or more documents that provide that information.  Applications (or users)
can then use these documents (or not).  One should expect that applications
(or users) do not abide by the information in one's documents that cannot
be understood by the application (or user).  To make one's intent more
widely available one should write the intent down in as many ways as
possible, including RDF, OWL, and several natural languages.  Content
negotiation would then be used to determine which document is retrieved.
(Maybe content negotiation is not up to this task - if so, it needs to be
improved.)

This to me gets exactly the right behaviour.  Coiners of a name should coin
names in namespaces that they control.  Applications and other users can
then easily find the document that carries (part of) the coiners' intent,
although there is no requirement that anyone actually conform to that
intent.  Like-minded groups can use any social means (including legal or
physical means if so desired) available to share or publicize their intent,
including telepathy or direct control of applications, if they can figure
out how to make these work.  

The *only* aspects of all of this that fall into the purview of the
Semantic Web are an importing mechanism and the translation from a name to
a namespace address.

Peter F. Patel-Schneider
Bell Labs Research



