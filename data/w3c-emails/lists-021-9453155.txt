docno="lists-021-9453155"
received="Sun Sep 21 09:45:27 2003"
isoreceived="20030921134527"
sent="Sun, 21 Sep 2003 09:44:26 -0400"
isosent="20030921134426"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Introduction"
id="B72C797C-EC39-11D7-A38A-000A9580D8C0@w3.org"
charset="US-ASCII"
expires="-1"

To:public-sw-meaning@w3.org



I come to this with no formal training in computer science, linguistics 
or philosophy. I have studied a little physics, but my experience is as 
a software engineer. I have designed communicating systems for the last 
25 years.  I could count some time at IETF meetings as training. I must 
have a certain humility as I encroach on various people's fields as a 
newbie who does not get the terms right.  I really appreciate your 
understanding as I use terms in ways which are different from the 
official use in your field. Do set me straight.

That said, I have been wanting to get this thing I call the Semantic 
Web established for many years, and so I am rather averse to attempts 
by others to redefine the goal.

Specifically, the Semantic Web is built on top of Web protocols.  The 
URI identifiers used by RDF are not just strings, and looking them up 
on the Web is useful.  The vision is of a Web of logical expressions 
sharing common symbols, built out of a Web of documents which also 
includes all the multimedia stuff we have today.

When  I described this "meaning" question to the TAG, I did it by 
posing the answer I knew rather than stating the question, and while 
not optimal, I still think that that is the easiest way I can find of 
giving the scope of the question.  My interest here is that the specs 
hang together into a coherent architecture, that the Semantic Web and 
the Web architectures are consistent and clean.

Specifications and Interpretations

My position is that it s the duty of a specification of a computer 
communication language to say what a document written in that language 
means. The building of a system out of protocols is basically 
prescriptive rather than descriptive.  That's how it is designed. It 
assumes that behind the scenes we have done a lot of communication to 
effectively agree on the meanings of terms.  (That is what takes such a 
lot of time in WGs!)  This is of course quite add odds with the way 
natural language develops.   It is also not the normal model of 
communication in which we consider all possible interpretations by any 
agent as  a set of mappings between symbols and things. When one calls 
something a specification one assumes (more or less correctly) that it 
is written using terms which have, in a separate communications, been 
discussed by all participants to the effect that from the point of view 
of those using the specification, the remaining interpretations are 
limited so as to be treatable as though they were one.  This wide basis 
of discussion is used for the infrastructural, commonly shared,  
specifications in the Internet and the Web and the Semantic Web: IP, 
TCP, HTTP, RDF.  When we talk about the evolution of ontologies then it 
will be again time to analyze interpretations by different agents. When 
we look at how working groups operate, and indeed how this discussion 
works, we  much be very aware that english words are used with 
multitudes of loose meanings by different people. But the RDF spec must 
be a spec.

Legal issues

It is true that we need to be able to say what a document means if it 
is sent as an email, for example, or if it is offered as a privacy 
policy or a form of payment.  However the RDF specs should not go into 
the area which is law, arguing who is responsible if a particular 
document in is untrue.

Ontolgies

A document written using an ontology gains its meaning by virtue of the 
ontologies it uses, and the RDF specs should say that.  The RDF specs 
cannot tell you what all RDF documents mean. They must, however, 
empower the writers of ontologies to write specifications for those 
ontologies.  there needs to be a passing of the baton.

Web architecture

URIs already exist.  The Semantic Web should use them consistently with 
the Web.  However, the Semantic Web is being formalized with some 
precision, while the Web has not. So we may need to tune the way web 
architecture is described so that it fits with semantic web 
architecture.  My position is that the web is an information space 
allowing many different computer languages to coexists, and allowing 
new applications to be deployed by the introduction of new languages.  
The first application has been a global hypertext, deployed using HTML. 
Hypertext concepts include links and anchors, and symbols in HTML 
denote anchors.  This new application is global weblike KR. In KR, the 
symbols in the documents stand for all kinds of things.  In each case, 
the global symbol for something is formed by concatenating the URI of a 
document, a hash, and the local identifier for the thing.  This has the 
very useful but perhaps confusing effect that we have a space of names 
of all kinds of different things, which can now syntactically be used 
in the context of any language, and won't make sense every time, as 
some classes of thing can't be used in certain languages.  But RDF has 
no restriction on what a symbol can stand for.

It may be that on this list we have to connect the concepts of language 
from the point of view of the philosophy of communication that of the 
world of specification writing, or maybe we can do what we need without 
going there.

The subject of this discussion is RDF.  The original request was for 
the RDF spec to say what an RDF document means.  This is the duty of 
any spec.

What obstacles have we?

I know that the idea of the "meaning" of something provoked rich debate 
at all.  However, two things give me hope.  One is that Pat Hayes and I 
had a discussion on www-tag in which we established that the idea of 
everyone meaning the same thing by a URI is harmonious with the concept 
of individual agents having sets of possible interpretations of a set 
of symbols. The other is that engineers, when you ask then informally 
what bit 7 in the 3rd byte of an IP packet means will tell you without 
philosophical hesitation.

I have been working on this introduction while traveling and so it may 
be a bit disjointed.
I will resist the urge to elaborate any more here.

Tim Berners-Lee
  



