docno="lists-022-0560940"
received="Thu Mar 25 23:47:25 2004"
isoreceived="20040326044725"
sent="Wed, 24 Mar 2004 17:55:13 -0500"
isosent="20040324225513"
name="Jim Hendler"
email="hendler@cs.umd.edu"
subject="Re: [OPEN] and/or [PORT] : a practical question"
id="p06020408bc87c09213a9@[68.24.209.180]"
charset="us-ascii"
inreplyto="16481.63537.709831.909316&#64;merlin.horrocks.net"
expires="-1"


To: Ian Horrocks<horrocks@cs.man.ac.uk>, Christopher Welty<welty@us.ibm.com>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>, Bernard Vatant<bernard.vatant@mondeca.com>, SWBPD<public-swbp-wg@w3.org>,public-swbp-wg-request@w3.org



>In contrast, classes as instances are relatively rarely used (most
>forms of conceptual modelling, databases etc., seem to have managed
>perfectly well without them), and hardly ever used
>"correctly".

I would oppose any document that included any foolish words like that 
-- they're not much used in Ian's crowd, yet in the 30+ years I've 
been in AI, I'd claim I've seen them used way more than not -- in 
fact, frame systems, which have been more widely deployed in actual 
applications than have DL systems, almost all use various of these 
properties both internally (for class management) and as part of the 
representation.  If there's anyone on this list who has used OKBC, 
for example, they're probably happy OWL let's them do this as 
otherwise they'd have to redesign major interface pieces. (btw, my 
best know KR work was on the Parka system, and our most frequent 
complaint from serious users was that we didn't support classes as 
instances which forced bizarre workarounds in some cases)

Moreover, the resulting logics are much less well
>understood and there is little implementation experience.

now that, is likely true -- so a good document by our group will list 
this as one of the advantages of the separation (that the logics are 
better understood) but will leave out the former, which is not only 
just plain wrong (lots more people use Protege than any other 
ontology editor I know) but also misleading.  In fact, I would hope 
we would explain some of the advantages of
  i.  keeping things separate
  ii. keeping things seaparate but using annotations for local 
properties on classes (I cannot imagine how the wordnet group could 
do anything without this as synsets are not inheritable properties)
  iii. using meta-modeling

That would make this a useful document for our group - we should aim 
to explain, not judge!
  -JH


-- 
Professor James Hendler  http://www.cs.umd.edu/users/hendler
Director, Semantic Web and Agent Technologies  301-405-2696
Maryland Information and Network Dynamics Lab.  301-405-6707 (Fax)
Univ of Maryland, College Park, MD 20742  240-277-3388 (Cell)



