docno="lists-022-0830607"
received="Sat Mar 27 08:02:27 2004"
isoreceived="20040327130227"
sent="Sat, 27 Mar 2004 12:57:24 +0000"
isosent="20040327125724"
name="Ian Horrocks"
email="horrocks@cs.man.ac.uk"
subject="Re: [OPEN] and/or [PORT] : a practical question"
id="16485.31284.302664.635307@merlin.horrocks.net"
charset="us-ascii"
inreplyto="4064362B.6030200&#64;cs.vu.nl"
expires="-1"


To: Guus Schreiber<schreiber@cs.vu.nl>
Cc: SWBPD list<public-swbp-wg@w3.org>


On March 26, Guus Schreiber writes:
> Ian Horrocks wrote:

[snip]

> After reading this I was about to put my chai hat off and send a flame. 
> But it generated such well-founded responses that I want to thank for 
> starting this dialectic debate.

Glad to be of service.

Perhaps I could push things along a bit further by refining my initial
contention vis-a-vis meta classes.

Regarding correctness of usage, I speak as I find. I have had the
discussion on numerous occasions, and have almost always found that
suggested requirement examples are "ill conceived". Examples include
four-engined-aeroplane as a meta-class, with Boeing-747 being an
instance (this came up at one of the WebOnt f2f meetings), an instance
of the patient class who is related via an instance of the "takesDrug"
property to the class "Aspirin" (I think that this may also have come
from a WebOnt f2f meeting) and "Boeing" as a subClass of aeroplane and
an instance of Company (this came up at a talk at WWW in
Budapest). Note that these examples were carefully crafted by KR
experts to illustrate the requirement for meta-classes. In all cases
it was subsequently agreed, even by the proposers, that these are
examples of poor modelling, i.e., they didn't capture the intended
meaning of the modeller (Boeing-747 is better modelled as a subClass
of four-engined-aeroplane, the patient should take an instance of
Aspirin, and the two Boeings are just different objects).

Having said all that, I am not asserting that no convincing use case
exists. The classic example from WebOnt was Guus's
Species-Elephant-Jumbo. In these cases, however, the Meta-Class
generally seems to be serving a mainly organisational or documentary
function (I think that someone already made a similar point in this
thread), and has very little impact on the semantics of the classes
and instances in the ontology. In fact I don't know of *any* example
where the Meta-Classes use constraints to specify logical
characteristics that are inherited by the classes that that
instantiate them. It therefore seems to make sense to use a *very*
much simpler language to describe meta-classes, one that would have
little if any impact on the problem of reasoning about classes and
individuals, or perhaps even to treat meta-classes as a form of
documentation.

Ian



