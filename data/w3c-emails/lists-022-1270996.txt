docno="lists-022-1270996"
received="Tue Mar 30 22:55:10 2004"
isoreceived="20040331035510"
sent="Tue, 30 Mar 2004 19:55:21 -0800"
isosent="20040331035521"
name="Pat Hayes"
email="phayes@ihmc.us"
subject="RE: [OPEN] and/or [PORT] : a practical question"
id="p06001f2abc8fe2fbf6d6@[192.168.1.2]"
charset="us-ascii"
inreplyto="BBBE5BAA3B351C488C415EA662EA88400B7116&#64;ftrdmel2.rd.francetelecom.fr"
expires="-1"


To:"NANNI Marco FTRD/DMI/SOP"<marco.nanni@francetelecom.com>
Cc: SWBPD list<public-swbp-wg@w3.org>

>Aldo Gangemi writes
>
>  >I agree, from my experience most uses of metaclasses result from 
>insufficient
>>domain analysis. I think that insufficient
>>analysis is responsible for many other
>>simplifications, even in the use of the subClass
>>relation or in the representation of qualities in
>>  flat value spaces (cf. Guus' message).
>
>  >Low-detailed domain analysis is sometimes due to
>>  a desire of economicity,
>
>Hello,
>
>
>The Question (i prefer question than problem) of uses of metaclasses 
>in the analysis phase
>is an old one and it's not a SW specific topic.
>
>A lot of litterature has been produced during years on this topic but :
>         - the question seems to be still opened
>         - i'm pretty sure that analysts/programmers all around the 
>world will continue to use classes as instances
>         For these points i ask myself the question : why people 
>continue to uses classes as instances despite of all this 
>litterature, concrete examples, good arguments ?

Because there is absolutely no reason not to.  Mathematics is almost 
entirely based on what this thread refers to as 'metaclass' 
reasoning. If there were something incoherent or conceptually broken 
about this style of reasoning, we would all be in much deeper trouble 
than just modelling problems. Fortunately, there isn't.  Nothing - 
literally nothing - in the foundations of mathematics, the 
foundations of logic or in linguistic analysis suggests that there is 
any reason why a class should not be an instance, or that classes of 
classes are in any way less coherent a notion than classes of other 
things than classes.

There are pragmatic reasons why restricting oneself to the DL subcase 
may be of value in some circumstances, and there are work-arounds for 
avoiding talking about metaclasses in such cases.  In general, it is 
usually possible to avoid any piece of 'class talk' that you want to 
avoid, by inventing a category of things - class-surrogates - to 
stand for the classes, and a property analogous to (but different 
from) rdf:type to relate the 'instances' to the class-surrogates. 
(You can think of RDFS itself as such a workaround, in fact, as a way 
to get class talk into RDF.)

But to suggest that there is something inherently suspicious about 
classes which contain classes is ridiculous. It is now over 60 years 
since the foundations of set theory have been quite secure.

Pat Hayes

>
>                 - perhpas because it is important in their context 
>and that it is the only solution,the good one to solve their 
>problem. After all, who can pretend to know all the problems in the 
>world and for each what is the good way to solve (describe) them,
>
>                 - perhaps because, even if we can prove that it's a wrong way,

I really hope we can avoid trying to do this. At best it would be a 
waste of time, and I won't even speculate about the worst.

Pat

<snip>


-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola(850)202 4440   fax
FL 32501(850)291 0667    cell
phayes@ihmc.us       http://www.ihmc.us/users/phayes



