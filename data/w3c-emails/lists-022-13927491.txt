docno="lists-022-13927491"
received="Mon Aug 11 05:45:22 2003"
isoreceived="20030811094522"
sent="Mon, 11 Aug 2003 10:55:49 +0100"
isosent="20030811095549"
name="Johnb@screen.subtitling.com"
email="Johnb@screen.subtitling.com"
subject="RE: TT and subtitling/captioning - separating timing from style f rom content"
id="11E58A66B922D511AFB600A0244A722E9EE571@NTMAIL"
charset="iso-8859-1"
inreplyto="TT and subtitling/captioning - separating timing from style f rom content"
expires="-1"


To:glenn@xfsi.com
Cc:public-tt@w3.org

Glenn,
 
<GA>
We could dispense with spans in the following example if we supported
XPointer's range functionality (e.g., see [1]). We wouldn't want to restrict
authors from marking up each span if they wish. Note that the two mechanisms
are semantically equivalent, so this is just an optimization (i.e., to use
range).
 
<JB> Indeed retaining the span functionality may be desirable within a
subtitling/captioning context since it could be used to represent a unit of
capture (e.g. steno input or voice recogniser) - It may be useful to be able
to represent captured speech with timing in this way. IIRC David Kirby's
example was in this form - with each word individually timed. The biggest
problem with using span is that it is mixing the selection mechanism into
the content. The range mechanism is preferable to me (even solely on
aesthetic grounds) as it completely divorces the selection mechanism from
the content.

<GA>
As for whitespace, you neglect that there is whitespace between the spans
(e.g., newline), which would be normalized by formatter in conjunction with
xml:space preservation or default processing semantics. In other words, it
isn't required to include the whitespace in spans in this example.
 
<p id="p1">
  <span id="w1">Scooby</span>
  <span id="w2">dooby</span>
  <span id="w3">doo</span>,
  <span id="w4">where</span>
  <span id="w5">are</span>
  <span id="w6">you</span>?
</p>

[JB> ]  Yes - you're right - I did forget the newlines. I think for
subtitling/captioning you'd want a fairly verbatim transcription of the
content of the <p> element into the displayed region. So I'd expect:
 
  <span id="w1">Scooby</span> <span id="w2">dooby</span> <span
id="w3">doo</span>, <span id="w4">where</span> <span id="w5">are</span>
<span id="w6">you</span>?

To produce the output  
Scooby dooby doo, where are you?

and 
  <span id="w1">Scooby</span> <span id="w2">dooby</span> <span
id="w3">doo</span>, 
  <span id="w4">where</span> <span id="w5">are</span> <span
id="w6">you</span>?


To produce the output  
Scooby dooby doo,
where are you?

Which I assume it would :-) 

I think I prefer the range selector functionality over a word selector -
since it wouldn't stop there - you'd also want a line selector, a character
selector...
 
regards 
John Birch 

The views and opinions expressed are the author's own and do not necessarily

reflect the views and opinions of Screen Subtitling Systems Limited.



