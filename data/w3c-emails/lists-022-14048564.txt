docno="lists-022-14048564"
received="Tue Aug 12 06:07:26 2003"
isoreceived="20030812100726"
sent="Tue, 12 Aug 2003 11:14:04 +0100"
isosent="20030812101404"
name="Johnb@screen.subtitling.com"
email="Johnb@screen.subtitling.com"
subject="RE: TT and subtitling/captioning - separating timing from style f rom content"
id="11E58A66B922D511AFB600A0244A722E9EE577@NTMAIL"
charset="iso-8859-1"
inreplyto="TT and subtitling/captioning - separating timing from style f rom content"
expires="-1"


To:glenn@xfsi.com
Cc:public-tt@w3.org

Glenn,
 
<p id="p1">
Scooby dooby doo where are you?
we've got some work to do now
Scooby dooby doo, where are you?
we need some help from you now
come on Scooby doo, I see you
pretending we've got a slither
you're not fooling me, cause I can see
the way you shake and shiver
</p>
 
so presumably:
 
<cue select="#xpointer(p1/range(1.0, 1.31))" use="a2" dur="1"/>
<cue select="#xpointer(p1/range(1.32, 1.61))" use="a2" dur="1"/>
<cue select="#xpointer(p1/range(1.62, 1.91))" use="a2" dur="1"/>
 
and so on
 
 - would select lines from the paragraph.
 
GA: Your example doesn't select lines; rather it selects characters which
may or may not be mapped to a line. Unless you are using manual line breaks,
e.g., by using a <br/> element or a style property equivalent, then
selecting character runs in this fashion would not be guaranteed to map to a
line since you may have font substitutions, different region sizes, etc.
 
<JB>
Well it selects lines from the content - agreed that they may not map to a
line on the display region. I was assuming when I wrote this that there was
a  layout property in style a2 that caused a line break. In some cases (e.g.
snake mode) you would not want a line break. As regards font substitutions
and different region sizes - I see the above example as the explicit model -
i.e. all this is pre-calculated by the author - default overflow mode is
hidden - so superfluous content is clipped from the region (not very
desirable for subtitling / captioning!).
 
GA: What we would need is effectively a pseudo selector that operates on the
area tree produced by the layout process. The layout of the above paragraph
may produce one or more block areas, each containing one or more line areas,
each containing one or more glyph areas. 
 
Perhaps we can introduce a new axis extension that logically selects areas
produced by formatting the referenced content, e.g.,
 
id('p1')/area::line(1)                  // select first line area
id('p1')/area::line(1)/glyph(1)    // select first glyph area of first line
area
 
<JB>
I'm not really sure I understand how this could work - What in the above
statements defines the style (which specifies the font, region size etc)
that the selection mechanism uses to determine how long the line is?
Especially in the case of style animation.....
 
I think the insertion of a 'temporal line break' has to be in the style
domain - not in the content domain. If an individual selection defines too
much content for a line (assuming that is the mode of the temporal line
breaking model) - then 'normal' style attributes for overflow (marquee -
scrolling etc) would be applicable.
 
I'm trying to get my head round this - don't want to stray too far from
current concepts - but are we jumping through hoops to avoid modifying the
style model here?

regards 
John Birch 

The views and opinions expressed are the author's own and do not necessarily

reflect the views and opinions of Screen Subtitling Systems Limited. 



