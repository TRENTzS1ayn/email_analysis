docno="lists-022-1453897"
received="Wed Mar 31 04:03:50 2004"
isoreceived="20040331090350"
sent="Wed, 31 Mar 2004 08:50:41 +0000"
isosent="20040331085041"
name="Aldo Gangemi"
email="a.gangemi@istc.cnr.it"
subject="Re: [OPEN] and/or [PORT] : a practical question"
id="1080723041.406a8661253e1@imp.rm.cnr.it"
charset="ISO-8859-1"
inreplyto="[OPEN] and/or [PORT] : a practical question"
expires="-1"

To: Natasha Noy<noy@SMI.Stanford.EDU>
Cc: Ian Horrocks<horrocks@cs.man.ac.uk>, Guus Schreiber<schreiber@cs.vu.nl>, SWBPD list<public-swbp-wg@w3.org>, Nicola Guarino<guarino@loa-cnr.it>,claudio.masolo@ladseb.pd.cnr.it



Hi Natasha,

frontline: I am not for the pride stance :)))

I do not want to recommend avoidance of metaclasses in general.
I think there exist more than two positions in most group discussions.
In this case, my position is a "qualified" agreement for best practices in the 
use of metaclasses (annotations, real metaproperties, etc.), together with an 
agreement on documenting worst practices in the use of metaclasses.


At 17:56 -0800 29-03-2004, Natasha Noy wrote:
>At 7:54 PM +0100 3/27/04, Aldo Gangemi wrote:

>>My two cents ...

>[snipping eighteen cents...]

>>Bottom-line: let Natasha, Bernard, or anyone else produce cases of reasonable 
>>use of metaclasses, and let's try to find an alternative way to model them. 
>>If that way is unnecessarily complicated for the use case we are considering, 
>>then >we can consider that use an example of best annotation practice.


>Aldo, your bottom line assumes that it is _always_ better to avoid using 
>metaclasses if there is a somewhat reasonable (but perhaps less intuitive, 
>more cumbersome, but not overly so) way to represent the same thing without 
>them.

No, you are overinterpreting me. If avoiding metaclasses is less intuitive and 
cumbersome, it is not reasonable to put the burden on the shoulders of a na?ve 
modeller.
I only suggest to describe *alternative* ways. These can then be used directly 
by the modeller if they have a comparable intuitiveness, otherwise can be used 
to generate mappings with appropriate tools, or simply suggested as 
alternatives (not better alternatives), in order to stay within OWL-DL.

>I think it is a strong assumption to make and using it as an imperative for 
>best practices is even a stronger (and more dangerous) thing to do. It is 
>already clear from the discussion that there is no consensus in the community. 
>Given that, instead of trying to produce  documents that say "avoid 
>metaclasses if at all possible", we should just acknowledge the different 
approaches and >describe them. Then people can choose.

This is similar to what I suggested, I never use "imperatives" nor "avoid x if 
at all possible". But you (or Pat?) seem to imply that, since there is no 
consensus, then we cannot even *talk* or *propose* alternatives on grounds that 
are not just registering the uses of a community.


>There should  be a "presumption of innocence" of any construct that is valid 
>in the language. Sure, there are trade-offs. There are examples when using 
>metaclasses allows for a simpler and more intuitive model or for easier use in 
>application (e.g., some knowledge-acquisition applications; not all 
>applications and reasoners on the SW are going to be DL reasoners). At the 
>same time, you loose the ability to have a DL reasoner to use that 
>information. And we should document that too and show ways to do it 
>differently so that the ontology is in OWL DL, if that's what one needs.

Ah, OK, so we agree.

>As an aside, I must say that in my interactions with Protege users, many of 
>those who use OWL for modeling, do it simply because it is a standard and 
>never think or plan to invoke a classifier (or define any necessary and 
>sufficient conditions; just necessary conditions).

From my interaction with users, I should say that many interesting applications 
(actually, the most interested parties come from industrial applications) need 
classification, and necessary/sufficient conditions.
OTOH, my main point was not in order to defend OWL-DL (there are other 
champions for that), but to witness the existence of other modelling practices, 
which have certain nice properties.


>>IMO, it remains to be demonstrated that there exists a case in which a 
>>reasoner must be able to reason on classes and metaclasses in the same 
>>problem space, without alternative solutions.

>Again, this assumes that, for all reasoning services, it is always best to 
>avoid metaclasses.

Did I say that?!!! I intended that, from a scientific viewpoint, there is no 
stringent evidence that reasoning on metaclasses in the same problem space is 
*unavoidable* for the Semantic Web. 
This position has not much to do with best practices (let alone the foundations 
of mathematics!), it was just a comment from me as a researcher rather than a 
recommender or registrant of common uses (if every scientist just acts like 
that, no real progress could be envisaged ...).

>As many have pointed out already, we don't have enough experience to know what 
>kind of modeling would work on the SW. More important, we don't have enough 
>real SW applications to know what kind of reasoning will be most pervasive and 
>useful on the SW. If we try to optimize the modeling for a particular single 
>kind of reasoning (e.g., DL reasoning), we may shoot ourselves in the foot by 
>encouraging people to produce ontologies that real-world SW reasoners won't be 
>able to use productively. I am all for Pat's humility stance.

New bottom-line: dear father and mother, I vouch for my humility.
Cheers
Aldo

-- 
Aldo Gangemi
Research Scientist
Laboratory for Applied Ontology
ISTC-CNR
Via Nomentana 56, Rome, Italy
+39.06.86090249

-------------------------------------------------
This mail sent through IMP: http://horde.org/imp/



