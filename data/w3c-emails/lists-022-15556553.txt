docno="lists-022-15556553"
received="Wed Feb 19 08:53:32 2003"
isoreceived="20030219135332"
sent="Wed, 19 Feb 2003 08:51:40 -0500 (EST)"
isosent="20030219135140"
name="Joe Clark"
email="joeclark@joeclark.org"
subject="Re: Why use time as a unit of measurement? (was: Proposal 0.0)"
id="Pine.BSO.4.40.0302190845470.24809-100000@ns1.seeto.com"
charset="US-ASCII"
inreplyto="20030219134544.09BED111C8C&#64;ns1.seeto.com"
expires="-1"

To: Timed-Text<public-tt@w3.org>



> This might occur to remove a sex scene for example. But the start timecode
> is still 10.00
> and the last is still 11.30. There is a discontinuity in the middle.
>
> Now the subtitle file would **not** be edited. [Editing subtitle files is
> expensive].

> When the same video program is played by a different channel - or after the
> 9.00pm watershed
> - the full [or a different amount of] content may be played. The **same**
> subtitle file still works.
> The **same** subtitle file may be re-used for all playouts that are derived
> from the original master tape.

Then:

> I guess the question I am asking is - where in SMIL 2.0 does it describe how
> you lock a
> stream to an **external** clock, that may be stopped,
> moving at a non 1s to 1s rate, or going backwards **and that may jump**.

I am not sure this is a good functional model for a timed-text
format.

Is the issue in fact not related to external clocks and jumping
across segments of a program?

Isn't it related to having the output mechanism (like encoder or
"subtitle" inserter) slavishly and repeatedly look for certain
unique timecode triggers and carry out a limited range of actions
when it finds them?

For example, the system looks for timecode 10:18:23.08 and displays
one certain caption. If that timecode never comes along because that
segment had been edited out, the caption never displays. The system
does not care. It's easy that way, as it were.

If, at a later broadcast, that timecode does appear, the caption
plays.

If, as in the case of first-run movies, the spectacularly unlikely
but still possible event of running reels out of order takes place,
the correct caption for a particular scene will still be played even
though the scene is out of order in the entire production. (Or your
system crashes on reel 3 but reboots for reel 5, which has perfect
captions.)

Is the issue, then, not a sequence of unique triggers, and not some
reference to some kind of clock as human beings understand them? In
theory, we could use Roman numerals to trigger caption display and
it would still work. Or a sequence of prime numbers. Or a set of
random numbers so long as no number was repeated and the order of
presentation were known.

Yes? No?

-- 

  Joe Clark  |  joeclark@joeclark.org
  Author, _Building Accessible Websites_
  <http://joeclark.org/access/> | <http://joeclark.org/book/>



