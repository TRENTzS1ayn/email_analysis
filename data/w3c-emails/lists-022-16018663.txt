docno="lists-022-16018663"
received="Thu Jan 30 12:42:56 2003"
isoreceived="20030130174256"
sent="Thu, 30 Jan 2003 09:42:32 -0800"
isosent="20030130174232"
name="Jason Terando"
email="jterando@rapidtext.com"
subject="[public-tt] &lt;none&gt;"
id="61F38EE08D2FD511AB270050DA8B6EAF46ACEA@mail.rapidtext.com"
charset="iso-8859-1"
expires="-1"


To:"'public-tt@w3.org'"<public-tt@w3.org>

Hello,

I'm just joining in, so excuse me for any non-sequiturs, redundant points or
simplistic questions.  For a bit of background, we develop a closed
captioning editor that we use to create closed captioning feeds, subtitling,
RealText/SMIL, SAMI and Quicktime text tracks.  Our application uses XML to
persist data, and the TT sounds like it would be a natural emigration for
our app for data storage and transmittal.

Given Mr. Adams' classifications of buffering and timing modes, it might be
worth keeping in mind that it may be useful to have a single file/stream
which would actually fall under multiple categories.  For example, many
closed-caption encoders also support the transmission of VChip/XDS data;
whereby you send a string of XDS data to the encoder, and it repeatedly
transmits that data over field 2, while closed caption data transmits
synchronized with the video media.  XDS data or ITV data may change during a
program, so just sticking this data in a "header" isn't going to work.
Maybe it's too problematic to include both types of data (with different
timing modes) in the same file.  

Some devices/applications (consumers?) are going to use formatting
characteristics that other consumers won't.  Closed captioning (at least
EIA-608) doesn't really deal with the concepts of fonts, unlike subtitling
and most "Internet media" file formats.  As well as defining an XML schema,
it might be useful to establish rules/behaviors that consumers would abide
by if they come across information in a TT file/stream that they don't
process.

I guess where this is going is should TT files include the ability to
address multiple types of consumers in a single/file stream; or would it be
better from a design, implementation and consumption standpoint to limit
each TT file/stream to a single type of consumer; or to support heterogenous
types of consumers in a single TT file/stream?







Jason Terando
Applications Development
Rapidtext, Inc.
(949) 399-9200, ext. 233

CONFIDENTIALITY NOTICE
This e-mail message is intended only for the use of the individual or entity
to which it is addressed, and may contain information that is privileged,
confidential and exempt from disclosure under applicable law.
 



