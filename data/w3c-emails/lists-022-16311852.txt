docno="lists-022-16311852"
received="Fri Jan 31 14:41:41 2003"
isoreceived="20030131194141"
sent="Fri, 31 Jan 2003 20:41:38 +0100"
isosent="20030131194138"
name="Chris Lilley"
email="chris@w3.org"
subject="Re: TT and subtitling"
id="192976371656.20030131204138@w3.org"
charset="us-ascii"
inreplyto="7249D02C4D2DFD4D80F2E040E8CAF37C01FA9A&#64;longxuyen.xfsi.com"
expires="-1"


To:public-tt@w3.org,"Glenn A. Adams"<glenn@xfsi.com>
CC:Johnb@screen.subtitling.com


On Friday, January 31, 2003, 5:00:06 PM, Glenn wrote:

John Birch wrote:
JB> In general, support for fonts in subtitling is limited. Our
JB> proprietary standard only provides for two fonts within a
JB> 'program' subtitle file. Further the actual fonts used for display
JB> are severely restricted by readability issues and in some cases
JB> regulatory issues. Fonts and WYSIWYG remain a major headache in
JB> the subtitling arena.

GAA> I would personally like to see us provide some sort of support
GAA> for downloadable fonts. I see the lack of such support to be a
GAA> barrier to internationalization as well as service for minority
GAA> communities in markets where the default fonts would otherwise
GAA> not support their needs.

Yes, I agree. Relying on platform fonts sort of limps along on the
desktop, where there are not many platforms, there is a dominant
platform, and same-name fonts are available on different platforms.
The fact that in CSS and XSL the font family is a priority list not a
single string also helps.

On mobile devices, we found, this assumption just falls flat and there
is more, not less, need for a downloadable font facility and a font
rasterizer. Similar considerations apply for the rich variety of
set-top boxes and studio equipment and acessibility helper
applications.

GAA>  On the other hand, I admit that
GAA> requiring a font rasterizer in every device would be a
GAA> significant burden for some non-trivial set of devices,

I disagree. Note that SVG Tiny, which is aimed at cell phones and now
has several implementations on that platform, requires an SVG font
rasterizer.

The basic graphical element in SVG is the path. the SVG glyph element
has the exact same attribute as the path has, with the same syntax. So
rendering SVG fonts, once there is support for the most minimal
geometric shapes, is easy. The remaining difficulty is calculating the
position of each glyph, and that is also easy since each glyph element
says what its horizontal and vertical advance widths are.

So, worrying about the weight of a font rasterizer is legitimate and
reasonable, but turns out to be less of a problem than you might have
feared. And the advantage of being able to send the specific glyphs
required is, as you say, better internationalization (and more
platform independence and better artistic control)

GAA> and, therefore, we can't mandate in all cases.

Well, you can if you pick one format as mandatory and allow others as
options; especially if that format shares a large percentage of its
parsing and rendering code with other functionality.



-- 
 Chris                            mailto:chris@w3.org



