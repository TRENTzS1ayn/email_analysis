docno="lists-022-2013269"
received="Tue Jun  8 18:03:09 2004"
isoreceived="20040608220309"
sent="Wed, 9 Jun 2004 00:00:09 +0200"
isosent="20040608220009"
name="Bernard Vatant"
email="bernard.vatant@mondeca.com"
subject="OEP] Constrained hierarchies and meta-classes"
id="GOEIKOOAMJONEFCANOKCOEJHEEAA.bernard.vatant@mondeca.com"
charset="iso-8859-1"
expires="-1"

To:"SWBPD"<public-swbp-wg@w3.org>




I have been struggling for a while to find out a generic representation of situations of
which the following one is an example. Seems close to the "Classes as Values" issue, but
quite different.

Suppose I have the three following classes and instances

Country :  France
Region  :  Alsace
City  :  Strasbourg

The instances Strasbourg, Alsace and France are bound by a partitive (administrative or
geographical) relationship

Strasbourg  partOfAlsace
Alsace  partOf France

The classes themselves are instances of a meta-class "Geographical Unit", being both Range
and Domain of another hierarchical relation like "isSubdivisionOf" (whatever, something to
make it distinct from the partOf relation at instance level)

Region subdivisionOf  Country
City   subdivisionOf  Region

It's clear that this relation is neither a subClassOf, nor a partOf relation

I have three questions about it :

1. What generic kind of relation is subdivisionOf? What are the modeling current
practices?

2. How to express it in SW languages?

3. How to express that the hierarchy defined by the partOf relation is "conformant" to, or
"inherited from" the hierarchy declared by the subdivisionOf relation, without having to
declare each specific restriction it entails, e.g:

Any City is part of some Region
Any Region is part of some Country
...

Ideas?

Bernard Vatant
Senior Consultant
Knowledge Engineering
Mondeca - www.mondeca.com
bernard.vatant@mondeca.com



