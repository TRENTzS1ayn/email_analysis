docno="lists-022-2709964"
received="Wed May  5 03:09:15 2004"
isoreceived="20040505070915"
sent="Wed, 05 May 2004 08:08:31 +0100"
isosent="20040505070831"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: [OEP] Draft of a note on n-ary relations"
id="409892EF.5070106@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="C01DAC77-9E31-11D8-BB3E-000A958B5C28&#64;smi.stanford.edu"
expires="-1"


To: Natasha Noy<noy@SMI.Stanford.EDU>
Cc: swbp<public-swbp-wg@w3.org>, Alan Rector<rector@cs.man.ac.uk>


Natasha Noy wrote:

> 
> 
> People seem to have agreed that doing a pattern on n-ary (reified)  
> relations would be a useful thing to have. Alan Rector and I actually  
> had a chance to work it out and you can see the first draft  of our  
> effort at
> http://lists.w3.org/Archives/Public/www-archive/2004May/att-0003/n- 
> aryRelations.html
> 
> It's nowhere near as complicated or as controversial (we hope) as the  
> Classes as Values one. In fact, it's rather simple, almost too simple  
> to be a pattern. 

Simple design patterns are better than complicated ones. I think this 
looks useful.

> On the other hand, it seems to be on a topic that many  
> newcomers to OWL have questions on.
> 
> As usual, please feel free to poke holes in it and all feedback is  
> welcome.
> 

Two comments:

1) I think it would be worth showing this design pattern also just with 
RDFS, and hence broadening the scope of this note to
[[
In OWL *and RDF*, a property is a binary relation: it links two 
individuals or an individual and a value. How do we represent relations 
among more than two individuals?
]]
(basically this would use global range and domain constraints to achieve 
some of the effect)

2) I winced somewhat at the use of the words "reify" and "reified"
RDF reification is, to me at least, a bit of a mess, and use of these 
words will make the RDF literate reader think of RDF reification. I 
realise that the use in this note is appropriate, and in some ways not 
actually different from RDF reification of statements. However, I think 
there is potential for confusion "What has all this got to do with 
reification?" - for me the best fix would be to use a different term in 
this note.

> Thanks in advance,
> 
> Natasha and Alan
> 

Jeremy



