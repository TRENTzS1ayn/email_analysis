docno="lists-022-2889891"
received="Thu May  6 04:08:09 2004"
isoreceived="20040506080809"
sent="Thu, 06 May 2004 09:05:26 +0100"
isosent="20040506080526"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: [OEP] Draft of a note on n-ary relations"
id="4099F1C6.9010309@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="11902D56-9EF9-11D8-881D-000A958B5C28&#64;smi.stanford.edu"
expires="-1"


To: Natasha Noy<noy@SMI.Stanford.EDU>
Cc: Alan Rector<rector@cs.man.ac.uk>, swbp<public-swbp-wg@w3.org>


Natasha Noy wrote:

>> Two comments:
>>
>> 1) I think it would be worth showing this design pattern also just 
>> with RDFS, and hence broadening the scope of this note to
>> [[
>> In OWL *and RDF*, a property is a binary relation: it links two 
>> individuals or an individual and a value. How do we represent 
>> relations among more than two individuals?
>> ]]
>> (basically this would use global range and domain constraints to 
>> achieve some of the effect)
> 
> 
> I agree that this would be useful and indeed there is nothing 
> OWL-specific here -- the problem is just the same in RDF (or in any 
> language that doesn't have n-ary relations). And the WG is concerned 
> with SW in general and not just OWL after all.
> 
> In terms of simplicity though, I would a bit concerned about having too 
> much branching: here is pattern 1, and here it is in OWl, and here is 
> the same thing in RDF, but it will look slightly differently (using 
> domain and ranges, etc.) Any idea on how to structure this so that 
> readers interested in one language or the other can get what they need 
> without filtering through too much extraneous (for them) information?
> 
> Basically, back to the issue of what a good template for this would be.
> 

I think that it would be OK to leave the current document structure as 
is, and have a further appendix with the RDF version, probably only in 
RDF/XML, since the target reader for the appendix will be happiest with 
that. In the intro, that structure could be explained:

e.g.
"Readers interested in expressing n-ary relationships with RDFS only,
(not using OWL), should see the examples in Appendix X; these correpond 
to the design patterns explained earlier (with OWL examples)."



> 
>> 2) I winced somewhat at the use of the words "reify" and "reified"
>> RDF reification is, to me at least, a bit of a mess, and use of these 
>> words will make the RDF literate reader think of RDF reification. I 
>> realise that the use in this note is appropriate, and in some ways not 
>> actually different from RDF reification of statements. However, I 
>> think there is potential for confusion "What has all this got to do 
>> with reification?" - for me the best fix would be to use a different 
>> term in this note.
> 
> 
> Yes, there is definitely a terminology clash there. Any suggestions on a 
> different term to use?
> 
Unfortunately not, I was hoping that someone form the OEP might have 
some ideas for an alternative term that is used but perhaps less widely 
than reify.

> Natasha
> 

Jeremy



