docno="lists-022-2994835"
received="Thu May  6 17:47:16 2004"
isoreceived="20040506214716"
sent="Thu, 06 May 2004 22:42:37 +0200"
isosent="20040506204237"
name="Guus Schreiber"
email="schreiber@cs.vu.nl"
subject="Re: [OEP] Draft of a note on n-ary relations"
id="409AA33D.3060503@cs.vu.nl"
charset="us-ascii"
inreplyto="409892EF.5070106&#64;hplb.hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
Cc: Natasha Noy<noy@SMI.Stanford.EDU>, swbp<public-swbp-wg@w3.org>, Alan Rector<rector@cs.man.ac.uk>


Jeremy Carroll wrote:
> 
> Natasha Noy wrote:
> 
>>
>>
>> People seem to have agreed that doing a pattern on n-ary (reified)  
>> relations would be a useful thing to have. Alan Rector and I actually  
>> had a chance to work it out and you can see the first draft  of our  
>> effort at
>> http://lists.w3.org/Archives/Public/www-archive/2004May/att-0003/n- 
>> aryRelations.html
>>
>> It's nowhere near as complicated or as controversial (we hope) as the  
>> Classes as Values one. In fact, it's rather simple, almost too simple  
>> to be a pattern. 
> 
> 
> Simple design patterns are better than complicated ones. I think this 
> looks useful.
> 
>> On the other hand, it seems to be on a topic that many  newcomers to 
>> OWL have questions on.
>>
>> As usual, please feel free to poke holes in it and all feedback is  
>> welcome.
>>
> 
> Two comments:
> 
> 1) I think it would be worth showing this design pattern also just with 
> RDFS, and hence broadening the scope of this note to
> [[
> In OWL *and RDF*, a property is a binary relation: it links two 
> individuals or an individual and a value. How do we represent relations 
> among more than two individuals?
> ]]
> (basically this would use global range and domain constraints to achieve 
> some of the effect)
> 
> 2) I winced somewhat at the use of the words "reify" and "reified"
> RDF reification is, to me at least, a bit of a mess, and use of these 
> words will make the RDF literate reader think of RDF reification. I 
> realise that the use in this note is appropriate, and in some ways not 
> actually different from RDF reification of statements. However, I think 
> there is potential for confusion "What has all this got to do with 
> reification?" - for me the best fix would be to use a different term in 
> this note.

Reification is the proper term. For example, it is also used in UML 
books to describe association classes.
I would suggest to put in a NOTE in the text to indicate that the term 
is used in the general sense and does ot refer to RDF reification.

Guus

> 
>> Thanks in advance,
>>
>> Natasha and Alan
>>
> 
> Jeremy
> 

-- 
Free University Amsterdam, Computer Science
De Boelelaan 1081a, 1081 HV Amsterdam, The Netherlands
Tel: +31 20 444 7739/7718
E-mail: schreiber@cs.vu.nl
Home page: http://www.cs.vu.nl/~guus/



