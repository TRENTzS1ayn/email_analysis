docno="lists-022-3574740"
received="Fri May 14 05:21:06 2004"
isoreceived="20040514092106"
sent="Fri, 14 May 2004 08:57:48 +0100"
isosent="20040514075748"
name="Alan Rector"
email="rector@cs.man.ac.uk"
subject="Re: Close to final draft of &quot;classes as values&quot; note"
id="40A47BFC.F719883F@cs.man.ac.uk"
charset="iso-8859-1"
inreplyto="3BF66A46-A452-11D8-93C6-000A958B5C28&#64;smi.stanford.edu"
expires="-1"


To: Natasha Noy<noy@SMI.Stanford.EDU>
Cc: swbp<public-swbp-wg@w3.org>


Natasha

Although Approach 3 is my preferred approach for many purposes, I have problems with the details of the explanation.

(There is a minor typo that the box labelled "Unidentified Mammal" should read "Unidentified Lion" and the box labelled "Unidentified Lion" should read "Unidentified African Lion".  However this is not the main point.)

owl:someValuesFrom really means "at least 1" and can include many.   What is being said formally would be better identified as "Unidentified Lions" or maybe "Unidentified Lion(s)"

There is nothing in the semantics, nor in the approach, that requires the singular.  Likewise further down in the text under "Considerations", bullet 1, "a specific lion" should read something like "one or more specific lions".

More seriously, I don't think this is approach has anything to do with "Prototypes".  There is nothing in OWL semantics - Lite, DL, or Full - that deals with prototypes in the usual sense of being a representation of the default characteristics of a thing which can be over-ridden by further knowledge - either using classic frame style inheritance with exceptions or some form of default logic.    I think raising the notion here just confuses matters.  If we want to represent prototypes or 'prototypical individuals' and have them behave as in expected ways, then we need additional semantics not available in OWL.  (This is one of the reasons for wanting to be able to combine Protege and OWL to build more expressive "knowledge resources" with OWL ontologies at their core, but that is not an issue for here.) It may be that the standards comes back to reconsider prototypes, defaults, and exceptions at some later date, but that is out of my understanding of the scope of SWBP.)

My explanation of Approach 3 bullet 2 would simply be that, in practice, any book about lions is really about  'some lions'  - even if that happens to be all lions.  I would omit all mention of "prototypes".

Regards

Alan



Natasha Noy wrote:

> You can find the next (and, hopefully, close to last iteration) of the
> "Classes as values" note at
>
> http://lists.w3.org/Archives/Public/www-archive/2004May/att-0019/
> ClassesAsValues-v3.html
>
> At this point, as we've agreed in the previous telecon, I would like to
> propose this document as an official note.
>
> Thanks to everyone for their comments and suggestions.
>
> Major changes:
>
> 1. I've added one more approach (approach 4) that approximates the
> solution by identifying the book as a  book about *some* lions. It is
> indeed an approximation, but the question has come up often enough that
> I felt it was worth at least mentioning and explaining what's different
> about such an approach. Please take a look at the considerations there,
> since this stuff is all new.
>
> 2. I've changed to real book examples, as Bernard suggested. I used
> rdfs:seeAlso to refer to the isbn site (cool resource indeed)
>
> 3. I have not used SKOS properties in approach 3 directly (avoiding the
> addition of another complexity level), but I have mentioned it (and
> also used seeAlso to point to the corresponding SKOS property). I hope
> it's a reasonable compromise.
>
> Natasha

--
Alan L Rector
Professor of Medical Informatics
Department of Computer Science
University of Manchester
Manchester M13 9PL, UK
TEL: +44-161-275-6188/6149/7183
FAX: +44-161-275-6236/6204
Room: 2.88a, Kilburn Building
email: rector@cs.man.ac.uk
web: www.cs.man.ac.uk/mig
        www.opengalen.org
        www.clinical-escience.org



