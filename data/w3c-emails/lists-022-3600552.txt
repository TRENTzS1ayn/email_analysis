docno="lists-022-3600552"
received="Fri May 14 06:18:46 2004"
isoreceived="20040514101846"
sent="Fri, 14 May 2004 11:18:05 +0100"
isosent="20040514101805"
name="McBride, Brian"
email="brian.mcbride@hp.com"
subject="RE: [OEP] Purpose of the note on &quot;classes as values&quot;. [Was: Close  to final draft of &quot;classes as values&quot; note]"
id="E864E95CB35C1C46B72FEA0626A2E808031A93C2@0-mail-br1.hpl.hp.com"
inreplyto="[OEP] Purpose of the note on &quot;classes as values&quot;. [Was: Close  to final draft of &quot;classes as values&quot; note]"
expires="-1"


To: Natasha Noy<noy@SMI.Stanford.EDU>, Bernard Vatant<bernard.vatant@mondeca.com>
Cc: swbp<public-swbp-wg@w3.org>


 

> -----Original Message-----
> From: public-swbp-wg-request@w3.org 
> [mailto:public-swbp-wg-request@w3.org] On Behalf Of Natasha Noy
> Sent: Friday, May 14, 2004 1:45 AM
> To: Bernard Vatant; Brian McBride
> Cc: swbp
> Subject: Re: [OEP] Purpose of the note on "classes as 
> values". [Was: Close to final draft of "classes as values" note]
> 
> 
> All (and Bernard and Brian in particular),
> 
> [Nothing like putting "close to final" on the subject line to catch 
> people's attention :) ]

Just so.  And I am sorry for generating noise at this stage in the process.
I expected just to take a quick look,  be impressed and move on.

> 
> I think I still failed to articulate what the goal of the "classes as 
> values" note is (or at least what I saw as the goal when I 
> was drafting 
> it).
> 
> It is NOT about how to link thesauri and ontologies in general or in 
> particular. It is NOT about how to link your new ontology to a legacy 
> vocabulary or your new vocabulary to a legacy ontology.

I may have read more than intended into the example of dc:subject.

An example based on say device independence, would avoid this, e.g.

  <IncomingRequest>
    <requestingDeviceType rdf:resource="&ex;SomeDeviceClass"/>
    ...
  </...>

There are probably better examples than this one.

> 
> What I was trying to do, was answer the question that comes 
> up all the 
> time: I am developing an ontology, and the most natural way to 
> represent what I want is to reference classes from this 
> hierarchy X in 
> instances of these other classes. The moment I do this, I am in OWL 
> Full. If I'd rather stay in OWL DL, what are my options? Indeed, this 
> question comes up in the context of annotating individuals from your 
> ontology with classes from some "legacy" hierarchy, but not 
> only there.

Ah, that makes a lot of sense of what you have done.

I think I would still prefer to see a  more neutral approach to the
underlying technology.  The title is "Using Classes as Property Values".  I
think I can see a nicely structured document chapter outlining the choices
and then showing how to cope with limitations of the expressive power of DL.

In fact I really like the kind of document you have written, I just have
some relatively minor comments on how it is expressed.


> 
> If someone who sees the difference here could try and re-write the 
> preamble so that this point is clear, I would really appreciate that 
> (seriously, we need to make the difference clear, and I don't seem to 
> be able to articulate)!

On the contrary, overall the document is clear and well written.

However, I think there is a point of principle here about the overall goal
OEP.  I would like to see it give attention to how do things in RDFS as well
as Owl.  I claim without any evidence that RDFS reasoners are faster the DL
reasoners, that there will be applications where that performance is
important, and we should give those folks guidance as well.

In fact, as I say, I see this as the kind of document you have written.
"Here are the tradeoffs for the different approaches".  I'd just like to
RDFS given first class status as well.

> 
> So, to address Brian's concerns (I'm taking his points 
> somewhat out of 
> order, but it's easier this way):
> 
> > Approach 1 is described as being in Owl Full.  I looks to 
> me like RDFS 
> > until
> > the extension to restrict the values of dc:subject is 
> introduced.  That
> > restriction doesn't seem to be about the main purpose of 
> the note, i.e.
> > about defining subject hierarchies.  I suggest it might be useful to
> > separate out the RDFS solution and that Owl FULL solution, with 
> > separate
> > examples of each.
> 
> This comment makes sense if you view the note as a description of how 
> to link thesauri with individuals in an ontology.

I think its more general than that - it makes sense also in the context of
the device independence example.

I think the issue is the one concerning how much attention to give to RDFS
in OEP.

 With the caveat 
> above, does it still stand? (It seems that whether or not it 
> is RDFS is 
> beyond the point, given the goal)
> 
> > I also note that the example seems very close to the work of the 
> > thesaurus
> > task force.  I'm a bit nervous about this overlap.
> 
> Do you still see this as overlap given the point above? And why would 
> you be nervous about that anyway?

Three different groups working in closely related areas may lead to
inconsistencies, requires coordination and suggests we are putting a lot of
our effort into the same small part of the space.  I'm not saying it's the
wrong thing to do, it just looks a little odd.

> 
> > Has it been reviewed by the DC folks?
> 
> To the best of my knowledge, no. Again, the goal here is NOT 
> to discuss 
> proper uses of dc:subject.

Yes, I understand that, but if you use dc:subject as an example, it would be
good to be sure this does not conflict with the usage intended by the dc
folks.  We don't want some bun fight because they disagree.

 I've asked this question (and the 
> trade-off 
> of using dc:subject or some local made-up property) here:
> 
> http://lists.w3.org/Archives/Public/public-swbp-wg/2004May/0026.html
> 
> There was never any reply, but I am still wondering if it's 
> worth using 
> something other than dc:subject (the natural question of "why didn't 
> you use dc:subject" notwithstanding)

We are thinking on similar lines here.

Brian


> 
> Similarly, to Bernard:
> 
> > First I would like to see more precise definition of the 
> use cases in 
> > each approach : what
> > is given (the legacy), what are the objectives of the use case, and 
> > what is to be built to
> > achieve them.
> > Basically we have two KOS : on one side an ontology, on the 
> other side 
> > a
> > classification-indexing system (a library system, to make it short).
> >
> > It's unclear in each approach if the use case is :
> >
> > #1 : Both ontology and library system are considered as 
> given in the 
> > legacy, have been
> > built and managed independently, and the problem is to map 
> them, from 
> > one side or another.
> > The use case should make it clear which is the master and 
> which is the 
> > slave.
> > #2 : The two systems are developed together in an integrated 
> > environment. This looks like
> > a "closed" use case not really in the scope of the Semantic Web 
> > deployment. Maybe we
> > should skip that one.
> > #3 : One of the system is built to be best interoperable with the 
> > other, which is given
> > (can be both ways).
> 
> Either one of them. It is true that in some of the approaches we make 
> some changes on the ontology side and in some on the vocabulary side, 
> but I really wasn't thinking in those terms. Again, the goal was 
> somewhat different. (And certainly it's not #1, since most of the 
> approaches assume that you have control over either one or the other).
> 
> Again, you may not have two different systems at all. 
> Somewhere in your 
> ontology you may have a hierarchy that you need to reference from 
> somewhere else and staying in OWL DL is your concern (or not).
> 
> Subjects are used only as an example.
> 
> I'll reply to other points in a separate email.
> 
> Natasha
> 



