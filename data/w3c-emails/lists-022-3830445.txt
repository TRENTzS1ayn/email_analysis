docno="lists-022-3830445"
received="Wed May 19 22:31:18 2004"
isoreceived="20040520023118"
sent="Wed, 19 May 2004 17:11:02 -0700"
isosent="20040520001102"
name="Natasha Noy"
email="noy@SMI.Stanford.EDU"
subject="Re: [OEP] Purpose of the note on &quot;classes as values&quot;. [Was: Close  to final draft of &quot;classes as values&quot; note]"
id="2DB0DB8C-A9F2-11D8-A8F8-000A958B5C28@smi.stanford.edu"
charset="US-ASCII"
inreplyto="E864E95CB35C1C46B72FEA0626A2E808031A93C2&#64;0-mail-br1.hpl.hp.com"
expires="-1"


Cc: Bernard Vatant<bernard.vatant@mondeca.com>, swbp<public-swbp-wg@w3.org>
To:"McBride, Brian"<brian.mcbride@hp.com>


Brian,

> Just so.  And I am sorry for generating noise at this stage in the 
> process.
> I expected just to take a quick look,  be impressed and move on.

No problem -- your feedback is very helpful.

>> It is NOT about how to link thesauri and ontologies in general or in
>> particular. It is NOT about how to link your new ontology to a legacy
>> vocabulary or your new vocabulary to a legacy ontology.
>
> I may have read more than intended into the example of dc:subject.
>
> An example based on say device independence, would avoid this, e.g.
>
>   <IncomingRequest>
>     <requestingDeviceType rdf:resource="&ex;SomeDeviceClass"/>
>     ...
>   </...>
>
> There are probably better examples than this one.

Well, I must admit that I am somewhat reluctant to change the example 
again, just because of the effort involved. And I am concerned that 
whatever example ends up in the document, someone would be unhappy with 
it anyway. So, unless there is some example that would work to 
illustrate all points that there is an overwhelming (if not unanimous) 
consensus on and there is consensus that book subjects just create too 
many other problems, I would hold off on changing the example, at least 
for the moment. We can always do that before the final publication, 
whatever "final" means.

Of course if anyone wants to do it for me, I won't object :)

> I think I would still prefer to see a  more neutral approach to the
> underlying technology.  The title is "Using Classes as Property 
> Values".  I
> think I can see a nicely structured document chapter outlining the 
> choices
> and then showing how to cope with limitations of the expressive power 
> of DL.

Hmm... isn't that what the document does (modulo RDFS -- see more on 
that below)?

> However, I think there is a point of principle here about the overall 
> goal
> OEP.  I would like to see it give attention to how do things in RDFS 
> as well
> as Owl.  I claim without any evidence that RDFS reasoners are faster 
> the DL
> reasoners, that there will be applications where that performance is
> important, and we should give those folks guidance as well.
>
> In fact, as I say, I see this as the kind of document you have written.
> "Here are the tradeoffs for the different approaches".  I'd just like 
> to
> RDFS given first class status as well.

Brian, I actually sympathize with your point very much. The WG is 
indeed "*Semantic Web* best practices" and not "*OWL* best practices, 
and we should remember that. In fact, for the second note that I am 
working on -- the one on n-ary relation -- the criticism that it 
doesn't address RDFS is well taken.

With this one however, my feeling is that anyone using RDFS just 
doesn't need this document. The question of what to do when you need to 
use classes as values just doesn't come up in RDFS -- you just use 
them. End of story. There is nothing interesting in the first approach, 
which can be directly expressed in perfectly legal and nice RDFS -- it 
just represents (what is to me, at least) the most natural way of 
expressing this. But you end up in OWL Full. So, really the only people 
who would be interested in this document are those who need to stay 
within OWL DL. So, what is there to say about RDFS and what is the 
scenario when an RDFS user would want to read such a document?

>>> Has it been reviewed by the DC folks?
>>
>> To the best of my knowledge, no. Again, the goal here is NOT
>> to discuss
>> proper uses of dc:subject.
>
> Yes, I understand that, but if you use dc:subject as an example, it 
> would be
> good to be sure this does not conflict with the usage intended by the 
> dc
> folks.  We don't want some bun fight because they disagree.

Definitely, and that's a very good point. Perhaps after the next 
version we can contact DC folks to get them to take a look. If they are 
not happy, we can always replace dc:subject simply with subject or 
something like that and put a footnote mentioning the relation to 
Dublin Core.

Natasha



