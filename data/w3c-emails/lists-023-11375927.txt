docno="lists-023-11375927"
received="Mon Sep  1 10:44:58 2003"
isoreceived="20030901144458"
sent="Mon, 1 Sep 2003 10:44:48 -0400"
isosent="20030901144448"
name="Richard M. Smith"
email="rms@computerbytesman.com"
subject="RE: NeWS as prior art?"
id="00c201c37097$9806a210$550ffea9@rms"
charset="us-ascii"
inreplyto="1062426955.27789.12.camel&#64;fatman.technolog.ca"
expires="-1"

To:<public-web-plugins@w3.org>



Sounds promising.  Did NeWS also allow external programs to take over a
part of a NeWS window and display content in it?  A simple example might
a clock program that runs on the client side.

BTW, from the press coverage of the Eolas/Microsoft trial, it appears
that Microsoft only looked for prior art in the context of Web browsers.
Not sure why they didn't also look at BBS software, X11, and NeWS.

Richard

-----Original Message-----
From: public-web-plugins-request@w3.org
[mailto:public-web-plugins-request@w3.org] On Behalf Of Gil Hauer
Sent: Monday, September 01, 2003 10:36 AM
To: public-web-plugins@w3.org
Subject: NeWS as prior art?



Well, I'm far from an expert in these matters however one technology
that I recall which may predate these claims is NeWS (Network Extensible
Window Manager) from Sun.

If I recall correctly this was essentially a postscript client that
communicated with a server and into which postscript applications were
delivered and in which they were executed.

Here's something I found at http://c2.com/cgi/wiki?copy=NeWs:

"NeWS was a window system for Unix, especially Sun workstations,
designed primarily by JamesGosling. It was like X in that it was a
network window system, with programs running on other machines able to
open windows for display on your machine. It was unlike X in that the
graphics model was DPS, and it allowed downloading PostScript code into
the window system to run locally. This helped to avoid some of the nasty
race conditions you have in X, where (for example) even the window
manager runs out-of-process; in NeWS, you could write the window manager
in PostScript and run it directly in the window system process."

The key might be it's ability to download and execute postscript code
into a running application ...

Cheers,
Gil



