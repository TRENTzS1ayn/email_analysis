docno="lists-023-1175601"
received="Mon Jan 19 12:34:07 2004"
isoreceived="20040119173407"
sent="Mon, 19 Jan 2004 17:20:05 +0000"
isosent="20040119172005"
name="Luke-Jr"
email="luke-jr@cox.net"
subject="Re: [tt-af-1-0-req] Some (late) comments on the requirements"
id="200401191720.12979.luke-jr@cox.net"
charset="iso-8859-1"
inreplyto="11E58A66B922D511AFB600A0244A722E9EE6ED&#64;NTMAIL"
expires="-1"

To:Johnb@screen.subtitling.com,bert@w3.org
Cc:public-tt@w3.org



-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Monday 19 January 2004 02:56 pm, Johnb@screen.subtitling.com wrote:
> Text content.
>
> Timing accurate to frame/field. (including synchronisation to video frames)
> Note this is not the same as duration or offset from start - because
> captioned
> video material may be discontinuous (e.g. Ad breaks)
In this case, the video file that goes with the timed text will also be 
paused. Nothing says the video/TT player cannot in reality have 3 minutes or 
so at a certain point.
Not sure, but I think that SMIL may be what you want to use for stuff like 
this.
>
> Basic colours (for text - 16 colour model is sufficient)
16 colours per dialogue may be sufficient, but overall it is unlikely to be 
enough. Usually when I subtitle something, I use different colour schemes to 
represent who is speaking. Timed text (not just subtitles) also would involve 
displaying, for example, the title of a movie or similar which could very 
well need complex effects including colour fading.
>
> Font selection (Fonts for captions are quite restricted due to resolution
> and interlace issues
CSS, at least, seems to have font classes which could fit a number of 
different fonts (times, fantasy, etc).
>
> Background colour and box styles (boxing refers to how the background fits
> around the text)
> E.g. A 'stripe' is a horizontal background across entire display, 'box' is
> background
> starting just before first character on a line and ending just after last
> character.
> Other styles are possible e.g. 'word box'. The 'leading' between lines of a
> subtitle may
> or may not be filled with background. 
> 
> Outline and shadow effects on glyphs are used, but outline is typ. a black
> border
> around a coloured(filled) glyph, and serves to accentuate the glyph against
> a varying
> video background (i.e. used when background is transparent)
There are also usages where one would only want a combination of an outline, a 
shadow, and/or a box. I often use a combination of custom outline and text 
colours to indicate who is speaking.
>
> Italics selection (e.g. italics are used to represent lyrics, other stress
> or intonation)
Same for bold, font sizes, under/over/strikeout lines.
>
> Typically underlining and blinking are NOT used.
But should be fairly simple to support, in case they were to ever be desired.
>
> Transparency is used for background. I have never seen reversed text (i.e.
> background solid
> with transparent text).
I have on occasion seen semi-transparent foregrounds and rarely (but it does 
exist) seen completely transparent foregrounds. One such example of 
semitransparent foregrounds can be seen in the openings of most (all?) of the 
opening for the .hack//LIMINALITY anime series by Bandai.
>
> Positioning can be quite complex. Captions can steal into the safe area...
> often non speech
> characters (speaker change marks '-' or music marks '#' will be positioned
> outside of the
> 'safe area', this gives more space for the caption text.
> Captions may be centred, left or right aligned, and this may vary from
> caption to caption
> often to match the speakers on-screen position.
Timed text may also be very position specific such as to overlap a visual 
area, such as might be the case for a movie subtitled in another language.
>
> Vertical text has yet more rigorous demands, but is typically produced as
> graphics that are burnt
> over video.
A complete TT format should remove any need for text to be burnt into video. 
If that is not to be the goal, the format would be better suited as only a 
captioning/subtitling format, and not timed text. Timed text is very broad 
and covers much more than just captions.
>
> Finally - although a distinction is (rightly) made concerning captions and
> subtitles, in terms of
> the system requirments for their display there is very little difference.
> Captions may use more
> features for display than subtitles, as captions carry non speech
> information as text and this
> may be rendered using colour or styles that would not normally be used for
> speech related text display.
Though not perhaps the technical definition of subtitles, they are usually 
considered to include overlaying translations of visual items making them 
much more complex than captions.
>
> > * R101 - R103
> >
> > One hopes that the TT AF is simple enough to not need modules or
> > optional parts...
Timed text is hardly simple. There are many effects that can be applied to 
text, such as fading, stretching, and dissolving. To handle any kind of 
effect, there would need to be some part of the format allowing people to 
define any new effects that might be used in the future.
>
> > * R204
> >
> > This requirement only restricts the element and attribute names of the
> > TT AF to ASCII, since R100 (use of XML) already ensured that all text
> > content can be written in ASCII. So why not say explicitly
> > that this item is about element and attribute names?
>
> I read this as meaning that any character can be represented, but by using
> only the ASCII
> characters for that representation. E.g. Cyrillic characters may be edited
> into TTAF by typing in
> a Unicode codepoint in an ASCII form.
> However - I don't read this as meaning that this method is the only form of
> representation
> for characters not in the ASCII set !
Not sure I understand this part, but I would hope it will be simple enough to 
simply use UTF-8 for everything?
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.3 (GNU/Linux)

iD8DBQFADBHJZl/BHdU+lYMRAjj2AJ0W2plLN5794YjuMn6iDl3WH1bpUACfVYK1
yPR2CDqWYbjLGXRdAIKbHgI=
=tDFh
-----END PGP SIGNATURE-----



