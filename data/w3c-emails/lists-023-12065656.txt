docno="lists-023-12065656"
received="Sat Sep  6 06:39:34 2003"
isoreceived="20030906103934"
sent="Sat, 6 Sep 2003 11:36:56 +0100"
isosent="20030906103656"
name="Neil Munro"
email="neil.munro@catalyse.net"
subject="Separate programs"
id="001001c37462$cbee1260$0101a8c0@lisbon"
charset="iso-8859-1"
expires="-1"

To:<public-web-plugins@w3.org>



What if the browser passes the link to the OS to launch a totally separate
"helper" program, BUT that program is passed the browser window coordinates
and relative position for the display area (or it works it out for itself).
The separate program would then open in OWN (borderless) window in "stay on
top" mode, overlaying the browser area set aside for the helper. This is NOT
a plugin as if you close the browser window, the helper window would remain
open.

This is like what happens when you click a "mailto:" link (it runs your
email program) or a .pdf file (it runs Acrobat). I can't believe this patent
can go wide enough to cover these, even if it needs a separate
download/install link the first time a format is used.

The key difference is simply that it runs as a borderless window set to a
specific position. This may not be possible with every OS (some insist on
minimum tools like the close/minimise buttons) but the aim is not to
"pretend" it is part of the browser window, just to present a clean layout
for the user.

In terms of the patent it says:

"... and enable interactive processing of said object within a display area
created at said first location within the portion of said first distributed
hypermedia document being displayed in said first browser-controlled
window."

which to me says it must display in the BROWSER window, which this would NOT
be doing. 

This has quite a few advantages:
- it is a separate program so allows the user to choose the helper program
they install and many people can provide different versions
- the user can opt to NOT run the helper or not even install it (for people
like me who hate inappropriate use of Flash)
- it separates responsibility for each program, reducing the risk of
crashing the browser

And some disadvantages
- the helper program is independent, so if you navigate to a new page with
the browser, the helper will stay there. Personally I wouldn't mind, I
routinely load BBC TV News etc with the browser (lauched as a separate
program) and keep it at the bottom right while I browse. The patent (if
valid) rules out inter-process communication that would allow the browser to
tell the helper what to do, but does that really matter?
- the helper has to have its own input (clicks etc.), socket (server
connection) and display handling (to avoid inter-process communications),
but that is no big deal and shared libraries for this would be possible to
keep the size down.

Neil Munro
-------------------------
Catalyse Networks Limited 



