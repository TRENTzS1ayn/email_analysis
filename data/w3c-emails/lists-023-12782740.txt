docno="lists-023-12782740"
received="Fri Sep 12 08:00:26 2003"
isoreceived="20030912120026"
sent="Fri, 12 Sep 2003 07:59:17 -0400"
isosent="20030912115917"
name="Jake Robb"
email="jakerobb@mac.com"
subject="Re: Proposal: Internet Archive (a potential patent work around?)"
id="BB872D55.E9D1%jakerobb@mac.com"
charset="US-ASCII"
inreplyto="3F61AB9E.1080409&#64;devspace.com"
expires="-1"

To: W3C Public Web Plugins List<public-web-plugins@w3.org>



Download a compressed archive of files containing executable code?  Sounds
like a JAR file to me.

I'd be very interested to see the web entirely based on a
platform-independent programming language instead of a text markup language,
but I don't think it would actually be a good approach.

-Jake


SerpentMage (Christian Gross) wrote:

> 
> Email has to be viewed in fixed width formating...
> 
> I have been thinking about this patent for a while and what seems to be
> very unique about it is that a file is downloaded and it is associated
> with an executable like MIME.  My idea is why not remove the MIME
> resolution and do everything in a different combination.  My idea is to
> make the browser dumb and run something called an Internet Archive
> automatically.
> 
> So anybody, have a read and maybe comment...  (Just an idea..)
> 
> We create something called a Internet Archive.  The Internet Archive is
> a file that acts like an file system within a file system.  The Internet
> Archive has a fixed length header, and body.  Within the header are
> references to other files of the archive.  EG it would look as follows:
>            
>                "File system"
>                         1         2         3         4         5
> [Header        ][12345678901234567890123456789012345678901234567890]
> a=1 b=17 c=39   aaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbccccccccccccc
> 
> The HTTP Client and HTTP Server are HTTP 1.1 protocol.
> 
> The HTML page contains a reference as follows
> 
> <html>
> <content ref="some_uri.ia" width="32" height="19" />
> </html>
> 
> When the client downloads the HTML page and hits the content tag the
> data is downloaded like an Image tag.  The difference is the Internet
> Archive references a compressed set of files that the HTTP client knows
> about.  This is similar to how a zip file.  To ensure a certain level of
> security the file would be signed.
> 
> What is special about the Internet Archive is that the first file in the
> archive is executable content like one would click on an icon on a
> desktop.  Consider it like issueing an URL, not specifying the file
> desired and getting the default file (eg default.html).  The client
> would download the content and then start the executable giving the
> executable a handle to the downloading(ed) archive.  There is no
> resolution of mime types or anything along those lines, it is an
> automatic execution.  Once the executable content has started and
> retrieves a handle to the Internet archive the running content would
> manipulate the archive data however it pleased.
> 
> An optimization on the client side would be to cache Internet archives
> and the content that they reference.  For example consider the following
> scenario.
> 
> File: /archive1.ia
> [Header        ][12345678901234567890123456789012345678901234567890]
> a=1 b=17 c=39   aaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbccccccccccccc
> 
> File: /archive2.ia
> [Header        ][12345678901234567890123456789012345678901234567890]
> a=1 D=17 c=39   aaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDccccccccccccc
> 
> There are two Internet Archives, which reference the files a, b, c, and
> D.  Using HTTP 1.1 the header of the Internet Archive would be
> downloaded first.  The HTTP client would inspect which files are in the
> cache and which are not.  Then using HTTP 1.1 the individual files would
> be downloaded using byte addressing.
> 
> EG Downloading both Internet Archives would be done as follows:
> 
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=1-32
> *****
> Client has downloaded the header and is inspecting what to get
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=1-17
> *****
> Client executes first file, and gives a handle to the Internet Archive,
> which is processed by the running executable
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=17-39
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=39-50
> *****
> 
> Now user browses to different Web Page
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=1-32
> *****
> Client has downloaded the header and is inspecting what to get
> *****
> Client retrieves content from cache
> *****
> Client executes first file, and gives a handle to the Internet Archive,
> which is processed by the running executable
> *****
> Http 1.1 Get /archive1.ia
> ranges-specifier = 1=17-39
> *****
> Client retrieves content from cache
> *****
> 
> The identification of the files could be considered like cookies or URL
> references.
> 
> An optimization could even to rename the Internet Archive with a new URL...
> 
> Eg  IA://archive1/identifier
> 
> Where running the URL IA://archive1 would automatically download and
> execute the "default file"
> 
> Christian Gross
> 
> 
> 
> 



