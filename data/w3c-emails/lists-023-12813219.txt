docno="lists-023-12813219"
received="Fri Sep 12 12:02:57 2003"
isoreceived="20030912160257"
sent="Fri, 12 Sep 2003 12:02:41 -0400"
isosent="20030912160241"
name="Jeffrey Altman"
email="jaltman@columbia.edu"
subject="CHIP was Re: Proposal: Internet Archive (a potential patent work  around?)"
id="3F61EE21.6060109@columbia.edu"
charset="ISO-8859-1"
inreplyto="BB873646.E9D6%jakerobb&#64;mac.com"
expires="-1"


To: W3C Public Web Plugins List<public-web-plugins@w3.org>

Back in January 1996 while working with Alfred Aho on my soon to be 
aborted PhD, I developed the Content Handler Internet Protocol (CHIP).  
The goal was to allow content providers to distribute platform 
independent documents which could be bound at run-time to different 
viewers based upon the capabilities of the platform the document was to 
be viewed on.  A CHIP Server could be a centrally available service 
belonging to an administrative organization or could be co-located on 
the content server. 

I was attempting to solve the problem of heterogenous systems plus 
ensuring that older versions of documents could be viewed in their 
native viewers as newer versions with backward compatibility or 
conversion modes are often lossy in the translation.

The CHIP worked is as follows.  The client negotiates the Platform (OS, 
Hardware Architecture, Applications, Versions) and the Document 
datatypes (MIME, file extensions, versions) with the CHIP server.  The 
server in turn distributes to the client the appropriate executables 
(viewers, interpretters, agents) and installation processes; or a 
referral to another server to be checked.  After viewing the client 
could keep the executables until the next time they were required or 
discard them. 

The reason I bring this up is that even if the necessary software to 
view the document was already installed on the client, the decision of 
which software should be used to view a given document was pushed back 
to a remote server.  The client (a browser) does not make the decision 
locally.  It simply executes what it was given.  This would seem to work 
around the Eolas patent.

Jeffrey Altman






application/x-pkcs7-signature attachment: S/MIME Cryptographic Signature




