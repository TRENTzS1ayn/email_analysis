docno="lists-023-9982266"
received="Sat Aug 30 14:24:19 2003"
isoreceived="20030830182419"
sent="Sat, 30 Aug 2003 14:22:50 -0400"
isosent="20030830182250"
name="Hector Santos"
email="winserver.support@winserver.com"
subject="Prior Art"
id="001401c36f23$b9b289d0$b2759e44@FAMILY"
charset="Windows-1252"
expires="-1"


To:<public-web-plugins@w3.org>



I'm from the old school when Patents were REAL patents.   I've been
complacent over the years, the laws have changed in recent years and I'm
just catching up with it now.   It seems to me that software patents are
just rehashed ideas from existing systems.  Nonetheless, please help here
and tell me how wrong I am, whether there is sufficient prior art or I'm in
trouble!

In regards with this particular patent 5,838,906, "Distributed hypermedia
method for automatically invoking external application providing interaction
and display of embedded objects within a hypermedia document", I want to see
how much this patent encapsulates other similar ideas already in place.
This patent was filed on October 17, 1994 and issued on November 17, 1998.

I've been in the BBS and telecommunication market since 1982,  so many ideas
of remote client/server computing have come across my plate one way or
another.

BBS software were the dominate "remote hosting" system during the 80s and
into the early 90s.

First,  around 1984,  I made "claim to fame"  writing an client/end-user
software, specially with an offline mail reading/writing system called Opus
Xpress (later renamed to Silver Xpress).   It was the third system of its
kind behind original pioneering systems such as TAPCIS used for CompuServe
and QMAIL for the PCBOARD BBS system.   Silver Xpress covered all the major
BBS software in the market, including PCBOARD, Mustang's Wildcat BBS system,
Remote Access and about 18 others in the market.

Silver Xpress like other offline mail system collected mail from host
system, compressed them, downloaded the archive to the user's machine and
allow them to read it offline in their leisure.   The system was a god-send
for the early telecomputing users of the world because it save them money by
minimizing their telephone charges.

Silver Xpress, among others, including text based hypertext ideas where
special "tags" would trick client-side operations.

This idea is the same as the patent?   Correct?   This was done in the early
80s!

Second,  as the market was moving more towards the "Graphical Environment",
new BBS ideas were emerging such as RIP which was a TAG based server driven
graphics option for TEXT BBS systems.  In RIP mode, a text based tag-line
fix was sent to the end-user using a RIP compatible terminal program.   As
you can imagine this open the door for more MOUSE based "hyper-text" ideas,
including making it more easier to present information to the user and spawn
special programs on the end-user system to perform special dedicated
operations.

Again, the idea is same as the patent.  This was done in the late 80's,
early 90s.

However, RIP never took off because of the complexity the tag language, lack
of a WYSIWYG RIP Editor for sysops and administrators, and more importantly,
it begin to compete with ever increasing popular Windows GUI based concepts
and the new system called "HTML."

As a side note, didn't IBM/Sear's Prodigy System in the late 80's have a
similar end-user application spawning system that prodigy would send to the
end-user machine?   How about the early CompuServe system?  I seem to recall
a frontend that supported such concepts for CompuServe.  I was always
against such "borderline unethical practice" of writing software that could
perform automatic load/start jobs on the user's machine.  So I always paid
extra attention to make sure that I did not fall trap in these designs and
PR problems with end users (ala Prodigy).   Silver Xpress end-user machine
activity was 100% user driven. In other words, the user must download the
program if they wanted to run an application triggered by a hypertext tag.
Although it was possible to send user's applications that was included as
part their mail archive downloaded to their PC,  it did not start anything
automatically, and even then, we didn't push it.   The idea was too
dangerous.

Moving on to 1993-1994,  a company by the name of Galacticomm with a product
called WorldGroup changed the BBS market with a Windows based client/server
system.

A major competitor was a company named Mustang Software Inc (MSI) with its
popular DOS based Wildcat! System who also began to port their system to
Windows with a client/server system called WINSERVER (Wildcat! Internet Net
Server).    The PCBOARD people also started their own Windows client/server
system but never finished it.

By this point, the offline market was going downhill with more users staying
on line to read/write their mail with the fast growing internet.  So I began
to move to other mail markets such as the Fidonet and peer-to-peer mail
distribution market and I became a major 3rd party developer and reseller
for Mustang Software.

What is relevant about WorldGroup and WINSERVER was that they shared a
common licensed technology by Murkworks Software called Virtual Sockets
which allowed for the virtualization communications of 16 bit Windows Client
sockets with 32 bit remote servers.   It allowed for Window 3.1 16 bit GUI
clients to connect to 32 bit hosting systems offering the user a "mini-ppp"
connectivity offering the internet to the user.  At the same time, it
allowed for more interactive dynamic HTML and direct GUI operations using a
remote component system.

Now, I don't know about WorldGroup's version of their GUI Frontend for the
remote server, but WINSERVER offered the Wildcat! Navigator
(http://www.winserver.com) which was 100% programmable by 3rd party
developers to add additional BITMAP and/or HTML tags hat would TRIGGER the
automation of server installed components on the end-user machine making
them ready for end-user operations.  I believe WorldGroup had a similar
technology, but I never saw their frontend to be sure.    WINSERVER offers a
$345.00 Wildcat! SDK and Navigator Developers Kit.

I know about WINSERVER because in 1998, borrowing a quote from the Gillette
guy,  I love and in believed in the product so much I brought the WINSERVER
product line from Mustang Software, Inc,

The Wildcat! Navigator (WCNAV) offers a GUI and/or a HTML frontend. It does
not use the HTML embedded tag system, but instead a windows FILE ASSOCIATION
concept:

             <a href=chat.wcn>Instant Messaging</a>
             <a href=message.wcn>Read/Write Mail</a>
             <a href=file.wcn>File library</a>
             <a href=Personal.wcn>Personal Properties</a>

etc, and maybe with 3rd party installations

             <a href=casino.wcn>Play Casino Games!</a>

The beauty of this is that if the user used a normal browser, the URL
started a server-side redirection to normal HTML operations.  If the user
was using the wcNAV, then it loaded the appropriate WCN application on the
user's machine.  If the user did not have the component on the machine, the
system would automatically ask the user if they want to download it, etc.
It was then sent, installed with an optional bitmap icon on the bar task
bar.

Sounds familiar?  This was all invented in the 1993-1994 time frame.
WINSERVER itself was in public gamma testing before its eventual release in
1996.  But I believe World Group was already in the market by about 1-2
years.   Of course, if push came to shoved it will all be researched more
thoroughly.

Anyway, is anything here related, prior art, does this patent have an effect
on me too?

I appreciate your input.

Sincerely,

Hector Santos, CTO
Santronics Software, Inc.
http://www.santronics.com
305-431-2846 Cell
305-248-3204 Office



