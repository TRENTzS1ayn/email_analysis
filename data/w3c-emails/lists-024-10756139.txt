docno="lists-024-10756139"
received="Fri May  9 23:43:11 2003"
isoreceived="20030510034311"
sent="Fri, 9 May 2003 23:43:27 -0400"
isosent="20030510034327"
name="Bijan Parsia"
email="bparsia@isr.umd.edu"
subject="Semantics and Abstract Syntax (and some general OWL Lite, CR, &amp; implementation) comments"
id="8EEB9FCA-8299-11D7-AADB-0003939E0B44@isr.umd.edu"
charset="US-ASCII"
expires="-1"

To: public comments<public-webont-comments@w3.org>



1) Somewhat editorial: I think it would be invaluable for implementors, 
and even casual readers, to have the DLs that OWL Lite and OWL DL are 
notational variants of (mostly) explicitly mentioned (they are, 
respectively, to my best current knowledge, SHIF(D) and SHION(D)).

*Especially* given the misinformation and misimpressions about OWL Lite 
(e.g., that it "leaves out" expressivity to permit lower complexity 
reasoning and implemenational simplicity, with the perhaps canonical 
example being "there's no class boolean constructors, so you don't have 
to worry about unions, etc.!"), it's really handy to be able to just 
hit the right papers.

Is there any reason why the Abstract Syntax conceals some of the 
expressivity? I mean, given that OWL Lite can express general inclusion 
axioms, what exactly does it help to have the restrictions on the left 
hand sides of the various axioms? The syntactic restrictions seem to 
only be of interest at the authoring or serialization level.

Similarly, even we have somewhat explicit intersections (from the 
text), but nothing saying "intersectionOf" in the syntax. Ok, I suspect 
this makes the mapping to triples easier, but it makes understanding 
the language from the implementation point of view much more difficult.

(Assuming I'm right about the expressivity. I'm not nearly as confident 
as I'd like to be, which, I take it, indicates a problem with the 
document. I'm certainly not the only one.)

Re: OWL Lite in general. I do worry that the "teachability" and 
"usability" of concealing expressivity will turn out to be like the 
abbreviated forms in RDF/XML: A seemingly good idea at design time; a 
major wart to most ever after. Fortunately, since OWL Lite is a 
restriction rather than an extension, and not a restriction on 
*expressive power* (i.e., you need to build a reasoner that handles 
complement, general inclusion axioms, etc. to handle owl lite, so it's 
trivial to extend it to a subset of owl dl except for general 
cardinalities and hasvalue), it's being a pain is relatively painless: 
ignoring it causes few problems.

I put this out as a caution against further second guessing. While I'm 
*afraid* it'll turn out to be merely pointless or annoying, I have no 
real evidence. People are funny.

***************
2) Completely Editorial: I would like the normative version of the 
document to be a single HTML file. I know, off hand, of no other (at 
least modern) W3C recommendation that is split up merely for 
navigational purposes. It's inconvenient, it's inconsistent even with 
the other OWL specs, and annoying, especially for offline reading.

***************
3) Given that we're already pushing the expressivity/computational 
complexity front, I would very much like to have various role 
constructors, roughly what gets into ALC* or ALCtrans, though I 
understand that transitive closure isn't addable while preserving 
decidability (though *that* would be, for me, a more attractive OWL 
Lite, i.e., something I could add transitive closure to and retain 
decidability). CardinalityQ, too. I miss it.

I would be encouraged by a Note that made it clear how to define 
subsets (and supersets) of OWL/DL that mapped into the range of DLs 
from ALC on up. I don' t think it needs to hold up the language though.

Which actually brings me to my last comment:
***************
4) Get the damn thing out the door.

I'm not clear that a long CR for implementation is either useful or 
wise. No, I'm fairly clear it isn't. The language seems perfectly 
reasonable, if not my ideal. It fixes loads of important bugs in 
DAML+OIL, which, i'll point out, has been a perfectly servicable 
language for many people and purposes. Let us play with this for a few 
years and THEN we can tweak it further.

Speaking as an implementor and kibbitzer to implementors, what I'd like 
right now is a truly stable spec rather than something that might or 
might not change in 6 months. We WILL find bugs. We will find bugs and 
infelicities even after a 6 month CR period.

Speaking ENTIRELY in my own voice, brash as it may be.

Cheers,
Bijan Parsia.



