docno="lists-024-13859431"
received="Thu Mar 11 10:40:25 2004"
isoreceived="20040311154025"
sent="Thu, 11 Mar 2004 09:34:43 -0600"
isosent="20040311153443"
name="Michel Leonard Goldstein"
email="mgoldst@okstate.edu"
subject="symmetry of inverseOf"
id="0HUF00M8N4LTM4@dexter.okstate.edu"
charset="US-ASCII"
expires="-1"

To:public-webont-comments@w3.org



Hi,

I guess this is a rather simple question, but that really has annoyed me
when building an ontology of journal paper citations:

In order to decrease the amount of different property types in my ontology,
I have made all properties that connect something to a paper to be called
"ofPaper". They can be disambiguated and queried based on the class of the
"source" (domain). This makes special sense for the system I'm building,
because it always starts a search by a class type. On the other hand, the
outgoing properties are named differently for each different class (for
example, for the author of the paper there is a property called "hasAuthor",
for the title, "hasTitle", and so on). 

In this case, the "ofPaper" property is the inverse of the "hasAuthor"
property, but the symmetric assertion is not valid. If I understood the
defined properties for OWL, there is no defined property that allows me to
represent this unidirectional relationship. In the inverseOf property, there
is a "vice versa" attached to the definition. Am I right? If so, why wasn't
this considered interesting enough to be added to the definition?

Thank you,

Michel Leonard Goldstein
Intelligent Systems and Control Laboratory
Oklahoma State University



