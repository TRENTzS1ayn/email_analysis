docno="lists-024-14939749"
received="Tue Apr  1 17:18:04 2003"
isoreceived="20030401221804"
sent="Tue, 1 Apr 2003 14:17:57 -0800 "
isosent="20030401221757"
name="Burdett, David"
email="david.burdett@commerceone.com"
subject="RE: More use cases"
id="C1E0143CD365A445A4417083BF6F42CC053D18DB@C1plenaexm07.commerceone.com"
charset="iso-8859-1"
inreplyto="More use cases"
expires="-1"


To:"'Patil, Sanjaykumar'"<sanjay.patil@iona.com>,"Burdett, David"<david.burdett@commerceone.com>,"WS Choreography (E-mail)"<public-ws-chor@w3.org>

Patil
 
I agree.
 
The key question is, as you say ...
 
The question now is - whether the choreography language should support
references to such external state (perhaps in the form of a language to
specify preconditions, post conditions, etc).
 
... which is the main reason I wanted to put this use case forward.
 
Your idea of putting everything into one larger choreography becomes
unweildy. For example the Order Placement choreography I gave is a "medium
complexity" example of how to place an order. The simplest is where you just
send an order and expect nothing in return. The other extreme is where the
seller provides automatic periodic updates on the processing of the order.
Our analysis at Commerce One has identified 14 different variations of how
to place an order where each variation is a different choreography.
 
In all variations:
1. The semantics of the messages are the same, and
2. Each variation can optionally include the use of a status inquiry.
 
I also agree that we need to make a conscious decision whether this type of
dependency is in, or out of, scope.
 
David

-----Original Message-----
From: Patil, Sanjaykumar [mailto:sanjay.patil@iona.com]
Sent: Tuesday, April 01, 2003 1:59 PM
To: Burdett, David; WS Choreography (E-mail)
Subject: RE: More use cases


 
David, if the order submission process and the order status query process
are part of the same larger choreography, then  the dependency issue
disappears.
 
With separate choreographies for the two processes, the state connecting the
two choreographies has to be maintained outside of the choreography.
 
The question now is - whether the choreography language should support
references to such external state (perhaps in the form of a language to
specify preconditions, post conditions, etc).
 
The alternative may be to simply require that the related choreographies
should always be defined under a larger umbrella choreography, such that the
dependency state management naturally falls within the scope of
choreography.
 
Some of the above may sound like jumping into the solution. However, I am
trying to understand myself whether the use case is within our scope at all.

Sanjay Patil 
Distinguished Engineer 
sanjay.patil@iona.com 
------------------------------------------------------- 
IONA Technologies 
2350 Mission College Blvd. Suite 650 
Santa Clara, CA 95054 
Tel: (408) 350 9619 
Fax: (408) 350 9501 
------------------------------------------------------- 
Making Software Work Together TM 

-----Original Message-----
From: Burdett, David [mailto:david.burdett@commerceone.com]
Sent: Tuesday, April 01, 2003 1:08 PM
To: WS Choreography (E-mail)
Subject: More use cases



Martin sending out a use case reminded me of another use case involving
dependencies between choreographies that I want to provide.

David 
<<Choreography Dependency use case.htm>> 

Director, Product Management, Web Services 
Commerce One 
4440 Rosewood Drive, Pleasanton, CA 94588, USA 
Tel/VMail: +1 (925) 520 4422; Cell: +1 (925) 216 7704 
mailto:david.burdett@commerceone.com;
<mailto:david.burdett@commerceone.com;>  Web: http://www.commerceone.com
<http://www.commerceone.com>  



