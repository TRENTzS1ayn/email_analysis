docno="lists-024-16519619"
received="Thu Apr 10 17:32:30 2003"
isoreceived="20030410213230"
sent="Thu, 10 Apr 2003 16:32:16 -0500"
isosent="20030410213216"
name="Cummins, Fred A"
email="fred.cummins@eds.com"
subject="Events and States (was: timeouts &amp; states (was: Abstract Bindable  Choreography))"
id="27C20ED5A6D3D511ADF30002A5D6464802A713AF@USPLM214"
expires="-1"


To:jdart@tibco.com,public-ws-chor@w3.org


I don't see this as implementation, although it is dipping into a 
bit of detail that might be deferred.

I think the discussion has demonstrated that we are talking about
public state machines and events that correspond to the sending,
receiving or time-out of messages.

We might consider generic state machines as implied by David Burdett's
note, where a transition from start state may occur by the sending
of a message (client?) or the receipt of a message (server?).  The
state machine is then in an active state, may have a number of sub-
states as the exchange progresses, and may leave the active
state as a result of certain events such as a time-out.

This raises questions about the scope of a choreography.  When does
it end?  When a disconnect occurs?  When a particular business
transaction is completed?  When a relationship is terminated?
Maybe any of the above?

Do the state machines provide the mechanism for nesting of component
choreographies?

Fred

> -----Original Message-----
> From: Jon Dart [mailto:jdart@tibco.com]
> Sent: Thursday, April 10, 2003 4:20 PM
> To: public-ws-chor@w3.org
> Subject: RE: timeouts & states (was: Abstract Bindable Choreography)
> 
> 
> 
> IMO this thread is veering into implementation, which, although the 
> proposals seem reasonable, is premature IMO.
> 
> Can I suggest a re-focusing of the thread on the requirements for 
> timeout handling (and perhaps error handling in general)?
> 
> --Jon
> 
> 



