docno="lists-024-4674976"
received="Fri Apr  5 13:08:56 2002"
isoreceived="20020405180856"
sent="Fri, 5 Apr 2002 13:08:56 -0500 (EST)"
isosent="20020405180856"
name="Dan Brickley"
email="danbri@w3.org"
subject="comments on http://www.w3.org/TR/2002/WD-webont-req-20020307/"
id="Pine.LNX.4.30.0204051126520.20090-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<public-webont-comments@w3.org>




Reading the requirements WD, it strikes me that the use cases could
perhaps be more explicitly grounded in the practical needs of other W3C
groups and activities. Although mention is made of Web services and CC/PP,
it should be possible to go further and investigate the concrete needs and
experiences of other Working Groups. The document suggests that XML
Schemas and DTDs have limited utility, and that a language that extends
the basic capabilities of RDF would address these. I would like to see a
more compelling case to be made through finding two or more 'consumers' of
the WebOnt product from within the W3C specificiation development
community. A fair number of WGs have been producing vocabularies that are
specified with DTD and XML Schema technology, or with RDF Schemas. It
would help to motivate (and, critically, to scope) the Web Ontology
language if the WebOnt design could cite specific design challenges that
W3C groups have encountered when using XML Schema and RDF Schema
technology. The work on EARL in the Web Accessibility domain, the CSS
stylesheet technology, CC/PP, Web Service Description, or even XML Schema
itself would provide excellent 'eat your own dogfood' application areas
for W3C's Web Ontology Language.

This last suggested consumer, XML Schema, is worth elaborating on. The XML
Schema language can be seen as providing rules for classifying XML infoset
instances (aka XML documents) into categories, those categories being
defined by descriptions in the XML Schema language. Document validity in
the XML Schema sense corresponds to an instance document being a member of
some (XML Schema-defined) class of XML documents. These definitions are
couched in terms of the form (rather than reprsentational payload) of XML
documents. Following the example in the WebOnt requirements draft, one
might define a class of XML documents that correspond to those that
*describe* a 'string quartet' through providing name and contact details
for each of the four musicians who are members of the quartet.

This suggests a natural design goal for WebOnt. Today, one can write an
RDF Schema that defines classes and properties relating to people, string
quartets, music, addresses. And one can write an RDF Schema that defines a
class such as "Brief-String-Quartet-Description-in-XMLRDF'. The RDF core
machinery does not, however, provide very rich facilities that help us
figure out whether some resource must be a member of the class Musician,
Person, Address, StringQuartet etc., nor (notably) whether a resource
is a member of a class such as "Brief-String-Quartet-Description-in-XMLRDF".
XML Schema (and DTDs), by contrast, provide technology that can be
deployed for the latter task. By hard-coding an XML Schema that specifies
a class of XML/RDF documents that describe a quartet, we can distinguish
between XML/RDF docs that fall into our class.

This disconnect between the RDF and XML layers could imho usefully be
addressed by WebOnt. If WebOnt provides machinery for representing
criteria for class membership, it should (could?) be applied to the task
of reasoning about classes of XML document. The classes and properties in
this case would be those provided by the XML Infoset specification ([1],
also [2] for a proposed set of classes and properties that capture it as
RDF). See also [3], [4], [5] for related work on the use RDF, rules etc to
capture the content of DTDs and syntactic XML Schemas. The work on XML
Schema formal description[6] is also somewhat relevant.

It may be that WebOnt is not applicable to this task, or that the
expressivity needed to capture a reasonable chunk of XML Schema
functionality at the Ontology level would come with unacceptable
computational costs. We know that the simplicity of RDF Schema means that
a system built to RDFS alone cannot reproduce XML Schema's notion of
document classes. For WebOnt, the picture is not yet clear. Since many W3C
languages are defined using XML Schema or RDF Schema, it would be nice to
see the bridging of these technology families represented in the next
version of WebOnt's requirements doc.

I forgot to say 'nice work' btw! The requirements doc reads well, and
relates the goals of WebOnt to some practical areas faced by the Web
community. My main point is that this could be supported by more detailed
references to the needs, goals and experiences of other work areas within W3C.

Dan

(a personal view, wearing my XML and RDF developer hat(s))

[1] http://www.w3.org/TR/xml-infoset/
[2] http://www.w3.org/TR/xml-infoset-rdfs
[3] http://lists.w3.org/Archives/Public/www-rdf-logic/2002Mar/0008.html
[4] http://www.w3.org/TR/NOTE-dcd
[5] http://www.ascc.net/xml/schematron/text/prolog.html
[6] http://www.w3.org/TR/xmlschema-formal/



