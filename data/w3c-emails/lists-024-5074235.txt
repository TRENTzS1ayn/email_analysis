docno="lists-024-5074235"
received="Sun Dec 15 12:00:30 2002"
isoreceived="20021215170030"
sent="Sun, 15 Dec 2002 12:00:13 -0500 (EST)"
isosent="20021215170013"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: owl:sameClassAs"
id="20021215.120013.76210950.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="5.1.0.14.0.20021215142024.0207ebb8&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:bwm@hplb.hpl.hp.com
Cc:public-webont-comments@w3.org,jjc@hplb.hpl.hp.com


[I'm restricting my response to the part concerning the semantics document.]

From: Brian McBride <bwm@hplb.hpl.hp.com>
Subject: owl:sameClassAs
Date: Sun, 15 Dec 2002 15:51:41 +0000

[...]

> Dare I brave the semantics doc?  I don't grok that stuff, but maybe I'll 
> find the answer to my question.

Come on in, the water's fine.  :-)

> Owl lite does indeed seem to have an EquivalentClass(...).  But its hard to 
> tell what it means, because I'm looking for the omission of an axiom and 
> I'm not sure I'm understanding this.  

The semantics doc doesn't have axioms, at least not axioms in the sense of
an axiomatization of OWL.  Instead it has conditions on interpretations
(which do serve some of the same purposes).

[...]

> [[There are two different styles of using OWL. In the more free-wheeling 
> style, called OWL/Full here, these three classes are identified with their 
> RDFS counterparts. In OWL/Full, as in RDFS, resources can be both an 
> individual and a class, or, in fact, even an individual, a class, and a 
> property. In the more restrictive style, called OWL/DL here, these three 
> classes are different from their RDFS counterparts and, moreover, pairwise 
> disjoint.
> ]]
> 
> My first reading of that was that it said the pair of classes rdfs:Class 
> and owl:Class are disjoint in OWL/DL.  

Hmm.  The construction 

... these three are ... and ....

seems to me to be quite explicit that it is the three that are pairwise
disjoint.   Moreover, pairwise disjoint only makes sense for a group larger
than two, so it would not apply to rdfs:Class and owl:Class, even in the
absence of any other indications that it might.

> But that would be madness, since 
> owl:Class is a subclass of rdfs:Class.  I think this means:
> 
> [[In the more restrictive style, called OWL/DL here, owl:Thing, owl:Class 
> and owl:Property are different from their RDFS counterparts.  Moreover, 
> owl:Thing, owl:Class and owl:Property are pairwise disjoint.
> ]]

To make matters explicitly clear, I'll change the wording to

  There are two different styles of using OWL.
  In the more free-wheeling style, called OWL/Full here,
  the three domain-circumscription classes, owl:Thing, owl:Class and
  owl:Property, are identified with their RDFS counterparts.
  In OWL/Full, as in RDFS, resources can be both an individual and a
  class, or, in fact, even an individual, a class, and a property.
  In the more restrictive style, called OWL/DL here,
  the three domain-circumscription classes are different from their RDFS
  counterparts and, moreover, pairwise disjoint.


> Which is interesting in its own right, as it means that OWL/DL can't handle 
> datatypes that are both classes and interpretation properties, which I'd 
> been assuming was ok.  

Well, datatypes are not OWL classes in OWL/DL or OWL/Lite, so I suppose
that they could belong to both rdfs:Class and rdf:Property in OWL/DL or
OWL/Lite.  I'm not sure why one would want this, however.

[...]

peter



