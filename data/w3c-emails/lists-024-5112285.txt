docno="lists-024-5112285"
received="Mon Dec 23 12:33:16 2002"
isoreceived="20021223173316"
sent="Mon, 23 Dec 2002 12:29:05 -0500 (EST)"
isosent="20021223172905"
name="Dean Allemang"
email="dallemang@acm.org"
subject="OntoWeb 4 comments on OWL documents"
id="200212231729.gBNHT5l19675@csb.bu.edu"
expires="-1"


To:public-webont-comments@w3.org
cc:ocorcho@fi.upm.es,siberski@acm.org,jerome.euzenat@acm.org,dallemang@acm.org,sleeman@csd.abdn.ac.uk,alessandra.bagnato@txt.it




At the OntoWeb 4 Meeting that was held in Innsbruck, Austria on 16-18
December 2002, Ian Horrocks organized a meeting in which interested
parties went over the proposed specification OWL docs for review.
I (Dean Allemang, dallemang@acm.org) took notes, which I have
condensed here for presentation.  Only the secretary  (me) has reviewed this
final version, so I must take the blame for any inconsistencies or
errors in the following.  Any credit for insight, industry, or
intelligence is of course due to the workshop members:

Oscar Corcho  ocorcho@fi.upm.es
Wolf Siberski siberski@acm.org
Ian Horrocks horrocks@cs.man.ac.uk
Jerome Euzenat jerome.euzenat@acm.org
Dean Allemang dallemang@acm.org

We reviewed four documents:

Feature Synopsis
(http://www.ksl.stanford.edu/people/dlm/webont/OWLFeatureSynopsis.htm)
 
OWL Guide
(http://www.w3.org/2001/sw/WebOnt/guide-src/Guide-120402.html)
While writing up these notes, I noticed that there is now a newer
version of the Guide available

Language Reference
(http://www.daml.org/2002/06/webont/owl-ref-proposed)

Abstract Syntax and Semantics (http://www.w3.org/TR/owl-semantics/)
While writing up these notes, I noticed that there is now a newer
version of the AS&S avaialable.


The team reviewed the documents as a group, and hence watched out for
inconsistencies between documents.


Our findings:

1) There needs to be a roadmap document, an obvious first place to
   start.  At present, there is a motivational section at the
   beginning of the guide, that attempts to outline what the effort is
   trying to achieve.  The Synopsis does not include this, though the
   synopsis has a brief description of the features of OWL.

2) The roadmap should describe the different documents, what their
   goals are, and how they fit together.  Sorting out this "division
   of labor" should improve the documents themselves as well.

3) The latest recommendation of OWL (as outlined very well in the
   Guide) includes 3 layers; OWL-Lite, OWL-DL and OWL-Full.  The title
   of the Synopsis talks about OWL-Lite and OWL; this title should be
   brought up to date with the three levels (there is no level called
   "OWL").  This problem recurs throughout the Synopsis document.

4) The introduction to the synopsis does not mention the three layers,
   making it unclear what the document refers to.

5) The goal of the synopsis is unclear (see roadmap comment above).
   Is it an introduction to OWL for people who aren't sure they want
   to commit to reading a long document?  Or is it a document for
   someone who already knows DAML+OIL, and wants to move on to the new
   standard?
 
6) In Section 2.1, the convention of mixing abstract features (e.g.,
   "Individual" with language constructs (e.g., <i>Class</i>) is confusing.
   The introduction to section 2.1 defines the usage conventions (italics
   for language constructs), but this still makes for a difficult section
   to follow. We suggest that for the Synopsis, the discussion talk only
   about features in the abstract, while actual language constructs that
   implement these features be reserved for the reference.  This will do a
   better job of managing expectations for this document.

7) This comment is about the language itself, not the document.  The
   decisions made for namespaces have resulted in a mixture of namespaces
   in the language: owl:Class and rdfs:Class are different things, whereas
   for subClass there is just rdfs:subClass, and owl:Class is (presumably)
   meaningless.  So the resulting syntax requires the ontology author to
   simply know which namespace is correct, and wonder if there is any
   semantic difference by using one over the other.  Notice that the
   authors of the synopsis have fallen into this error themselves with the
   reference to rdfs:Property (correct is rdf:Property, according to the
   Reference) in section 3.1 (it gets it right in 2.1).  Similarly, in the
   owl ontology, (http://www.w3.org/2002/07/owl), this symbol is sometimes
   left unqualified (default is owl:Property), and sometimes (correctly)
   qualified as rdf:Property.  If the authors of the standards have
   difficulty getting this right, we have little confidence that other
   ontology authors will do so.

8) At some points, the synopsis is more detailed than the reference.
   E.g., TransitiveProperty has more detail in the Synopsis than the
   ref.  You might even just replace the ones in the ref with the ones
   in the synopsis.

9) All mentions of OWL must be qualified carefully; OWL-Lite, OWL-DL
   or OWL-Full.  Many references to "the full OWL vocabulary" remain
   (e.g., Synopsis, section 4).  Comments like "Therefore every OWL
   document is an RDF document, but not all RDF documents are OWL
   documents" (Synopsis, 3.1) need to be clarified for the level of
   the standard, Lite, DL or Full.  

******* Reference *********

10) There needs to be a clear section on the relation between the
    various levels of OWL and RDF, not just syntactically but
    semantically.   Does RDF simply provide a syntax for expressing
    OWL documents?  Or must OWL documents also respect the semtanics
    of RDF?  

    For instance, in the Abstract Syntax and Semantics, we read:

    "the OWL universe is the same as the RDFS universe"

    and in the reference, we read:

    "Any additional RDF statements, resulting in additional RDF
    triples are perfectly allowed, but OWL is silent on the semantic
    consequences (or lack thereof) of such additional triples"

    The latter seems to say that there are things in the RDF universe
    on which OWL is silent (i.e., the RDF universe is larger than the
    OWL universe?), while the former denies this.  A lot of the design
    rationale behind OWL is based on its relationship to RDF, but this
    relationship (and the motivations behind it) are not spelled out
    anywhere.  Perhaps one of the documents should incude a definitive
    essay on the semantic relationships between OWL and RDF.

11) In section 1 of the reference, the unnumbered paragraph "Mixing
    OWL with arbitrary RDF" has a link to a "mixing note" that points
    right back to the same paragraph; the reference needs to point
    into appx B (there are two tags in this file with the same name).

12) The internal references in the reference guide are useless; the
    table of contents has only two entries, and no paragraph has any
    numbering (notice the difficulty I had in referencing a paragraph
    for comment 11).  

13) This document has a similar problem as that in the synopsis, of
    not making the three levels (OWL-Lite, OWL-DL, and OWL-Full)
    clear.  There is a reference to the definition of the three layers
    early on, but the membership of the various language constructs in
    the three layers is not made clearly.

14) In the paragraph titled "Objects and datatype values", the comment
    about "OWL divides the universe in two disjoint parts" only holds
    for OWL-DL.  All statements of this sort must be identified as
    applying to OWL-FULL, OWL-DL or OWL-Lite as appropriate.

15) There are many refernces to the "Issues".  Is the "Issues" doc an
    official, released TR?  

16) Section "Boolean combination" uses set theoretic names; in the
    guide, these are called "Set Operators".  We recommend that the
    Reference adopt the terminology used in the Guide.

17) The description of rdfs:subClassOf and owl:sameClassAs in the
    reference says that it can contain a Class Expression; However,
    for OWL Lite, this Class Expression must be a Class (not an
    enumeration, etc.).

We realize that the Datatype issue is still outstanding at the RDF level,
making it very difficult to resolve Datatype issues in OWL.  We have two
comments, which might be resolved when other datatype issues are resolved: 

18) The rules about objects and datatypes imply that all values of an
    owl:datatype are also values of XML Schema Datatypes
    (xsd:datatypes). Make this explicit.  

19) The class owl:Datatype is mentioned in the reference guide once,
    without definition.  Since it seems not to be used, is there any
    need for this reference at all?

******* User Guide and Example Ontology *******

20) In the User Guide, there is a reference to a document called the
    OWL XML Syntax, but the reference doesn't seem to point anywhere.
    Is there such a document?  Where is it?  

21) In section "Simple Properties" (and others), names are given
    (subPropertyOf, domain, range) that belong in the rdfs: namespace,
    but are unqualified here.  

22) The section on "Inverse Functional Property" should include a
    short summary of the reasons why this appears in OWL/Full and not
    OWL/DL.


******* Abstract Syntax and Semantics *******

23) We would like some clarity about which statement apply to OWL-DL
    and which to OWL-Full; we realize that syntactic comments about
    OWL-DL and OWL-FULL are typically (always?) the same; if it is
    always the case, that should be made clear early on.  Otherwise,
    each reference to OWL-DL and OWL-Full should be clarified.

24) Section 1.2 is probably superfluous in the final document.

25) In section 5.1, the main difference between OWL/DL and OWL/Full is
    given as decidability; however, in the case of OWL/DL, the
    self-consistency of the axioms has also been worked out, whereas
    for OWL/Full, it is not even known if the axioms satisfy this
    basic requirement.  This makes the issue even more serious than
    decidability, that of consistency.  In an undecideable system,
    there could be questions that we cannot prove to be true, nor can
    we prove them false.  In an inconsistent system, we will be able
    to prove all statements both true and false.

    This has a more pragmatic impact in the development of tools for
    managing such ontologies; the current state of tool
    interoperability (for DAML+OIL) is lamentable.  Tool manufacturers
    need to have an easily implementable, stable spec to be able to
    make tools that will interoperate.  Can OWL/Full provide this,
    while allowing such full expressivity of metaclasses, arbitrary
    set operations, etc.?



