docno="lists-024-5389055"
received="Fri Mar 22 15:20:50 2002"
isoreceived="20020322202050"
sent="Fri, 22 Mar 2002 16:20:52 +0000"
isosent="20020322162052"
name="Dave Reynolds"
email="der@hplb.hpl.hp.com"
subject="Re: Web Ontology Requirements Document - comments sought"
id="3C9B59E4.5AB899FA@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="Web Ontology Requirements Document - comments sought"
expires="-1"


To:public-webont-comments@w3.org

These comments may have already been fed into the process via Jeremy Carroll so
apologies if these are just repetition ...

1. The multimedia-collections use case is not completely convincing. There are
domains where purely symbolic descriptions are very appropriate but others, such
as this, which also demand subsymbolic descriptions. Certainly symbolic metadata
annotations can be, and are being, used for multimedia data, However, this
domain raises issues about representation of uncertainty, about statistical
rather than logical classifications and relations, about representation of
non-rigid qualifiers (e.g. the "late" in the example) and so forth - none of
which I see being addressed in the requirements sections. Personally I am
comfortable that Webont should not address such issues but this use case is
potentially misleading.

2. Can I suggest a requirement (or objective) that ontologies can be annotated
with additional meta information at a fine grain. There is a requirement already
for overall ontology annotation and a more specialized "procedural attachment"
objective. I'd prefer a general mechanism, as is currently possible which
DAML-in-RDF, which could be applied to more than just procedural attachment. For
example, I can see uses for an application annotating a class with non-logical
information such as display hints or inference hints which don't affect the
semantics but affect the nature and performance of the application. If you do
not build on top of RDF (where it comes for free) then a similarly open-ended
method of annotation or extension would be useful.

3. It is implicit in the whole document but I didn't see an explicit
goal/requirement/objective that OWL should be usable to describe the ontology of
terms used in RDF fact bases. I take it that this is a given (that RDF is the
"Abox" for OWL's "Tbox") but a more explicit statement of the relationship
between RDF and OWL might be helpful.

Dave



