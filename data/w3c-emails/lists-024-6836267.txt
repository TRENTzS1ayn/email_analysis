docno="lists-024-6836267"
received="Tue Apr 29 08:59:42 2003"
isoreceived="20030429125942"
sent="Tue, 29 Apr 2003 14:59:40 +0200"
isosent="20030429125940"
name="Guus Schreiber"
email="schreiber@cs.vu.nl"
subject="Re: OWL Language Reference Comments"
id="3EAE773C.8080209@cs.vu.nl"
charset="us-ascii"
inreplyto="AB085580DA7C9F45A251FF83A313DA380E8CE4&#64;orls01.drc.com"
expires="-1"


To:"Lacy . Lee"<LLacy@drc.com>, webont-comments<public-webont-comments@w3.org>


Comments from Lacy Lee on OWL Reference:
http://lists.w3.org/Archives/Public/public-webont-comments/2003Apr/0049.html

 > OWL Language Reference Comments
 >
 > Minor editorial suggestions:
 >
 > Section 1.1, change "This document" to "That document" or fully
 > qualified name to reduce confusion.
 > Section 1.1, change "uses cases" to "use cases".
 > Section 3, "Note" first sentence appears to be combination of two
 > separate sentences?
 > Section 3.1.1, example would be easier to understand if it was a named
 > class "Continent".
 > Section 4.2, change "with as both" to "with both".
 > Section 4.3, change "the a range" to "the range".
 > Section 5.2, change "where class" to "where a class".
 > Section 7.1, change "property is OWL DL" to "property in OWL DL".
 > Section 8.3, the tabs in the example should be lined up differently to
 > show indentation at the same levels.

Thanks very much for spotting these. We will make the appropriate
changes in our editor's draft with one exception: the classs description 
with the enumeration of continents (Sec. 3.1) is unnamed on purpose 
(anonymous type 2 classs description).

 > More substantive comments/questions:
 >
 > Section Numbering: I'm not sure what the W3C format restrictions are,
 > but it
 > would be easier to "reference" sections of this reference document if
 > headings were numbered below the 3rd level.

We will number all heading levels.

 > The examples in section 3.1.3 for the intersectionOf and unionOf
 > properties
 > don't seem like they represent typical uses of the properties
 > (manipulating explicit enumerations).

The enumeration examples were used to make clear to the reader what the
difference is between union and intersection. We propose to add the
following sentence just after the two examples:

"This example shows the intersection/union of  two enumerations to
make clear what the meaning is of this language construct (see the OWL
Guide [ref] for more typical examples)."

 >
 > The text in section 3.2.2 appears to suggest that the equivalentClass
 > statement is required to define an enumerated class, rather than just
 > naming a type 2 enumeration like the one described in section 3.1.1.

I assume you mean Sec. 3.2.3 instead of 3.1.1, where there is indeed
a named enumeration. We will add a link to the enumeration example in
3.2.2, pointing to the alternative representation in 3.2.3.

 >
 > Section 4.1's NOTE: says in OWL DL the domain and range of the
 > subPropertyOf
 > property must be either both datatype properties or object properties,
 > but I would think the note would also apply to OWL Lite?

By default, all OWL DL notes also apply to OWL Lite. OWL Lite is
specified in Reference in terms of explicit restriction on OWL DL (see
Sec. 8.3). We will add the following note to Sec. 1.2:

"NOTE: OWL Lite is defined here as a number of restrictions on OWL DL. 
This mean that, OWL DL constructs are also part of OWL Lite, unless
explicitly stated otherwise. Sec. 8.3 provides a summary of these
restrictions."

 >
 > Section 4.2 states that owl:inverseOf is a symmetric property.  Does 
  > it really mean that defining one direction is sufficient to infer that
 > the inverse property has the described property as its inverse
 > property?  That's a different notion than the owl:SymmetricProperty
 > construct.
 >

owl:SymmetricProperty is normally used for user-defined
properties. The remark in Sec. 4.2 is meant to day that in a metamodel 
of OWL the built-in owl:inverseOf property carries the semantics of
owl:SymmetricProperty.

 > Section 5.2 describes owl:AllDifferent as a "special OWL class" .
 > From the NOTE, it's not clear whether the domain of the
 > owl:distinctMembers property is restricted to the owl:AllDifferent
 > class.

Yes, this restriction applies. See Appendix B:

[[
<rdf:Property rdf:ID="distinctMembers">
   <rdfs:label>distinctMembers</rdfs:label>
   <rdfs:domain rdf:resource="#AllDifferent"/>
   <rdfs:range rdf:resource="&rdf;List"/>
</rdf:Property>
]]

 >
 > Section 6.2, it isn't clear whether "owl:DataRange" is a "special OWL
 > class" like "owl:AllDifferent".

owl:DataRange is a special class in the sense that it is introduced to
provide a type for these OWL datatypes.

 >
 > Section 7.1 introduces the concept of annotations.  I don't recall
 > them being described in the overview or guide, so a one sentence
 > definition/introduction would be helpful.  Also, it's confusing why
 > "an explicit typing triple" with a particular form is specified 
rather > than providing example owl syntax.

We will add an explanatory sentence to the start of this section.

I'm not sure what  you mean with the last sentence. The document
contains the following example:

[[
Here is an example of legal use of an annotation property is OWL DL:

<owl:AnnotationProperty rdf:about="&dc;creator"/>

<owl:Class rdf:about="MusicalWork">
   <rdfs:label>Musical work</rdf:label>
   <dc:creator>N.N.</dc:creator>
</owl:Class>
]]

This is OWL RDF/XML syntax and produces the explicit type triple
(dc:creator rdf:type owl:AnnotationProperty.)

 >
 > Section 7.4 has an example of DeprecatedProperty whose comment
 > references its inverse property "drives".   However, the
 > inverseProperty still references the deprecated class.  I would 
expect > the inverseOf property to be specified as part of the dying 
hasDriver
 > property.
 >

As it is right now, once the "hasDriver" property went away, you
would have to remove the inverseOf property from "drives", but until
then the reference is perfectly legal. With your suggestion, one could
just delete the deprecated property and not need to update anything
else. For this reason, your suggestion may be be better from a stylistic
point of view.

We propose to change the example to:

<owl:Ontology rdf:about="">
   <rdfs:comment>Vehicle Ontology, v. 1.1</rdfs:comment>
   <owl:backwardCompatibleWith
           rdf:resource="http://www.example.org/vehicle-1.0"/>
   <owl:priorVersion rdf:resource="http://www.example.org/vehicle-1.0"/>
</owl:Ontology>

<owl:DeprecatedClass rdf:ID="Car">
   <rdfs:comment>Automobile is now preferred</rdfs:comment>
   <owl:equivalentClass rdf:resource="#Automobile"/>
   <!-- note that equivalentClass only means that the classes have the same
        extension, so this DOES NOT lead to the entailment that
        Automobile is of type DeprecatedClass too -->
</owl:DeprecatedClass>

<owl:Class rdf:ID="Automobile" />

<owl:DeprecatedProperty rdf:ID="hasDriver">
   <rdfs:comment>inverse property drives is now preferred</rdfs:comment>
   <owl:inverseOf rdf:resource="#drives" />
</owl:DeprecatedProperty>

<owl:ObjectProperty rdf:ID="drives" />

 > Section 8 describes the differences in OWL species, however I have not
 > seen whether the intended species is ever formally specified in
 > documents.  For example, the OWL namespaces referenced by OWL Lite
 > ontologies appear to be the same ones for OWL Full.

The formal specification of the OWL species is defined in the OWL
Semantics & Abstract Syntax document. The WG has opted for sticking to
one namespace the three species, as there is a strict sublanguage
relation between these.


Thanks again for your comments.
Please let us know whether these answers are satisfactory.

Guus Schreiber



