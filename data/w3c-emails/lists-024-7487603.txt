docno="lists-024-7487603"
received="Wed Dec  3 09:16:38 2003"
isoreceived="20031203141638"
sent="Wed, 3 Dec 2003 14:16:37 -0000"
isosent="20031203141637"
name="Gary Ng"
email="Gary.Ng@networkinference.com"
subject="RE: Annotation properties with range and other rdf:types"
id="3BE4D3F0FB726240966DEF40418472B548948E@ni-lon-server1.ad.networkinference.com"
charset="US-ASCII"
inreplyto="Annotation properties with range and other rdf:types"
expires="-1"


To:"Holger Knublauch"<holger@SMI.Stanford.EDU>,<public-webont-comments@w3.org>


Hi Holger,

My opinion is that this is not necessarily a specification issue. 

At the tool level you can certainly have a GUI in which annotations are
declared and used
as you have described, but IMO this does not require any modifications
to the current spec.

For example, you can make use of another annotation property to denote
the range for other Aps,
Or use a "meta" ontology (an extension of the rdfs of owl) at the tool
level.

Cheers,

Gary




> -----Original Message-----
> From: Holger Knublauch [mailto:holger@SMI.Stanford.EDU] 
> Sent: 03 December 2003 00:18
> To: public-webont-comments@w3.org
> Subject: Annotation properties with range and other rdf:types
> 
> 
> 
> I have concerns about the latest specification of annotation 
> properties.
> As a tool developer, I would like to handle annotation properties very
> similar to "normal" properties; in particular I want to be 
> able to state
> that an AnnotationProperty is also a DatatypeProperty or an
> ObjectProperty, and I want to define the range of an 
> AnnotationProperty.
> Although OWL Full allows me to do so, it is not valid OWL DL: See test
> 004 at
> http://www.w3.org/2002/03owlt/editors-draft/draft/byFunction#f
unction-An
notationProperty

From a tool builder's perspective, handling annotation properties
different from other "heavy" properties means a considerable overhead,
and makes it very difficult to provide useful editor components for
annotation values. Without information about
the type of allowed values, I would have to ask the user "what would you
like to enter next: A string, an integer, an object, an..."?  I would
also have problems to select appropriate graphical widgets for
annotation properties, if I don't know in advance what values it could
take.

My naive understanding is that being an annotation property is more or
less just another characteristic of a property, somehow like a boolean
flag. The classifier could simply ignore all properties that have this
flag.

(Protege) User feedback suggests that annotation properties are an
extremely important feature, especially to attach all types of
information to classes without having to disable the classifier.  The
current specification is a serious obstacle.

Kind regards,
Holger



