docno="lists-024-7529655"
received="Wed Dec  3 17:36:55 2003"
isoreceived="20031203223655"
sent="Thu, 4 Dec 2003 11:36:44 +1300"
isosent="20031203223644"
name="Matt Halstead"
email="matt.halstead@auckland.ac.nz"
subject="Re: Annotation properties with range and other rdf:types"
id="012d01c3b9ed$edf35200$87d0d882@bioeng.auckland.ac.nz"
charset="iso-8859-1"
inreplyto="006601c3b9e4$e7817950$2c2141ab&#64;holgersmi"
expires="-1"


To:"Holger Knublauch"<holger@SMI.Stanford.EDU>,"'Jim Hendler'"<hendler@cs.umd.edu>,<public-webont-comments@w3.org>


comment below

----- Original Message ----- 
From: "Holger Knublauch" <holger@SMI.Stanford.EDU>
To: "'Jim Hendler'" <hendler@cs.umd.edu>; <public-webont-comments@w3.org>
Sent: Thursday, December 04, 2003 10:32 AM
Subject: RE: Annotation properties with range and other rdf:types


>
> > Holger, I must admit some confusion - if you know the types and
> > properties of these things, why do you want to make them annotations?
> > If you goal is to have metaclasses (I.e. classes with properties) you
> > can certainly use OWL Full, it was designed to allow that.
>
> Yes, I could use OWL Full, but I think the feature of (typed)
> annotation properties is of such a great importance to ontology
> designers that it should also work for OWL DL.  While I could
> delete all annotations temporarily before I send the ontology to the
> classifier, the information will still be stored in the ontology,
> making the file difficult to share on the Web.  My apologies if
> I lack the technical background of the OWL language theory that
> the WebOnt group has, but what is the problem with allowing it
> in OWL DL?
>
> Our typical use case is to allow the definition of metaclasses and
> property metaclasses which hold extra information.  For example,
> a property metaclass could introduce an extra property "unit"
> or a class could be annotated with an "author" and "change date".
> This information is completely irrelevant to the classifier,
> and could be easily ignored if the property is flagged as an
> annotation property.  I don't see however, why this excludes the
> use of range information on the annotation property.
>
>
> >   So, in essence, you cannot have it both ways -- if you want to live
> > in DL, you need to accept its restrictions.  If you don't want these
> > restrictions, you should use OWL Full -- afraid that logic will not
> > let us have our cake and eat it too (believe me, the WG tried hard to
> > find a way to do that :->)
>
> My impression is that, in this aspect, OWL has been designed
> to fit the needs of a classifier, and not from a user's or tool
> perspective, but you know more than I do.
>

In my mind, this is certainly one of the most important aspects, i.e. to
have particular levels of the language that guarantee particular
computational complexity in reasoning - especially when providing services
to people waiting at the other end of the wire.  If particular properties
such as 'date', and 'author' are important concepts in the ontology, then
they should be properties and types.  Workflow is a very important aspect of
ontologies, i.e. we know they are not static, and as such, workflow concepts
and properties should not be relegated to 'annotation'.  That's just my
opinion, but seems to be shared by some others in domains such as biological
processes whose concepts and properties have quite a volatile nature over
time and between authors.


>
> >   For what you are suggesting doing, why can you not just use RDF
> > comments, etc. or to define things directly in OWL?
>
> Because from a user's perspective annotation p's should appear
> just like other properties - he or she should be able to specify
> extra information (e.g. range) on the property so that it is
> later easier to enter values for the property.
>
> Holger
>
>



