docno="lists-024-8275524"
received="Tue Jul 15 13:02:59 2003"
isoreceived="20030715170259"
sent="Tue, 15 Jul 2003 18:01:59 +0100"
isosent="20030715170159"
name="Ian Horrocks"
email="horrocks@cs.man.ac.uk"
subject="Re: unsupported datatypes"
id="16148.13191.31188.976959@merlin.horrocks.net"
charset="us-ascii"
inreplyto="3BE4D3F0FB726240966DEF40418472B53E94FB&#64;ni-lon-server1.ad.networkinference.com"
expires="-1"


To:"Gary Ng"<Gary.Ng@networkinference.com>
Cc:<public-webont-comments@w3.org>


On July 15, Gary Ng writes:
> 
> 
> Another question, this time about unsupported datatypes.
> 
> In the reference doc, it says:
> 
> "For unsupported datatypes, lexically identical literals should be
> considered equal, whereas lexically different literals would not be
> known to be either equal or unequal. Unrecognized datatypes should be
> treated in the same way as unsupported datatypes."
> 
> The first half of the sentence would suggest to treat a literal of
> unknown type as just a string. However, I am not entirely sure what is
> expected from a reasoner with respect to the behaviour of "would not be
> known to be either equal or unequal".

Unknown or unrecognised datatypes are treated as being the lexical
form (a string) of some unknown datatype. It is obviously the case
that, whatever the datatype, identical lexical forms map to the same
element of the value space, and can thus be considered equal. For
non-identical lexical forms, however, it *cannot* be assumed that they
do not map to the same element of the value space and are thus
unequal. 

E.g., the lexical forms "1.0" and "01.00" would map to the same value
(and thus be considered equal) in some datatypes (e.g., decimal), but
not in others (e.g., string).

Ian

> 
> Views?
> 
> Cheers,
> 
> G
> 
> Gary Ng, PhD      gary.ng@networkinference.com
> Senior Software Engineer
> Network Inference (Holdings) Ltd
> Tel: +44 (0) 20 7616 0717 Fax: +44 (0) 20 7616 0701
> 
> 



