docno="lists-024-9048776"
received="Mon Jun 16 12:59:38 2003"
isoreceived="20030616165938"
sent="Mon, 16 Jun 2003 12:55:54 -0400"
isosent="20030616165554"
name="Jim Hendler"
email="hendler@cs.umd.edu"
subject="Re: OWL Comment: have long CR period for OWL, or move owl:oneOf,  owl: have Value to OWL Full"
id="p05200f58bb13a66206aa@[10.0.1.2]"
charset="us-ascii"
inreplyto="5E13A1874524D411A876006008CD059F030CAAB0&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:"Merry, Martin"<Martin_Merry@hplb.hpl.hp.com>,public-webont-comments@w3.org


Dear Mr. Merry-
  Thanks much for your comments.  They have caused us a lot of 
discussion and we have spent a lot of time working out how we could 
set the expectations better, as to the differences between OWL FUll 
and OWL DL.

First, we have dropped the discussion of a "Complete OWL DL 
Consistency Checker" from the Test document.  We believe this is 
consistent with your request

Second, in the overview we now say

"Owl Lite also has a lower formal complexity than OWL DL, see 
<reference section 8.3> for further details."

Section 8.3 now says:

"The idea behind the OWL Lite expressivity limitations is that they 
provide a minimal useful subset of language features, that are 
relatively straightforward for tool developers to support. The 
language constructs of OWL Lite provide the basics for subclass 
hierarchy construction: subclasses, value and cardinality 
restrictions. In addition, OWL Lite allows properties to be made 
optional or required (using the cardinality features). The 
limitations on OWL Lite place it in a lower complexity class than OWL 
DL. This can have a positive impact on the efficiency of complete 
reasoners for OWL Lite."

and Section 8.2 (On OWL DL) now reads

"These constraints of OWL DL may seem like an arbitrary set, but in 
fact they are not. The constraints are based on work in the area of 
reasoners for Description Logic, which require these restrictions to 
provide the ontology builder or user with reasoning support. In 
particular, the OWL DL restrictions allow the maximal subset of OWL 
Full against which current research can assure that a decidable 
reasoning procedure can exist for an OWL reasoner."


We believe these changes help set the expectations more correctly as 
you requested.

You also raised an issue as to whether we should remove features from 
the current OWL DL.  The issue you raised is that with both 
owl:inverseOf and owl:oneOf (and/or hasValue) in the language, the 
complexity class of OWL DL is higher.  This is true.  On the other 
hand, you state that

At 3:18 PM +0100 5/9/03, Merry, Martin wrote:
>The theoretical results for the decidability of OWL DL are interesting but
>not particularly helpful. OWL Lite is justified by practical results in DL
>systems (primarily from Ian Horrocks). There is no such practical experience
>for the OWL DL subset.  We would like to see such practical experience
>before OWL exits candidate recommendation.


  The WG has been made aware of implementations of OWL DL that include 
both inverseOf and oneOf and which seem to be performing well in 
practice.  The working group will definitely consider their status 
and usability before deciding on our schedule with respect to 
Candidate Recommendation and Proposed Recommendation.

Thank you for your comments, please let us know if our response is 
acceptable and we can close this comment.

   - Jim Hendler
    WOWG Co-Chair




At 3:18 PM +0100 5/9/03, Merry, Martin wrote:
>We wish to comment on the usefulness of OWL DL as a sensible subset of OWL
>Full.
>
>We're concerned that OWL users should have their expectations met when they
>use OWL compliant systems.
>
>We find that the draft documents make it clear that OWL Full systems will
>not have full reasoning support and that therefore users will not be too
>surprised when there is a resulting migration cost from one OWL Full system
>to another.
>
>We are concerned, however, that OWL DL is presented as a sensible stopping
>point before OWL Full, where there are greater guarantees.
>
>The theoretical results for the decidability of OWL DL are interesting but
>not particularly helpful. OWL Lite is justified by practical results in DL
>systems (primarily from Ian Horrocks). There is no such practical experience
>for the OWL DL subset.  We would like to see such practical experience
>before OWL exits candidate recommendation.
>
>In particular, we would like to see adequate practical implementation
>experience of the OWL DL constructs owl:oneOf and owl:hasValue.  We believe
>that this should include the goal that OWL DL reasoners can make a
>reasonable attempt at classic NP complete problems (such as the 3-SAT
>problem and the subgraph isomorphism problem) which can be straightforwardly
>encoded within OWL DL.  For example, any such problem that can be solved in
>seconds by a specialised reasoner should be soluble by a general OWL DL
>reasoner in minutes rather than years.
>
>An alternative, would be to redefine OWL DL downwards, excluding owl:oneOf
>and owl:hasValue, which would then be subject to the health warnings of OWL
>Full - i.e. use of these constructs means that your ontology is likely to be
>outside the limits of practical reasoning. Such a redefinition of OWL DL,
>could sensibly accompany a redefinition of OWL Lite to exclude complete
>class definitions.
>
>
>Martin Merry
>HP Semantic Web Programme Manager



