docno="lists-025-0880033"
received="Mon Apr 14 16:05:02 2003"
isoreceived="20030414200502"
sent="Mon, 14 Apr 2003 13:03:19 -0700"
isosent="20030414200319"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="Re: Pi-Calculus Model question."
id="3E9B1407.2070004@intalio.com"
charset="us-ascii"
inreplyto="3E9B1098.D24EA043&#64;oracle.com"
expires="-1"


To: Nickolas Kavantzas<nickolas.kavantzas@oracle.com>
CC:public-ws-chor@w3.org


Nickolas Kavantzas wrote:

>Assaf, maybe I missed something but the examples you walked us through
>can be coded in pi-c but also in CCS which is a subset of pi-c. I did
>not see any channel passing between processes. Is this intentional from
>you to simplify the examples?
>  
>
Yes. I wasn't expecting to cover all of pi-c in one day, just starts 
with the basics, and make sure we're all on the same page before moving 
forward. So right now we're move at the level of CCS, but we'll 
definitely get around to channel passing as we explore more complicated 
scenarios.

>I think the challenge for the WS-CHOR WG will be how to pick the right
>formal model that captures the use-cases we want to support, where a
>subset of pi-c MAY be good enough. For example, if we don't care of
>passing channels then we can use CCS instead of pi-c. If we want to pass
>channels between processes (for a callback for example) then we have
>different options: use full pi-c, use symmetric-pi-c (only fresh
>channels can be passed around), use linear channels (a channel can be
>used only once for a send and only once for a receive), etc. For any of
>this to happen there has to be a type system for channels which
>restricts the usage of channels. Also, channels have to become first
>class citizens in WS. WS-Addressing maybe something to look at and see
>how we can use it.
>
Good point. I also believe channel typing is important and am interested 
in using WS-Addressing to address that.

arkin

>Another important criteria, which may affect our decision for picking
>the right formal model is how a system that executes the WS-CHOR
>language (which will based on the formal model) will be implementated.
>Lucian for example, among others has developed explicit-fusions-calculus
>where its machine can effiecienlty implement synchronous rendezvous in a
>distributed environment. Asynchronous-pi is another example of that.
>
>  
>



