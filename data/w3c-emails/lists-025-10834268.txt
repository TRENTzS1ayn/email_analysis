docno="lists-025-10834268"
received="Wed Jul 30 17:14:13 2003"
isoreceived="20030730211413"
sent="Wed, 30 Jul 2003 14:13:20 -0700"
isosent="20030730211320"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="Re: Web Services Choreography Requirements 1.0 draft uploaded"
id="3F2834F0.7050903@intalio.com"
charset="us-ascii"
inreplyto="3F28325F.4040706&#64;tibco.com"
expires="-1"


To:jdart@tibco.com
CC:public-ws-chor@w3.org


Jon Dart wrote:

> Assaf Arkin wrote:
>
>
>> The term correct behavior means 'working according to specification'. 
>> If it does not work according to specification then it's considered 
>> faulty.
>
>
> This formulation doesn't help at all IMO.

I was assuming the choreography definition is a "specification" of how 
the parties should interact with each other. Hence my definition.

Design time is more tricky. To be correct of faulty you need a 
specification for what you intend to design, so you can determine if the 
design is correct. If that specification says no deadlocks, or no 
request without response, it's easy to figure out what design would be 
incorrect. But such a specification would be out of scope for us.

>
> We're talking about design time, i.e. prior to execution. So what 
> would consitute a choregraphy defintion that didn't "work according to 
> specification"? I guess it could be syntactically incorrect, i.e. not 
> validate according to the specification's schema, but I suspect 
> something else was meant by design-time validation.

Validation is, as I understand it, the ability to check it against some 
other specification.

Let's say that I have a specification that says all choreographies 
should be deadlock-free. You may or may not have the same specification. 
And how I arrived at that specification - a best practice, agreement 
with a partner, regulation - is not something that a W3C spec can cover. 
But let's say I have such a specification, and I also have a design. Now 
the question is, can I check that my design is correct?

In other words, is there enough information there, or a particular way 
to write the specification, so I can conclude whether or not it's 
deadlock free. Or any other thing I want to validate.


What I personally would like to validate would include deadlock free, 
livelock free, etc. It's a matter of best practice. What I hope the 
choreography language would allow me is a way to validate the design 
against these requirements. A purely descriptive language like English 
or UML would not help me do that. A machine processible language would. 
So if you look at something like WSCI or BPEL4WS abstract, I can easily 
run it through a validator to check for correctness.

arkin

>
> The requirement is that design-time validation be possible, but 
> nothing is said about what a design-time validator might do, or what 
> kinds of error it might detect. Without saying this, the requirement 
> isn't meaningful IMO. N.b. I am not sure there is a meaningful level 
> of validation that can be done prior to execution, on a design 
> language complex enough to meet the other requirements.
>
> --Jon
>



