docno="lists-025-10910394"
received="Wed Jul 30 20:33:42 2003"
isoreceived="20030731003342"
sent="Wed, 30 Jul 2003 17:33:18 -0700"
isosent="20030731003318"
name="Jon Dart"
email="jdart@tibco.com"
subject="Re: Burdett ML gap/fit analysis - first cut"
id="3F2863CE.1020608@tibco.com"
charset="us-ascii"
inreplyto="C1E0143CD365A445A4417083BF6F42CC053D1CA1&#64;C1plenaexm07.commerceone.com"
expires="-1"


To:"Burdett David"<david.burdett@commerceone.com>
CC:"'Ugo Corda'"<UCorda@SeeBeyond.com>,public-ws-chor@w3.org


I am not sure what you mean by separate specs.

Maybe I can rephrase the alternatives a little:

I have heard the view expressed that message-dependent decision making 
doesn't belong in the public choreography description at all.

If you want to keep flow independent of message structure, but allow 
message-dependent constructs, one solution is to have message selectors 
be part of a binding framework. I.e. there's a box in the choreography 
description itself, and it is the responsibility of an instantiator of 
that choreography to fill in the box, much as they would also fill in 
WSDL binding information. I think some such concept has been discussed 
earlier. This would make any kind of automatic verification/analysis 
difficult, however (see other thread on this).

If you're ok with the idea that a choreography description is associated 
with abstract WSDL, then you can have a more direct dependence on 
message structure, but I hear some concern about this.

So there are 3 possibilities here. I am not sure these are really 
mutually exclusive, IMO it is possible the same language could allow all 
these possibilities, although at the cost of some complexity. If this is 
done then which variant you get is a matter of whether you choose to 
restrict yourself to some subset of the available constructs, e.g. 
whether you decide to have no message-dependent logic and only model 
pure abstract flow. We could formalize this so that there's some kind of 
"abstractness" setting on the overall choreography and this restricts 
the available constructs, although expressing that in Schema could 
perhaps be difficult.

--Jon

Burdett, David wrote:
> Ugo
> 
> I agree that this needs clarification. I actually think that we could do 
> different specs, e.g:
> 1. Three specs where there is one spec for each of the three levels
> 2. Two specs where either Levels 1 and 2 are combined with a separate 
> Level 3, or Levels 2 and 3 are combined with a separet level 1
> 
> 3. A single spec covering all levels.
> 
> I'm not sure I know what the right answer is although my best guess 
> would be either separate specs (i.e. option 1) or a single spec in three 
> sections.
> 
> What are your thoughts?
> 
> David
> -----Original Message-----
> From: Ugo Corda [mailto:UCorda@SeeBeyond.com]
> Sent: Wednesday, July 30, 2003 1:10 PM
> To: Burdett, David; jdart@tibco.com
> Cc: public-ws-chor@w3.org
> Subject: RE: Burdett ML gap/fit analysis - first cut
> 
> 
> David,
> 
> I think I understand your levels. At the same time, your classification 
> makes me think that we need to better clarify how our choreography is 
> grounded on WSDL. In particular, we should clearly specify if and when 
> the specific message descriptors defined in WSDL interfaces can be used 
> (including things like abstract XPath selectors) when talking about 
> messages exchanged within our choreographies.
> 
> Without this clarification, many people would naturally infer from the 
> WDSL grounding that our choreography deals with messages at level 2.
> 
> Ugo
> 
>  > -----Original Message-----
>  > From: Burdett, David [mailto:david.burdett@commerceone.com]
>  > Sent: Wednesday, July 30, 2003 12:45 PM
>  > To: Ugo Corda; jdart@tibco.com
>  > Cc: public-ws-chor@w3.org
>  > Subject: RE: Burdett ML gap/fit analysis - first cut
>  >
>  >
>  > Ugo
>  >
>  > I was really thinking more of the abstract binding where a
>  > choreography is
>  > bound to abstract messages. Except I am *not sure* that port/interface
>  > levels are sufficiently abstract as you could have the same
>  > sequence of
>  > messages exchanged for the same purpose only they go between
>  > services with
>  > different port types/interfaces.
>  >
>  > I think there are three levels:
>  > 1. The pure choreography - i.e. independent of the message
>  > formats and also
>  > the port types/interfaces
>  > 2. Choreography bound to an abstract interface/port type
>  > 3. Interface/port type bound to a specific implementation
>  >
>  > Do these levels make sense?
>  >
>  > David
>  >
>  > -----Original Message-----
>  > From: Ugo Corda [mailto:UCorda@SeeBeyond.com]
>  > Sent: Wednesday, July 30, 2003 12:15 PM
>  > To: Burdett, David; jdart@tibco.com
>  > Cc: public-ws-chor@w3.org
>  > Subject: RE: Burdett ML gap/fit analysis - first cut
>  >
>  >
>  >
>  > Dave,
>  > You said:
>  >
>  > > Also a choreography should be able to work with multiple
>  > different message
>  > > formats therefore including a reference to single message
>  > format directly
>  > > into the choreography could be problematical.
>  >
>  > This depends on at which level you are talking about
>  > messages. If you are
>  > talking at the level of abstract messages (i.e.
>  > portType/Interface level in
>  > WSDL), then our choreography is based on those message
>  > descriptions (this
>  > comes directly from our own definition of Web services
>  > choreography, i.e.
>  > the fact that it is grounded on WSDL) and it should be
>  > legitimate to talk
>  > about those abstract message formats within the choreography itself.
>  >
>  > If you are talking about concrete message formats (after the
>  > WSDL interfaces
>  > defined in the choreography are bound to specific end points)
>  > then I agree
>  > with you that the choreography should not depend on them.
>  >
>  > Ugo
>  > 
>  >
> 



