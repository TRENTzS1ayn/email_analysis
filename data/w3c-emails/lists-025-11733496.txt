docno="lists-025-11733496"
received="Thu Jun  5 23:53:26 2003"
isoreceived="20030606035326"
sent="Thu, 5 Jun 2003 20:53:22 -0700 "
isosent="20030606035322"
name="Burdett, David"
email="david.burdett@commerceone.com"
subject="RE: Combining Policies (was RE: Partial executability/ determinis  m of  a Chor description     language"
id="C1E0143CD365A445A4417083BF6F42CC08391952@C1plenaexm07.commerceone.com"
charset="iso-8859-1"
inreplyto="Combining Policies (was RE: Partial executability/ determinis  m of  a Chor description     language"
expires="-1"


To: Assaf Arkin<arkin@intalio.com>,"Burdett, David"<david.burdett@commerceone.com>
Cc: Ricky Ho<riho@cisco.com>,"Yaron Y. Goland"<ygoland@bea.com>,public-ws-chor@w3.org


Assaf wrote ...

> <DB>People can always make the decision on which service (e.g. a bank 
> account) to use because they can read. Computers find it much harder 
> as they don't understand the semantics.</DB>
>
Probably not, but my computer can still make selections without having 
to understand semantics. The proposal I made was to name things, so you 
only need to recognize the names, and that a computer can easily do.

<DB2>OK, but who teaches the computer what the names mean and therefore
which one to chose. Unless the computer has some type of artificial
intelligence, then a human has to tell the computer what things mean and
we're back to square one - you still have to agree on what the names
mean.</DB2>

Not contradicting anything I'm saying. I could also make it a property 
in a UDDI entry and do a search based on that property. If only I could 
have something I could reference ;-)

<DB2>But who decides how these properties are recorded and what the
semantics of the properties are. Unless there is some standardization, you
won't get anywhere. The only other alternative is to us "natural language"
searching to identify what you are looking for which is what Google does so
well.</DB2>

David

-----Original Message-----
From: Assaf Arkin [mailto:arkin@intalio.com]
Sent: Wednesday, June 04, 2003 9:27 PM
To: Burdett, David
Cc: Ricky Ho; Yaron Y. Goland; public-ws-chor@w3.org
Subject: Re: Combining Policies (was RE: Partial executability/
determinis m of a Chor description language


Burdett, David wrote:

> <DB>It's only a done deal because: a) there are dominant networks like 
> Visa and Mastercard that can make it work, and b) they have been 
> working on it for decades. The issue is that for Web Services, right 
> now, there is no "done deal" and it will be some time before it gets 
> there. This means, that we should start thiking about what it takes to 
> help the "deal get done faster".</DB>
>
There are a lot of other scenarios like that. I don't care how they came 
to be, I know that they exist, and like Visa and Mastercard are very 
commonly used. So let's support them. I agree that we should also help 
the "deal get done faster". But where the agreement problem doesn't 
exist, why not leverage that?


> <DB>People can always make the decision on which service (e.g. a bank 
> account) to use because they can read. Computers find it much harder 
> as they don't understand the semantics.</DB>
>
Probably not, but my computer can still make selections without having 
to understand semantics. The proposal I made was to name things, so you 
only need to recognize the names, and that a computer can easily do.


>
> <DB>You could expose it as part of your WSDL definition. However 
> before it could be used, someone else would have to write software 
> that could interpret the semantics of the definition so that it could 
> make an appropriate decision. Although this is possible, I don't see 
> it happening unless and until there is some standardization of the 
> semantics around how you describe the rules and regulations as the 
> cost of developing the software for all the different ways of 
> describing the semantics would be prohibitive.</DB>
>
Not contradicting anything I'm saying. I could also make it a property 
in a UDDI entry and do a search based on that property. If only I could 
have something I could reference ;-)

arkin



