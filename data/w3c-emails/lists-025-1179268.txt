docno="lists-025-1179268"
received="Wed Apr 16 16:01:12 2003"
isoreceived="20030416200112"
sent="Wed, 16 Apr 2003 15:59:32 -0400"
isosent="20030416195932"
name="Jean-Jacques Dubray"
email="jjd@eigner.com"
subject="Pi-Calculus Metamodel"
id="00c801c30452$c5616670$096e050a@JJD"
charset="us-ascii"
inreplyto="3E9DA98F.2050108&#64;intalio.com"
expires="-1"

To:"'Assaf Arkin'"<arkin@intalio.com>,"'Steve Ross-Talbot'"<steve@enigmatec.net>
Cc:<public-ws-chor@w3.org>



I have created a tentative metamodel for pi-calculus, i.e. the kind of
thing you can express with it.

http://www.ebpml.org/metamodel.htm

I don't claim that this work is completed. I derived it from the
notation that I found in one presentation on the web. If anyone wants to
comment or point me to a more complete reference, I'll keep updating the
metamodel.

AFAIK, what people have in mind for ws-chor is what is labeled a
ProcessComposition in the metamodel.

See also my comments below.

JJ- 
 
 
>>>
>>
>>You can start with a collaboration definition given in say BPSS. That
>>can easily be represented using pi-calculus. JJ says that he cannot
see
>>the collaboration in P = Q | R, but pi-calculus can definitely see the
>>concurrent interacting processes in a BPSS definition by transforming
it
>>into the P = Q | R notation. You can then use pi-calculus and other
>>works in that area to draw interesting things about your BPSS
definition.


[JJ] I do not claim that pi-calc is useless (after all I established the
connection between pi-calc and BPSS in 2000 while the pi-calc camp (BPML
and BPEL) came to realize the importance of choreographies/collaboration
in 2002), I am just wondering if by adopting it as a metamodel we are
not creating many difficulties for the people that will use and consume
ws-chor, compared to the benefits that a few will gain. After all is
bi-simulation that necessary for most classes of applications of
ws-chor? As we talked about it many many times, the scenarios in which
web services interact with each other and that are designed in complete
isolation of each other and ultimately are brought to work together look
pretty rare to me. Now I don't rule out a tool vendor offering
bi-simulation services to qualify implementation (interoperability), but
shall we design the whole thing just because of this requirement?

As I said I am a strong believer of metadata driven software (being in
the enterprise software business, anything else would be surprising).
But I also know that specifying the right metamodel is key to its
usability and adoption. I do not claim that BPSS metamodel is the one we
should adopt. Again one design a metamodel based on requirements, there
is no absolute metamodel. ebXML has come up with an architecture which
is different from WS-Arch so I don't expect that WS-chor will be the
same as BPSS. ebXML scope is narrow (b2b), I believe that ws scope is
broader.



