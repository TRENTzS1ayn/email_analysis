docno="lists-025-13001766"
received="Fri Jun 20 09:17:52 2003"
isoreceived="20030620131752"
sent="Fri, 20 Jun 2003 07:28:20 -0600"
isosent="20030620132820"
name="Monica J. Martin"
email="monica.martin@sun.com"
subject="Re: FW: BPSS_f2f_june03.ppt"
id="3EF30BF4.2080504@sun.com"
charset="ISO-8859-1"
inreplyto="3EF255E9.2060900&#64;toolsmiths.se"
expires="-1"


To:"Anders W. Tell"<opensource@toolsmiths.se>
CC: Martin Chapman<martin.chapman@oracle.com>,public-ws-chor@w3.org


>
>
>> mm1: What is your view Anders, in the context of your area of 
>> expertise and/or as a member of this team? 
>
>
> View of what Monica? You know my view of next maintenance release of 
> BPSS which I posted in appropriate BPSS team forum. I dont want to 
> burden this with out of scope issues.


mm1: Your answer below is what I was looking for: (1) Rationale for 
consideration of MOF, (2) Your work and the ongoing work of UML 2.0

>
> I can share one view with you that may interest this groups and that 
> is how I prefer to create meta models. Its the same principle Ive used 
> for BPSS and CoreComponents.
>
> I have a strong preference to create meta models based on MOF which is 
> the same meta meta model used to define UML. By using MOF I can create 
> java API's, XML Schema, reading writing source code automatically 
> using standardized specifications. Kind of nifty since all I have to 
> do is create one single file and the rest us generated automatically. 
> The manipilation java binary code is actually generated on te fly when 
> loading the metamodel.  The best is that all is open source !
> ........

mm1: If you raise concerns, explanations such as these will be helpful 
for the group to evaluate what formalisms they deem appropriate for 
their area of interest.

Thanks.



