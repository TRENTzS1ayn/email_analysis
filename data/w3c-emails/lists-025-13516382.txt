docno="lists-025-13516382"
received="Wed Jun 25 12:56:23 2003"
isoreceived="20030625165623"
sent="Wed, 25 Jun 2003 09:56:15 -0700"
isosent="20030625165615"
name="Jon Dart"
email="jdart@tibco.com"
subject="Re: BurdettML comments"
id="3EF9D42F.10804@tibco.com"
charset="us-ascii"
inreplyto="C1E0143CD365A445A4417083BF6F42CC08391BB3&#64;C1plenaexm07.commerceone.com"
expires="-1"


To:"Burdett David"<david.burdett@commerceone.com>
CC:"'public-ws-chor@w3.org'"<public-ws-chor@w3.org>


Burdett, David wrote:

> Also in my spec I assumed that an Interaction was implmented by a single
> message (ignoring signals) sent from one role to another. In your example
> for "DoLogin" to succeed, you would need two messages the LoginRequest from
> the client to the server and the LoginResponse from the server to the
> client. The result could be either succeed or fail.

One issue here for me is how this maps into the SOAP/WSDL layer (if 
there is one). The simple way to implement login is with a request/reply 
MEP. Then there are two messages, as you suggest, but it is one 
operation, in the WSDL sense of the term. Maybe it should be possible to 
include such a MEP in the choreography without explicitly showing the 
two messages - it is a logical unit.

Generally, I am concerned about duplicating WSDL layer information into 
the choreography layer. When you have duplication you also have the 
possibility for the information to get out of sync.

Also re failure: if you are using SOAP, the WSDL tells you if a fault 
condition is possible. If this fault leads to a state transition it may 
need to be handled explicitly in the choreography. But perhaps there 
should be a default behavior (termination of the choreography?). Also 
something like the BPEL concept of fault handlers may be necessary. 
There is no equivalent concept in BurdettML, AFAIK.

--Jon



