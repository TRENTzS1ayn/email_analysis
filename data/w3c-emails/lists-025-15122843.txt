docno="lists-025-15122843"
received="Tue Mar 18 05:09:36 2003"
isoreceived="20030318100936"
sent="Tue, 18 Mar 2003 02:08:38 -0800"
isosent="20030318100838"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="RE: Web services composition"
id="IGEJLEPAJBPHKACOOKHNGELEDFAA.arkin@intalio.com"
charset="us-ascii"
inreplyto="E8EE5B80-5838-11D7-A85C-000393A3327C&#64;fla.fujitsu.com"
expires="-1"

To:"Francis McCabe"<fgm@fla.fujitsu.com>,<www-ws-arch@w3.org>,<public-ws-chor@w3.org>




> 3. There are a number of ways of resolving this:
>
> 3a. Associating the identifier of a Web service with its description
> rather than the computational resource.
>
> This would allow the n+1 names to be `hidden' behind 1 name: the URI of
> the composite Web service description; with the `low-level' function of
> associating particular messages' destinations and sources being
> effectively masked by the description.
>
> Note that this would mean that descriptions become a MUST have aspect
> of Web services.
>
> 3b. Not associating an identifier with a Web service at all: Web
> services would become epiphenomena of the interaction of Web service
> agents.  I.e., the WSDL description would identify the identity of the
> providing agent for each message exchange pattern, rather than any Web
> service itself.

What about another alternative. The composed Web service is known by it's
definition like any other Web service (WSDL). For the purpose of interaction
there is no distinction between a composed Web service, a non-composed Web
service.

Optionally you can learn of the composition by retrieving its definition
(WS-Chor). To interact with the service you need it's definition as given to
you regardless of composition. To improve visibility and understanding you
can retrieve the composition definition as a second step.

So that turns a requirement into an option, making the simple case simple,
but allow for more possibilities.

arkin

>
> 3c. Abandoning the explicit goal of Web service compositionality.
>
> 4. This is all about names: non-structural names are inherently
> non-composable. And names are pretty fundamental to the Web. (A
> non-structural name is one which cannot reflect the structure of the
> resource it is identified with. URIs are non-structural in this sense,
> LISP meta-structures that denote programs are structural; as might be a
> Web service choreography description.)
>
> Again, if I have missed something obvious, please forgive me, and
> enlighten me.
>
> Frank McCabe
>
>  From WordNet (r) 1.7:
>
> epiphenomenon
>       n : a secondary phenomenon that is a by-product of another
>           phenomenon



