docno="lists-025-6525451"
received="Wed Feb  5 01:25:21 2003"
isoreceived="20030205062521"
sent="Wed, 5 Feb 2003 16:24:34 +1000"
isosent="20030205062434"
name="Alistair Barros"
email="abarros@dstc.edu.au"
subject="RE: Same model for both Public and Private process ??"
id="HIEFLCBPHBOMEAGKKEPIIEEPCEAA.abarros@dstc.edu.au"
charset="us-ascii"
inreplyto="4.3.2.7.2.20030201220307.027f1f38&#64;franklin.cisco.com"
expires="-1"

To:"Ricky Ho"<riho@cisco.com>,<public-ws-chor@w3.org>



The previous attempts that I've seen
for defining the external view do indeed
adapt state machines (together with data
and external-internal data transformations).
The state machine provides an abstraction
over a *set* of process/workflows models
delivering a service.

The CCA model of the UML Profile for EDOC, which
is in FTF, provides an insight into the sorts of
requirements needed for external interactions.

Definitely a useful insight for this work.

Cheers, Alistair.

-----Original Message-----
From: public-ws-chor-request@w3.org
[mailto:public-ws-chor-request@w3.org]On Behalf Of Ricky Ho
Sent: Sunday, 2 February 2003 4:53 PM
To: public-ws-chor@w3.org
Subject: Same model for both Public and Private process ??



I have some confusion as described below ...

"Private process" is providing an internal implementation view of a party
in a long running business interaction when the party is implementing its
behavior using orchestration engine.  "Private process" is about specifying
the activities he takes in responding to an event (which can be receive a
particular message or send a particular message).  The process variables,
routing decisions... etc, describe the detail implementation logic is
clearly specified.  The modeling language (e.g. BPEL, BPML) is semantically
equivalent to a flow chart.

"Public process" is providing an external view of a party in a long running
business interaction regardless of whether that party is implementing his
behavior using an orchestration engine.  Public process is about specifying
all possible states of that party.  And then for each state, what events
are legitimate (event can be receive a particular message or send a
particular message) ?  And after that, what is all the "possible" next
states ?  The major difference is "public process" is NOT to describe which
route to take under what conditions.  Instead, it describe what are the
possibilities.  It seems to me a "state transition diagram" is a natural
fit to describe the "public process".

Therefore, I have a question if the "public process" should be based on a
completely different model (a "state transition diagram") than the "private
process" (a "flow chart diagram").  Correct me if I misunderstand, it seems
HP's WS-Conversation-Language is taking this approach.

But I also hear that "public process" can be described as a subset of a
"private process".  If you take out the "process variable", "assign
statements", and the "conditions" in the switch blocks and loops ... etc
from the "private process", then you will have the "public process".  In
other words, public process can be just use the same model of "private
process".  It seems WSCI and BPEL-private process is taking this approach.

I also heard that the "flow-chart" is equivalent to "state diagram".  They
are just a dual-representation to each other.

Any comments and thoughts ... ?

Best regards,
Ricky



