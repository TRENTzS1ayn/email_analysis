docno="lists-025-6611570"
received="Mon Feb 10 19:05:43 2003"
isoreceived="20030211000543"
sent="Mon, 10 Feb 2003 02:59:50 -0500"
isosent="20030210075950"
name="Pae Choi"
email="paechoi@earthlink.net"
subject="Re: Approaches to Web Services Choreography [was Same model for both Public and Private process ??]"
id="006901c2d0da$64c86da0$0b01a8c0@dev1"
charset="iso-8859-1"
inreplyto="000001c2d062$b43bb720$0502a8c0&#64;JJD"
expires="-1"


To:"Jean-Jacques Dubray"<jjd@eigner.com>,"'Assaf Arkin'"<arkin@intalio.com>,"'Ricky Ho'"<riho@cisco.com>
Cc:<public-ws-chor@w3.org>


This is an interesting thread and I'd like to make some comments.


> As I mentioned several times on this list and others I believe that
> there are 3 entities that need to be modeled (at least):
> - Collaboration (between business partners)

This is definitely needed component.

> - Internal business processes

I don't see why we need to dictate the internal business processes.
As long as we have defintions for inter-business processes, so-called
publicly visible agreement points, however each participants carry out
their responsibilities throughout the internal business precesses should
be their own right.

This will clearly seperate two business processes, inter-business
process(a.k.a., c12y) and intra-business process(a.k.a., workflow)
and make the intra-business process transparent to the other sides.
Taking a simple example from the OO sense, we define the publicly
visible "interfaces" for the services so called the abstract definition and
the reference implentations(RI) who carry out the responsibilites. We
may and more than likely have multiple RIs which are transparent to
the the other ends, users, participants, or so.

The point here is that we only need to define the interfaces for the
the item #1, "Collaboration", and the definition of internal busines
processes, i.e., RIs, be left to the those who carry out the
responsibilites.

More concretly, say we have a service in the web-tier, Account Balance
Statement, which is publicly visible service and the actual process whether
the process has a sequence of realization or not through out the
business, persistence, and other tiers. That should not be the concern
for those who access the service as long as it gets the result.

> - long running behavior of components (such as order entry) when
> participating in business processes and collaborations.

I can see the needs for this as well.


Any comments?


Pae



