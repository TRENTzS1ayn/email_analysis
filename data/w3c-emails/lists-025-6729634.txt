docno="lists-025-6729634"
received="Tue Feb 11 13:52:14 2003"
isoreceived="20030211185214"
sent="Tue, 11 Feb 2003 10:19:58 -0800"
isosent="20030211181958"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="RE: Approaches to Web Services Choreography [was Same model for both Public and Private process ??]"
id="IGEJLEPAJBPHKACOOKHNEEOADCAA.arkin@intalio.com"
charset="iso-8859-1"
inreplyto="015101c2d175$01dd3bd0$0502a8c0&#64;JJD"
expires="-1"

To:"Jean-Jacques Dubray"<jjd@eigner.com>
Cc:<public-ws-chor@w3.org>



> [JJ] So your argument is, since I can do it with WSCI, why do we even
> have a group to discuss ws-c12y? You could all vote immediately to adopt
> WSCI and be done with it? I am not sure everyone would agree with that.

My argument is that the model works, with proof, and therefore we should
discuss it on that basis and consider what lessons can be learned and ideas
used in the creation of a specification.

Naturally we come from different backgrounds and levels of experience, so we
disagree on what these lessons are and what ideas are useful. But let's keep
the discussion at the technical level.


> [JJ] Yes but in WSCI you need to express two API choreographies + a
> global model to achieve a collaboration choreography definition. So yes
> they all fit logically in a document, but that sounds like a lot more
> work compared to a BPSS specification.

I think you are confusing choreography with process or interface. The
choreography is described by the global model. Just like a BPSS
collaboration can include multiple transactions a WSCI choreography could
include multiple processes/interfaces by referencing them.


> [JJ] In my opinion, the mobility of Pi-calculus translates in the B2B
> world into the capability of a given business partner to conduct
> business with the same choreography specification regardless of the
> business partners it is physically working with. Something that BPSS can
> do without problem.

Are you sure?

I understand why you would want to claim that BPSS emodies the concepts of
process calculus and mobility. But let's be careful when making sweeping
statements like the above.


> [JJ] Sorry, I never meant to show that, I just noticed that even though
> WSCI relies on the modeling of n APIs, these API models need to be
> designed together rather than in complete isolation. I don't think that
> this is clearly stated in the WSCI spec (and I grant you that this is
> mode a documentation point, rather than a specification attribute).

That's a good point!

At least I learned one valuable lesson. The particular language used in the
WSCI specification does not aid the reader in understanding how to model
choreographies using the global model. I assume this ommission is also
present in the BPML specification.


It appears to me that all the objections to WSCI, BPEL4WS and BPML are based
on the ground that these specifications are rooted in the WSDL model. You
would rather see a choreography, I assume also execution, language that is
based on CPP/CPA, or a similar model.

I think I have said all I can say in defense of the WSDL model.

arkin



