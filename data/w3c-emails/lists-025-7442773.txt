docno="lists-025-7442773"
received="Thu Feb 27 17:08:48 2003"
isoreceived="20030227220848"
sent="Thu, 27 Feb 2003 14:07:16 -0800"
isosent="20030227220716"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="RE: Dubray paper comments + questions"
id="IGEJLEPAJBPHKACOOKHNCEFLDEAA.arkin@intalio.com"
charset="us-ascii"
inreplyto="3E5E87D9.3000707&#64;tibco.com"
expires="-1"

To:<jdart@tibco.com>
Cc:"bhaugen"<linkage@interaccess.com>,<public-ws-chor@w3.org>




> Assaf Arkin wrote:
> > For me it's appealing to have a language that can describe the
> choreography
> > of services and be part of the WS SOA. It's also appealing to have a
> > language that described pre-negotiated business collaborations. And it's
> > even more appealing if the service interaction resulting from a
> combination
> > of BPSS, RSS, CPA negotiation, etc could be described in terms
> of a service
> > choreography.
>
> I'm all for generality if it doesn't have an unacceptably high cost in
> terms of complexity. But I'm afraid it will have a high cost, if we set
> out to build a framework in which to model every possible form of
> interaction. So I am concerned about scope creep. I also don't want to
> duplicate what ws-arch is doing, namely, defining what constitutes a SOA
> at a very high level of abstraction.

On the contrary, we should conform to the WSA's definition of WS SOA at the
proper level of abstraction, and to the WSD's definition of a service
interface with WSDL being one possible syntax and a normative reference. So
no doubt their work will influence ours.

The question really boils down to simplicity. So at least three questions on
my side:

1. Is simplicity better achieved by basing the choreography language on the
same abstract model as proposed by the WSA, namely services and operations,
or is simplcity better achieved by defining another construct, defining the
choreography in terms of that construct, and defining mappings from that
construct to the WSA abstract model?

2. In electing a very simple and generic model based on already defined
communication idioms (Amy's term for what WSDL is working to define) helpful
in achieving simplicity of the choreography language?

3. Assuming we take these communication idioms for granted and try to
compose them into more complex long-running interactions, can we concieve a
fairly simple language for doing that?

arkin

>
>



