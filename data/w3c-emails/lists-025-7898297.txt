docno="lists-025-7898297"
received="Fri Jan 31 13:23:10 2003"
isoreceived="20030131182310"
sent="Fri, 31 Jan 2003 10:22:25 -0800"
isosent="20030131182225"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="RE: Yet Another Choreography Specification"
id="IGEJLEPAJBPHKACOOKHNKECLDCAA.arkin@intalio.com"
charset="iso-8859-1"
inreplyto="200301311151.44376.miles&#64;milessabin.com"
expires="-1"

To:"Miles Sabin"<miles@milessabin.com>,<public-ws-chor@w3.org>



I never thought of it that way, but you are absolutely right!

You could say that a file stream or a datagram are processes that are passed
by name from one process (isolate) to another process (isolate). And of
course an isolate process could be passed by name to another isolate
process.

arkin

> -----Original Message-----
> From: public-ws-chor-request@w3.org
> [mailto:public-ws-chor-request@w3.org]On Behalf Of Miles Sabin
> Sent: Friday, January 31, 2003 3:52 AM
> To: public-ws-chor@w3.org
> Subject: Re: Yet Another Choreography Specification
>
>
>
> Steve Ross-Talbot wrote,
> > I know Assaf has some experience of both pi and join calculus. I
> > could probably get Prof Robin Milner involved so that we can
> > understand more fully the relationship between the requirements that
> > we write down and the expressive power of pi-calculus. I am sure that
> > we would also be able to handle the blend of pi and PetriNets and
> > possibly show that one subsumes the other.
>
> Apologies in advance for the slightly off-topic content of the post.
>
> The Java Isolation API[1] currently being developed in the Java
> Community Process as JSR-121 and (hopefully) scheduled for inclusion in
> J2SE 1.5 has some distinctly Pi-ish aspects ... specifically the
> ability to pass communication channels across communication channels
> (ie. mobility).
>
> Whilst this isn't directly relevant to ws-chor, it's just possible that
> people could use it to get a flavour of Pi idioms without having to go
> through the learning curve that'd be needed to start working with one
> of the full-blown Pi-derived languages, eg. Pict[2] or Nomadic Pict[3].
>
> The motivation might also be of interest. We wanted to provide a high
> degree of communication flexibility between isolated computations with
> the minimum of API and supporting infrastructure. Mobility struck us as
> being close to ideal in that it allows for the construction of
> arbitrary communication topologies on the basis of a tiny number of
> very simple primitives.
>
> With any luck we'll have a reference implementation available for public
> download in the not too distant future (I've got to finish it first ;-)
> and if there's any interest, I'd be happy to post an announcement here.
>
> FWIW, Pete Soper (the EG lead) and I are hoping to present an informal
> paper on the relationships between JSR-121 and Pi to the workshop on
> "Formal Techniques for Java-like Programs" at ECOOP 2003.
>
> [1] http://jcp.org/aboutJava/communityprocess/review/jsr121/index.html
> [2] http://www.cis.upenn.edu/~bcpierce/papers/pict/Html/Pict.html
> [3] http://lsewww.epfl.ch/~pawel/nomadicpict.html
>
> Cheers,
>
>
> Miles



