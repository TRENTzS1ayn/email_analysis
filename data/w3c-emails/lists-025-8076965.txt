docno="lists-025-8076965"
received="Tue Jul  1 14:28:00 2003"
isoreceived="20030701182800"
sent="Tue, 01 Jul 2003 11:27:50 -0700"
isosent="20030701182750"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="Re: Choreography State Definition (was:  RE: More requirement"
id="3F01D2A6.6090304@intalio.com"
charset="us-ascii"
inreplyto="9A4FC925410C024792B85198DF1E97E406020398&#64;usmsg03.sagus.com"
expires="-1"


To:"Champion, Mike"<Mike.Champion@SoftwareAG-USA.com>
CC:"'WS Chor Public'"<public-ws-chor@w3.org>


Champion, Mike wrote:

> 
>
>  
>
>>-----Original Message-----
>>From: Jon Dart [mailto:jdart@tibco.com] 
>>Sent: Monday, June 30, 2003 4:35 PM
>>To: Steve
>>Cc: Monica J. Martin; Burdett David; Nickolas Kavantzas; 
>>Jean-Jacques Dubray; 'Yaron Y. Goland'; 'WS Chor Public'
>>Subject: Re: Choreography State Definition (was: RE: More requirement
>>    
>>
>
>  
>
>>The implication is that you have to treat reliable messaging 
>>as a "black box" at the choreography layer. I.e., if it 
>>exists, its supporting messages are not part of the message 
>>exchange captured at the choreography layer. It is a QOS, 
>>nothing more.
>>    
>>
>
>WSA is wrestling with trying to clarify the distinctions among
>"choreography", "MEP", etc.  "RM" seems to be in a similar state -- one
>might say that RM is a foundation on which choreography builds, or may say
>that the sequence of messages that implement an RM protocol can be described
>by a choreography language, or find some way of saying both.  
>
>I'm torn ... On one hand a RM protocol is a "choreography" ... But on the
>other hand sensible people will not want to consider RM messages when
>describing their application-level choreography.  
>
>I suspect that we can resolve this by somehow referring to the fact that
>choreographies can be composed of other choreographies, and the user or
>implementer of a choreography can treat the lower level choreographies as a
>black box. 
>So, MEPs and RM protocols are "choreographies" in a formal sense, but can be
>treated as primitive "events" from the point of view of an
>"application-level" choreography.
>  
>
Another possiblity is to treat it as "out of bounds".

Consider a port that is used to send/receive acknowledgments for the 
purpose of an RM protocol. Should such a port (or at least operation) be 
defined for each and every WSDL interface that supports some RM 
protocol? Or can that port be used "out of bounds" with respect to the 
actual service when the protocol selection/QoS dictates doing so? In the 
later case, the port is not defined as part of the service but indicated 
in the 'ackownledgment required' field of the sent message.

The same could also apply to the combination of choreography and RM. A 
high-level choreography definition could be written ignoring details 
related to RM by talking about specific interfaces. Where RM is used, 
the actual transport would involve additional interfaces/ports, which 
could well be defined by a different choreography. But being "out of 
bounds" the RM choreography is not directly used to compose the 
high-level choreography, but rather is used when the QoS dictates using it.

arkin



