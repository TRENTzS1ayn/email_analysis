docno="lists-025-9503234"
received="Fri Jul 18 05:41:23 2003"
isoreceived="20030718094123"
sent="Fri, 18 Jul 2003 10:41:15 +0100"
isosent="20030718094115"
name="Fletcher, Tony"
email="Tony.Fletcher@choreology.com"
subject="RE: Simple Choreography composition suggestion"
id="221369570DEDF346AE42821041345E891956E6@exchange1.corp.choreology.com"
charset="us-ascii"
inreplyto="Simple Choreography composition suggestion"
expires="-1"


To:"Ugo Corda"<UCorda@SeeBeyond.com>,<public-ws-chor@w3.org>


+1 from Tony

Best Regards     Tony
A M Fletcher
 
Cohesions  (TM)
 
Business transaction management software for application coordination
www.choreology.com
 
Choreology Ltd., 13 Austin Friars, London EC2N 2JX     UK
Tel: +44 (0) 20 76701787   Fax: +44 (0) 20 7670 1785  Mobile: +44 (0)
7801 948219
tony.fletcher@choreology.com     (Home: amfletcher@iee.org)


-----Original Message-----
From: public-ws-chor-request@w3.org
[mailto:public-ws-chor-request@w3.org] On Behalf Of Ugo Corda
Sent: 16 July 2003 21:40
To: Fletcher, Tony; public-ws-chor@w3.org
Subject: RE: Simple Choreography composition suggestion



> The point I disagree with is the notion that something is not a 
> Choreography if somewhere, at some level it involves 'orchestration' 
> within a single system.

I completely agree with you. If we take BPEL as an example of
orchestration, then the BPEL process interacts with a bunch of Web
services, and the process itself is a Web service (by definition). So we
have a few Web services (the BPEL process itself plus the other Web
services that BPEL interacts with) which exchange messages among
themselves - messages which most likely involves a change of state of
the various Web services involved. So this configuration of Web services
should be describable via a choreography (by definition).

For instance, let's look at the Purchase Order process described in BPEL
1.1 (sec. 6.1) as a concrete example. Seen from "outside" this BPEL
process is just a Web service exposing a purchaseOrderPT portType, so it
can take part in any choreography where other Web services interact with
this one using that particular portType.

But if we look "inside" the Purchase Order Web service itself, we find
out that it also interacts with other "internal" Web services, i.e. the
Invoice, Scheduling and Shipping Web services (by sending messages to
those Web services and by receiving messages from them on its
invoiceCallbackPT and shippingCallbackPT portTypes - all these message
exchanges being controlled by the BPEL process itself). So we can in
principle describe these four Web services and their interactions using
another choreography. And this latter choreography composes (i.e.
interacts) with the former one via messages exchanged over the
purchaseOrderPT portType.

Ugo

 



