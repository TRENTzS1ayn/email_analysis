docno="lists-025-9692539"
received="Fri Jul 18 16:13:59 2003"
isoreceived="20030718201359"
sent="Fri, 18 Jul 2003 13:13:41 -0700"
isosent="20030718201341"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="Re: Grounding Choreographies (the atoms) - WAS Simple Choreograph  y   composition suggestion"
id="3F1854F5.3040504@intalio.com"
charset="us-ascii"
inreplyto="C1E0143CD365A445A4417083BF6F42CC053D1C0B&#64;C1plenaexm07.commerceone.com"
expires="-1"


To:"Burdett, David"<david.burdett@commerceone.com>
CC: Frank McCabe<frankmccabe@mac.com>, Martin Chapman<martin.chapman@oracle.com>, Steve Ross-Talbot<steve@enigmatec.net>,"Champion, Mike"<Mike.Champion@SoftwareAG-USA.com>,public-ws-chor@w3.org


It all boils down to terminology. I'm not suggesting any, just pointing 
out a problem.

If we say "roles" and the WSA says "agents" then there's a mismatch. If 
the WSA defines an architecture in terms of agents interacting, but a 
choreography can't involve agents (that would be an orchestration) then 
we might have a problem there. We need to raise this and work out a 
terminology that is consistent across the board.

So going back to Frank's original e-mail, either I didn't understand 
what was said, or we need to better align the usage of terminology 
between the two groups.


As for what the interaction is, I much prefer if we talk in terms of 
WSDL interfaces. Then we won't have to go down into the details of HTTP, 
ack/resend, etc. When you express everything in terms of WSDL interface 
you are talking about these roles/agents interacting with each other. 
The protocol may end up using HTTP, it may include additional signals 
for RM, out-of-band signals for coordination, establish security 
context, whatever.

Since this is already taken care of by other specifications that you can 
plug-in, I would much prefer to focus solely on use of WSDL interfaces.

arkin

Burdett, David wrote:

>Assaf
>
>My take is that strictly speaking, a choreography is "A definition of the
>sequence and conditions in which a set of interactions occur between two
>roles".
>
>Where *interactions* include both individual (e.g. HTTP) messages as well as
>higher level concepts such as a single "reliably delivered message" which
>actually requires several HTTP message to implement, or at a even higher
>level, concepts such as a "Request for Quote". 
>
>Also roles can include, at a low level, general concepts such as a "sender"
>and "receiver" which could be appropriate when defining the choreography
>associated with a RM protocol, or such business level concepts such as
>"buyer" and "seller" when defining a business level protocol/choreography.
>
>In both cases roles defined in the choreography are abstract and need to be
>mapped to the physical instances which will often, but needn't be - as
>Martin mentioned, web services. If we say that Choreographies *always* have
>to be *between* web services then it precludes the choreography being used
>by something that is not a web service, which I don't think we want to do.
>
>My $0.02c.
>
>David
>
>  
>



