docno="lists-026-10988403"
received="Mon Feb 16 16:33:26 2004"
isoreceived="20040216213326"
sent="Mon, 16 Feb 2004 16:33:24 -0500"
isosent="20040216213324"
name="Farrukh Najmi"
email="Farrukh.Najmi@Sun.COM"
subject="Re: WSDL and pub/sub"
id="40313724.1020707@sun.com"
charset="ISO-8859-1"
inreplyto="40312B43.9FDA6971&#64;bah.com"
expires="-1"

To: Chiusano Joseph<chiusano_joseph@bah.com>
Cc: Ugo Corda<UCorda@SeeBeyond.com>,"Monica J. Martin"<Monica.Martin@Sun.COM>, Burdett David<david.burdett@commerceone.com>, Andrew Berry<andyb@whyanbeel.net>, Steve Ross-Talbot<steve@enigmatec.net>, WS Choreography<public-ws-chor@w3.org>



Chiusano Joseph wrote:

>Taking this one step further, and emphasizing that I am simply musing
>about this topic and not in any way representing the official position
>of the ebXML Registry TC:
>
>The only catch to this approach would be that - in the current ebXML
>Registry specs (and I don't represent this as a shortcoming in any way)
>- the subscription is represented using the native registry query
>mechanisms, while WS-Eventing wants an XPath expression as a filter.
>Here's an example from the ebXML Registry Services spec v2.5, in which a
>SQL Query expression is defined for a subscription:
>
>SELECT * FROM Service s, AuditableEvent e, AffectectedObject ao, 
>              Classification c1, Classification c2 
>              ClassificationNode cn1, ClassificationNode cn2 WHERE 
>         e.eventType = 'Created' AND ao.id = s.id AND ao.parent=e.id AND 
>         c1.classifiedObject = s.id AND c1.classificationNode =
>cn1.id           AND 
>         cn1.path LIKE '%Plumbing' AND 
>         c2.classifiedObject = s.id AND c2.classificationNode =
>cn2.id           AND 
>         cn2.path LIKE '%A Little Town%'
>  
>
In case it is not obvious, Joe's example above notifies the subscriber 
whenever a new plumbing related service is created within "A little town".

What follows is a little more background.

First ebXML Registry's features are an asset not a liability or "catch" 
(I know that is not what was implied above). They are designed the way 
they are so that they can address some very real world and demanding use 
cases.

ebXML Registry uses content-based event selection by means of an 
arbitrary ad hod query using the SQL and XML filter query syntax 
supported by the registry.

Consider this example from a recent draft of the WSRP - ebXML Registry 
technical note....

You can set up a subscription that notifies the subscribing web service 
when ever the following query (translated to English for ease of 
understanding) is satisfied:

The WSDL for a Web Service is published or update
AND it is classified as a WSRP Producer Service
AND it has a MIME binding
AND it uses the namespace  http://example.com
AND the service requires user registration
AND the service does not require cookie initialization

You get the idea. The query can be as domain and application specific as 
it needs to be and can contain predicates
that are based on the WSDL content and metadata.

 
These requirements will not go away as standards change. They are 
necessary for addressing reasonable use
cases for ebXML Registry. Instead the standards have to catch up and be 
able to address these requirements eventually.

We will therefor work with open standards in this area to make sure that 
our requirements are addressed reasonably within any new open standards. 
Until they do we will likely continue to use our existing solutions.

-- 
Regards,
Farrukh



