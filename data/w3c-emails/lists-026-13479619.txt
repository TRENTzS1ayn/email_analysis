docno="lists-026-13479619"
received="Tue Apr 30 05:19:31 2002"
isoreceived="20020430091931"
sent="Tue, 30 Apr 2002 11:19:23 +0200"
isosent="20020430091923"
name="Didier VILLEVALOIS"
email="dvillevalois@techmetrix.net"
subject="RE: Web Service Description Requirements published"
id="6CED7AD2680ED611BB8E0090276CE92401ED93B6@mail-paris.sqli.com"
charset="iso-8859-1"
inreplyto="Web Service Description Requirements published"
expires="-1"


To:public-ws-desc-comments@w3.org

> We invite comments on this document at public-ws-desc-comments@w3.org.
> We especially invite review and additional potential requirements from
> the following groups:
> 
>   Web Services Architecture Working Group
>   RDF Interest Group
>   XForms Working Group
> 
> - Jonathan Marsh, WS Desc WG Chair

Service composition and discovery is out of scope. But for an individual
web service, interface (in an object) is IMHO not sufficient for its correct
use. I think WSD would need a basic description of flow of method call
to appropriately use it.

For example, i may have a service that provides those two methods:
(sorry i'll do a simple RPC-based in Java)

interface MyService
{
public ... firstStep(...);
public ... secondStep(...);
}

I would have to describe that use of MyService is:
1. Call the firstStep() method
2. Then call the secondStep() method

I think this goes with fault description if we don't want to have a complete
workflow language (which is obviously out of scope). Maybe this should be
done by extending the SOAP hierarchy of faults. But shouldn't WSD have those
building blocks ?

I think this should take place in 'interactions with the client'
requirements.
I would express it like this:
"The description language MAY allow restricting/describing the possible flow
of messages between the Web Service and a Client. The description language
MAY
in particular allow describing what applicative Fault refers to what
incorrect
call flow."

Didier Villevalois.
didier@phpapp.org



