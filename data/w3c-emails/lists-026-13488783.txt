docno="lists-026-13488783"
received="Tue Apr 30 12:06:17 2002"
isoreceived="20020430160617"
sent="Tue, 30 Apr 2002 09:02:05 -0700"
isosent="20020430160205"
name="Jeffrey Schlimmer"
email="jeffsch@windows.microsoft.com"
subject="RE: Web Service Description Requirements published"
id="2E33960095B58E40A4D3345AB9F65EC106E147BB@win-msg-01.wingroup.windeploy.ntdev.microsoft.com"
charset="us-ascii"
inreplyto="Web Service Description Requirements published"
expires="-1"


To:"Didier VILLEVALOIS"<dvillevalois@techmetrix.net>,<public-ws-desc-comments@w3.org>

Didier, thank you for the clear feedback. I will add it to the list of
draft requirements to be discussed at an upcoming teleconference. While
few are likely to question the value of meeting such a requirement, I
suspect there will be considerable discussion about whether this
requirement is beyond the scope of the current WSDL effort.

--Jeff

-----Original Message-----
From: Didier VILLEVALOIS [mailto:dvillevalois@techmetrix.net] 
Sent: Tuesday, April 30, 2002 2:19 AM
To: public-ws-desc-comments@w3.org
Subject: RE: Web Service Description Requirements published

> We invite comments on this document at public-ws-desc-comments@w3.org.
> We especially invite review and additional potential requirements from
> the following groups:
> 
>   Web Services Architecture Working Group
>   RDF Interest Group
>   XForms Working Group
> 
> - Jonathan Marsh, WS Desc WG Chair

Service composition and discovery is out of scope. But for an individual
web service, interface (in an object) is IMHO not sufficient for its
correct
use. I think WSD would need a basic description of flow of method call
to appropriately use it.

For example, i may have a service that provides those two methods:
(sorry i'll do a simple RPC-based in Java)

interface MyService
{
public ... firstStep(...);
public ... secondStep(...);
}

I would have to describe that use of MyService is:
1. Call the firstStep() method
2. Then call the secondStep() method

I think this goes with fault description if we don't want to have a
complete
workflow language (which is obviously out of scope). Maybe this should
be
done by extending the SOAP hierarchy of faults. But shouldn't WSD have
those
building blocks ?

I think this should take place in 'interactions with the client'
requirements.
I would express it like this:
"The description language MAY allow restricting/describing the possible
flow
of messages between the Web Service and a Client. The description
language
MAY
in particular allow describing what applicative Fault refers to what
incorrect
call flow."

Didier Villevalois.
didier@phpapp.org



