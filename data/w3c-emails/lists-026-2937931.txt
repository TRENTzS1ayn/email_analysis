docno="lists-026-2937931"
received="Wed May 14 13:50:12 2003"
isoreceived="20030514175012"
sent="Wed, 14 May 2003 19:50:03 +0200 (CEST)"
isosent="20030514175003"
name="Stanislaw Ambroszkiewicz"
email="sambrosz@ipipan.waw.pl"
subject="Re: service type and the Semantic Web"
id="200305141750.h4EHo3t08989@ns.ipipan.waw.pl"
charset="us-ascii"
inreplyto="service type and the Semantic Web"
expires="-1"


To:public-ws-chor@w3.org,drew.mcdermott@yale.edu


  >  Of course, the "roots of the Semantic Web" are always 
  >  of interest, and perhaps not grown as deeply as we'd 
  >  like them to be, but one can pursue service descriptions 
  >  independently of the pursuit of better foundations for the SW.
  >  
  >                  -- Drew McDermott
  >      Professor of Computer Science
  >                  Yale University

Perhaps the ws-chor is not the right forum to discuss such 
fundamental problems. However, IMHO the idea of web services 
can not be realized without proposing a practical solution 
to the problem of meaning. Let me explain this claim. 

It is clear that communication between service requester 
and service provider is necessary. Note that both the 
requester and provider are supposed to be applications. 

The communication is realized at several levels.  
So that there must be interoperability at the transport 
level (e.g., HTTP), as well as at the message format level 
(e.g., SOAP, but I do not like it). 
There must be also interoperability at the message 
contents level, i.e., there must be a common contents language. 
The language is for expressing requests (on the side of requester), 
service types (on the side of providers), arranging service 
invocation, and perhaps for much much more. 
Language alone is merely a syntax. 
You are right that formal inference and axioms has nothing 
(or little) to do with "meaning."

IMO, meaning is not a thing that is here or there. 
I like very much the Wittgenstein's thesis that the meaning of language 
is in its use.  
Hence, the meaning is realized as the consensus on how to use 
the primitive concepts of the language. 
The consensus is a never ending process; some new concepts are introduced 
(according to some fixed conventions) whereas some old ones disappear. 
New complex notions are created as abstractions of the existing ones. 

The crucial point is to start the process from the very roots, i.e., 
from the really primitive concepts and to specify explicitly 
the abstraction rules.  

I did some practical (however, still initial) work towards this direction; 
see the documentation at http://www.ipipan.waw.pl/mas/enTish 

As to DAML-S, one still missing point (IMO, the crucial one) 
is the definition of well formed formulae to express precondition 
and effect of service invocation. 
IMO, precondition and effect formula together may (should!) 
serve for expressing the complete type of a service, i.e., also 
service interface. 

Best regards,
Stanislaw



