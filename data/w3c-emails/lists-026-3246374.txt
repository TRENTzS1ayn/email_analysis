docno="lists-026-3246374"
received="Mon May 19 18:56:26 2003"
isoreceived="20030519225626"
sent="Mon, 19 May 2003 17:54:06 -0500"
isosent="20030519225406"
name="Bob Haugen"
email="rhaugen@speakeasy.net"
subject="Re: Global view requires transactions (RE: Use Cases )"
id="006801c31e59$8d36b040$6601a8c0@PC1"
charset="iso-8859-1"
inreplyto="4.3.2.7.2.20030519094701.03532b90&#64;franklin.cisco.com"
expires="-1"


To:<public-ws-chor@w3.org>,"Ricky Ho"<riho@cisco.com>


Ricky Ho wrote:

> I think the "shared state" in this context means "shared visibility"
rather
> than "transactional update".  In other words, it is OK to have one
role
> just update its state unilaterally and communicate that result to
relevant
> partners.  Of course for certain business-specific process, the state
> change may need co-ordination among partners (e.g. how do I know my PO
has
> been accepted).

Those are exactly the kinds of state changes I have in mind.
A PO is an offer to buy. Acceptance forms a contract.
State changes to a contract need to be agreed upon
by all parties to the contract.  Call it what you will:
transaction, coordination, synchronization, agreement...
it's too common and critical to code adhoc every time.

Shared visibility would be true for a REST model
where all partners could GET a representation
of the current state of all shared resources.

Otherwise, all you got is messages over the wire
and maybe an agreed state chart.

The business transaction models I cited arose
from those situations:  contracts between partners,
agreed or standardized state chart, state changes effected
by message exchange in a set pattern.

They're related to but not the same as private
local transactions.

I'm not advocating a particular solution in this message.
Just raising the issue.



