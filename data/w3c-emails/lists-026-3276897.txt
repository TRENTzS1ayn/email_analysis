docno="lists-026-3276897"
received="Mon May 19 21:37:08 2003"
isoreceived="20030520013708"
sent="Mon, 19 May 2003 18:33:28 -0700"
isosent="20030520013328"
name="Assaf Arkin"
email="arkin@intalio.com"
subject="Re: Use Cases &amp; Requirements"
id="3EC985E8.706@intalio.com"
charset="us-ascii"
inreplyto="GMEOJGJFKALPDCNPFMDOOEKIDBAA.ygoland&#64;bea.com"
expires="-1"


To:"Yaron Y. Goland"<ygoland@bea.com>
CC: Jean-Jacques Dubray<jjd@eigner.com>,"'WS Chor Public'"<public-ws-chor@w3.org>


Yaron Y. Goland wrote:

>[1] I assume that by default any choreography is distributed such that each
>participant can only validate their own behavior. E.g. they know what
>messages they have sent and received and can validate those messages against
>the choreography. This doesn't preclude the existence of a central
>coordinator who could, in real time, detect every message sent by every
>participant and so validate the entire global system's state but the
>existence of this central coordinator is neither assumed nor required.
>  
>

+1

>[2] Originally the 'non-executable' requirement was called the 'declarative'
>requirement. Neither term particularly works. Hopefully in the official
>requirements we will find a better phrase.
>  
>
What you call non-executable I actually call executable. Different from 
an implementation, since a service can't execute a choreography on its 
own, it takes two to tango, and even all services involved can't execute 
the choreography based strictly on the choreography definition, they 
need more information than that (the implementation details). But at the 
end of the day, given the choreography they participate in and the 
implementation that acts on it, they end up executing the choreography.

Prose is not on of my favorite terms. It seems to suggest that perhaps 
XHTML might be a better starting point then say WSDL ;-)

arkin

>[3] Much thanks to Ricky Ho who pointed out to me that we really needed to
>write up the sort of cPl/cDl combined example I use here. The examples used
>here are inspired by his private communications with me.
>
>  
>
>>-----Original Message-----
>>From: Jean-Jacques Dubray [mailto:jjd@eigner.com]
>>Sent: Saturday, May 17, 2003 11:38 AM
>>To: 'Yaron Y. Goland'; 'WS Chor Public'
>>Subject: RE: Use Cases & Requirements
>>
>>
>>Yaron:
>>
>>Thanks for taking the time to write this paper, I think it makes a very
>>important and clear distinction between CPL and CDL, which fit well with
>>Martin's definition of orchestration.
>>
>>I agree pretty much with everything you say, except for one point: you
>>are talking about "prose" and "non-executable logic". I strongly
>>disagree with that point.
>>
>>If it is true that as a global view, a CDL does not have an engine to
>>ensure its execution, one of the value of a machine processable CDL is
>>that each party can validate the choreography of messages based on rules
>>defined in a CDL. So for me it is a requirement that the "prose" you are
>>talking about be machine processable.
>>
>>Again, if you are a big organization, you are going to receive in the
>>order of 100,000 to 1,000,000 messages per day. Having a CDL that help
>>you validate whether or not you are supposed to receive any of these
>>messages before you start processing them is going to save a lot of code
>>within each application (not too mention that a given choreography could
>>involve multiple of your applications, which would compound the
>>problem).
>>
>>However there is catch when expressing this business logic. In order for
>>each participant to "know" the state of the choreography, this business
>>logic can only be expressed on the information being exchanged by any
>>two parties. For instance we could not have a transition "if I approved
>>your order" because the buyer has no way to know this information from
>>the supplier unless you specifically exchange a message containing this
>>information. This type of information becomes "prose". Interestingly
>>enough, the business logic of CPL is the prose of CDL.
>>
>>Cheers,
>>
>>Jean-Jacques Dubray____________________
>>Chief Architect
>>Eigner  Precision Lifecycle Management
>>200 Fifth Avenue
>>Waltham, MA 02451
>>781-472-6317
>>jjd@eigner.com
>>www.eigner.com
>>
>>
>>
>>    
>>
>>>>-----Original Message-----
>>>>From: public-ws-chor-request@w3.org
>>>>        
>>>>
>>[mailto:public-ws-chor-request@w3.org]
>>    
>>
>>>>On Behalf Of Yaron Y. Goland
>>>>Sent: Freitag, 16. Mai 2003 21:20
>>>>To: WS Chor Public
>>>>Subject: Use Cases & Requirements
>>>>
>>>>
>>>>I would like to submit the following use cases and requirements for
>>>>consideration by the working group -
>>>>http://lists.w3.org/Archives/Public/www-archive/2003May/att-0029/chor.
>>>>        
>>>>
>>htm.
>>    
>>
>>>>Besides providing what I personally believe to be critical
>>>>        
>>>>
>>requirements
>>    
>>
>>>>for
>>>>the success of the working group I also think they help to outline
>>>>        
>>>>
>>what I
>>    
>>
>>>>believe to be the fundamental differences between what I think the W3C
>>>>Choreography WG should be doing and what the BPEL OASIS TC is doing.
>>>>        
>>>>
>>Of
>>    
>>
>>>>course all opinions on such differences are mine and mine alone, your
>>>>mileage may vary, objects in mirror are closer than they appear.
>>>>
>>>>Yaron
>>>>        
>>>>
>>    
>>


-- 
"Those who can, do; those who can't, make screenshots"

----------------------------------------------------------------------
Assaf Arkin                                          arkin@intalio.com
Intalio Inc.                                           www.intalio.com
The Business Process Management Company                 (650) 577 4700


This message is intended only for the use of the Addressee and
may contain information that is PRIVILEGED and CONFIDENTIAL.
If you are not the intended recipient, dissemination of this
communication is prohibited. If you have received this communication
in error, please erase all copies of the message and its attachments
and notify us immediately.



