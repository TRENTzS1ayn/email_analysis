docno="lists-026-3892483"
received="Thu May 22 16:12:42 2003"
isoreceived="20030522201242"
sent="Thu, 22 May 2003 13:11:48 -0700"
isosent="20030522201148"
name="Martin Chapman"
email="martin.chapman@oracle.com"
subject="RE: Co-ordination protocol and BPEL"
id="PEEBJKKCFNCENDPJDEMICEOHDDAA.martin.chapman@oracle.com"
charset="us-ascii"
inreplyto="4.3.2.7.2.20030522095947.033d1c78&#64;franklin.cisco.com"
expires="-1"

To:"Ricky Ho"<riho@cisco.com>,"Mark Little"<mark.little@arjuna.com>,<public-ws-chor@w3.org>


can we please take bpel conversations like this  off this list please.

Martin.
  -----Original Message-----
  From: public-ws-chor-request@w3.org
[mailto:public-ws-chor-request@w3.org]On Behalf Of Ricky Ho
  Sent: Thursday, May 22, 2003 10:06 AM
  To: Mark Little; public-ws-chor@w3.org
  Subject: Re: Co-ordination protocol and BPEL


  Mark,

      BPEL integration with WS-Tx
      ======================
      I'd like to see something like the following in BPEL


      <process>
          ....
          <sequence>
              .....
              <receive newScope="true" ....>
                  <scope>
                      <PrepareHandler> ... </PrepareHandler>
                      <CancelHandler> ... </CancelHandler>
                      <CommitHandler> ... </CommitHandler>
                      <CompensationHandler> ... </CompensationHandler>
                 </scope>
              </receive>
              .....
          </sequence>
      </process>


      Thoughts ??



    Ricky, what do you expect in your PrepareHandler, since BPEL doesn't
have a notion of preparing a transaction. Is this not a carry-over from BTP?

  My understanding of BPEL is they don't have the notion of "provisional
work".  So you do the real work and compensate it later.  Effectively, they
only have the <compensationHandler> and <cancelHandler>.  Their model is
certainly simpler but less sophisticated.  If you read by airline company
example and Assaf's solution, I think having a <prepareHandler> and
<commitHandler> is cleaner.

  I think this concept from BTP is pretty useful and I don't see much
additional complexities it brings.  Why drop that in BA ?

  Rgds, Ricky



