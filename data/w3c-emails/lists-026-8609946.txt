docno="lists-026-8609946"
received="Tue Oct 28 09:03:49 2003"
isoreceived="20031028140349"
sent="Tue, 28 Oct 2003 14:00:46 +0000"
isosent="20031028140046"
name="Steve Ross-Talbot"
email="steve@enigmatec.net"
subject="Fwd: [ws-chor] 10/17/2003: EAI Related Items Extracted From UC-004, UC-005"
id="20D09DB3-094F-11D8-8291-000393D13C9A@enigmatec.net"
charset="US-ASCII"
expires="-1"

To:public-ws-chor@w3.org




Begin forwarded message:

> Resent-From: member-ws-chor@w3.org
> From: "Monica J. Martin" <monica.martin@sun.com>
> Date: Fri Oct 17, 2003  8:49:47  pm Europe/London
> To: member-ws-chor <member-ws-chor@w3.org>
> Subject: [ws-chor] 10/17/2003: EAI Related Items Extracted From 
> UC-004, UC-005
>
> As promised, some domain of control details (enterprise) for my use 
> cases UC-004 and -005.
>
>    * Obligations for processing within an enterprise: May be based on
>      policy, intent or context outside of the choreography
>    * Application of business rules: May be based on policy, intent or
>      context input prior to or during the process. Input of rule may be
>      internal or external to the choreography.
>    * Processing handoff: Independent and dependent choreographies
>      (latter requires a return to 'parent' choreography) Response
>      requires return on results (on handle questionnaire).
>    * Handle questionnaire: Processing internal an application, with an
>      interface that interacts with a choreography.  This application
>      may or may not be a web service (legacy).
>    * Quality control check: The quality control check is actually a
>      function that is expressed simply, in this case, as a handling
>      questionnaire application. This raises the possibility of a
>      composed set of processes below the abstract choreography
>      definition (exposed as one choreography entry point). When an
>      event is interjected, it may occur in a process below the
>      choreography or within the choreography itself.  Raises the
>      questions of any validation dependencies between the two.
>    * Payment conditions: Rules could apply pre- and dynamically, and
>      may even apply post- with a change in the obligation in the
>      payment phase (penalties). For example, the outcome of the quality
>      control check issues a performance or functional penalty on the
>      seller, because of buyer requirements.
>    * Processing and sequencing controls: The variability of application
>      of rules become processing or sequencing controls within or into
>      the choreography.
>    * Exception handling: Introduces more complexity in fault handling
>      and compensation, if used, and how this affects the choreography.
>      Requires application handoffs for exceptions, as well as may
>      require propagation of those exceptions within or into an
>      application, process or the choreography. See picture below.
>
> In looking at this, it provides some practical insight into the 
> questions of whether transaction related 'knowledge' applies to or 
> interacts with a choreography.
>
> I will look through several other use cases to provide other feedback. 
>  It appears that some of the functions we are discussing may fall 
> within or across domains of control.
>
> Thank you.
>

> This email is confidential and may be protected by legal privilege. If 
> you are not the intended recipient,  please do not copy or disclose 
> its content but  delete the email and contact the sender immediately. 
> Whilst we run antivirus software on all internet emails we are not 
> liable for any loss or damage. The recipient is advised to run their 
> own antivirus software.



application/vnd.ms-powerpoint attachment: AlternativePath-Graphic-101703.ppt




