docno="lists-026-9987681"
received="Thu Apr 15 14:56:09 2004"
isoreceived="20040415185609"
sent="Thu, 15 Apr 2004 10:14:38 -0700"
isosent="20040415171438"
name="Nickolas Kavantzas"
email="nickolas.kavantzas@oracle.com"
subject="Re: question: relation between WS-CDL and WSCI"
id="407EC2FE.85A0BE13@oracle.com"
charset="us-ascii"
inreplyto="004301c4238b$f6ca5ce0$b06c9ad5&#64;titi"
expires="-1"


To: Titi Roman<dumitru.roman@deri.ie>
Cc: Assaf Arkin<arkin@intalio.com>, WS-Choreography List<public-ws-chor@w3.org>


See comments about WS-CDL below.

--
Nick

Titi Roman wrote:

> Hi Assaf,
> Thanks a lot for clarifying some things...still some questions in-line.
>
> ----- Original Message -----
> From: Assaf Arkin <arkin@intalio.com>
> To: Titi Roman <dumitru.roman@deri.ie>
> Cc: Steve Ross-Talbot <steve@enigmatec.net>; WS-Choreography List
> <public-ws-chor@w3.org>
> Sent: Tuesday, April 13, 2004 11:14 PM
> Subject: Re: question: relation between WS-CDL and WSCI
>
> > >I am a little bit confused here...In the WSCI 1.0
> > >(http://www.w3.org/TR/wsci/) in section 1.6.2 it says that WSCI "is
> > >declarative and cannot, by itself, be executed." (I also haven't heared
> > >about amy execution environments for WSCI). I understood that WSCI
> possess
> > >an operational semantics, did you refer to this when you said that WSCI
> was
> > >an executable language?
> > >
> > >
> > WSCI was definitely not intended to be executable, but describe the
> > observable message exchange between the participants. It did focus on a
> > level of abstraction that some other proposals would consider
>
> Which are these other proposals(I am just trying to understand what you
> meant by "any language can be viewed as operational compared to a more
> abstract language")?
>
> > "operational", but any language can be viewed as operational compared to
> > a more abstract language.
> >
> > >Why do you need a formalism in the choreography context (where can be
> seen
> > >the usefulness of using such a fomalism for a choreography language)?
> Where
> > >is it actually needed?
> > >
> > >
> > Formalism allows you to make a lot of proofs about the language itself,
> > but more interesting, about the specifications you produce using that
> > language. In the case of WSCI, formalism becomes more important as a way
> > to derive conclusions about compositions, and it allows you to leverage
> > the extensive work done in the field of process calculus.
>
> Does these mean that WSCI is really dead (as Steve Ross-Talbot pointed out
> in one of his emails)?
>
> As far as I understood and please correct me if I am wrong, WS-CDL supports
> only "global model"(i.e. the multi-participant view of the overall message
> exchange) - this sounds to me as a static linking between web services. What
> about the dynamic linking between ws from the point of view if
> coneversation?

Why does the global model implies static linking? I am not sure I understand this.

And what is the dynamic linking between ws from the point of view of the
coneversation? Can you elaborate on this more?

> What about the view of the overall message exchange as seen
> from one participant? Isn't WS-CDL supposed to support also this view?
>

I have filled an issue for this in the Cambridge F2F and myself and Steve have
an action item to present our proposal to the group.

Maybe you have some insights that can help the group one way or another?

>
> In this context still my previuos questions:
>
> Where exactly is pi-calculus used in WS-CDL and what scenarios by using
> pi-calculus in this context do you predict?

Please take a look at the latest e-mail sent to the list by Nobuko (one of our
2 invited experts) on this.

>
>
> When you choosd pi-calculus as the underlying fromalizm for WS-CDL, I
> suppose you had some reasons for choosing it and not other
> formalisms...could you point out shortly these reasons?

I would advise you to look into our archieves, since we had very strong
debates in the last 1 year about the usefuleness of a formal
model - being pi-calculus/or a flavour of pi-calculus, event calculus, a
less constrained computational model like CCS, etc. - as the
basis of the CDL language.


>
>
> Thanks a lot!
> Titi Roman



