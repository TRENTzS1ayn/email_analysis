docno="lists-027-11689222"
received="Tue May  6 05:23:24 2003"
isoreceived="20030506092324"
sent="Tue, 6 May 2003 11:23:16 +0200"
isosent="20030506092316"
name="Hugo Haas"
email="hugo@w3.org"
subject="Re: Draft language on MEPs, synchronous, and asynchronous."
id="1059641615.IAA22192@phantom.w3.org"
charset="us-ascii"
inreplyto="7A7345C5-7BFA-11D7-9E81-000393C53568&#64;sun.com"
expires="-1"

To: Geoff Arnold<Geoff.Arnold@Sun.COM>, Francis McCabe<fgm@fla.fujitsu.com>
Cc:public-wsawg-gloss@w3.org



Hi Geoff and Frank.

I am using the glossary mailing list to work on this to avoid a big
controversy on www-ws-arch when I want to discuss purely editorial
issues. I want to figure out how to include Geoff's work in the
current glossary.

* Geoff Arnold <Geoff.Arnold@Sun.COM> [2003-05-01 13:29-0400]
> Draft language for the WSA Glossary on Message Exchange
> Patterns, Synchronous MEPs, and Asynchronous MEPs.
> 
> In general, my objective is to beef up the MEP concept, to tie
> "synchronous" and "asynchronous" to MEPs, and to note that
> they are really just informally descriptive terms. I've incorporated
> comments from Chris Ferris and others, but any problems are due to me.

Is this text only intended for the glossary or will it be integrated
in the architecture document?

It seems to me that it should go in the architecture document and that
a light version should go in the glossary. This seems more detailed
than any other definition in the glossary. See below.

> Asynchronous Message Exchange Pattern
> See discussion under Message Exchange Pattern
> 
> -------------------------------------------------
> 
> Synchronous Message Exchange Pattern
> See discussion under Message Exchange Pattern
> 
> -------------------------------------------------
> 
> Message Exchange Pattern (MEP)
> [Derived from 
> http://www.w3.org/TR/2002/WD-soap12-part1-20020626/#soapmep ]
> A MEP is a template that establishes a pattern for the exchange of 
> messages
> between SOAP nodes.

I would stop the definition of MEP here.

> A MEP MAY be supported by one or more underlying protocol binding
> instances.
>
> This section is a logical description of the operation of a MEP. It is 
> not
> intended to describe a real implementation or to imply that a real
> implementation needs to be similarly structured.
> 
> In general the definition of a message exchange pattern:
>   * Is named by a URI.
>   * Describes the life cycle of a message exchange conforming to the 
> pattern.
>   * Describes the temporal/causal relationships of multiple messages 
> exchanged
>     in conformance with the pattern.
>   * Describes the normal and abnormal termination of a message exchange
>     conforming to the pattern.
> 
> Underlying protocol binding specifications can declare their support 
> for one or
> more named MEPs.
> 
> [New language]
> In principle, MEPs may be arbitrarily complex, and may include various
> temporal relationships between messages.  In practice, there is a small 
> number
> of patterns for which the temporal relationships are well (if 
> informally)
> understood. MEPs which describe closely coupled, or lock-step 
> interactions
> are frequently referred to as "synchronous". Examples include RPC-style
> request-response interactions and some kinds of transactional exchanges.
> Other MEPs allow messages to be sent without precise sequencing, and 
> these
> are described as "asynchronous". Examples include a flow of sensor event
> messages which need not be individually acknowledged, and an auction in 
> which
> parties may submit bids at any time during the auction.

Based on this, we would define in the glossary (taking into account
Mike's friendly amendment):

- synchronous MEP: an MEP which describe closely coupled in time, or
  lock-step interactions.

- asynchronous MEP: an MEP which doesn't describe closely coupled in
  time, or lock-step interactions.

> The terms "synchronous" and "asynchronous" are descriptive, and do
> not correspond precisely to properties of MEPs. Occasionally the
> terms may be associated with particular message transport features,
> such as the re-use of a session. While specific implementations may
> support such notions, a dependency on such a feature would violate
> protocol independence, and therefore be problematic.
> 
> Many (most?) web services do not use published MEP's, but instead rely
> on more or less informal patterns and techniques. In such cases, the
> terms "synchronous" and "asynchronous" may be used to indicate the
> type of informal pattern being used. They may also indicate whether
> or not coordination and synchronization techniques such as correlation
> data and particular transport bindings are to be used.

We could add the first sentence of the first paragraph, along with a
pointer to the relevant section of the architecture document where
this detailed explanation lives.

Does this make sense?

Regards,

Hugo

-- 
Hugo Haas - W3C
mailto:hugo@w3.org - http://www.w3.org/People/Hugo/



