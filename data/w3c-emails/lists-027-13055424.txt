docno="lists-027-13055424"
received="Fri Apr  9 13:05:00 2004"
isoreceived="20040409170500"
sent="Fri, 9 Apr 2004 13:03:39 -0400"
isosent="20040409170339"
name="Daniel Veillard"
email="veillard@redhat.com"
subject="Re: Comments on initial draft of xml:id"
id="20040409170338.GI1642@redhat.com"
charset="us-ascii"
inreplyto="Comments on initial draft of xml:id"
expires="-1"

To: Elliotte Rusty Harold<elharo@metalab.unc.edu>
Cc:public-xml-id@w3.org



> I'm not sure I agree with the statements "DTD authors should not 
> declare attributes other than xml:id as type ID for interoperability 
> with XML Schema- and non-validating processors. No interoperability 
> guarantees are provided in these cases." and "XML Schema authors 
> should not declare attributes other than xml:id as type xs:ID for 
> interoperability with DTD- and non-validating processors. No 
> interoperability guarantees are provided in these cases." There are 
> just too many existing applications that use ID, Id, and id as 
> ID-type attribute values. XHTML is one. Is there any way to just note 
> the issue of interoperability, without making it as strong as a 
> "should"?

  It's "should not" but I think you are right.
Maybe for those 2 sentences some rewording like

"DTD authors are advised to not use attributes other than xml:id as type ID
if they seek interoperability with XML Schema- and non-validating processors."
  
  for the DTd case and similary for the Schemas case.

> Section 4.3 states, "If those conditions are not satisfied then the 
> processor should report the error to the application.". Can this be 
> made more clear about "error"? In particular is this is a fatal or 
> non-fatal error?  Please, please don't let this be another of those 
> annoying cases where some parsers go one way and some go another. I 
> prefer this to be an explicitly non-fatal error, since that's more 
> backwards compatible.

  I think I just posted an answer about this in my previous mail,
basically report the error if possible but make it non-fatal, that
seems the best considering the definition of MUST in rfc2119.

> Section 4.3 also states, "The attribute value must be a valid 
> NCName." I think this should be "The *normalized* attribute value 
> must be a valid NCName."

  Hum, good point, we would then have to define which normalization,
i.e. start and end whitespace stripping as for DTD validation in that case.

Daniel

-- 
Daniel Veillard      | Red Hat Network https://rhn.redhat.com/
veillard@redhat.com  | libxml GNOME XML XSLT toolkit  http://xmlsoft.org/
http://veillard.com/ | Rpmfind RPM search engine http://rpmfind.net/



