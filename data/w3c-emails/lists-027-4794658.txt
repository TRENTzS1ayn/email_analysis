docno="lists-027-4794658"
received="Tue Jun 17 10:55:59 2003"
isoreceived="20030617145559"
sent="Tue, 17 Jun 2003 20:55:58 +0600"
isosent="20030617145558"
name="Sanjiva Weerawarana"
email="sanjiva@watson.ibm.com"
subject="Re: agenda for today's MEP call"
id="0dcb01c334e0$97f72120$72545ecb@lankabook2"
charset="iso-8859-1"
inreplyto="20030617104154.73671f86.alewis&#64;tibco.com"
expires="-1"


To:"Amelia A. Lewis"<alewis@tibco.com>
Cc:<dbooth@w3.org>,<public-ws-desc-meps@w3.org>


"Amelia A. Lewis" <alewis@tibco.com> writes:
> 
> I don't believe that the requirements put forward by SOAP/XMLP are what
> is driving the attempt to better define patterns.  I believe that the
> primary drivers come from the folks who are creating tools that generate
> client stubs.  The primary argument seems to be that, if an input/output
> pattern is defined using only direction, cardinality, and sequence, then
> the client cannot expect to get a response, to be the only person
> getting a response, and may receive responses without sending requests.

IIRC the whole MEP thing started as a way to deal with the
outbound operations problem. The problem of course was that
different people had different interpretations of the outbound
ops. The idea was that MEPs would provide a way to provide
clarity and semantics to make it clear to all what the various
patterns are.

I think we should restrict ourselves to clarifying the outbound
patterns rather than exploding the simple request-response MEP.
My point about SOAP 1.2 was to point out that it appears that
SOAP can live with a single r-r MEP and so why can't we?

> I believe that choreography languages could probably also benefit from
> better definition of where messages go ("out" from the service may not
> be enough), or where they come from (if those languages use WSDL as a 
> base, that is).

I'm a co-author of two WSDL-based choreography languages (WSFL and
BPEL) and neither needed this. BPEL uses partners to solve the where
do messages come from and where do they go problem. 

We haven't seen how MEPs will materialize in WSDL yet, but I am
concerned that we're introducing a lot of complexity to handle
somewhat edge cases. I guess I'll have to wait and see.

Sanjiva.



