docno="lists-027-6274051"
received="Tue Jul  1 12:21:11 2003"
isoreceived="20030701162111"
sent="Tue, 1 Jul 2003 17:20:44 +0100"
isosent="20030701162044"
name="Savas Parastatidis"
email="Savas.Parastatidis@newcastle.ac.uk"
subject="RE: attributes in CORBA IDL"
id="BC28A9E979C56C44BCBC2DED313A447001D75B78@bond.ncl.ac.uk"
charset="us-ascii"
inreplyto="attributes in CORBA IDL"
expires="-1"


To:"Jeff Mischkinsky"<jeff.mischkinsky@oracle.com>,"Philippe Le Hegaret"<plh@w3.org>,"Sanjiva Weerawarana"<sanjiva@watson.ibm.com>
Cc:<public-ws-desc-state@w3.org>,"Steve Graham"<sggraham@us.ibm.com>


Jeff,
[snip]

> 
> I don't if this is relevant, but there IS a set of mandated operations
on
> all CORBA objects, those that are inherited from the base
CORBA::Object
> type. (Technically although the signatures are expressed in IDL, each
> language mapping defines how they are materialized in that language.)
> 
> interface Object {
>       InterfaceDef get_interface ();
>       boolean is_nil();
>       Object duplicate ();
>       void release ();
>       boolean is_a ( in RepositoryId logical_type_id );
>       boolean non_existent();
>       boolean is_equivalent ( in Object other_object );
>       unsigned long hash( in unsigned long maximum );
>       void create_request ( .... [ parms snipped ] );
>       Policy get_policy ( in PolicyType policy_type );
>       DomainManagersList get_domain_managers ();
>       Object set_policy_overrides(
>           in PolicyList policies,
>           in SetOverrideType set_add
>           ) raises (InvalidPolicies);
>       Policy get_client_policy( in PolicyType type );
>       PolicyList get_policy_overrides( in PolicyTypeSeq types );
>       boolean validate_connection( out PolicyList
inconsistent_policies );
>       Object get_component ();
>      };
> };
> 
>    So for example you can invoke a get_interface() operation which
returns
> the metadata describing the inteface on all object references.

I agree that this is the case. However, this is part of the CORBA
specification and NOT of the IDL specification. It has been my case all
along in this mailing list that interface and behavioural
requirements/semantics should be defined by other specifications and NOT
by the WSDL specification. The WSDL specification should just provide
you with the means to write such specifications.

WSDL is not the specification to define an object-based component model.
That's the responsibility of the CORBA and DCOM specifications. It seems
that the OGSI people want to define a similar component model for web
services. Despite the fact that I disagree with the approach taken by
OGSI, I am confident that WSDL is not the place to do that.

.savas.



