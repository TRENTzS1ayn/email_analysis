docno="lists-027-6550122"
received="Fri Jul 11 08:16:53 2003"
isoreceived="20030711121653"
sent="Fri, 11 Jul 2003 13:16:55 +0100"
isosent="20030711121655"
name="David Snelling"
email="d.snelling@fle.fujitsu.com"
subject="Re: attributes &amp; WSDL (was: Re: attributes in CORBA IDL)"
id="BB346947.17B6%d.snelling@fle.fujitsu.com"
charset="US-ASCII"
inreplyto="003201c346f1$cf754e60$880a090a&#64;kyle"
expires="-1"

To: Jim Webber<jim.webber@arjuna.com>,<public-ws-desc-state@w3.org>


Jim,

On 10/7/03 15:44, "Jim Webber" <jim.webber@arjuna.com> wrote:

> I worry that including these kind of mechanisms will turn WSDL into the XML
> equivalent of C++ header files, and that as a result developers make bad
> decisions about the granularity of service interactions.

In one way this is probably true, but language designers have always aimed
to prevent bad designs, but developers will always find a way to mess up.

> If we move away from the idea of WSDL as an IDL, and think about WSDL as a
> protocol description language then I believe that things like this
> constant/static mechanism are unnecessary (since we use WSDL to describe
> message format and binding, and not the interface of an agent per se).

Just to get this clear in my mind - you would recommend having
WSDL-attributes declared and some way to access them (which is not the issue
in this thread), but not provide a way to include and attribute values in
the WSDL.

Is this view correct? If I have it right, then I will make a stab at the
impact it might have on Grid Services.

> In fact if we look at things this way, the notion of a stateful service
> becomes much less the domain of the protocol description and much more a
> feature of a particular deployed architecture. All the protocol description
> would have to ensure is that the right contexts are passed around to ensure
> that state can be rehydrated in response to the receipt of messages.

I think I see where you are going. In this case I would call the
GridServiceHandle the context. The WSDL service then uses this information
to appear 'stateful' regardless of its actual implementation.

In the current OGSA architecture, this handle is mapped to a reference
(usually an endpoint) which exposes the instance nature of the service. The
important point here is that the OGSA architecture does not actually have a
bit of context that is passed to a service endpoint to 'rehydrate' the
state. Without additional (application level information), any client
talking to that endpoint talks to the same instance.

-- 

Take care:

    Dr. David Snelling <d.snelling@fle.fujitsu.com>
    Fujitsu Laboratories of Europe
    Hayes Park Central
    Hayes End Road
    Hayes, Middlesex  UB4 8FE

    +44-208-606-4649 (Office)
    +44-208-606-4539 (Fax)
    +44-7768-807526  (Mobile)






text/plain attachment: InterScan_Disclaimer.txt




