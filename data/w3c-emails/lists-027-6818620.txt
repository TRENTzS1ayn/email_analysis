docno="lists-027-6818620"
received="Thu Jul 17 11:52:03 2003"
isoreceived="20030717155203"
sent="Thu, 17 Jul 2003 16:51:14 +0100"
isosent="20030717155114"
name="Savas Parastatidis"
email="Savas.Parastatidis@newcastle.ac.uk"
subject="RE: attributes &amp; WSDL (was: Re: attributes in CORBA IDL)"
id="BC28A9E979C56C44BCBC2DED313A447001EC3173@bond.ncl.ac.uk"
charset="us-ascii"
inreplyto="attributes &amp; WSDL (was: Re: attributes in CORBA IDL)"
expires="-1"


To:"Steve Graham"<sggraham@us.ibm.com>
Cc:"David Snelling"<d.snelling@fle.fujitsu.com>,"Jim Webber"<jim.webber@arjuna.com>,<public-ws-desc-state@w3.org>,<public-ws-desc-state-request@w3.org>


> 
> This is an on going debate.
> 
> I don't see SOA and Object Oriented at odds at all.  When I worked up
SOA
> within IBM three or so years ago, there was absolutely no notion of
> statelessness being a pre condition of a SOA.  Furthermore, object
> orientation was very much a part of the model, encapsulation,
inheritance
> etc.
> 

Web Services follow the SOA model, no? The Web Services community has
decided that services are stateless (WS-Arch document). So, that's the
model we have to live with and build our solutions on. I happen to think
that this model is the correct one (surprise surprise :-)

You are probably referring to CORBA-based services. I agree that CORBA,
in addition to the object-based architectural model that it defined at
the beginning, it went on to deal with services-oriented architectures.
However, it had to carry all that baggage of an object-based
infrastructure for distributed computing and as a result failed
miserably in cross-organisation-boundary deployments. This is where the
Web Services model may be more successful. Why try to introduce
CORBA-like features to Web Services before their usefulness is proved or
disproved?

Don't get me wrong. I like object-orientation a lot. However, I don't
think object-based architectures are appropriate for a loosely coupled,
inter-organisation environment. That's why I have expressed my concerns
about OGSI and some of the new "features" that the Grid community is
introducing into Web Services.

.savas.



