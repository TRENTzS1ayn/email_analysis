docno="lists-027-6851621"
received="Fri Jul 18 13:17:42 2003"
isoreceived="20030718171742"
sent="Fri, 18 Jul 2003 10:17:15 -0700"
isosent="20030718171715"
name="Krishna Sankar"
email="ksankar@cisco.com"
subject="RE: attributes &amp; WSDL (was: Re: attributes in CORBA IDL)"
id="004e01c34d50$7a278a80$1b0d47ab@amer.cisco.com"
charset="us-ascii"
inreplyto="OF28A9145F.16AB9ADF-ON85256D66.005A0F81&#64;us.ibm.com"
expires="-1"

To:"'Steve Graham'"<sggraham@us.ibm.com>,"'Savas Parastatidis'"<Savas.Parastatidis@newcastle.ac.uk>
Cc:<public-ws-desc-state@w3.org>,<public-ws-desc-state-request@w3.org>



Methinks ;-) :

Objects and services are, in some sense, orthogonal.

Let us not confuse interfaces with implementations. Interfaces
cross boundaries while implementations are always local. SOA, in a way,
is a mechanism to string the objects.

The WS stuff, in some sense, are interfaces to define, describe,
distribute, discover and execute services. The services themselves would
be implemented in OO systems, COBOL or any other way the service
provider chooses.

Double-clicking one more level, we have the object system and
the interfaces. We also have the wire format - which is what many of the
WS specifications are trying to standardize. Remember the wire format
not only includes the exchange of information and context (SOAP, SAML)
but also the capability to express one's infrastructure (using
WS-Policy, WS-federation et al). We also have the option to build higher
level abstractions by chaining services, using choreography,
transactions and other similar mechanisms.

objects -> fronted by -> services -> chained by ->
choreography/transactions

services -> use wire format (XML/SOAP/SAML) -> to exchange
information and express capabilities, policies

services -> expressed by -> interfaces (WSDL)

-k.


> -----Original Message-----
> From: public-ws-desc-state-request@w3.org 
> [mailto:public-ws-desc-state-request@w3.org] On Behalf Of Steve Graham
> Sent: Thursday, July 17, 2003 9:25 AM
> To: Savas Parastatidis
> Cc: public-ws-desc-state@w3.org; public-ws-desc-state-request@w3.org
> Subject: RE: attributes & WSDL (was: Re: attributes in CORBA IDL)
> 
> 
> 
> 
> 
> 
> 
> I do not concur that Objects imply tight coupling.  They are 
> orthogonal
> concepts.  I have built systems using Object TEchnology that are very
> loosely coupled.
> 
> CORBA and DCOM did not fail.  They had certain successes, but 
> they are not
> mainstream.  COBOL, for example, is not currently top of 
> mind, but I would
> not say that COBOL failed.
> 
> sgg
> 
> ++++++++
> Steve Graham
> sggraham@us.ibm.com
> (919)254-0615 (T/L 444)
> STSM, On Demand Architecture
> ++++++++
> 
> 
> 
>                                                               
>                                                               
>                    
>                       "Savas Parastatidis"                    
>                                                               
>                    
>                       <Savas.Parastatidis@newca        To:    
>    Steve Graham/Raleigh/IBM@IBMUS                             
>                    
>                       stle.ac.uk>                      cc:    
>    <public-ws-desc-state@w3.org>                              
>                    
>                       Sent by:                         
> Subject:  RE: attributes & WSDL (was: Re: attributes in CORBA 
> IDL)                      
>                       public-ws-desc-state-requ               
>                                                               
>                    
>                       est@w3.org                              
>                                                               
>                    
>                                                               
>                                                               
>                    
>                                                               
>                                                               
>                    
>                       07/17/2003 12:19 PM                     
>                                                               
>                    
>                                                               
>                                                               
>                    
>                                                               
>                                                               
>                    
> 
> 
> 
> 
> 
> >
> > >I don't think object-based architectures are appropriate for a
> loosely
> > coupled,
> > >inter-organisation environment.
> >
> > Why?
> 
> 
> Objects imply a tightly coupled system. It's ok to build distributed
> applications using objects when you own the infrastructure, when you
> remain within the boundaries of your organisation. You have tighter
> control of what is going on.
> 
> Once you start talking about inter-organisation, loosely coupled
> infrastructures, you have to live in an environment where you 
> don't have
> control. My organisation will not allow you to create objects
> representing the resources I maintain. I am providing a service, an
> interface to what I want you to see. I am telling you the 
> messages that
> you can exchange with me but not the resources that are 
> hidden behind my
> service interface. I am not going to give you control of what can be
> created and/or destroyed behind my interface.
> 
> A service is coarse grained. It's the entry point to my organisation.
> That's the way I chose for my communications with others. Through
> message exchanges of well-defined documents and not through 
> method calls
> on a stateful entity, an object, that I allowed you to create on my
> resources. If I wanted that, I would have chosen CORBA or DCOM.
> 
> CORBA failed! DCOM is dead! Let's not try to do the same mistakes.
> 
> .savas.
> 
> 
> 
> 
> 
> 



