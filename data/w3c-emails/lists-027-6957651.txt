docno="lists-027-6957651"
received="Sun Jul 20 17:37:18 2003"
isoreceived="20030720213718"
sent="Sun, 20 Jul 2003 22:37:12 +0100"
isosent="20030720213712"
name="Savas Parastatidis"
email="Savas.Parastatidis@newcastle.ac.uk"
subject="RE: a) further alignment of the &quot;attribute element syntax&quot;"
id="BC28A9E979C56C44BCBC2DED313A447001EC3229@bond.ncl.ac.uk"
charset="us-ascii"
inreplyto="a) further alignment of the &quot;attribute element syntax&quot;"
expires="-1"


To:<public-ws-desc-state@w3.org>


[snip]

> 
> Diving into the meaning of @access, it is not clear to me what the
value
> of
> "set" really implies.  Do we want "write only attributes"?  Can
someone
> come up with a compelling use case for this?  Perhaps @access should
> become
> @readOnly which is a Boolean with default="true". @readonly="true" is
> equivalent to @access="get", @readonly="false" is equivalent to
> @access="both".  There is no equivalent to @access="set".
> 

Although I don't feel strongly about this, I believe that we shouldn't
restrict interface designers that wish to have set-only attributes. This
is not an example for a service interface but still...

<interface name="PersonInterface">
   <attribute name="FirstName" type="xsd:string" access="set"/>
   <attribute name="LastName"  type="xsd:string" access="set"/>
   <attribute name="FullName"  type="xsd:string" access="get"/>
</interface>

Or

<interface name="ATMInterface">
   <operation name="Authenticate"
body="tns:AuthenticatePersonWithPasswdMsg"/>
   <attribute name="password" type="xsd:string" access="set"/>
</interface>

You can only set the password but you cannot retrieve it.

[snip]

.savas.



