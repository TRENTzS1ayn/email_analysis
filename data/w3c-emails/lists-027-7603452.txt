docno="lists-027-7603452"
received="Mon Jun 16 19:34:05 2003"
isoreceived="20030616233405"
sent="Mon, 16 Jun 2003 16:33:16 -0700"
isosent="20030616233316"
name="Krishna Sankar"
email="ksankar@cisco.com"
subject="RE: Some requirements"
id="001b01c3345f$af9486f0$a9286640@amer.cisco.com"
charset="us-ascii"
inreplyto="BC28A9E979C56C44BCBC2DED313A447001D753C1&#64;bond.ncl.ac.uk"
expires="-1"

To:"'Savas Parastatidis'"<Savas.Parastatidis@newcastle.ac.uk>,"'Steve Graham'"<sggraham@us.ibm.com>
Cc:"'David Snelling'"<d.snelling@fle.fujitsu.com>,"'Jim Webber'"<jim.webber@arjuna.com>,"'Paul Watson'"<Paul.Watson@newcastle.ac.uk>,<public-ws-desc-state@w3c.org>,"'Steve Tuecke'"<tuecke@mcs.anl.gov>



> 
> I see transactions, coordination, orchestration, business processes as
> very important in web services. They all require common interfaces.
> Should we also include these in the specification of the language that
> is used to describe those interfaces?
> 
<KS>
Relax my friend, we are not talking about sucking the web services into
this :o)

My only point was that if we are working on serviceData we need to
completely specify how we will interact with it - including the
visibility and access control of the serviceDataelements - how they can
be expresses, exchanged, queried,.... *not* web services but just the
serviceData.
</KS>
> 
> If a set of common interfaces/operations is required for any kind of
> functionality, the W3C WSA and WS-Interoperability groups are
> responsible for adopting them or not.
> 
<KS>
WS-I does not develop interfaces or operations. It develops profiles -
which are very different from "adding" interfaces/operations. Same is
the case with WSA.

If we need common interfaces/operations to serviceData we need to
specify them where we define and describe the serviceData.

BTW, I am traveling this week. I still owe William some concrete details
on what this *could* mean. Will try to send in another e-mail on this.

</KS>

-k.

> -----Original Message-----
> From: public-ws-desc-state-request@w3.org 
> [mailto:public-ws-desc-state-request@w3.org] On Behalf Of 
> Savas Parastatidis
> Sent: Sunday, June 15, 2003 9:59 AM
> To: ksankar@cisco.com; Steve Graham
> Cc: David Snelling; Jim Webber; Paul Watson; 
> public-ws-desc-state@w3c.org; Steve Tuecke
> Subject: RE: Some requirements
> 
> 
> 
> > <KS>
> > This is that specification ! If we define the serviceData
> > concept here and expect another specification to explain the
> operations
> > on them, it will just add the proliferation of more WS-*
> specifications.
> > We already have too many :o(. Our goal should *not* be to 
> develop max
> > number of specifications, but a few cohesive and coherent
> > specifications.
> > 
> 
> As you probably know by now, I disagree with this statement :-)
> 
> Suggesting that the WSDL specification should talk about required or
> optional operations is like saying that the C++ language specification
> dictates the use of commit() and abort() methods because some
> applications require transactional behaviour. 
> 
> > Point well taken on the independence from underlying
> > implementations - may they be languages, OS platforms and such. But,
> we
> > still need to define the interfaces of the common operations. The
> > platforms and languages are free to implement them as they wish,
> > leveraging their own idiosyncrasies.
> > 
> 
> If a set of common interfaces/operations is required for any kind of
> functionality, the W3C WSA and WS-Interoperability groups are
> responsible for adopting them or not.
> 
> > IMHO, as we are into the realm of stateful services (with state
> > visibility thru the sericeData mechanism), we should *completely*
> define
> > what that means. In this regard we need to touch upon 
> security as well
> -
> > I am thinking of visibility and access control of the
> > serviceDataelements - how they can be expresses, exchanged,
> queried,....
> > 
> 
> I thought that attributes were about exposing access to state and not
> about stateful web services. I see a subtle difference. The web
> services-oriented architecture is stateless. Attributes could provide
> the syntax for exposing state but the semantics of stateful services
> should not be part of a WSDL specification (that's my personal view
> anyway).
> 
> > 
> > IMHO, it would be better if we address the security interfaces
> > in this specification, leaving, of course, the implementations to
> choose
> > whatever mechanisms. I differentiate between mechanics and 
> mechanisms
> -
> > we define the mechanics, the platforms do the mechanisms. In that
> sense,
> > these security aspects are NOT orthogonal to the serviceData
> mechanics.
> > 
> 
> I see transactions, coordination, orchestration, business processes as
> very important in web services. They all require common interfaces.
> Should we also include these in the specification of the language that
> is used to describe those interfaces?
> 
> 
> Best regards,
> .savas.
> 
> 
> 



