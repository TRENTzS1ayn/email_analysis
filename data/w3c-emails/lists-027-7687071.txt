docno="lists-027-7687071"
received="Tue Jun 17 06:46:06 2003"
isoreceived="20030617104606"
sent="Tue, 17 Jun 2003 11:45:47 +0100"
isosent="20030617104547"
name="Jim Webber"
email="Jim.Webber@arjuna.com"
subject="RE: Some requirements"
id="3EEE95A2@webmail.ncl.ac.uk"
charset="ISO-8859-1"
inreplyto="Some requirements"
expires="-1"

To:"Sanjiva Weerawarana"<sanjiva@watson.ibm.com>, Savas Parastatidis<Savas.Parastatidis@newcastle.ac.uk>, Umit Yalcinalp<umit.yalcinalp@oracle.com>
Cc:<ksankar@cisco.com>,<public-ws-desc-state@w3c.org>, David Snelling<d.snelling@fle.fujitsu.com>, Jim Webber<jim.webber@arjuna.com>, Paul Watson<Paul.Watson@newcastle.ac.uk>, Steve Graham<sggraham@us.ibm.com>, Steve Tuecke<tuecke@mcs.anl.gov>



Sanjiva:

>In IDL if one says:
>
>    interface foo {
>        attribute string x;
>    }
>
>That means the generated language interface will have methods getx()
>and setx(.). Thus, IDL does tell you precisely what methods are
>available to access the state.

No. It entirely depends on the IDL to language binding. For example if this 
piece of IDL was bound to a C# implementation then it would most likely bind 
to a property, not get/set methods (as it would in Java).

Jim



