docno="lists-027-8130992"
received="Mon Jun 30 13:57:36 2003"
isoreceived="20030630175736"
sent="Mon, 30 Jun 2003 18:57:16 +0100"
isosent="20030630175716"
name="Savas Parastatidis"
email="Savas.Parastatidis@newcastle.ac.uk"
subject="RE: attributes in CORBA IDL"
id="BC28A9E979C56C44BCBC2DED313A447001D75AE1@bond.ncl.ac.uk"
charset="us-ascii"
inreplyto="attributes in CORBA IDL"
expires="-1"


To:"Sanjiva Weerawarana"<sanjiva@watson.ibm.com>,"Philippe Le Hegaret"<plh@w3.org>
Cc:<public-ws-desc-state@w3.org>,"Jeff Mischkinsky"<jeff.mischkinsky@oracle.com>,"Steve Graham"<sggraham@us.ibm.com>


> >
> > Not exactly, this depends on the bindings in use. Java doesn't
support
> > attributes in interfaces, so it will get translated into get/set.
C#
> > will expose them as properties (with set{} throwing an exception for
> > readonly ones).
> 
> The point is what goes in the stub. I understand the programming
> model of the stub can defer from language to language, but clearly
> all the stubs have to do *one* thing. What is that? A method call.
> 

It doesn't necessarily have to be a method call. There may be a WSDL to
HTTP binding in which case they would be appropriate HTTP GET/PUT
messages. There may be a WSDL to SOAP binding in which case the messages
that need to be exchanged would have to be defined.

Such bindings should be sufficient for interoperability purposes.
Programming languages would have to choose their own way to create
stubs. In Java, for example, getx() and setx() operations would be
translated to the appropriate HTTP or SOAP messages.

.savas.



