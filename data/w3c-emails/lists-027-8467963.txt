docno="lists-027-8467963"
received="Tue Oct 14 21:50:03 2003"
isoreceived="20031015015003"
sent="Tue, 14 Oct 2003 21:49:36 -0400"
isosent="20031015014936"
name="VAMBENEPE,WILLIAM (HP-Cupertino,ex1)"
email="vbp@hp.com"
subject="RE: sgg's notes on the Oct 6th discussion"
id="68157FD469848D45B9CBC2833AD5528007348DAB@xsun02.ptp.hp.com"
inreplyto="sgg's notes on the Oct 6th discussion"
expires="-1"


To:public-ws-desc-state@w3.org



Thanks Steve and Roberto, this looks good to me. Based on this proposal, can
you please validate that this pseudo-algorithm would be appropriate to
generate a list of attributes from a WSDL description (and would be
guaranteed to succeed if the WSDL respect the rules listed):

-1- Retrieve all operations of style
"http://www.w3.org/@@@@/@@/wsdl/style/get-attribute"

-3- For each such operation:

  -3-1- Retrieve the output message

  -3-2- From the output message extract the element identified by the @ref
of the element within the message.

  -3-3- If there is no such "read" attribute already, create a "read"
attribute by this element.

-4- Retrieve all operations of style
"http://www.w3.org/@@@@/@@/wsdl/style/set-attribute"

-5- For each such operation:

  -5-1- Retrieve the input message

  -5-2- From the input message extract the element identified by the @ref of
the element within the message.

  -5-3- If there is no such "write" attribute already, create a "write"
attribute defined by this element.

-6- If the same element is used to define a read and a write attribute,
replace both by a read-write attribute.

My main question is with regard to the last step (-6-). What is the correct
way to associate the read and write representations of an attributes. Is it
by the QNAME of the attribute or by linking the get_XXX and set_XXX
operations? I understand that XXX is not necessarily the name of the
attribute, but if I have an attribute foo that can be access through get_XXX
am I guaranteed that if this attribute is writable its setter will be called
set_XXX? This is not guaranteed by the current proposal. Do we want to
strengthen the constraints of the styles to require that? Basically stating
that if a get-style operation points (in its output message) to a given GED
then any set-style operation that points (in its input message) to the same
GED must have the same name as the get-operation except that "get" becomes
"set"? Also, a related question is do we want to disallow several get (or
several set) operations that point to the same GED? In the pseudo-algorithm
above I assumed that two get operations that point to the same GED represent
the same "attribute", which sounds reasonable from an attribute point of
view. But as far as the component model goes, i.e. as far as WSDL is
concerned, they will be different operations. Adding the constraints I list
above would bring the two views closer together which I think is a good
thing for the attribute use case.

Also, why the mention that "The child element must not include any XML
attribute" in 4b and 4c?

Regards,

William


> -----Original Message-----
> From: public-ws-desc-state-request@w3.org 
> [mailto:public-ws-desc-state-request@w3.org] On Behalf Of Steve Graham
> Sent: Wednesday, October 08, 2003 6:12 AM
> To: public-ws-desc-state@w3.org
> Subject: sgg's notes on the Oct 6th discussion
> 
> 
> 
> 
> 
> 
> Here are my notes on the "rules" governing the getter setter 
> pattern as
> discussed on Oct 6, during the ATF telecon.
> (See attached file: getter setter pattern.1.htm)
> 
> The language captures the spirit of the agreement (hopefully 
> obvious). The
> language itself needs quite a bit of work (clearly obvious).
> Lets discuss commments/concerns by email and focus on this during the
> telecon of Oct 13.
> 
> sgg
> 
> ++++++++
> Steve Graham
> sggraham@us.ibm.com
> (919)254-0615 (T/L 444)
> STSM, On Demand Architecture
> <Soli Deo Gloria/>
> ++++++++
> 



