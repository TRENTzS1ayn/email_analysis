docno="lists-027-8480461"
received="Wed Oct 15 14:16:00 2003"
isoreceived="20031015181600"
sent="Wed, 15 Oct 2003 11:14:14 -0700"
isosent="20031015181414"
name="Umit Yalcinalp"
email="umit.yalcinalp@oracle.com"
subject="Re: sgg's notes on the Oct 6th discussion"
id="3F8D8E76.3040608@oracle.com"
charset="us-ascii"
inreplyto="68157FD469848D45B9CBC2833AD5528007348DAB&#64;xsun02.ptp.hp.com"
expires="-1"


To:"VAMBENEPE,WILLIAM (HP-Cupertino,ex1)"<vbp@hp.com>
Cc:public-ws-desc-state@w3.org




VAMBENEPE,WILLIAM (HP-Cupertino,ex1) wrote:

>Thanks Steve and Roberto, this looks good to me. Based on this proposal, can
>you please validate that this pseudo-algorithm would be appropriate to
>generate a list of attributes from a WSDL description (and would be
>guaranteed to succeed if the WSDL respect the rules listed):
>
>-1- Retrieve all operations of style
>"http://www.w3.org/@@@@/@@/wsdl/style/get-attribute"
>
>-3- For each such operation:
>
>  -3-1- Retrieve the output message
>
>  -3-2- From the output message extract the element identified by the @ref
>of the element within the message.
>
>  -3-3- If there is no such "read" attribute already, create a "read"
>attribute by this element.
>
>-4- Retrieve all operations of style
>"http://www.w3.org/@@@@/@@/wsdl/style/set-attribute"
>
>-5- For each such operation:
>
>  -5-1- Retrieve the input message
>
>  -5-2- From the input message extract the element identified by the @ref of
>the element within the message.
>
>  -5-3- If there is no such "write" attribute already, create a "write"
>attribute defined by this element.
>
>-6- If the same element is used to define a read and a write attribute,
>replace both by a read-write attribute.
>
>My main question is with regard to the last step (-6-). What is the correct
>way to associate the read and write representations of an attributes. Is it
>by the QNAME of the attribute or by linking the get_XXX and set_XXX
>operations? I understand that XXX is not necessarily the name of the
>attribute, but if I have an attribute foo that can be access through get_XXX
>am I guaranteed that if this attribute is writable its setter will be called
>set_XXX? 
>
We discussed this a bit and it was my understanding that the naming 
convention would be followed to indicate the coupling.
This is also necessary for tools that generate code.

>This is not guaranteed by the current proposal. Do we want to
>strengthen the constraints of the styles to require that? Basically stating
>that if a get-style operation points (in its output message) to a given GED
>then any set-style operation that points (in its input message) to the same
>GED must have the same name as the get-operation except that "get" becomes
>"set"? 
>
I agree that we need to strengten that.

>Also, a related question is do we want to disallow several get (or
>several set) operations that point to the same GED? In the pseudo-algorithm
>above I assumed that two get operations that point to the same GED represent
>the same "attribute", which sounds reasonable from an attribute point of
>view. But as far as the component model goes, i.e. as far as WSDL is
>concerned, they will be different operations. Adding the constraints I list
>above would bring the two views closer together which I think is a good
>thing for the attribute use case.
>
--umit



