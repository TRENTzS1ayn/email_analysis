docno="lists-030-11913542"
received="Mon May 27 21:19:17 2002"
isoreceived="20020528011917"
sent="Mon, 27 May 2002 21:09:54 -0400"
isosent="20020528010954"
name="scott_boag@us.ibm.com"
email="scott_boag@us.ibm.com"
subject="Re: Testable assertion tagging for W3C specifications"
id="OF066AE31C.9235FB59-ON85256BC7.00044D9E@lotus.com"
charset="us-ascii"
inreplyto="Testable assertion tagging for W3C specifications"
expires="-1"

To: Dimitris Dimitriadis<dimitris@ontologicon.com>
Cc: Lofton Henderson<lofton@terminal.rockynet.com>,spec-prod@w3.org,w3c-query-editors@w3.org,www-qa@w3.org



> [dd] Right; we could either go for xmlspec, which I think would raise
> more protests that going for a class-based XHTML scheme. I personally
> feel quite good with xmlspec, but we'd have to do the survey I propose
> below to find out if that goes for enough people.

Being an XML person, structured semantics are the root of the universe and
all that, I was aiming solidly for xmlspec.  This can transfer to XHTML
class-based markup when the time is right.  Certainly, the
xpath/xslt/xquery source uses xmlspec.

> Scott, have you had time to look through the thread recently? Your views
> would be appreciated.

You guys sound like you're on the right track.

An additional technical point about the xpath/xquery spec production:

We use the "role" attribute in xmlspec to flag parseable code.  For
instance:

<p>The <term>context size</term> is the number of items in the
        sequence of items currently being processed. Its value is always an
integer
        greater than zero. The context size is returned by the expression
<code role="parse-test">last()</code>.
        When an expression <code role="parse-test">E1/E2</code>, <code role
="parse-test">E1[E2]</code>,
       or <code>E1 sortby E2</code> is evaluated, the context size in the
inner focus for an
       evaluation of <code role="parse-test">E2</code> is the number of
items in the sequence obtained by
       evaluating <code role="parse-test">E1</code>. </p>

We generate a parser from the grammar defined by an XML document, and then
use that parser to test all the code in the document.  (We also generate
all the BNF productions from that grammar XML.)

We use the role attribute for a couple of other things also, so it's use is
becoming overloaded.

I *don't* think using the role attribute is a good idea... what I'm really
saying is that, as the "testable assertion" stuff is done, the "parse-test"
stuff should be done also.

I want to stress that we should be just talking about a couple of
attributes, a small set of enumerated values, and maybe an element.  Leave
the work for creating named anchors (for linking) and the like to the
stylesheet.  I think we really can get a large benefit (compared to what we
have now) from a small amount of work.

-scott



