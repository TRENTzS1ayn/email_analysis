docno="lists-030-8116620"
received="Mon Jan  3 10:16:26 2000"
isoreceived="20000103151626"
sent="Mon, 03 Jan 2000 10:17:15 -0500"
isosent="20000103151715"
name="Eve L. Maler"
email="elm@east.sun.com"
subject="Re: Ideas for generic document processing tools"
id="4.2.0.58.20000103101303.00b30e00@abnaki.East.Sun.Com"
charset="us-ascii"
inreplyto="Pine.LNX.4.20.0001020959290.16276-100000&#64;tux.w3.org"
expires="-1"


To:spec-prod@w3.org
Cc:bent@exemplary.net

Some of the things you're describing sound like they can already be done 
(after a fashion) with the XMLspec DTD and the appropriate XSL stylesheet, 
so you may want to consider authoring your specs in XML and then 
transforming to HTML.

For example, XMLspec has a bibref element you can use inline, which links 
(by means of an IDREF) to a bibliography entry in the back.  Using one of 
the several XSL stylesheets people have written, this turns into an HTML A; 
plus, you get the validation that your bibliography reference points to 
something real.  Another handy thing is the issue element, which assigns a 
label to all issues and then collects references to the issues at the end 
of the document.

Ben Trafford (copied here) has been sporadically working on an XSL 
stylesheet that supports the complete XMLspec DTD, and I'm hoping it can be 
the start of an "official" W3C stylesheet for those who choose to use it.

For more information about XMLspec, see:

   http://www.w3.org/XML/1998/06/xmlspec.dtd (latest DTD)
   http://www.w3.org/XML/1998/06/xmlspec-v20.dtd (this release)
   http://www.w3.org/XML/1998/06/xmlspec-report.htm (latest doc'n)
   http://www.w3.org/XML/1998/06/xmlspec-report-v20.htm (this release of doc'n)

Happy holidays,

         Eve

At 10:00 AM 1/2/00 -0500, Charles McCathieNevile wrote:

>Ian and I have been thinkng about how to make tools that we can use for
>generating specs.
>
>In making the Authoring Tool Accessibility Guidelines we do a bunch of little
>tricks with different scripts which have been heavily adapted from the
>scripts used to generate the CSS2 spec, and we were looking at changing some
>of them. I thought I'd throw this open, and therefore exlpain a bit about how
>we do what we do, and what that is.
>
>The scripts that we now use can be found at
>/afs/w3.org/pub/WWW/WAI/AU/Group/wai-authtools-src/
>
>Some background:
>
>There is a single document that forms the source of the Guidelines, the
>Techniques document, and is used to generate some of the conformance
>evaluations, the checklist of checkpoints. The conformance evaluations and
>checklists have blank templates into which we add the content - the
>techniques and guidelines documents are generated completely from the source.
>
>We do some useful tricks:
>
>references are in a DL at the end of the source documet, and anything in a
>body that looks like [[something]] is replaced by an appropriate reference
>(at the moment there are no inline direct links, only to to the reference
>section, which is something I would likeot change). The references that are
>used in a given document are kept there and the rest are dropped.
>
>Definitions are handled similarly - anything that links to something called
>def-anything means that the definition item whose DT is an A with the name
>def-anything gets kept, and a link rel="glossary" is inserted. It would make
>more sense to me if we started by picking things that were linked
>rel="glossary" - then I could style it.
>
>There are sections for the techniques or guidelines only. These have a class
>applied, and I use a user stylesheet and Amaya to figure out which is what.
>Similarly there are classes for checkpoints of various conformance
>evaluations, since the easiest way to do one is against the guidelines. I
>would like to be able to separate this out and do it from a checklist - I
>suspect that isn't actually too difficult.
>
>Now we are moving from using sed-type substitutions to remove things to using
>IFDEF sections in comments, since then we can deal with things that are
>nested more easily. In fact I would like to use an XSLT or some DOM
>programming to do this, since having the ifdef means our source document
>becomes invalid (eg it has two titles), although we may be able to solve that
>one, and more seriously that I can't use classes or style to see different
>pieces, and have to go back to editing the source (at which point it's easier
>to do it in something other than HTML)
>
>Chaals
>
>
>--
>Charles McCathieNevile    mailto:charles@w3.org    phone: +61 409 134 136
>W3C Web Accessibility Initiative                    http://www.w3.org/WAI
>21 Mitchell Street, Footscray, VIC 3011,  Australia (I've moved!)

--
Eve Maler            Sun Microsystems
elm @ east.sun.com    +1 781 442 3190



