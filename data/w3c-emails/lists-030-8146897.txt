docno="lists-030-8146897"
received="Tue Jan  4 17:15:22 2000"
isoreceived="20000104221522"
sent="Tue, 4 Jan 2000 14:07:43 -0800"
isosent="20000104220743"
name="Lauren Wood"
email="lauren@sqwest.bc.ca"
subject="Re: Ideas for generic document processing tools"
id="200001042210.OAA23431@mail.sqwest.bc.ca"
charset="US-ASCII"
inreplyto="4.2.0.58.20000103101303.00b30e00&#64;abnaki.East.Sun.Com"
expires="-1"


To:"Eve L. Maler"<elm@east.sun.com>,spec-prod@w3.org
CC:bent@exemplary.net


> Some of the things you're describing sound like they can already be done 
> (after a fashion) with the XMLspec DTD and the appropriate XSL stylesheet, 
> so you may want to consider authoring your specs in XML and then 
> transforming to HTML.
> 
> For example, XMLspec has a bibref element you can use inline, which links 
> (by means of an IDREF) to a bibliography entry in the back.  Using one of 
> the several XSL stylesheets people have written, this turns into an HTML A; 
> plus, you get the validation that your bibliography reference points to 
> something real.  Another handy thing is the issue element, which assigns a 
> label to all issues and then collects references to the issues at the end 
> of the document.

And, of course, the DOM specs are also authored in XML and 
converted via a set of Tcl scripts to HTML, Java, etc. Complete with 
the inline bibliography references, and a few other tricks that are 
really only applicable to APIs. Not that I'd say to use the Tcl 
scripts unless you need the same output as the DOM specs have; 
just that it's possible.


Lauren



