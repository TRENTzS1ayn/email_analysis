docno="lists-030-8592154"
received="Wed Aug  2 21:20:12 2000"
isoreceived="20000803012012"
sent="Wed, 02 Aug 2000 18:13:20 -0400"
isosent="20000802221320"
name="Eve L. Maler"
email="Eve.Maler@east.sun.com"
subject="Re: Miscellanious questions re XMLspec DTD"
id="4.3.1.2.20000802180712.00c53250@abnaki.East.Sun.Com"
charset="us-ascii"
inreplyto="Pine.SOL.4.10.10008020944390.5567-100000&#64;ariel.ucs.unimelb .edu.au"
expires="-1"


To: Jason White<jasonw@ariel.ucs.unimelb.edu.au>
Cc:spec-prod@w3.org,wendy@w3.org

Hello Jason,

I happened to have a very long and productive meeting with Ian Jacobs about 
general spec production matters yesterday, during which I learned a little 
more about your specs and how he produces them.

At 10:11 AM 8/2/00 +1000, Jason White wrote:
>Background: The Web Content Guidelines working group
>(http://www.w3.org/WAI/gl/) is in the early stages of preparing a working
>draft of one of its central deliverables, namely a document that may
>eventually be proposed as the next version of the Web Content
>Accessibility Guidelines.
>
>We would like to take advantage of the XMLSpec DTD in order to facilitate
>the editing and publication of this material. Naturally, it would be
>advantageous to adopt XMLSpec as early as possible in the drafting
>process. Consequently, the following issues arise:
>
>1. Currently, what is the best XSL style sheet or other processing
>application available to be used in generating (X)HTML from XMLSpec source
>documents? What would be the most effective means of producing Postscript
>or PDF output (preferably with a style sheet)?

There is no "official" stylesheet, but you can find the most recent 
general-purpose one at:

   http://www.w3.org/XML/1998/06/xmlspec.xsl

I believe Ian currently generates PostScript by means of a free html2ps 
tool.  This may be your best bet for now; eventually, there may be an XSL 
stylesheet that produces FOs, which can then be pumped through FOP.  But 
I'm not sure if FOP is ready for prime time regarding XMLspec needs yet.

>2. The normative component of the Web Content Accessibility Guidelines
>consists in numbered checkpoints which are grouped under more general
>requirements. In the HTML markup of WCAG 1.0, these are represented as
>definition lists, with the defined term being the text of the checkpoint,
>and the "definition" being the accompanying explanatory text. What markup
>should be used in XMLSpec to characterize such checkpoints and their
>accompanying explanations? Should the outer "guidelines" be represented,
>as in the HTML markup of WCAG 1.0, as headings, or would a nested list
>structure be preferable, with checkpoints included as lists within an
>outermost list of guidelines? The GLIST element could potentially be used
>to represent checkpoints, but this would be stretching the semantics
>somewhat. GLIST with ROLE="checkpoint" could be another possibility; or
>alternatively the DTD developers may wish to add markup to encompass this
>kind of strucutre. What makes the situation more confusing is that the
>terminology may not be stable (that is to say, what are called
>"checkpoints" in the current guidelines may be referred to as
>"guidelines", "strategies" etc., in the next version; and so a generic
>term would need to be used in any markup). Basically the structure is akin
>to a definition list, with a numbered statement (a proposition) being
>associated with explanatory material that may include paragraphs, notes,
>examples etc.

I would say that a glist is appropriate; in fact, its "glossary" nature 
isn't used as often as its "definition list" nature.  If you want the 
individual items to be numbered, you'd need to do that either with a role 
attribute or by extending the DTD to contain new structures.  In either 
case, of course you'd need to extend the stylesheet to do what you want.

If you want the clumps of items to be numbered, I would probably put them 
in sections.

>3. The technical report describing the XMLSpec DTD does not itself conform
>to the Web Content Accessibility Guidelines 1.0. In particular, there are
>syntax diagrams in the report which depict the content models used in the
>DTD; and these are not accompanied by textual equivalents. Can this be
>corrected? The best solution would be to provide, as a textual alternative
>to each image, the full content model, in XML syntax, with the parameter
>entities expanded, as in the DTD fragments provided in the body of the
>HTML 4.01 specification.

There is indeed a textual description associated with each diagram, though 
(I admit) not in an alt; see just below the diagram.  But the documentation 
is due for a huge overhaul, and I will endeavor to make the new version 
adhere to all the guidelines and take your other suggestions into account.

I hope this helps!

         Eve
--
Eve Maler                                    +1 781 442 3190
Sun Microsystems XML Technology Center    elm @ east.sun.com



