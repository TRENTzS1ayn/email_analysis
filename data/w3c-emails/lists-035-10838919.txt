docno="lists-035-10838919"
received="Tue Feb 20 03:16:36 2001"
isoreceived="20010220081636"
sent="Tue, 20 Feb 2001 16:34:54 +0900"
isosent="20010220073454"
name="Martin Duerst"
email="duerst@w3.org"
subject="RE: My 2c on scheme abuse"
id="4.2.0.58.J.20010207081953.03b60100@sh.w3.mag.keio.ac.jp"
charset="us-ascii"
inreplyto="23CF4BF2C499D411907E00508BDC95E116FC07&#64;ntmews_01.interx.co m"
expires="-1"


To: Miles Sabin<MSabin@interx.com>,uri@w3.org

At 17:43 01/02/06 +0000, Miles Sabin wrote:
>Mark Baker wrote,
> > - some semantic web apps will need to resolve namespace URLs,
> > but good software will cache the result itself and reuse it
> > until stale.
>
>Agreed. But there are two issues here: Does this scale assuming
>all software is good? And does this scale under more realistic
>assumptions?

I think the Internet has scaled without *all* software being good,
the same way as our society has scaled without all people being
'good'.

Things scale because there is always a balance. If it turns out
that too many pieces of software try to access the same spot on
the internet at the same time, then either access breaks down
or is denied, which will teach the software to find better ways,
or some better scheme upstream is developed or deployed.


>Suppose someone authors an XML vocabulary. She has a domain and
>assign's a URI from within it as a bare namespace identifier:
>there's no resource to retrieve. There _is_ an http server there
>tho', a clapped out old Linux PC on the end of a DSL connection.
>Unfortunately (or fortunately, depending on how you look at it)
>her vocabulary catches on. But thanks to widely deployed but
>poorly designed client software, attempts to retrieve the non-
>existent resource are very frequent and the server falls over
>even tho' it's only attempting to deliver 404s, and the client
>apps start hanging waiting for responses that'll never come.
>Everyone gets upset.

Things like these happened a lot during the history of the
Internet and the Web.


>Now, what could the author have done to prevent this situation
>from arising? Alternatively what could she do to fix things once
>it _has_ arisen? Very little, I think, without considerable
>unnecessary expense and complexity. That might be acceptable for
>governments, large corporations, standards bodies, or other
>institutions. But it's not viable for little people ... and we do
>still have some idea of the web as being a medium with a very low
>barrier to entry, don't we?

Oh, yes. And I'm sure that if her namespace is really that great,
there will be enough people to help out. Some will go and fix
the software that uses the namespace (to remember that there is
no point in looking it up). Others might donate a better box,
or organize something else.


>You might say that this is an issue for any web-accessible
>resource, so it's not a particular problem for DTD, Schema or
>namespace URIs ... it's just a special case of the general
>problems of web-scalability. But it's not quite that simple. All
>three could be used in a way far more pervasive than typical web
>content. So, combined with dodgy client software, sites hosting
>them could find themselves more or less _continuously_
>slashdotted.

The problems may be more acute indeed, but that will only
make the solutions come in more quickly. If people can
chose between waiting for the namespace to be resolved
and downloading a new piece of software that behaves
better, it's an easy and quick choice.


>In the case of a URI which is only intended to be a bare
>intentifier this would be particularly obnoxious.

If it's only inteded as a bare identifier, there are
quite some types of URIs that make it less likely that
a piece of software tries to get something over the web.


Regards,    Martin.



