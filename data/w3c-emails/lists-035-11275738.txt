docno="lists-035-11275738"
received="Tue Jan 23 13:45:22 2001"
isoreceived="20010123184522"
sent="Tue, 23 Jan 2001 10:45:18 -0800 (PST)"
isosent="20010123184518"
name="Rob Cameron"
email="cameron@cs.sfu.ca"
subject="Re: Generic Support for New URI Schemes with Apache?"
id="200101231845.KAA09793@cs.sfu.ca"
charset="us-ascii"
inreplyto="Generic Support for New URI Schemes with Apache?"
expires="-1"


To:duerst@w3.org,uri@w3.org

Where are the examples of successful new scheme deployment working
in combination with browser providers?   We think success requires
working with the installed base.

In our work with the bibp scheme, we have found a resolution model
that solves the "appropriate copy" problem (called "contextualization"
by some), works with existing DNS service (relative domain names)
and requires no client-side intervention.   We require a small
bit of JavaScript to be sent with documents using bibp links, but
it is really quite easy (see http://usin.org/linking-1-2-3.html ).
We have taken great pains to define multiplatform JavaScript
without browser version testing, in a way that works with most
known clients (see http://usin.org/software/clients/ ) and is
planned for future clients (even ones that provide native bibp
support and will thus need to disable the JavaScript resolver.)

We see the existing behaviour of browsers as a fact of life, for
which we must find creative solutions.   We're not interested
in a patchwork quilt of hacks, but we do think some systematic
server-side support for misinterpreted scheme URLs to be worthwhile. 

> From: Martin Duerst <duerst@w3.org>
> Subject: Re: Generic Support for New URI Schemes with Apache?
> Mime-Version: 1.0
> 
> This is really a case where we should work with the browser
> providers to fix the problem, rather than hacking around it.
> 
> Regards,  Martin.
> 
> At 10:16 01/01/22 -0800, Rob Cameron wrote:
> >Does anyone know if the following idea has been explored?  Many
> >browsers that encounter URIs with unknown schemes will (incorrectly,
> >I think) treat them as relative URLs.  Often this will give the
> >server that served the document containing the URI a chance to
> >respond constructively to the error.   Indeed, server software
> >could be written to detect this case generically and dispatch
> >to appropriate remedy URLs for the scheme.
> >



