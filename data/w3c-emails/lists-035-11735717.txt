docno="lists-035-11735717"
received="Fri Jun 15 12:53:10 2001"
isoreceived="20010615165310"
sent="Fri, 15 Jun 2001 12:49:14 -0400"
isosent="20010615164914"
name="Michael Mealling"
email="michaelm@neonym.net"
subject="Re: fyi: should URIs convey protocol/service layering?"
id="20010615124914.F12140@bailey.dscga.com"
charset="us-ascii"
inreplyto="3B2A3AB1.C73584DD&#64;w3.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
Cc:uri@w3.org


On Fri, Jun 15, 2001 at 11:41:21AM -0500, Dan Connolly wrote:
> Jeff.Hodges@kingsmountain.com wrote:
> > This is a couple'o (key) messages from a thread over on the
> > bxxpwg@invisible.net list that may be of interest to folks here.
> 
> Thanks for bringing it up here; this is an issue folks
> have been noodling on for years:
> 
> <snip>references to articles on methods for doing it</snip>
> 
> I hope to find time to study the practical details
> of the design you're discussing. But for now,
> I hope the historical pointers are useful/interesting...

This has also come up in a few other places. The one that was the most
practical was in CNRP where we were also layering some XML over
some transport (smtp, http and some UDP transport were the most popular).

We came up with two solutions and picked the easiest one (#2) for now:

Solution 1) Use NAPTR to map between a protocol independnet URI and
the transport dependent one.

Solution 2) Encode the transport information in a service description object
and then specify one of the transports as mandatory to implement but only
require that it be able to publish those service description objects.

Solution 1 can be considered a specific case of solution 2. The general
case is creating some common rendesvous point where the transport
information is discovered....

-MM

-- 
--------------------------------------------------------------------------------
Michael Mealling|      Vote Libertarian!       | urn:pin:1
michael@neonym.net      |                              | http://www.neonym.net
                        |                              | go:Michael Mealling



