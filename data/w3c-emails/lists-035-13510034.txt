docno="lists-035-13510034"
received="Tue Nov 20 19:53:39 2001"
isoreceived="20011121005339"
sent="Wed, 21 Nov 2001 09:53:27 +0900"
isosent="20011121005327"
name="Martin Duerst"
email="duerst@w3.org"
subject="RE: RFC2518 (WebDAV) / RFC2396 (URI) inconsistency"
id="4.2.0.58.J.20011121093710.04c23720@localhost"
charset="us-ascii"
inreplyto="JIEGINCHMLABHJBIGKBCEEBCDIAA.julian.reschke&#64;greenbytes.de"
expires="-1"


To:"Julian Reschke"<julian.reschke@greenbytes.de>,"Roy T. Fielding"<fielding@ebuilt.com>
Cc:"Matt Timmermans"<mtimmerm@opentext.com>,<w3c-dist-auth@w3.org>,<uri@w3.org>

At 22:16 01/11/20 +0100, Julian Reschke wrote:
> > From: Roy T. Fielding [mailto:fielding@ebuilt.com]

> > How is making a normative change to an Internet Draft Standard a less
> > intrusive change?  I can rewrite all of the W3C's recommendations and
>
>By relaxing the rules (why does the scheme-specific part have to be
>non-empty, besides common sense :-),

Very much for the reasons that Tim explained in his mails.
An URI scheme is not something you define lightly, just for
a single resource. Of course the restriction on 'at least one
character' is technically very arbitrary, but I'm very sure
that when the syntax was worked out, there was a clear feeling
that having schemes without anything after them didn't make
sense. The 'dav:' thingie is the only case we know so far,
and we know it was a bad idea, so we know that the original
rules were a good idea.

In his mail, Tim didn't talk about the syntax because that's
just a detail. If you don't get the principles right, you don't
have to be surprised if you get the syntax wrong.


>(almost) nobody would be hurt. We can
>still discourage or even forbid *new* URI schemes with empty scheme-specific
>parts, but this wouldn't really affect anybody else.
>
>However, changing RFC2518 breaks *all* WebDAV clients and servers.
>Immediately.

Well, I guess you should think about how to upgrade WebDAV to make
this a workable update path.


> > pass them through that process faster than I can change 2396 and all
> > of the implementations of URI references.  In any case, I wouldn't
> > change the definition of URI -- at most, the definition of URI-reference
> > would change, and even then only if it were warranted by implementations
> > that are believed to be correct.
> >
> > If the XML namespaces spec is broken, fix it.  If it isn't broken,
>
>It isn't broken.

I agree.


> > then fix WebDAV.  Both of those communities are miniscule in comparison.
> > What matters to URI is whether or not "DAV:" is believed to be a valid URI
> > reference, and the fact is that it is not and therefore the standard
> > for URI references should not be changed.  XML namespaces needs to decide
> > if the xmlns value is actually a URI-reference or something more like a
> > URI prefix, and if the latter is true they should update that spec.
> > Otherwise, WebDAV is broken and must be fixed on its own.  That is the
> > nature of one immature standard depending on other more mature standards
> > for its specification.
>
>Technically correct. But extremely expensive and likely to be ignored by all
>major companies with existing code out there. So I don't think this is
>practical.

What Roy is saying is that there are much more implementations out there
that work with URIs than there are implementations that work with WebDAV.
This is quite obvious. So he is saying that it's much easier to change
WebDAV than URIs.

There might be some slack here, in that most URI implementations do not
actually check much of the URI syntax, because if they don't include
scheme-specific knowledge (which a generic URI processor shouldn't), there
is very few things that you can actually check. This may be supported
by the fact that this is the first time this issue is comming up.


>If you insist that RFC2396 can't change and others insist that XNL
>namespaces can't change (I bet there'll be many!), then there are two
>possible outcomes:
>
>- The issue is ignored just like it was before. This is now a bit harder now
>that it's documented.
>- RFC2518++ is changed accordingly, and *all* software would need to be
>updated (basically throwing WebDAV back years).

I suggest that for the short time, you ask James Clark to close an eye
and tweak his implementation, and that for the longer term, you work
on an upgrading strategy for WebDAV. Fixing WebDAV would now actually
get rid of two problems, namely both the problem of unnecessary URI
scheme registration and the problem of not conforming to URI syntax.
So there is all the more motivation for doing it. It does not at all
have to throw back WebDAV by years.


Regards,   Martin.



