docno="lists-035-16170367"
received="Tue Apr 23 00:28:35 2002"
isoreceived="20020423042835"
sent="Tue, 23 Apr 2002 00:28:34 -0400"
isosent="20020423042834"
name="Gerald Oskoboiny"
email="gerald@w3.org"
subject="URI schemes used in vim: rcp://, scp://"
id="20020423042834.GA2043@w3.org"
charset="us-ascii"
expires="-1"

To:uri@w3.org


I found some new-to-me URI schemes today (rcp: and scp:),
used in the vim text editor:

    http://www.vim.org/html/pi_netrw.html

which is quoted in part below.

This strikes me as strange:
    
    For an absolute path use scp://machine//path.

(double-slash is required after hostname to specify an absolute path)
but I'm not sure if that violates any existing URI specs.

>                           Vim documentation: pi_netrw
> 
>    main help file
>      _________________________________________________________________
> 
> 
> *pi_netrw.txt*  For Vim version 6.0.  Last change: 2001 Sep 17
> 
> 
>                   VIM REFERENCE MANUAL    by Charles E. Campbell, Jr.
> 
:
> 
> 1. Network-Oriented File Transfer                       *netrw-xfer*
> 
> Network-oriented file transfer under Vim is implemented by a VimL-based script
> (<netrw.vim>) using plugin techniques.  It currently supports both reading
> and writing across networks using rcp, scp, ftp, or ftp+<.netrc> as
> appropriate.  http is currently supported read-only.
> 
> For rcp, scp, and http, one can use network-oriented file transfer
> transparently:
> 
>         vim rcp://machine/path
>         vim scp://machine/path
:
> 
>       Reading                      Writing                        Uses
>       ------------------------     ---------------------------    ----------
> 
>     * rcp://machine/path         * rcp://machine/path             rcp
>       :Nread rcp://machine/path    :Nwrite rcp://machine/path     rcp
> 
>     * scp://machine/path         * scp://machine/path             scp
>       :Nread scp://machine/path    :Nwrite scp://machine/path     scp (**)
> 
>     * ftp://machine/path         * ftp://machine/path             ftp
>  :Nread ftp://machine/path :Nwrite  ftp://machine/path ftp+***
>       :Nread machine path          :Nwrite machine path           ftp+.netrc
>       :Nread machine uid pass path :Nwrite machine uid pass path  ftp
> 
>       (for ftp, "machine" may be machine#port if a different port is needed
>       than the standard ftp port)
> 
>     * http://machine/path                                         wget
>  :Nread http://machine/path wget
> 
>         (*) transparent file transfer: i.e. vim rcp://machine/path
>  :r     ftp://machine/path
>  :w     ftp://machine/path
> 
>         (**) For an absolute path use scp://machine//path.
> 
>         (***) if <.netrc> is present, it is assumed that it will
>              work with your ftp client.  Otherwise the script will
>              prompt for user-id and pasword.
:


-- 
Gerald Oskoboiny     http://www.w3.org/People/Gerald/
World Wide Web Consortium (W3C)    http://www.w3.org/
tel:+1-613-261-6630             mailto:gerald@w3.org



