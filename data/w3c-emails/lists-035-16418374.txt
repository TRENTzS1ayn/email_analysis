docno="lists-035-16418374"
received="Fri Aug 16 12:55:55 2002"
isoreceived="20020816165555"
sent="16 Aug 2002 11:56:47 -0500"
isosent="20020816165647"
name="Dan Connolly"
email="connolly@w3.org"
subject="URI &quot;functions&quot; and the Gnome VFS"
id="1029517008.17704.2526.camel@dirk"
expires="-1"

To:ettore@ximian.com
Cc:uri@w3.org, Norman Walsh<Norman.Walsh@Sun.COM>



Hi,

The gnome VFS stuff looks nifty; but the use
of '#' to compose functions with URIs looks
backwards to me...

[[
 Unlike normal Internet URIs, though, GNOME VFS allows stacking of
access methods. For example, assume you want to read a file which is
stored in a .tar file. In that case, you want to be able to open the
parent .tar file, extract the file you want, and read it. In practice,
you need a tar file access method that is able to extract a file from a
.tar file, and you also need an access method to access the .tar file
itself.

This means that you want to stack the tar access method "on top" of
another generic access method to read the .tar file itself.

Stacking in GNOME VFS is achieved by using the # character, followed by
the name of the next access method. For example, if the .tar is on a
local file, you could use the following URI to combine the "tar" access
method with the "file" one:
file:/path/to/file.tar#tar/path/to/contained/file

If the .tar was on an HTTP site for which authentication is required,
you would use a URI like the following:

 http://user:password@some.host.net/path/to/
file.tar#tar/path/to/contained/file 
]]]
        -- http://www.ximian.com/devzone/tech/gnome-vfs.html

Ouch! Composition should go the other way, no?
        tar:/file%3A%2Fpath%2Fto%2Ffile/path/to/contained/file

or even:
       
http://gnome.org/untar-svc?f=file%3A%2Fpath%2Fto%2Ffile;p=path/to/contained/file

with special knowledge in gnome-smart clients that replies from
gnome.org/untar-svc can be computed locally.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



