docno="lists-035-9032083"
received="Thu Sep  7 08:56:46 2000"
isoreceived="20000907125646"
sent="Thu, 07 Sep 2000 08:59:53 -0400"
isosent="20000907125953"
name="Simon St.Laurent"
email="simonstl@simonstl.com"
subject="Re: Fwd: I-D ACTION:draft-daigle-uri-std-00.txt"
id="200009071256.IAA06222@hesketh.net"
charset="us-ascii"
inreplyto="20000907083132.I19448&#64;bailey.dscga.com"
expires="-1"


To:michaelm@netsol.com
Cc:uri@w3.org,xml-uri@w3.org

At 08:31 AM 9/7/00 -0400, Michael Mealling wrote:
>I'm well aware of the issues that some of the applications you care about
>have with the general case of URIs and I sympathize. I share your
>views that the case of the 'http' scheme being a 'generalized namespace' 
>is vastly distorted and in many cases dangerous (just my personal opinion)
>due to its perceived uses and lack of rigorousness about its language.
>
>In that case my suggested solution to you is to not attempt to redefine
>the entire space of URIs to adhere to your needs. Instead _design_ a 
>new scheme that does. That's why we kept the entire generalized concept
>of URIs 'airy'. Its so that you can come along and design a scheme that
>does exactly what you want without having to inherit a lot of semantics
>that are incompatible with your application. Then further specify 
>that the application only works with a certain subset of the URI space.
>
>IMHO, I think such a scheme would have a lot of practical uses outside
>your application. I also think that URNs might possibly satisfy them but
>I'd have to sit down and have an extended conversation just to find out....

While I appreciate the reasonable suggestion, I think developing a new
scheme simply for the sake of distinguishing the identifier from the
resource without addressing those issues in general is inadequate.

Partly this is because of history - lots of http namespace URIs are already
out there, partly this is because of politics - some key people seem to
find the use of such URIs not only acceptable but ideal, and partly this is
because Namespaces in XML is only one example of a situation where URIs are
used in this fashion.  As noted earlier by a different writer, RDF has
similar issues.

I suspect those same issues will crop up in future uses of URIs as the
implications of the 'URI way' become visible to a larger group of people.

>The abstract concept of 'number' is pretty airy. The concrete case of
>'positive integers' is fairly well constrained. The concept of URIs
>should be viewed in the same level of the concept of 'number' and the
>general case of 'number theory'. If your application needs the equivalent
>of 'positive integers' then say so. Why do you insist on the rest of
>us having to constrain ourselves to that new, more constrained definition?

I think the 'rest of us' might well benefit from clearer distinctions
between URIs and the resources they identify, from a comparison mechanism
that simplifies URI processing, and from a foundation vocabulary that makes
it easy to say "this scheme is subject to x, y, and z constraints".

Apart from my general tendencies toward anarchism, that feels like a very
good thing to me.

Simon St.Laurent
XML Elements of Style / XML: A Primer, 2nd Ed.
XHTML: Migrating Toward XML
http://www.simonstl.com - XML essays and books



