docno="lists-035-9366217"
received="Thu Apr 12 03:03:15 2001"
isoreceived="20010412070315"
sent="Wed, 11 Apr 2001 21:42:36 -0700"
isosent="20010412044236"
name="Joshua Allen"
email="joshuaa@microsoft.com"
subject="RE: URIs / URLs"
id="4F4182C71C1FDD4BA0937A7EB7B8B4C1D157E3@red-msg-08.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="URIs / URLs"
expires="-1"


To:<michaelm@netsol.com>,"Aaron Swartz"<aswartz@swartzfam.com>
Cc:"Mark Nottingham"<mnot@akamai.com>,"RDF Interest"<www-rdf-interest@w3.org>,<uri@w3.org>

URN plug-in sounds interesting.  One problem I have always had with the
extensibility model of URNs is that (obviously) each new scheme (like
nap:, news:, etc.) requires a different piece of code to be written to
handle that protocol -- and if you use these URLs in your page, any
users that do not (for example) have napster installed will get some
ugly error message when trying to click the link.  It would be nice for
the browser to at least look for the scheme in some registry somewhere
and suggest some plugins that the user could install.

I must admit I have been very tempted to just Hijack http:// for this
purpose (but I resist).  In fact, hijacking http: could allow the
functionality of a custom scheme to be provided to people who did not
have the plugin or the ability to install it as well -- consider the
example of mini-transclusions.  Suppose I have a URL like:

hilite:808,30:http://www.netcrucible.com/semantic.html 

which would browse to the specified document, scroll to the 808th
character and highlight 30 characters in yellow.  This would be useful,
right?  How many times have you wanted to be able to hyperlink to a
*section* of document that doesn't have proper bookmarking?  But the
problem is in trying to bootstrap this.

On the other hand, if you did something like:
http://www.hilite.com/hilite/808/30/www.netcrucible.com/semantic.html
the actual /hilite vroot on your site could strip apart the request URI
and proxy the target page to the user with appropriate highlighting and
a great big nag banner that said "if you want your browser to do this
highlighting automatically without proxying through us and our annoying
advertisers, just download this plugin".  For users with the plugin
installed, the "special" http URL would be detected before clicking and
the browser would just download the target page directly and apply
highlighting.  The main draw here is that people could then begin using
such transclusions in their pages without fear that they would be
breaking 99% of the users, and users could get sucked into using this
URL scheme without having to commit to using the plugin at first.

Well, I think this idea would really offend the purists, but there may
be a more "pure" way to address these issues for someone developing a
custom protocol handler framework...

-----Original Message-----
From: Michael Mealling [mailto:michael@bailey.dscga.com] 
Sent: Wednesday, April 11, 2001 6:55 PM
To: Aaron Swartz
Cc: Mark Nottingham; RDF Interest; uri@w3.org
Subject: Re: URIs / URLs

On Wed, Apr 11, 2001 at 07:01:40PM -0500, Aaron Swartz wrote:
> (adding uri@w3.org since they'll probably know better...)
> Mark Nottingham <mnot@akamai.com> wrote:
> >>  (b) support for [URNs] is available in popular browsers and has
> >>  been for several generations
> > 
> > Just curious - how do browsers support URNs? I didn't follow URN
> > development closely, but always thought that it was poorly
supported.
> 
> Me too -- I'd also be curious on what it does with the URIs, and how
it
> knows what to do (hard coded or does it look it up somehow?).

Only recently have browsers gotten the idea that URI schemes need to be
extensible (I.E. was one of the first to get it right). Currently they
all require a plugin of some type to handle any new schemes (URNs being
just one scheme amongst many). We are releasing a much more robust URN
plugin for I.E. at the end of this month (LGPL license).

URN support in browsers is sketchy at best (mainly because they thought
there was a standard when there wasn't). Netscape prior to 6.0 will
attempt to send all URNs to its configured http proxy. I.E. will just
tell you there's no such URI scheme handler. I'm not sure about
Konquerer, 
and others (Opera is based on Netscape). 

My hope is that the URI resolution services that are based on DDDS will
provide a mechanism for gatewaying to new URI schemes even if the
current
application doesn't support them natively.

Part of the problem is that so far the only two people developing URN
software has been myself and Justin Couch. Everyone has been sitting on
the sidelines expecting it to get done. We are releasing everything 
as open source so _please_ help us out by grabbing the code and adding
on to it and integrating it into other applications.

-MM

-- 
------------------------------------------------------------------------
--------
Michael Mealling|      Vote Libertarian!       |
www.rwhois.net/michael
Sr. Research Engineer   |   www.ga.lp.org/gwinnett     | ICQ#:
14198821
Network Solutions|          www.lp.org          |
michaelm@netsol.com



