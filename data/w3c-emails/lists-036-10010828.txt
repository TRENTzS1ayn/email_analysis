docno="lists-036-10010828"
received="Wed May 28 23:11:14 2003"
isoreceived="20030529031114"
sent="Wed, 28 May 2003 23:10:48 -0400"
isosent="20030529031048"
name="John Cowan"
email="cowan@mercury.ccil.org"
subject="Re: draft-fielding-uri-rfc2396bis-02"
id="20030529031048.GH16104@ccil.org"
charset="us-ascii"
inreplyto="D2D26834-9174-11D7-ADA2-000393753936&#64;apache.org"
expires="-1"

To:"Roy T. Fielding"<fielding@apache.org>
Cc:uri@w3.org



Roy T. Fielding scripsit:

> >Section 2.4.1 does not state that escapes in the range %00 to %7F are
> >to be understood as US-ASCII encodings, which seems unnecessarily 
> >vague.
> 
> That is defined by the ABNF specification, with the proviso given in
> section 1.3.  Section 2.1 repeats it.
> 
> >It should further be specified that the mapping of escapes in the range
> >%80 to %FF is not defined by this RFC.
> 
> Why? The RFC doesn't define any such mapping.
> 
> >Furthermore, it is not specified
> >that the second and third octets of the escape correspond to the high
> >and low order nybbles of the US-ASCII value and not vice versa.
> 
> They are not nibbles -- it is a number in hexadecimal.

These comments refer to escapes within the URI, not to the conventions
of ABNF.  As things stand, "a%82c" might mean "abc" on an EBCDIC
system, which seems perverse to me.  Still worse, there is nothing to exclude
"a%26c" as equivalent to "abc".

> The algorithm certainly hasn't "prevailed" -- browsers consistently
> ignore that rule and represent the target as base-URI#fragment.

Experiments indicate that you are correct.  It is a bit dodgy to
change the standard to conform to the properties of browsers, though.

-- 
John Cowan  jcowan@reutershealth.com  www.ccil.org/~cowan  www.reutershealth.com
"If he has seen farther than others,
        it is because he is standing on a stack of dwarves."
                --Mike Champion, describing Tim Berners-Lee (adapted)



