docno="lists-036-12165731"
received="Thu Sep  4 07:36:49 2003"
isoreceived="20030904113649"
sent="Thu, 4 Sep 2003 12:34:42 +0100"
isosent="20030904113442"
name="Eamonn Neylon"
email="eneylon@manifestsolutions.com"
subject="RE: The OpenURL - A Distinguished URI?"
id="HKEEKDBDFFLPABDJLFLOIENODEAA.eneylon@manifestsolutions.com"
charset="iso-8859-1"
inreplyto="5E13A1874524D411A876006008CD059F04A07747&#64;0-mail-1.hpl.hp.com"
expires="-1"

To:"Williams, Stuart"<skw@hp.com>,"'Tim Bray'"<tbray@textuality.com>
Cc:"'Hammond, Tony (ELSLON)'"<T.Hammond@elsevier.com>,<www-tag@w3.org>,<uri@w3.org>



>>> Williams, Stuart wrote:
>>> > I don't see the "direct opposition" that you claim.
>>> I don't either.  It's been quite a while since I looked at the
>>> OpenURL materials, but at the time it seemed like a sensible
>>> attempt to work out a standard for querystrings that anybody
>>> could use.  While obviously it's designed with HTTP URIs in mind,
>>> clearly nobody is suggesting that the use of the standard become
>>> compulsory.  Those who assign URIs to resources can choose to use
>>> this or not, and I don't think there are any architectural problems
>>> raised.  -Tim
>>
>>yes... I think we agree. I wasn't imagining folks as saying the use
>>of OpenURL was "complusory". I was seeing a potenial nuisance of:
>>"http scheme URI references that have a query component which looks
>>like an OpenURL... are OpenURL and necessarily refer whatever the
>>OpenURL spec say they refers to."

'Looks like an OpenURL' is not something that should be inferred.
Only querystrings containing the adm_ver=z39.[whatever it gets assigned when
released] component can be recognised as OpenURLs by OpenURL Framework aware
resolvers. The use of this identifying mechanism within an OpenURL is
mandatory. Thus there is a extremely low possibility of querystrings being
wrongly interpreted as  OpenURLs. If a querystring is recognised as claiming
that it is OpenURL Framework compliant (by virtue of its self-identifying
nature) then it may be processed to retrieve (ContextObject) metadata
components either in by-value or by-reference form.

There are then two uses of URIs possible within the OpenURL Framework: as a
means of referencing data held elsewhere (for resolution purposes) and as an
identifier within recognised namespaces. The identifier application is
causing lots of headaches as many resources that the existing users of
OpenURL want to talk about are not available on the web (i.e. do not have
URI representations).

I'd also like to comment on the statement that 'obviously it's designed with
HTTP URIs in mind': whilst that was true for the initial OpenURL work, it is
no longer the case. The standardization of the initial OpenURL work (under
NISO committee AX) is a generalization of the earlier work in several
respects: one is to divorce the data structure (the ContextObject) from
particular transport mechanisms; another is to allow the extensibility of
allowed metadata terms (to ensure that the OpenURL Framework [legacy name
generalised] can be used by those interested in exploiting the prescribed
data structures).

The only thing that might be perceived as threatening about the OpenURL
(Framework) is its legacy name - but we couldn't come up with anything
better!

>>We are saying... well only if the relevant assignment authority
>>indicates that as a matter of policy the query component conforms
>>to the OpenURL spec for some set of URI administered by that authority.

The URIs retain their own characteristics - there are no semantics being
imposed upon them. Those embedded in a querystring may be used to retrieve
data held elsewhere (if they are being used in the context of a by-reference
metadata field) or to identify something (if they are being used in the
context of an identifier).

Eamonn
(NISO AX Committee Member)

Eamonn Neylon
Manifest Solutions
Tel: +44 1869 357156
http://www.manifestsolutions.com/



