docno="lists-036-12258012"
received="Sat Sep  6 13:52:50 2003"
isoreceived="20030906175250"
sent="Sat, 6 Sep 2003 18:52:13 +0100 "
isosent="20030906175213"
name="Hammond, Tony (ELSLON)"
email="T.Hammond@elsevier.com"
subject="RE: The OpenURL - A Distinguished URI?"
id="54A600C436EA694581B93E4BD4D4788A07E2F3E2@elslonexc004.eslo.co.uk"
inreplyto="The OpenURL - A Distinguished URI?"
expires="-1"


To: Tim Bray<tbray@textuality.com>, Eamonn Neylon<eneylon@manifestsolutions.com>
Cc:"Williams, Stuart"<skw@hp.com>,"Hammond, Tony (ELSLON)"<T.Hammond@elsevier.com>,www-tag@w3.org,uri@w3.org


Hi Tim:

> I'd be real nervous about automatically concluding that a querystring is
> OopenURL compliant based on syntax in the querystring.  Sorry, I haven't
> read this stuff in a while so if there is a 100%-unambiguous way of
> ascertaining whether a URI's syntax is intended to be OpenURL-governed,
> that would be a really good thing.

You'll be glad to know that life is, in fact, good. :)

Each OpenURL (that is a ContextObject data structure from the OpenURL
Framework which is shipped on an HTTP GET querystring) must contain a
signature token 'Z39.88-2003' which will mark the URI out as a /candidate/
OpenURL. That URI querystring can then be parsed and moreover /validated/ by
an OpenURL validating parser much like an RDF validating parser can validate
an RDF graph. The reason is that like RDF, the OpenURL Framework actually
defines a /data model/ - not syntax - which can be variously serialized.
Extraneous querystring patameters can be removed and the parameters
comprising the ContextObject can be validated against various rules (e.g. a
Referent is a mandatory entitity and so must be present - i.e. described;
also if Referrer-specific data is presented then the Referrer entity must
also be described).

The ContextObject (the data structure defined by the OpenURL Framework)
transcends syntax. It can be serialized according to /registered/ formats.
Two are defined 'out of the box' in the draft standard: Key/Encoded Value
for use on HTTP GET and POST methods, and a W3C XML Schema for more general
purposes. Recently proposed (though not yet registered) is the RSS 1.0
'mod_context' module for adding a ContextObject into an RSS 1.0 feed. Also
an RDF Schema (well actually an OWL ontology) is in the wings.

I aplogize for the clumsy wording 'in direct opposition' in my original
posting which might have wrongfooted some of you guys. What I was trying to
convey was that while Stuart in the Draft TAG Finding alluded to the
possibility of standards which could govern a URI data structure - and so
rescue it from the usual opaqueness of URIs, the OpenURL Framework is (or
better, will very shortly be) an ANSI/NISO standard that does /precisely/
that - defines a public data model for URI querystrings. No presssure to use
it, but there if you want it. Two features: a 'signature' and a validatable
data model.

It's good stuff - I think, I hope ...

The one thing still missing is a (brief) primer, a la the RDF Primer, to
convey the data model.

Tony



