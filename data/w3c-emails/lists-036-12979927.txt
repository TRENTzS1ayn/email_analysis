docno="lists-036-12979927"
received="Mon Sep 29 15:30:55 2003"
isoreceived="20030929193055"
sent="Mon, 29 Sep 2003 15:02:01 -0400"
isosent="20030929190201"
name="Bennett.Marks@nokia.com"
email="Bennett.Marks@nokia.com"
subject="IETF Draft on mmsto:"
id="5C76D29CD0FA3143896D08BB1743296A0206883B@bsebe001.americas.nokia.com"
charset="iso-8859-1"
expires="-1"


To:<uri@w3.org>


Ted,

I read the draft, ( http://www.ietf.org/internet-drafts/draft-wugofski-mms-uri-scheme-00.txt) and understand that you have patterned the mmsto: after mailto:. I have one concern. That is that on mobile phones the most common usage patterns for mms and sms do not exactly match the usage patterns that are modeled for email on the wired web.

For the email scheme, far and away the most common usage pattern is the reply, and hence the email address is in the primary (mandatory) position before the "?". This is one common pattern for mobile, but the other equally common pattern for sms and mms is forwarding a piece of fixed information (i.e. a URL or image) to a new party. In this case the universal mode for this is to have the composer "find" the address in the address book. The current specification for mmsto: would require a default telephone # or email address (the reply scenario), and make it non-intuitive for the forwarding case, where I would pre-specify the "body" but not the address. It would require the user to explicitly overwrite a bogus address supplied with the scheme, and if not overwritten, the message would go back to the default location, definitely not the desired result.

Is there some way to add the ability to "null out" the recipient address, which would force the composer to go through address assignment. Perhaps explicit instructions to a composing application if the destination address is specified as ""?

One other comment, I am not sure that "mms:" is appropriate for mobile phone devices. It either allows the automatic issuance of an mms message without acknowledgement, a big problems since MMS messages cost real money, or there is a required acknowledgement step, in which case most vendors want a consistent user experience, so why not simply use the composer as the acknowledgement vehicle, which would allow single button acknowledgement and review in the same step. Hence, we could have used mmsto: in the first place. Of course there may be other use cases that I am not taking into consideration.



Bennett Marks
Vice Chair OMA Mobile Applications Environment
Manager Infotainment Technology - MSW/SA
Nokia Mobile Phones / Mobile Software Unit
* 5 Wayside Rd., Burlington MA  01803         NOKIA 
* bennett.marks@nokia.com
* +1 781 308 6556
* +1 781 993 1911          



