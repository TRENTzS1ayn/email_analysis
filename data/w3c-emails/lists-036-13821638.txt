docno="lists-036-13821638"
received="Tue Feb  3 05:13:57 2004"
isoreceived="20040203101357"
sent="Tue, 3 Feb 2004 12:15:15 +0200"
isosent="20040203101515"
name="Israel Viente"
email="israel_viente@il.vio.com"
subject="RE: Status of draft-hoffman-rfc1738bis-01.txt"
id="20040203101320.65D73208342@bela.bezeqint.net"
charset="us-ascii"
inreplyto="5.1.0.14.2.20040202131324.00b84538&#64;127.0.0.1"
expires="-1"

To:<uri@w3.org>
Cc:"'Graham Klyne'"<gk@ninebynine.org>



>I have a small problem with the text.  The example:
>    file://usr/local/bin/
>is confusing.  'usr' should be an authority component, but to users of 
>Unix/Linux systems it looks like part of the path.

I think 'usr' is the host according to file://<host>/<path>.
/usr/local/bin in Unix/Linux should look like
file:///usr/local/bin/
Israel
-----Original Message-----
From: uri-request@w3.org [mailto:uri-request@w3.org] On Behalf Of Graham
Klyne
Sent: Monday, February 02, 2004 3:18 PM
To: uri@w3.org
Subject: Status of draft-hoffman-rfc1738bis-01.txt


With reference to:
   http://www.ietf.org/internet-drafts/draft-hoffman-rfc1738bis-01.txt

I just used this for information about the file: URI scheme, which I've 
used in some code that I plan to offer to the Haskell language library
project.

I'm wondering if there is any dispute over what this document says about 
the file: scheme (coped below).  It all looks very good to me.  I 
particular, I have followed the advice concerning URIs for Windows 
drive+path specifications.

I have a small problem with the text.  The example:
    file://usr/local/bin/
is confusing.  'usr' should be an authority component, but to users of 
Unix/Linux systems it looks like part of the path.

#g
--

[[
2.7 FILES

The file URL scheme is used to designate files accessible on a
particular host computer. This scheme, unlike most other URL schemes,
does not designate a resource that is universally accessible over the
Internet.

A file URL takes the form:

    file://<host>/<path>

where <host> is the fully qualified domain name of the system on
which the <path> is accessible, and <path> is a hierarchical
directory path of the form <directory>/<directory>/.../<name>.

As a special case, <host> can be the string "localhost" or the empty
string; this is interpreted as "the machine from which the URL is
being interpreted". However, this part of the syntax has been
ignored on many systems. That is, for some systems, the following
are considered equal, while on others they are not:

    file://localhost/path/to/file.txt
    file:///path/to/file.txt

Some systems allow URLs to point to directories. In this case, there
is usually (but not always) a terminating "/" character, such as
in:

    file://usr/local/bin/

On systems running some versions of Microsoft Windows, the local drive
specification is preceded by a "/" character. Thus, for a file called
"example.ini" in the "windows" directory on the "c:" drive, the URL
would be:

    file:///c:/windows/example.ini

For Windows shares, there is an additional "/" prepended to the name.
Thus, the file "example.doc" on the shared directory "department" would
have the URL:

    file:////department/example.doc

The file URL scheme is unusual in that it does not specify an
Internet protocol or access method for such files; as such, its
utility in network protocols between hosts is limited.
]]


------------
Graham Klyne
For email:
http://www.ninebynine.org/#Contact



