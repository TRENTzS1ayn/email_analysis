docno="lists-036-13910161"
received="Thu Feb  5 17:48:07 2004"
isoreceived="20040205224807"
sent="Thu, 5 Feb 2004 15:48:12 -0700 (MST)"
isosent="20040205224812"
name="Mike Brown"
email="mike@skew.org"
subject="Re: RFC2396bis - implementation results using revised syntax"
id="200402052248.i15MmCX5052174@chilled.skew.org"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20040127161216.00b85a28&#64;127.0.0.1"
expires="-1"


To:uri@w3.org
Cc:gk@ninebynine.org


Graham Klyne wrote:
> Test case:  "http://example.123./aaa/bbb#ccc"
> I'd like to confirm that this is now regarded as a valid URI.  In previous 
> versions of this specification, it was not (according to my interpretation 
> and implementation).

The discussion and resolution can be found in the issues doc:
http://cvs.apache.org/viewcvs.cgi/*checkout*/ietf-uri/rev-2002/issues.html?rev=1.55#038-qualified

You can see there that the productions were changed at your request, so it's
probably safe to assume that the elimination of toplabel was deliberate, in
order to fully accomodate unqualified hostnames. Issue 016 also touches on
this.

If you have any more test cases to share (aside from the ones in the spec),
I'd like to see them, just so I can further verify my own implementation. My
implementation in Python with regular expressions has presented no problems so
far. If anyone wants to see, it's open source:

implementation:
http://cvs.4suite.org/cgi-bin/viewcvs.cgi/~checkout~/4Suite/Ft/Lib/Uri.py?rev=HEAD&content-type=text/plain
(in particular, have a look at the Absolutize, _eliminateDotSegments,
 and _initUriValidationRegex functions)

test suite:
http://cvs.4suite.org/cgi-bin/viewcvs.cgi/~checkout~/4Suite/test/Lib/test_uri.py?rev=HEAD&content-type=text/plain
(this module expects to be imported and run in a custom testing framework,
 but the source and comments should be clear enough for inspection)

-Mike



