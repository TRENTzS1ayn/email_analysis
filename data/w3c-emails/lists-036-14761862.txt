docno="lists-036-14761862"
received="Thu Feb 19 05:01:14 2004"
isoreceived="20040219100114"
sent="Thu, 19 Feb 2004 09:17:05 +0000"
isosent="20040219091705"
name="Graham Klyne"
email="GK@ninebynine.org"
subject="Re: uri handling of hosts is too restrictive"
id="5.1.0.14.2.20040219091013.02696da0@127.0.0.1"
charset="us-ascii"
inreplyto="20040219060154.GE24395~&#64;nicemice.net"
expires="-1"


To:uri@w3.org


At 06:01 19/02/04 +0000, Adam M. Costello BOGUS address, see signature wrote:
>That's fine.  The rule can be: percent-encoding is allowed everywhere
>except the scheme, and individual schemes cannot make exceptions to this
>rule.

I think that's pretty close to what we have (if permitted normalization is 
taken into account - section 6.2.2.2).

[...]
>That paragraph of mine started off more focused, then I generalized it,
>and now I think I'd like to return to the more focused version:
>
>If an individual scheme restricts a component to contain only ASCII
>characters, then scheme-specific IRI consumers would be required
>to check the component before using it, and fail gracefully if any
>non-ASCII characters are found.
>
>That's much simpler, requiring only one bit of knowledge about the
>syntax of the component (whether it allows non-ASCII).

So let's try the "running code" test:  this is about *generic* URI syntax, 
and I'm currently implementing a *generic* URI parser.  How am I supposed 
to know whether a particular scheme restricts a particular component in any 
particular way?

Individual schemes, and scheme-specific parsers, are free to impose any 
additional constraints they may see fit, but that's a different issue (cf. 
section 1.1.1).

#g


------------
Graham Klyne
For email:
http://www.ninebynine.org/#Contact



