docno="lists-036-15943420"
received="Thu Mar 11 15:55:33 2004"
isoreceived="20040311205533"
sent="Thu, 11 Mar 2004 20:55:07 +0000"
isosent="20040311205507"
name="Tony Hammond"
email="tonyhammond@mac.com"
subject="Re: fragment prose proposal"
id="60A1D838-739E-11D8-8CA0-000A95B1B184@mac.com"
charset="US-ASCII"
inreplyto="45BFA11F-7356-11D8-83FC-000A95EAFCEA&#64;nokia.com"
expires="-1"


Cc:uri@w3.org
To: Patrick Stickler<patrick.stickler@nokia.com>


Yes, but if there is no representation - either on a per-URI basis or 
on a per-scheme basis - then what? I decline to consider the 
possibility of some 3rd party hack which provides a resolution tier if 
that is specifically excluded by protocol semantics - e.g. 'info'. How 
does one retrieve a self-declared non-dereferenceable URI (as are all 
info URIs being so defined as a class)? Let's not even mention DDDS - 
it cannot be authoritative as far as an info URI is concerned. Rules is 
rules. But the info URI (with fragid) is still a bona fide URI. It's 
not asking to be dereferenced - merely articulating two dependent 
resources.

Tony


On 11 Mar 2004, at 12:18, Patrick Stickler wrote:

>
>
> I don't in any way disagree with what you write below or Larry's
> comment.
>
> I also don't see how it contradicts my statement that fragids
> force one into the domain of document retrieval since no matter
> how you model it, you cannot get from a URIref with fragid to
> a representation of the secondary resource without *first*
> obtaining a representation of the primary resource.
>
> Patrick
>
>
> On Mar 11, 2004, at 07:14, ext Adam M. Costello BOGUS address, see 
> signature wrote:
>
>>
>>
>> Patrick Stickler <patrick.stickler@nokia.com> wrote:
>>
>>> URIrefs with fragids are "second class" web URIs because they force
>>> one into the domain of "document retrieval" simply to interpret them.
>>
>> URIs identify resources, so there must be a conceptual function g that
>> maps URIs to resources.  We can impose a constraint on that function:
>>
>>     g must be separable into g1 and g2 such that
>>     for all URIs of the form scheme:stuff#frag
>>     g(scheme,stuff,frag) = g2(g1(scheme,stuff),frag)
>>
>> In other words,
>>
>>       primary resource r1 = g1(scheme,stuff)
>>     secondary resource r2 = g2(r1,frag) = g(scheme,stuff,frag)
>>
>> There is no need to talk about retrieval or representation in order
>> to express this separability constraint.  The key is that g1 does
>> not depend on frag, and g2 depends on r1 itself, not on the URI used
>> to identify r1 (there might be several URIs that identify r1 using
>> different schemes).  [Concrete examples involving retrieval and
>> representation are still helpful for building intuition.]
>>
>> This is just a formal restatement of Larry Masinter's succint "the
>> important bit is that the fragment identifier is not used in the
>> scheme-specific processing of the URI."
>>
>> AMC
>> http://www.nicemice.net/amc/
>>
>>
>
> --
>
> Patrick Stickler
> Nokia, Finland
> patrick.stickler@nokia.com
>



