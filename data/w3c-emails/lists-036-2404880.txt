docno="lists-036-2404880"
received="Fri Oct 11 04:34:54 2002"
isoreceived="20021011083454"
sent="Fri, 11 Oct 2002 10:33:59 +0200"
isosent="20021011083359"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="Re: no parameter in first segment of relative URI?"
id="302EF4CE-DCF4-11D6-9950-00039384827E@greenbytes.de"
charset="US-ASCII"
inreplyto="4.2.0.58.J.20021011152154.0468a160&#64;localhost"
expires="-1"

Cc:uri@w3.org
To: Martin Duerst<duerst@w3.org>



Section 3.3 says:

The parameters are not significant to the parsing of relative 
references.

That would explain the production. However, when a relative uri ref is 
resolved
to a uri, you'd get your parameter again. I think the production in the 
syntax
should be changed.

While looking at it, I see that segment and rel_segment have different
sets of allowed characters. Noticeably, ':' is allowed in a (absolute)
path segment and forbidden in the rel_segment.

Isn't that calling for trouble? I'd imagine that there is plenty of 
code around
which converts absolute uris to uri references without looking if the
starting rel_segment will be free of ':' chars.

Should'nt the ':' in path segments be discouraged?

//Stefan

Am Freitag, 11.10.02, um 08:29 Uhr (Europe/Berlin) schrieb Martin 
Duerst:

>
> Dear URI experts,
>
> Looking through the URI syntax in detail, I became aware
> of the following 'anomaly': parameters are not allowed
> in the first segment of a relative URI (if it doesn't start
> with a slash). The relevant rules are:
>
>  relativeURI   = ( net_path | abs_path | rel_path ) [ "?" query ]
>
>  net_path      = "//" authority [ abs_path ]
>  abs_path      = "/"  path_segments
>  rel_path      = rel_segment [ abs_path ]
>
>  rel_segment   = 1*( unreserved | escaped |
>                      ";" | "@" | "&" | "=" | "+" | "$" | "," )
>
>  path_segments = segment *( "/" segment )
>  segment       = *pchar *( ";" param )
>  param         = *pchar
>  pchar         = unreserved | escaped |
>                  ":" | "@" | "&" | "=" | "+" | "$" | ","
>
> So in "abc;def/ghi;jkl", 'jkl' is a parameter, but 'def' isn't.
> On the other hand, in "/abc;def/ghi;jkl", both 'def' and 'jkl'
> are parameters.
>
> Is this an error in the syntax, or can somebody explain this?
>
>
> Regards,     Martin.
>
>
>
>



