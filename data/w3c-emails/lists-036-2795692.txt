docno="lists-036-2795692"
received="Mon Sep  9 18:14:22 2002"
isoreceived="20020909221422"
sent="10 Sep 2002 10:14:01 +1200"
isosent="20020909221401"
name="Stephen Cranefield"
email="scranefield@infoscience.otago.ac.nz"
subject="Re: Possible new issue: Things with and without identity?"
id="uk7lu3j6e.fsf@infoscience.otago.ac.nz"
charset="us-ascii"
inreplyto="200209091944.27191.miles&#64;milessabin.com"
expires="-1"

To:uri@w3.org,rest-discuss@yahoogroups.com
Cc: Miles Sabin<miles@milessabin.com>



Miles Sabin <miles@milessabin.com> wrote:
> At issue is the first sentence of the informal definition of resource in 
> RFC 2396 1.1,
> 
>   A resource can be anything that has identity.
> 
> "that has identity" is redundant because *everything* has identity in 
> the only reasonably straightforward understanding of identity, ie. the 
> logical truth in all but the most obscure formal systems that,
> 
>   (Vx) x = x

A discussion of the philosophical notion of identity can be found in:

Guarino, Nicola and Chris Welty. 2000. Identity, Unity, and
Individuality: Towards a formal toolkit for ontological analysis. In,
Horn, W. ed., Proceedings of ECAI-2000: The European Conference on
Artificial Intelligence. pp. 219-223. Berlin: IOS Press. August, 2000
http://www.ladseb.pd.cnr.it/infor/Ontology/Papers/LADSEB02-2000.pdf

More pragmatically, a distinction between things with and things
without identity should be quite familiar to Java programmers.  You
can distinguish between two instances of the String class that happen
to have the same content, but you can't distinguish between two
occurrences of the int value 7.  Unless you consider that a literal is
not a "thing", you have to allow for there to be things that don't
have identity.

I have argued that ontology modelling languages need to be able to
declare which concepts have identity (and thus correspond to
resources) and which represent structured "value types" without
identity.  See the following paper for a discussion of this in the
context of ontology modelling using UML:

Stephen Cranefield and Martin Purvis
A UML profile and mapping for the generation of ontology-specific
content languages
Knowledge Engineering Review, 17(1) 2002
Pages 21-39

- Stephen



