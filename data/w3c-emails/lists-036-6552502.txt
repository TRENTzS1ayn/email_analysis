docno="lists-036-6552502"
received="Thu Jan 30 15:54:47 2003"
isoreceived="20030130205447"
sent="Thu, 30 Jan 2003 15:30:53 -0500"
isosent="20030130203053"
name="Martin Duerst"
email="duerst@w3.org"
subject="Re: URI References and context of use"
id="4.2.0.58.J.20030130152041.07150ef0@localhost"
charset="us-ascii"
inreplyto="001301c2c896$feca5e00$940ba8c0&#64;mnotlaptop"
expires="-1"


To:"Mark Nottingham"<mnot@mnot.net>,<uri@w3.org>


At 11:30 03/01/30 -0800, Mark Nottingham wrote:

>I agree; context of use isn't a syntactic restriction, so this would suit
>better as a schema extension, rather than a type.

I think I didn't say that. Or I wasn't clear enough. Context is
most often not even a semantic restriction, but just depends
on what you want to use it for (see my integer addition/multiplication
example).


>(Doing it in Schema is arbitrary; it could also be done in RDF, etc. I
>think it's interesting in Schema because it's the way that many formats
>are normatively described.)

I think the two main use cases I have seen are not
"dereference" and "don't dereference", but closer to
"dereference" and "don't necessarily dereference".
(with "dereference" not necessarily having to do a
network access (caching,...), and therefore an
enormous area of overlap).

Also, one very basic principle, and one major reason for
success of URIs is that they are uniform, also in the
sense that any URI can be used for any purpose.
Creating a type system that restricts this flexibility
seems like a rather bad thing to do.

Regards,    Martin.


>Cheers,
>
>----- Original Message -----
>From: "Martin Duerst" <duerst@w3.org>
>To: "Mark Nottingham" <mnot@mnot.net>; <uri@w3.org>
>Sent: Thursday, January 30, 2003 6:40 AM
>Subject: Re: URI References and context of use
>
>
> > What is useful is to have different operations on anyURI
> > (to use the XML Schema name), so that people wanting to
> > do different things with it can do what they want.
> > But creating different types would be wrong. Context,
> > especially in this case, is more often given by usage
> > rather than by the type itself. Stretching things a bit,
> > what you are proposing is similar to proposing different
> > types for integers that need to be added and those
> > that need to be multiplied.
> >
> > On the contrary, for the integer/string example below,
> > and even more so for other cases (anyURI/string definitely
> > being one), one can actually argue that creating (completely)
> > types is a bad thing, that it would have been easier if e.g.
> > anyURI would have been a subtype of string. That would make
> > it much easier to use various string operations directly on
> > anyURI. Of course, XML Schema doesn't care that much about
> > operations, but others (e.g. XML Query) do.
> >
> > Regards,    Martin.
> >
> > At 23:32 03/01/25 -0800, Mark Nottingham wrote:
> >
> > >XML Schema is gathering requirements for 1.1.
> > >
> > >Question: should a new type be considered, in order to distinguish URIs
> > >used as identifiers from those used as locators?
> > >
> > >In other words - these are very different elements:
> > >    <foo type="xsd:integer">0123</foo>
> > >    <foo type="xsd:string">0123</foo>
> > >and it's clear what's going on. However, schema has no way to
>distinguish
> > >URIs that are used as identifiers (e.g., in namespaces) from those that
> > >are to be used to locate (dereference).
> > >
> > >It strikes me that this would be useful*, because other specifications
> > >could use this mechanism to clearly communicate what the context of the
> > >URI is. It would also give guidelines to canonicalization, comparison,
> > >etc.
> > >
> > >Regards,
> >



