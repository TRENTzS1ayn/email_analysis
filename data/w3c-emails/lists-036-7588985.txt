docno="lists-036-7588985"
received="Tue Jul 22 10:20:53 2003"
isoreceived="20030722142053"
sent="Tue, 22 Jul 2003 09:55:20 -0400"
isosent="20030722135520"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="RE: #foo URI references"
id="5.1.0.14.2.20030722093245.02739ec0@pop.iamdigex.net"
charset="us-ascii"
inreplyto="000501c34ff3$7ed6f610$691796c0&#64;MasinterT40"
expires="-1"


To:<uri@w3.org>


At 09:49 PM 2003-07-21, Larry Masinter wrote:

>I'm in favor of leaving "#foo" as a reference to
>'this document' independent of having an explicit 'base'.

Caveat:  haven't done extensive analysis of this, nor is this in any way a
consensus position from any subset of the WAI, but there is at least one
line of argument suggesting that the disability interest would favor the
position that Larry asserted above.

This has to do with the disorientation that happens on document
refresh when someone is using a screen reader or other delivery
context where there is not a lot of persistent display buffer
between the client and the user.  The concern leads to things like

<quote
cite=
"http://www.w3.org/TR/UAAG10/guidelines.html#tech-configure-content-retrieval">

       3.5 Toggle automatic content retrieval (P1) (...)

     1. Allow configuration so that the user agent only retrieves
        content on explicit user request.

</quote>

If we bind #foo to a full global path computed with the latest state of the
BASE property this could have the effect of making intra-document
references, that _can_ be satisfied without a refresh, always force a refresh
for specification compliance.  An unintended but deleterious result for the
screen-reader-user (for example) could be that all the web-author's careful
construction of an internal navigation system would be defeated because the
visitor was finding themselves in a different document each time they try to
use the navaids to move within the one that they have in hand.

Since there is syntax, (is it sameTerminalPathSegment#foo ?) that will have
the global, with BASE invoked, effect, and this is not that burdensome with
the terminal path segments that are commonly used, I don't see the downside
to what Larry espoused.

Al

>Larry



