docno="lists-037-10011306"
received="Tue Feb  4 20:19:47 1997"
isoreceived="19970205011947"
sent="Tue, 4 Feb 1997 17:16:00 -0800 (PST)"
isosent="19970205011600"
name="Gregory J. Woodhouse"
email="gjw@wnetc.com"
subject="Re: app/foo and app/fooresult"
id="Pine.SGI.3.95.970204170917.14047B-100000@shellx.best.com"
charset="US-ASCII"
inreplyto="9702041620.ZM10638&#64;gaia"
expires="-1"

To:marc@ckm.ucsf.edu
cc:w3c-dist-auth@w3.org


It seems to me that the approach most consistent with the HTTP architecture
is

1. Define a new method (using PEP perhaps?)
2. Use a standard media type in thed request header, such as
multipart/form-data.
3. Encode any parameters (including the request type) in request body.

I have to agree that kludging the media type by adding a new webdav type is
a major departure from the HTTP architecture, an we shouldn't go down this
road.

Another idea I've been considering (and maybe this is why I suggested
multipart/form-data) is to use Content-Disposition to specify what server
object (I can't think of a better term) should handle the request. Possible
objects would include lock and version managers.

---
gjw@wnetc.com    /    http://www.wnetc.com/home.html
If you're going to reinvent the wheel, at least try to come
to come up with a better one.



