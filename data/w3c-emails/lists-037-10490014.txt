docno="lists-037-10490014"
received="Tue Feb 11 16:57:17 1997"
isoreceived="19970211215717"
sent="Tue, 11 Feb 1997 17:57:16 -0400"
isosent="19970211215716"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: Draft Combined Requirements Document"
id="3300EB3C.60680101@w3.org"
charset="us-ascii"
inreplyto="v0213050baf2677f61e2f&#64;[205.181.197.74]"
expires="-1"


To: David Durand<dgd@cs.bu.edu>
CC:w3c-dist-auth@w3.org

David Durand wrote:
> 
> The W3C position, strongly
> articulated by Dan Connolly, was that any interpretation of URLs was not
> acceptable.

Just to be clear: That's certainly my position (and TimBLs and
Henriks)...
calling the W3C position might be
overstating things a bit -- we aren't speaking for the members
in this case.

> As above, "URL-hacking" was a controversial approach that some were not
> willing to accept. The functionality is crucial, but if URLs cannot be
> interpreted new HTTP methods are needed, and a round-trip is required for
> certain obvious operations.

Huh? I don't think that conclusion follows: What's wrong with sending
the version info along side the URL whenever you need it, in order
to prevent round-trips? That's what protocol design is all about, right?

<resource href="XXXXXXdon'tlookinsidemeXXXXXX">
     <link rel=version-successor href="YYYYdon't/look/in/here/either">
        </resource>

That completely tells the relationship between XXX and YYY without
URL-munging.

If you're not familiar with the <resource> concept, please see:
http://www.w3.org/pub/WWW/MarkUp/Resource/Specification

Actually, more folks seem to like the name <about> for this purpose. And
other folks want to express the same thing in S-expressions. Stay tuned
to
see how it all comes out.

The bottom line is: don't look in the name for this info. Put it
somewhere else.

> I will add that VTML also contains facilities to send multiple versions of
> a document in a single reasonably organized package. This is essentially a
> simplification/generalization for general stream of the kind of information
> kept in a version repository.

Yup... that's what this group is doing: figuring out how to exchange
data between version repositories.

Dan



