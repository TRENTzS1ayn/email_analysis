docno="lists-037-10816838"
received="Thu Feb 13 17:23:38 1997"
isoreceived="19970213222338"
sent="Thu, 13 Feb 1997 14:23:00 PST"
isosent="19970213222300"
name="Judith Slein"
email="slein@wrc.xerox.com"
subject="Warwick Framework, etc."
id="2.2.32.19970213222300.00919214@pop-server.wrc.xerox.com"
charset="us-ascii"
expires="-1"


To:w3c-dist-auth@w3.org

I've just been having a phone conversation with Michael Mealling and Ron
Daniel about the possibility of using multipart/related content to transmit
attributes and in many other contexts as well.  This is really what the
Warwick Framework amounts to in the context of attributes.

For a given resource, those of its attributes that belong to a given schema
(say, the DAV schema) get packaged together as a single resource.  So my
resource may have several attribute packages associated with it:  DAV,
Dublin Core, MARC, PICS, usage constraints / copyright stuff . . .

Each schema has its own MIME type.

If I request the DAV, Dublin Core, and PICS attributes, I get back a
multipart/related message body that starts out with a catalog describing all
its parts, followed by the three metadata packages.  The catalog might be of
MIME type application/relations (Ron is mailing out his proposed definition
of this MIME type) or it might be a Web Collection or something else.

The catalog basically has to be able to convey a hierarchy of relationships
between resources.  So it would tell me that I'm getting DAV information
about resource URI-1 from resource URI-2, followed by Dublin Core
information about resource URI-1 from resource URI-3, followed by PICS
information about URI-1 from URI-4. 

Other places where Ron suggests using multipart/related:

CHECKOUT:  The response body could be multipart/related with a catalog
describing its contents, then the primary resource that was requested, the
images, etc., linked to it, and its attributes.

CHECKIN:  The request body could be multipart/related with a catalog, then
the resources that changed, and their changed attributes.

We talked a little about three concerns that I had or heard from others:

1.  If we package together all the metadata for a given schema as a single
resource, this could get very large.  If there is image data and audio and
all sorts of stuff in the package, and all I want is the author's name, it
seems unsatisfactory to have to send the whole package.

The suggested solution is for us to define or select a simple schema (maybe
it's the Dublin Core) that just has basic stuff in it and is pretty certain
to stay small.  All servers are required to support this basic schema.  If I
just want author or title, I ask this is the metadata package I ask for.

2.  Is content negotiation about attributes possible?  Yes.  Metadata
packages are resources.

3.  How can we deal with custom attributes?

If a site wants its own attribute set, it just defines its own
(experimental) schema, with its own MIME type and a helper app to process it.

If an individual just wants to attach a custom attribute to a resource and
is not in a position to provide the help app, etc., there is no good answer
right now . . . but the application/directory MIME type now being defined
might be able to accommodate custom attributes.  Michael is looking into this.

--Judy
Name:Judith A. Slein
E-Mail:slein@wrc.xerox.com
Internal Phone:  8*222-5169
External Phone:(716) 422-5169
Fax:(716) 265-7133
MailStop:128-29E



