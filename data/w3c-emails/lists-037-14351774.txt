docno="lists-037-14351774"
received="Thu Jul 10 21:06:40 1997"
isoreceived="19970711010640"
sent="Thu, 10 Jul 1997 21:11:31 -0400"
isosent="19970711011131"
name="Sankar Virdhagriswaran"
email="sv@hunchuen.crystaliz.com"
subject="comments on most recent draft"
id="33C58843.751F@mail.crystaliz.com"
charset="us-ascii"
expires="-1"


To:w3c-dist-auth@w3.org

Here are the top level comments on the WEBDAV protocol docments that I
have so far.
Hopefully, these will be addressed in the 2 day session.

1. As far as I understand of the WEB-DAV protocol it is silent on the
behavior of proxies, gateways, and pipe-lines. These architectural
features are part of the HTTP 1.1 spec. and since WEB-DAV is an
extension of 1.1 it should specify the behavior of these components. It
is extremely important for us since we might use proxies to add
trasactional semantics to WEB-DAV requests. The function of proxies gets
tricky given that WEB-DAV defines additional HTTP methods such as
DELETE, MERGE, etc. (particularly for cacheing proxies).

2. We need a way to introduce "trasactional context" as meta data on all
web-dav requests. It will be worth while finding out how we can do that
in WEB-DAV. A simple notion of a transactional context is a "view" or
"workspace" in which reads/writes/touches are prepared. 

3. Currently, WEB-DAV invents a new meta data protocol. However, you are
also
considering using the MCF in XML  spec. from Apple/Netscape. We prefer
that MCF be chosen for the following reasons:

a) For our domains we would like to ship type definitions as meta data
in order to avoid round trips in some cases. Additionally, we might also
want to ship entity-relationship models as meta data for requests to
relatonal databases. MCF is very flexible in allowing one to specify
such meta data. 

b) In addition to the above use, we are also considering using MCF to
specify index
information for web-sites that our tool creates. We would like to see
WEB-DAV adopt MCF rather than your own invention because with one
engineering implementation (an MCF/XML
generator/parser) we can kill several birds. Therefore, I would like to
push for MCF. While it may increase the payload, for our applications,
it may actually reduce the round-trip costs.



