docno="lists-037-15335984"
received="Mon Aug 18 17:14:00 1997"
isoreceived="19970818211400"
sent="Mon, 18 Aug 1997 14:12:18 -0700"
isosent="19970818211218"
name="Yaron Goland"
email="yarong@microsoft.com"
subject="RE: WEBDAV WG Meeting summary"
id="11352BDEEB92CF119F3F00805F14F485037BC17A@RED-44-MSG.dns.microsoft.com"
inreplyto="WEBDAV WG Meeting summary"
expires="-1"


To:"'Larry Masinter'"<masinter@parc.xerox.com>,ejw@ics.uci.edu
Cc:"Harald Alvestrand (E-mail)"<Harald.T.Alvestrand@uninett.no>,"Keith Moore (E-mail)"<moore@cs.utk.edu>,"'WEBDAV Mailing List'"<w3c-dist-auth@w3.org>

I have been thinking about this and I admit that I change my view
depending upon the prevailing winds. On one hand methods are NOT
implementation bound, they are abstractions. So a Depth header would say
"Instead of just copying the resource, copy the resource and all its
children." Same abstraction, even if the implementation is completely
different from the way a single copy is implemented.

On the other hand, additional semantics are caused by the Depth on say a
move where there are order requirements such that the hierarchy must
first be created and then the resource moved. Still, I'm not fully
convinced that this change is far enough from the spirit of move to
require a separate method name.

Currently the only thing that I really like about a new method name is
that it means we don't have to use PEP.

Yaron

> -----Original Message-----
> From:Larry Masinter [SMTP:masinter@parc.xerox.com]
> Sent:Monday, August 18, 1997 11:10 AM
> To:ejw@ics.uci.edu
> Cc:Harald Alvestrand (E-mail); Keith Moore (E-mail); 'WEBDAV
> Mailing List'
> Subject:Re: WEBDAV WG Meeting summary
> 
> > - The Depth header (and hence recursive semantics for method
> invocations) 
> > should be moved to a separate specification, which will proceed
> separately 
> > from draft-ietf-webdav-protocol.  There was a suggestion to not use
> a Depth 
> > header, but to instead define separate functions (e.g., DEEPCOPY)
> for the 
> > recursive analog to existing methods.
> 
> My experience is that recursive or multi-level methods for copying
> data
> structures are actually quite varied, and that the reason for doing
> the
> separation is that you will find that you need more information than
> just the depth to determine the actual semantics of the operation, and
> that further "copy to N levels" is fundamentally a different operation
> than "just copy this top-level operation".
> 
> (E.g., as a point to consider, note that typical Lisp language
> definitions have had many different copy operations, depending on
> how carefully they attempted to preserve structure. While it is
> possible to overload a single copy operation just by adding additional
> parameters, the implementations were considerably different.) 
> -- 
> http://www.parc.xerox.com/masinter



