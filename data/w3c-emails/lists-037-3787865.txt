docno="lists-037-3787865"
received="Tue Sep 24 18:07:04 1996"
isoreceived="19960924220704"
sent="Tue, 24 Sep 1996 16:01:20 -0700"
isosent="19960924230120"
name="Steve Carter"
email="srcarter@xmission.com"
subject="Re: Possibly Naive Question -Reply"
id="32485A30.556E@xmission.com"
charset="us-ascii"
inreplyto="96Sep23.155957pdt.&quot;2757&quot;&#64;golden.parc.xerox.com"
expires="-1"


To: Larry Masinter<masinter@parc.xerox.com>
CC:srcarter@novell.com,gramlich@bigbang.eng.sun.com,w3c-dist-auth@w3.org

My comments below:  -src

Larry Masinter wrote:
> 
> I've been thinking about the exchange we've had about "distributed
> editing vs reinventing file system protocol", and trying to extract
> from it:
> 
> * Which requirements for distributed editing
>   can NOT be met by a file system protocol?

I think that most (if not all) file systems will have a problem with a
presistant lock and in maintaining the ownership of that lock.
Generally, if a file system is advised that a file is to be locked to
prevent writing by anyone other that the lock holder, that lock is only
honored until the file system is restarted. This is reasonable because
the assumption is that the process editing the document will have gone
through the same state change as the file system and will therefore know
that the lock must be re-aquired. This will not be the case with
distributed authoring. The file system state will be a non-issue as far
as the authoring process is concerned. For these and the other reasons
I've stated, the working group is working toward augmenting existing
protocols to allow persistant-state (lock being one of the states)
processing of documents in a global context.

> 
> * Are those requirements explicitly described in the "Requirements
>   on HTTP for Distributed Editing" (an unfortunate title).

The intent is that the requirements be explicit. We spent several hours
on the requirements during our last meeting. Jim will soon publish the
result and I anticipate more discussion. This will be a great
opportunity for you to see where we are.
> 
> I think that most of the requirements are 'information hiding' rather
> than 'capabilities' requirements (e.g., "clients need not be aware of
> server's locking scheme in order to add a new version" is an
> information hiding requirement.)
> 
> Larry

Information hiding is only one of the aspects of the requirements. State
hiding is another. Persistance yet another. This is far from a simple
case.
-- 
-src
Steve Carter
Novell
srcarter@novell.com

At night, God leaves the lights on --
so that we know he is home.



