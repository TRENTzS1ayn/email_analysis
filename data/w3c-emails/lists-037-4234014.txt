docno="lists-037-4234014"
received="Mon Oct 28 13:19:09 1996"
isoreceived="19961028181909"
sent="Mon, 28 Oct 96 13:25:11 -0500"
isosent="19961028182511"
name="hallam@ai.mit.edu"
email="hallam@ai.mit.edu"
subject="Re: Prelim. DAV spec."
id="9610281825.AA04690@etna.ai.mit.edu"
inreplyto="Pine.SGI.3.95.961028095729.25763A-100000&#64;shellx.best.com"
expires="-1"


To:gjw@wnetc.com,w3c-dist-auth@w3.org
Cc:hallam@ai.mit.edu


>Since HTTP/1.1 allows GET with a body, why not use something like

>GET <URI> HTTP/1.1
>[...]
>Document-Author: <ID>
>Want-Source: yes
>Authors-Credentials: <whatever>
>Version-Number: 4
>[...]

Because it completely destroys the idea of being able to link to an
arbitrary document from an arbitrary HTML page using a single 
URI.

Schemes such as this require all the clients to be rewritten and
promote the obsolete hypertext model the Web replaced. The key
advance of the web was to do away with the need for special editors,
convoluted document repositories etc.

If information is an accessor for a document it bellongs in the URI,
otherwise it does not.

The most that could be done with URIs at a lexical level would be to 
provide an assertion that the URI conformed to a lexical convention 
concerning version numbers.

If we are going to support collaborative authoring it better support
divergent versions and at least a hierarchical organisation of the
version resources.


Another point, we need to consider the definition of "set" objects, 
analogous to the old CMS classes and Groups. a CMS group
was a collection of resource entities. A Class was a collection of
particular variants of a resource. To make a release one would
create a class with the versions of the resources used to make
that release. the groups were used simply to collect resources together 
into handy units.

We should be prepared to think beyond "files" however. As anyone
who has coded LISP will know files are not a usefull grouping
for program objects. Indeed there is no single such grouping.


Phill



