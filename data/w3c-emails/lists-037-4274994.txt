docno="lists-037-4274994"
received="Mon Oct 28 15:13:18 1996"
isoreceived="19961028201318"
sent="Mon, 28 Oct 96 15:19:22 -0500"
isosent="19961028201922"
name="hallam@ai.mit.edu"
email="hallam@ai.mit.edu"
subject="Re: Prelim. DAV spec."
id="9610282019.AA04946@etna.ai.mit.edu"
inreplyto="Pine.SGI.3.95.961028104400.10544A-100000&#64;shellx.best.com"
expires="-1"


To:gjw@wnetc.com,w3c-dist-auth@w3.org
Cc:hallam@ai.mit.edu


>I guess this depends on the role you expect document versioning to play in
>the first place. If you intend that versions 1 and 2 of the same document
>should co-exisxt and poth should potentially be available to end users,
>then you are right: each should ahve its own URI. On the other hand, if
>only one version should be available to to end users and old versions exist
>primarily for contnent developers, then I am not convinced.

Regardless of who is going to interpret the URIs if it is a different
resource or a different view on a resource it has another name.

>Of course,
>unless parallel development paths are ordered then there is no concept of
>current version.

The current version may depend on the beholder.

The document preparer may consider the current document to be the 
one in preparation, the customer the one that is published. If the
resource is a code fragment there may be reasons to select different
versions in different contexts.

The Web as it stands is primarily a uniform mapping from URLs to resources.
Very few mappings depend upon the observer. If you look at the hermeneutics
stuff the presentation of material in the observers belief system is key.

If we could promote the www-authenticate tokens to URIs and pass them
to the server (ie user hallam in realm ai.mit.edu becomes 
UID:hallam@ai.mit.edu) we can construct a principled method of 
presenting individuals with customized views. This is one idea behind
the session-id drafts.


This seems to argue in favour of a generalized "slot" for passing the 
context in which we want to view the document. This might have multiple
defaults. One way of using such a "slot" would be to use a class
(ie collection of versions) to view the state of a Web at a particular
moment in time without having to web-whack all the URLs.

Phill



