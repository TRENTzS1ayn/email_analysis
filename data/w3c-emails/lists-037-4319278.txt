docno="lists-037-4319278"
received="Mon Oct 28 21:13:33 1996"
isoreceived="19961029021333"
sent="Mon, 28 Oct 1996 17:13:06 PST"
isosent="19961029011306"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="Re: POST vs. separate methods"
id="96Oct28.181306pdt."415911"@mule.parc.xerox.com"
inreplyto="9610281339.aa02026&#64;paris.ics.uci.edu"
expires="-1"

To:ejw@kleber.ics.uci.edu
CC:w3c-dist-auth@w3.org


> I'm interested in receiving feedback from the group on whether they feel
> having distributed authoring and versioning functionality is best
> performed via a POST (with many new content types), which is descreibed
> in the current spec., or whether it would be better to have this functionality
> implemented as many new methods, with parameters in headers, and mostly blank
> entity types.

The primary constraint, I think, is how various proxy & security
gateway services might deal with POST-with-new-entity-body vs. a new
method. A survey ("what's actually implemented?") would be useful,
since otherwise we're left with speculation.

A secondary issue (which doesn't actually affect the choice) is the
question of cache invalidation, e.g., after copy(a, b), any cache
entries for B should be invalidated even if are otherwise fresh, if
we're going to require sequential transparency of information
delivered through the same set of proxies.

E.g., if you do copy(a, b) and then ask for b, then YOU see the
version you copied even if others who use a different cache might be
updated later.

This is already an issue for POST, PUT and DELETE, but http-wg didn't
(yet) create any mechanism for doing this.

Larry








   
 



