docno="lists-037-4366603"
received="Tue Oct 29 15:02:47 1996"
isoreceived="19961029200247"
sent="Tue, 29 Oct 1996 12:01:15 -0800"
isosent="19961029200115"
name="Yaron Goland"
email="yarong@microsoft.com"
subject="RE: POST vs. separate methods"
id="c=US%a=_%p=msft%l=RED-44-MSG-961029200115Z-1264@INET-03-IMC.itg.microsoft.com"
inreplyto="POST vs. separate methods"
expires="-1"


To:"'Larry Masinter'"<masinter@parc.xerox.com>,"'ejw@kleber.ics.uci.edu'"<ejw@kleber.ics.uci.edu>
Cc:"'w3c-dist-auth@w3.org'"<w3c-dist-auth@w3.org>

In so far as I am aware Catapult will just pass the information through. I 
am sure the Apache folks on this list will let us know what Apache does. 
Anyone know the Netscape story?

As for caching, we need to differentiate between two different parts of 
this process. The first part is the request for an action, the second part 
is the action itself. Sending a COPY request does not cause a copy to 
occur. It only requests that a copy occur. It is up to the request handler 
to make the actual GETs and PUTs, or logical equivalent. If files are being 
copies across servers then the GETs and PUTs will take care of the caches. 
If the copy happens on a single server then we have a typical cache 
problem. What happens if you copy a file on a server? The cache contains 
bad information, that is what happens. Using methods does not solve this 
problem as copy allows for multiple simultaneous requests. Are we going to 
have caches parse the response messages to see which files were actually 
copied and then dump their corresponding cache entries?

We are dancing around a problem that a lot of people are aware of - Server 
Push. However that is a whole other problem and I do not believe this is 
the right forum for it.

My conclusion is that the cache consistency problem is inherent to the 
current cache infrastructure and that using methods does not solve this 
problem.

One final note, using methods or using POST w/mime types are absolutely 
semantically equivalent. So any problem you bring up with POST w/mime types 
will also exist with methods.

Yaron

-----Original Message-----
From:Larry Masinter [SMTP:masinter@parc.xerox.com]
Sent:Monday, October 28, 1996 5:13 PM
To:ejw@kleber.ics.uci.edu
Cc:w3c-dist-auth@w3.org
Subject:Re: POST vs. separate methods

> I'm interested in receiving feedback from the group on whether they feel
> having distributed authoring and versioning functionality is best
> performed via a POST (with many new content types), which is descreibed
> in the current spec., or whether it would be better to have this 
functionality
> implemented as many new methods, with parameters in headers, and mostly 
blank
> entity types.

The primary constraint, I think, is how various proxy & security
gateway services might deal with POST-with-new-entity-body vs. a new
method. A survey ("what's actually implemented?") would be useful,
since otherwise we're left with speculation.

A secondary issue (which doesn't actually affect the choice) is the
question of cache invalidation, e.g., after copy(a, b), any cache
entries for B should be invalidated even if are otherwise fresh, if
we're going to require sequential transparency of information
delivered through the same set of proxies.

E.g., if you do copy(a, b) and then ask for b, then YOU see the
version you copied even if others who use a different cache might be
updated later.

This is already an issue for POST, PUT and DELETE, but http-wg didn't
(yet) create any mechanism for doing this.

Larry



