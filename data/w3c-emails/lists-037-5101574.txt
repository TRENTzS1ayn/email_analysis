docno="lists-037-5101574"
received="Mon Nov  4 02:06:07 1996"
isoreceived="19961104070607"
sent="Sun, 3 Nov 1996 23:05:58 PST"
isosent="19961104070558"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="Re: Opinion on Notify Request Header"
id="96Nov3.230558pst."2694"@golden.parc.xerox.com"
inreplyto="c=US%a=_%p=msft%l=RED-44-MSG-961104054521Z-11853&#64;INET-01-IMC.microsoft.com"
expires="-1"

To:yarong@microsoft.com
CC:ejw@ics.uci.edu,w3c-dist-auth@w3.org


I'm not questioning the need for asynchronous progress
notification. I'm questioning the need for a request header to ask for
it.

A simpler approach would be to say that servers should always send
back progress indications for long-running requests with whatever
frequency they deem reasonable to implement, and that clients should
accept progress indications and ignore them if they want.

If 100 Continue isn't adequate for what you want (and I suppose it
isn't), propose a different response.

# This sort of asynchronous notification solves a problem so fundamental
# it has been built into just about every OS known to humanity.

While I know of lots of progress-reporting mechanisms, I don't know
any that are built into operating systems, and I thought that most
distributed systems wind up inventing their own. Many networking
protocols don't contain any such mechanisms even when they're needed.

What is the asynchronous notification mechanism built into any of:
Multics, MS DOS, Unix, Tenex, the Alto OS, MacOS, Windows?

I don't remember anything like this in ONC/SunRPC, Grapevine, XNS
Courier, SMTP, HTTP. FTP has a progress header, but its application is
limited. Unless you're thinking of something else?

Could you explain what you mean by 'built into just about every OS
known to humanity'?

Larry



