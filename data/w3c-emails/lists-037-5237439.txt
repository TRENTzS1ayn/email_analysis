docno="lists-037-5237439"
received="Mon Nov  4 22:20:35 1996"
isoreceived="19961105032035"
sent="Mon, 4 Nov 1996 19:19:19 -0800"
isosent="19961105031919"
name="Jim Whitehead"
email="ejw@ics.uci.edu"
subject="Re: POST vs. separate methods"
id="aea45921110210046540@[128.195.21.209]"
charset="us-ascii"
inreplyto="POST vs. separate methods"
expires="-1"


To:w3c-dist-auth@w3.org


Yaron writes:
># I have discussed this off line with Roy and frankly I think this is a
># religious issue. Roy and I have fundamentally different visions of what
># HTTP should become.

Larry writes:
>I think your characterization of this as a 'religious' issue is
>insulting, and the idea that a discussion at the November conference
>might resolve something about the future of HTTP is presumptuous.
>
>I've yet to see anything here that constitutes a 'religious'
>argument. I've tried to raise in a constructive manner the concerns
>about representations of metadata and document attributes in network
>protocols and in HTTP that I've seen, and raised the points in a
>way that I'd hoped was constructive.

Well, having been able to overhear Roy's end of he and Yaron's phone
conversation, it was evident to me they had very different views on this
topic.

In a nutshell, Roy and Yaron differ in their model of a web server.  Roy
sees a web server as a collection of objects, with methods defined on them,
a la object-oriented programming.  Yaron sees a web server as a collection
of agents (computational entities), of which some serve documents, while
others perform activities like "copy" or "server diff."  In fact, there may
be many agents capable of performing an activity, and a single agent may be
capable of handling more than one type of activity.

In Roy's view (Object Oriented) of HTTP, an HTTP message is directed to an
object (the Request-URI), which handles the method in the request message.
In Yaron's view (Agent) of HTTP, an HTTP message is directed to an agent
(or a default HTTP agent), which then handles either the HTTP/1.1 style
message or processes the command specified in the MIME type of the request
message.  The advantage of the Agent view is the range of capability of the
agents isn't hardwired, and there may be many agents, with slightly
different characteristcs, all active simultaneously in the same server.
The advantages of the Object Oriented view stem from the fixed set of
methods: this fixed set is understood better by existing Web technology
(e.g., caches), and can be used to implement a simple access control scheme
(method x user --> ACL).

I think it is this difference in how Roy and Yaron view HTTP which Yaron
was referring to when he wrote, "Roy and I have fundamentally different
visions of what HTTP should become."

While I agree this issue should be an item for discussion at the upcoming
meeting, I also feel that some discussion of this issue on the list is of
value before we meet.

- Jim



