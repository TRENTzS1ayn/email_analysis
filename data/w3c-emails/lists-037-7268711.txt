docno="lists-037-7268711"
received="Fri May  2 11:17:53 1997"
isoreceived="19970502151753"
sent="Fri, 2 May 1997 10:16:36 -0500"
isosent="19970502151636"
name="Fisher Mark"
email="FisherM@exch1.indy.tce.com"
subject="RE: WEBDAV Security"
id="c=US%a=_%p=THOMSON%l=TCEIS5-970502151636Z-39650@tceis5.indy.tce.com"
charset="us-ascii"
inreplyto="WEBDAV Security"
expires="-1"


To:"'Jon Radoff'"<jradoff@novalink.com>,"'-=jack=-'"<jack@twaxx.twaxx.com>
Cc:"'Ron Daniel, Jr.'"<rdaniel@lanl.gov>,"'w3c-dist-auth@w3.org'"<w3c-dist-auth@w3.org>

>>   1.  Define an API which would exist in a shared-library type space on
>>       the server (or a DLL on NT).
>> 
>>   2.  Applications that wanted to be able to verify if a user has a
>>       certain permission would make API calls to do so and respond
>>       accordingly.
>> 
>>   3.  The shared-library containing API calls would be able to connect
>>       to compliant modules defined by the system administrator (e.g.,
>>       if vendor X wanted to provide a module that makes them
>>       compatible with the API, they'd ship this as a component -- not
>>       unlike how ODBC works in the database world...)
>-------------------------
>
>This is pretty nice, that's a good approach, IMHO, and ODBC has
>been a fairly successful endeavor, so that also bodes well.

Just for reference, there are other successes along this line:

1) Microsoft Exchange support both native Exchange Server and Microsoft
Mail postoffices (that made _my_ migration easy!).

2) The Perl DBI database interface modules work nicely, I'm told.

Undoubtedly others can think of many more...
==========================================================
Mark Leighton Fisher          Thomson Consumer Electronics
fisherm@indy.tce.com          Indianapolis, IN
"ViaCrypt?  Vhy not!"



