docno="lists-037-7514900"
received="Tue May  6 08:32:20 1997"
isoreceived="19970506123220"
sent="Tue, 06 May 1997 08:35:24 -0400"
isosent="19970506123524"
name="Sankar Virdhagriswaran"
email="sv@hunchuen.crystaliz.com"
subject="Re: factoring of DAV services"
id="3.0.32.19970506083148.006c9390@mail.crystaliz.com"
charset="us-ascii"
inreplyto="factoring of DAV services"
expires="-1"


To: Larry Masinter<masinter@parc.xerox.com>, Sankar Virdhagriswaran<sv@hunchuen.crystaliz.com>
Cc:w3c-dist-auth@w3.org

>At least, that was the general idea. It's up to you to evaluate whether
>the design and its elaboration meets your needs.

By stoping at the "resource" boundry and also by not separating the
services offered by a DAV system we are not scaling the DAV system itself.
Here are some examples. 

In existing version control systems the management of delta is done in
atleast four ways that I know of - full copies, forward deltas, reverse
deltas, and change sets. Each of these are appropriate for different types
of media and different applications. If we pull this service out as a
separate piece, then we can plug and play different "storage management"
services for different applications and we can allow users to mix and match
them too.  

Similarly configurations and versions are intimately related and another
server can be used to manage these two together. This is already done by
commercial companies today. In fact, placing the name management
functionality in different places in the client-server pipe (i.e., client,
group proxy, server) limits/makes-possible different types of configuration
serving.

etc., etc.

This is why I wondered if a service model had been developed.






Sankar Virdhagriswaranp. no: 508 371 0404



