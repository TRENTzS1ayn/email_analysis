docno="lists-038-0758948"
received="Tue Oct 14 15:27:25 1997"
isoreceived="19971014192725"
sent="Tue, 14 Oct 1997 15:14:55 +0600"
isosent="19971014091455"
name="John Turner"
email="johnt@cgocable.net"
subject="Re: WebDAV Tree Operations"
id="199710141927.PAA26951@mail.cgocable.net"
charset="us-ascii"
inreplyto="WebDAV Tree Operations"
expires="-1"


To:w3c-dist-auth@w3.org

The three tree operation methods definitely fill a void.  My feeling is that
some additional level of control for  multiple copies would be useful, but I
am not certain whether it is worth the added complexity.

My one negative comment on the draft is that I do not like the way the
failed operations are handled.  I do agree that the namspace consistency is
important, but think that it can be maintained differently.

For DELETE-TREE, if a resource cannot be deleted, I would prefer that the
parent collection fail as well, rather than having it succeed but a new
collection created in its place.  Creating a new collection after having
deleted the original leaves the remaining collections in a strange state,
not gone, but not what they were before the delete.

In a similar way, I think that with the COPY-TREE, if a collection fails to
copy, then its members should fail also, or in fact may not even be tried at
all.  If it fails, but its children are copied, you have an imperfect copy.
Children are there, but the parent is not consistent with the original.

The COPY-TREE description should probably state that copying over an
existing destination should delete the destination (similar to what it says
for MOVE-TREE).

The MOVE-TREE specifies that a move onto an existing collection must delete
it.  It does not say if the move should continue if the delete (or
DELETE-TREE) fails.  I would especially dislike having it move over a
destination that was deleted, then recreated because a member could not be
deleted.


John Turner
johnt@cgocable.net



