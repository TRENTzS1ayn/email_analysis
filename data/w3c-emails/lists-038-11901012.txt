docno="lists-038-11901012"
received="Thu Sep 24 17:17:17 1998"
isoreceived="19980924211717"
sent="Thu, 24 Sep 1998 17:18:12 -0500"
isosent="19980924221812"
name="Sankar Virdhagriswaran"
email="sv@crystaliz.com"
subject="RE: Versioning goals doc"
id="001501bde809$37e86a10$d7acddcf@eor.crystaliz.com"
charset="iso-8859-1"
inreplyto="360AB01C.DB1B09F4&#64;netscape.com"
expires="-1"

To:"John Stracke"<francis@netscape.com>,"WebDAV WG"<w3c-dist-auth@w3.org>


John,

> > - Under "Definitions" : I don't think it is necessary that abstracted
> > versioned resources do not exist.  In fact, I don't really see
> the point of
> > this term.  It really assumes you have some Vgraph like implementation.
>
> Well, yes.  Isn't that where we are? The "CM must be an optional feature"
> requirement, which came out of the Chicago meeting, takes the
> "versioning is
> the degenerate case of CM" approach out of the running.  Given
> that, the only
> proposals on the table are Vgraph-based.

I don't understand your point. How would CM being an optional feature take
out "versioning is the degenerate case of CM" as it applies to "presenting
and searching through (below) a version graph" - which sounds like the
requirement. A CM based system may (in the non optional mode) be able to
"generate" a version graph and allow it to be searched by the client. Notice
that the CM system may or may not implement vgraphs. It might be able to
derive that information from its implementation (very easy to do). Assuming
an "implementation approach based on vgraph" limits the second class of
systems (CM systems) in ways I don't think should be limited.



