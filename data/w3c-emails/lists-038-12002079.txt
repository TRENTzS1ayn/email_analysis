docno="lists-038-12002079"
received="Mon Sep 28 12:41:18 1998"
isoreceived="19980928164118"
sent="Mon, 28 Sep 1998 12:42:21 -0500"
isosent="19980928174221"
name="Sankar Virdhagriswaran"
email="sv@crystaliz.com"
subject="RE: Versioning goals doc"
id="002901bdeb07$587409a0$d7acddcf@eor.crystaliz.com"
charset="iso-8859-1"
inreplyto="000201bdeaf9$b01eb280$d115c380&#64;galileo.ics.uci.edu"
expires="-1"

To:<ejw@ics.uci.edu>,"WEBDAV WG"<w3c-dist-auth@w3.org>


> One of my major concerns with a change-oriented approach is that
> it tends to
> assume the system has a lot of content-type-specific knowledge,
> and it tends
> to assume you're dealing with text-like objects.  This is
> contrary to one of
> the underlying design principles of the Web, which is that operations are
> media-type independent.
>
> - Jim

Jim,

I don't agree with the second part of your first sentence. Yes, one of the
advantages of the change oriented approach is that it can provide better
results if the type is known. But, it need not *nessarily* assume that one
is dealing with text-like objects. In our system, the operations can be
customized per media type. Good systems [such as ours ;-)] implement a
framework such that one could implement customized change sets for the
object type at hand.

There is also a finer grained discussion here. You folks might have talked
about it already. If so, forgive me for being repetitive. Have you folks
thought about the problem of versioning modifications to a structure - i.e.,
a web of pages (or for the file/directory oriented - versioning
directories). If you have a content type based change set approach, you can
deal with this easily - since structure is another type of content.

Also, your points are about implementation approaches - not about protocol.
If you were bringing up this issue to show existence proof *does not* exist,
I disagree.



