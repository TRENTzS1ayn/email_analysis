docno="lists-038-12778916"
received="Thu Oct  8 15:32:47 1998"
isoreceived="19981008193247"
sent="Thu, 8 Oct 1998 15:26:40 -0400"
isosent="19981008192640"
name="ccjason@us.ibm.com"
email="ccjason@us.ibm.com"
subject="Re: Backpointers"
id="85256697.0065CB9A.00@us.ibm.com"
charset="us-ascii"
inreplyto="Backpointers"
expires="-1"

To:w3c-dist-auth@w3.org



> Second, I think DAV properties should be minimized (and they are), and
limited
> to the properties that are required to support the protocol. If no WebDAV
> method requires a backpointer in order to describe its semantics, then
> backpointers shouldn't be DAV properties. Finding links to a resource
does not
> require a backpointer. It can be done, albeit inefficiently, by doing a
search.

I didn't speak up earlier when someone suggested this, but I will now.
The type of backpointers that I had in mind would tell which resources had
a property that pointed to this resource.   Any property.   My main purpose
in this is dealing with referential integrity... be it server maintained or
server assisted ref. integrity.   Formulating a search against ANY property
that refers to a resource does seem problematic.  Is it even possible for a
client to get an enumeration of all properties names of all resources on a
server?


> The DAV spec should not be in the business of specifying implementations,
even
> optional implementations. It should only specify behavior, semantics, and
> protocol mechanisms.

I don't think anyone was suggesting an implementation...  just outward
behavior.  HOW it is accomplished is the implementation issue.

Optional?: I for one, would like to have a backpointer property... but only
one with the semantics above would interest me.   Someone else might want
another definition of what goes into the backpointer property... and even
what I specified above is ambiguous.    I'm just saying that standardizing
on one semantics could require some work... and not just be a quick
addition to the spec.     Also, and perhaps this is a red herring, but if
resource AA references resource BB only via private (hidden) properties...
should I be allowed to know that AA somehow references BB if I don't have
access to the properties that contain the reference(s)?   For the sake of
referential integrity, I might... but that might also be considered a
security risk even if I'm not told what property it is.  As I said, this
might be red herring, but it's just another issue that would need to be
hashed out.   There are more.

Although, I would like to see a backpointer property on the server that I'd
use, and am willing to code it up to my liking, I'm not sure I could muster
the enough enthusiasm to work this out enough with everyone to drop it into
the spec as an (optional) feature.    And I definitely wouldn't want to
hold up the spec.

Is there anyone out there that feels strongly enough about a standardized
backpointer property to push this through right now?   If not, we can
continue discussing and prototyping... but not hold up the spec.  (Or is
that what we are already doing? :-))

J.



