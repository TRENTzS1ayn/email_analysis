docno="lists-038-12982320"
received="Sun Oct 11 23:16:03 1998"
isoreceived="19981012031603"
sent="Sun, 11 Oct 1998 20:15:49 PDT"
isosent="19981012031549"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="RE: Update to draft-ietf-webdav-dublin-core"
id="000401bdf58e$9c363000$15d0000d@copper-208.parc.xerox.com"
charset="iso-8859-1"
inreplyto="v03007806b24482ba5787&#64;[24.0.249.126]"
expires="-1"

To:"David G. Durand"<dgd@cs.bu.edu>,"WebDAV WG"<w3c-dist-auth@w3.org>
Cc:"Meta2 Mailing List"<meta2@net.lut.ac.uk>


I was arguing for a requirement to efficiently support reading, updating,
and querying single semantic properties ("author") without
disturbing other properties ("title"). If you want to say that both
"title" and "author" are part of a single dav "dublincore" property, then
you need a way to efficiently read, update, and query components
of properties. It does seem that with nested values, there may be no
other way -- multiple independent properties might not solve the problem.

But then, I wonder at the division between 'dublin core' style properties
and any other bits of metadata that is considered currently to be a
'property' of a resource. You could say that 'propfind' and 'proppatch'
are merely the methods by which parts of the 'metadata' property are
read and updated. Can the be extended to do more duty at other levels
of the hierarchy?

Larry
--
http://www.parc.xerox.com/masinter



