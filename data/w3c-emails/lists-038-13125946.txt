docno="lists-038-13125946"
received="Tue Oct 13 21:10:00 1998"
isoreceived="19981014011000"
sent="Tue, 13 Oct 1998 21:17:50 -0400"
isosent="19981014011750"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: Update to draft-ietf-webdav-dublin-core"
id="v03007803b249aae3ef95@[24.0.249.126]"
charset="us-ascii"
inreplyto="3.0.5.32.19981012092716.007eacc0&#64;mailback.parc.xerox.com"
expires="-1"


To: WebDAV WG<w3c-dist-auth@w3.org>

At 12:27 PM -0400 10/12/98, Jim Davis wrote:
>At 08:38 PM 10/9/98 PDT, David G. Durand wrote:
>>Exactly. If there's a general searching mechanism that can solve this, it
>>could search a monolithic property as easily as a multiple-valued property.
>
>True, search is no harder, but updates are far worse:
> 1. The client has to send the entire property just to change one piece of
>a field.  This is a nuisance.
> 2. It is impossible to enforce selective access to fields.  This is terrible.
>
>As I see it, there are three proposals:
> 1. monolithic.
> 2. structured properties (e.g. list values)
> 3. flattened.
>
>Monolithic is bad for the reasons I just explained.  "flattened" was
>proposed (I suppose) in case DASL did not have structured query, but it
>will, so there's no need for it (and besides, as David points out, it's a
>nuisance to manage.)
>
>Proposal 2 is convenient, natural, and has no disadvantages.
>
>Other than the choice of names for the separator tags (you don't like
>re-using li), what's the problem with, e.g.

Well, it actually has one huge diasdvantage:
In order to perform such updates within the property, we will require new
methods to express arbitrary XML structural changes. We will also need to
define data formats for transmitting those instructions.

If we define some simple special case, then we will be preventing some
properties from being naturally expressed, if, for example, they are
already DTD-based and don't happen to use <ol> and <li> to represent
element containment and repetition.

In principle, suhc an editing language is a very good idea. In practice, we
can live with LOCK/PROPPATCH/UNLOCK sequences for the foreseeable future,
and leave access control (rejection of some PROPPATCH operations) to
servers that care.

It seems like a hard problem that we don't need to solve now, and I think
that on that account we should punt it.

If practice shows that the bandwidth or implementation costs of monolithic
properties are serious problems, then there will be motivation to delve
into the problem of an update language properly.

   -- David

_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://www.dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



