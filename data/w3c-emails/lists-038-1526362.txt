docno="lists-038-1526362"
received="Fri Oct 24 15:02:46 1997"
isoreceived="19971024190246"
sent="Fri, 24 Oct 1997 08:38:33 PDT"
isosent="19971024153833"
name="Jim Davis"
email="jdavis@parc.xerox.com"
subject="conservation of complexity in UI?"
id="3.0.3.32.19971024083833.0096aaa0@mailback.parc.xerox.com"
charset="us-ascii"
inreplyto="771E1FEEEE41D111A95900805FFE658712AD60&#64;RED-MSG-51.dns.micr osoft.com"
expires="-1"


To: Paul Leach<paulle@microsoft.com>,w3c-dist-auth@w3.org,"'Larry Masinter'"<masinter@parc.xerox.com>

At 07:04 PM 10/23/97 PDT, Paul Leach wrote:
>If you can show me at least one UI design that hides this complexity,
>I'll buy it. Until then, it will be true that I've never seen a UI that
>can make anything simpler than the underlying intrinsic complexity --
>it's the law of conservation of complexity.

I can name two right off the top of my head.

Numerous Windows applications provide means to set properties and defaults
for the application.   Aren't these stored in the Windows Registry?  I
consider that complex.  Certainly the interface abstraction is simpler, if
by nothing else than hiding much detail.

The Z39.50 search protocol is a nightmare of complexity but most search UIs
by contrast are simple.  One way they gain simplicity is by providing a
higher level abstraction.  You will the form, it displays the results.  The
other is by hiding  rarely used but powerful features, e.g. Boolean
operations.  These confuse naive users.  The really good UIs have
progressive disclosure, so that if you actually need the advanced features
you can get to them, bit by bit.

In my opinion you won't be able to resolve the debate on access control
models by appeal to complexity baffling users.   There are doubtless other
reasons 

We'll find them.
Jim


------------------------------------
http://www.parc.xerox.com/jdavis/
650-812-4301



