docno="lists-038-16527229"
received="Mon Apr 12 17:59:06 1999"
isoreceived="19990412215906"
sent="Mon, 12 Apr 1999 15:02:09 -0700"
isosent="19990412220209"
name="Jim Davis"
email="jdavis@coursenet.com"
subject="Re: Advanced collections and ordering"
id="4.1.19990412144507.00a12730@research.coursenet.com"
charset="us-ascii"
inreplyto="37122ADB.54E8E8D1&#64;ecal.com"
expires="-1"


To:w3c-dist-auth@w3.org

At 05:18 PM 4/12/99 +0000, John Stracke wrote:
>"Slein, Judith A" wrote:
>
>> Do you know of applications that need this third kind of support, or servers
>> that really offer clients a choice from among multiple server-maintained
>> orderings?  Thanks for any help you can provide.
>
>Some time ago, Jim Whitehead and I were talking about the possibility of using
>DAV to implement a message forum.  In such a system, there are at least three
>obvious useful orderings: by sender, by date, and by thread.

I agree that it makes sense to use DAV to implement a message forum, but if
you think it though I think you'll also see that there are no implications
for ordered collections.

In my opinion, a server that wished to provide three distinct sorted views
on one underlying collection would best do it by advertising three distinct
collections, each supporting exactly one sort,e g.

http://mailserver.com/messages/byDate/
http://mailserver.com/messages/byAuthor/
http://mailserver.com/messages/byThread/

From the standpoint of the client, these would all be read-only
collections.  (It does not make sense for a client to insert into any of
these.)  So right away, most of the value of an advertised sort is gone --
the client can change the order, or even the contents, so it does not need
to know the underlying order.

See, the sorting types defined in ACR are really there to allow a client to
avoid destroying a carefully maintained order.  Client A writes a
collection in some order, and client B can discover that the collection is
ordered.  if B understands the ordering that A has asserted, B can
cooperate when it adds a new member.  if it does not understand the order,
then it can politely warn the human that the collection is ordered, and
avoid damaging what it does not understand.  But for a readonly collection,
client B can't do any harm.  Ignorance is bliss.

About the only value a client gets in this case is that it can say the user
"look, here's a collection, it's read only, and by the way the server says
it's sorted by date", and even this is only possible if the client happens
to recognize the sorting token.  But i think that in most cases, the human
will recognize this anyway, either from the name of the collection
("byDate") or just by being a fast pattern recognizer.

In conclusion, this feature should be left out of ACR until there's at
least one application with a compelling use case.  We should't add features
to ACR just because they seem neat.

In fact, I'll go further, and ask whether anyone will admit to planning to
implement ACR?  Are we wasting our time designing a feature set that no one
plans to implement?

please reply to jrd3@alum.mit.edu, despite the Reply-To address in the header.



