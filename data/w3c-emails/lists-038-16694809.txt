docno="lists-038-16694809"
received="Fri Apr 16 16:46:39 1999"
isoreceived="19990416204639"
sent="Fri, 16 Apr 1999 16:57:29 -0400"
isosent="19990416205729"
name="Brian Lloyd"
email="Brian@digicool.com"
subject="RE: Must PROPPATCH operation be atomic..."
id="613145F79272D211914B0020AFF6401914DAC8@gandalf.digicool.com"
inreplyto="Must PROPPATCH operation be atomic..."
expires="-1"


To:"'Lisa Lippert (Dusseault) (Exchange)'"<lisal@exchange.microsoft.com>,"'w3c-dist-auth@w3.org'"<w3c-dist-auth@w3.org>
Cc:"'gstein@lyra.org'"<gstein@lyra.org>

> I know this is an old conversation, but the email got buried in my
> mailbox...
> 
> Some PROPPATCH results can fail and others can succeed, so 
> this is why we
> have multi-valued responses.  Clients can easily see what happened.
> Rollback is difficult for servers to implement.  Are there any server
> implementations that do already implement this as atomic or 
> with rollback?
> I'm not aware of any.  I see rollback as a more advanced 
> feature, that we
> can figure out how to do later on.
> 
> Lisa

 Zope (web application server) implements atomic PROPPATCH 
w/rollback. We lucked out in this respect, as Zope is
based on a transactional object database which made this
relatively painless.

While implementing it on a non-transactional server is harder,
it still (IMHO) seems to be a requirement. Clients that respect 
the rfc will have an expectation that a failure means no changes 
were made. If this is not the case, you might have any number
of caching and resource integrity problems, based on mismatched
expectations on the part of the client and server...


Brian Lloyd        brian@digicool.com
Software Engineer  540.371.6909              
Digital Creations  http://www.digicool.com 



