docno="lists-038-4360680"
received="Tue Jan  6 19:15:06 1998"
isoreceived="19980107001506"
sent="Tue, 6 Jan 1998 15:39:24 PST"
isosent="19980106233924"
name="Jim Davis"
email="jdavis@parc.xerox.com"
subject="Re: Collections that Support Naming/Numbering"
id="3.0.3.32.19980106153924.007f5d50@mailback.parc.xerox.com"
charset="us-ascii"
inreplyto="349833FF.22FE&#64;crystaliz.com"
expires="-1"


To:w3c-dist-auth@w3.org

Reactions to Ellis Cohen's proposal (of 17 Dec 1997).

I am mostly in support of this.  It adds power at low cost, in a fully
compatible way.  I have just a few questions/comments.

At 12:20 PM 12/17/97 PST, Ellis Cohen wrote:
>==================================================
>    Collections that Support Naming/Numbering
>==================================================
>...As an option, collections can support external references.
>A collection that supports external resources must
>support naming and/or numbering of collection resources.

We've already been over this point, so I'm merely repeating what I think is
now agreed upon by all:  change the word "must" to "may".  (I'd be fine
with "should" but doubt we could reach concensus on it.)

>In a collection that supports naming, all resources in the
>collections have names.

Just to be clear, must the names be unique?  If so, what status code is
returned if one attempts to ADDREF or PUT with a name that already exists?

Can an external resource be present twice, with two different names?

>  GETREF: Returns the resource given its name
>     (in the Member-Name header).
>     Could work for both internal and external
>     resources.

Why do we need this, given that the semantics of GET are defined (below) to
use the name?  That is, for collection 'http://foo.com/zippy' that has an
external member http://quux.com/pinhead.html with name fish.html, GET
http://foo.com/zippy/fish.html -> http://quux.com/pinhead.html

What is GETREF doing besides this?

The link idea is cool, but it's not clear to me what are the intended
semantics of the other methods (PROPFIND, PROPPATCH, LOCK) on external
members when accessed via a link.  Ellis can you elaborate?



