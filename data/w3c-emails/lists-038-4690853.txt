docno="lists-038-4690853"
received="Thu Jan 22 12:59:13 1998"
isoreceived="19980122175913"
sent="Thu, 22 Jan 1998 09:41:29 -0800"
isosent="19980122174129"
name="Jim Whitehead"
email="ejw@ics.uci.edu"
subject="RE: WEBDAV-06-PROTOCOL Comments ( Contd..)"
id="01BD2719.EB9DE0A0.ejw@ics.uci.edu"
charset="us-ascii"
inreplyto="WEBDAV-06-PROTOCOL Comments ( Contd..)"
expires="-1"


To:"'SKREDDY@us.oracle.com'"<SKREDDY@us.oracle.com>,"w3c-dist-auth@w3.org"<w3c-dist-auth@w3.org>

Comments below:

On Wednesday, January 21, 1998 10:47 PM, Surendra Reddy 
[SMTP:SKREDDY@us.oracle.com] wrote:
>    Yaron,
>
>    Adding properties: documentowner, annotations and documentretention
>
> Document Author/Owner and annotations are most important properties as 
one
> defines
> who created the document and one carries review annotations --
> 
> I agree with your decision of choosing properties only for proper
> functioning of the protocol.
> At the same time, we should also look at the basic document authoring
> requirements. In a large
> scale corporate document repositories at least one should know who 
authored
> the document, all changes
> that has undergone since its first version and when to expire the 
document
> from the repository.
> Also, these properties are fundamental for document management. From 
this
> stand point of view
> I strongly argue that we should include document owner/author, 
annotations
> and expiry/documentretention
> properties.

This is a well known rathole -- actually, it's more like quicksand, having 
a surface appearance of solidity which conceals its traplike nature.  Why? 
 Let me give a brief outline of the issues:

1) Unless you have *very* strict criteria on which properties are to be 
allowed, it is impossible to develop a good reason why any one given 
property shouldn't be included.  This creates a log-rolling effect, where 
everyone's favorite property is added because there is no good reason not 
to add it. So, adding "owner/author" looks easy, but this quickly opens the 
door for "publisher", "ISBN", "keywords", "LC number", etc.

2) It is really hard to define the semantics of each item.  For example, 
the Dublin Core group has developed a simple metadata schema for 
bibliographic data for the Internet.  Their schema includes items like:

     Subject: The topic addressed by the work
     Title: The name of the object
     Author: The person(s) primarily responsible for the intellectual 
content of the object
     Publisher: The agent or agency responsible for making the object 
available
     OtherAgent: The person(s), such as editors and transcribers, who have 
made other significant intellectual
     contributions to the work
     Date: The date of publication
     ObjectType: The genre of the object, such as novel, poem, or 
dictionary
     Form: The data representation of the object, such as Postscript file 
or Windows executable file
     Identifier: String or number used to uniquely identify the object
     Relation: Relationship to other objects
     Source: Objects, either print or electronic, from which this object is 
derived, if applicable
     Language: Language of the intellectual content
     Coverage: The spatial locations and temporal durations characteristic 
of the object

(This list is from: 
http://www.oclc.org:5046/oclc/research/conferences/metadata/dublin_core_  
report.html, and is probably a little bit out-of-date.)

This list looks fairly obvious and trivial, yet it represents *thousands* 
of person hours of discussion and work.

So, combine the log-rolling effect with the empirical evidence that these 
metadata sets take a long time to precisely define, and you start to see 
why this issue is a rathole.  Of course, even if you do manage to create a 
well-defined, stable set of properties, the next hurdle is defining 
equivalence across multiple metadata sets -- I'll let the veterans of the 
DMA effort describe how fun that was :-)

This issue has been disussed in the past on the mailing list -- Larry 
Masinter's "Danger! Here Be Dragons" post is now indelibly etched in my 
brain:

http://lists.w3.org/Archives/Public/w3c-dist-auth/1996OctDec/0069.html

Early development of the WebDAV property inclusion criteria can be seen in:

http://lists.w3.org/Archives/Public/w3c-dist-auth/1996OctDec/0078.html


OK, so I've established that this issue is a rathole.  But you still have a 
need for defining an author property.  Here is how I would accomplish this 
using the *existing* mechanisms and properties in the -06 WebDAV 
specification:

Since WebDAV makes use of the XML namespace mechanism, it is possible to 
combine together XML elements from different schema into the same document. 
 So, if you want an author property, use the existing Dublin Core metadata 
set:

1) define a property (using PROPPATCH) for the author.  In the Resource 
Description Framework working group of the W3C (see 
http://www.w3.org/TR/WD-rdf-syntax/ for an out-of-date, but publically 
available draft) they have been adopting the convention of using the URL 
"http://purl.org/DublinCore/RDFschema" for Dublin Core records. So, using 
this URL as the base name of the property:

Property name = http://purl.org/DublinCore/RDFschema/Author

Property value:

<?namespace href="http://purl.org/DublinCore/RDFschema" as="DC"?>
<DC:Author>Herman Melville</DC:Author>

So, you can see that, using the very well defined semantics of the Dublin 
Core, you can add an Author property to a WebDAV resource.  This is far 
better than having WebDAV define an identical property, since the library 
science community has far greater credibility than this working group for 
defining such a schema.

So, do you still feel we need an author property?

- Jim



