docno="lists-038-4711553"
received="Thu Jan 22 13:06:18 1998"
isoreceived="19980122180618"
sent="Thu, 22 Jan 1998 09:53:17 -0800"
isosent="19980122175317"
name="Jim Whitehead"
email="ejw@ics.uci.edu"
subject="RE: Comments on WEBDAV-06 Draft"
id="01BD271B.90ED1A20.ejw@ics.uci.edu"
charset="us-ascii"
inreplyto="Comments on WEBDAV-06 Draft"
expires="-1"


To:"'SKREDDY@us.oracle.com'"<SKREDDY@us.oracle.com>
Cc:"w3c-dist-auth@w3.org"<w3c-dist-auth@w3.org>

Comments below:

On Thursday, January 22, 1998 9:12 AM, Surendra Reddy 
[SMTP:SKREDDY@us.oracle.com] wrote:
> Here are my comments on GETCOL method. My comments are marked with 
[SKREDDY]
>
> [Jim ]
> ... The mechanism used to retrieve a listing of the members of a 
collection
> is
> ... the PROPFIND method.  This, combined with the MUST-level requirement
> that
> ... all DAV-compliant resources provide a resourcetype property 
(indicating
> ... whether the resource is, or is not a collection) allows a DAV client 
to
> ... discover the hierarchy of a WebDAV namespace. The example in Section
> 7.1.3
> ... shows a PROPFIND being used in a manner to retrieve the members of a
> ... collection, and their properties.  This information can be used by a
> client
> ... to create a directory listing.
>
> ... It is true that there is no method which returns only just the member
> ... collections of a collection, you must retrieve the names of
> non-collection
> ... and collection members of a collection together.  However, since
> PROPFIND
> ... gives you the ability to specify a minimal request for only just the
> names
> ... and the resourcetype property, the extra overhead of receiving the
> ... non-collection members along with the collection members can be 
reduced.
> ... Furthermore, the work of the DASL (DAV Searching and Locating) group
> ... should allow for searches which retrieve only the collection members.
>
> [SKREDDY]
>
> In my opinion, I still recommend having GETCOL method. PROPFIND providing
> extended services gives wider range of options to  webdav clients to 
discover
> more about collections or any resource. GETCOL provides more power
> collection operation
> to get a hierachical view of the collection(s).  If WEBDAV client wants 
to
> get a resource
> property and its members, PROPFIND gives an excellent options to restrict
> the scope of
> an operation. But if client(need not be a browse-, assume an information
> navigator, which provides
> a read only view of the document repository) doesnot want to discover 
about
> its properties and just need to
> explore what is there in the server name space, I would recommend GETCOL
> provide this functionality
> rather than PROPFIND. Also, adding GETCOL separates collection(s) explore
> operation
> from collection property explore mechanism.
>
>    Appreciate your comments.

[Jim Whitehead]

Assuming that GETCOL has the semantics of "return a listing of the members 
of a collection, indicating which ones are collections, and which ones are 
not (you need this is/is not collection information to know which 
collections to navigate further down into)," how is this different from a 
PROPFIND with "Depth: infinity" where you request only the "resourcetype" 
property value be returned.  This PROPFIND will result in a listing of the 
members of the collection, indicating which ones are/are not collections, 
giving *identical* information to the results of the GETCOL method.

Since PROPFIND and GETCOL return identical information, why should client 
authors and server authors add an extra method, with its implications on 
code size and testing time?

- Jim



