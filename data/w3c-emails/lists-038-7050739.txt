docno="lists-038-7050739"
received="Thu Mar  5 13:11:57 1998"
isoreceived="19980305181157"
sent="Thu, 5 Mar 1998 13:11:33 -0500 "
isosent="19980305181133"
name="Fisher Mark"
email="fisherm@tce.com"
subject="[ENP] Justification &ndash;&ndash; Why ENP?"
id="83C932393B88D111AED30000F84104A70A1F56@indyexch_fddi.indy.tce.com"
expires="-1"


To:"'Ron Daniel Jr.'"<rdaniel@lanl.gov>,"'Jim Whitehead'"<ejw@ics.uci.edu>,"'Josh Cohen'"<joshco@microsoft.com>,"'Masinter Larry'"<masinter@parc.xerox.com>,"'Surendra Reddy'"<SKREDDY@us.oracle.com>,"'Markus Fleck'"<fleck@informatik.uni-bonn.de>
Cc:"'w3c-dist-auth'"<w3c-dist-auth@w3.org>

First, thanks to all of you who expressed an interest in ENP.  I've been
buried with other projects, so I am just now coming back to this.  Below
is a very rough draft of a paragraph I plan to put near the front of the
ENP draft, explaining why there should be yet another event notification
protocol.

Surendra Reddy has offered to co-edit the draft with me, and I gladly
accept his offer.  Surendra -- I suggest that we go off-line and discuss
the request part of the protocol, then once we are happy with that, we
will bring it to the rest of the WebDAV working group, or a separate
working group if others feel that ENP is way beyond the bounds of what
WebDAV should itself cover, as I think it probably is.

All -- I will look into hosting the (potential) ENP working group
mailing list (TCE has never done that before, to my knowledge).
==========================================================
Mark Leighton Fisher          Thomson Consumer Electronics
fisherm@indy.tce.com          Indianapolis, IN
"Browser Torture Specialist, First Class"



*** Why ENP?
There are several different network event notification protocols already
-- CORBA Event Services, X Window System events, SGAP, BSCW, etc. -- so
why should there be another event notification protocol?  In two words
-- size and decentralization:
* Size is an issue, as the 2 most popular network event notification
protocols -- CORBA Event Services and X Window System events -- under
their current codebases require dragging along all of their other
services.  This code bloat makes it impractical to use network event
notification services in lightweight and embedded-systems applications.
* Centralization is an issue, as centralized network event notification
servers are only needed when there are multiple recipients of event
notifications and/or multiple disjoint event types for notifications
(i.e. multiple event types on a server to be notified about).

ENP is a lightweight network event notification protocol that can be
used either by itself (when there is one notification requester and one
major event type) or as part of a centralized network event notification
service (where there are multiple event notification requesters and
multiple major event types).



