docno="lists-038-7578131"
received="Wed Jul  1 17:21:47 1998"
isoreceived="19980701212147"
sent="Wed, 1 Jul 1998 14:22:09 PDT"
isosent="19980701212209"
name="Jim Davis"
email="jdavis@parc.xerox.com"
subject="RE: Get on a reference"
id="3.0.3.32.19980701142209.0098fe50@mailback.parc.xerox.com"
charset="us-ascii"
inreplyto="72B1992276A9D111A20E00805FEAC96DCC412B&#64;cm-expo1.filenet.co m"
expires="-1"


To:<w3c-dist-auth@w3.org>

At 01:30 PM 7/1/98 PDT, Babich, Alan wrote:
>(1) GET on a reference returns 302 as per John's proposal.
>(2) PUT works on a reference, unless what is being put
>is not a reference, in which case it fails.

Sorry, I'm confused. What do you mean?  You can't PUT a reference.  You can
create one with MKREF, but not with PUT.

In John's semantics, a client that does a PUT to a referential resource
gets back a 302 and can then decide what to do.  (Either report an error to
the user or retry the PUT to the new URI.)  If the user desires to replace
the referential resource with one of some other type (either 'plain' or
even a collection) the client first does a DELETE then a PUT (or MKCOL).  

This definition allows suitable clients to make ref resources act EXACTLY
like plain resources, as far as the user is concerned, if the user wishes.
That's real flexibility.  And it also allows clients to treat them
differently, if desired.

Look at it this way.  With most current servers you can create a
redirecting resource by writings a suitable config file somewhere.  So this
capability already exists in the Web. The only difference is that now it
will be possible to create such redirecting resources from the client side
alone, by invoking HTTP methods, without creating or writing any
server-side config file.

It's a winner, I think.



