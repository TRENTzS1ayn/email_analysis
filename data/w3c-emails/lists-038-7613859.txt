docno="lists-038-7613859"
received="Mon Jul  6 15:23:24 1998"
isoreceived="19980706192324"
sent="Mon, 6 Jul 1998 12:22:55 -0700"
isosent="19980706192255"
name="Jim Whitehead"
email="ejw@ics.uci.edu"
subject="RE: GET and PUT on References: New language for the spec"
id="000601bda913$79ea1a60$d115c380@galileo.ics.uci.edu"
charset="iso-8859-1"
inreplyto="GET and PUT on References: New language for the spec"
expires="-1"

To: WEBDAV WG<w3c-dist-auth@w3.org>


Accidentally caught by the spam filter.  I have added John to the accept2
list, so he shouldn't get bounced again.

- Jim

-----Original Message-----
From: John Tigue [mailto:jtigue@datachannel.com]
Sent: Monday, July 06, 1998 10:22 AM
To: Judith Slein; w3c-dist-auth@w3.org
Subject: [Spam?] RE: GET and PUT on References: New language for the
spec


<Judy>
> -----Original Message-----
> From: Judith Slein [mailto:slein@wrc.xerox.com]
> Sent: Monday, July 06, 1998 8:12 AM
> To: w3c-dist-auth@w3.org
> Subject: GET and PUT on References: New language for the spec
>

<snip nextTopic="GET on refs" />
> The
> response SHOULD
> include an entity body that the client can display if the
> redirection is
> not automatic. The entity body explains that the requested
> resource is a
> reference to another resource and includes a link to the
> target resource.

<snip nextTopic="PUT on refs" />
> The response MUST include an entity body for
> display to users.
> The entity body explains that the requested resource is a
> reference to
> another resource, and allows the user to choose between replacing the
> reference and replacing its target by selecting the URI of
> the reference or
> the URI of its target.

<snip />
</Judy>

<John>
At the face-to-face I argued that the entity bodies should be HTML which
just so happens to be well formed XML. Tim Bray has worked out a
constrained subset of the HTML 4.0 DTD such that any document produced
by the constrained DTD will be
1. renderable by a browser
2. HTML 4.0 compliant
3. well formed XML

The benefit is for a JavaScript (EcmaScript) application running in a
browser. The JavaScript does not have access to the HTTP headers. If the
entity body comes down to the client and is handed off to the
JavaScript, well formed HTML can be put through an XML processor and the
JavaScript has a chance of interpreting the information contained in the
entity body.

</John>



