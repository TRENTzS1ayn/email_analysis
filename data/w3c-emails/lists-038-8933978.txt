docno="lists-038-8933978"
received="Fri Aug  7 13:34:07 1998"
isoreceived="19980807173407"
sent="Fri, 07 Aug 1998 11:34:19 -0600"
isosent="19980807173419"
name="Bruce Cragun"
email="BCragun.ORM2-1.OREM2@gw.novell.com"
subject="Re: Baby steps"
id="s5cae645.069@GW.NOVELL.COM"
charset="US-ASCII"
inreplyto="Baby steps"
expires="-1"


To:<francis@netscape.com>
Cc:<w3c-dist-auth@w3.org>

I'm not saying there aren't valid reasons for forcing new versions, just that this should be up to the server and not the spec.  I know we aren't the only document management system that doesn't force it, and having the spec require this would break the model of any DMS out there that currently leaves it to the user.

As we've asked many, many customers about this, only about 20% want forced automatic versioning.  Another 50% or so would like the *option*.  In many cases, administrators are very much against the automatic versioning because of the disk space required to maintain such a system (unless you only save diffs, which isn't the case with us).

So let me propose this, and anyone can tell me why this won't work:  The spec should leave it up to the server to force or not force.  There would be a method of discovery for clients to determine what the server's rule is.

>>> John Stracke <francis@netscape.com> 08/07 11:27 AM >>>
Bruce Cragun wrote:

> There are two scenarios.  First, which I believe is VERY common, is to allow me to edit a leaf node and have the changes go back into that same version.

Mmm, yeah.  Personally, though, I'd say that this approach is suboptimal in many cases--for example, if multiple users have access to that leaf node, then you run the risk of lost updates, and you can't tell who made every change.  I'd prefer to see stuff like this done via a scratch area.

> The second scenario is to allow me to edit a non-leaf node and save those changes back into that node.

EvilNastyIcky!

One major advantage of versioning is that it lets you do audits.  If you're versioning your source code, and somebody complains that it breaks only when they've got their username set to "John Smith", you can go back in the code and find out that Joe Blow put in a poison easter egg because he hated somebody named John Smith.  If you're versioning your Web site, and somebody accuses you of having put child porn on it, you can check back at every version that's ever existed and prove that you didn't.  These capabilities break down if you can edit non-leaf nodes.  I take your point about not restricting the servers too much; but this sort of functionality is so vital that I would prefer to make sure the protocol can't be asked to break it.

> Right now I would have versions for all previous years, 1998, and the new one for the upcoming year 1999.  If a mistake is found in our 1998 handbook, I would like to fix it in-place.

That's what branching is for.

--
/====================================================================\
|John (Francis) Stracke    |My opinions are my own.|S/MIME supported |
|Software Retrophrenologist|=========================================|
|Netscape Comm. Corp.      | Veni, Vidi, Ridi:                       |
|francis@netscape.com      |  I came, I saw, I mocked.               |
\====================================================================/
New area code for work number: 650



