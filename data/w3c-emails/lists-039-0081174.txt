docno="lists-039-0081174"
received="Mon Apr 19 19:10:10 1999"
isoreceived="19990419231010"
sent="Mon, 19 Apr 1999 19:10:05 -0400"
isosent="19990419231005"
name="Henrik Frystyk Nielsen"
email="frystyk@w3.org"
subject="RE: Some problems with the WebDAV protocol"
id="3.0.5.32.19990419191005.03548760@localhost"
charset="us-ascii"
inreplyto="003f01be8aa0$f064f060$d115c380&#64;ics.uci.edu"
expires="-1"


To:ejw@ics.uci.edu,w3c-dist-auth@w3.org

At 13:12 4/19/99 -0700, Jim Whitehead wrote:

>The rationale for the extra constraints on PUT in WebDAV is:
>
>* Prevention of creation of intermediate collections on user error.

IMO, it seems out of bounce to impose a MUST requirement in order to
prevent a "user error" - especially because the "error" doesn't break
anything in the protocol or leads to interoperability problems.

This is why it is stated as it is in HTTP/1.1 - it is left to the server to
decide whether it wants to create the new location or not. As Yoram points
out, some servers already do that and others don't.

Removing the MUST requirement would also eliminate any problem with
HTTP/1.1 clients - removing their capability of creating resources is in my
mind not a good transition strategy.

>For example:
>
>http://example.com/foo/fuzz/bar.html
>
>This URL would be free floating if you removed the "bar.html" path segment
>to create:
>
>http://example.com/foo/fuzz/
>
>AND if this URL is not mapped to a resource.

But what if "http://example.com/foo/fuzz/" exists but isn't accessible to
me because I don't have the right permissions. In that case, I may get a
403 (Forbidden) when accessing "http://example.com/foo/fuzz/" but still be
able to create the document "http://example.com/foo/fuzz/bar.html".

According to your definition, "http://example.com/foo/fuzz/bar.html" floats
from my perspective so I have to do a MKCOL on
"http://example.com/foo/fuzz/" - which of course I can't, because I am not
allowed. This is the same as you often see on "incoming" folders on FTP
servers where you can stick in a new file but not get a folder listing. 

Removing the MUST requirement would also take away this problem.

In any case, 409 is not the appropriate status code to use - the two URIs
you have in your example really aren't the same and the problem is not that
there are any conflicts.

Henrik
--
Henrik Frystyk Nielsen,
World Wide Web Consortium
http://www.w3.org/People/Frystyk



