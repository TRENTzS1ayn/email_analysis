docno="lists-039-10637785"
received="Tue Oct 19 14:30:37 1999"
isoreceived="19991019183037"
sent="Tue, 19 Oct 1999 14:32:08 -0400"
isosent="19991019183208"
name="ccjason@us.ibm.com"
email="ccjason@us.ibm.com"
subject="RE: Globally unique tokens. Was: One lock per resource per person?"
id="8525680F.00657393.00@D51MTA03.pok.ibm.com"
charset="us-ascii"
inreplyto="Globally unique tokens. Was: One lock per resource per person?"
expires="-1"

To:bill@carpenter.ORG(WJCarpenter)
cc:w3c-dist-auth@w3.org




ccjason> So you are suggesting that they don't need to be *globally*
ccjason> unique as long as they are unique within the cluster?

wjc>  No, actually.  I'm still saying unique-within-resource.  (My only
wjc>  caveat is that it's kind of vague to me what this cluster example is
wjc>  all about, so I've interpreted it to support what I'm saying. :-)  If
wjc>  there are multiple hands in the cookie jar for the same resource, they
wjc>  just need a private agreement that will keep them from reaching for
wjc>  the same cookie.

Bill, I can't speak for JimW's meaning of a cluster, but let me give
you another interpretation...

First... I assume the existance of depth locks and shared locks.
Secondly... you seem to understand that the token needs to be
   unique within the resource.

Now an example....

  LOCK /a/b/  shared depth.
  LOCK /m/n  shared
  BIND /a/b/n to the resource at /m/n

Now after the bind, the resource /a/b/n inherits an additional lock.  If both
locks used the same token, now the resource has two locks with the same token.
You've already recognized this as a bad thing.

In a server that supports cross server bindings... the domain of necessary
uniqueness extends to all servers that cooperate on bindings.

As far as being *globally* unique.  I don't have an explanation for that.
Perhaps JimW and Yaron do.  (I didn't fully understand their examples.)  But
requiring global uniqueness seems like a small price to pay.

J.



