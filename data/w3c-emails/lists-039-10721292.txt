docno="lists-039-10721292"
received="Sat Oct 23 13:38:14 1999"
isoreceived="19991023173814"
sent="Sat, 23 Oct 1999 13:38:12 -0400"
isosent="19991023173812"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: DELETE leaving a lock-null resource; was LOCK Scenarios"
id="9910231738.AA23865@tantalum"
inreplyto="078292D50C98D2118D090008C7E9C6A603C96692&#64;STAY.platinum.corp.microsoft.com"
expires="-1"


To:w3c-dist-auth@w3.org


   From: "Yaron Goland (Exchange)" <yarong@Exchange.Microsoft.com>

   > I admit that the requirement that the token be used with the GET
   > statement is an incompatibility with the old spec, but it is by
   > no means complex for clients to handle.

   Perhaps I don't understand the proposal. I have provided examples below
   which demonstrate how it appears to me that the proposal works. Please let
   me know if I have analyzed the situation correctly.

   Example #1 -

   Hiro is writing up his new web page using Microsoft Word. Word is supposed
   to be WYSIWYG but he knows that HTML handling is more art than science. So
   he boots up Netscape, which many of his users use, to see how the document
   looks in Netscape. Unfortunately the document isn't there anymore. He goes
   back to Word, Word insists the document is still there! What is going on?

   What has happened is that Word has locked the document but someone else
   moved the document. Since Word continued to send in the lock token to the
   old resource it appeared to Word that everything was fine. However when Hiro
   went to use Netscape, which knew nothing of the lock token, the document was
   gone.

Using the updated proposal where a process gets back a 302 when it
tries to access a locked resource that has moved, word will have to
update its path to the document the next time it accesses it for read
or write.  When it does so, the user will know to look
at the new place in a different process.

Also note that a user is already used to some difference between what is
seen in the process that has the lock and another process that does not.
In particular, any changes that have not yet been saved will only appear
in the process with the lock.

   Example #2 -

   Irit is at work working on a document. Unfortunately people keep popping by
   her office every five minutes to ask her questions. She really needs to get
   some work done so she decides to go home. However she wants to make sure
   that no one messes with her documents while she is going home. So she takes
   out a long term lock on the document and then shuts down her computer. She
   drives home and logs in from home. She tells her word processor to edit the
   document. The word processor tells her that the document is gone! What
   happened? She had a lock, who messed with her document?

Probably somebody who had a good reason do so (perhaps fixing a bad
copyright statement in her document).  In either case, there is no
lost update problem, since she has no pending updates to the document
(except for those only in her head, which we can't take responsibility
for :-).

My generic response to this situation: locks are great for preventing
lost updates.  You LOCK,GET,edit,PUT,UNLOCK.  The faster you get in and
out with your lock, the better.  If you want to leave the world locked
up so that your job is easier, you're ignoring the needs of all the
other people that need to get their jobs done.

With the speed of development and deployment being forced by "internet time",
I believe the days of locking up the world to get long-term stability are over.

Cheers,
Geoff



