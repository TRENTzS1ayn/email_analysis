docno="lists-039-11288382"
received="Sat Nov  6 22:28:18 1999"
isoreceived="19991107032818"
sent="Sat, 6 Nov 1999 19:30:01 -0800 (PST)"
isosent="19991107033001"
name="Greg Stein"
email="gstein@lyra.org"
subject="UNLOCK issues"
id="Pine.LNX.4.10.9911061918071.32496-100000@nebula.lyra.org"
charset="US-ASCII"
expires="-1"

To:w3c-dist-auth@w3.org


The UNLOCK method isn't documented very well with respect to its
interaction with the Depth: header or how to return errors (generally, and
in the case of a failed If: condition match).

S9.2 states that a Depth: header is only supported if the method
explicitly supports it. Am I to assume, then, that UNLOCK ignores the
Depth: header? (or should it return an error if one is present?)

Presuming the UNLOCK should always be treated as Depth: 0, then an If:
failure is pretty easy. No multistatus is possible, so a 412 (Precondition
Failed) would be the response from an UNLOCK?

Note there is also a bit of weirdness in that UNLOCK is Depth: 0, but that
a lock could have Depth: infinity. And that you can unlock the whole tree
of locks by unlocking any of the locked resource.

Also, how do you signify failure if the UNLOCK cannot be performed? For
example, an unknown lock token or improper authorization? Let's say the
lock token isn't found. Return a 400 (Bad Request)? Now, let's say the
lock token *is* found but the authorization is wrong. Just keep returning
401 (Unauthorized) until they get it right?

Well... this is somewhat rambling. To summarize:

* I think S8.11 should be explicit that the Depth: header is not used.
* There should be a summary of "typical" status codes like some of the
  other sections.

Cheers,
-g

--
Greg Stein, http://www.lyra.org/



