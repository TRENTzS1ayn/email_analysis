docno="lists-039-11496614"
received="Mon Nov 15 19:15:46 1999"
isoreceived="19991116001546"
sent="Mon, 15 Nov 1999 19:13:05 -0500"
isosent="19991116001305"
name="marjorie@us.ibm.com"
email="marjorie@us.ibm.com"
subject="Re: locknull resources"
id="8525682B.00016A26.00@d54mta04.raleigh.ibm.com"
charset="us-ascii"
inreplyto="locknull resources"
expires="-1"

To:w3c-dist-auth@w3.org




This isn't perhaps that unexpected. If one models the lifecycle of a
resource as a finite state machine, then it goes from non-existant (i.e., a
reference to resource whose current state is undefined) to lock-null on
LOCK. More locks leave it in this state. It only leaves this state and goes
back to non-existant if there are no more locks. A PUT moves it from the
lock-null state to the existing-resource state, etc.






Greg Stein <gstein@lyra.org> on 11/11/99 07:58:06 PM

To:   w3c-dist-auth@w3.org
cc:

Subject:  locknull resources



Given the *current* spec :-), has anybody noticed that you can actually
have a locknull resource that does not have any *direct* locks on it? For
example:

  Establish a locknull as /a/b with a shared lock. Now, lock /a with a
  Depth: infinity lock, shared. Finally, unlock /a/b with the first
  locktoken.

Just wanted to mention this to others, as it was pretty unexpected for
me...

Cheers,
-g

--
Greg Stein, http://www.lyra.org/



