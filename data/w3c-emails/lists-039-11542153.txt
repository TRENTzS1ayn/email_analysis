docno="lists-039-11542153"
received="Mon Nov 15 21:32:21 1999"
isoreceived="19991116023221"
sent="Mon, 15 Nov 1999 18:31:50 -0800 (PST)"
isosent="19991116023150"
name="Greg Stein"
email="gstein@lyra.org"
subject="DAV:source (was: Does zope mess with the body in a GET?)"
id="Pine.LNX.4.10.9911151819060.2535-100000@nebula.lyra.org"
charset="US-ASCII"
inreplyto="14384.46750.280111.163532&#64;gilliam.users.flyingcroc.net"
expires="-1"

To:w3c-dist-auth@w3.org
cc: Brian Lloyd<Brian@digicool.com>


As a solution to this, on one of my DAV setups, I've created two Locations
pointing to the same filesystem directory:

Alias /users-go-here /some/path
Alias /author-goes-here /some/path-source

(where /some/path-source is a symlink to /some/path; I just realized I can
probably drop the symlink and use the same filesystem target in both
cases)

I then force everything in the source directory to text/plain so that CGI,
PHP, etc won't execute in there. This allows the author to interact with
the source files:

<Location /author-goes-here>
  ForceType text/plain
</Location>

Of course, all of this is simply getting around the dynamic vs static
stuff and providing access to the source of (dynamic) pages. It isn't a
solution to the <DAV:link> thing (yet).

I haven't thought about it completely, but may create a new Apache
directive that reads something like:

DAVSource /users-go-here /author-goes-here

This would apply to any resource under that namespace, creating a similar
source URI into the target namespace. It would also set up an Alias and a
ForceType record. The biggest thing that has stopped me is simply time :-)
and researching on whether mod_dav can reach into the Alias and ForceType
mechanism (or whether I'd have to reimplement).

Cheers,
-g

On Mon, 15 Nov 1999, Brett McCormick wrote:
> When you say people have not "been taking" to that approach, does that
> mean they just don't like it, are not implementing it, or both?
> 
> It seems like the best approach to me.  There is no way to determine
> where the content is actually coming from without these links, any
> method we use for this is going to have them.
> 
> Has anyone been using or seen any implementations of the source
> resource links?
> 
> --brett
> 
> On Monday, 15 November 1999, at 16:25:22, Jim Whitehead wrote:
> 
> > Well, I would certainly welcome work in this area.  So far, people have not
> > been taking to the "source link" approach, where to find the unprocessed
> > source of an object, you look up a URL in the source link on the original
> > resource (by performing a PROPFIND), then perform a GET on the destination
> > URL of the source link.
> > 
> > - Jim

--
Greg Stein, http://www.lyra.org/



