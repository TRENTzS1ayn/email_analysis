docno="lists-039-11702602"
received="Fri Nov 19 14:08:47 1999"
isoreceived="19991119190847"
sent="Fri, 19 Nov 1999 11:08:30 -0800 (PST)"
isosent="19991119190830"
name="Brett McCormick"
email="brett@mail.flyingcroc.net"
subject="Re: WebDAV and Dynamic Content"
id="14389.41006.887807.396435@gilliam.users.flyingcroc.net"
charset="us-ascii"
inreplyto="8525682E.006649D2.00&#64;d54mta03.raleigh.ibm.com"
expires="-1"


To:jamsden@us.ibm.com
Cc:w3c-dist-auth@w3.org

On Tuesday, 16 November 1999, at 16:14:46, jamsden@us.ibm.com wrote:

> For many dynamic resources, the dynamic content and the source resources
> are different MIME types and have different URLs. For example Java source
> resources end in .java while binary executable resources end in .class.
> These resources present no problem because the client can do a GET on the
> source URL to get the source, and a GET on the separate executable URL to
> get the processed results. The DAV:src property on the executable can be
> used to get the source resource URL.

These would not be examples of dynamic resources.  Java source
resources are manually compiled into class files.  These aren't being
generated dynamically.

> For other resources, the dynamic content and the source have the SAME URL.
> For example, Java Server Pages, Active Server Pages, server-side includes,
> server-side scripting, etc. This presents a problem because there's only
> one method to get both, GET. The DAV:src property doesn't help because it
> has the same URL as the executable. And, there's no header on GET that can
> be used to distinguish source from dynamic results. We could use the Accept
> header to specify what MIME type is desired, and use that to distinguish
> source from dynamic results, but that might now work either as they could
> have the same MIME type, and the dynamic resource might support multiple
> MIME types.

This is normally how dynamic content works.  Input file->code->output.
Sometimes the input file is the code, sometimes its the output,
sometimes its a little bit of both.  Or there could be many input
files, which is quite likely, or even multiple outputs.  What does DAV
do with multipart content?

> 
> The FrontPage extensions resolve this conflict by either using a method
> extension to get the source, or a new header. Could someone supply the
> details? They might be a useful model for how we should extend WebDAV.

It sounds shortsighted, as there can be multiple sources.  Does the
new method get all sources?  What about PUTing the source back to
server?

--brett



