docno="lists-039-11781272"
received="Sat Nov 20 12:56:32 1999"
isoreceived="19991120175632"
sent="Sat, 20 Nov 1999 12:56:29 -0500"
isosent="19991120175629"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: WebDAV and Dynamic Content"
id="9911201756.AA07125@tantalum"
inreplyto="FD7A762E588AD211A7BC00805FFEA54B054AFF88&#64;HYDRANT"
expires="-1"


To:w3c-dist-auth@w3.org

   From: "Tapas Nayak (Exchange)" <tapasnay@Exchange.Microsoft.com>

   > Allowing dynamic resource to access resources using the file system:
   > 1. Require the user to publish from the WebDAV store to the 
   > file system.
   > 2. Automatically mirror the resources in the file system.
   > 3. Build a file system device driver on top of WebDAV.

   Why do we have to have another way for an application which wants to
   open files?   The application either knows that the resource it is
   trying to access is a file and that is why it is opening a file or it
   knows that it is a URL and then would access WebDAV to access the
   resource. Having a file system interface is good if one is available
   but one cannot ensure that for all WebDAV servers. If uniformity is
   the concern here then why not expose file systems as WebDAV instead of
   exposing WebDAV as file system?

Jim is concerned about the case where an application (i.e. the one
producing the dynamic content) only knows about files (not resources
and URL's).  The web server invokes the application to produce the
dynamic content, but the application will be looking into the file
system to find its input data.  He's looking for standardizing a way
for a client to tell the server to instantiate a set of resources
into the file system so that they are accessible to the file-based
tool.

This feels to me like something that is outside of the scope of an
HTTP protocol, since this is so application implementation
dependent.  In particular, it depends both on the file system mappings
that are expected by the applications, and on how resources are
instantiated in the file system.

So if we do decide to formalize authoring of resources with dynamic
content, I'm more inclined to do so in a pure resource context, and
not try to fold in file-based behavior.

Cheers,
Geoff

-- 
Geoffrey M. Clemm
Chief Engineer, Configuration Management Business Unit
Rational Software Corporation
(781) 676-2684   geoffrey.clemm@rational.com   http://www.rational.com



