docno="lists-039-11903478"
received="Tue Nov 23 16:19:49 1999"
isoreceived="19991123211949"
sent="Tue, 23 Nov 1999 16:19:42 -0500"
isosent="19991123211942"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: Write Locks on Collections"
id="9911232119.AA08625@tantalum"
inreplyto="LNBBKDGPNJMOJNOBHLLMGEAFCEAA.wiggs&#64;xythos.com"
expires="-1"


To:w3c-dist-auth@w3.org


   From: Kevin Wiggen <wiggs@xythos.com>

   Jim Davis and I are having a discussion on what the appropriate behavior of
   a write lock on a collection should be.

   Re 7.5

   A write lock on a collection, whether created by a "Depth: 0" or "Depth:
   infinity" lock request, prevents the addition or removal of member URIs of
   the collection by non-lock owners.

I believe it says "internal member".

   If a lock owner causes the URI of a resource to be added as an internal
   member URI of a locked collection then the new resource MUST be
   automatically added to the lock.

I believe this statement should only apply to non-Depth:0 locks.
Otherwise, this results in the inability to independently lock
a collection and members of the collection.  This should be clarified/fixed
in the next draft of 2518.

   What does this mean when a collection is locked via a Depth 0 lock:

   1)  When a new resource is added to the collection, the resource is added
   without a lock as the parent has only a Depth 0 lock.

That's what I believe it should mean.

   2)  When a new resource is added to the collection, the resource is added
   and inherits the lock from above (via the second paragraph above)

That would be a very bad thing, if the collection lock is depth:0.

Cheers,
Geoff



