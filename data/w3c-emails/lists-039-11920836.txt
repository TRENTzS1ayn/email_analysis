docno="lists-039-11920836"
received="Tue Nov 23 17:28:31 1999"
isoreceived="19991123222831"
sent="Tue, 23 Nov 1999 23:26:13 +0100"
isosent="19991123222613"
name="Jim Davis"
email="jrd3@alum.mit.edu"
subject="Re: Write Locks on Collections"
id="4.1.19991123232148.00b0b440@pop.xs4all.nl"
charset="us-ascii"
inreplyto="9911232119.AA08625&#64;tantalum"
expires="-1"


To:w3c-dist-auth@w3.org

At 04:19 PM 11/23/99 -0500, Geoffrey M. Clemm wrote:
>
>   From: Kevin Wiggen <wiggs@xythos.com>
>
>   Re 7.5
>
>   A write lock on a collection, whether created by a "Depth: 0" or "Depth:
>   infinity" lock request, prevents the addition or removal of member URIs of
>   the collection by non-lock owners.

>   If a lock owner causes the URI of a resource to be added as an internal
>   member URI of a locked collection then the new resource MUST be
>   automatically added to the lock.
>
>I believe this statement should only apply to non-Depth:0 locks.

Why do you believe this?

>Otherwise, this results in the inability to independently lock
>a collection and members of the collection.  

How so?  please provide a sequence of operations that would be impossible
under this interpretation.

>
>   What does this mean when a collection is locked via a Depth 0 lock:
>
>   1)  When a new resource is added to the collection, the resource is added
>   without a lock as the parent has only a Depth 0 lock.
>
>That's what I believe it should mean.
>
>   2)  When a new resource is added to the collection, the resource is added
>   and inherits the lock from above (via the second paragraph above)
>
>That would be a very bad thing, if the collection lock is depth:0.

Why would it be bad?  What bad thing would occur, or what good thing would
be prevented?

sorry, but I just can't invent one my self.

best regards

Jim



