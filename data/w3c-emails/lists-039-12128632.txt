docno="lists-039-12128632"
received="Fri Nov 26 03:22:19 1999"
isoreceived="19991126082219"
sent="Fri, 26 Nov 1999 00:22:21 -0800 (PST)"
isosent="19991126082221"
name="Greg Stein"
email="gstein@lyra.org"
subject="RE: refresh LOCK for multiple locks"
id="Pine.LNX.4.10.9911260019480.18236-100000@nebula.lyra.org"
charset="US-ASCII"
inreplyto="85256834.0060A466.00&#64;D51MTA03.pok.ibm.com"
expires="-1"

To:ccjason@us.ibm.com
cc:w3c-dist-auth@w3.org


On Thu, 25 Nov 1999 ccjason@us.ibm.com wrote:
>    We return a DAV:lockdiscovery element (as defined) which contains
> multiple
>    DAV:activelock elements (as defined).
> 
>    We refresh any locks that are extent on that resource and that we find
> in
>    the If: header. In other words, we'll refresh direct locks and those
>    inherited from Depth:infinity locks further up in the namespace.
> 
>    On error, we return a single status code (not a multistatus). That's
>    because a refresh is not being applied to multiple resources -- just
>    multiple locks on *one* resource.
> 
> And what about if the if header references several locks on different
> resources?

A = the set of locktokens found in the If: header
B = the set of locktokens found on the resource (directly and/or through
    inherited locks)

mod_dav refreshes the intersection.

By "on different resources", if you mean the Request-URI and the resource
locked with a Depth:infinity lock (implied by the inherited lock on the
Request-URI), then yes.

If you mean locks implied by a Tagged-List in the If: header, then that
just doesn't make sense :-)

Happy Thanksgiving,
-g

-- 
Greg Stein, http://www.lyra.org/



