docno="lists-039-12260129"
received="Mon Nov 29 11:10:54 1999"
isoreceived="19991129161054"
sent="Sun, 28 Nov 1999 13:40:36 -0500"
isosent="19991128184036"
name="Geoffrey Clemm"
email="geoffrey.clemm@Rational.Com"
subject="Re: Write Locks on Collections"
id="00bb01bf3a84$86115480$384413ac@lex.rational.com"
charset="iso-8859-1"
inreplyto="Pine.LNX.4.10.9911261113460.18236-100000&#64;nebula.lyra.org"
expires="-1"


To:<w3c-dist-auth@w3.org>

I agree with everything Greg says in this message.

----- Original Message -----
From: Greg Stein <gstein@lyra.org>

> On Fri, 26 Nov 1999, Jim Davis wrote:
> >...
> > If I lock a collection with depth infinity lock, then create a new
> > interrnal member of that collection  (e.g. with PUT) I have to provide
the
> > lock token to do the PUT, and the new internal member is added to the
lock.
> >
> > We all agree on this, right?
>
> Yes.
>
> > Now  suppose the lock were depth 0 not depth infinity.
> >
> > 1) to add a new internal member, I still have to provide the lock
> > token, right?
>
> Right.
>
> > 2) Previously exising members are not affected.  I can PUT or PROPPATCH
to
> > them at my whim, right?
>
> Right.
>
> > 3) However, I can't DELETE them without the lock token, right?
>
> Right. You must supply the locktoken because you are altering the
> collection (on the theory that the set of names of internal members is
> part of its state).
>
> > So where we seem to disagree is:
> >
> > If I add a new internal member, is it added to the lock, or not?
>
> It is not.
>
> > I interpret 7.5 as saying Yes.  You seem to think that the answer is, or
> > should be, no.
> >
> > Can you please explain this?  I don't see how this depth 0 lock would
> > prevent anyone from updating the state of existing members.
>
> The depth:0 lock does not prevent people from updating existing members.
> It prevents you from altering the collections state: the set of names of
> internal members. Therefore, you cannot add or remove internal members.
> This means you must supply a locktoken with PUT, MKCOL, or a DELETE. Note
> that you shouldn't be able to create a locknull resource either(!) without
> supplying a locktoken.
>



