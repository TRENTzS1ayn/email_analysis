docno="lists-039-12382907"
received="Tue Nov 30 13:25:33 1999"
isoreceived="19991130182533"
sent="Tue, 30 Nov 1999 13:26:50 -0500"
isosent="19991130182650"
name="Geoffrey Clemm"
email="geoffrey.clemm@Rational.Com"
subject="Re: are depth 0 locks inherited by newly created children?"
id="011301bf3b60$793b93b0$9ef6a8c0@lex.rational.com"
charset="iso-8859-1"
inreplyto="4.1.19991130013916.00ac3740&#64;pop.xs4all.nl"
expires="-1"


To:<w3c-dist-auth@w3.org>

From: Jim Davis <jrd3@alum.mit.edu>
> Just to remind you, at the start of this thread someone (G Slein, J
Amsden,
> CC Jason or G Clemm,  sorry I am not sure who though)  asserted that if a
> depth 0 lock was inherited, something bad would happen.  but  upon
> challenge, no one has been able to say what that bad thing is.

See <http://lists.w3.org/Archives/Public/w3c-dist-auth/1999OctDec/0245.html>
In particular, this message says:

I lock a collection, because I'm going to be adding members
to that collection.  If a depth:0 lock applies to all the
immediate members of a collection as well, then I have prevented
anyone from updating the state of one of the existing internal members of
that collection.  If I'd wanted that behavior, I would have issued a
depth:1 lock.  And quoting from the definition of what depth means:

   The Depth header is used with methods executed on resources which
   could potentially have internal members to indicate whether the
   method is to be applied only to the resource ("Depth: 0"), to the
   resource and its immediate children, ("Depth: 1"), or the resource
   and all its progeny ("Depth: infinity").

Cheers,
Geoff



