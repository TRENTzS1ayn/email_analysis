docno="lists-039-12450606"
received="Wed Dec  1 02:51:17 1999"
isoreceived="19991201075117"
sent="Tue, 30 Nov 1999 23:33:39 +0100"
isosent="19991130223339"
name="Jim Davis"
email="jrd3@alum.mit.edu"
subject="Re: are depth 0 locks inherited by newly created children?"
id="4.1.19991130232227.00ab4260@pop.xs4all.nl"
charset="us-ascii"
inreplyto="011301bf3b60$793b93b0$9ef6a8c0&#64;lex.rational.com"
expires="-1"


To:<w3c-dist-auth@w3.org>

At 01:26 PM 11/30/99 -0500, Geoffrey Clemm wrote:
>From: Jim Davis <jrd3@alum.mit.edu>

>See <http://lists.w3.org/Archives/Public/w3c-dist-auth/1999OctDec/0245.html>
>In particular, this message says:
>
>I lock a collection, because I'm going to be adding members
>to that collection.  If a depth:0 lock applies to all the
>immediate members of a collection as well, then I have prevented
>anyone from updating the state of one of the existing internal members of
>that collection. 

Thanks for tracking down the quotation (I can't search the email archive
right now)   but that message responds to a strawman.  I never said "a
depth:0 lock applies to all the immediate members of a collection".
(indeed, that's what a depth infinity lock does).   I was asking about a
depth 0 lock being inherited by *newly created* members of the collection.

So let me ask again.

If I lock collection a/ with depth 0, then do a PUT to a/b.html (which did
not prev exist), and a/b.html is added to the lock, what bad thing then
happens, or what good thing is prevented?
Does something bad happen if the PUT is instead a MKCOL, or COPY/MOVE, or a
LOCK?

Note that I have seen David Chandler's reply.  Do you have anything to add
other than his example?

Also, if you have any comments on the very end of my last email (where I
asked whether the problem was the definition of "added to the lock") that
might help.

best wishes

Jim



