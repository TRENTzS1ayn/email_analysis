docno="lists-039-12721994"
received="Thu Dec  9 23:55:44 1999"
isoreceived="19991210045544"
sent="Thu, 9 Dec 1999 23:55:37 -0500"
isosent="19991210045537"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: BINDing using a weak reference"
id="9912100455.AA02972@tantalum"
inreplyto="384FE699.85F70CD6&#64;us.oracle.com"
expires="-1"


To:w3c-dist-auth@w3.org


Why not just add a "deleted" attribute to a resource, set this to
be "true" when a resource is deleted, and then automatically add
"!deleted" to search queries?

Cheers,
Geoff

   From: "Eric Sedlar" <esedlar@us.oracle.com>

   Of course you will build an index.  That's the problem, because you are
   locating the data without traversing the collection hierarchy to find the
   data.  Let's say you find a hit using that index.  That item may actually
   have been deleted because you have deferred garbage collection, and there is
   no way to update the index to remove that item until the actual resource has
   been deleted.  If you were traversing the hierarchy as well, you wouldn't
   find that item if it would be garbage collected later because there wouldn't
   be a path to find it.

   ccjason@us.ibm.com wrote:

   > >>
   > I can tell you
   > that if most Oracle customers are offered the choice of having a bunch of
   > great neat content management functionality at the price of decreasing
   > search performance, they will stick with the search performance.  Nothing
   > irritates users more than waiting for search results.

   > >>
   > On the comment I quoted above...Are we talking about text searches?
   > You did mention text searches above.
   > If performance were important,
   > wouldn't you build an index and just use the index to service queries?
   > ... just like most search systems do?   If you use an index,  the amount
   > of time users wait for search results is not really relevant to your
   > point.  The performance will be the same either way.



