docno="lists-039-14164206"
received="Mon May 29 23:15:52 2000"
isoreceived="20000530031552"
sent="Mon, 29 May 2000 23:15:41 -0400 (EDT)"
isosent="20000530031541"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: If: header and &quot;parent&quot; resource checking"
id="200005300315.XAA23006@tantalum.atria.com"
inreplyto="Pine.LNX.4.10.10005291734570.15722-100000&#64;nebula.lyra.org"
expires="-1"


To:w3c-dist-auth@w3.org


   From: Greg Stein <gstein@lyra.org>

   No matter what people think of locknull resources, they do exist,
   and they do modify the parent collection.

The fact that they show up in a PROPFIND does not require that their
addition and removal from a collection affect the lock state of that
collection.  I'll appeal again to live properties here.  They are
properties of a resource, but they can be changed without affecting
the lock state of the resource.

   My previous post went over this, and I see nothing "funny" about
   different behaviors when different states exist on the server.

I'll retract my "acts funny" argument, since "acting funny" will never
be more than a subjective criteria.  My real concern was the bad
interaction with versioning (but I still think locknull resources
act funny :-).

   Personally, I'd just refuse to create locknull resources in a versioned
   space. Maybe even disable locking altogether.

This would mean that all locking clients (such as Office 2000) would
fail when applied against a versioned space.  I believe this is
unacceptable (I know it is unacceptable for my implementation).

   Yup. Locknull resources exist to "reserve" a particular member in a
   parent collection. You have to modify the parent to assert that the
   member has been reserved.

But that modification does not have to imply a change that is controlled
by a write lock (the live property analogy).

Cheers,
Geoff



