docno="lists-039-14796707"
received="Wed Jan  5 23:53:54 2000"
isoreceived="20000106045354"
sent="Wed, 5 Jan 2000 23:53:48 -0500"
isosent="20000106045348"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Re: Translation in the Tower of Babble"
id="10001060453.AA18659@tantalum"
inreplyto="7DE119D3D0E15543874F7561EECBDBED02619DF1&#64;BEG.platinum.corp.microsoft.com"
expires="-1"


To:w3c-dist-auth@w3.org

   From: Yaron Goland <yarong@Exchange.Microsoft.com>

   <yg/>
   Corollary #1.3 - Since HTTP request messages can only be handled by
   resources which respond with HTTP response messages then 
   even error messages
   such as "Not Found" must have been generated by a resource.

   <yl/>
   Well if the resource can't handle HTTP request, the daemon 
   that will ask
   this resource to generate an HTTP reply should return to the client an
   error stating that the resource doesn't support this 
   protocol, like a Not
   Found with a good explanation in the body.

   <yg/>
   Perhaps I'm misunderstanding but I assume you are just confirming that you
   agree with #1.3. The resource which sent the "HTTP not supported" response
   is an HTTP resource. What the resource is saying is "I don't want to talk to
   you in HTTP." However the only way he could say that is if he supported
   HTTP. He is still an HTTP compliant resource and therefore it was a resource
   (in the object model) that generated the response.

For me, saying that "every resource must be an HTTP resource so that
it at least can say that it doesn't understand HTTP requests" is
another result of trying to eliminate the concept of a "server" (what
Yves calls a "daemon") from the model.  I believe a simpler (and more
intuitive) model is to just say that there is a server, and if the
server sees that a resource at a URL is not an HTTP resource, it
returns an "HTTP not supported" response.  This is the same server
object that owns the NR (name-to-resource) mapping data.

Cheers,
Geoff



