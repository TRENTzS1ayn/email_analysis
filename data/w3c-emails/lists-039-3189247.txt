docno="lists-039-3189247"
received="Sun Feb  7 03:31:57 1999"
isoreceived="19990207083157"
sent="Sun, 7 Feb 1999 00:18:33 PST"
isosent="19990207081833"
name="Larry Masinter"
email="masinter@parc.xerox.com"
subject="RE: [long] Re: I-D ACTION:draft-ietf-webdav-versioning-01.txt"
id="000901be5272$73f77860$15d0000d@copper.parc.xerox.com"
charset="iso-8859-1"
inreplyto="4.1.19990202133529.00a54500&#64;shell7.ba.best.com"
expires="-1"

To:"Max Rible"<max@glyphica.com>,"WEBDAV WG"<w3c-dist-auth@w3.org>


> At 12:10 2/2/99 -0800, Chris Kaler wrote:
> >[CK] The point of using "giberish" in the draft is to reinforce
> >     that the server determines the value.  A server could make it
> >     giberish or something else.  One limitation we have is the
> >     strong reluctance in IETF to "munge" URLs.
> 
> Is there a document describing what the IETF folks mean when they
> describe "mungeing" URLs?  The image that comes to mind is tacking
> on decorations like # and ? with information after them, or creating
> extra namespaces like the ones for configurations and checked-out
> files.

RFC 2396 establishes the syntax for URIs, and two classes:
those that follow a hierarchical syntax, and those for which
everything after the scheme is 'opaque'.

There isn't a clear document on the framework into which URIs
fit, but my personal view is that we have several roles:

a) supplying URIs for resources to be identified
b) receiving URIs inside content or protocols, and subsequently 
  attempting to contact the resources identified
c) resolving a URI to the resource it identifies

My personal view is that URIs should be completely opaque to
components that are engaged in (b), with two exceptions
 1) the (completely syntactic) "relative URI" computation
 2) the (completely syntactic) construction of new URIs
    based on query or form submission, by adding "?" and
    either query or form data.

WebDAV has expanded this, by allowing (requiring?) WebDAV clients
to interpret the syntax of hierarchical URIs as corresponding
to the WebDAV containment model.

In any case, 'mungeing' refers to semantic or syntactic
processing of URIs outside of the resolution process (c).

Requiring versioning clients to interpret, parse, and
reconstruct URIs to syntactically link between one
version of a resource and another would be outside of
these guidelines.

The guidelines are put into place in order to give maximum
flexibility to the origin servers which are serving the
URIs, to allow whatever mapping is necessary between the
URI syntax and the actual resource, in the back-end of
the resolution process.

Larry



