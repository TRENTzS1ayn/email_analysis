docno="lists-039-4540146"
received="Thu Mar  4 05:18:04 1999"
isoreceived="19990304101804"
sent="Thu, 04 Mar 1999 02:15:10 -0800"
isosent="19990304101510"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Standard WebDAV Properties"
id="36DE5D2E.7384935F@lyra.org"
charset="us-ascii"
inreplyto="9903040159.aa10036&#64;paris.ics.uci.edu"
expires="-1"


To:"Roy T. Fielding"<fielding@kiwi.ics.uci.edu>
CC:jamsden@us.ibm.com,w3c-dist-auth@w3.org,ietf-dav-versioning@w3.org

Umm...

Roy, I think his note was calling for a way to say "I defined a book
author property using <this> DTD and semantic" so that others could use
the same specification with the intent of some level of
interoperability.

I didn't read anything in there about HTTP methods or other
protocol-level changes.

As an empirical example, Lisa Lippert's draft spec for additional
collection properties is a great case-study for publishing some
"standardized" properties [that occur outside of the needs of the base
protocol(s)].

Cheers,
-g

Roy T. Fielding wrote:
> 
> >One approach is to take a lesson from XML. XML is a standard language for
> >tagged documents. ...
> 
> I don't want to burst any bubble here, but XML has yet to become a lesson
> for anything but pre-release marketing hype.  What you say is true of any
> codification of application domains, and metadata efforts in general.
> If we understand and agree upon the key elements of an application
> architecture, then standard identifiers of those elements can be used
> to construct self-descriptive actions.  That is a good thing in any syntax,
> but something that the IETF usually avoids doing within a WG.
> 
> The problem with using that style to define a protocol, however, is that
> all pieces of the communication apparatus cannot be expected to understand
> all application domains, and certainly cannot be expected to download
> application domain descriptions.  There must be a standard set of general
> semantics that is sufficient to identify what type of action is taking place,
> not the details of how it will be implemented.  That is what HTTP provides
> with the abstract resource interface, of which WebDAV is now a part.
> 
> As I said a while back, if a specific application is calling for a
> large number of HTTP methods to be defined, then that application is
> misusing HTTP.  Almost always, the solution is to rethink the role of
> resources in the application.
> 
> ....Roy

--
Greg Stein, http://www.lyra.org/



