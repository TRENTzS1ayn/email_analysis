docno="lists-039-4558507"
received="Thu Mar  4 09:11:59 1999"
isoreceived="19990304141159"
sent="Thu, 4 Mar 1999 09:11:51 -0500"
isosent="19990304141151"
name="Geoffrey M. Clemm"
email="gclemm@tantalum.atria.com"
subject="Re: Standard WebDAV Properties"
id="9903041411.AA10097@tantalum"
inreplyto="9903040247.aa13547&#64;paris.ics.uci.edu"
expires="-1"


To:fielding@kiwi.ics.uci.edu
Cc:w3c-dist-auth@w3.org,ietf-dav-versioning@w3.org

   From: "Roy T. Fielding" <fielding@kiwi.ics.uci.edu>

   >Roy, I think his note was calling for a way to say "I defined a book
   >author property using <this> DTD and semantic" so that others could use
   >the same specification with the intent of some level of
   >interoperability.
   >
   >I didn't read anything in there about HTTP methods or other
   >protocol-level changes.

   If it is being used to establish interoperability, then it is the protocol.

Roy: From what I've seen of your postings, and knowing what Jim is
proposing, I believe the two of you are in violent agreement, but
that there must have been something in the way Jim phrased it that
left it open to misinterpretation.  (Or maybe you just disagree :-).

There are two very different ways of achieving interoperability.

You can add new HTTP methods, headers, and resource types.  You then
need to describe the interaction between the new methods and headers
with and all existing resource types, and then the interaction between
the new resource types and all methods (both old and new).

Given that HTTP methods and headers are a flat name space and a
server needs to respond to any method/header combination applied
to any resource type, it is essential that the number of new ones
introduced be draconianly minimized.

But another way to achieve interoperability is to agree upon how a
particular property name will be used, and a DTD for the value of that
property.  Unfortunately, if you take your earlier statement literally,
then this agreement is a "protocol change", and groups interested
in this kind of interoperability feel the need to get their property
names and DTD's "into the protocol".

What Jim is proposing is that this is a *different* kind, but equally
valid form of interoperability, and because it requires no new
methods, headers, or resource types, it does *not* have to be addressed
by the protocol working group, but rather more informally by posting
to a web site or some means other than a formal IETF working group.

So Jim's proposal is actually designed to *limit* the work/scope of a
working group (and as a member of the versioning design team, that is
a goal I vigorously support :-).

   Semantics-by-reference is a very common technique (we had the same discussion
   at the Dublin Metadata Conference regarding schemas).  I wasn't disagreeing
   with Jim's suggestion, except to note that

     1) XML is nothing special in that regard, and

It's not special, but we're already requiring an XML parser to handle
WebDAV properties, so why make people use two (or n) parsers, when an
XML parser would work just fine.  It's just a parser, after all.

     2) the IETF doesn't do that, and

That's Jim's point.  While people think that "if it's an interoperability
issue, it must be addressed by an IETF working group", we get constant
pressure to deal with issues that we believe could be handled more
informally.  Lisa's structured document property proposal is an excellent
example.

     3) HTTP doesn't need it if the application is done right.

   The HTTP approach, when used wisely, is to construct a set of resources
   that represent the application, and then use standard methods on those
   resources.

I heartily agree.

   My reading of Jim's message was that it was a criticism of
   the direction of WebDAV versioning, which I would agree with, but
   his suggested solution is entirely different than mine.  This doesn't
   change the fact that it is a good idea to have such a DTD library.

I'm *very* interested in hearing your criticism of the direction
of WebDAV versioning (781-676-2684 if you think it would be more
effective by phone).  I personally believe there were way too many
headers and methods being proposed, and not enough use of new resource
types and standard properties for them.  In draft-clemm-webdav-versioning
I propose just one new header (Workspace) and 6 new methods:
CONTROL, CHECKOUT, CHECKIN, UNCHECKOUT, GETCONFLICTS, UPDATE.
We are currently working hard to unify this proposal with
draft-ietf-webdav-versioning.

Cheers,
Geoff



