docno="lists-039-4702429"
received="Tue Mar  9 13:59:12 1999"
isoreceived="19990309185912"
sent="Tue, 09 Mar 1999 10:56:22 -0800"
isosent="19990309185622"
name="Max Rible"
email="max@glyphica.com"
subject="RE: Advanced collections and ordering"
id="4.1.19990309103708.00a0c800@shell7.ba.best.com"
charset="us-ascii"
inreplyto="201BB34B3A73D1118C1F00805F1582E801BA4D2C&#64;x-wb-0128-nt8.wrc .xerox.com"
expires="-1"


To:w3c-dist-auth@w3.org

At 14:33 3/9/99 +0000, Slein, Judith A wrote:
>Ordering in the collections specification is completely under the control of
>the client.  The server does nothing to enforce the "correctness" of the
>ordering.  

>The server is required only to insure that, for collections that are
>ordered, every collection member appears in the ordering exactly once and no
>resource that is not in the collection appears in its ordering.  Beyond
>that, it's up to the client to insure that the ordering follows the
>semantics identified by DAV:orderingtype.

Are you saying that PROPFIND will always return elements in arbitrary
order and that the client should take the rules and do the sorting itself?
This seems at odds with the collection protocol.

>This should probably be made clearer in the spec.

I got a *completely* different impression from section 5.1:
---
Collections on a compliant server may be ordered, but need not be.  It 
is up to the client to decide whether a given collection is ordered and, 
if so, to specify the semantics to be used for ordering its members.
...
The server is responsible for enforcing these constraints on orderings.  
...
When responding to a PROPFIND on a collection, the server MUST order the 
response elements according to the ordering defined on the collection.
---
The DAV:custom ordering is already defined, and that is under control
of the client as you said above.  The DAV:unordered ordering is also
defined, and is arbitrary.  However-- at least according to my reading
of the collections protocol spec-- there is an arbitrary space of 
other orderings, as yet undefined, that could be applied by the server.  
I expect it will be common for servers to implement basic notions such 
as alphabetical sorting by filename or extension, for instance.

In those cases, the Position: header could be used in ways that would
violate the ordering on the collection as I described in my previous
message.

-- 
%% Max Rible %% max@glyphica.com %% http://www.amurgsval.org/~slothman/ %%
%% "Before enlightenment:  sharpen claws, catch mice.                   %%
%%  After enlightenment:  sharpen claws, catch mice."            - me   %%



