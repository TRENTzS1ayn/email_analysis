docno="lists-039-4774575"
received="Tue Mar  9 18:48:53 1999"
isoreceived="19990309234853"
sent="Tue, 09 Mar 1999 15:45:12 -0800"
isosent="19990309234512"
name="Max Rible"
email="max@glyphica.com"
subject="RE: Advanced collections and ordering"
id="4.1.19990309142146.00a1fcc0@shell7.ba.best.com"
charset="us-ascii"
inreplyto="201BB34B3A73D1118C1F00805F1582E801BA4D31&#64;x-wb-0128-nt8.wrc .xerox.com"
expires="-1"


To:w3c-dist-auth@w3.org

At 21:51 3/9/99 +0000, Slein, Judith A wrote:
>The intent of the ordering protocol is to provide basic support for ordering
>that is nearly cost-free for the server.  The server is not really doing
>anything but blindly follow the instructions of the client for inserting
>elements into the ordering, and then responding to PROPFIND according to the
>ordering the client set up.  This ordering protocol is really intended for
>cases where the server cannot perform the ordering because it is not related
>to the value of any property on the resources in the collection.  (It
>assumes that for orderings that could be expressed as a sort based on some
>property, a DASL search is more likely to be used than a collection
>ordering.)

...

>Servers do not order the members of a collection.  Clients do this.  If the
>client neglects to specify a position for a new member of an ordered
>collection, the server is required to position the new member at the end of
>the ordering.

This seems to me an excellent summary of client-maintained orderings.
What about server-maintained ones?  While the advanced collection protocol
document and its requirements document do not directly address
server-maintained orderings, neither do they disallow them.
The language of section 5 of the advanced collection protocol document
does a very good job of describing server-maintained orderings as well
as client-maintained ones.  Do the folks in the collections protocol
group intend to disallow server-maintained orderings entirely?

While a DASL search could be used to provide simple orderings of
collections, I would suggest recommending against using it that way, 
or making it very explicit in the DASL specification that an optimized path
to the most popular simple searches (sort by name, extension, size,
various timestamps) should be available.  The overhead of invoking
a search engine that does thesaurus lookups and natural language 
query parsing and multiple accesses of index files-- when all you
really need to do is juggle some bits you read out of one directory--
would make such orderings very inefficient unless the programmer(s)
implementing DASL went through a great deal of effort to optimize
certain queries as degenerate cases.

While there is no need to explicitly define server-maintained orderings
for the advanced collections protocol, it would be good to make explicit
the interaction of the protocol with server-maintained orderings, just
as there are explicit provisions for future standards involving strong
references without actually nailing them down.

-- 
%% Max Rible %% max@glyphica.com %% http://www.amurgsval.org/~slothman/ %%
%% "Before enlightenment:  sharpen claws, catch mice.                   %%
%%  After enlightenment:  sharpen claws, catch mice."            - me   %%



