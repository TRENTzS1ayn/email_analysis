docno="lists-039-5296651"
received="Tue Mar 30 18:04:23 1999"
isoreceived="19990330230423"
sent="Tue, 30 Mar 1999 14:55:51 -0800"
isosent="19990330225551"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Section 23.4 Appendix 4 - XML Namespace in WebDAV"
id="37015677.57A8014E@lyra.org"
charset="us-ascii"
inreplyto="001f01be7aef$cb4c4be0$d115c380&#64;ics.uci.edu"
expires="-1"


To:ejw@ics.uci.edu
CC: Fredrik Lundh<fredrik@pythonware.com>, WEBDAV WG<w3c-dist-auth@w3.org>

Jim Whitehead wrote:
> 
> >
> > are we talking about whether the following elements are
> > equivalent or not?
> >
> >      <cars:part xmlns:cars="http://www.cars.com/xml"/>
> >      <cars:mlpart xmlns:cars="http://www.cars.com/x"/>
> >      <cars:xmlpart xmlns:cars="http://www.cars.com/"/>
> 
> Yes, this is exactly the question.
> 
> > if so, I've once asked James Clark about this, and his answer was
> > that "the XML namespaces spec doesn't make them equivalent",
> > but on the other hand, that an XML system using namespaces
> > can treat them all the same if it wants to.
> 
> WebDAV decided to define rules which state that an element name is
> concatenated to the end of a namespace name to create a full element name.
> All WebDAV conformant applications (this is stated in 23.4) must treat a
> combination of a namespace and an element name as a full element name which
> is created by concatenation.
> 
> Since the XML namespace specification was undefined in this area, the WebDAV
> specification added additional requirements, for WebDAV XML namespace
> applications only, to make this well defined for DAV applications.

This is really gross. The XML Namespaces spec seems to consider a
(namespace, name) pair as the unique value, rather than namespace+name.
Maybe I misread the XML spec.

Doing it this way just doesn't seem Right. Why can't the DAV spec use
the ordered-pair approach? The two links that were posted at the start
of the thread only deal with the fact that the XML spec was included
into the DAV spec, rather than a discussion of *why* we use this
approach. Does anybody have a reference to a discussion on "why"? (or
can explain why?)

Appendex A.3 in the XML Namespaces specification would seem to indicate
support for an ordered-pair vs. concatenation.

thx,
-g

--
Greg Stein, http://www.lyra.org/



