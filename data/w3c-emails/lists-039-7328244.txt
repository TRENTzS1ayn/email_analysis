docno="lists-039-7328244"
received="Thu Aug 26 13:48:34 1999"
isoreceived="19990826174834"
sent="Thu, 26 Aug 1999 10:41:45 -0700"
isosent="19990826174145"
name="Jim Whitehead"
email="ejw@ics.uci.edu"
subject="RE: Mozilla editor and DAV"
id="NDBBIKLAGLCOPGKGADOJEECOCEAA.ejw@ics.uci.edu"
charset="iso-8859-1"
inreplyto="whlnayr6ei.fsf&#64;viffer.oslo.metis.no"
expires="-1"

To: Steinar Bang<sb@metis.no>,w3c-dist-auth@w3.org


This approach seems to have occurred to several people.  There was a paper
in the 1997 Usenix Annual Technical Conference titled:

"Extending the Operating System at the User level: the Ufo Global File
System"
Albert D. Alexandrov, Maximilian Ibel, Klaus E. Schauser, Chris J. Scheiman
pages 77-90

http://www.cs.ucsb.edu/research/ufo/

"Ufo is a global file system. It allows users to treat remote files exactly
as if they were local. Currently, Ufo supports file access through the FTP
and HTTP protocols and allows new protocols to be plugged in. Ufo is
implemented entirely at the user level using the Catcher. The Catcher is our
tool for extending the functionality of standard UNIX operating systems
completely at the user level. It works by intercepting selected system calls
at the user level, using the existing /proc interface."

I contacted them about a year ago, and told them about DAV.  They mentioned
that the project was no longer active, but that source code was available if
someone was interested in picking it up and extending it. Their approach may
be Solaris-specific.

I did download their binary executable and ran it on a Solaris machine, and
it worked pretty well.  It was kinda neat being able to do an "ls" of the
Internet-Drafts directory (and very useful to be able to use the ls
wildcards to only find specific I-Ds).

Of course, this approach highlighted for me why you want to have both tool
integration and OS support. For example, if using Ufo (i.e., using only an
OS integration) I wanted to do a grep of the I-D directory, it would be a
really long operation, where every I-D would be locally downloaded, then
searched.  If, however, grep knew about DASL, it could then turn its request
into a DASL query, which would execute much faster.

It seems to me the advantage of OS integration is compatibility will all
existing file-based tools, at the cost of some operations taking longer than
the same operation performed by a tool that was tightly integrated with DAV,
and hence could take advantage of DAV features to perform the operation in
the most efficient way.  So, I see advantages to both approaches, with the
tight integration into every tool being the best possible choice.  But,
since this is going to take a while to occur, OS-level integration gives a
good level of compatibility for the interim as tools add DAV support.

- Jim



> -----Original Message-----
> From: w3c-dist-auth-request@w3.org
> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Steinar Bang
> Sent: Thursday, August 26, 1999 6:58 AM
> To: w3c-dist-auth@w3.org
> Subject: Re: Mozilla editor and DAV
>
>
> >>>>> ruebe@aachen.heimat.de (Christian Scholz):
>
> > Wouldn't it make more sense if WebDAV functionality would be
> > implemented in the underlying OS as then every application
> > automatically would have access to it. But I see that maybe more
> > advanced features like properties etc. one would not be able to
> > handle that way (if it's only some sort of filesystem structure).
>
> > I once also asked on the Linux Kernel Mailing list and it looks as
> > if also there nobody is working on it..
>
> Here's one idea at least
>         http://rufus.w3.org/linux/httpfs/
>
> But I don't think he's been looking at this for quite a while.
>



