docno="lists-039-7483735"
received="Sat Sep  4 20:56:58 1999"
isoreceived="19990905005658"
sent="Sat, 4 Sep 1999 20:56:55 -0400"
isosent="19990905005655"
name="Geoffrey M. Clemm"
email="gclemm@tantalum.atria.com"
subject="Re: Bindings, Locks, and MOVE"
id="9909050056.AA03594@tantalum"
inreplyto="852567E1.004C4EEF.00&#64;d54mta03.raleigh.ibm.com"
expires="-1"


To:jamsden@us.ibm.com
Cc:w3c-dist-auth@w3.org

   From: jamsden@us.ibm.com

   DAV4J does do cross server COPY and MOVE. This is an important
   function required to support publishing web applications. DAV4J does
   it by reusing GET/PROPFIND and PUT/PROPPATCH (followed by DELETE if
   MOVE).

Let me modify Greg's question just a bit:

Is anybody going to be implementing cross-server MOVE as anything
more than a cross-server COPY followed by a DELETE?  The reason
I ask is that it is a MOVE that has all the tricky interactions
with multiple bindings and locks, while a COPY is relatively
straightforward (new resources are created, so bindings and locks
are not affected).

In particular, I'd advocate making cross-server COPY's a MUST
(or at least a SHOULD), while a cross-server MOVE's a MAY
(or at most a SHOULD).  My main argument against MOVE is that
unless the "fixup" step that comes between the logical
"COPY and the MOVE" is well defined (as it is in the
advanced collection spec), the MOVE semantics is so vague
as to be useless.

Then a client that wants the COPY/DELETE form of "MOVE" can just
issue a COPY followed by a DELETE.

Cheers,
Geoff



