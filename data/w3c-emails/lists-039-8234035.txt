docno="lists-039-8234035"
received="Fri Sep 10 22:20:15 1999"
isoreceived="19990911022015"
sent="Fri, 10 Sep 1999 22:27:41 -0400"
isosent="19990911022741"
name="ccjason@us.ibm.com"
email="ccjason@us.ibm.com"
subject="Re: Crossserver ops and lock token swapping."
id="852567E9.000CD2AF.00@D51MTA07.pok.ibm.com"
charset="us-ascii"
inreplyto="Crossserver ops and lock token swapping."
expires="-1"

To: John Stracke<francis@ecal.com>,w3c-dist-auth@w3.org



> > That leads me to believe that
> > locks MUST NOT move with the resource

> It occurs to me that the biggest reason you'd want to MOVE the lock is because
> you want to keep control over the resource in the new location.  Couldn't you
do
> that by locking the destination and then MOVEing the resource?

Yup I think that's the biggest.  And you can do it fairly precisely with null
locks... at the destination   and in some sense reserve the destination before
you actually move something to it.

...but, and I don't know if it's important,... but if you move locks during a
MOVE, locks within a moved tree are retained.   But if we don't support moving
of locks, some locks might be totally destroyed by the MOVE operation.  I think
that's what the previous proposal said.  It's hard to recall.  My brain has been
warped by the new proposal.  :-)

...I think it was/is also the hope that tying locks to resources (Judy's
proposal) provides a simpler model and that that will pay off in other ways.  I
think the jury's still out on that.

Anything else?...



