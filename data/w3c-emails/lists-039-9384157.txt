docno="lists-039-9384157"
received="Sun Sep 26 17:42:30 1999"
isoreceived="19990926214230"
sent="Sun, 26 Sep 1999 17:48:09 -0400"
isosent="19990926214809"
name="ccjason@us.ibm.com"
email="ccjason@us.ibm.com"
subject="Re: Thoughts on writing standards that real clients can support"
id="852567F8.007739BD.00@D51MTA03.pok.ibm.com"
charset="us-ascii"
inreplyto="Thoughts on writing standards that real clients can support"
expires="-1"

To:"Yaron Goland (Exchange)"<yarong@Exchange.Microsoft.com>
cc:"'Geoffrey M. Clemm'"<gclemm@tantalum.atria.com>,w3c-dist-auth@w3.org,"Jim Whitehead (E-mail)"<ejw@ics.uci.edu>



Yaron, I think you have some good points.  Although one of you client arguments
against *optional* features don't quiet have the impact that you might expect if
I understand the proposals.

1) The proposal that is currently going around is that MOVE moves locks.  It
isn't optional in that proposal.
2) If all the lock tokens are provided, the move will succeed.  (Baring other
conditions like lock conflicts at the dest.)
3) Lock URI protection is optional in the most recent thread... but this only
involves the locks of other principles... so a client is unlikely to be able to
detect this before hand and take an optional preemptive code path.  (It will
alway provide tokens.)  And if there is a failure due to this type of conflict,
the client app is still unlikely to take an alternate path... other than to tell
the user of the problem which is a codepath that is always there.

This only deals with the optional path topic... and only the issue of LOCK URI
protection.  I think you have good points about locking with Word for example.

J.



------------------------------------------
Phone: 914-784-7569,   ccjason@us.ibm.com



