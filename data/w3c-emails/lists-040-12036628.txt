docno="lists-040-12036628"
received="Wed Jul 18 04:23:35 2001"
isoreceived="20010718082335"
sent="Wed, 18 Jul 2001 10:22:20 +0200"
isosent="20010718082220"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="RE: rfc2518 issue: DEFER_LOCK_NULL_RESOURCES_IN_SPEC"
id="NDBBKJABLJNMLJELONBKKECGCPAA.stefan.eissing@greenbytes.de"
charset="us-ascii"
inreplyto="OF87D4E67B.0C353EDA-ON85256A8C.00702D7E&#64;pok.ibm.com"
expires="-1"

To:"WebDAV"<w3c-dist-auth@w3.org>


> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Jason Crawford
>
> Can have a few more people speak up on the above thread.   So far we've
> just heard from Geoff and Lisa.  Any comments on either of their postings?
> Any additional comments?
>

As an implementor of server and client software using WebDAV, I would
have gladly skipped the mechanisms known as lock-null resources. As
Geoff pointed out in this thread, there are alternatives for clients to
live without them (although not quite as comfortable).

But the choice to include lock-null has been made in the past and I see
more trouble with abandoning it, than keeping it. Every implementation
I've seen (and that might be too few) implements lock-null correctly.

Apart from certain software from Seattle based companies: their server
has an incomplete implementation, which works only for ordinary resources.
It works good enough for the Seattle client software which uses this
feature.

Now, if WebDAV removes lock-null, every server implementor would have
to support it anyway, because 90% of the users use those Seattle clients.
I therefore see nothing to gain on the server side by abandoning lock-null.

On the client side, lock-null is a comfortable thing to use. So there is
nothing to gain either.

So, I'd say: let's embrace and extend lock-null resources.



