docno="lists-040-13344258"
received="Tue Aug 21 14:27:28 2001"
isoreceived="20010821182728"
sent="Tue, 21 Aug 2001 14:36:47 -0400"
isosent="20010821183647"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Webdav issue: UNLOCK_BY_NON_LOCK_OWNERS"
id="3906C56A7BD1F54593344C05BD1374B103F8AB72@SUS-MA1IT01"
charset="iso-8859-1"
inreplyto="Webdav issue: UNLOCK_BY_NON_LOCK_OWNERS"
expires="-1"


To: Webdav WG<w3c-dist-auth@w3c.org>

I'd probably avoid the whole "when is a checkout like a lock"
discussion.  They are pretty much orthogonal concepts, where
a checkout takes an unwriteable thing, and makes it writeable
(or makes a writeable copy of it), while
a lock takes a writeable thing and limits who can write to it.

So locking a checked-out thing can be a sensible thing to do
(i.e. now that it is writeable, you want to limit
who can write to it), and even locking a checked-in thing can
be sensible (if you want to limit who can update the live
properties that are affected by locking but are not affected
by the resource being checked in).

Cheers,
Geoff

-----Original Message-----
From: Eric Sedlar [mailto:Eric.Sedlar@oracle.com]
Sent: Tuesday, August 21, 2001 1:33 PM
To: Jason Crawford
Cc: Webdav WG
Subject: RE: Webdav issue: UNLOCK_BY_NON_LOCK_OWNERS


Well, checkout doesn't allow things to timeout, nor can you grab
a resource checked out into another workspace the way you can grab
somebody else's lock.

> -----Original Message-----
> From: Jason Crawford [mailto:ccjason@us.ibm.com]
> Sent: Sunday, August 19, 2001 9:20 AM
> To: Eric Sedlar
> Cc: Webdav WG
> Subject: RE: Webdav issue: UNLOCK_BY_NON_LOCK_OWNERS
> 
> 
> 
> <<
> The other issue, Geoff, is that people are using LOCK as a poor person's
> CHECKOUT, also assuming that LOCK's won't timeout.
> >>
> I agree.
> 
> <<
>   The RFC2518 revision
> should clearly state that LOCKs aren't to be used for this purpose.
> >>
> ???? - I assume the purpose of locking is to avoid lost updates.  What is
> the distinction between a "poor man's CHECKOUT"  and "avoidance 
> of the lost
> update problem"?   In the absense of actual versioning, aren't they the
> same?
> 
> J.
> 
> 
> 



