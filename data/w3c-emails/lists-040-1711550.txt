docno="lists-040-1711550"
received="Thu Feb 24 01:55:39 2000"
isoreceived="20000224065539"
sent="Wed, 23 Feb 2000 22:55:07 -0800"
isosent="20000224065507"
name="Yaron Goland"
email="yarong@Exchange.Microsoft.com"
subject="RE: Yaron.Redirect.ClientUpdate"
id="7DE119D3D0E15543874F7561EECBDBED030B53DC@BEG.platinum.corp.microsoft.com"
charset="iso-8859-1"
inreplyto="Yaron.Redirect.ClientUpdate"
expires="-1"


To:"'Slein, Judith A'"<JSlein@crt.xerox.com>,w3c-dist-auth@w3.org,"'yarong@goland.org'"<yarong@goland.org>

We can either let them use MKREF to update it or we can introduce a
UPDATEREFTARGET method. Lately I have been leaning to introducing new
methods in order to simplify the standard text. Re-using existing methods
for related functionality has proven to make specs harder to read. For
example, in my GENA spec I specified that SUBSCRIBE can be used with a NT
header to create a subscription and with a Subscription-ID header but no NT
header to renew a subscription. The result is that I had to put in some
fairly confusing language to explain what to do if a request has both a NT
and a Subscription-ID header. After that experience I just introduce a
RESUBSCRIBE method to simplify things. Of course, this isn't a perfect
solution since the more methods you have the more things people have to put
on their slides when they explain WebDAV. =)

> -----Original Message-----
> From: Slein, Judith A [mailto:JSlein@crt.xerox.com]
> Sent: Mon, February 21, 2000 12:52 PM
> To: Yaron Goland; w3c-dist-auth@w3.org
> Subject: RE: Yaron.Redirect.ClientUpdate
> 
> 
> As long as we have the DAV:reftarget property, the obvious 
> thing to do is
> allow clients to update its value.  If you want to get rid of 
> that property,
> as it seems you do from NoWebDAV#3, then I suppose we would 
> need something
> like an UPDATEREFTARGET method.
>  
> --Judy
> 
> -----Original Message-----
> From: Yaron Goland [mailto:yarong@Exchange.Microsoft.com]
> Sent: Friday, February 11, 2000 2:57 AM
> To: 'w3c-dist-auth@w3.org'
> Subject: Yaron.Redirect.ClientUpdate
> 
> 
> 
> Maybe I just missed it but there doesn't seem to be any way 
> to update the
> target of a redirection resource without deleting it. I move that a
> mechanism be provided that enables the target of a 
> redirection resource to
> be updated without having to delete the resource.
> 



