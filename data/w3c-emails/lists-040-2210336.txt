docno="lists-040-2210336"
received="Fri Mar  3 13:34:26 2000"
isoreceived="20000303183426"
sent="Fri, 3 Mar 2000 10:32:34 -0800"
isosent="20000303183234"
name="Eric Sedlar"
email="esedlar@us.oracle.com"
subject="Re: Case sensitive names and authoring"
id="012d01bf853e$d8bbb4f0$9a114498@us.oracle.com"
charset="iso-8859-1"
inreplyto="85256897.0042C4B7.00&#64;d54mta03.raleigh.ibm.com"
expires="-1"


To:<jamsden@us.ibm.com>,<w3c-dist-auth@w3.org>

One possibility we're toying with is to store a boolean property with a
collection resource indicating whether or not its bindings are
case-sensitive or case-insensitive.  For example, it might be the case that
part of your hierarchical namespace is implementing Windows filesystem
semantics, which require case-insensitive matching (although they are
case-preserving), and another part implementing UNIX filesystem semantics.
Otherwise, there will always be some loss of information when moving data in
and out of the WebDAV server.

--Eric

----- Original Message -----
From: <jamsden@us.ibm.com>
To: <w3c-dist-auth@w3.org>
Sent: Friday, March 03, 2000 4:09 AM
Subject: Re: Case sensitive names and authoring






Greg,
This is great. I didn't have an HTTP spec in front of me when I wrote the
note (need to get one by the bed I guess). We're probably running into the
MSFT problem. Maybe this doesn't happen on Windows2000 which seems to leave
you file names alone a little better. I'll investigate.
On Thu, 2 Mar 2000 jamsden@us.ibm.com wrote:
>
> HTTP URLs aren't case sensitive,

RFC 2616, S3.2.3 states "When comparing two URIs to decide if they match
or not, a client SHOULD use a case-sensitive octet-by-octet comparison of
the entire URIs, with these exceptions: ..."

In other words: they *are* case-sensitive.

Apache certainly treats them that way. Try these two URLs:

http://www.webdav.org/other/proxy.html
http://www.webdav.org/other/Proxy.html

You'll find the latter fails.

Note that HTTP servers running on an MSFT platform typically treat URLs in
a case-insensitive fashion (due to the filesystem being insensitive).

> but some resources are. For example, Java
> source managed by a WebDAV server must retain the case in the package and
> class names or the code won't compile. mod_dav foldes all resource names
to
> lower case, so .java files on the server won't compile.

WHAT?!! mod_dav does NOT do any case-folding. Euh... what made you think
it does?

> It seems that WebDAV could, like HTTP, be case insensitive while at the
> same time require that the server retain the case of resource URLs. That
> is, the URL segments in the bindings would retain the case in the target
> when it was entered, but access to those resources would be case
> insensitive. If this is not the case, WebDAV can't be used to store Java.
> That would be a real bummer!
>
> Would the proposal above be acceptable, and in the spirit of HTTP?

No and no. (IMO)

I certainly do not want to take the performance hit to start doing
case-insensitive work in mod_dav and Apache. I am in great favor of
continuing to operate in a case-sensitive fashion, and I believe the
relevant RFCs encourage that, too.

Cheers,
-g

--
Greg Stein, http://www.lyra.org/



