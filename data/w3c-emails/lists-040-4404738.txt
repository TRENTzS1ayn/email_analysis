docno="lists-040-4404738"
received="Sun Nov 26 20:47:41 2000"
isoreceived="20001127014741"
sent="Sun, 26 Nov 2000 20:47:00 -0500 (EST)"
isosent="20001127014700"
name="Geoffrey M. Clemm"
email="geoffrey.clemm@rational.com"
subject="Depth infinity PROPFIND (was: [RFC2518 Issue] PROPFIND 'allprop' usage)"
id="200011270147.UAA00023@tantalum.atria.com"
inreplyto="ONEOJMKKAIDAGPLOPJEDAEGECJAA.wiggs&#64;wiggenout.com"
expires="-1"


To:w3c-dist-auth@w3.org


I support the use of 507 to indicate a server wishes to truncate
the PROPFIND.

I assume that if a server will respond with partial results, that the
507 will be returned under the appropriate response elements (whose
properties were omitted), while the overall status of the request
would be a 207.

Cheers,
Geoff

   Date: Sun, 26 Nov 2000 14:59:17 -0800
   From: Kevin Wiggen <wiggs@wiggenout.com>


   I think this should be split into 2 threads (as someone suggested earlier)
   and so I will attempt to do so here :)

   1)  Depth infinity searches.

   I can see some very good uses for depth infinity searches and can also see
   the large DOS attack.   To alleviate the situation I will suggest (again)
   that we add a 507 Insufficient Storage status code response to a Propfind.
   This will allow a server to respond with partial results when the result set
   is to large.  This was how DASL suggested that servers handle the Result Set
   Truncation possibility of searches that were to large, and since Propfind is
   nothing but a limited search, I believe the 507 works well in this case
   also.

   In this way the server is free to answer as much as they can, and still give
   a proper error condition.  In cases where the depth infinity is not rather
   large, the 207 is returned as normal.  In the case of LARGE depth infinity
   propfinds, the 507 is returned with partial propfind data.

   Kevin



