docno="lists-040-5788742"
received="Tue Apr 10 17:12:53 2001"
isoreceived="20010410211253"
sent="Tue, 10 Apr 2001 14:10:35 -0700"
isosent="20010410211035"
name="Roy T. Fielding"
email="fielding@ebuilt.com"
subject="Re: [offlist] WebDAV  Delete post (Flavors of DELETE)"
id="20010410141035.C968@waka.ebuilt.net"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E233D&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>
Cc: WebDAV Working Group<w3c-dist-auth@w3.org>


On Tue, Apr 10, 2001 at 10:41:30AM -0400, Clemm, Geoff wrote:
> On the issue of trash folders:
> 
> HTTP headers are a poor way of marshalling method specific
> information.  A header exists in a global namespace, and should be
> reserved for things that proxies need to look at.
> 
> So if you want to extend DELETE, I would suggest following the
> standard WebDAV approach and add an XML request body to the DELETE
> method.

Huh?  You've got that entirely backwards.  HTTP header fields are intended
to be method-specific.  The only part of an HTTP message that is not
supposed to be method-specific is the message payload (entity-headers
and entity-body).  I thought I made that perfectly clear in the HTTP spec,
but it probably got lost in the noise.

> In the specific case of trash folders, I would suggest a different
> approach.  In particular, I would add an OPTIONS parameter that would
> let you find out "where is the trash collection for this resource".
> Then the client could either issue a DELETE or a MOVE to that trash
> collection, depending on what the user wants to do.

Either the client knows where the trash is or it doesn't deserve to know
where the trash might be -- it is just another collection on the server.
Just make it an optional link in the metadata (a live property).

....Roy



