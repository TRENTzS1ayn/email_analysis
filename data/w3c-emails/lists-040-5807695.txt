docno="lists-040-5807695"
received="Tue Apr 10 18:21:43 2001"
isoreceived="20010410222143"
sent="Tue, 10 Apr 2001 15:20:07 -0700"
isosent="20010410222007"
name="Roy T. Fielding"
email="fielding@ebuilt.com"
subject="Re: [offlist] WebDAV  Delete post (Flavors of DELETE)"
id="20010410152007.F968@waka.ebuilt.net"
charset="us-ascii"
inreplyto="3906C56A7BD1F54593344C05BD1374B1018E234B&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>
Cc: WebDAV Working Group<w3c-dist-auth@w3.org>


On Tue, Apr 10, 2001 at 05:36:25PM -0400, Clemm, Geoff wrote:
> Some folks prefer to use OPTIONS for things that are true
> for the whole server, and some folks just
> hate live properties, but the live property is fine with me.

OPTIONS is for communicating extensions and capabilities, not for
identifying the URI of a trash resource.  That is simply an external link
in hypermedia parlance.

> As for the issue of whether to marshal in a request header vs. in a
> request body, a new request header eats up part of a global namespace,
> whereas an XML request body can use namespaces to keep extensions
> from stepping on each others toes, so I stand by my
> preference for using the request body for method specific parameters
> (of course, for methods like PUT that use the request body for content,
> that is not an option).

XML namespaces are no more capable of extensions than a global namespace
controlled by a standard.  The only difference is who gets to define them.
HTTP and XML have different design philosophies in that regard, and so
far the HTTP one has proven to be right (XML namespaces are 100% extensible,
but have almost zero interoperability success).  I'm not sure yet which
type of extensibility is better for a protocol.  I only know that needing
to parse XML in order to determine request semantics is totally and
irretrievably bad design.

Cheers,

Roy T. Fielding, Chief Scientist, eBuilt, Inc.
                 2652 McGaw Avenue
                 Irvine, CA 92614-5840  fax:+1.949.609.0001
                 (fielding@ebuilt.com)  <http://www.eBuilt.com>



