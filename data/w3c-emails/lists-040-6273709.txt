docno="lists-040-6273709"
received="Sun Apr 15 05:15:01 2001"
isoreceived="20010415091501"
sent="Sun, 15 Apr 2001 11:14:33 +0200"
isosent="20010415091433"
name="Julian F. Reschke"
email="julian.reschke@greenbytes.de"
subject="RE: Issue: PROP_ATTR"
id="AFEIKENBELCNEGJFCENGMEILDCAA.julian.reschke@greenbytes.de"
charset="us-ascii"
inreplyto="20010414165816.X31832&#64;lyra.org"
expires="-1"

To:"Greg Stein"<gstein@lyra.org>,"WebDAV WG"<w3c-dist-auth@w3.org>


> From: w3c-dist-auth-request@w3.org
> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Greg Stein
> Sent: Sunday, April 15, 2001 1:58 AM
> To: WebDAV WG
> Subject: Re: Issue: PROP_ATTR
>
>
> On Sat, Apr 14, 2001 at 12:23:56PM +0200, Julian F. Reschke wrote:
> >...
> > > see it more as the name is a key, which then maps to the value.
> > > Further, the
> > > name (key) is broken into a tuple of (localpart,
> namespace-uri, xml:lang),
> >
> > Why do you say that xml:lang is part of the key? That would
> indicate that
>
> Sorry... I didn't mean to imply that. I meant that the name element has
> three useful pieces of information, which must be recorded. As
> you suggest,
> only the localpart and URI are the "key". The xml:lang is effectively part
> of the value.

<sigh/>

> [ this is how it is implemented in mod_dav today ]
> >...
> > > so I don't see it as stored as XML with the rest of the value.
> > > And since it
> > > isn't in XML format, it becomes very difficult to store things such as
> > > attributes.
> >
> > Make the key (namespace-uri, local-name) and the value "XML
> serialization of
> > the property element", and you're done.
>
> I maintain that it should be the serialization of the contents of the name
> element, but exclude the name element itself. For example:
>
>   <prop>
>     <myprop>
>       contents
>       <child-elem att="foo"/>
>     </myprop>
>   </prop>
>
> In the above example, I see the value as 'contents<child-elem att="foo"/>'
> (mod_dav actually preserves whitespace; I just omitted it here
> for clarity).
>
> Further, there may be an xml:lang that applies to the "scope" that the
> property value occurs within. The name is separate, and is a tuple of
> (localpart, namespace-URI).
>
> I believe this is the appropriate interpretation; the <myprop>
> element (and
> any attributes on it) are the name, not the value.

As I said, both point of views are possible. However, your position seems to
be:

value = Infoset of all child elements *plus* the optional xml:lang attribute

How do you put the value of xml:lang into the serialization of the element's
contents? Sure, that's again an implementation issue, but including the
element itself certainly makes it easier.

> My point is that it is more difficult for server implementors if
> you want to
> state that the attributes on the name element are part of the property
> value, and (thus) need to be stored.

While my point is that it makes absolutely no difference at all :-)

Maybe we need to collect all issues regarding this topic before going back
to this one. For instance, if somebody would want to store an XSLT or an XSD
schema as a property value, he probably would expect that namespace prefix
information is preserved as well...

Julian



