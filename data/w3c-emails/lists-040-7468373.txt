docno="lists-040-7468373"
received="Sat May  5 11:24:42 2001"
isoreceived="20010505152442"
sent="Sat, 5 May 2001 11:24:01 -0400"
isosent="20010505152401"
name="Kevin Dyer"
email="kevin.dyer@matrixone.com"
subject="RE: Issue: ALLPROP_AND_COMPUTED"
id="NEBBKLMONKKHDPLAGAGMOEDJDBAA.kevin.dyer@matrixone.com"
charset="iso-8859-1"
inreplyto="HPELJFCBPHIPBEJDHKGKMEGNCEAA.lisa&#64;xythos.com"
expires="-1"

To:"Lisa Dusseault"<lisa@xythos.com>,"Dan Brotsky"<dbrotsky@Adobe.COM>,<w3c-dist-auth@w3.org>


I think everyone on this thread is in agreement.  I would like to offer a
different POV for Lisa's first scenario:

> 1.  The only working scenario I know of that requires discovery of unknown
> properties is the "explore information about this resource" functionality.
> E.g. one could imagine using Windows Explorer to right-click on a resource
> on a WebDAV server, choose "Properties", then choose the "custom" tag, and
> it might want to display even unknown property names there at the user
> request.  But I can't see that happening for multiple resources at once.
> For a single resource, obviously it doesn't require  doing a union.
> 
> Also note that this scenario may not require getting the values of all the
> properties -- the display would be simplest if it displayed only the names
> of properties, since some properties have long complex XML values, and then
> let the user select interesting properties to display the value.

If one solely thinks about a "WebDAV" client as something like a Windows
Explorer then you're correct.  

But think about the marriage of Collaborative Product Commerce tools ( or PDM ) 
with WebDAV.  Folders and files are nodes in a hierarchical network that have 
complex relationships.  The client is now requesting how to navigate the 
relationships between nodes.  The complex XML values provide the additional 
attributes, alternate or substitute components, and possible T&Cs for digital 
rights to access files or the next node.  Depending on what nodes are returned 
to an initial query the client may have to perform a significant amount of 
ancillary requesting to meet the minimum display requirements.

The server-side of this configuration must walk the thin-line between two extremes
of the WebDAV world.  It must still serve the requests of the minimilist clients 
so that a Windows Explorer or Office integration will still be able to find, display, 
author files and yet service the requests of the more challenging clients.

Just a different point of view,

Kevin  



