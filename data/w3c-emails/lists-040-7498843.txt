docno="lists-040-7498843"
received="Sun May  6 09:09:57 2001"
isoreceived="20010506130957"
sent="Sun, 6 May 2001 09:05:22 -0400"
isosent="20010506130522"
name="Jim Amsden"
email="jamsden@us.ibm.com"
subject="replicating properties"
id="OF54639DE2.304FDCD7-ON85256A44.004753B0@raleigh.ibm.com"
charset="us-ascii"
expires="-1"

To:w3c-dist-auth@w3c.org


Lisa says:

With all these considerations, I do not think replication of properties is
decently possible in RFC2518 without writing serious server and client
protocol extensions.  If these server and client protocol extensions are
being done in order to do replication properly, then surely they will
design
something better than allprop anyway.


DAV4J implements copy across servers by GET/PUT, PROPFIND/PROPPATCH. This
seems like simple symmetry that the protocol should support. DAV4J does the
properties by trying the PROPPATCH, getting the errors back, and filtering
out the ones that didn't make it because they were live on the destination
server. That is, simulating keepalive behavior. Live properties on the
source server may be converted to dead properties on the destination. This
seemed sensible enough in situations where servers support different live
properties. The only thing that would make this simpler is if PROPPATCH
supported keepalive like copy. This would eliminate the need to simulate it
by the multiple round trips currently being made to copy the properties. I
had proposed such an extension to PROPPATCH a while back.



