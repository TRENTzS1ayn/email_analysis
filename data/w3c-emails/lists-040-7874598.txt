docno="lists-040-7874598"
received="Fri May 25 13:47:35 2001"
isoreceived="20010525174735"
sent="Fri, 25 May 2001 10:45:34 -0700"
isosent="20010525174534"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="Re: Why not an encapsulation for DAV over standard HTTP 1.0 or 1.1  without required server extension ?"
id="AMEPKEBLDJJCCDEJHAMIEECICPAA.ejw@cse.ucsc.edu"
charset="us-ascii"
inreplyto="Why not an encapsulation for DAV over standard HTTP 1.0 or 1.1  without required server extension ?"
expires="-1"

To:"WebDAV WG"<w3c-dist-auth@w3.org>


Accidentally caught by the spam filter. I've added
mikhailfranco@netscape.net to the accept2 list.

- Jim

-----Original Message-----
From: mikhailfranco@netscape.net [mailto:mikhailfranco@netscape.net]
Sent: Friday, May 25, 2001 10:21 AM
To: lmnet@attglobal.net
Cc: w3c-dist-auth@w3.org
Subject: [Moderator Action] Re: Why not an encapsulation for DAV over
standard HTTP 1.0 or 1.1 without required server extension ?



Larry Masinter wrote:
>
> The decision to use separate methods instead of just POST (which
> I think was the original question) was arrived at after a lengthy
> discussion; the first record I can find is from October 1996:
>
http://lists.w3.org/Archives/Public/w3c-dist-auth/1996OctDec/subject.html#25
>
> Note that SOAP takes a different view; it only uses POST. I don't
> think the considerations have changed substantially, except perhaps
> that we're talking about using other headers and/or message body
> elements rather than content-type to do method dispatching.

WebDAV is ugly precisely because the HTTP and XML are horribly entangled.
It's defined as a protocol, but the stack is not layered.
It really implies a data model, yet that data model is not rigourously
defined.
It has taken 5+ years to define, standardize, and implement.

In those 5 years the world has changed.

SOAP evolved from XML-RPC, which was largely invented to perform site
and content management at Userland, so the original domain and requirements
are similar to WebDAV. In much less than those 5 years, SOAP has evolved
from XML-RPC, been adopted by major corporations (Microsoft, IBM, etc.),
is reasonaly standardized and on its way through the W3C,
become the basis of all web services architectures,
acquired a complete layered stack (including WSDL and UDDI),
and is likely to be the basis of all future web-delivered functionality !

In the history of computing, it has often been the case that a
general purpose solution, bound to a specific application domain,
has delivered a more versatile, powerful, and ultimately longer-lived
solution, than a bespoke specialized language or protocol.
There are some high-value exceptions, like Verilog and VHDL,
but flexibility usually wins in a Darwinian world requiring constant
incremental adaptation.

SOAP-based web service architectures rely on a design-driven process
of data modelling/schemas, selecting an interface to publish,
followed by auto-generation of components for service discovery,
messaging, data (un)marshalling, method dispatching and invocation.

If WebDAV had a data model, it would be an almost trivial task to
create a web interface definition, auto-generate the communication
components and publish it as an web service !

Who can doubt that if WebDAV was starting today,
it would be defined as a SOAP-based service ?

Mikhail

__________________________________________________________________
Get your own FREE, personal Netscape Webmail account today at
http://webmail.netscape.com/



