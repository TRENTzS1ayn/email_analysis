docno="lists-040-7931978"
received="Fri May 25 18:24:46 2001"
isoreceived="20010525222446"
sent="Fri, 25 May 2001 15:22:43 -0700"
isosent="20010525222243"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="RDF and DAV properties"
id="AMEPKEBLDJJCCDEJHAMIIEDACPAA.ejw@cse.ucsc.edu"
charset="us-ascii"
inreplyto="Pine.GSO.4.21.0105252238470.7596-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"

To:"Dan Brickley"<Daniel.Brickley@bristol.ac.uk>
Cc:"WebDAV WG"<w3c-dist-auth@w3.org>



> How
> about we revisit the old "how do WebDAV and RDF work together" faq?

Sure.

One area of overlap is use of WebDAV Properties to store Dublin Core
metadata.  I went to the Dublin Core site this morning to try and determine
the current status of the RDF representation of Dublin Core, and wasn't able
to find a document describing a standard representation of DC in RDF.  Does
such a document exist?  I found one working document
<http://www.ukoln.ac.uk/metadata/resources/dc/datamodel/WD-dc-rdf/> -- can I
do anything to help get that moved along (review a document, write an email,
etc.)?

Beyond that, it seems to me that use of RDF in DAV properties requires
providing some guidance on packaging issues. Some issues include:

* If I have a chunk of RDF, should I store it in one property, or in
multiple properties? What are the tradeoffs?
* How would XML-RPC via the DASL SEARCH method interact with RDF in DAV
properties?
* When should a chunk of RDF be its own resource, and when should it be
stored as properties?

> As a minimum, I'd like to try to get a student project
> or two looking at building some prototypes. What do you reckon?

Sure, this could be interesting.  Many of the relationships between
resources in DeltaV could be represented, in an implementation, using RDF.
It would be interesting to see if an apps. framework like Redland could be
used as an implementation engine for a DeltaV server.

- Jim



