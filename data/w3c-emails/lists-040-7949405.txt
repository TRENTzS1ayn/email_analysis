docno="lists-040-7949405"
received="Fri May 25 20:31:30 2001"
isoreceived="20010526003130"
sent="Sat, 26 May 2001 01:29:28 +0100 (BST)"
isosent="20010526002928"
name="Dan Brickley"
email="Daniel.Brickley@bristol.ac.uk"
subject="Re: RDF and DAV properties"
id="Pine.GSO.4.21.0105260054460.10577-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="AMEPKEBLDJJCCDEJHAMIIEDACPAA.ejw&#64;cse.ucsc.edu"
expires="-1"

To: Jim Whitehead<ejw@cse.ucsc.edu>
cc: Dan Brickley<Daniel.Brickley@bristol.ac.uk>, WebDAV WG<w3c-dist-auth@w3.org>


On Fri, 25 May 2001, Jim Whitehead wrote:

> 
> > How
> > about we revisit the old "how do WebDAV and RDF work together" faq?
> 
> Sure.
> 
> One area of overlap is use of WebDAV Properties to store Dublin Core
> metadata.  I went to the Dublin Core site this morning to try and determine
> the current status of the RDF representation of Dublin Core, and wasn't able
> to find a document describing a standard representation of DC in RDF.  Does
> such a document exist?  I found one working document
> <http://www.ukoln.ac.uk/metadata/resources/dc/datamodel/WD-dc-rdf/> -- can I
> do anything to help get that moved along (review a document, write an email,
> etc.)?

Nudging my conscience in this fashion is as good a mechanism as any :)

The DC/RDF work did indeed languish for a while. Recently we've been
getting this back on track, with a new draft that makes better use of
RDF's in-built facilties. The Website (particularly the dc-architecture
pages, my responsibility) doesn't do the job it should in reflecting our
current thinking. 

Anyhow, the current draft is looking good, imho. I've recently started a
push for implementation testing, and would be glad to involve WebDAV
folks in the review process. It's hard to know what would count as
success/exit criteria, so feedback from this WG would be valued. See my
msg from Weds for link to the latest draft. I intend to rectify the
dc-architecture Web page situation asap.

http://www.jiscmail.ac.uk/cgi-bin/wa.exe?A2=ind0105&L=dc-architecture&F=&S=&P=1852
(hmm... .exe in a url, classy...)

> 
> Beyond that, it seems to me that use of RDF in DAV properties requires
> providing some guidance on packaging issues. Some issues include:
> 
> * If I have a chunk of RDF, should I store it in one property, or in
> multiple properties? What are the tradeoffs?

Yes, that's the trouble with big squiggly graph structures; they're
great on the data-merging front, but when it comes to partitioning the
graph into bite-sized chunks, the chunking strategy often seems somewhat
arbitrary. I doubt we'll come up with one crisp answer that works for
everyone. In the simple unqualified DC front, there's often a mapping
onto single properties. For such purposes, my colleague Dave Beckett has
worked on a simple DC-in-XML format that parses as XML, yet has a more
predictable syntactic representation than arbitrary XML. This might
prove of interest in the WebDAV world...

http://dublincore.org/documents/dcmes-xml/

> * How would XML-RPC via the DASL SEARCH method interact with RDF in DAV
> properties?

I've not followed any discussion about XML-RPC-meets-DASL, though the
idea (or with SOAP) sounds plausible. In RDF-land, we're starting to
think about ways in which RDF query might have commonalities with XML
Query, despite the difference in data models, database structure, query
optimisations etc. I need to learn more about DASL before attempting to
have a sensible answer on this.

> * When should a chunk of RDF be its own resource, and when should it be
> stored as properties?

Related to the one-property vs many properties issue. One might ask the
same question for XML docs on a webserver. Again, I don't know how we'd
tell a good answer from a bad one. Pre RDF-meets-WebDAV, RDF docs are
just new resources. If we could show some way of projecting them into
the WebDAV attribute/value model, then the stored as properties approach
(perhaps lossily, eg. just extracting DC) might make sense too.

> > As a minimum, I'd like to try to get a student project
> > or two looking at building some prototypes. What do you reckon?
> 
> Sure, this could be interesting.  Many of the relationships between
> resources in DeltaV could be represented, in an implementation, using RDF.
> It would be interesting to see if an apps. framework like Redland could be
> used as an implementation engine for a DeltaV server.

Cool! I'd like to see that attempted...

Is there any test data we could play with? One problem we've had
previously is little flurries of interest in this topic, with little
follow through (we're all busy...). Getting the problem described
adequately might be a step towards enticing someone to have a serious
crack at solving it.

I have a personal interest in document versioning, and the
representation of workflow and transformation metadata as events,
descriptions, with agent, date, time etc associated with those
events. But not enough time to play with implementations :( It'd be
really nice to have some Delta-V data for RDFists to take a look at though...

Dan



