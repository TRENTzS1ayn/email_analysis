docno="lists-040-8713542"
received="Thu Jun 21 02:19:42 2001"
isoreceived="20010621061942"
sent="Thu, 21 Jun 2001 02:18:26 -0400"
isosent="20010621061826"
name="Jason Crawford"
email="ccjason@us.ibm.com"
subject="Re: Is this LOCK model correct?"
id="OF598C54EF.FCB6D0D9-ON85256A72.00205D1E@pok.ibm.com"
charset="us-ascii"
inreplyto="Is this LOCK model correct?"
expires="-1"

To: Alan Kent<ajk@mds.rmit.edu.au>
Cc:w3c-dist-auth@w3.org




<<
I am trying to work out if you do a LOCK with depth infinity, what is
actually locked. Are the resources locked, or the URI's to the resources?
My reading of various documents (including BIND stuff) indicates resources
are locked, not URIs. However, the concept of LOCK with depth infinity is
URI based.  Moving a resource from under one infinity lock to under another
does change the locks. But what if there is still a binding under the old
tree to the resource, does it maintain its old lock? My guess is yes.
>>
Yes, and if those locks conflict then the MOVE request must be rejected.

...

<<
In my understanding, locks are not really associated directly with
resources because moving things to different URIs does not keep the
lock. So the lock is not independent of the URI - hence locks are
really best thought of as attached to URIs. Resources are locked
if any of the URIs to the resource is locked.
>>
Sounds right.  I believe what you've described is the best model for locks.

URI/binding protection works with this model also.

J.



