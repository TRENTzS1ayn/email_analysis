docno="lists-040-8858023"
received="Thu Jun 21 20:55:22 2001"
isoreceived="20010622005522"
sent="Thu, 21 Jun 2001 17:53:04 -0700"
isosent="20010622005304"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="RE: Can you BIND lock-null resources?"
id="AMEPKEBLDJJCCDEJHAMIOEBLDBAA.ejw@cse.ucsc.edu"
charset="US-ASCII"
inreplyto="20010622102922.B14654&#64;io.mds.rmit.edu.au"
expires="-1"

To:"WebDAV"<w3c-dist-auth@w3.org>


> Is it expected that you should be able to BIND a lock-null resource?

Interesting question. Since it is a resource, it makes sense that you can
bind to it. So I'd say, yes. But, I'd understand if servers decided to fail
such a request.

> I am in the process of trying to come up with a software design for
> the programmers here to implement WebDAV (first) and then DeltaV (later).
> We want to build a fairly generic lump of code to do all the protocol
> messing around with a fairly clean and simplified to the underlying
> 'file system of resources'.
>
> So far I have put the LOCK mechanisms into the WebDAV library layer
> (because they are based on URIs). I am also trying to keep the
> 'lock-null' resource concept in the WebDAV layer since they are
> tightly related to locks. My current proposal is to keep track
> of lock-null resources with properties that have been set and then
> copy those properties over to the real resource when it is created
> later (if I have understood things correctly).
>
> I realise BIND is not in the base WebDAV spec, but I want to keep
> what is done future proof.
>
> There are two variations of questions I guess I have.
>
> (1) Does the spec prohibit BIND-ing to a lock-null resource?
>     (OK, I am being lazy and have not reread the spec again to
>     verify this question - but the next question is the real question)

I just gave it a quick look, and it seems like the BIND protocol
specification does not mention lock null resources.

> (2) Regardless of the spec, do people think its acceptable to fail
>     BIND requests to a lock-null resource with an error? (Is there
>     any reason why someone would want to do it before doing a PUT
>     or MKCOL etc?)

I think this is fine.

- Jim



