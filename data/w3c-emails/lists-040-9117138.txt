docno="lists-040-9117138"
received="Tue Jun 26 21:31:13 2001"
isoreceived="20010627013113"
sent="Tue, 26 Jun 2001 21:37:39 -0400"
isosent="20010627013739"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Are you using lock discovery?"
id="3906C56A7BD1F54593344C05BD1374B10377064A@SUS-MA1IT01"
inreplyto="Are you using lock discovery?"
expires="-1"


To: WebDAV WG<w3c-dist-auth@w3.org>

I hope by "grabbing the lock token", you meant unlocking the resource
and asking for a new lock (and then, only after warning the user about
the risk of overwriting the value from another editor session that they
forgot about).  This at least gives you some protection from forgetting
about another session you had open (an attempt to update from that
earlier session will then fail because the lock token is no longer valid).

Cheers,
Geoff


-----Original Message-----
From: Jim Whitehead [mailto:ejw@cse.ucsc.edu]
Sent: Tuesday, June 26, 2001 7:23 PM
To: Jason Crawford
Cc: WebDAV WG; Joachim Feise
Subject: RE: Are you using lock discovery?


> <<
> As I recall, the DAV Explorer client
> <http://www.ics.uci.edu/~webdav/> uses
> lock discovery. I believe it's smart enough to do lock discovery if a
> resource is locked, and DAV Explorer doesn't have the lock token. It then
> tries the lock token on the off chance the requesting principal actually
> owns the lock.
> >>
> The spec deprecates that kind of client behavior for the reason that two
> programs that don't know about each other might be logged on as the same
> person, right?

Not really -- an authoring program will at least know that it had to do lock
discovery to grab the lock token, and presumably would then query the user
for whether they want to grab the lock.

In the case of DAV Explorer, we felt that a user might want to undo a lock
taken out by themselves using another program as a way of either testing the
protocol (and applications), or undoing a lock after an app. had crashed.

- Jim



