docno="lists-040-9189180"
received="Wed Jun 27 15:31:21 2001"
isoreceived="20010627193121"
sent="Wed, 27 Jun 2001 15:27:23 -0400"
isosent="20010627192723"
name="Jason Crawford"
email="ccjason@us.ibm.com"
subject="RE: lock-discovery property without a lock-token"
id="OF1ABC446E.33BAFA43-ON85256A78.0066A860@pok.ibm.com"
charset="us-ascii"
inreplyto="lock-discovery property without a lock-token"
expires="-1"

To:"Jim Whitehead"<ejw@cse.ucsc.edu>
Cc:"WebDAV WG"<w3c-dist-auth@w3.org>





<<
It seems to me the root issue here is how much you trust users to remove
their own locks.
>>
I agree it's trust... users and client tools... be it to remove or replace
or reuse.

<<
 Since we felt our user
base would be fairly sophisticated, we were comfortable giving them the
ability to grab locks that they took out using another program (and no, I
don't think DAV Explorer prompts the user about this).
>>
As an exploration tool I'd guess it probably should be able to do
*anything*.  :-)  But of course I'd think it should ask the user before it
takes discretionary action.  Knowing something was locked with a lock that
you didn't have seems like an important part of exploring.   So does
controling what's done...

   (Cancel) (Reuse lock)  (Replace lock)


<<
  This makes it a
handy protocol exploration tool. If you want to know exactly how tool X
performs when a lock is yanked out from under it, you can use DAV Explorer
to unlock the resource.
>>
Understood.

<<
For more mainstream *authoring* tools, I agree completely that, if the user
is granted the ability to grab a lock, they should be shown a dialog box
about the event.  As for tools like Goliath that give a filesystem-like
view, I think a good case can be made either way (prompting or no
prompting). Perhaps it should be configurable, or the dialog should have an
option to not be displayed in the future.
>>
I guess configurable is okay... but it probably should not be made easy for
an ordinary user to avoid being prompted.

It doesn't sound like Merlin's customers would be using DAVExplorer in the
exploratory way that DAVExplorer was intended to be used.  It sounds like
DAVExplorer could get them in trouble.

J.



