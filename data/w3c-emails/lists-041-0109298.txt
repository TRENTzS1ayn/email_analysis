docno="lists-041-0109298"
received="Wed Nov 21 14:09:04 2001"
isoreceived="20011121190904"
sent="Wed, 21 Nov 2001 14:08:18 -0500"
isosent="20011121190818"
name="Matt Timmermans"
email="mtimmerm@opentext.com"
subject="RE: content type for WebDAV request/response bodies, was: [ACL] Access Control Protocol -07 submitted"
id="001201c172bf$e23070f0$d482a8c0@mt2k"
charset="iso-8859-1"
inreplyto="JIEGINCHMLABHJBIGKBCKEDFDIAA.julian.reschke&#64;gmx.de"
expires="-1"

To:"'Julian Reschke'"<julian.reschke@gmx.de>,"'Lisa Dusseault'"<lisa@xythos.com>,"'WebDAV'"<w3c-dist-auth@w3.org>


> -----Original Message-----
> From: Julian Reschke [mailto:julian.reschke@gmx.de]
>
> But "http://a.b.c/d#e#foo" isn't a valid URI (reference), right?

It is if you uri-escape the added '#' to get http:/a.b.c/d#e%23foo

I wasn't as detailed as I could have been about the algorithm, because these
particular details aren't important.  There are any number of injective
encodings you might devise.

The important part is the decision about whether to add '#' or to just
concatenate.  Most people have started making sure that their namespaces end
in ':' or '/', depending on whether they use URNs or URLs.  This is
especially true for WebDAV developers who might think about a property's
URI, and don't want the local name to merge with a final path segment.

This URI encoding scheme preserves element identity in accordance with
XMLNS, while maintaining backward compatability for these existing systems.
Microsoft is the only implementor I know of that makes extensive use of
property URIs (I think they use them a lot in their DASL implementation).
It's just one implementor, but it's an important one, and they already have
an encoding scheme for property URIs that makes some sense.

If we must have an encoding scheme for property URIs, and I think we must,
then it would help interoperability to conform to Microsoft's wherever
possible.



