docno="lists-041-10065196"
received="Wed Sep  4 20:16:19 2002"
isoreceived="20020905001619"
sent="Thu, 5 Sep 2002 10:16:00 +1000"
isosent="20020905001600"
name="Michael Leditschke"
email="mike@ammd.com.au"
subject="RE: What is left after LOCK/UNLOCK on null resource?"
id="LOBBICBLDJIJHPNJFPOLAEDJCMAA.mike@ammd.com.au"
charset="iso-8859-1"
inreplyto="3906C56A7BD1F54593344C05BD1374B10808D725&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>,<w3c-dist-auth@w3.org>



> It is very reasonable/sensible behavior for a client to
> refuse to unlock a resource if it wasn't the process that
> took out the lock.  A client should never unlock such
> a resource without getting explicit confirmation from the
> user to do so, but a client can reasonably refuse to give
> the user that choice, because a user is often not in a
> position to make the right choice (i.e. forgets or is not
> aware that something else being done on their behalf requires
> that resource to be locked).
> 
> 

I guess it depends on your definition of process. DAV locks are
supposed to be capable of being held for an extended time. I might 
want to lock a resource, edit it for a while locally, then push the
result back and unlock it again. Are you suggesting this all has
to be done by the same OS process? What happens if the power goes
out and my PC reboots? Or perhaps you expect the client to cache
locktokens?

In my case, it is the same client I'm using to lock and unlock and
I'm presenting the same credentials to the server. Its a low
level test program, so I would have thought being able to unlock
a resource of which I am the owner would be reasonable.

Regards
Michael



