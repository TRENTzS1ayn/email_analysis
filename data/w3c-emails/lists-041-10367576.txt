docno="lists-041-10367576"
received="Mon Sep  9 10:06:23 2002"
isoreceived="20020909140623"
sent="Mon, 9 Sep 2002 16:06:16 +0200 "
isosent="20020909140616"
name="Pill, Juergen"
email="Juergen.Pill@softwareag.com"
subject="RE: Proposal: WebDAV and transactions"
id="DFF2AC9E3583D511A21F0008C7E62106031F2B35@daemsg02.software-ag.de"
charset="iso-8859-1"
inreplyto="Proposal: WebDAV and transactions"
expires="-1"


To:"'Babich, Alan'"<ABabich@filenet.com>,w3c-dist-auth@w3.org


Hello Alan,

You put it to the point.

From the protocol point of view, there may be only minor needs to have TA
functions. A user issues a request, gets an answer and the server is clean
again. This is a (server wise) very lean approach.

From an API layer, there are many scenarios an application wants to block
some commands within a TA. Unfortunately an API can not simulate TA behavior
without help (TA support) from the server. This was the intention of the
mail. Batch operations would not help an API, if the API wants to perform
different operations depending on the succors response code or body.

Having TA spreading several servers is far more complicated (here a 2 phase
commit protocol would be needed), this was not intended by the current TA
approach. I think this is something, as you pointed out, for  "someday".

The TA approach would be an extension, some servers would support it (they
have to deal with TA state) some would not. If a client does not request
Tas, or a server does not support TA, the behavior and performance would be
identical to today's situation. If a client/API would require and request
TAs, the server has to deal with more (space and logic) overheads.

Best regards,

Juergen


 -----Original Message-----
From: Babich, Alan [mailto:ABabich@filenet.com] 
Sent:Monday, September 02, 2002 22.59 PM
To:'B. Shadgar'; Pill, Juergen; w3c-dist-auth@w3.org
Subject:RE: Proposal: WebDAV and transactions

One thing you do NOT want under any circumstances are 
begin-transaction, end-transaction, and abort-transaction 
methods. That approach simply does not scale beyond a single
user, and is a performance disaster.

You absolutely need to stick to single method calls that can 
Perform Multiple operations on the server in a single 
Transaction. Batching up operations is a valid approach.

Transactions aren't that easy to deal with. That becomes
Even more true when multiple servers are involved. Someday,
WebDAV might get that far.

Transactions aren't new. They're decades old. The effort would
Profit from the decades of thought that has gone before.
For example, see the DMA standard for one approach. (But
remember: DMA specifies an API, not a protocol, and WebDAV is a 
protocol.)

Dr. Alan F. Babich



