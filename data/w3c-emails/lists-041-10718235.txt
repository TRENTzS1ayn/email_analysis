docno="lists-041-10718235"
received="Wed Sep 11 12:22:15 2002"
isoreceived="20020911162215"
sent="Wed, 11 Sep 2002 18:22:03 +0200"
isosent="20020911162203"
name="Roy T. Fielding"
email="fielding@apache.org"
subject="Re: Proposal: WebDAV and transactions"
id="9B958940-C5A2-11D6-8502-000393753936@apache.org"
charset="US-ASCII"
inreplyto="3D7F399A.26D38B7E&#64;cs.bris.ac.uk"
expires="-1"

Cc:w3c-dist-auth@w3.org
To:"B. Shadgar"<shadgar@cs.bris.ac.uk>



I'll try to explain.  It is fundamental to HTTP that intermediaries
are able to inspect the method of an HTTP request in order to determine
the semantics of a request, and thereby its associated access control
and/or authentication requirements.  What you are suggesting is that
we bypass that feature in HTTP via a new syntax that tunnels arbitrary
methods within XML via HTTP, effectively bypassing all of the benefits
of using HTTP in the first place.

Sound familiar? It should, since this is the same objection that I have
frequently given to the use of SOAP for tunneling arbitrary semantics
though an HTTP POST method.

Transactions can be accomplished by using a request to ask the server
for a transaction context, possibly multi-level, and then sending
the sequence of requests with a calculated transaction-request-id
in the header fields, to each the server responds with 202 Accepted
or an error, and finalized with a commit or abort method, to which
the server responds with the appropriate message for the entire
commit.  Such a transaction mechanism accomplishes the same thing
without violating the requirements of HTTP.

In any case, this is OUT OF SCOPE for WebDAV.  It is an HTTP issue
that is not specific to authoring and will not be solved by an
authoring-specific solution.

....Roy



