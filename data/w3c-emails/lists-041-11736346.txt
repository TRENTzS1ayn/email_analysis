docno="lists-041-11736346"
received="Wed Sep 18 04:32:51 2002"
isoreceived="20020918083251"
sent="Wed, 18 Sep 2002 10:32:38 +0200"
isosent="20020918083238"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="Re: Interop issue: how can clients force authentication?"
id="308FC293-CAE1-11D6-9F78-00039384827E@greenbytes.de"
charset="US-ASCII"
inreplyto="00d801c25eb8$97ee85a0$b701a8c0&#64;xythoslap"
expires="-1"

Cc:"'Ilya Kirnos'"<ilya.kirnos@oracle.com>,"'Julian Reschke'"<julian.reschke@gmx.de>,"'Webdav WG'"<w3c-dist-auth@w3c.org>
To:"Lisa Dusseault"<lisa@xythos.com>




Am Mittwoch den, 18. September 2002, um 04:10, schrieb Lisa Dusseault:

> [...]
> Can anybody come up with other clever ways for the client to try to
> authenticate?  E.g. is it possible for a client to send a reasonable
> Digest authentication header with its first request (probably a
> PROPFIND, but whatever method happens to be first), and if the
> information therein (e.g. realm) is bad, the server responds with the
> WWW-Authenticate header with the correct prompting?  That doesn't quite
> solve Ilya's performance problem, but perhaps the HTTP 1.1. Continue
> mechanism would solve that specific issue.

As someone on the list already pointed out, the client cannot
guess a valid Digest Authentication header. It's one main strength
of digest authentication that the client is not able to do this.
Otherwise an attacker might be able to use a replay attack.

I'm not sure however what a server will do upon seeing a nonsense
Authenticate header from the client. Will it always send a challenge
back? (Unfortunately we cannot make this a requirement in WebDAV
since this belongs in another RFC).

//Stefan



