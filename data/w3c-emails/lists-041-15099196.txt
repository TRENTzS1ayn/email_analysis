docno="lists-041-15099196"
received="Wed Oct 30 17:49:59 2002"
isoreceived="20021030224959"
sent="Wed, 30 Oct 2002 14:49:26 -0800"
isosent="20021030224926"
name="Elias Sinderson"
email="elias@cse.ucsc.edu"
subject="Re: BIND vs. non-movable resources in RFC3253"
id="3DC061F6.5070106@cse.ucsc.edu"
charset="us-ascii"
inreplyto="E4F2D33B98DF7E4880884B9F0E6FDEE25ED4F8&#64;SUS-MA1IT01"
expires="-1"


To:"Clemm, Geoff"<gclemm@rational.com>
CC:"'w3c-dist-auth@w3.org'"<w3c-dist-auth@w3.org>

Clemm, Geoff wrote:

> [...] how does requiring that cyclic relationships be modeled
> by properties instead of collection membership solve
> anything, other than pushing the burden of cycle detection
> onto the client instead of the server?
>
Recursive operations such as a depth infinity MOVE/COPY/PROPFIND will 
have problems if there is a cycle. I see two possible alternatives to 
address this problem:
a) model cyclic relationships as properties or
b) disallow following links during recursive operations in the same way 
that a filesystem does.

> [...] And even if one believes that modeling cyclic relationships
> should be done with properties, in a versioned collection
> context, there is no way to avoid the cyclic binding problem.  [...]
>
I have no problem with the creation of cyclic bindings. My primary 
concern is that the server should not be required to detect the 
existence of a cycle. Since there is no way to avoid the creation of 
cyclic bindings in a versioned collection context, option (a) won't buy 
us anything, so option (b) seems to be the only alternative. Is it 
reasonable to specify that recursive operations treat bindings 
differently than other resources?


Elias



