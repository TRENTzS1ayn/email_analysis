docno="lists-041-15178520"
received="Fri Nov  1 13:18:36 2002"
isoreceived="20021101181836"
sent="Fri, 01 Nov 2002 19:18:59 +0100"
isosent="20021101181859"
name="Edgar Schwarz"
email="edgar@edgarschwarz.de"
subject="Destroying diamonds"
id="3DC2C593.5020201@edgarschwarz.de"
charset="us-ascii"
inreplyto="3DC2C4C4.7000002&#64;edgarschwarz.de"
expires="-1"


To:w3c-dist-auth@w3.org
CC: Edgar Schwarz<edgar@edgarschwarz.de>


> From: Clemm, Geoff
> > From: Clemm, Geoff
> > A COPY would have to check for any
> > resource that has multiple entries in its DAV:parent-set, to see
> > if it has already been copied (in which case a second binding to
> > the copy is created).
> This COPY behaviour makes sense, but can we really require it?
> Right now it seems completely legal to just create multiple plain
> new resources with same content and dead properties...
>If the binding relationships are acyclic, creating multiple
>plain new resources with the same content and dead properties
>seems reasonable to me (i.e. I don't think the spec should
>forbid it), but this would be a somewhat expensive approach if
>there are cycles (:-).
The server can't avoid to track his inodes on a deep COPY to be
aware of cycles. So it also can easily find diamonds which will
exist for a reason I guess.
I think it's dangerous to destroy these diamonds by duplicating
resources.
Usecases which depend on the diamonds will break. So at least a
means to keep them should be provided.
Therefore IMHO disallowing duplication is the clean and
also spacesaving solution.

Cheers, Edgar



