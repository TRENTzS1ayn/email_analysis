docno="lists-041-15794520"
received="Thu Nov 28 15:39:14 2002"
isoreceived="20021128203914"
sent="Thu, 28 Nov 2002 21:38:34 +0100"
isosent="20021128203834"
name="Julian Reschke"
email="julian.reschke@gmx.de"
subject="RE: RFC2518 bis, attributes on property names &ndash;&ndash; in or out?"
id="JIEGINCHMLABHJBIGKBCMEEFFOAA.julian.reschke@gmx.de"
charset="Windows-1252"
inreplyto="RFC2518 bis, attributes on property names &ndash;&ndash; in or out?"
expires="-1"

To:"Joel Soderberg"<joels@exchange.microsoft.com>
Cc:"Webdav WG"<nnw3c-dist-auth___at___w3c.org@smallcue.com>



> From: w3c-dist-auth-request@w3.org [mailto:w3c-dist-auth-request@w3.org]On
> Behalf Of Joel Soderberg
> Sent: Thursday, November 28, 2002 8:55 PM
> To: Jason Crawford; Julian Reschke
> Cc: Lisa Dusseault; Webdav WG
> Subject: RE: RFC2518 bis, attributes on property names -- in or out?
>
>
> Preserving namespaces is almost a given (I would be surprised if that was
> not already being done by most implementations).  However, I don't believe

If you're referring to namespaces of property names -- sure. A property is
identified by an XML name, and if an implementation looses half of it (the
namespace), it's simply broken.

> that the namespace aliasing must be preserved.  When returning the value,
> different aliases may be used.

Yes, for the property name itself. But not for any child elements contained
inside the property. And probably undecided for attributes on the property
element itself.

> This has no bearing, though, on random attributes (metadata) on the
property
> name.  If you force persistance of these items, that means that  you
dictate
> a storage format that is XML.  WebDAV should not be in the business of
> dictating formats.

I don't understand these statements. The format for WebDAV property values
*is* XML. So if you can't persist a dead property with nested child elements
(and attributes on those for that matter), you're not compliant to RFC2518.
The *only* controversial thing here is whether attributes that appear *on*
the property name element itself are part of the value to be persisted.

So you need to be able to persist XML anyway -- how does persisting
attributes on the property itself make things harder?

> If the only reason for asking for persistance is for namespacing,  there
are
> other ways that information can be retained that does not tie the hands of
> the non-XML based property storage.

In general, to be compliant with RFC2518 you can't use an XML-unfriendly
property storage. Whether attributes are in and out seems to be of little
importance here.

I'm happy to discuss this as a new issue (for instance, are servers allowed
to only persist the immediate child text nodes of a property element as a
string?), but this is definitively a new requirement.

Note that both IIS and moddav (the most widely deployed WebDAV servers) *do*
persist XML in property values, so we have proven interoperability in this
point.

Finally (as mentioned many times before), the best way to *precisely* define
these things is to use the terminology from the XML Infoset spec, and the
guidelines from section 2.4 (document subsets) of RFC3076.

Julian

--
<green/>bytes GmbH -- http://www.greenbytes.de -- tel:+492512807760



