docno="lists-041-3771914"
received="Thu Jun 27 17:29:20 2002"
isoreceived="20020627212920"
sent="Thu, 27 Jun 2002 14:22:59 -0700"
isosent="20020627212259"
name="Roy T. Fielding"
email="fielding@apache.org"
subject="Re: Issue: SOURCE_PROPERTY_UNDERSPECIFIED"
id="0E230DA2-8A14-11D6-A329-000393753936@apache.org"
charset="US-ASCII"
inreplyto="JIEGINCHMLABHJBIGKBCMEJCENAA.julian.reschke&#64;gmx.de"
expires="-1"

Cc:"Jason Crawford"<ccjason@us.ibm.com>,"'Webdav WG \(E-mail\)'"<w3c-dist-auth@w3c.org>
To:"Julian Reschke"<julian.reschke@gmx.de>



>>> If the server is capable of handling PUT on a "dynamic content" 
>>> resource,
>>> then it may also support direct editing of the resource. Day Software's
>>> products support that kind of editing, but as far as the client is 
>>> concerned
>>> it is just performing methods on a WebDAV resource. There is no 
>>> difference
>>> between the two EXCEPT that there are some circumstances when the client
>>> needs to be encouraged to go elsewhere (such as when the author wishes 
>>> to
>>> edit a presentation template). The principles are the same. A source
>>> property is merely a mechanism to supply metadata for a relationship
>>> between two or more resources.
>>
>> It's not central to the point of your posting as a whole, but I'll 
>> comment on
>> this part. I think you're suggesting that the source property could 
>> point at
>> the resource itself. I agree in prinical this can be done, but it does 
>> create
>
> I don't think he did.

No, I was not suggesting that a resource would point to itself as a
source -- it already gives that information to the client via the methods
allowed on itself.  What I was suggesting is that there is no such thing
as a resource type.  Resources simply allow or do not allow methods,
and link to or do not link to other sources.   It is a web.  The job of
the client is to let the author know that this web exists when it
encounters a resource with links to sources.

>>>> 4) An author wants to no longer serve dynamic content at a specific 
>>>> URL.
>>>> What URL does the author DELETE?
>>
>>> The URL they want to DELETE, which, depending on the implementation, may
>>> result in a suggestion to the author that they need to DELETE some other
>>> resource instead (or as well).
>>
>> Okay. And what is the mechanism for the server to do the "suggesting"? (I
>> assume it's a mechanism that distinguishs between redirects that require
>> user confirmation and those that don't.)
>
> Good point. Roy, did you have any specific (existing) mechanism in mind?

A redirection.  There is no such thing as a redirected DELETE that doesn't
require user confirmation.  However, if the client accesses a resource
using WebDAV and that resource does not allow DELETE and that resource
does have a source link, then isn't it reasonable for the client to ask
the user if they would really like to delete the source resource instead?
Client implementations can figure that one out for themselves.

....Roy



