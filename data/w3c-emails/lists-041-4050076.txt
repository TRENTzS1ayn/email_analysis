docno="lists-041-4050076"
received="Mon Jan  7 21:30:31 2002"
isoreceived="20020108023031"
sent="Mon, 7 Jan 2002 18:33:16 -0800"
isosent="20020108023316"
name="Greg Stein"
email="gstein@lyra.org"
subject="Re: Interest in standardizing Batch methods?"
id="20020107183316.J6499@lyra.org"
charset="us-ascii"
inreplyto="AMEPKEBLDJJCCDEJHAMIMEPJDOAA.ejw&#64;cse.ucsc.edu"
expires="-1"

To: Jim Whitehead<ejw@cse.ucsc.edu>
Cc: WebDAV<w3c-dist-auth@w3.org>


On Fri, Jan 04, 2002 at 01:11:03PM -0800, Jim Whitehead wrote:
>...
> To address these performance issues, several "Batch" methods were developed
> as relatively simple extensions to existing WebDAV methods. Switching
> Outlook Web Access to use these methods resulted in approximately an order
> of magnitude performance increase (obviously, the performance benefit of
> going from N round-trips to 1 round trip depends on N). From the user
> perspective, the observed elapsed time for executing an operation went from
> multiple seconds down to close to a second (depending on latency, of
> course). It was a signficant performance improvement. The batch methods are:

I wonder whether the performance suffered because the requests were
performed in a request/response fashion, rather than as a series of
pipelined requests. If you can pipeline requests, not waiting for an answer,
then a series of DELETE operations is simply a "larger request" and then you
handle a "larger response". Yes, each request/response has more overhead
than a batched operation.

Personally, I'm going to guess they didn't pipeline requests, so a batch
mechanism was a must to get around deficiencies in their protocol stack.


That said, it is important to recognize the overhead in a sequence of, say,
DELETE requests and their responses, relative to a potential batch
operation. Specifically, you're going to have a lot of duplicate headers on
the requests and responses (there are no bodies in this case). How much does
this pose over a batch delete with a list of URLs? Maybe 3x or 4x in the
number of bytes? Maybe 10x? When you're talking over a modem (which is
typically the case for MSFT's Hotmail servers), then that 10x can be rather
significant.

Ah, it's all a numbers game. Personally, I'm not interested in batch
operations. I would guess that most of their benefit is obviating by
pipelining requests.

Cheers,
-g

ps. yes, this is mostly supposition; I'm not about to sit down and start
measuring byte counts and network traffic; I don't know whether they were or
were not pipelining; but my intuition tells me "no" and that pipelining is
the answer...

-- 
Greg Stein, http://www.lyra.org/



