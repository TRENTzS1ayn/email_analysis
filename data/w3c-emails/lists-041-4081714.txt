docno="lists-041-4081714"
received="Tue Jan  8 09:56:47 2002"
isoreceived="20020108145647"
sent="Tue, 8 Jan 2002 09:56:45 -0500"
isosent="20020108145645"
name="Steve Lomicka"
email="steve.lomicka@maximal.com"
subject="Re: Problems with Intercepting WebDAV with IIS to simulate filesystem with a DB"
id="NDBBIGHAIKGACKJKPKIKGEDECKAA.steve.lomicka@maximal.com"
charset="iso-8859-1"
inreplyto="Problems with Intercepting WebDAV with IIS to simulate filesystem with a DB"
expires="-1"

To:<w3c-dist-auth@w3.org>


At a basic level, I have done something similar to what you are trying to
accomplish.  If I understand you correctly, you are trying to interrogate
HTTP requests as they come into an IIS server using a IIS ISAPI filter.  I
wrote a simple ISAPI filter and implemented SF_NOTIFY_READ_RAW_DATA and
SF_NOTIFY_SEND_RAW_DATA.  I took the raw data, cast it as a string and used
::OutputDebugView to watch the requests.  Since the filter uses
SF_NOTIFY_READ_RAW_DATA and SF_NOTIFY_SEND_RAW_DATA it must be registered as
a global ISAPI filter.  Additionally you must give the directory where the
DLL resides READ & EXECUTE writes through explorer.  Ensure you give these
rights to the IWAM_XXX and I_URS_XXX user or it will not work.  If you want
to debug, you also have to make the filter low protection, which brings it
in process. Hope this helps.

Steve Lomicka
CTO
Maximal Systems, Inc.
727-539-7500 ex760
www.maximal.com



