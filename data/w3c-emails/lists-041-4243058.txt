docno="lists-041-4243058"
received="Wed Jan  9 13:53:33 2002"
isoreceived="20020109185333"
sent="09 Jan 2002 10:52:33 -0800"
isosent="20020109185233"
name="Erik Seaberg"
email="erk@flyingcroc.com"
subject="Re: Interest in standardizing Batch methods?"
id="86ofk39x1q.fsf@unx51.staff.flyingcroc.net"
inreplyto="DFF2AC9E3583D511A21F0008C7E621060147DB2B&#64;daemsg02.software-ag.de"
expires="-1"

To:w3c-dist-auth@w3.org


Juergen Pill <Juergen.Pill@softwareag.com> writes:

> This BATCH method would open the door into a BATCH language, e.g. execute
> request #2 only if request #1 results in a 200/OK response code.

RFC 2616 already has a (non-XML) encoding for a series of requests or
responses, and each request could have an ID that dependent requests
can check the state of:

BATCH * HTTP/1.1
Host: www.example.com
Content-Type: application/http
Transfer-Encoding: chunked

141
MKCOL /foo HTTP/1.1
Host: www.example.com
Request-Id: <cid:mkcol23952639587@client.example.com>
Authorization: Digest response="..."

PUT /foo/bar HTTP/1.1
Host: www.example.com
Content-Type: text/plain
Authorization: Digest response="..."
If: <cid:mkcol23952639587@client.example.com> (["2xx"])

hello world

0

Microsoft's approach of applying a common request to each of several
resources also handles the basic performance problem and is probably
simpler to implement, though moving it from custom bodies up to HTTP
(for example, use "*" as the Request-URI and put a list of resources
in a "Request-URIs:" header) would make it more reusable.



