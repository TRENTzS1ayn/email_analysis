docno="lists-041-4655288"
received="Tue Jan 15 12:24:00 2002"
isoreceived="20020115172400"
sent="Tue, 15 Jan 2002 12:22:57 -0500"
isosent="20020115172257"
name="Clemm, Geoff"
email="gclemm@rational.com"
subject="RE: Interest in standardizing Batch methods?"
id="3906C56A7BD1F54593344C05BD1374B103F8AEA8@SUS-MA1IT01"
inreplyto="Interest in standardizing Batch methods?"
expires="-1"


To: WebDAV<w3c-dist-auth@w3.org>

   From: Lisa Dusseault [mailto:lisa@xythos.com]

   > Personally, I'm going to guess they didn't pipeline requests, so
   > a batch mechanism was a must to get around deficiencies in their
   > protocol stack.

   There's potentially a little more to it than that.
   (1) Imagine a client selects a bunch of resources and drags to move
   them all to a different folder.  A batch MOVE operation can do
   those in one transaction, so that the whole request fails if not
   all can be moved.  This becomes rather more important if the client
   is actually using an API (MSDAIPP??) that offers large-scope
   operations, yet how can it guarantee that operation will work or
   won't work if it can only send it piecemeal to the server?

We should carefully distinguish between BATCH for "pipelining" and
BATCH for "transactions". Every server should be able to support a
pipelined request, but only servers whose repository is inherently
transactioned-based are likely to be able to support transactions.

Note that the Bxxx methods supported by the Microsoft Exchange 2000
server are pipelining batch requests, not transactioning batch
requests.

Cheers,
Geoff



