docno="lists-041-5779805"
received="Wed Feb 20 03:52:39 2002"
isoreceived="20020220085239"
sent="Wed, 20 Feb 2002 09:51:46 +0100"
isosent="20020220085146"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="Re: [dav-dev] Problem with OfficeXP and Accented characters"
id="125AB42B-25DF-11D6-8032-00039384827E@greenbytes.de"
charset="US-ASCII"
inreplyto="20020219185240.W15965&#64;lyra.org"
expires="-1"

Cc: Julian Reschke<julian.reschke@gmx.de>, Peter Gillis<Pgillis@intraspect.com>,dav-dev@lyra.org,w3c-dist-auth@w3.org,I20568n@mindshare.intraspect.com
To: Greg Stein<gstein@lyra.org>



Am Mittwoch den, 20. Februar 2002, um 03:52, schrieb Greg Stein:

> On Wed, Feb 13, 2002 at 09:31:37PM +0100, Julian Reschke wrote:
>> ...
>>> From: dav-dev-admin@lyra.org [mailto:dav-dev-admin@lyra.org]On 
>>> Behalf Of
>>> Peter Gillis
>>> Sent: Wednesday, February 13, 2002 8:46 PM
>> ...
>>> I am having a problem with Microsoft Web Folders after the client 
>>> installs
>>> Office XP on their machine and file names with accented 
>>> characters are
>>> involved.  Our server has been working in the past with earlier
>>> implementations of Web Folders without a problem, however, when 
>>> the client
>>> machine is upgraded to Office XP, a document that was accessible
>>> previously
>>> is now not found.  I have tracked the problem down to the fact 
>>> that Web
>>> Folders is encoding the URI value a second time before sending
>>> the request,
>>> which then causes it not to be found on our server.  For example:
>>>
>>> In the folder listing we send back the following property:
>>>
>>> <href>/dav/webdav/%E8%E2temp%C9.xls</href>
>>
>> Isn't this wrong in the first place? My understanding is that you 
>> should
>> send URL-encoded UTF-8.
>
> Nope.
>
> The filename is in an "original character set". That is then 
> encoded into
> octets for the URL. That transformation is not specified anywhere. 
> Ideally,
> it is "original -> UTF-8", but nobody says it must be. In fact, I 
> would say
> it should match whatever encoding was used for the Request-URI 
> (but that is
> not specified/defined in the request, so you're out of luck again).

I dare to disagree. The URI must be UTF-8 encoded. Otherwise you lose
interoperability. Assume you take 8859-1 in your response document and
apply a stylesheet which outputs UTF-8. XSTL does not know that it
should change the text child nodes of <href> elements.

You already mentioned request-URIs where the encoding is not known.

//Stefan



