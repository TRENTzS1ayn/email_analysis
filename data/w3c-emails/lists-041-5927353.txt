docno="lists-041-5927353"
received="Fri Feb 22 12:20:32 2002"
isoreceived="20020222172032"
sent="Fri, 22 Feb 2002 09:18:59 -0800"
isosent="20020222171859"
name="Jim Whitehead"
email="ejw@cse.ucsc.edu"
subject="Re: Problem with OfficeXP and Accented characters"
id="AMEPKEBLDJJCCDEJHAMIIELLEDAA.ejw@cse.ucsc.edu"
charset="us-ascii"
inreplyto="Problem with OfficeXP and Accented characters"
expires="-1"

To:"WebDAV"<w3c-dist-auth@w3.org>


Accidentally caught by the spam filter.

- Jim

-----Original Message-----
From: tai@pekoe.iij.ad.jp [mailto:tai@pekoe.iij.ad.jp]On Behalf Of
Taisuke Yamada
Sent: Friday, February 22, 2002 3:29 AM
To: dav-dev@lyra.org; w3c-dist-auth@w3.org
Subject: [Moderator Action] Re: Problem with OfficeXP and Accented
characters



> As I see it, this requires a standard character encoding for conversion
> of user input to URIs on the client side, namely UTF-8.

I agree. Both URI and HTTP spec need to update RFC to clarify UTF-8
is the only charset allowed before and after URI-escaping. I think
there's an draft for URI spec clarifying this.

> I've seen Tomcat looking for charset parameters in URIs to detect
> char encoding. I'm not sure if I really understand what they are
> trying to do. It looks like clients could use
>
> GET /test/folder/%d7%c4;charset=ISO-8859-7 HTTP/1.1
>
> in their requests. Does anyone know more about that?

Just FYI, WebDAV client that comes with MacOS X speaks things like

  PROPFIND /?charset=X-MAC-JAPANESE HTTP/1.1

to pass out encoding information. Obviously, this only works with
their own WebDAV service (iDisk).

For now, you can workaround the problem by using mod_encoding
module which does encoding detection/conversion prior to
mod_dav processing. Conversion is done based on useragent/encoding
pair and priority settings in httpd.conf. This will make things
interoperable at least in local environment.

# Please see my other posting for the download URL.

--
Taisuke Yamada <tai@iij.ad.jp>
Internet Initiative Japan Inc., Technical Planning Division



