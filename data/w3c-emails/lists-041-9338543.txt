docno="lists-041-9338543"
received="Mon Jul 29 06:49:56 2002"
isoreceived="20020729104956"
sent="Mon, 29 Jul 2002 12:49:22 +0200"
isosent="20020729104922"
name="Julian Reschke"
email="julian.reschke@gmx.de"
subject="RE: Web Character Model and IRI spec (Re: FW: character encoding.)"
id="JIEGINCHMLABHJBIGKBCAEKCFAAA.julian.reschke@gmx.de"
charset="us-ascii"
inreplyto="000601c23589$1d874070$6ace8642&#64;masinter"
expires="-1"

To:"Larry Masinter"<LMM@acm.org>,<tai@iij.ad.jp>
Cc:"'Webdav WG \(E-mail\)'"<w3c-dist-auth@w3c.org>



> From: w3c-dist-auth-request@w3.org
> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Larry Masinter
> Sent: Saturday, July 27, 2002 6:18 PM
> To: tai@iij.ad.jp
> Cc: 'Webdav WG (E-mail)'
> Subject: RE: Web Character Model and IRI spec (Re: FW: character
> encoding.)
>
>
>
> I think that it would be great if the WebDAV spec
> could be clear about encodings in URIs, and the
> relationship between the HTTP URIs used in the protocol
> and the XML strings used in enumerations of collections.
> I'm not sure you need to make a normative reference to
> either the IRI spec or CHARMOD to do so, if you're concerned
> about establishing an unnecesary schedule dependency.
>
> This is because the IRI spec doesn't actually say the
> things that WebDAV needs to say in order to get interoperable
> implementations -- what is the expected behavior of
> WebDAV user agents when showing strings to the users?
>
> This has been an issue in interops already, not just
> for I18N, but also for simple URL encoding, e.g., of
> file names with spaces in them.

OK, what do we need to specify:

1) display of member names in collections: take the last URI segment, then
URL-unescape, then UTF-8-decode

2) creation of new resources:

2a) all URI segments MUST be UTF-8-decodable after URL-unescaping
2b) if the "local display name" (for instance document name when typing into
file selector box) contains non-ASCII characters, it MUST be UTF-8 encoded
then URL-escaped.

3) Forbid member names in collections that aren't Unicode-normalized after
URL-de-escaping and UTF-8-decoding.

Opinions?

Julian



