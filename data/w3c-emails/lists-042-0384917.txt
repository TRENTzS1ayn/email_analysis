docno="lists-042-0384917"
received="Sat Jun 21 22:32:44 2003"
isoreceived="20030622023244"
sent="Sat, 21 Jun 2003 19:32:46 -0700"
isosent="20030622023246"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: Status of PROPFIND allprop/include"
id="004a01c33866$912470d0$fdcb90c6@lisalap"
charset="iso-8859-1"
inreplyto="JIEGINCHMLABHJBIGKBCIEJJHDAA.julian.reschke&#64;gmx.de"
expires="-1"

To:"'Julian Reschke'"<julian.reschke@gmx.de>,<w3c-dist-auth@w3.org>



I started putting the allprop/include proposal into RFC2518bis.  THen I
realized that in some of our discussions, we've leaned towards deprecating
'allprop' entirely in favour of 'propname' to help server performance (and
client performance, at least in so far as client must still download the
entire Multistatus response and parse it even when it contains useless
info).  

How often do clients really want all the *values* of all dead properties?  I
understand readily how clients want to see a list of the names of all dead
properties.  But if I've added a dead property to my home directory which is
called "sharefromstestuser_x0040_1_x003a_1501" in the namespace
"http://www.xythos.com/namespaces/StorageServer"  (this is how Sharemation
remembers what your bookmarks are) what client cares what the value of that
dead property is?

Next question, what's the harm?  Well, it takes time to look up all the
values of dead properties, escape them or encapsulate them, marshal them in
XML and send them down the wire. 

So the risk of making 'allprop' more useful through an 'include' syntax is
that it makes 'allprop' more likely to be used even though much of the
information returned may be useless.

I think it might be even more useful and efficient to combine the 'propname'
syntax with the specific list of all the properties the client really wants
the values for.  E.g. 

PROPFIND blah
Host: foo.bar
Content-Type: text/xml

<?xml version="1.0" encoding="utf-8" ?>
<D:propfind xmlns:D="DAV:">
<D:propname/>
<D:prop xmlns:R="http://www.example.com/boxschema/">
<R:bigbox/>
<R:author/>
<R:DingALing/>
<R:Random/>
</D:prop>
</D:propfind>

Now the client gets the property values that will truely be useful, plus
find out the list of properties that exist that might or might not be
useful.  

Comments?

Lisa

> -----Original Message-----
> From: w3c-dist-auth-request@w3.org 
> [mailto:w3c-dist-auth-request@w3.org] On Behalf Of Julian Reschke
> Sent: Sunday, May 04, 2003 12:46 PM
> To: w3c-dist-auth@w3.org
> Cc: Jim Whitehead; Lisa Dusseault
> Subject: Status of PROPFIND allprop/include
> 
> 
> Jim, Lisa,
> 
> in
> 
 http://lists.w3.org/Archives/Public/w3c-dist-auth/2003JanMar/0073.html

I tried to summarize the consensus of the attendees at the interim meeting
regarding the allprop/include issue.

1) I'd like to confirm that this was the solution we agreed upon?

2) I'd like to gather feedback on how we proceed with this change. One
approach (a) would be that I update


http://greenbytes.de/tech/webdav/draft-reschke-webdav-allprop-include-03.htm
l

with the new marshalling and let this be published as experimental RFC (the
drawback being that it uses elements in the DAV: namespace, thus should
really be a WG submission). Another approach (b) would be to start a new WG
document, and try to get it published as "proposed standard" ASAP.

What I really *don't* want to do is to wait for RFC2518bis, partly because
it's unclear when we'll be done with it, and also because at that point of
time we really should already have interoperable implementations of this.

Regards,

Julian



