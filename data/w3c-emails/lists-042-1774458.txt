docno="lists-042-1774458"
received="Fri Jan 24 16:49:07 2003"
isoreceived="20030124214907"
sent="Fri, 24 Jan 2003 13:49:01 -0800"
isosent="20030124214901"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: Issues PUT_AND_INTERMEDIATE_COLLECTIONS and  INTEROP_DELETE_AND_MULTISTATUS"
id="000901c2c3f2$67ea5e70$b701a8c0@xythoslap"
charset="us-ascii"
inreplyto="JIEGINCHMLABHJBIGKBCCEOCGEAA.julian.reschke&#64;gmx.de"
expires="-1"

To:"'Julian Reschke'"<julian.reschke@gmx.de>,"'John DeSoi'"<desoi@icx.net>,<w3c-dist-auth@w3c.org>




> That being said, from a consistency p.o.v. I agree. I'll 
> assume for a moment
> that few WebDAV clients indeed *do* evaluate a 207 on DELETE 
> (and other
> candidates such as LOCK/COPY...), and those probably would be easy to
> upgrade. If this is true, all we'd need to do is
> 
> - deprecate status of 207 for failures
> - introduce a new 4xx code such as INCOMPLETE OPERATION which 
> would carry
> the same multistatus body
> 
It doesn't seem nearly that big a change is necessary. The biggest
change I'd consider given what I currently know, is that the spec would
require that HTTP 1.1 method requests to non-collections should not
result in 207. This would only affect the definition for DELETE, since
that's the only HTTP 1.1 method that is defined defined as returning
207. DELETE could still return 207 in response to a Depth: infinity
request to a collection.

My reasoning is that HTTP clients address individual pages with DELETE
requests, not collections.

lisa



