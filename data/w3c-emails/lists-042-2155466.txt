docno="lists-042-2155466"
received="Mon Feb  3 05:50:52 2003"
isoreceived="20030203105052"
sent="Mon, 3 Feb 2003 11:49:59 +0100"
isosent="20030203104959"
name="Stefan Eissing"
email="stefan.eissing@greenbytes.de"
subject="Re: Is HTTP/1.1 required for WebDAV?"
id="3DAFB683-3765-11D7-A23E-00039384827E@greenbytes.de"
charset="US-ASCII"
inreplyto="7014771D-3541-11D7-B386-0003934B6A22&#64;apple.com"
expires="-1"

Cc:w3c-dist-auth@w3c.org
To: Jim Luther<luther.j@apple.com>




Am Freitag, 31.01.03, um 18:28 Uhr (Europe/Berlin) schrieb Jim Luther:

>
> I thought it was pretty clear in rfc2518 (and rfc2518 bis) that WebDAV 
> servers and clients are HTTP/1.1 servers and clients because the 
> introduction section of the rfc starts off, "This document describes 
> an extension to the HTTP/1.1 protocol that allows clients to perform 
> remote web content authoring operations."

I agree that WebDAV server and clients should implement HTTP/1.1.

> However, during interoperability testing I've found several servers 
> which return HTTP/1.0 in the Status-Line of their response message and 
> behave as HTTP/1.0 servers (i.e., they do not handle HTTP/1.1 
> persistent connections correctly, there are no Content-Length headers 
> in a response with a message-body, etc.). For the most part, the Mac 
> OS X WebDAV file system client works with these servers but it works 
> much slower because of transaction aborts and retries.

So, servers implementing 1.1 are rewarded with better performance/user 
perception. Good.

>
> Should WebDAV clients refuse to use HTTP/1.0 servers and should WebDAV 
> servers refuse to work with HTTP/1.0 clients?

I think refusing to interop with a HTTP/1.0 server is not the intention 
of HTTP/1.1. Contrary,
HTTP/1.1 was carefully designed to allow interoperability. Even if all 
servers support HTTP/1.1,
there are a lot of poxies wich only support HTTP/1.0. SAP's 
implementation will therefore
keep support for HTTP/1.0.

>
> If yes, should rfc2518 bis make HTTP/1.1 (or later) a MUST?
>
I think it does already, maybe it should say so in a stronger way. But 
I doubt that
it will have the consequences for your production code that you'd like 
to have.

//Stefan



