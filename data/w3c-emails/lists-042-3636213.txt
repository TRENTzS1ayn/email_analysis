docno="lists-042-3636213"
received="Tue Mar  4 17:49:42 2003"
isoreceived="20030304224942"
sent="Tue, 4 Mar 2003 23:49:08 +0100"
isosent="20030304224908"
name="Julian Reschke"
email="julian.reschke@gmx.de"
subject="RE: Move and Delete (was: bind draft issues)"
id="JIEGINCHMLABHJBIGKBCEEGNGKAA.julian.reschke@gmx.de"
charset="iso-8859-1"
inreplyto="E4F2D33B98DF7E4880884B9F0E6FDEE25ED6E0&#64;SUS-MA1IT01"
expires="-1"

To:"Clemm, Geoff"<gclemm@rational.com>,"'WebDAV'"<w3c-dist-auth@w3.org>



> From: w3c-dist-auth-request@w3.org
> [mailto:w3c-dist-auth-request@w3.org]On Behalf Of Clemm, Geoff
> Sent: Tuesday, March 04, 2003 11:35 PM
> To: 'WebDAV'
> Subject: RE: Move and Delete (was: bind draft issues)
>
> ...
> So to rephrase the question to target unix file systems, how many
> examples are there of unix file systems that allow you to use link()
> to create a second link to a directory, but do not allow you to use
> unlink() to remove a link to a directory?  (I'm not saying there
> aren't any ... just that I'm not familiar with them).
>
> Julian: Just for interests sake, or you using link/unlink to
> create bindings in your Unix file system, or something else?

No, I was just using this as an example because I thought it qualified as
example. The UFS certainly uses hard links (bindings) internally on
collections, but, as you said, it usually doesn't let people mess around
with them explicitly.

Anyway, the main issue for us is that we absolutely can not change the
DELETE collection semantics (from what we have in RFC2518), yet we *do*
support explicit BIND creation. This basically means that we can't be
compliant to the spec as it's written, and I think this is a problem. IMHO,
the spec simply should allow "both" behaviours (atomic delete with cleanup
of child resources as possible side effect), and RFC2518 semantics.

Julian

--
<green/>bytes GmbH -- http://www.greenbytes.de -- tel:+492512807760



