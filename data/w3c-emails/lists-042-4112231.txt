docno="lists-042-4112231"
received="Fri Mar  7 02:53:46 2003"
isoreceived="20030307075346"
sent="Thu, 6 Mar 2003 14:55:49 -0800"
isosent="20030306225549"
name="Brian Korver"
email="briank@xythos.com"
subject="Re: Move and Delete (was: bind draft issues)"
id="C6569B1E-5026-11D7-8A8F-000393751598@xythos.com"
charset="US-ASCII"
inreplyto="JIEGINCHMLABHJBIGKBCEEIAGKAA.julian.reschke&#64;gmx.de"
expires="-1"

To:"'WebDAV'"<w3c-dist-auth@w3.org>



On Wednesday, March 5, 2003, at 12:21  AM, Julian Reschke wrote:
>> Julian,
>>
>> I agree, but I think it's even worse than this.  Semantically,
>> MOVE is merely a simple namespace operation, but in practice
>> it may be more than that.  For instance, a move across unix
>> filesystems must be implemented as a recursive copy (followed
>> afterward by delete).
>
> Brian,
>
> in the Unix API, you don't move at all -- you link() then unlink(). 
> "mv" is
> just a user command that does it's best when the files reside in 
> different
> partitions. I think WebDAV MOVE should just fail if the resource cannot
> really be moved (preserving all dead & live properties), and fail 
> otherwise.
> Just like in the Unix API, the caller *then* can decide to do a 
> COPY/DELETE
> instead.
>
> Julian

Julian,

If it is the goal to have WebDAV implement the semantics of the
Unix API, then I would prefer that it more closely model those
semantics -- for instance by making DELETE fail on non-empty
collections.

Personally, I don't think that WebDAV should implement the
semantics of the Unix API, at the very least because of
the overhead -- imagine having to issue a DELETE for every
resource in order to delete a collection containing a million
files.  I feel that WebDAV should implement semantics that
are closer to the Unix CLI, which of course was designed to
be easier on the fingers (read: "lower overhead") than
the API.

-brian
briank@xythos.com



