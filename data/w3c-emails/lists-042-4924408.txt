docno="lists-042-4924408"
received="Tue Mar 11 11:27:50 2003"
isoreceived="20030311162750"
sent="Tue, 11 Mar 2003 08:27:47 -0800"
isosent="20030311162747"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: MOVEs across file systems"
id="075001c2e7eb$28782b10$bb01a8c0@xythoslap"
charset="us-ascii"
inreplyto="OF4E451EBE.0BE8791C-ON85256CE5.00248132&#64;us.ibm.com"
expires="-1"

To:"'Jason Crawford'"<nn683849@smallcue.com>
Cc:"'WebDAV'"<w3c-dist-auth@w3.org>



> Anyway... the thought I just wanted to point out is that if you have a
> resource on one file system with multiple bindings to it, and you MOVE
> that resource via one of those bindings "to another file system"...
> you might actually want to NOT "copy/delete" it since you 
> still also have
> several bindings to it from the original file system.  You might
> *need* to keep a cross file system binding and not necessarily
> move implementations around during MOVE/BIND and other
> namespace operations.  And if you're forced to support cross
> file system bindings, then perhaps you never really need to take the
> COPY/DELETE approach?

A couple counter-reasons: 
 - Quota within the system (top level directories or lower directories
limiting space) this may depend on how the quota is counted - the
system, through its acknowledged limitations, may need to actually move
the resources (not leave them and rebind them) in order to calculate
quota.

 - Disk space outside the system - different parts of the namespace are
frequently literally stored on different disks. Users/Administrators may
move content from one part of the namespace to another *in order* to
transfer to a less-used disk.

Jason, you've clearly got the right instincts for designing a WebDAV
server -- thinking carefully about how to do the best possible job.
It's just a question of can the *protocol* enforce a good job on server
implementors?  Sometimes it can, but sometimes it can't. We wouldn't
want to force atomic DELETEs and have an implementation choose to reject
a great number of large DELETE requests just because it can't guarantee
them all atomic. In the extreme, that would be an even worse tradeoff.

Lisa



