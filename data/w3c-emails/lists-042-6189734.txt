docno="lists-042-6189734"
received="Fri Jul 11 18:15:21 2003"
isoreceived="20030711221521"
sent="Sat, 12 Jul 2003 00:15:08 +0200"
isosent="20030711221508"
name="Julian Reschke"
email="julian.reschke@gmx.de"
subject="RE: Binding loops and PROPFIND clarification needed (was Re: COPY and bindings)"
id="JIEGINCHMLABHJBIGKBCIEGCHNAA.julian.reschke@gmx.de"
charset="us-ascii"
inreplyto="3F0F34DB.80809&#64;nasa.gov"
expires="-1"

To:"Chris Knight"<Christopher.D.Knight@nasa.gov>,"Julian Reschke"<julian.reschke@gmx.de>
Cc:<w3c-dist-auth@w3.org>



> From: Chris Knight [mailto:Christopher.D.Knight@nasa.gov]
> Sent: Saturday, July 12, 2003 12:06 AM
> To: Julian Reschke
> Cc: w3c-dist-auth@w3.org
> Subject: Re: Binding loops and PROPFIND clarification needed (was Re:
> COPY and bindings)
>
>
> Julian Reschke wrote:
>
> >Chris,
> >
> >you are right that this probably should be explained a bit better.
> >
> >
> First/easiest thing would be to change the example to have the 506
> followed by a 200. (The example implied to me that processing stopped at
> the first 506.)

That would break the multistatus format - every URI may only appear once.

What we should do is clarify that the processing only stops *for the
resource that is part of the bind loop*. So maybe just change the example to
have the "looping child" appear first in the collection.

> ...
> Fair enough. In environments where the may be many many loops, following
> up with multiple PROPFIND requests might be time consuming. Is it
> expected that Delta-V environments (particularly with some of the
> advanced features) might have (many) loops? (Elias implied that bindings
> are prettymuch necessary and I think I remember him saying that loops
> are necessary as well.)
>
> >However, this *only* applies to depth:infinity processing, which
> is sort of
> >deprecated anyway (meaning servers are allowed to reject these
> requests, and
> >I think moddav does this by default).
> >
> >
> Yes, mod_dav does reject Depth: infinity propfinds by default. I am
> working on a server that has a client that very much prefers to use
> Depth: infinity but perhaps I'll just respond with the first case (a 506
> response) and make him do Depth: 1 whenever there're loops.

Well, how does this client handle the case where (a) the server either
rejects depth:infinity, or the the response to depth:infinity gets *really*
big? I think it's better just not to use it...

> >So my understanding is that a "modern" client would only do depth:1
> >PROPFINDs, and thus never see a 506.
> >
> :^> Being a server developer, I would love to see Depth: infinity
> disappear...But I'm sure client developers would say the opposite.

Maybe, maybe not. So which clients *do* require PROPFIND/depth:infinity? The
Microsoft webfolder client doesn't.

Julian

--
<green/>bytes GmbH -- http://www.greenbytes.de -- tel:+492512807760



