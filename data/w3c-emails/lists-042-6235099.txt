docno="lists-042-6235099"
received="Thu Jul 17 14:26:43 2003"
isoreceived="20030717182643"
sent="Thu, 17 Jul 2003 11:27:27 -0700"
isosent="20030717182727"
name="Chris Knight"
email="Christopher.D.Knight@nasa.gov"
subject="Re: Interest in standardizing Batch methods?"
id="3F16EA8F.40904@nasa.gov"
charset="us-ascii"
inreplyto="JIEGINCHMLABHJBIGKBCMEDMHOAA.julian.reschke&#64;gmx.de"
expires="-1"


To: Julian Reschke<julian.reschke@gmx.de>
CC: WebDAV<w3c-dist-auth@w3.org>


Julian Reschke wrote:

>Well,
> 
>but at the start of the day, somebody needs to write down a spec that we
>can discuss. So far, nobody has done that.
>  
>
And boy, the semantics of batch requests are pretty hairy. At the end of 
the day is there much benefit? Is each request in a batch atomic and/or 
is the entire batch? (Do you have multiple levels of transactions?) How 
do you cache a batch? (Boy, there's a long topic...)

The HTTP overhead for multiple requests (made over the same TCP 
connection, mind you) is small (arguably, couldn't be much smaller) and 
if you want atomic batches, locks do an ok job of it.

I've certainly considered something like a PUT/PROPPATCH combination 
(for example if you had "required dead properties") but it's probably 
just easier to do a null lock and the two requests separately.



