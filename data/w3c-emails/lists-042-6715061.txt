docno="lists-042-6715061"
received="Mon Aug  4 12:42:26 2003"
isoreceived="20030804164226"
sent="Mon, 4 Aug 2003 09:43:03 -0700"
isosent="20030804164303"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: Binding loops and PROPFIND clarification needed (was Re: COPY  and   bindings)"
id="005301c35aa7$7a04a970$f8cb90c6@lisalap"
charset="us-ascii"
inreplyto="JIEGINCHMLABHJBIGKBCMEACIBAA.julian.reschke&#64;gmx.de"
expires="-1"

To:"'Julian Reschke'"<julian.reschke@gmx.de>,"'Geoffrey M Clemm'"<geoffrey.clemm@us.ibm.com>,<w3c-dist-auth@w3.org>




> I really don't care how you call it. The client is asking for 
> a recursive listing, and the server can't provide it. The 
> *problem* is that recursing into the collection would lead to 
> an infinite loop, so there's really no issue with the 
> collection itself.

The client is asking for a recursive listing? That's one way to look at it.
Another way to look at it is that the client is asking for a listing of a
finite set of resources, and the specification can decide how to
successfully return properties of those resources in presence of loops.  It
serves no purpose for the client to get an infinite set of properties nor
does it want them.  So as we're defining what the behavior of
PROPFIND-depth-infinity is in the presence of loops, we can define what the
client "asks for" too, according to what we think the requirements are.

I agreed with your arguments about how existing clients might react to a new
status code.  I suspect that the way existing clients respond to a supposed
success (2xx) will be more interoperable than the way they will respond to a
supposed failure (4xx, 5xx).

Lisa



