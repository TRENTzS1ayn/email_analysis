docno="lists-042-7878554"
received="Thu Sep 18 19:41:58 2003"
isoreceived="20030918234158"
sent="Thu, 18 Sep 2003 16:41:56 -0700"
isosent="20030918234156"
name="Lisa Dusseault"
email="lisa@xythos.com"
subject="RE: multiple &quot;source&quot; properties documents"
id="017c01c37e3e$760cac40$f8cb90c6@lisalap"
charset="iso-8859-1"
inreplyto="5744FAECB4B8864F83CB05F2E1D16EEB154B9A&#64;coso.staff.vuw.ac.nz"
expires="-1"

To:"'Conal Tuohy'"<Conal.Tuohy@vuw.ac.nz>,"'WebDAV List (E-mail)'"<w3c-dist-auth@w3.org>




> From what I read, the "source" property was a great idea but 
> no-one ever implemented it, supposedly because it was too 
> complicated and/or there was no perceived need. 

I'd characterize the reasons a little differently: 
 1) The feature was underspecified, there was never enough 
information in the spec to be able to fully implement
or interoperate
 2) Implementation interest was low -- we asked around to see
who had implemented this feature and got no positive
responses at all.

> Eventually it 
> was formally deprecated. Is this correct? 

The deprecation isn't final yet, but we are proposing to 
deprecate it.

> I've also read of 
> the "translate" header, which I gather is a 
> Microsoft-specific extension? I also gather that this only 
> supports a one-to-one mapping between a document and its 
> source, i.e. a document has one and only one source?

Yes

> My case is that I have a server which generates pages from 
> multiple sources and keeps track of those sources in such a 
> way that it could fairly easily support dav:source. I'd like 
> editors to be able to edit the page and select which of the 
> source documents to edit. But are there existing clients that 
> will actually do that? Or are there other web-dav mechanisms 
> that might support my use-case?

Not that I know of.  You'd be the first to implement a 
protocol feature to expose multiple mappings so nobody
to interoperate with and no tools to support your feature.

If there is sufficient interest from implementors to make
forward progress on this, I'd recommend a separate draft rather
than resurrect the unimplemented, underspecified, and untested
feature in RFC2518.

Lisa



