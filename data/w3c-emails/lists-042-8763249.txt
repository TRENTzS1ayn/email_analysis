docno="lists-042-8763249"
received="Tue Oct  7 17:45:39 2003"
isoreceived="20031007214539"
sent="Tue, 7 Oct 2003 17:45:31 -0400"
isosent="20031007214531"
name="Albert Lunde"
email="atlunde@panix.com"
subject="Re: WebDAV on BEA WebLogic (in support of WebCT Vista)me"
id="20031007214531.GA20456@panix.com"
charset="us-ascii"
inreplyto="p06002009bba888576122&#64;[168.16.213.98]"
expires="-1"

To: Frank Lowney<frank.lowney@gcsu.edu>
Cc:w3c-dist-auth@w3.org



On Tue, Oct 07, 2003 at 11:30:21AM -0400, Frank Lowney wrote:
> Albert,
> 
> I appreciate your reply and your point about carbon apps such as 
> Goliath having to support legacy file systems is well taken but our 
> issue was with the use of the MacOS X built-in WebDAV client, a 
> native (coco) app I believe.  This client does well with Apache and 
> WebSTAR V but not with BEA Weblogic.  We haven't yet tested other 
> native coco apps such as Adobe GoLive and Macromedia Dreamweaver but 
> I would imagine that they are also quite independent of and do not 
> use forked files.
> 
> Are you saying that the "hack" is in BEA Weblogic or elsewhere?  If 
> it's in BEA WebLogic, then their hack is breaking a 
> standards-compliant client.

1) I am saying OS X still supports resource forks at the file system level,
independent of statements about specific applications.

2) Cocoa applications can do resource folks too, they are just less likely
to need do so for their own sake. But Apple is probably continuing
to build resource fork support into GUI file manipulation tools
regardless of what development tools they are written with.

(The Carbon/Cocoa divide is getting more fuzzy over time, too.)

3) The "hack" is a matter of how well-integrated resource fork
support is in a given filesystem: it's a low-level feature
of HFS+, but it's a more visible layer on top of some other
file systems.

The problem with being "standards-compliant" in this context, is there
are so many options to choose from: a number of defacto ways to 
represent resource forks, plus the options of throwing away resource forks
and/or finder metadata entirely.

I think IETF standards like HTTP and WEBDAV are silent about
Apple-specific file system features like resource forks.

Throwing away resource forks plays nicely with the non-Apple
web world, but starts get messy if you mix general purpose
file servers with web servers, as I think Apple has done with
its .Mac service.

I think the prior usage of this particular representation of resource
forks on Mac OSX was with UFS and NFS filesystems.

I don't claim to be an expert on this subject so take this with
some reservations.



