docno="lists-043-11429205"
received="Fri Jul 30 14:47:31 1999"
isoreceived="19990730184731"
sent="Fri, 30 Jul 1999 14:47:26 -0400"
isosent="19990730184726"
name="Mark Bartel"
email="mbartel@thistle.ca"
subject="RE: verifying order of resources in a document"
id="91F20911A6C0D2118DF80040056D77A20328ED@arren.cpu1634.adsl.bellglobal.com"
charset="iso-8859-1"
inreplyto="verifying order of resources in a document"
expires="-1"


To:"'tog '"<todd.glassey@www.meridianus.com>,"'w3c-ietf-xmldsig@w3.org'"<w3c-ietf-xmldsig@w3.org>

Todd,

I'm not sure I understand.  If you feed a browser an arbitrary chunk of XML,
it is unlikely to be able to display it meaningfully.  It could be a
workflow process definition or it could be a recipe for fudge brownies.  If
you attached a style sheet defining how to display the recipe format or a
workflow definition, the browser could then meaningfully display it.  You
might have another style sheet that displays the recipe in shopping list
format, in which case it would discard all the cooking instructions and just
give the ingredients, perhaps grouped by type.  Would the last be non-linear
processing?  Technically speaking, the browser would still have to go from
the top through the tag structure to figure it out, so one might still call
it top-down.

On the other hand, if you feed a workflow process definition by itself into
our process designer, it will display it happily, having an implicit
knowledge of what the xml data means.  Feed it into the workflow engine and
it will allow initiation of that process.

So, it seems to me that the application needs to understand the data,
whether it does so implicitly (the workflow designer/engine) or it is told
how (the browser with style sheets).  The order of the data may or may not
matter; one can rearrange the order of the ingredients of the recipe (a
set), but it would be undesireable to reorder the instruction steps (a
sequence).

Could you clarify?

-Mark Bartel
JetForm Corporation

-----Original Message-----
From: tog
To: Mark Bartel; 'John Boyer '; w3c-ietf-xmldsig@w3.org
Sent: 7/30/99 12:16 PM
Subject: Re: verifying order of resources in a document

Mark, this actually is a critically important feature of processing XML.
The issue is specifically that XML as a markup language has no object
interconnection mechanisms that set order, precedence, or inter/Intra
Object Control Policy.

What this means is that any XML Stream that is interpreted, MUST be
interpreted in a top-down, first come-first processed model, and with
the Core XML spec this only makes sense for applications that need to
process digital information as though there was a piece of paper there.

But even that is potentially flaky, for instance if I set a browser to
display in Japanese and pump the standard XML stream into it. It
displays Kanji in top down and right to left. We read left to right and then
top
down here in the States, so which instrument and which object is processed
first.  Forget the legal issues here for a minute, and just tell me how the
proof models work for representing events in this XML stream that are
language
or presentation engine independent.

As to the current vision, I have to ask "Is it the Browser that enforces
this?" -  So far it is it seems and the value of the digital instrument
based on this concept is totally leverages against the browser as the
presentation engine... Take the browser away and the model disintegrates
making XML no mo' bettah than ASN.1 for writing forms, algs, and
datastructures in.

Todd

----- Original Message -----

[deletia]



