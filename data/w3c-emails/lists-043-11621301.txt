docno="lists-043-11621301"
received="Thu Aug  5 19:01:16 1999"
isoreceived="19990805230116"
sent="Thu, 5 Aug 1999 18:01:10 -0500"
isosent="19990805230110"
name="Richard D. Brown"
email="rdbrown@Globeset.com"
subject="XML C14N Comments"
id="00d001bedf96$69086980$0bc0010a@artemis.globeset.com"
charset="iso-8859-1"
expires="-1"

To:<w3c-ietf-xmldsig@w3.org>


Here are my comments wrt Canonical XML W3C Working Draft dated 29th of July,
1999.

1- COMMENT ON 2.8 and 5.3:
--------------------------

The reference to the DTD and, to a lesser extent, the XML version are
important pieces of information. It may happen that two documents differ
only by their document type. Although it might not be a great example, I can
think about an actual invoice and an invoice proforma. Removing the document
type probably implies that a similar piece of information shall be embedded
in the document contents.

A remedy to this problem could be to use the document DTD URI as the default
namespace for all elements not otherwise associated to a namespace. This is
usually the case for the root element (see following example)

ORIGINAL CONTENT
----------------

<?xml version='1.0'?>
<!DOCTYPE Document SYSTEM 'http://w3.org/example.dtd'>
<Document>
  <Content>
    xxxxxxxxx
  </Content>
  <dsig:Signature>
    ...
  </dsig:Signature>
</Document>

AFTER CANONICALIZATION
----------------------

<n1:Document xmlns:n1='http://w3.org/example.dtd'>
  <n1:Content xmlns:n1='http://w3.org/example.dtd'>
    xxxxxxxxx
  </n1:Content>
  <n1:Signature xmlns:n1='http://w3.org/xmldsig.dtd'>
    ...
  </n1:Signature>
</n1:Document>

2- COMMENT ON 5.2 (2rd bullet)
------------------------------

I suppose that the author meant &#13 instead of &#x13.

btw: &#xD, &#xd, and &#13 are equivalent. Does this mean that we should
propose a canonical representation for the character references in attribute
value and character data?

3- COMMENT ON 5.2 (3rd bullet)
------------------------------
This rule does not properly reflect the XML specification wrt
Attribute-value Normalization. Discarding whitespace characters is limited
to leading and trailing whitespace characters in the value of attributes
declared with a type other than CDATA. And, in the abscence of declaration,
an attribute is assumed to be of type CDATA.

It seems that this rule contradicts 5.2 (9th bullet) and 5.7.

4- COMMENT ON 5.2 (9rd bullet)
------------------------------

See previous comment.

Sincerely,

Richard D. Brown
Chief Software Architect - R&D
Globeset, Inc. Austin, TX - U.S.



