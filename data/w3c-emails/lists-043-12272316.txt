docno="lists-043-12272316"
received="Fri Aug 20 17:12:27 1999"
isoreceived="19990820211227"
sent="Fri, 20 Aug 1999 17:10:13 -0400"
isosent="19990820211013"
name="Phillip M Hallam-Baker"
email="pbaker@verisign.com"
subject="RE: XML-Signatures Requirements Last Call"
id="005b01beeb50$6512e240$6e07a8c0@pbaker-pc.verisign.com"
charset="iso-8859-1"
inreplyto="3.0.5.32.19990820163503.009cb740&#64;localhost"
expires="-1"

To:"Joseph M. Reagle Jr."<reagle@w3.org>,<chairs@w3.org>
Cc:"IETF/W3C XML-DSig WG"<w3c-ietf-xmldsig@w3.org>,<w3c-xml-plenary@w3.org>,"Donald E. Eastlake 3rd"<dee3@us.ibm.com>,"Jon Bosak"<Jon.Bosak@eng.sun.com>


I object to the following requirement:


3.2 The specification must specify at least one mandatory to implement
signature canonicalization, content canonicalization, hash, and signature
algorithm.


No justification is provided for requirng mandatory implementation of a
canonicalization algorithm. A canonicalization algorithm is not required
to create a signature.

The simplest implementation of a signature verifier is to validate the
hash of the bits on the wire.

The simplest implementation is desired because it is the least likely
to have errors.

A canonicalization algorithm introduces potential ambiguity into the
bit-stream presented and is therefore a security risk. If an application
is presented with a bit stream which does not validate it MUST be
permitted to reject the signature. It MUST NOT be required to manipulate
the data to make the signature verify.


I propose the following replacement:

3.2 The specification must specify at least one mandatory to implement hash,
and signature algorithm.



