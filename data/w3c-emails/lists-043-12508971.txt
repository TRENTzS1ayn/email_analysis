docno="lists-043-12508971"
received="Wed Aug 25 13:03:56 1999"
isoreceived="19990825170356"
sent="Wed, 25 Aug 1999 13:04:18 -0400"
isosent="19990825170418"
name="Phillip M Hallam-Baker"
email="pbaker@verisign.com"
subject="RE: Caononicalization Re: Minutes from Today's Call Please Review/Correct"
id="000801beef1b$de1ab400$6e07a8c0@pbaker-pc.verisign.com"
charset="iso-8859-1"
inreplyto="199908251556.LAA01878&#64;torque.pothole.com"
expires="-1"

To:"Donald E. Eastlake 3rd"<dee3@torque.pothole.com>,"IETF/W3C XML-DSig WG"<w3c-ietf-xmldsig@w3.org>


> >The definition of canonicalization is a function f(x) such that
> >f(x) = f(f(x)).
> 
> No.  That's the fix point property, which is a desireable property of
> canonicalization but by no means its definition.  

Actually it is a required property for it to be a canonical form.

The point of canonicalization is to be able to test for equivalence
between different syntactical representations of the same data.

> My definition of
> canonicalization is a function f(x) which is useful for application A
> if f(x1) = f(x2) implies that application A considers x1 and x2
> semantically identical. 

And f(x1) <> f(x2) implies they are distinct. Therefore a c14n
function must have the fixed point property.

Lema
Exists f(x) <> f(f(x))for some x

=> f(x) <> f(x2)where x2 = f(f(x))

but x, x2 are semantically equivalent, therefore

f(x) = f(x2), thus disproving the lema.

Therefore all canonicalization functions are fixed point functions
QED.



