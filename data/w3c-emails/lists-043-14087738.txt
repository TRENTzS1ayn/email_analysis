docno="lists-043-14087738"
received="Thu Sep 23 14:16:18 1999"
isoreceived="19990923181618"
sent="Thu, 23 Sep 1999 11:13:43 -0700"
isosent="19990923181343"
name="John Boyer"
email="jboyer@uwi.com"
subject="Con Call Discussion of Marker Elements"
id="NDBBLAOMJKOFPMBCHJOIEEFNCBAA.jboyer@uwi.com"
charset="iso-8859-1"
expires="-1"

To:"DSig Group"<w3c-ietf-xmldsig@w3.org>
Cc:"Peter Norman"<pnorman@mediaone.net>


There were two new points raised by Peter regarding how the marker method
should behave.

1) The marker elements should be defined as being omitted from all
signatures, even if those signatures don't explicitly indicate that they
should be removed.

2) The marker elements should be able to be added regardless of whether the
application language's DTD would permit them.

If we take your suggestion of making PIs for the markers, then they will not
choke the DTD and the XPath can identify them using the ancestor-or-self and
previous-sibling and following-sibling axes.

However, I wouldn't count on PIs being thrown out of c14n because there are
those who feel they want to capture the PI binding between XML and an XSL
stylesheet.  c14n isn't finished yet, so PI exclusion may change.

With regard to making the markers elements instead, would it be fair to say
that a marker element defined in the namespace of either your application
domain or possibly even dsig, wouldn't that address your second point above?

This would leave your first point of how to get automatic exclusion.
Although we could define a dsig element in the spec that is omitted from all
signatures implicitly, my first reaction would be that if you want all of
your signatures to omit a specific element, you should say so explicitly in
your XPath.  It is not a point I'll go up to bat for though.  If the WG
decides to always throw out one kind of element *in the dsig namespace*,
that would be OK.  You could then sprinkle this element throughout your
document, and use the xpath with ancestor-or-self and previous-sibling and
following-sibling axes to identify nodes that are between them.

You could use the xpath to directly identify the target elements and have
the semantic for message construction be that we obtain that which is
between markers, but this is the main point that I'm actually hoping to
persuade the WG against since I cannot figure out how to get this semantic
to achieve document closure, which means we either abandon document closure
or have two semantics, the marker semantic and the semantic of directly
applying the xpath as a transform of the document by applying the node test
to each node of the document's parse tree.

John Boyer
Software Development Manager
UWI.Com -- The Internet Forms Company



