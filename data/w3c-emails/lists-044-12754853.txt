docno="lists-044-12754853"
received="Wed Jul 26 12:21:25 2000"
isoreceived="20000726162125"
sent="Wed, 26 Jul 2000 09:21:18 -0700"
isosent="20000726162118"
name="John Boyer"
email="jboyer@PureEdge.com"
subject="Re: section 12"
id="BFEDKCINEPLBDLODCODKAEPCCDAA.jboyer@PureEdge.com"
charset="US-ASCII"
inreplyto="3.0.5.32.20000726112342.01943610&#64;localhost"
expires="-1"

To:"Joseph M. Reagle Jr."<reagle@w3.org>
Cc:<w3c-ietf-xmldsig@w3.org>


Hi Joseph,

Section 12 "Authors' Addresses" should be "Editors' addresses"


John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143  f: 250-479-3772
1-888-517-2675   http://www.PureEdge.com <http://www.pureedge.com/>



-----Original Message-----
From: w3c-ietf-xmldsig-request@w3.org
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Joseph M. Reagle
Jr.
Sent: Wednesday, July 26, 2000 8:24 AM
To: Ed Simon
Cc: 'w3c-ietf-xmldsig@w3.org'; 'ht@cogsci.ed.ac.uk'
Subject: RE: XSL Transform


At 17:29 7/25/2000 -0400, Ed Simon wrote:
 >4.  There is no reason why an XSLT transform in an XML Signature should
not
 >have a root element of
 ><stylesheet xmlns="http://www.w3.org/1999/XSL/Transform">
 >and contain complete, valid XSLT stylesheets.
 >
 >5.  Schemas allow us to enforce point 4.  Enforcing point 4 will make it
 >that
 >much easier to achieve point 3.

As an aside, the use of ANY has the implied default of
processContents='strict'. This may be approriate in specific instances (like
XSLT) however I think it's a bit too strict for everything in general. So I
propose we move towards <any ...  processContents='lax' ...> in things like
Transorms, Object, PGPData, SPKIData, etc.

 >The problem with the <any> element is that even if the namespace attribute
 >is "http://www.w3.org/1999/XSL/Transform", it does not
 >enforce that the child element is <stylesheet> so it could be quite
possible
 >to have

That is true: "Any well-formed XML from any namespace (default)"

If we wanted to do what you are speaking of we'd use a declaration below (I
think). However, XSLT [1] didn't provide a schema anyway and consequently
there might be some other tricks we could do, but seems too complicated for
the derived benefit...

<schema targetNamespace='&dsig;'
   version='0.1'
   xmlns='http://www.w3.org/1999/XMLSchema'
   xmlns:ds='&dsig;'
   elementFormDefault='qualified'
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <!--Simon-->
 <import namespace='http://www.w3.org/1999/XSL/Transform'/> <!--Reagle-->

...
  <element name='Transform'>
    <complexType content='mixed'>
      <choice minOccurs='1' maxOccurs='unbounded'>
        <any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
        <element name='Xpath' type='string'/>
        <element ref="xsl:stylesheet"/>    <!--  Simon-->
      </choice>
      <attribute name='Algorithm' type='uriReference' use='required'/>
    </complexType>
  </element>
__

[1] http://www.w3.org/TR/1999/REC-xslt-19991116

_________________________________________________________
Joseph Reagle Jr.
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/



