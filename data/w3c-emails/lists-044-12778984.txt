docno="lists-044-12778984"
received="Wed Jul 26 12:30:42 2000"
isoreceived="20000726163042"
sent="Wed, 26 Jul 2000 12:28:12 -0400"
isosent="20000726162812"
name="Ed Simon"
email="ed.simon@entrust.com"
subject="RE: XSL Transform"
id="ED026032A3FCD211AEDA00105A9C46960177B6FE@sothmxs05.entrust.com"
charset="iso-8859-1"
inreplyto="XSL Transform"
expires="-1"


To:"'w3c-ietf-xmldsig@w3.org'"<w3c-ietf-xmldsig@w3.org>,"'ht@cogsci.ed.ac.uk'"<ht@cogsci.ed.ac.uk>

Joseph wrote:
If we wanted to do what you are speaking of we'd use a declaration below (I
think). However, XSLT [1] didn't provide a schema anyway and consequently
there might be some other tricks we could do, but seems too complicated for
the derived benefit...

Ed responds:
If we can enforce, to a reasonable degree, that XSLT <Transform>s indeed
have
a <stylesheet> root element, then I think the derived benefits of 
interoperability more than outweigh the cost of two or three more lines in
the schema.  (It would certainly be nice is XSLT did provide a schema and
I hope they do in their next Recommendation version.)


-----Original Message-----
From: Joseph M. Reagle Jr. [mailto:reagle@w3.org]
Sent: Wednesday, July 26, 2000 11:24 AM
To: Ed Simon
Cc: 'w3c-ietf-xmldsig@w3.org'; 'ht@cogsci.ed.ac.uk'
Subject: RE: XSL Transform


At 17:29 7/25/2000 -0400, Ed Simon wrote:
 >4.  There is no reason why an XSLT transform in an XML Signature should
not
 >have a root element of 
 ><stylesheet xmlns="http://www.w3.org/1999/XSL/Transform">
 >and contain complete, valid XSLT stylesheets.
 >
 >5.  Schemas allow us to enforce point 4.  Enforcing point 4 will make it
 >that
 >much easier to achieve point 3.

As an aside, the use of ANY has the implied default of
processContents='strict'. This may be approriate in specific instances (like
XSLT) however I think it's a bit too strict for everything in general. So I
propose we move towards <any ...  processContents='lax' ...> in things like
Transorms, Object, PGPData, SPKIData, etc.

 >The problem with the <any> element is that even if the namespace attribute
 >is "http://www.w3.org/1999/XSL/Transform", it does not
 >enforce that the child element is <stylesheet> so it could be quite
possible
 >to have

That is true: "Any well-formed XML from any namespace (default)"
 
If we wanted to do what you are speaking of we'd use a declaration below (I
think). However, XSLT [1] didn't provide a schema anyway and consequently
there might be some other tricks we could do, but seems too complicated for
the derived benefit...

<schema targetNamespace='&dsig;' 
   version='0.1' 
   xmlns='http://www.w3.org/1999/XMLSchema'
   xmlns:ds='&dsig;'
   elementFormDefault='qualified'
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> <!--Simon-->
 <import namespace='http://www.w3.org/1999/XSL/Transform'/> <!--Reagle-->

...
  <element name='Transform'> 
    <complexType content='mixed'>
      <choice minOccurs='1' maxOccurs='unbounded'> 
        <any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>
        <element name='Xpath' type='string'/> 
        <element ref="xsl:stylesheet"/>    <!--  Simon-->
      </choice>
      <attribute name='Algorithm' type='uriReference' use='required'/> 
    </complexType>
  </element> 
__

[1] http://www.w3.org/TR/1999/REC-xslt-19991116

_________________________________________________________
Joseph Reagle Jr.   
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/



