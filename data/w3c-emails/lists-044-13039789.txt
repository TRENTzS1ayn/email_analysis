docno="lists-044-13039789"
received="Thu Jul 27 16:19:44 2000"
isoreceived="20000727201944"
sent="Thu, 27 Jul 2000 13:18:37 -0700"
isosent="20000727201837"
name="Jonathan Marsh"
email="jmarsh@microsoft.com"
subject="RE: DSig comments on XML Base"
id="116DFD732FA92E4D9B647C8EEF6DAF1015E2C4@red-pt-02.redmond.corp.microsoft.com"
inreplyto="DSig comments on XML Base"
expires="-1"


To:"'John Boyer'"<jboyer@PureEdge.com>,"'www-xml-linking-comments@w3.org'"<www-xml-linking-comments@w3.org>
Cc:"'w3c-ietf-xmldsig@w3.org'"<w3c-ietf-xmldsig@w3.org>

John wrote:
> OK, so a given XML application's document that does not use xml:base has
> also has the problem that it does not know whether or not the content came
> from an external parsed entity.  Point taken.

> However, this should not be used as a reason not to fix xml:base.  The
> problem I'm raising *IS* with XML Base.  The fact that it also happens
> without XML Base does not mean  that the problem isn't with XML Base.

XML Base is designed to be consistent with the determination of the XML Core
WG in this area, the Infoset, and the XSLT extensions to the XPath data
model.  Changing  XML Base without addressing these other technologies isn't
"fixing" anything.  It doesn't even address your problem!

> Moreover, the 'Included if validating' terminology does in fact reference
by
> hypertext link the definition of 'included', so my use of that section's
> phrasing is indeed appropriate, and it again brings up the question:

> Should we be introducing an attribute beginning with xml: that seems to
> violate section 4.4.2 of the XML 1.0 spec?

Personally, I think trying to use the XML spec to justify this issue one way
or the other is a waste of time, since the XML spec does not specifically
address this issue and extrapolating existing text does not necessarily
reveal the authors' original intentions (if they even had any).

Previous comments on this subject (led by Martin Duerst) have shown that
both alternatives are coherent, but that neither is optimal for all cases.
XSLT sets up a historical presumption that elements and processing
instructions in external entities should retain an independant base URI.

C14N could insert xml:base attributes on elements coming from the top-level
of an external entity to fix the problem in most cases.  The only case not
coverred is where an external entity has a processing instruction at the top
level.  There is no  opaque way to indicate that the base of such a pi is
different than the surrounding document.



