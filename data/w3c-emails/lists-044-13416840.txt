docno="lists-044-13416840"
received="Tue Aug  1 18:47:44 2000"
isoreceived="20000801224744"
sent="Tue, 1 Aug 2000 15:47:24 -0700"
isosent="20000801224724"
name="John Boyer"
email="jboyer@PureEdge.com"
subject="RE: Omission of the XML Version in C14N"
id="BFEDKCINEPLBDLODCODKKEBPCEAA.jboyer@PureEdge.com"
charset="us-ascii"
inreplyto="20000801000656Q.muraw3c&#64;attglobal.net"
expires="-1"

To:<muraw3c@attglobal.net>,<w3c-ietf-xmldsig@w3.org>
Cc:<w3c-xml-core-wg@w3.org>,<w3c-i18n-ig@w3.org>


Hi all,

xml version came up quite a while ago, and we decided to leave it out.  Our
rationale was the same one given by Tim Bray several months earlier, namely
that by leaving it out, we are implicitly declaring the document to be v1.0.
We are canonicalizing xml v1.0, not xml v1.1.  We can easily issue a new
c14n recommendation once the data models begin to support storage of the xml
declaration.

I don't know about the latest version of infoset (yet), but prior versions
of infoset didn't include the xml declaration, which is why the prior c14n
group also omitted the xml declaration.

I believe that an infoset for versions of xml after 1.0 MUST include the xml
declaration, and I cannot see the W3C failing to issue another XPath based
on the infoset data model to address the additional components of xml 1.1+.

John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143  f: 250-479-3772
1-888-517-2675   http://www.PureEdge.com <http://www.pureedge.com/>



-----Original Message-----
From: w3c-ietf-xmldsig-request@w3.org
[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of
muraw3c@attglobal.net
Sent: Monday, July 31, 2000 8:09 AM
To: w3c-ietf-xmldsig@w3.org
Cc: w3c-xml-core-wg@w3.org; w3c-i18n-ig@w3.org
Subject: Omission of the XML Version in C14N


The last call perior for the new C14N WD is over.  I should have
raised one issue.

Canonicalized documents do not contain XML declarations.
Is this OK?

First, XML should allow some of the newly-introducedcharacters of
Unicode 3.0 as name characters.  If we introduce them in V1.1 of XML,
validity (e.g., NMTOKEN) of an XML document will be dependent on the
XML version.

Second, Unicode character properties may vary, and thus the same
Unicode-aware regular expression of XML Schema Part 2 may behave
differently for different versions of XML.

Even if the XML version info is absent from APIs such as SAX and DOM,
should we always generate <?xml version="1.0"?>?

Cheers,

IBM Tokyo Research Lab &
International University of Japan, Research Institute

MURATA Makoto  (FAMILY Given)

Speaking for himself only.



