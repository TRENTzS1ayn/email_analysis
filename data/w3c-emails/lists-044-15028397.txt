docno="lists-044-15028397"
received="Fri Aug 25 10:38:39 2000"
isoreceived="20000825143839"
sent="Fri, 25 Aug 2000 16:36:48 +0200"
isosent="20000825143648"
name="Gregor Karlinger"
email="gregor.karlinger@iaik.at"
subject="AW: Proposed processing model for Reference and Transforms"
id="NDBBIMACDKCOPBLEJCCDOEPOCJAA.gregor.karlinger@iaik.at"
charset="us-ascii"
inreplyto="BFEDKCINEPLBDLODCODKMEIMCEAA.jboyer&#64;PureEdge.com"
expires="-1"

To:"John Boyer"<jboyer@PureEdge.com>,"TAMURA Kent"<kent@trl.ibm.co.jp>,"Gregor. Karlinger@Iaik. At"<gregor.karlinger@iaik.at>,"Joseph Reagle"<reagle@w3.org>,"Ed Simon"<ed.simon@entrust.com>
Cc:"XML DSig"<w3c-ietf-xmldsig@w3.org>,<jboyer@csr.csc.UVic.CA>


Hello John,

I think there is a problem with the new text for the base64 transform
(section 6.6.2):

It says: "... If an XPath node-set (or sufficiently functional alternative)
is
given as input, then it is converted to an octet stream by taking the
string-value of the node-set ..."

According to XPath, the text value for an element node is the concatenation
of
all text node values it bears. The text value for a text node is its
character
data. Consider following simple example:

  <Element>Text</Element>

If I generate the octet stream according to the new proposal, I think I
would
get:

  TextText

since there are two nodes in the input node set, namely the element and the
single text node it bears.

I remember that we had the same problem with the specification of the
serialization
result in Canonical XML. Maybe some additional text should be added here to
make it
clear how the conversion to an octet stream should actually behave.

Regards, Gregor
---------------------------------------------------------------
Gregor Karlinger
mailto://gregor.karlinger@iaik.at
http://www.iaik.at
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------







application/x-pkcs7-signature attachment: smime.p7s




