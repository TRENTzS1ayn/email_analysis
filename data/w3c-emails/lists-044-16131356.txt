docno="lists-044-16131356"
received="Tue Sep  5 20:51:52 2000"
isoreceived="20000906005152"
sent="Wed, 6 Sep 2000 09:51:13 +0900"
isosent="20000906005113"
name="TAMURA Kent"
email="kent@trl.ibm.co.jp"
subject="Re: minutes of 31 August 2000 Teleconference"
id="200009060051.JAA17676@ns.trl.ibm.com"
charset="US-ASCII"
inreplyto="200009050622.CAA01910&#64;torque.pothole.com"
expires="-1"


To:w3c-ietf-xmldsig@w3.org


In message "minutes of 31 August 2000 Teleconference"
    on 00/09/05, "Donald E. Eastlake 3rd" <dee3@torque.pothole.com> writes:
> Canonicalization:
> There was considerable discussion of the recently posted
> different method for handling namespaces in canonicalization.
> In brief, this new method imports the total namespace context
> only into the top level element of the canonicalized XML and
> removes redundant namespace declarations internal to this XML.
> This means that, in general, the canonical form of a
> subelement of some canonical XML is different from the form
> of that subelement in the original canonical XML.  There was
> a mildly favorable reaction to this change but some withheld
> their opinion pending attempting to actually implement it.

As John posted, it is not difficult to implement this change.
But I have not understood why this change is needed at this
moment....

> There was some discussion of continued unhappiness
> with treating all whitespace as significant.  This is still
> causing some difficulties with the library the Microsoft
> implementation is based on.  However, no one proposed a good
> solution.  You either have to assume validating parsing of
> all digested XML or treat white space as insignificant, which
> can be unsafe, to avoid the current treatment of all white
> space as significant.

I think there is no reason to remove insignificant whitespaces.

There are few XML processors that can provide a type of content
model of an element.  Schema language is not only DTD.  There
are W3C XML Schema, RELAX and so on.  It is almost impossible to
create an XML processor that supports all schema languages.

-- 
TAMURA Kent @ Tokyo Research Laboratory, IBM



