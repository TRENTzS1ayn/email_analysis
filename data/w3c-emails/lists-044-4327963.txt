docno="lists-044-4327963"
received="Tue Apr 11 03:09:28 2000"
isoreceived="20000411070928"
sent="Tue, 11 Apr 2000 10:09:11 +0300"
isosent="20000411070911"
name="Petteri Stenius"
email="Petteri.Stenius@remtec.fi"
subject="RE: XML Signature use of Canonical XML"
id="CD0FF8F92CA8D311B9AB00105A14D5570B1017@server.remtec.fi"
charset="iso-8859-1"
inreplyto="XML Signature use of Canonical XML"
expires="-1"


To:"'John Boyer'"<jboyer@PureEdge.com>,w3c-ietf-xmldsig@w3.org
Cc: Joseph Reagle<reagle@w3.org>



1) I'd rather see C14N used as the serialization algorithm for XPath. 

- this would solve the issues Kent has raised [1][2]
- also implementations become simpler, as you need to implement a single
serialization algorithm only (in addition to minimal)
- the idea would be to rewrite chapter 6.6.3.3 of [3] to use the C14N
specification for serialization of element nodes, attribute nodes etc.


I guess C14N was dropped for XPath sometime ago, but since that the
serialization algorithm of XPath has started to approach the C14N algorithm.



Petteri


[1]
http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0033.html
[2]
http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0034.html
[3]
http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/att-0011/01-
transforms3.htm



> -----Original Message-----
> From: John Boyer [mailto:jboyer@PureEdge.com]
> Sent: Friday, April 07, 2000 11:02 PM
> To: Ed Simon; w3c-xml-core-wg@w3.org; w3c-ietf-xmldsig@w3.org
> Cc: Joseph Reagle
> Subject: RE: XML Signature use of Canonical XML
> 
> 
> Hi all,
> 
> Is there some reason why the serialization algorithm 
> described in the latest
> XPath Transform spec cannot be used to
> 
> 1) Serialize SignedInfo without W3C c14n.  The serializer is 
> essentially
> like minimal c14n except that it takes into account the 
> limitations of some
> XML toolkits w.r.t. attribute order, assuming an XML 
> processor has been
> used, etc.
> 
> 2) Describe how to serialize fragments of XML (if you have a 
> fragment, where
> did you get it from? And if you got it from somewhere, isn't it always
> possible to think about it in terms of a parse tree (or rather a parse
> forest, aka a node-set)?).
> 
> John Boyer
> Software Development Manager
> PureEdge Solutions, Inc. (formerly UWI.Com)
> Creating Binding E-Commerce
> jboyer@PureEdge.com
> 
> 



