docno="lists-044-5194004"
received="Thu May 11 13:00:28 2000"
isoreceived="20000511170028"
sent="Thu, 11 May 2000 13:00:22 -0400"
isosent="20000511170022"
name="Joseph M. Reagle Jr."
email="reagle@w3.org"
subject="Re: Make it easy to create signable schemas (was: Re: XML    Signature WG's review of XML Schema)"
id="3.0.5.32.20000511130022.009cb910@localhost"
charset="us-ascii"
inreplyto="4.2.0.58.J.20000511143205.00c81ad0&#64;sh.w3.mag.keio.ac.jp"
expires="-1"


To:"Martin J. Duerst"<duerst@w3.org>
Cc:www-xml-schema-comments@w3.org,"IETF/W3C XML-DSig WG"<w3c-ietf-xmldsig@w3.org>,cmsmcq@w3.org

At 04:53 PM 5/11/00 +0900, Martin J. Duerst wrote:
 >- Because the 'boolean' datatype has four lexical values (true, false,
 >   1, 0; this is in the spec, no kidding) instead of two lexical values,
 >   that means that additional effort (at least) is necessary if somebody
 >   wants to create a schema for some data containing boolean values.

Martin, thank you for reminding me about this. I recall you've mentioned
this before and I believe we had an agreement from Michael to do something
about ensuring a consistent lexical representation of data types. I can't
find a URL for that agreement (I think it was sometime last year) but I can
find evidence that the WG was trying to satisfy that requirement (for
floating points at least):

3.2.3 - 3.2.5 Lexical notation of floating-point numbers 
[Where the author requested other notations]
AM>> This argument was made by several people but there was a strong
AM>> sentiment for a single
AM>> lexical representation.
http://lists.w3.org/Archives/Public/www-xml-schema-comments/2000AprJun/0043.h
tml

However, I'm not sure to what extent this is a problem (I'm expressing
ignorance, not arguing it isn't). If an XML instance uses '0' that is
signed, is there and expectation that since the schema permits a 'false' as
well, intermediary processors would change it? I appreciate this might
happen with character code mappings, but I tend to view schema's as
constraints on permissible values, and not a processor (in the vein of
infoset/C14N/DOM). (For instance, just because a schema permits an
unconstrained string, one wouldn't presume it would change the string ...?)

 >- If there is some way to express that elements of the same type
 >   have to appear in a certain order (don't know whether this is in
 >   the spec or not), this will also help to create schemata that can
 >   be used to validate data and then feed that data into XML DSig
 >   without any or without much processing.
 >
 >In other words, try to make sure that for appropriately designed
 >XML Schemas, no additional 'data canonicalization' step is necessary
 >to sign some data.
 
I don't quite follow. Element of the same element type? Can you give an
example?


_________________________________________________________
Joseph Reagle Jr.   
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/



