docno="lists-044-5740840"
received="Fri May 26 11:45:57 2000"
isoreceived="20000526154557"
sent="Fri, 26 May 2000 08:46:12 -0700"
isosent="20000526154612"
name="John Boyer"
email="jboyer@PureEdge.com"
subject="RE: XPath Serialization"
id="BFEDKCINEPLBDLODCODKAEPICCAA.jboyer@PureEdge.com"
charset="us-ascii"
inreplyto="4.2.0.58.J.20000526154147.0358d220&#64;sh.w3.mag.keio.ac.jp"
expires="-1"

To:"Martin J. Duerst"<duerst@w3.org>,"IETF/W3C XML-DSig WG"<w3c-ietf-xmldsig@w3.org>
Cc:<www-xml-linking-comments@w3.org>,"Steven_DeRose@Brown. edu"<Steven_DeRose@Brown.edu>


Hi Martin,

XPointer is not a recommendation at this point, so it may be that they will
see our definition of here() as better for the reasons I mentioned.

John Boyer
Software Development Manager
PureEdge Solutions Inc. (formerly UWI.Com)
Creating Binding E-Commerce
jboyer@PureEdge.com


-----Original Message-----
From: Martin J. Duerst [mailto:duerst@w3.org]
Sent: Thursday, May 25, 2000 11:44 PM
To: John Boyer; IETF/W3C XML-DSig WG
Subject: Re: XPath Serialization


At 00/05/23 11:04 -0700, John Boyer wrote:
>Hello all,
>
>Attached is the latest version of the XPath serialization spec.  The
>following changes were made:
>
>1) Changed character reference rendering to be uppercase hexadecimal with
no
>leading zeroes (e.g. &#xD; instead of &#x0D;).  This was decided at the
>Victoria FTF.
>
>2) Added the function here() to the XPath function library based on
requests
>by the group at and after the Victoria FTF.  You want to have a look at it,
>though, because it is defined slightly differently than in the current
>XPointer draft.  Basically, they define it to return the element containing
>the attribute or text node that bears the Xpath expression.  I changed that
>to returning the actuall attribute, text or other node (if you want the
>element, you can get the parent, but if you are given an element, but it
has
>more than one attribute bearing an Xpath, then there is room for ambiguity.
>
>I need feedback on this function, esp. from other implementers.

I'm not an implementer, but it is very clear that defining a function
with the same name but different behaviour is a very bad idea.
Either (preferred) just do what XPointer does, or rename your
function.


Regards,   Martin.



