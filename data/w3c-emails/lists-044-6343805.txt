docno="lists-044-6343805"
received="Wed Jun  7 16:57:43 2000"
isoreceived="20000607205743"
sent="Wed, 7 Jun 2000 13:57:55 -0700"
isosent="20000607205755"
name="John Boyer"
email="jboyer@PureEdge.com"
subject="RE: Simple subtree() function for Xpath transform and c14n"
id="BFEDKCINEPLBDLODCODKGECLCDAA.jboyer@PureEdge.com"
charset="us-ascii"
inreplyto="3.0.5.32.20000607164320.01bffb58&#64;localhost"
expires="-1"

To:"Joseph M. Reagle Jr."<reagle@w3.org>
Cc:"XML DSig"<w3c-ietf-xmldsig@w3.org>,"Henry S. Thompson"<ht@cogsci.ed.ac.uk>,"Philippe Le Hegaret"<plh@w3.org>,<jboyer@csr.csc.UVic.CA>,"Dan Connolly"<connolly@w3.org>


Hi Joseph,

Actually, no.  We do not have to go back to clean-URIs.  If the XPtr
barename meaning does not change, then we only need to tweak our definition
of what we intend to do with the result of the barename.

The current dsig spec says that the text we generate for URI="#E" is
equivalent to what the XPath transform would produce as the result of
id("E").  This was under the incorrect assumption that id("E") meant the
whole subtree rooted at E (i.e. the whole SignedInfo).  The addition of a
subtree function means that you can say that URI="#E" is equivalent to what
the XPath transform would produce as the result of subtree(id("E")).

Alternately, we could simply say that the result of the Xptr barename is an
XPath node-set equivalent to calling id("E").  We then use this node-set as
an initial evaluation context to an implicit XPath transform with the
expression "subtree()".

John Boyer
Software Development Manager
PureEdge Solutions Inc. (formerly UWI.Com)
Creating Binding E-Commerce
jboyer@PureEdge.com



