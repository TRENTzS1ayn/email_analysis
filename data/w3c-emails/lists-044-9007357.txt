docno="lists-044-9007357"
received="Fri Feb 25 03:17:02 2000"
isoreceived="20000225081702"
sent="Fri, 25 Feb 2000 09:16:04 +0100"
isosent="20000225081604"
name="Gregor Karlinger"
email="Gregor.Karlinger@iaik.at"
subject="Re: Faulty DTD of Object element"
id="38B63A44.487BAFC3@iaik.at"
charset="us-ascii"
inreplyto="3.0.5.32.20000224194225.0492a430&#64;localhost"
expires="-1"


To:"Joseph M. Reagle Jr."<reagle@w3.org>
CC: ML W3C XML-Signature<w3c-ietf-xmldsig@w3.org>

"Joseph M. Reagle Jr." wrote:

> Ed is correct about the statement regarding ANY. (ANY = element types within
> the DTD). Consequently, we use #PCDATA. XML1.0 does permit MIXED content
> models:

Sorry, I did not know the exact meaning of #PCDATA (see below). With the
definition Ed gives for it , the DTD of Object seems to be what it should be ;-)

[...]

>         <!ELEMENT b (#PCDATA)>

[...]

> Such that we could do the following:
>         <!ELEMENT Object ((#PCDATA  | SignatureProperties | Manifest)*) >
>         <!ELEMENT KeyValue  ((#PCDATA | DSAKeyValue | RSAKeyValue )*) >

[...]

> However, while I can get XMetalPro to compile and validate instances with
> that declaration, I can't get IE (and I'm not sure if my declaration is bugg
> or not ...) so I avoid them.

I have also made this experience with a XML parser API from Sun: If I declare

  <!ELEMENT Object (#PCDATA)>

then the instance

  <Object>
    <ATag>Some text</ATag>
  </Object>

does not validate. The validating API parser throws an exception because it
only expects character data. So this parser does not behave like #PCDATA
is intended to mean (as Ed described in his contribution).

-- 
---------------------------------------------------------------
Gregor Karlinger
mailto://gregor.karlinger@iaik.at
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------





application/x-pkcs7-signature attachment: smime.p7s




