docno="lists-045-11269676"
received="Mon Jul 30 11:53:54 2001"
isoreceived="20010730155354"
sent="Mon, 30 Jul 2001 17:53:37 +0200"
isosent="20010730155337"
name="Gregor Karlinger"
email="gregor.karlinger@iaik.at"
subject="RE: Questions about c14n implementation"
id="LBEPJAONIMDADHFHAEAOCENHCHAA.gregor.karlinger@iaik.at"
charset="us-ascii"
inreplyto="74636634.996507049&#64;clouseau"
expires="-1"

To:"Christian Geuer-Pollmann"<geuer-pollmann@nue.et-inf.uni-siegen.de>,"Donald E. Eastlake 3rd"<dee3@torque.pothole.com>
Cc:<w3c-ietf-xmldsig@w3.org>


Christian,

> >> 2. Question: How did you check the 3rd processor requirement:
> >> "Implementations MUST NOT be implemented with an XML parser that
> >> converts relative URIs to absolute URIs." . How should a parser (like
> >> Xerces) convert a URI? Does a parser understands what a URI is?
> 
> > Don't know about a parser but a schema verifier would, I think.
> > If it knows that some attribute value is a URI, who knows what
> > it might do to it... knowledge can be a dangerous thing.
> 
> OK, this relates to Schema. My question is:
> 
> Do we have some test vectors (like 3.1-3.7 examples in the c14n 
> spec) that 
> define the correct behaviour? I'm looking for test vectors 
> (correct and bad 
> ones) that allow me to ensure functionality of my implementation. For 
> instance I want to ensure that an input like
> 
> <absolute:correct      
> xmlns:absolute='http://www.absolute.org/#likeVodka'>
> <relative:incorrect    xmlns:relative='../cheating#away'>
> </relative:incorrect>
> </absolute:correct>
> 
> throws an CanonicalizationException because of the use of 
> relative URIs. Do 
> we have something like this for the above topic?
> 
> Question to IBM and IAIK: How did you test this behaviour?

Our C14n implementation scans through all namespace nodes of the input
nodeset and tests if any of them has a relative URI as its value. If
yes, a C14N exception will be thrown.

Obviously it cannot be tested if the underlying parser convertes relative 
in absolute namespace URIs. This has to be tested seperatly with the 
employed parser. We use Xerces, and Xerces does no conversion.

Regards, Gregor



