docno="lists-045-14011770"
received="Mon Oct 29 19:36:07 2001"
isoreceived="20011030003607"
sent="Mon, 29 Oct 2001 16:35:34 -0800"
isosent="20011030003534"
name="John Boyer"
email="JBoyer@PureEdge.com"
subject="RE: My latest try on Exclusive XML Canonicalization"
id="7874BFCCD289A645B5CE3935769F0B520C34B3@tigger.PureEdge.com"
charset="iso-8859-1"
inreplyto="My latest try on Exclusive XML Canonicalization"
expires="-1"


To:<reagle@w3.org>,<w3c-ietf-xmldsig@w3.org>

Hi Joseph,

I believe the XPath expressions in the examples need to have namespace
qualifiers on them, e.g. ancestor-or-self::n1:elem1 rather than just
ancestor-or-self::elem1

Also, in a transform the namespace would have to be defined so that the
expression would evaluation correctly.

Thirdly, the parameter name InclusiveNamespacePrefix seems odd because
it is in singular form yet clearly it communicates a list.  How about
<InclusiveNamespaces List="foo bar"/>

Finally, looks like the reference to XML DSig in the ref list needs
work.

Other than these, I didn't see any problems with the latest version.

Cheers,
John Boyer
PureEdge Solutions Inc.

-----Original Message-----
From: Joseph Reagle [mailto:reagle@w3.org]
Sent: Monday, October 29, 2001 2:20 PM
To: hirsch@zolera.com; w3c-ietf-xmldsig@w3.org
Subject: Re: My latest try on Exclusive XML Canonicalization


[
  http://www.w3.org/Signature/Drafts/xml-exc-c14n
  $Revision: 1.7 $ on $Date: 2001/10/29 22:18:32 $ GMT by $Author:
reagle $
]

Ok I beleive I've fixed the schema definition, and I also updated the 
section and references links.

On Monday 29 October 2001 13:56, Frederick Hirsch wrote:
> A minor question on the Schema definition, should it be
>
> <complexType name="InclusiveNamespacePrefixType">
>   <attribute name="List" type="NMTOKENS"/>
> </complexType>
>
> where the spelling of complexType has changed, the name includes Type
as
> part of the name and the attribute attribute is an empty element.
>
> In section 3 on the implementation method, I found step 2 slightly
> confusing (If node is not in the subset then recurse). I think it
means,
> if the node is not in the subset, process the children of the node
> recursively, regardless.

-- 

* I will be in France from 3-9 November for the W3C AC Meeting.

Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature/
W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/



