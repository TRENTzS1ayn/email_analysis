docno="lists-045-14628726"
received="Fri Dec 14 13:36:47 2001"
isoreceived="20011214183647"
sent="Fri, 14 Dec 2001 18:36:43 +0000"
isosent="20011214183643"
name="Jeni Tennison"
email="jeni@jenitennison.com"
subject="Re: Erratum: XPaths in Canonical XML Recommendation"
id="7913773515.20011214183643@jenitennison.com"
charset="us-ascii"
inreplyto="7874BFCCD289A645B5CE3935769F0B523258DF&#64;tigger.PureEdge.com"
expires="-1"


To:"John Boyer"<JBoyer@PureEdge.com>
CC:w3c-ietf-xmldsig@w3.org

Hi John,

> Thanks for the note, but I don't understand why you claim that //.
> is illegal. From the XPath spec:
>
> Expr -> ... -> LocationPath -> AbsoluteLocationPath ->
> AbbreviatedAbsoluteLocationPath -> '//' RelativeLocationPath -> '//'
> Step -> '//' AbbreviatedStep -> '//.'
>
> Clearly it is legal according the BNF rules in the XPath
> specification. Perhaps you have an implementation of XPath that
> contains an error?

Cripes, you're right. I apologise. I'd never seen that construction
used before because it's meaningless except, I guess, in this case.
When you write it out in full you can see why:

  /descendant-or-self::node()/self::node()

is equivalent to:

  /descendant-or-self::node()

Sorry for my error,

Jeni

---
Jeni Tennison
http://www.jenitennison.com/



