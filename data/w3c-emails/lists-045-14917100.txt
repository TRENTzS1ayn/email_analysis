docno="lists-045-14917100"
received="Tue Apr  2 18:39:46 2002"
isoreceived="20020402233946"
sent="Tue, 2 Apr 2002 18:39:03 -0500 "
isosent="20020402233903"
name="NACHIMUTHU,PALANIAPPAN (HP-Cupertino,ex1)"
email="npal@hp.com"
subject="RE: Additional test cases for Exclusive XML Canonicalization"
id="155C6BB395577C4EA8F65A9ADA9F2104B37BA9@xcup01.cup.hp.com"
inreplyto="Additional test cases for Exclusive XML Canonicalization"
expires="-1"


To:"'Gregor Karlinger'"<gregor.karlinger@iaik.at>
Cc:"'XMLSigWG'"<w3c-ietf-xmldsig@w3.org>

This is probably a newbie question. In the examples 2, 3 and 4 there's an
additionalNSPrefixes value next to the xpath expression. Where shd this be
used, and how? Is it supposed to be passed to the XPath evaluator? (I don't
see an API to pass multiple namespace nodes in the Xalan XPath
implementation...)

regards,
Palani

-----Original Message-----
From: Gregor Karlinger [mailto:gregor.karlinger@iaik.at]
Sent: Monday, April 01, 2002 8:52 PM
To: reagle@w3.org
Cc: 'XMLSigWG'
Subject: RE: Additional test cases for Exclusive XML Canonicalization


Joseph,

the XPaths I have provided for my examples are node tests in the sense
of the XPath Transform specified in XMLDSIG. 

So, if you take the well-known ;-) "//. | //@ | //namespace::*" and add
my XPath expression as its node test, you should get the right results.

/Gregor

> -----Original Message-----
> From: w3c-ietf-xmldsig-request@w3.org 
> [mailto:w3c-ietf-xmldsig-request@w3.org] On Behalf Of Joseph Reagle
> Sent: Friday, March 29, 2002 11:02 PM
> To: Gregor Karlinger
> Cc: XMLSigWG
> Subject: Re: Additional test cases for Exclusive XML Canonicalization
> 
> 
> On Tuesday 26 March 2002 06:32, Gregor Karlinger wrote:
> >   2. Apply a XPath Transform with the appropriate XPath
> >      (specified in a comment in the test case file)
> 
> Hi Gregor, 
> 
> I'm a little confused on this note. When I pass your xpath expression 
> 
>   test_c14n.py -i iaikTests.example1.xml -x "self::Parent or
>   (parent::Parent and not(self::Child)) or self::GrandChild or
>   parent::GrandChild"
> 
> I get a (not  very useful) error [1]. But I'd still expect and error 
> because I'm not sure which BNF productions you are expecting 
> this XPath 
> expression to match?
> 
> However, the following does work and agrees with your result 
> for test 1:
> 
>   test_c14n.py -e -i iaikTests.example1.xml 
>   -x "(//. | //@* | //namespace::*)[self::Parent or (parent::Parent
>    and not(self::Child)) or self::GrandChild or parent::GrandChild]"
> 
> 
> [1]     _in_subset = lambda subset, node: subset is None or 
> node in subset 
> TypeError: 'in' or 'not in' needs sequence right argument
> 
> 



