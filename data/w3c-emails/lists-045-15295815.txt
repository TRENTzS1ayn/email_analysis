docno="lists-045-15295815"
received="Mon Apr  8 19:57:19 2002"
isoreceived="20020408235719"
sent="Mon, 08 Apr 2002 16:56:17 -0700"
isosent="20020408235617"
name="Aleksey Sanin"
email="aleksey@aleksey.com"
subject="Re: New Version of XPath Filter"
id="3CB22E21.5090107@aleksey.com"
charset="KOI8-R"
inreplyto="7874BFCCD289A645B5CE3935769F0B5232854F&#64;tigger.PureEdge.com"
expires="-1"


To: John Boyer<JBoyer@PureEdge.com>
CC: merlin<merlin@baltimore.ie>,reagle@w3.org,w3c-ietf-xmldsig@w3.org

Merlin, John,

I could not prove my point of view with any performance data. As I said
it's quite complicated and I am not sure that I can suggest good test cases.

As far as I can understand your point, this XPath transform was designed
to select node and all nodes childs. In this case, why do we call it XPath?
Why we do not call it XPointer transform? From my point of view, XPath
produces *arbitrary* nodes sets. And as an implementor or a user I would 
expect
that "XPath transform" will operate with the nodes set produced by XPath.
Not something, produced from it.

 From my point of view, this new transform *restricts* XPath expressions
functionality and makes things more complicated. However, nobody agrees
with me so probably things will stay "as is".

Aleksey.



