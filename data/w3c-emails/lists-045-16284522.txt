docno="lists-045-16284522"
received="Mon May 13 17:45:56 2002"
isoreceived="20020513214556"
sent="Mon, 13 May 2002 14:43:53 -0700"
isosent="20020513214353"
name="Aleksey Sanin"
email="aleksey@aleksey.com"
subject="Re: Performace data and comparison"
id="3CE03399.1060206@aleksey.com"
charset="KOI8-R"
inreplyto="20020513191058.4119A4431D&#64;yog-sothoth.ie.baltimore.com"
expires="-1"


To: Christian Geuer-Pollmann<geuer-pollmann@nue.et-inf.uni-siegen.de>
CC:reagle@w3.org, John Boyer<JBoyer@PureEdge.com>,w3c-ietf-xmldsig@w3.org

Christian,

Will you the signed documents for apachesample_xfilter2_* tests, please?
I am interesting in doing XML Sec library performance testsing but I am
not sure I want to check out and install Java sources to create these 
examples.

Thanks,

Aleksey.


>>--On Donnerstag, 9. Mai 2002 23:50 +0200 Christian Geuer-Pollmann 
>><geuer-pollmann@nue.et-inf.uni-siegen.de> wrote:
>>
>>>When you look at the results below, you see that each step in the
>>>xfilter2spec_xfilter2_(1/2/3) adds more processing time, while this is
>>>not the case for 'my' transform: I can't tell why they are as they are.
>>>
>>I constructed an obfuscated example in which I select some subtrees for 
>>inclusion/exclusion. To get the final result, I must perform 7 xfilter2 
>>transforms. Each transform adds more overhead. To test how much each 
>>transform requires, I ran the test suite 10 times, while the first test 
>>only did the 1st transform, the second test included the 1st and the 2nd 
>>transform while the 7th test included all seven steps. The results are 
>>shown below
>>
>>10 * apachesample_xfilter2_1     took  5,097 seconds
>>10 * apachesample_xfilter2_2     took  5,879 seconds
>>10 * apachesample_xfilter2_3     took  6,790 seconds
>>10 * apachesample_xfilter2_4     took  7,290 seconds
>>10 * apachesample_xfilter2_5     took  8,442 seconds
>>10 * apachesample_xfilter2_6     took  9,503 seconds
>>10 * apachesample_xfilter2_7     took 10,475 seconds
>>
>>You can see that the required time is strictly monotonic increasing for 
>>each added transform step. To check that against my own algorithm, I write 
>>7 transforms which achieve the same results as the corresponding xfilter2 
>>ones:
>>
>>10 * apachesample_apachefilter_1 took  5,207 seconds
>>10 * apachesample_apachefilter_2 took  5,638 seconds
>>10 * apachesample_apachefilter_3 took  5,408 seconds
>>10 * apachesample_apachefilter_4 took  5,478 seconds
>>10 * apachesample_apachefilter_5 took  5,528 seconds
>>10 * apachesample_apachefilter_6 took  5,508 seconds
>>10 * apachesample_apachefilter_7 took  5,358 seconds
>>
>>You can  see that the time is -- well, not constant, but does not show this 
>>heavy dependency to take longer for complexer selections.
>>
>>BTW, if you wanna check this yourself, the implementation of the transform 
>>[1] is in the Apache CVS, the test suite also [2].
>>
>>Kind regards,
>>Christian
>>
>>
>>[1] 
>><http://cvs.apache.org/viewcvs.cgi/xml-security/src/org/apache/xml/security
>>/transforms/implementations/TransformXPathFilterCHGP.java?rev=1.2&content-t
>>ype=text/vnd.viewcvs-markup>
>>
>>[2] 
>><http://cvs.apache.org/viewcvs.cgi/xml-security/src_samples/org/apache/xml/
>>security/samples/TransformPerformanceTester.java?rev=1.3&content-type=text/
>>vnd.viewcvs-markup>
>>
>
>
>-----------------------------------------------------------------------------
>The information contained in this message is confidential and is intended
>for the addressee(s) only.  If you have received this message in error or
>there are any problems please notify the originator immediately.  The 
>unauthorised use, disclosure, copying or alteration of this message is 
>strictly forbidden. Baltimore Technologies plc will not be liable for
>direct, special, indirect or consequential damages arising from alteration
>of the contents of this message by a third party or as a result of any 
>virus being passed on.
>
>This footnote confirms that this email message has been swept for Content
>Security threats, including computer viruses.
>http://www.baltimore.com
>



