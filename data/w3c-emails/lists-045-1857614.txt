docno="lists-045-1857614"
received="Fri Nov  3 12:43:04 2000"
isoreceived="20001103174304"
sent="Fri, 3 Nov 2000 09:42:58 -0800"
isosent="20001103174258"
name="John Boyer"
email="jboyer@PureEdge.com"
subject="RE: Call for Implementation: Canonical XML Becomes a W3C Candidate   Recommendation"
id="BFEDKCINEPLBDLODCODKMEDHCGAA.jboyer@PureEdge.com"
charset="us-ascii"
inreplyto="NDBBIMACDKCOPBLEJCCDOEBFCNAA.gregor.karlinger&#64;iaik.at"
expires="-1"

To:"Gregor Karlinger"<gregor.karlinger@iaik.at>,"Joseph M. Reagle Jr."<reagle@w3.org>,"IETF/W3C XML-DSig WG"<w3c-ietf-xmldsig@w3.org>


Hi Gregor,

Yes, non-validating parsers are supposed to recognize the types of
attributes, unless they have been unable to read the declaration (e.g. due
to external declaration), but c14n covers this too by requiring that such a
processor be augmented to read the attribute types so that it can normalize
attributes as if it were a validating processor.

Though an additional encumbrance, this is far less work than actually
requiring the validation work.

The example cases should not pose a problem, though, because the
declarations are internal so even a non-validating parser knows the types of
the attributes and how to normalize the attributes.

John Boyer
Development Team Leader,
Distributed Processing and XML
PureEdge Solutions Inc.
Creating Binding E-Commerce
v: 250-479-8334, ext. 143  f: 250-479-3772
1-888-517-2675   http://www.PureEdge.com <http://www.pureedge.com/>




-----Original Message-----
From: Gregor Karlinger [mailto:gregor.karlinger@iaik.at]
Sent: Friday, November 03, 2000 2:22 AM
To: Joseph M. Reagle Jr.; John Boyer; IETF/W3C XML-DSig WG
Subject: AW: Call for Implementation: Canonical XML Becomes a W3C
Candidate Recommendation


> Hi Joseph,
>
> please add IAIK's implementation.
>
> I will give you a report what our implementation is conform with at the
> end of next week.

Joseph,

Please fill in a "Y" in all fields of the matrix, with the following
constraints:

* Example 4 does not result in the expected canonicalization, since the
  XML parser used does not correctly normalize an attribute of type ID.

* Example 7 only results in the expected canonicalization, if the test
  file is modified in a way, that the example can be parsed using a
  validating parser. Otherwise the id function in the document subset
  selector XPath will not return any element.

John,

a question regarding example 7: Can I really expect from a non validating
parser, that it recognizes the types of attributes, especially the type
of ID attributes? If not, then an XPath using the id() function cannot be
used for selecting a document subset to be canonicalized.

Regards, Gregor
---------------------------------------------------------------
Gregor Karlinger
mailto:gregor.karlinger@iaik.at
http://www.iaik.at
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------



