docno="lists-045-2307608"
received="Fri Nov 17 03:39:27 2000"
isoreceived="20001117083927"
sent="Fri, 17 Nov 2000 17:38:51 +0900"
isosent="20001117083851"
name="TAMURA Kent"
email="kent@trl.ibm.co.jp"
subject="Re: AW: Call for Implementation: Canonical XML Becomes a W3C Candidate   Recommendation"
id="200011170838.RAA43344@ns.trl.ibm.com"
charset="US-ASCII"
inreplyto="BFEDKCINEPLBDLODCODKAEGHCGAA.jboyer&#64;PureEdge.com"
expires="-1"


To:w3c-ietf-xmldsig@w3.org


In message "RE: AW: Call for Implementation: Canonical XML Becomes a W3C Candidate   Recommendation"
    on 00/11/10, "John Boyer" <jboyer@PureEdge.com> writes:
> As well, your assertion that the Xerces DOM parser cannot select by id
> unless using validation seems, on the surface, to contradict IBM's
> interoperability report since they are most certainly using Xerces and yet
> were able to complete example 3.7.
> 
> Moreover, if the id() function is something you have to implement, it is not
> actually very hard to implement as long as 1) the parser correctly types the
> id attribute when not validating, and 2) it is easy to hook your resulting
> id() function into the Xpath implementation that evaluates the expression
> given in example 3.7.  Are you saying that one of these two things isn't
> working.

The Document.getElementsById() method of Xerces-J's DOM
implementation works only with the validating parser.  while I
tested the example 3.7, the parser output many validation
errors.  Fortunately, the parser does not stop parsing and
validation on a validation error.

In general, a validating XML processor MAY stop parsing on a
validation error, and a non-validating XML processor need not
process attribute types.  We would not get correct results of
example 3.4 and 3.7 with such XML processors.  I think example
3.4 and 3.7 have to be modified so that they become valid
documents.

-- 
TAMURA Kent @ Tokyo Research Laboratory, IBM



