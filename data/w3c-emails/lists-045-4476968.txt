docno="lists-045-4476968"
received="Wed Apr 25 05:43:43 2001"
isoreceived="20010425094343"
sent="Wed, 25 Apr 2001 10:42:56 +0100"
isosent="20010425094256"
name="merlin"
email="merlin@baltimore.ie"
subject="Re: additional XMLDSIG URIs"
id="20010425094257.4381044096@yog-sothoth.ie.baltimore.com"
inreplyto="200104170359.XAA0000057007&#64;torque.pothole.com"
expires="-1"

To:"Donald E. Eastlake 3rd"<dee3@torque.pothole.com>
Cc:w3c-ietf-xmldsig@w3.org



Hi,

Another URI I would like to propose is an XPointer
transform. When we removed support for remote
references with fragment identifiers, we lost some
useful expressivity that XPath doesn't efficiently
solve. I'd propose something very like XPath:

Algorithm=http://www.w3.org/TR/2001/WD-xptr-20010108

Obviously this is still a working draft, but we're
not producing a standards track document so we should
be able to update when it becomes a rec.

Encoded with an XPointer child element containing the
text-form pointer.

<Transform Algorithm="http://www.w3.org/TR/2001/WD-xptr-20010108">
  <XPointer>
    xpointer(id("foo")) xmlns(bar=urn:baz) xpointer(//bar:Zab[@Id="foo"])
  </XPointer>
</Transform>

Input is an octet stream (which is then parsed into
XML document by the transform). If the input is a
node set then it is c14n'ed.

Output is a node set; the results of the XPointer
are processed as defined in the XMLDSIG spec for a
same-document XPointer.

Merlin


-----------------------------------------------------------------------------
Baltimore Technologies plc will not be liable for direct,  special,  indirect 
or consequential  damages  arising  from  alteration of  the contents of this
message by a third party or as a result of any virus being passed on.

In addition, certain Marketing collateral may be added from time to time to
promote Baltimore Technologies products, services, Global e-Security or
appearance at trade shows and conferences.

This footnote confirms that this email message has been swept by
Baltimore MIMEsweeper for Content Security threats, including
computer viruses.
   http://www.baltimore.com



