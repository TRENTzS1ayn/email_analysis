docno="lists-045-5283513"
received="Thu May 17 03:52:27 2001"
isoreceived="20010517075227"
sent="Thu, 17 May 2001 09:48:11 +0200"
isosent="20010517074811"
name="Gregor Karlinger"
email="gregor.karlinger@iaik.at"
subject="AW: DName encoding (was:KeyName white space)"
id="LBEPJAONIMDADHFHAEAOGEMCCFAA.gregor.karlinger@iaik.at"
charset="iso-8859-1"
inreplyto="20010516134136.0E8EB44A86&#64;yog-sothoth.ie.baltimore.com"
expires="-1"

To:"merlin"<merlin@baltimore.ie>,"Gregor Karlinger"<gregor.karlinger@iaik.at>
Cc:"Tom Gindin"<tgindin@us.ibm.com>,<duerst@w3.org>,<w3c-ietf-xmldsig@w3.org>


Merlin,

> Hi Gregor,
> 
> I would actually suggest something much simpler:
> 
> Encoding:
>   Take the RFC 2253-encoded name, replace all characters < 32
>   with \XX (RFC 2253 hex encoding) and then UTF-8 decode this.
>   Whitespace format if desired.

> Decoding:
>   Trim whitespace, UTF-8 encode the text and you have the RFC
>   2253-encoded name.

Taking the whole RFC 2253 encoded name leads to the problem that
insignificant white space will turn into significant whitespace
after one round of encoding and decoding:

  Original: "CN=  Gregor Karlinger" (so the value of the AVA is
  "Gregor Karlinger")

  After encoding and decoding: "CN=\20\20Gregor Karlinger" (after
  additionally de-escaping the value of the AVA is now 
  "  Gregor Karlinger")

This is the reason why I wrote "on how to encode A STRING IN a 
DName" in my proposal.

Liebe Gruesse/Regards, 
---------------------------------------------------------------
DI Gregor Karlinger
mailto:gregor.karlinger@iaik.at
http://www.iaik.at
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------
  






application/x-pkcs7-signature attachment: smime.p7s




