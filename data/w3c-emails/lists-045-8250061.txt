docno="lists-045-8250061"
received="Wed Jan 24 03:03:37 2001"
isoreceived="20010124080337"
sent="Wed, 24 Jan 2001 09:07:16 +0100"
isosent="20010124080716"
name="Gregor Karlinger"
email="gregor.karlinger@iaik.at"
subject="AW: KeyInfo Extensibility poll"
id="NDBBIMACDKCOPBLEJCCDGEKEDAAA.gregor.karlinger@iaik.at"
charset="iso-8859-1"
inreplyto="200101231954.OAA27293&#64;noah.dma.isg.mot.com"
expires="-1"

To:"Donald E. Eastlake 3rd"<lde008@dma.isg.mot.com>,<w3c-ietf-xmldsig@w3.org>


Donald,

[...]

> (2) In this case, one would logically recommend adding subelements to
> SPKIData, X509Data, or PGPData where you are complementing it but if
> you are replacing it with a sufficiently new SPKI, X509, or PGP key
> info element, then you should define a new element under KeyInfo as
> you would if you were defining a entirely new type of child element
> under KeyInfo.

I think that (2) should be the way if SPKIData/X509Data/PGPData is to
be complemented by some additional information. This would allow that
implementations not aware of the complementing subelements can still 
evaluate the SPKIData/X509Data/PGPData.

If the changes to such types are so substantially, that they do not
share a minimal structure with the ur types, then I think completely
new elements under KeyInfo should be defined.

I do not see a good reason for allowing (3). If you want to introduce
typing, use the means XML Schema provides, i.e. do it as proposed in (1).

Regards, Gregor
---------------------------------------------------------------
DI Gregor Karlinger
mailto:gregor.karlinger@iaik.at
http://www.iaik.at
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------
 



