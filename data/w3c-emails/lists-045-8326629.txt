docno="lists-045-8326629"
received="Thu Jan 25 02:48:28 2001"
isoreceived="20010125074828"
sent="Thu, 25 Jan 2001 08:52:12 +0100"
isosent="20010125075212"
name="Gregor Karlinger"
email="gregor.karlinger@iaik.at"
subject="AW: AW: KeyInfo Extensibility poll"
id="NDBBIMACDKCOPBLEJCCDGELIDAAA.gregor.karlinger@iaik.at"
charset="iso-8859-1"
inreplyto="20010124175732.47C6C44987&#64;yog-sothoth.ie.baltimore.com"
expires="-1"

To:"merlin"<merlin@baltimore.ie>
Cc:"Carl Wallace"<cwallace@erols.com>,"Donald E. Eastlake 3rd"<lde008@dma.isg.mot.com>,<w3c-ietf-xmldsig@w3.org>


Hi Merlin,

> >You are right, this is the cleaner solution, since there are less options
> >to do similar things. But (2) allows it to augment types, and this types
> >can still be used by applications only aware of the basic XML-Signature
> >syntax.
> 
> If the data is critical to understanding an X509Data, then we
> agree that a new type MyX509Data must be defined. If it is not
> critical to understanding the X509Data, then why not place it
> in an X509DataExt element within the KeyInfo?
> 
> I just don't see the tangible benefit of dirtying (you seem to
> agree that 2 is less clean) our primitive types.

I discussed this issue further (off-list) with Carl, and I have to
admit, the longer we talk about it, the less I am convinced of
the benefits of (2). My consideration was the same one as those in
your second paragraph above.

Regards, Gregor
---------------------------------------------------------------
DI Gregor Karlinger
mailto:gregor.karlinger@iaik.at
http://www.iaik.at
Phone +43 316 873 5541
Institute for Applied Information Processing and Communications
Austria
---------------------------------------------------------------
 



