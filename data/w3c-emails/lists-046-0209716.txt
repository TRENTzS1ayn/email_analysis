docno="lists-046-0209716"
received="Fri May 24 12:24:36 2002"
isoreceived="20020524162436"
sent="Fri, 24 May 2002 18:29:44 +0200"
isosent="20020524162944"
name="Christian Geuer-Pollmann"
email="geuer-pollmann@nue.et-inf.uni-siegen.de"
subject="Interop and c14n(x) != c14n(c14n(x))"
id="38429498.1022264983@crypto"
charset="us-ascii"
inreplyto="20020524140256.E7A8C859F4&#64;aeon.w3.org"
expires="-1"

To:reagle@w3.org, merlin<merlin@baltimore.ie>
Cc: Gregor Karlinger<gregor.karlinger@iaik.at>,w3c-ietf-xmldsig@w3.org


> Yes, *and* when you do copy all the xml:* from the ancestors because of a
> missing parent element you go *all* the way up to the root, not just up
> to  the next ancestor element in the subset. Counter-intuitive but the
> spec is  clear once you get over your intuitions -- I had the same
> problem! [1]

First, here is my example on c14n and exclC14n. Maybe others can validate? 
Thanks. (secret key for hmac is six octets of "secret").


This weird behaviour of c14n of document subsets leads to a very strange 
result. Till today, my understanding of c14n was that given some input 'X', 
the c14n algorithm can be applied multiple times without changing the 
result. But now, I see that

1.) Given a document subset 'X' with a form that the above rule comes to 
play.

2.) Then we see that

        c14n(X) != c14n(c14n(x))

I included a sample for this (the last three references) in the interop.



Regards,
Christian




application/x-zip-compressed attachment: apache_c14n_inclExcl.zip




