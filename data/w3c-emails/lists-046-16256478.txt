docno="lists-046-16256478"
received="Wed Apr 18 13:17:44 2001"
isoreceived="20010418171744"
sent="Wed, 18 Apr 2001 18:17:38 +0100"
isosent="20010418171738"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Referring to resources in RDF attributes"
id="3ADDCC32.8EFCD267@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="5.0.2.1.2.20010418090519.03920410&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<GK@NineByNine.org>
CC: RDF comments<www-rdf-comments@w3.org>, RDF core WG<w3c-rdfcore-wg@w3.org>

Graham,

Thank you for raising this issue.  I have added it to the issues list
as:

  http://www.w3.org/2000/03/rdf-tracking/#rdfms-qnames-as-attrib-values

Brian


Graham Klyne wrote:
> 
> A possible RDF issue?
> 
> I recognize RDF core WG is not strictly chartered to make changes to the
> RDF syntax, but there is a small change that I think could greatly enhance
> usability of RDF, if it doesn't break any other rules.
> 
> Currently, resource identifier values specified in attributes such as
> "about", "resource", "aboutEach" and "type" are specified as
> URI-references.  The same resources used in element or attribute names are
> specified as Qnames.
> 
> I have for some time assumed that there is a good reason for Qname syntax
> to be unavailable in attribute values but I recently noticed another
> specification that allows interpretation Qnames in attribute values, which
> leads me to question my assumption.
> 
> In the CC/PP specification [1] examples, DTD entity definitions are used to
> make such attributes more readable, but this has been criticized as being
> incompatible with future directions for XML.  It would be so much easier if
> Qnames could be used here.  I have noticed similar complications in other
> examples of RDF.
> 
> So, what would be the possible problems of allowing Qnames in the RDF/XML
> syntax for the attributes mentioned?
> 
> (a) does it break any assumed processing models?  I don't think so, but I'm
> not certain about this.
> 
> (b) how does one distinguish between a Qname and a 'bare' URI-reference
> (the bare URI form MUST be allowed for backward compatibility)?
> 
> Here's a simple example of the kind of thing I am thinking of:
> 
> Current RDF syntax:
> 
>    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
>             xmlns:rdfs="http://www.w3.org/1999/PR-rdf-schema-19990303#">
>      <rdf:Description about="http://www.example.org/Set">
>        <rdf:type
> resource="http://www.w3.org/1999/PR-rdf-schema-19990303#Class"/>
>        <rdfs:subClassOf
> rdf:resource="http://www.w3.org/1999/PR-rdf-schema-19990303#Container"/>
>      </rdf:Description>
>    </rdf:RDF>
> 
> Using Qnames:
> 
>    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
>             xmlns:rdfs="http://www.w3.org/1999/PR-rdf-schema-19990303#"
>             xmlns:eg="http://www.example.org/Set">
>      <rdf:Description about="eg:Set">
>        <rdf:type resource="rdfs:Class"/>
>        <rdfs:subclassOf rdf:resource="rdfs:Container"/>
>      </rdf:Description>
>    </rdf:RDF>
> 
> #g
> --
> 
> [1] CC/PP draft <http://www.w3.org/TR/CCPP-struct-vocab/>
> 
> ------------
> Graham Klyne
> (GK@ACM.ORG)



