docno="lists-046-2800868"
received="Fri Jan 25 11:45:01 2002"
isoreceived="20020125164501"
sent="Fri, 25 Jan 2002 08:44:20 -0800"
isosent="20020125164420"
name="John Boyer"
email="JBoyer@PureEdge.com"
subject="RE: History: Question on C14N list of nodes instead of subtrees"
id="7874BFCCD289A645B5CE3935769F0B52350084@tigger.PureEdge.com"
charset="iso-8859-1"
inreplyto="History: Question on C14N list of nodes instead of subtrees"
expires="-1"


To:"merlin"<merlin@baltimore.ie>
Cc:<reagle@w3.org>,<w3c-ietf-xmldsig@w3.org>

Hi Merlin,

If there's some way you could run those tests, I'd certainly appreciate
knowing the outcome.  The concern I have is that, right now in XFDL, our
logical equivalent to an XPath transform runs in microseconds, even on
XML that could be a megabyte in size.  There's no way we could tolerate
a hundred-fold increase in run-times on server side CPUs just to use
XPath for signature filtering.  

Even if we have to modify the XPath transform (or add a new transform)
because of some unexpected lapse in real-world usability, it would be
far better to bite the bullet and make that change than it would be to
essentially lose the ability to do document subsetting because of speed
problems.  

Most are interested in being able to efficiently specify a subtree to
sign, but I assure you that it would be a mistake to not have equivalent
efficiencies for exclusive logic signature filter (e.g. sign everything
except a given subtree or subtrees).  The good news is that, if we do
end up with some design change necessity, it would be relatively easy on
implementers to accommodate both needs.  I just want to make sure
everyone remains aware of both needs in any such considerations.

Joseph, do you have any opinion on the ability to tolerate a change at
this point?

Cheers,
John Boyer
PureEdge Solutions Inc.

-----Original Message-----
From: merlin [mailto:merlin@baltimore.ie]
Sent: Thursday, January 24, 2002 8:00 PM
To: John Boyer
Cc: reagle@w3.org; w3c-ietf-xmldsig@w3.org
Subject: Re: History: Question on C14N list of nodes instead of subtrees



r/JBoyer@pureedge.com/2002.01.24/16:12:13
>I'm not averse to more transforms; it would be useful to get an idea
for
>how much motivation there might be to make changes at this point.  My
>position is that 
>
>if the problem is important enough (e.g. good idea but too slow
>in a frequently occuring scenario), and
>if it is easy for the implementations to be tweaked, 
>then let's fix it before REC.
>
>So, before we stop the presses and re-architect anything, it would be
>useful to find out exactly how important the problem is.  By this I
mean
>the mundane question of how frequently occuring the scenario is, but
>also the more interesting question of whether the slowness is really an
>inherent limitation we are hitting with XPath or just an implementation
>limitation.

I don't think that we need to change the spec or anything;
we can just throw up a new doc like exclusive c14n, or even
just add to the extra algorithms doc. I may try running
some tests if I have the time.

Merlin


------------------------------------------------------------------------
-----
Baltimore Technologies plc will not be liable for direct,  special,
indirect 
or consequential  damages  arising  from  alteration of  the contents of
this
message by a third party or as a result of any virus being passed on.

This footnote confirms that this email message has been swept by
Baltimore MIMEsweeper for Content Security threats, including
computer viruses.
   http://www.baltimore.com



