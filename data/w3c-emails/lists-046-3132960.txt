docno="lists-046-3132960"
received="Fri Feb  1 12:23:40 2002"
isoreceived="20020201172340"
sent="Fri, 1 Feb 2002 12:23:30 -0500"
isosent="20020201172330"
name="Joseph Reagle"
email="reagle@w3.org"
subject="Re: History: Question on C14N list of nodes instead of subtrees"
id="200202011723.MAA25616@tux.w3.org"
charset="iso-8859-1"
inreplyto="7874BFCCD289A645B5CE3935769F0B52350093&#64;tigger.PureEdge.com"
expires="-1"


To:"John Boyer"<JBoyer@PureEdge.com>,"merlin"<merlin@baltimore.ie>
Cc:<w3c-ietf-xmldsig@w3.org>

On Thursday 31 January 2002 17:47, John Boyer wrote:
> In some ways your results are a bit of a relief in that the performance
> profiles are clearly not the result of O(n log n) processes.  At least
> part of the problem sounds like the XPath implementation (or some way it
> is being used) is suboptimal. 

I've done a little digging on this. I've attached some excerpted results 
from the datapower XSLTMark tests [1]. I'm not sure how much it tells us 
other than there's a large difference in performance between the 
implementations. (And the one I sometimes play with is about 400 times 
slower then the best! <grin/>) We don't get to see a break down for the 
given expressions. (In fact, XPath is just a line item amongst lots of XSLT 
operations. I've attached their test file and test XPath selections so as 
you can see it's very limited.) Also, I noted  a paper on Sequential XPath 
[2] and wonder how its support for subtree selection/omission would perform 
-- if implemented...?

[1] http://www.datapower.com/XSLTMark/
[2] http://www.idealliance.org/papers/xml2001/papers/html/05-01-01.html

 
-- 

Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature/
W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/



text/plain attachment: XSLTMark-excerpts.txt

text/xml attachment: xpath.xsl

text/plain attachment: xpath.xml




