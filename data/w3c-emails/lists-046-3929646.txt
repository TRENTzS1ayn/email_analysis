docno="lists-046-3929646"
received="Wed Mar  6 12:06:44 2002"
isoreceived="20020306170644"
sent="Wed, 6 Mar 2002 12:05:41 -0500"
isosent="20020306170541"
name="Joseph Reagle"
email="reagle@w3.org"
subject="Re: RDF C14N Inclusive or Exclusive"
id="200203061705.MAA31468@tux.w3.org"
charset="iso-8859-1"
inreplyto="JAEBJCLMIFLKLOJGMELDCEDDCDAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>,<w3c-ietf-xmldsig@w3.org>

On Tuesday 05 March 2002 04:49, Jeremy Carroll wrote:
> This example would then become:
>
>   <eg:bar rdf:parseType="Literal"
> xmlns:xsd="http://www.w3.org/2001/XMLSchema">
>     <foo xsi:type="xsd:decimal">10.09</foo>
>   </eg:bar>
>
> where the RDF parser treats the namespace decl as asserting that
>  InclusiveNamespace PrefixList = { xsd }
> and then canonicalizes the xml literal on that basis.

This works. I've attached the rdf.xml with the two outputs generates from 
the two commands below. The first is a straightforward exclusive c14n (and 
the xsd: declaration is available); on the second I select the foo element 
(and the xsd: is still available).

> test_c14n.py -e -i rdf.xml -p "xsd" > c14n1-rdf.xml

> test_c14n.py -e -i rdf.xml -p "xsd" -x '(//. | //@* | 
//namespace::*)[ancestor-or-self::foo]' > c14n2-rdf.xml


-- 

Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/
W3C Policy Analyst                mailto:reagle@w3.org
IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature/
W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/



text/plain attachment: rdf.xml

text/plain attachment: c14n2-rdf.xml

text/plain attachment: c14n1-rdf.xml




