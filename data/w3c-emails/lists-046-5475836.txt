docno="lists-046-5475836"
received="Wed Jul 10 08:44:46 2002"
isoreceived="20020710124446"
sent="Wed, 10 Jul 2002 13:44:13 +0100"
isosent="20020710124413"
name="merlin"
email="merlin@baltimore.ie"
subject="Re: Comments on XPath Filter 2.0 draft (2002-06-20)"
id="20020710124413.ABB1743C10@yog-sothoth.ie.baltimore.com"
inreplyto="023e01c227e3$1e382290$2305a8c0&#64;iaik.at"
expires="-1"

To:"Gregor Karlinger"<gregor.karlinger@iaik.at>
Cc:"XMLSigWG"<w3c-ietf-xmldsig@w3.org>



r/gregor.karlinger@iaik.at/2002.07.10/09:26:32
>Wouldn't it be sufficient to have instructions like:
>
>  Process each node in the document, adding each node to the
>  filter node-set if and only if the node is present in any
>  subtree-expanded union node-set and all subsequent
>  subtree-expanded intersect node-sets but no subsequent
>  subtree-expanded subtract node-sets, or false otherwise.
>  If there are no subsequent intersect or subtract node-sets,
>  then that part of the test is automatically passed.
>
>Regards, Gregor

That sounds perfect to me; I'd change "the document" at the
start to "the input node-set" and "the filter node-set" to
"the output node-set". Then I'd follow with this:

  Presence in a subtree-expanded node-set can be efficiently determined
  without actually expanding the node-set, by simply maintaining a
  stack or count that identifies whether any nodes from that node-set
  are an ancestor of the node being processed.

This is the chief optimization.

Merlin



