docno="lists-046-6835481"
received="Fri Sep 27 03:46:11 2002"
isoreceived="20020927074611"
sent="Fri, 27 Sep 2002 00:45:59 -0700"
isosent="20020927074559"
name="Susan Lesch"
email="lesch@w3.org"
subject="Comments for XML-Signature XPath Filter PR"
id="p05111b0cb9b9bc1f5545@[192.168.123.158]"
charset="us-ascii"
expires="-1"


To:jboyer@PureEdge.com,merlin@baltimore.ie,reagle@w3.org,w3c-ietf-xmldsig@w3.org


Hello,

Belated congratulations on your XML-Signature XPath Filter 2.0 
Proposed Recommendation [1]. Here are just a few minor editorial 
comments.

These three won't matter later but I point them out:
s/a Proposed Recommendations/a Proposed Recommendation/
s/W3C Advisory Committee Members/W3C Advisory Committee representatives/
s/ W3C membership/W3C Membership/

Also:
s/a sequence of XPath expressions are/a sequence of XPath expressions is/
s/more-easily/more easily/
s/two enveloped signatures signatures/two enveloped signatures/
s/Janaury/January/

Some of the reference links (like [XPath] or [URI]) include the
brackets, and some don't. They could match.

In:
    For example, the subtree expansion of a node-set consisting of just
    a single element node would be a node-set containing that element,
    its attribute nodes, namespace nodes, and all its descendants;
    including the attribute nodes and namespaces nodes of any descendant
    elements.
the second clause is incomplete. I would make the semicolon a comma.

In 3.2 and in 4, http://www.w3.org/2002/06/xmldsig-filter2 links to a
copy of a Candidate Recommendation or is redirected to one. Why not use
example.org per RFC 2606 and go nowhere?

In 3.3 and in 4, the function here() could be <code> everywhere.

In 3.4, all the sentences that are list items could end in periods.

In 4, this is really picky but I would break this into two sentences:
    two ToBeSigned elements; these are
becomes
    two ToBeSigned elements. These are
Same for
    NotToBeSigned elements; these are
and
    ReallyToBeSigned element; this is

The final sentence is quite long.
    The advantage of the signature filter transform over the XPath
    transform is that the latter requires evaluation of a
    potentially-complex expression against every node in the input set,
    which has proved costly in practice for many useful operations,
    whereas the former requires evaluation of simple XPath expressions
    and then the execution of some basic set operations or their
    equivalent, which can be implemented significantly more efficiently.
It could be something like:
    The advantage of the signature filter transform over the XPath
    transform is that the latter requires evaluation of a
    potentially-complex expression against every node in the input set.
    This has proved costly in practice for many useful operations.
    The former requires evaluation of simple XPath expressions and
    then the execution of some basic set operations or their
    equivalent. The signature filter transform can be implemented
    significantly more efficiently.

Best wishes for your project,
-- 
Susan Lesch           http://www.w3.org/People/Lesch/
mailto:lesch@w3.org               tel:+1.858.483.4819
World Wide Web Consortium (W3C)    http://www.w3.org/



