docno="lists-046-8094685"
received="Fri Jan 10 12:36:02 2003"
isoreceived="20030110173602"
sent="Fri, 10 Jan 2003 12:36:00 -0500"
isosent="20030110173600"
name="Rich Salz"
email="rsalz@datapower.com"
subject="Re: SOAP Message Canonicalization"
id="3E1F0480.4030107@datapower.com"
charset="us-ascii"
inreplyto="D080DC6E-24C0-11D7-B25F-0003937568DC&#64;sun.com"
expires="-1"


To: Marc Hadley<marc.hadley@sun.com>
CC: Joseph Reagle<reagle@w3.org>,dee3@torque.pothole.com,w3c-xml-protocol-wg@w3.org, Martin Gudgin<mgudgin@microsoft.com>,w3c-ietf-xmldsig@w3.org


> A fair point, though assuming a vendor has already implemented the 
> transform and exclusive c14n then implementing the combination should be 
> pretty straightforward.

Sure, but if a vendor doesn't do transforms (or doesn't do them easily), 
then having a transform version requires them to do something like 
canonicalize and hash the transform to see if it's something they can 
short-circuit.  That can be expensive.  Far easier to just do string 
compare and call your "fast xslt" if you're that kind of vendor.

My meta-point is that having two ways of doing the same thing is bad, 
and that uri->xslt is simpler and safe for folks that work that way, 
rather than xslt->code-implementing-the-uri.
/r$



