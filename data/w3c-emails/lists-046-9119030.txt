docno="lists-046-9119030"
received="Mon Jul 28 10:53:37 2003"
isoreceived="20030728145337"
sent="Mon, 28 Jul 2003 10:53:31 -0400"
isosent="20030728145331"
name="Joseph Reagle"
email="reagle@w3.org"
subject="Re: Request for clarification on Canonical XML"
id="200307281053.31396.reagle@w3.org"
charset="iso-8859-1"
inreplyto="4.2.0.58.J.20030725143453.0578c168&#64;localhost"
expires="-1"

To: Martin Duerst<duerst@w3.org>, Rich Salz<rsalz@datapower.com>
Cc:"w3c-ietf-xmldsig@w3.org"<w3c-ietf-xmldsig@w3.org>,"w3c-i18n-ig@w3.org"<w3c-i18n-ig@w3.org>,"w3c-rdfcore-wg@w3.org"<w3c-rdfcore-wg@w3.org>



On Friday 25 July 2003 14:50, Martin Duerst wrote:
> >Not sure what this could mean - you mean something
> >like a qname attribute value?  Oh.  I suppose you
> >could work around that by adding the prefix to the
> >inclusives list, but I see your point.
>
> In a very specific application, the 'inclusives list' works well.
> If you want to be general, it doesn't work well.

I'm not confident of the scenario/requirement yet, but *if* Alice wanted to 
ensure that a prefix is always declared by some other person (Bob) 
corresponding to a attribute value, she could use an attribute with the 
same prefix to force its "visible utilization." However, I'd expect the 
interface between Alice and Bob would be sufficiently close in the cases 
that I think of, that she can pass the prefixes corresponding to QNAMEs to 
Bob; or if Bob really cares (since he's doing the c14n/signing), he can do 
the work of scanning for QNames and adding them to his InclusiveNamespace 
Prefix list himself...



