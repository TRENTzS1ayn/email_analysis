docno="lists-047-0041281"
received="Sat Aug  4 10:40:32 2001"
isoreceived="20010804144032"
sent="Fri, 03 Aug 2001 14:49:16 +0100"
isosent="20010803134916"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Flip Chart Transcrips"
id="3B6AABDC.5A4D2F16@hplb.hpl.hp.com"
charset="us-ascii"
expires="-1"


To: rdf core<w3c-rdfcore-wg@w3.org>

For the record, this is a transcript of the various flip charts written at
the face to face.

Brian



------------------------------------------------

Problems

[rss]

  o Spec -> screams

  o namespace prefixes

  o need production quality RDF tools

  o need provenance - this chunk of xml came from ...

  o need unsquish

  o hackers don't read the spec

Prism

  o users of RDF are meta data designers

  o hard to extend

  o reification is hard

------------------------------------------------

DAML

  o domain/range constraints

  o subclass should be cyclic

  o tagging statements and clumps

  o closed collections

  o formal semantics

  o what do uri's mean

  o xml schema data types

ZAP

  o don't want to support reification

  o stronger datatyping

  o info in schema for UI support

-----------------------------------------------------

DC

 o trying to be both XML and RDF

 o language support xml:lang

 o relationship to XML schema

 o ugly syntax

 o containers - modelling guidelines

 o datatyping - numbers and dates

 o NEED SOMETHING SOON

 o AI trap

 o No reification

-------------------------------------------

N-triple needs to represent the doc


--------------------------------------------------

[Issues with Abstract syntax and model]

 o parse same doc twice - are anon nodes the same?

 o split doc -> are anon nodes the same?

 o alternatives interpretations of reification

 o syntactic representation of doc ++

 o formal semantics

 o anon  resources +

 o literal is XML structure ++

 o graph

 o uri-substructure

-----------------------------------------------------------------


[about Prince nodes]

They are not needed for assertion

hard to create unique ids

lazy

information loss [provenance]

----------------------------------------------------
[why do we need anon resources]

Names -> matters

Elegance

Referreral

Query

Don't know URI

pool scheduling -> practical implementation

avoid philosophical rat hole

-----------------------------------------------------

<rdf:Description>
  <foo:bar>foobar</foo:bar>
</rdf:Description>

....  <foo:bar> "foobar" .

---------------------------------------------------------

Is there a way to point to the distinguished node?

P(x) -> exists y P(y)

----------------------------------------------------------

exists(bob) (Old(bob))

-------------------------------------------------------

Ntriple is central - model RDF/XML, model theory and graph
defined in terms of it.

---------------------------------------------------------

Graph is central, n-triple, model theory and RDF/XML defined
in terms  of it [this is the one we agreed to]

---------------------------------------------------------

Schema - 6th Sept

Syntax

Model

----------------------------------------------------------

Two RDF documents are equivalent when they map to the same
graph.

------------------------------------------------------------

Two RDF Graphs are the same when:

  o they are graph isomorphic

  o no two nodes in the graph have the same URI

-----------------------------------------------------------


Literal = string
          parseType string or Qname
          namespaces
          language
          base uri
          entities

----------------------------------------------------

Options

Stand Alone XML -> limitations

parser adds namespaces -> incomplete

infoset as RDF

serialized infoset

fragments

deprecate and use cdata

------------------------------------------------------

Model Theory is a Tool which is not useful for everyone

Suggestion that it can be translated to English

Document Structure

Consider Audience

Don't overload the term spec

------------------------------

Document Structure (Hypertext?)

Primer 5+2

Model 8

RDF/XML 4

Schema 4

Test Cases 2



