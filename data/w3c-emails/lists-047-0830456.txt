docno="lists-047-0830456"
received="Fri Aug 17 04:30:02 2001"
isoreceived="20010817083002"
sent="Fri, 17 Aug 2001 09:34:19 +0100"
isosent="20010817083419"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: layering RDFS in the MT [was: New RDF model theory]"
id="3B7CD70B.63B97CAE@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="3B7B2D48.323EDA5F&#64;w3.org"
expires="-1"


To:w3c-rdfcore-wg@w3.org


Dan Connolly wrote:
> pat hayes wrote:
> | <comment> When considering RDFS  we will require interpretations
> | to have extra structure. </comment>
> 
> I'd rather not take that approach. I'd rather that the model
> theory were a model theory for all of RDF, no more, and no less.
> I don't want to give the impression that folks should tinker
> with the core model theory when they introduce new vocabulary.
> 
> New vocabularies should just be specified as constraints
> on the core interpretation structure, not changes to it.
> 
> | in particujlar, the notion of a 'class', so we will need to
> | assume that the universe of
> | interpretations contains classes as elements.
> 
> Why? It seems to me that IEXT(rdf:type) completely captures
> the notion of 'class'. Anything we want to say about 'class'
> can be said by way of IEXT(rdf:type), no?
> 
> | 5. A subset IC of IR, containing classes
> 
> | 6.  A mapping ICEXT  from IC to  the powerset of (IR union LV) ,
> | ie the set of subsets of elements
> | of IR or  XL.
> 
> ICEXT(c) is just the set { x: <x,c> \in IEXT(rdf:type) }, no?
> an IC is (at least) the set { y: exists x where <x,y> \in IEXT(rdf:type)
> }
> right?
> 
> yup... you say as much later in the document:
> 
> | >> <x,y> is in IEXT(I(rdf:type)) iff x is in ICEXT(y)
> 
> 

I was initially expecting Dan's approach, but I think that it rapidly 
would get untidy. Even "the set { x: <x,c> \in IEXT(rdf:type) }" seems 
more obscure than Pat's way.

It also seems important to be able to talk about the base graph model
separately from schema performance. I see it as completely legitimate to
have an Ntriple document that does not conform to RDF schema; and it
does conform to something simpler (i.e. the model in the first half of
Pat's document).

I think the two points of view should be joined at a higher level.

Taking Pat's document as defining an RDF M&S interpretation (I,IEXT) 
and an RDF Schema interpretation (I, IEXT, ICEXT ) [omitting reification 
and containers for now]. 
I would go for something like:-

    "A graph conforms to RDF Schema if every RDF M&S interpretation 
    of the graph can be extended to an RDF Schema interpretation."


We can then link this in with schema definitions by noting that a graph
g conforms to a specific schema defined by a graph s if g union s
conforms to RDF Schema.

I agree with Sergey that we need to leave a wide open back door. This
back door is used in reification, containers and daml. 
It could say that there may be schemas which are not defined by graphs,
but these are expected to define interpretations that extend RDF Schema
interpretations, and a graph conforms to such a schema if every RDF M&S
interpretation of the graph can be extended to such a schema satisfying
interpretation.


Jeremy



