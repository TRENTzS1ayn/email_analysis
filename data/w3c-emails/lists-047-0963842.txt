docno="lists-047-0963842"
received="Tue Aug 21 10:31:18 2001"
isoreceived="20010821143118"
sent="Tue, 21 Aug 2001 15:27:33 +0100 (BST)"
isosent="20010821142733"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="F2F action point 2001-08-02#10 and issue rdfs-constraining-containers"
id="Pine.GSO.4.31.0108211501060.15130-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
expires="-1"

To: RDFCore Working Group<w3c-rdfcore-wg@w3.org>


Plus a brief noodle about class-contextualised constraints.

Problem: You can't use RDFS to describe "a Seq containing only objects
of rdf:type random:X"

The action point text says "Write up a fix/workaround for folks
using the currently defined semantics for domain and range constraints."

Alas, I can't do that; what I _said_ at the meeting was that the other
"missing" bits of RDFS would give us this for free; I'll elabourate this
below.

It was my understanding from the F2F that RDFS work will probably leave
what Danbri calls "class-contextualised constraints"* as a target for
the web-ont WG. Is that accurate?

Anyway, as I pointed out at the F2F, while rdf:_1 and kindred all have a
common class, they're lacking a common superproperty**.

However, if we specify a common superproperty such that

<rdf:_1> <rdfs:subPropertyOf> <rdfx:member> .
etc.

then class-contextualised constraints (and the fixed interpretations of
range etc.) will give us this functionality for free, since we can then
say:

<random:seq2> <rdfs:subClassOf> <rdf:Seq> .

when
<rdfx:member> <rdfs:domain> <random:Seq2> .
then
<rdfx:member> <rdfs:range> <random:X> .

In other words, I'm proposing that instead of a specific fix for this,
we
1. Introduce a rdfx:member superproperty of all the "rdf:_n"s
2. Wait for general class-contextualised constraints, which in
   turn might mean waiting for a more general implication
   mechanism. This, together with the result of step 1
   will permit stronger typing on collections in a finite
   number of assertions.

The alternative is to subproperty each and every "rdf:_n" which might
take a while :-)

jan

* which seem to me to be a slightly higher-level construct - ie,
what's being referred to as "rules" rather than basic schema - they're
essentially a mechanism for expressing a logical implication, namely
that

if (the thing on the blunt end of this arc is of type Y)
then (the thing on the sharp end is of type X)

Consequently, I'd expect that extending RDF to permit expression of
implication and the Class-contextualised constraints ought to be closely
related (and one can use the mechanism that the other does). Thus the
web-ont people ought to either invent or borrow general implication to
express this.

** The other thing that needs straightening out is this:
http://ioctl.org/rdf/ms/rdfms#39

The simple diagram above may also be read
"http://www.w3.org/Home/Lassila has creator Ora Lassila", or in
general "<subject> HAS <predicate> <object>".

so rdfs:subPropertyOf (as well as being overInterCapped) is actually a
misspelling - should be rdfs:superproperty.

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287088 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Not as randy or clumsom as a blaster.



