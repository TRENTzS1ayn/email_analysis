docno="lists-047-10060132"
received="Wed Jun 13 09:49:44 2001"
isoreceived="20010613134944"
sent="Wed, 13 Jun 2001 14:47:52 +0100 (BST)"
isosent="20010613134752"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="RE: XML:Base - impact on RDF (last pass)"
id="Pine.GSO.4.31.0106131432410.27373-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="EMEKICCGFEKJFGKMFLEPOEGLCMAA.rdaniel&#64;interwoven.com"
expires="-1"

To: Ron Daniel<rdaniel@interwoven.com>
cc: RDFCore Working Group<w3c-rdfcore-wg@w3.org>


My last word on this, I promise. I'd rather put the energy into
something more productive (!)

On Fri, 8 Jun 2001, Ron Daniel wrote:

> In today's conference call, Aaron pointed out that the XML Base
> spec[BASE] states that it is not retroactive, it is something that
> developers of new XML formats have to decide whether to use.
>
> More specifically, it says:
>
>   The deployment of XML Base is through normative reference by
>   new specifications [...] The behavior of xml:base attributes in
>   applications based on specifications that do not have direct or
>   indirect normative reference to XML Base is undefined.
>
> Our Charter[CHART] says that
>   "The RDF Core WG is neither chartered to develop a new RDF
>    syntax, nor to reformulate the RDF model".

However, we ARE clearing up issues on rdf syntax, and there has been
some (radical) discussion about changing the RDF model, some of which
has rightly been punted to the "for RDF 2" pile. I wasn't proposing a
new syntax (not really, especially since the grammar of M+S section 6 is
far from normative) nor a change to the model, since xml:base wouldn't
operate at that level.

> It also says that
>   "Backwards compatibility with existing RDF applications
>    is a priority for the RDF Core Working Group".

RDF documents without xml:base are interpreted as always by old and new
(post-revision) parsers.

RDF documents with xml:base are interpreted correctly by new parsers.

RDF documents with xml:base are interpreted incorrectly by old parsers.
This is breaking backwards compatibility, true. However, from a
pragmatic point of view, the outcomes of our presenting test cases to
this list give rise to the following (I think, fair) observations:

1. No two existing RDF parsers actually agree on what some quite simple
RDF documents "mean" in terms of triples emitted.

2. By specifying correct behaviour with test cases, we're breaking
"backwards (in)compatibility" in those parsers anyway, since they have
to change their behaviour.

In other words, I'm inclined to consider recourse to BC concerns to be
somewhat spurious in this case.

> Given those statements, it is pretty clear that the WG has to
> leave xml:base untouched for now. I suggest a resolution
> such as:
>
>   On 2001-06-?? the WG decided that the behavior of the xml:base
>   attribute must remain undefined for the 1.0 RDF Model and Syntax
>   specification. Creators of documents following the 1.0 RDF
>   syntax SHOULD NOT use the xml:base attribute.
>
> Those of us who would like to see it available for use in
> RDF will have to do it somewhere other than in the syntax part
> of a clarified M&S spec.

I've already said everything else I have to say about this: paragraph
204 of M+S talks about resolving absolute URIs relative to the base URI
of the document containing the RDF, so I suppose if (say) xhtml adopts
xml-base (which I'm led to believe is not guaranteed(?)) then I could
always wrap my embedded RDF in a set of xhtml tags with an xml:base on
them (if that proves important). Since we've got somewhere fixed to put our
test cases now, I don't actually _need_ this functionality to actually
prepare working TCs any more. And since I try to stay as far away from
RDF syntax as possible during my day job, I'd be happy with Ron's
proposal. I just want to reiterate my objection to the BC-based
arguments given here.

jan

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287163 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
YKYBPTMRogueW... you try to move diagonally in vi.



