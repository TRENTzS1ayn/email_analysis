docno="lists-047-10200183"
received="Wed Jun 13 13:27:17 2001"
isoreceived="20010613172717"
sent="Wed, 13 Jun 2001 18:11:03 +0100"
isosent="20010613171103"
name="Graham Klyne"
email="Graham.Klyne@Baltimore.com"
subject="Re: #rdf-containers-syntax-ambiguity,   #rdf-containers-syntax-vs-schema"
id="5.0.2.1.2.20010613180500.03a1a5b0@joy.songbird.com"
charset="us-ascii"
inreplyto="3B2788CD.36CCB854&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc: rdf core<w3c-rdfcore-wg@w3.org>

Brian,

This seems fine to me.

To my mind, an essential feature of your proposal was the way that it 
reduced <rdf:li> to a piece of syntactic sugar.  Thus, I would have 
expected your example:

>   <rdf:Bag>
>     <rdf:li>1</rdf:li>
>     <foo:ten>10</foo:ten>
>     <rdf:li>11</rdf:li>
>   </rdf:Bag>

To yield:

>   _:genid <rdf:type> <rdf:Bag>.
>   _:genid <rdf:_1>   "1" .
>   _:genid <foo:ten>  "10" .
>   _:genid <rdf:_2>   "11" .

So either way works for me, but in light of this example your revised 
proposal might be slightly less surprising (a Good Thing).

(Hmmm... is that what you *meant* to put for your final example?)

#g
--

At 04:37 PM 6/13/01 +0100, Brian McBride wrote:


>Brian McBride wrote:
> >
> > With respect to action:
> >
> >   AP: 2001-06-08#3: Brian McBride: pick up on the syntax issues now the
> >         model details have been clarified.
> >
> > from last weeks teleconference, I would like to propose the attached
> > McBride/Beckett proposal for parsing containers.  This proposal was 
> circulated
> > on RDF Interest in December 2000
>
>With respect to that proposal, I realised that it suffers from a similar 
>problem
>to the one that Dan Connolly pointed out in:
>
>   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0017.html
>
>The proposal specifically allows for representing partial descriptions of
>containers using the rdf:li syntax.  For example:
>
>   <rdf:Bag>
>     <rdf:li>1</rdf:li>
>     <rdf:_10>10</rdf:li>
>     <rdf:li>11</rdf:li>
>   </rdf:Bag>
>
>will generate (please excuse the abbreviation):
>
>   _:genid <rdf:type> <rdf:Bag>.
>   _:genid <rdf:_1>   "1" .
>   _:genid <rdf:_10>  "10" .
>   _:genid <rdf:_11>  "11" .
>
>In essence, rdf:li translates to rdf:_nnn where nnn is one more than the last
>rdf:_mmm encountered in the element.
>
>Now consider property foo:ten which is a subproperty of rdf:_10.
>
>   <rdf:Bag>
>     <rdf:li>1</rdf:li>
>     <foo:ten>10</rdf:li>
>     <rdf:li>11</rdf:li>
>   </rdf:Bag>
>
>What triples does the above example generate.  Either the parser has to 
>process
>subPropertyOf relations, or it will generate a different set of triples 
>from the
>first example.
>
>An argument can be made that reseting the count in this way is an example
>of feature creep and would be best avoided.  It provides more syntactic sugar
>than the language described in M&S.  It adds little value, creates
>more work for implementors and creates confusion, as in the case outlined 
>above.
>
>I think therefore there is a case to be made for simplifying this aspect of
>the proposal so that rdf:li elements within a description are translated to
>rdf:_nnn where nnn starts at 1 and is incremented by one for each rdf:li
>encountered.
>
>This the example given above:
>
>   <rdf:Bag>
>     <rdf:li>1</rdf:li>
>     <rdf:_10>10</rdf:li>
>     <rdf:li>11</rdf:li>
>   </rdf:Bag>
>
>would generate:
>
>   _:genid <rdf:type> <rdf:Bag>.
>   _:genid <rdf:_1>   "1" .
>   _:genid <rdf:_10>  "10" .
>   _:genid <rdf:_11>  "2" .
>
>This solution also neatly ducks the issue of what do to with:
>
>   <rdf:Bag rdf:_1="1" rdf:_2="2">
>     <rdf:li>?</rdf:li>
>   </rdf:Bag>
>
>I'd welcome feedback from the WG on which way they would like me to proceed
>as I write up the test cases.
>
>Brian

------------------------------------------------------------
Graham Klyne                    Baltimore Technologies
Strategic Research              Content Security Group
<Graham.Klyne@Baltimore.com>    <http://www.mimesweeper.com>
                                 <http://www.baltimore.com>
------------------------------------------------------------



