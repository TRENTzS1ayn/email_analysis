docno="lists-047-11273180"
received="Fri Jun 15 21:23:55 2001"
isoreceived="20010616012355"
sent="Fri, 15 Jun 2001 18:36:48 -0700"
isosent="20010616013648"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="Re: Draft Partitioning"
id="3B2AB830.220090E9@db.stanford.edu"
charset="us-ascii"
inreplyto="200106152354.f5FNs6908622&#64;theinfo.org"
expires="-1"


To: Aaron Swartz<aswartz@upclink.com>
CC: Brian McBride<bwm@hplb.hpl.hp.com>, rdf core<w3c-rdfcore-wg@w3.org>

Aaron Swartz wrote:
> 
> On Friday, June 15, 2001, at 06:49  PM, Sergey Melnik wrote:
> 
> > IMO reification has a chance to be introduced as a pure model feature
> > not intrinsically bound to any vocabulary
> 
> Why do you want this? Is there a reason every RDF application
> has to understand reification? I hope not, because that will
> make RDF very confusing.

I did not mean to declare reification a mandatory feature. Rather, I'd
define it as a separate "layer", so that whoever needed reification
could rely upon a recommended practice.

> > In this perspective, it would not go under 'vocabularies'. Similarly,
> > namespaces and literals are another two model features that might go
> > into one of the layers in the 'core'.
> 
> To my knowledge, you still have not explained how namespaces fit
> into the model. If I missed this somewhere, please send me a
> pointer. I'm quite curious what you mean.

In fact, some time ago I mentioned "Slim RDF" on the RDF Interest list
http://lists.w3.org/Archives/Public/www-rdf-interest/2001Feb/0090.html).
There, namespaces were introduced as part of the model. The reason
behind it that currently, given a resource, applications cannot
determine the namespace of the resource (they can only guess by looking
for "#" or last "/"). Several people who used the "RDF API" for
implementing editors for RDF Schemas (including Michael Sintek who
collaborated on Protege) complained that the API did not offer a way of
reliably determining the namespace of a resource. Since a year or so,
the API supports that feature, effectively assuming that namespaces are
part of the model.

Sergey



