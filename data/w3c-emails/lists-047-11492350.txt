docno="lists-047-11492350"
received="Sun Jun 17 18:16:16 2001"
isoreceived="20010617221616"
sent="Sun, 17 Jun 2001 15:42:17 -0700"
isosent="20010617224217"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="Re: Model-specific identity for anon resources, and its representation:   Anew issue?"
id="3B2D3249.A5FAC4A3@db.stanford.edu"
charset="us-ascii"
inreplyto="OF1BFD5F42.A23170EB-ON41256A6D.003D0FCA&#64;bayer-ag.com"
expires="-1"


To:jos.deroo.jd@belgium.agfa.com
CC:aswartz@upclink.com,Jan.Grant@bristol.ac.uk,w3c-rdfcore-wg@w3.org

Jos,

by saying that logical formulae are out of scope I mean that it is not
our job to define a specific logical language on top of the "core". On
the other hand, I'd like to see an extensibility mechanism in place that
allows doing such things.

I think "anonymous resources" as candidates for some sort of logical
variables are so limited that their usefulness / specification effort
ratio is too low to keep them in the spec. However, I believe that some
logical foundation (like model-theoretic semantics) behind RDF may help
to avoid modeling errors.

For example, once we have some sort of semantics behind the "core" in
place,

X is-a Variable
X hasColor Gray

would probably mean that X is a gray variable, which does not make much
sense. I wonder, whether we can set up a path that will support giving
logical meaning to constructs like

EXP is-a LogicalExpression
EXP hasSubj X
EXP hasPred hasColor
EXP hasObj Gray
X is-a ForAllVariable
EXP mustBeSatisfiedIn CTX
CTX contains (Whale_001 hasColor Gray)
CTX contains (Hair_001 hasColor Gray)

which is still consistent with the semantics of the "core". In the above
example, the interpretation of EXP in the domain of discourse is a
"logical expression", and X maps to a "variable". Using additional
interpretation functions, it may be possible to answer questions like
whether the interpretation of CTX (whatever that is) is say an empty set
or not.

I was just speculating using the above example. I'm sure people like you
and Pat Hayes have a much better understanding of the issues involved,
and can help to strike a path for defining logic on top of RDF. The
specification of a concrete logic is IMO too monumental a task to
address it adequately within the RDFCore WG.

I'm sorry if what I said earlier sounded like logic is unimportant...

Sergey


jos.deroo.jd@belgium.agfa.com wrote:
> 
> Hi Sergey,
> 
> [...]
> > I don't agree that anonymous nodes should be part of the abstract
> > syntax, and would suggest to consider this issue when cleaning up the
> > model. I'm convinced that (sufficiently) uniquely generated resources
> > serve the purpose better than "anonymous" resources (for instance, in
> > the example above you really might want to know whether Person1 and
> > Person2 are referring to the same unknown gray thing). Explicit
> > existentially qualified variables are IMO out of scope of our work.
> 
> Maybe needless to say again that I have
> another IMO, but as our DanC says:
>   "He Who Does The Work Makes The Rules"
>   (and you do work a lot, wittness your
>   GINF work which we apply with-IN AGFA
>   as AGINFA or A-GINF-A or AG-IN-FA)
> and per fundamental human right
>   "Anyone Has The Right To Fail"
> i would be more than happy to fail and
> have a better alternative, but saying
> that things are out of scope is not
> quite convincing.
> 
> I think about a core as being round,
> so what's up/down? (more like in/out)
> I think there is at least a part
> of logic IN the core (maybe EC logic).
> I also agree that declarative
> programming is indeed a big step,
> but in the last 100 years we can
> find incredible contributions via the
> work of Gottlob Frege, J.A. Robinson,
> Pat Hayes just to name a few.
> 
> So I wait for your arguments.
> 
> --
> Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



