docno="lists-047-11565819"
received="Mon Jun 18 04:18:13 2001"
isoreceived="20010618081813"
sent="Mon, 18 Jun 2001 09:16:17 +0100"
isosent="20010618081617"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Abstract syntax: an attempt"
id="3B2DB8D1.3C106A95@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="3B2D45AB.BDDF0115&#64;db.stanford.edu"
expires="-1"


To: Sergey Melnik<melnik@db.stanford.edu>
CC: Graham Klyne<Graham.Klyne@Baltimore.com>, w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>

Hi Sergey,

Sergey Melnik wrote:
> 
> Brian,
> 
> I'd just like to reiterate some of the arguments for making reification
> a built-in feature (possibly as an optional layer):

I wasn't sure what you meant by 'built in' but I guess you mean specifically
called out in the abstract syntax.

> 
> - in M&S, reified statements need to have a URI. It looks like they
> should be unique, but nobody wants to deal with uniqueness, but still
> some sort of URIs need to be assigned, so we end up having to deal with
> different URIs denoting the same statement etc.

I have the same question as Danbri here - why do they have to have a URI.
M&S allows there construction without.

> - in M&S, we need a specific vocabulary to express/use reification.
> Reification could be defined without relying on vocabularies.

I'm wondering what you mean here by 'relying' on vocabularies.  Reification
is currently defined using rdf:type, rdf:subject etc.  Those are
vocabularies.

> 
> - as defined in M&S, reification is extremely verbose and clumsy both in
> APIs and in the syntax, and very few people are using it as suggested.
> However, I personally believe it is a useful feature when introduced
> correctly and compactly, and it can be easily handled in APIs and
> databases as an intrinsic model feature.

Absolutely.
> 
> Finally, (s1 p1 (s2 p2 o2)) looks nicer in the abstract syntax...

Right.  Much neater and simpler.  However ...

There has been a bunch of discussion lately on www-rdf-logic about this.
It would be very helpful if one someone who understands these issues
(far) better than I (Pat, FrankM, ?  please) could summarize the key points -
and
straighten me out if what I'm about to say is wrong.

The upshot of that discussion is that there are (at least) two different
concepts floating about, distinguished by the ideas of 'use' and 'mention'.

The simplest examples to distinguish these I have seen are:

  London is a city.
  'London' is a word.

The first of these is use, the second is mention of the name 'London'.

A logical language needs both mechanisms.  Reification, as described in
M&S is an example of mention e.g. Ralph said 'the sky is blue'.

My working assumption at the moment is that reification is a different
mechanism from nested expressions.  If we use nested expression syntax
to represent reification, then a future working group can't use it
to represent nested statements.

Brian



