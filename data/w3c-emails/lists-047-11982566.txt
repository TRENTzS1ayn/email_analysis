docno="lists-047-11982566"
received="Wed Jun 20 18:00:47 2001"
isoreceived="20010620220047"
sent="Wed, 20 Jun 2001 17:00:45 -0500"
isosent="20010620220045"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: #rdf-containers-syntax-ambiguity,  #rdf-containers-syntax-vs-schema"
id="v04210110b756c9f31593@[205.160.76.183]"
charset="us-ascii"
inreplyto="3B2788CD.36CCB854&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>Brian McBride wrote:
> >
> > With respect to action:
> >
> >   AP: 2001-06-08#3: Brian McBride: pick up on the syntax issues now the
> >         model details have been clarified.
> >
> > from last weeks teleconference, I would like to propose the attached
> > McBride/Beckett proposal for parsing containers.  This proposal 
>was circulated
> > on RDF Interest in December 2000
>
>With respect to that proposal, I realised that it suffers from a 
>similar problem
>to the one that Dan Connolly pointed out in:
>
>  http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0017.html
>
>The proposal specifically allows for representing partial descriptions of
>containers using the rdf:li syntax.  For example:
>
>  <rdf:Bag>
>    <rdf:li>1</rdf:li>
>    <rdf:_10>10</rdf:li>
>    <rdf:li>11</rdf:li>
>  </rdf:Bag>
>
>will generate (please excuse the abbreviation):
>
>  _:genid <rdf:type> <rdf:Bag>.
>  _:genid <rdf:_1>   "1" .
>  _:genid <rdf:_10>  "10" .
>  _:genid <rdf:_11>  "11" .
>
>In essence, rdf:li translates to rdf:_nnn where nnn is one more than the last
>rdf:_mmm encountered in the element.

Why? I fail to see what mandates this choice. In fact, this example 
seems to me to be broken on its face, since it shouldn't make sense 
to use rdf:_10 on an rdf:Bag. Bags don't have 10th elements, since 
they are unordered. But even if we allow this, the Bag description 
you give doesnt specify the subscript of the 1 and 11 items, so these 
have been generated arbitrarily.

Y'all seem to be confusing the ordering of the items in the bag 
(which doesnt make sense, but never mind....) with the ordering of 
the XML items which describe the bag. But I don't see what these have 
to do with each other. RDF triples are descriptions of something, 
right? Other descriptions don't have any such ordering assumptions.

>Now consider property foo:ten which is a subproperty of rdf:_10.
>
>  <rdf:Bag>
>    <rdf:li>1</rdf:li>
>    <foo:ten>10</rdf:li>
>    <rdf:li>11</rdf:li>
>  </rdf:Bag>
>
>What triples does the above example generate.  Either the parser has 
>to process
>subPropertyOf relations, or it will generate a different set of 
>triples from the
>first example.
>
>An argument can be made that reseting the count in this way is an example
>of feature creep and would be best avoided.  It provides more syntactic sugar
>than the language described in M&S.  It adds little value, creates
>more work for implementors and creates confusion, as in the case 
>outlined above.
>
>I think therefore there is a case to be made for simplifying this aspect of
>the proposal so that rdf:li elements within a description are translated to
>rdf:_nnn where nnn starts at 1 and is incremented by one for each rdf:li
>encountered.

Then there seems to be no difference between bags and seqs, so why do 
we have the distinction?

Example, the following should define the SAME bag, I presume (if not, 
why are they called 'bags'?):

<rdf:Bag>
   <rdf:li>a </rdf:li>
   <rdf:li>b </rdf:li>
   <rdf:li>c </rdf:li>
</rdf:Bag>

<rdf:Bag>
   <rdf:li>a </rdf:li>
   <rdf:li>c </rdf:li>
   <rdf:li>b</rdf:li>
</rdf:Bag>

Pat Hayes

---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



