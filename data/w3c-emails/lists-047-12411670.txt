docno="lists-047-12411670"
received="Fri Jun 22 11:35:53 2001"
isoreceived="20010622153553"
sent="Fri, 22 Jun 2001 16:13:22 +0100"
isosent="20010622151322"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="RDF priorities"
id="5.0.2.1.2.20010622160208.00a9c2d0@joy.songbird.com"
charset="us-ascii"
expires="-1"


To: RDF core WG<w3c-rdfcore-wg@w3.org>
Cc: Sergey Melnik<melnik@db.stanford.edu>

Per telecon call,

My view (well known, I suspect ;-) is that the core "model and abstract 
syntax" are the most important parts of RDF to get nailed down.

In my view, every other part of RDF is critically dependent on this, so we 
need to get it nailed down, and solidly.

By "solidly", I mean that we have clearly defined what can and cannot be 
understood about the meaning of an RDF expression.  This would preferably 
be underwritten a formalism of some kind, but the document will also need 
clear prose for developers who don't/won't delve into too much formal 
mathematics.

A part of this will be deciding about the role of "reification", or maybe 
some replacement idea.  I happen to think this is a key area, because the 
issues of provenance/trust/logic depend on being able to use a statement 
without asserting it.  (I am skeptical that this can be retro-fitted to a 
core RDF consisting of just asserted triples.)

I think just about everything else can be retro-fitted without 
fundamentally changing the nature of the core.  (But this is just an 
opinion, not a certainty.)

#g


------------
Graham Klyne
(GK@ACM.ORG)



