docno="lists-047-12728653"
received="Mon Jun 25 10:43:23 2001"
isoreceived="20010625144323"
sent="Sat, 23 Jun 2001 23:22:15 -0500"
isosent="20010624042215"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Draft Partitioning"
id="v04210109b759f12e5931@[205.160.76.176]"
charset="us-ascii"
inreplyto="5.0.2.1.2.20010616213643.033e64b0&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@Baltimore.com>
Cc:w3c-rdfcore-wg@w3.org

>At 12:18 PM 6/16/01 +0100, Brian McBride wrote:
>>Hi Graham,
>>
>>Graham Klyne wrote:
>>[...]
>> > I think that, to serve its intended purpose, that "reification" will need
>>
>>Could you please clarify what the intended purpose is.  M&S suggests that
>>the purpose is representing provenance information e.g. ralph said "the sky
>>is blue".
>
>That (and other similar things), without asserting the statement 
>whose provenance is provided.
>
>But also, it has been suggested (by TimBL and others) that 
>reification can be a basis for defining extensions to the basic RDF 
>semantics, such as extension to full FOL.

That is just plain wrong, Im afraid. Maybe reification plus a 
truth-predicate can be used to do that (though VERY awkwardly, so 
much so that it is unlikely to be used correctly in practice, IMO), 
but that begs the question, since the truth-predicate for, say, FOL, 
has to have the entire semantic apparatus of FOL built into it. This 
is (almost exactly) like saying that you can get all of LISP from 
nothing just by using quote, since all you have to do is apply EVAL 
to a quoted expression; but forgetting that EVAL *is* LISP, ie all it 
does is call the interpreter recursively.

> Based on discussions in RDF-logic, I understand this can only work 
>if these new extensions have clear syntax extensions w.r.t. the RDF 
>core.  Which I think means that reification, if it is to be used as 
>a "hook" for such extensions, must itself have a distinguished place 
>in the syntax of RDF.

The right conclusion is that reification is not the right hook to use for this.

>
>Otherwise, I think that any of these "extensions" to RDF must be 
>completely different languages that happen to have a passing 
>resemblance with RDF (i.e. we cannot be sure that expressions 
>conforming to the core RDF syntax still have the same meaning).

No, that is too pessimistic. They will indeed have to be extensions 
to RDF, but they can be genuine extensions which preserve the 
meanings of core RDF triples. I think that with a little care and a 
smallish extension to the core (beyond the remit of this group at 
present, but...) that these extensions could also be made to that all 
their expressions could be 'encoded' as RDF graphs, though some parts 
of those graphs would have to have a slightly non-RDF-ish 
interpretation.

>
>All this is predicated on the idea that reification is retained in 
>approximately its current form.  It may be that this group decides 
>that a different approach is called for (there have been numerous 
>suggestions that there are more elegant ways to achieve the same 
>ends).

There are 2 issues. Extending RDF to a richer language is one issue, 
retaining reification is another. I am sure that it is not feasible 
to use the second as a 'hook' for doing the first, but that does not 
mean that reification cannot be retained or extended to any 
extensions: I am sure it can. What I think we need to discuss is 
whether it is worth doing, given that reification is not the 
universal semantic hook that people once thought it was.

>In any case, I think the RDF core should try to anticipate some ways 
>in which richer semantics can be introduced.

I agree.

Pat Hayes

---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



