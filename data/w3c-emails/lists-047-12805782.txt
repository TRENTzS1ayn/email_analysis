docno="lists-047-12805782"
received="Mon Jun 25 10:57:00 2001"
isoreceived="20010625145700"
sent="Mon, 25 Jun 2001 15:56:07 +0100 (BST)"
isosent="20010625145607"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="(slightly improved) ntriples compare program"
id="Pine.GSO.4.31.0106251550280.27545-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
expires="-1"

To: RDFCore Working Group<w3c-rdfcore-wg@w3.org>


http://ioctl.org/rdf/ntriples/ntc.tar.gz

Again, you need an STL-aware c++ compiler. It's a little more lenient
about whitespace now.

use:

./ntc file1.nt file2.nt

will check if the graphs file1.nt and file2.nt are isomorphic, that is:
if there exists a bijective mapping M from the anonymous nodes of
file1.nt to the anonymous nodes of file2.nt under which the two
statement sets are identical. It's pretty verbose but it wouldn't take
much work to create a set of command-line switches to simply get it to
return a success or failure return code.

The heuristic's a pretty straightforward one. For more complex graph
matching, a more sophisticated notion of "signature" can be added to
compare.cc - for instance, adding XORed hashes of non-anonymous subject,
predicate and object nodes occurring in statements containing the
anonymous node.

jan

PS. This compiles under recent g++ and cygwin.

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287163 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Prolog in JavaScript: http://tribble.ilrt.bris.ac.uk/~cmjg/logic/prolog-latest



