docno="lists-047-13171506"
received="Tue Jun 26 14:26:07 2001"
isoreceived="20010626182607"
sent="Tue, 26 Jun 2001 13:26:06 -0500"
isosent="20010626182606"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Abstract syntax: an attempt"
id="v0421010bb75e8123bc07@[205.160.76.189]"
charset="us-ascii"
inreplyto="5.0.2.1.2.20010626065241.00a3b860&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@Baltimore.com>
Cc:w3c-rdfcore-wg@w3.org

>>[snip....]
>>I'd suggest a simpler BNF along the same lines, but without using R:
>>
>>D ::= A*
>>A ::= [ N P V ]
>>V ::= N | L
>>
>>and then if you want R, define it as a subcase of D.
>
>Well, prompted by an earlier exchange with you, I was trying to 
>express a *syntax* of RDF that was richer than the mere *triple 
>structure*.
>Maybe I misunderstood what you were saying, but it made sense to me 
>(and is also present in the model theoretic semantics for DAML+OIL) 
>to recognize specific collections or patterns of triples as 
>distinguished syntactic elements.

Ah, I see. Sorry, I missed that. I guess I had been assuming that it 
wasn't RDF-kosher to just claim a kind of extra syntactic provenance 
for some set of triples, but that the 'higher' syntax had to actually 
be encoded in the triples themselves. Maybe that was too restrictive; 
it would certainly make life easier if we did things this way.

>My goal here was to apply such an approach to the very simple case 
>of RDF assertions + "reification".
>
>I think I am trying to present "reification" here as something 
>different from its normal meaning in logical systems;  more a device 
>for "nesting" than "quotation".

Right, I see that is the way it is often used. That would be OK 
provided that those triples that make up the reification quad are NOT 
thought of as assertions in the same way as other RDF triples (though 
I wish then we could change the name; this is a bit like digging a 
hole and calling it a tower, which isn't a good idea even if its a 
hole you want.)

My chief gripe with reification as a way to do 'nesting' is that it 
isn't a very good way to do it. One wants to have nests of arbitrary 
length and arbitrarily deeply nested and labelled somehow. Something 
like rdf:seq, or some triple-encoded linked-list trick, seem like a 
better way to encode these than rdf reifications, particularly since 
reifications already have a clear meaning of their own.
 
Jonathan Borden and Drew McDermott and I have been trying to figure 
out how to do 'nesting', and every scheme we can come up with 
involves having some RDF triples which are not asserted. I really 
think there is no way past this need for RDF2 (N4 ?), but in the 
meantime it seems best to leave reification alone and do the nesting 
some other way, would be my guess.

Pat

---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



