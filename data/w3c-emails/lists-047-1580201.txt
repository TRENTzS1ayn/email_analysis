docno="lists-047-1580201"
received="Tue Aug 28 10:51:40 2001"
isoreceived="20010828145140"
sent="Tue, 28 Aug 2001 15:51:39 +0100"
isosent="20010828145139"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: RDF/XML Syntax Internal Working Draft V1.23"
id="28893.999010299@tatooine.ilrt.bris.ac.uk"
inreplyto="OF8306DD3D.B414096F-ON41256AB6.00523459&#64;bayer-ag.com"
expires="-1"

To:w3c-rdfcore-wg@w3.org
CC:jos.deroo.jd@belgium.agfa.com


>>>jos.deroo.jd@belgium.agfa.com said:
> 4.1. Infoset Notation
> [...]
> > + One or one of preceding term
>            ^^^more

OK

> [...]
> > 4.4 Production description (was 6.3 description)
> > element([namespace name]=rdf-ns,
> >     [local name]="Description",
> >     [attributes]=set(idAboutAttr?, bagIdAttr?, propertyAttr*),
> >     [children]=list())
> > | element([namespace name]=rdf-ns,
> >     [local name]="Description",
> >     [attributes]=set(idAboutAttr?, bagIdAttr?, propertyAttr*),
> >     [children]=list(propertyElt+))
> 
> I was wondering if there was any difference by saying
>   element([namespace name]=rdf-ns,
>       [local name]="Description",
>       [attributes]=set(idAboutAttr?, bagIdAttr?, propertyAttr*),
>       [children]=list(*))
> 
> and the same for 4.5 and 4.6

I actually expanded that from the more compact form and the reason
for that is twofold.

Firstly, empty elements in XML use a different form than elements
with content and having this explict makes it clear which one are
talking about.  From an implementation point of view, the
empty/non-empty cases are an important distinction.

Secondly, we can use the answers from the empty-elements decisions
that Jan wrote for property elements, to directly write down the
answers to what statements are generated from the grammar:
  http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements

but maybe in the next version

Dave



