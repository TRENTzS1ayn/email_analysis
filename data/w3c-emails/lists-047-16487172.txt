docno="lists-047-16487172"
received="Sun May 27 00:57:20 2001"
isoreceived="20010527045720"
sent="Sat, 26 May 2001 23:57:07 -0500"
isosent="20010527045707"
name="Aaron Swartz"
email="aswartz@upclink.com"
subject="Re: action item on reification"
id="B735F351.C6C0%aswartz@upclink.com"
charset="US-ASCII"
inreplyto="OF850F2008.C5E1ADB8-ON41256A57.005C2EBD&#64;bayer-ag.com"
expires="-1"

To:<jos.deroo.jd@belgium.agfa.com>, Dan Brickley<danbri@w3.org>
CC:<fmanola@mitre.org>,<w3c-rdfcore-wg@w3.org>


jos.deroo.jd@belgium.agfa.com <jos.deroo.jd@belgium.agfa.com> wrote:

>> "Are members of the class rdf:Statement uniquely picked out by their
>> predicate/subject/object properties?"
> 
> [while enjoying holiday/family time]
> to me this is axiomatic when talking about a function such as
> statement = triple(s,p,o)

Well if this is true than we're going to need another class to undo this
effect. The same triple can be asserted by multiple people and often we'll
want to talk about the stating. Hmm, perhaps:

    [ a :Stating ; rdf:value { :TestCases :utility :high } ]

would work.

(To DaveB, the {} in this example should resolve to a single reified
triple.)

-- 
[ :name "Aaron Swartz" ;
  :mbox <mailto:me@aaronsw.com> ;
  :homepage <http://www.aaronsw.com> ] is dc:author of <> .



