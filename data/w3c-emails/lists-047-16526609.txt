docno="lists-047-16526609"
received="Sun May 27 13:43:13 2001"
isoreceived="20010527174313"
sent="Sun, 27 May 2001 12:43:07 -0500"
isosent="20010527174307"
name="Aaron Swartz"
email="aswartz@upclink.com"
subject="Re: Test cases: format of input and output"
id="B736A6D9.C745%aswartz@upclink.com"
charset="US-ASCII"
inreplyto="3B113995.7E51B0A9&#64;w3.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
CC: Jan Grant<Jan.Grant@bristol.ac.uk>, RDFCore Working Group<w3c-rdfcore-wg@w3.org>


Dan Connolly <connolly@w3.org> wrote:

>>>> Something conforms wrt the test case iff it interprets the RDF as
>>>> producing* a set of triples identical with the sample output, up to
>>>> reordering and the global renaming of anonymous resources.
>>> It's too bad there's no way to reduce that to some sort/diff
>>> thingy, but there just isn't. It's inherently a graph-matching
>>> thing.
>> Ehh? What are the issues with sorting the triples and providing some
>> algorithm for anonymous resource naming?
> You're welcome to give it a try, but I don't see
> any algorithm for naming the anonymous resources
> that's any simpler than graph matching.

I don't know what graph matching is, but what's wrong with:

1) Sort each anonymous node individually in form:

<#pred> <#obj> ;

2) Remove line breaks and surround each anonnode with "[ " and " ]."

3) Combine with regular triples and sort

You end up with something like:

<#subj> <#pred3> "aaa" .
[ <#pred1> "ob" ; <#pred2> <#obj> ; ].

Am I missing something?
-- 
[ :name "Aaron Swartz" ;
  :mbox <mailto:me@aaronsw.com> ;
  :homepage <http://www.aaronsw.com> ] is dc:author of <> .



