docno="lists-047-16587675"
received="Tue May 29 06:43:09 2001"
isoreceived="20010529104309"
sent="Tue, 29 May 2001 11:41:03 +0100 (BST)"
isosent="20010529104103"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="Re: Test cases: format of input and output (uri/node/resource/entity           too)"
id="Pine.GSO.4.31.0105291129290.15643-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="3B0EB79F.621C560&#64;w3.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
cc: RDFCore Working Group<w3c-rdfcore-wg@w3.org>


On Fri, 25 May 2001, Dan Connolly wrote:

> Jan Grant wrote:

> > Re: anon resources - two elements a(X) and a(Y) should be considered to
> > represent "the same anon resource" iff X=Y (lexically)
>
> that's if X=Y, not iff.
>
> If X<>Y, they could still represent the same resource.
> Yes, they're still distinct terms, which is the relevant
> point for this excersise, but to persue the diversion,
> consider:
>
> <mailto:connolly@w3.org> <http://example/vocab#ownedBy> ?x1.
> <mailto:connolly@w3.org> <http://example/vocab#ownedBy> ?x2.
>
> If ownedBy is functional/unique/many-to-one, then ?x1 and
> ?x2 represent/denote the same resource/object/thing.

OK, it's worth spelling this out explicitly (I think DanC and I think
the same thing, but mailing lists aren't the place for unspoken
assumptions).

RDF test cases are (at least, syntax-related ones) are dealing with the
turning of RDF syntax into a graph.

Thus above, I should have referred to "anonymous nodes" rather than
"anonymous resources". Two elements a(X) and a(Y) should be considered
to represent "the same anonymous node (in the resultant graph)" iff X=Y
lexically.

The question of an interpretive function turning nodes into
resources/entities is left as part of the semantic layer; the test cases
we're talking about don't yet require this. That I(a(X)) may
equal I(a(Y)) doesn't really matter here.

Thus, matching test outputs with the expected output is graph
matching (unification while preserving the identity/distinction between
pairs of nodes in each of the input graphs).

Do we all agree?

As to syntax, let's take a view and stick to it. I don't really care
_what_ it looks like, so the formal proposal (given before) holds (use
of r(), a() and l(), with the following amendment:

l("blah")
is a literal. We use java conventions for unicode characters.
l("blah","foo")
is a literal; foo is its xml:lang if one was specified.

If everyone is happy (ie, has no objections on technical merits) then
I'd rather we just go ahead and use this. I don't care if it'd be neater
to use {{% %}} brackets around things - we can debate this endlessly. If
someone out there has a preferred format that they've got a zillion test
cases in, speak now or forever hold your peace*.

jan

* and use perl.

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287163 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Leverage that synergy! Ooh yeah, looking good! Now stretch - and relax.



