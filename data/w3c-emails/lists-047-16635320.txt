docno="lists-047-16635320"
received="Tue May 29 13:32:29 2001"
isoreceived="20010529173229"
sent="Tue, 29 May 2001 18:32:24 +0100"
isosent="20010529173224"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: action item on reification"
id="29311.991157544@tatooine.ilrt.bris.ac.uk"
inreplyto="B735F351.C6C0%aswartz&#64;upclink.com"
expires="-1"

To: w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>
CC: Aaron Swartz<aswartz@upclink.com>


>>>Aaron Swartz said:
<snip/>
> Well if this is true than we're going to need another class to undo this
> effect. The same triple can be asserted by multiple people and often we'll
> want to talk about the stating. Hmm, perhaps:
>     [ a :Stating ; rdf:value { :TestCases :utility :high } ]
<snip/>
> 
> (To DaveB, the {} in this example should resolve to a single reified
> triple.)

The above is an N3 fragment so I tried to complete it:
----------------------------------------------------------------------
@prefix : <#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

[ a :Stating ; rdf:value { :TestCases :utility :high } ] 
  <http://example.org/predicate>
  <http://example.org/object>.
----------------------------------------------------------------------

which gives rather odd RDF/XML output that mixes rdf and other
namespaces - maybe due to the cwm.py version I've got (1.30).
Anyway, it generates a parseType="Quote" block although I understand
newer versions use log:quote.

When someone uses n3's {}, they need to say what they mean by it -
does it auto-reify the contained statements, somehow 'quote' the
content, do the same as parseType="literal" or something else?

rdf:parseType for literals and non-resource values is underspecified
in RDF M&S and consequently has been inconsistently implemented.  The
reasons for this will be dealt with another issue or two, yet to be
discussed:
  http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure
  http://www.w3.org/2000/03/rdf-tracking/#rdfms-literals-as-resources

In summary: Do not use N3 {} in order to talk about RDF (model) or
RDF/XML (syntax) since:
 * it is not really in either - unless you tilt your head and squint :-)
 * it is being used for radically different things
 * the mechanism used for N3 {} in RDF/XML is not likely to work well
 * cwm/N3 is a research tool that makes no promises not to change, so
   the current interpretation might change again.  That's why its research.

Dave



