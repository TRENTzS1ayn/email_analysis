docno="lists-047-1818131"
received="Wed Aug 29 17:58:01 2001"
isoreceived="20010829215801"
sent="Wed, 29 Aug 2001 14:59:08 -0700"
isosent="20010829215908"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Fwd: thoughts on the new rdfs:subClassOf"
id="v04210109b7b314d219b6@[130.107.66.237]"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org
Cc:"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>

I cc'd the draft MT document to Peter Patel-Schneider (who wrote the 
DAML model theory) for comment, and I'm glad I did. In the light of 
the following, and the discussion relevant to this issue on the 
recent DAML telecon, I propose to alter the MT so as to remove the 
'proper subclass' condition. Note, this does NOT mean that RDF will 
be semantically obliged to allow subclass loops, but it will leave 
the issue open.  This will make the MT more 'normal' in any case, and 
is compliant with Java usage, as Frank v.Harmelen has pointed out:

---------
On p.170 of "The Complete Java 2 Certification Study Guide" written 
by Simon Roberts, Philip Heller and Michael Ernest, it says:

"In general, a class is considered to be a subclass of itself. That 
is, if classes A, B and C are defined so that C extends B, and B 
extends A, then the subclasses of A are A, B, C. The term 'strict 
subclass' is used to describe the subclasses excluding the class 
itself. So, the strict subclass of A are only B and C."

So that pretty conclusively kills the argument that Java programmers 
want the proper subclass interpretation. They might want the acyclic 
interpretation, but (as argued in previous msg) this can be 
coherently combined with allowing non-proper subclasses.
---------

Pat Hayes

>X-Authentication-Warning: mail.daml.org: majordom set sender to 
>owner-joint-committee@mail.daml.org using -f
>To: joint-committee@daml.org
>Subject: thoughts on the new rdfs:subClassOf
>Date: Wed, 29 Aug 2001 13:24:33 -0400
>From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>
>X-Dispatcher: imput version 990905(IM130)
>Lines: 67
>Sender: owner-joint-committee@mail.daml.org
>
>Here are some thoughts on rdfs:subClassOf.
>
>peter
>
>
>Notes on the new definition of rdfs:subClassOf
>
>The RDF Core working group has modified the definition of rdfs:subClassOf
>to indicate that rdfs:subClassOf means proper subclass.  In his model
>theory for RDF(S) Pat Hayes gives this the meaning that if A is a subclass
>of B then in each model of the entire knowledge base the extension of A
>must be a proper subclass of the extension of B.
>
>This definition of rdfs:subClassOf has several unfortunate consequences.
>These unfortunate consequences do not appear to affect RDF(S), they only
>arise if one wants to create a more-expressive formalism that uses
>rdfs:subClass as its generalization primitive, such as DAML+OIL.
>
>1/ If A is an rdfs:subClassOf of B and if B is necessarily empty then the
>entire knowledge base is inconsistent.  For example, any knowledge base
>containing the two following classes
><daml:Class rdf:ID="Confused">
>  <rdfs:subClassOf>
>    <daml:Restriction daml:minCardinalty="2">
>      <daml:onProperty rdf:resource="children">
>    </daml:Restriction>
>  </rdfs:subClassOf>
>  <rdfs:subClassOf>
>    <daml:Restriction daml:maxCardinalty="1">
>      <daml:onProperty rdf:resource="children">
>    </daml:Restriction>
>  </rdfs:subClassOf>
></daml:Class>
><daml:Class rdf:ID="SubConfused">
>  <rdfs:subClassOf rdf:resource="#Confused">
></daml:Class>
>is inconsistent.  It is strange that the definitions of two classes, which
>may not be used anywhere else in the knowledge base can cause the entire
>knowledge base to become inconsistent.
>
>This is a consequence of any reasonable definition that makes
>rdfs:subClassOf a proper subclass, not just Pat Hayes's model theory.
>
>2/ If A is an rdfs:subClassOf of B then B has at least one member in every
>model.  This means that B cannot even be contingently empty.  Thus
>from
>        <daml:Class rdf:ID="Confused">
></daml:Class>
><daml:Class rdf:ID="SubConfused">
>  <rdfs:subClassOf rdf:resource="#Confused">
></daml:Class>
>it follows that Confused has cardinality at least one.  Again, it is
>strange that simply having a subclass provides a minimum cardinality for a
>class.
>
>This is a consequence of Pat Hayes's model theory, and need not be true in
>other definitions that make rdfs:subClassOf be a proper subclass.
>
>3/ If Ai is an rdfs:subClassOf of Ai+1 for i running from 0 to n, then An
>has at least n members in every model.  As a consequence, the minimum
>number of resources in a model for a knowledge base with an rdfs:subClass
>chain of length n is n.
>
>This is a consequence of Pat Hayes's model theory, and need not be true in
>other definitions that make rdfs:subClassOf be a proper subclass.
>
>Peter F. Patel-Schneider

---------------------------------------------------------------------
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



