docno="lists-047-1920390"
received="Wed Aug 29 22:19:56 2001"
isoreceived="20010830021956"
sent="Wed, 29 Aug 2001 21:19:53 -0500"
isosent="20010830021953"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: ACTION 2001-08-24#9 : issues with containers"
id="3B8DA2C9.866CC71F@w3.org"
charset="us-ascii"
inreplyto="v04210114b7b334f8a7a9&#64;[130.107.66.237]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
CC:w3c-rdfcore-wg@w3.org

pat hayes wrote:
> 
> Re: ACTION 2001-08-24#9 Pat: Write up a summary of the issues with containers
> 
> OK, here are the ones that seem to be significant from trying to
> incorporate containers in the MT. Note, these arise independently of
> the matter of what rdf:li means; I'm assuming that has been somehow
> dealt with and considering only the use of properties of the form
> rdf:_n where n is an explicit integer, ie things of type
> rdfs:containerMembershipProperty.
> 
> 1. There is no way to say that some set of container contents is
> *all* that is in a container.

This is already on our issues list:

  http://www.w3.org/2000/03/rdf-tracking/#rdfms-seq-representation

There's no easy answer.

[...]
> It seems to me that in order to be really useful, containers need
> some such device.

I believe so too, but the compatibility issues look hairy.


> 2. It isn't clear whether containers (particularly sequences) can
> have 'gaps' or not.

We decided (1) the spec is indeed unlear here, to
the point of erroneous; (2) they can have gaps;
hmm... at least: I thought we did;
I don't see it in the issues list... and I've reviewed
the meeting records back to May.

Where the heck did it go? Chairs? help? Am I hallucinating?


> I suggest we at least say whether or not it does, one way or the other.

yes: say it does not [i.e. the gappy one does not entail the gapless
one].


> 3.  There really doesn't seem to be any actual difference between
> bags and sequences in RDF;

No more and no less than any two other classes, such as
Apples and Pears.

The core model theory is really, very, very simple.
I think you're looking for more than is there.
It's just existential conjuctive formulas over two-place
predicates. Aside from the (P (P P)) stuff, it's
really vanilla and basic.


> 4.  rdf:alt as described in the M&S is a crock;

I agree that any sort of disjuctive semantics is bogus.
But does it really say that in the spec? Hmmm... perhaps
this text could be read that way...

  RDF defines three kinds of collections: ordered lists,
  called Sequences, unordered lists, called Bags, and lists
  that represent alternatives for the (single) value of a property,
  called Alternatives.


> in particular,
> because of 1., asserting a property of an Alt hardly says anything;
> it could be true even if all the members of the alt which are
> mentioned in the graph do not have the property, since there might be
> some others that do. (See the latest version of the MT document for a
> longer discussion of this.)
> 
> Fixing 1 seems to be a prerequisite for making rdf:alt coherent in
> the way stated in the M&S.

Not really. It's a useful application-level construct even
if it's not novel at the model theoretic level.

i.e. applications can define properties, e.g. my:p with rules ala...

(forall (?s ?C)
          (implies (and (rdf:type ?C rdf:Alt)
                        (my:p ?s ?C))
               (exists (?x ?n)
                  (and (rdf:type ?n rdfs:ContainerMembershipProperty)
                       (?n ?C ?x)
                       (my:p ?s ?x) ) ) ) )

or some such.

>  I would  suggest that we simply trash
> rdf:alt and suggest that our successors re-do it better.

I think it has reasonable uses; it's just like multipart/alternative
in MIME: the sender sends many acceptable values, and the
receiver choses one; but this is an application level convention,
not a logical inference from the core model theory.

> 
> ---------
> 
> That's all, folks.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



