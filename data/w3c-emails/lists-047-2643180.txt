docno="lists-047-2643180"
received="Sat Dec  1 06:15:03 2001"
isoreceived="20011201111503"
sent="Sat, 1 Dec 2001 13:14:48 +0200 "
isosent="20011201111448"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Cutting the Patrician datatype knot"
id="A03E60B17132A84F9B4BB5EEDE57957B162286@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Cutting the Patrician datatype knot"
expires="-1"


To:pfps@research.bell-labs.com
Cc:ashokma@microsoft.com,www-rdf-interest@w3.org,joint-committee@daml.org,w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Peter F. Patel-Schneider 
> [mailto:pfps@research.bell-labs.com]
> Sent: 30 November, 2001 13:08
> To: Stickler Patrick (NRC/Tampere)
> Cc: ashokma@microsoft.com; www-rdf-interest@w3.org;
> joint-committee@daml.org
> Subject: RE: Cutting the Patrician datatype knot
> 
> 
> OK.  Lets see how PDU handles various inputs.
> 
> Where is the definition of PDU?  When I get it, I'll try to 
> come up with
> some example inputs and how I think PDU behaves on them.
> 
> peter

PDU is defined in

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0579.html
 
The recently adopted short acryonym PDU is not mentioned there,
but that's the most complete definition of the PDU approach and
it is what I mean when I refer to PDU.

Note that PDU is not new. In fact, its just the combination of
the P proposal, the DAML idiom (viewed as a minor modification
of the DC proposal), and the U idiom (URVs) as synonymous idioms
defining the pairing of lexical form and data type -- and is also
future compatible with the P++ proposal as noted in 

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0637.html

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com


> 
> 
> 
> 
> From: Patrick.Stickler@nokia.com
> Subject: RE: Cutting the Patrician datatype knot
> Date: Fri, 30 Nov 2001 19:53:07 +0200
> 
> > > > Well, if that's how the union data type is defined to work, then
> > > > it's not technically a problem -- i.e. there really is no actual
> > > > ambiguity in the mapping -- but it would still IMO be a very 
> > > > odd data type ;-)
> > > 
> > > Sure, you may consider it to be odd, but it is a valid data 
> > > type, and it
> > > does cause problems for many of the datatype schemes.
> > 
> > Fair enough. I don't think, though, that it's a problem
> > for the PDU approach. If extra XML Schema mechanisms are
> > available for interpeting XML Schema typed literals, fine,
> > use them, but I don't think RDF should necessarily have to
> > know about them or that data types in general must be
> > defined using XML Schema mechanisms.
> > 
> > I still take the view that we should fully support XML
> > Schema data types as well as any data types, but that
> > RDF remains neutral to data typing scheme.
> > 
> > Cheers,
> > 
> > Patrick
> 



