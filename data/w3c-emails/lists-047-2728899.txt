docno="lists-047-2728899"
received="Wed Dec  5 07:52:31 2001"
isoreceived="20011205125231"
sent="Wed, 5 Dec 2001 12:49:22 -0000"
isosent="20011205124922"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="SYNTAX: serialization text - with naughty bit"
id="JAEBJCLMIFLKLOJGMELDCEJOCCAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>



Attn all naughty bit suggests some part of URI space to be used for bNodes
when serializing.
Search for "NAUGHTY"


Hi Dave,

here is some serialization text possibly for sect 6 in your draft:

[[[[
<p>
There are two different approaches to serializing RDF.
</p>
<p>
The basic approach uses the basic RDF syntax from RDF Model &
Syntax([RDFMS]).
In this:
</p>
<ul>
<li>
All blank nodes are assigned arbitrary URIs.
</li>
<li>
Each resource is listed in turn as the subject of a top-level
<code>rdf:description</code> element, using an <code>rdf:about</code>
attribute.
<br/>
For each triple, with this resource as subject, an appropriate property
element production is
used, with either string content (possibly empty) or an
<code>rdf:resource</code> attribute specifying the
object of the triple.
</li>
</ul>
<p>
The basic serialization is recommended for applications in which the output
RDF/XML is
to be used only in further RDF processing.
</p>
<p>
Where the intent is for the output RDF/XML file to be read by people, the
basic serialization proves unsatisfactory.
</p>
<p>The basic serialization does not conform to more restricted sub-dialects
of RDF, such as RSS [RSS] or CC/PP [CC/PP]. Hence, it is not appropriate for
such applications, for which
dialect specific serializers are needed.
</p>
<p>
If more human readable output is required the following factors should be
considered:
</p>
<ul>
<li>There are many choices, with many RDF/XML documents corresponding to
identical
RDF graphs. Individual triples can be represented in numerous ways. High
quality RDF
serialization requires that these choices are considered by the serializing
code.
Some are more appropriate than others in an application
dependent fashion.
</li>
<li>The triples in the graph need to be considered in an appropriate order.
There are many choices of order, some being more appropriate than others in
an application
dependent fashion.
</li>
</ul>
<!-- NAUGHTY bit -->
<p>
Serializations tend to be more readable if they do not attach URI labels to
blank nodes.
However, it is necessary, for some graphs, to do so, in order to refer to a
blank node in
two parts of the RDF/XML document produced. This is typically necessary when
a blank
node is the object of two triples.
In such cases, RDF processors may use URIs beginning with
"http://www.w3.org/2001/12/RDF/bnode/".
</p>
<!-- end NAUGHTY bit -->
<p>
It is not possible to use the RDF/XML serialization for serializing an RDF
graph in
which any triple has a property label which cannot be expressed as a qname.
</p>
<p>An approach to serializing RDF/XML using the full grammar in a top-down
recursive descent fashion is discussed in [UNPARSING].
</p>
]]]]

Additional references:
[[[[
[CC/PP]Composite Capability/Preference Profiles (CC/PP): Structure and
Vocabularies
W3C Working Draft 15 March 2001,  World Wide Web Consoritum
 http://www.w3.org/TR/CCPP-struct-vocab/.
[RSS] RDF Site Summary (RSS) 1.0, Gabe Beged-Dov, Dan Brickley, Rael
Dornfest, Ian Davis, Leigh Dodds, Jonathan Eisenzopf, David Galbraith, R.V.
Guha, Ken MacLeod, Eric Miller, Aaron Swartz, Eric van der Vlist,  2000,
http://purl.org/rss/1.0/spec
[UNPARSING] Unparsing RDF/XML, Jeremy J. Carroll, HP Labs Technical Report
HPL-2001-294
http://www.hpl.hp.com/techreports/2001/HPL-2001-294.html
]]]]
(note URL for tech-report doesn't work yet - could omit last part)

Jeremy



