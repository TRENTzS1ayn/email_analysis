docno="lists-047-2872721"
received="Thu Dec  6 11:50:34 2001"
isoreceived="20011206165034"
sent="Thu, 06 Dec 2001 10:50:32 -0600"
isosent="20011206165032"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: PL: how a perl programmer might do datatypes in RDF"
id="3C0FA1D8.142EA184@w3.org"
charset="us-ascii"
inreplyto="5.1.0.14.2.20011205071918.03268e50&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@MIMEsweeper.com>
CC:w3c-rdfcore-wg@w3.org

Graham Klyne wrote:
> 
> Nicely presented :-)
> 
> This looks like an approach I could live with.
> 
> I think the issue of "10" vs "010" needs to be clear -- you seem to be
> proposing that these ares distinct scalar values.

yes; they are distinguishable in all interpretations.

>  But under what
> conditions does:
> 
>      X foo "10" .
> 
> entail
> 
>      X foo "010" .
> 
> ?

it never RDF-entials nor RDFs-entials.

However, in stuff layered on top of RDF/RDFS,
if you added more axioms about foo... say, that
?x foo ?a
?a sameNumber ?b
implies
?x foo ?b
then you would get that conclusion.

To be more precise, in N3, we might introduce :IntegerProperty
and :sameInteger ala:

this log:forAll :s, :p, :o1, :o2.

{ :p a :IntegerProperty.
  :s :p :o1.
  :o1 :sameInteger :o2.
          :o1 :sameInteger :o2 } log:implies { :s :p :o2 }.

or in KIF [using (C x) as shorthand for (rdf:type x C)]:

(forall (?s ?p ?o1 ?o2)
  (=> (and (IntegerProperty ?p)
(?p ?s ?o1)
(sameInteger ?o1 ?o2))
  (?p ?s ?o2)))

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



