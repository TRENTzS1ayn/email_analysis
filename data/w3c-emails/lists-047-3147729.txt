docno="lists-047-3147729"
received="Fri Dec  7 17:51:30 2001"
isoreceived="20011207225130"
sent="Sat, 8 Dec 2001 00:51:21 +0200 "
isosent="20011207225121"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: PL: how a perl programmer might do datatypes in RDF"
id="A03E60B17132A84F9B4BB5EEDE57957B160B18@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="PL: how a perl programmer might do datatypes in RDF"
expires="-1"


To:connolly@w3.org,Graham.Klyne@MIMEsweeper.com
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Dan Connolly [mailto:connolly@w3.org]
> Sent: 06 December, 2001 11:51
> To: Graham Klyne
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: PL: how a perl programmer might do datatypes in RDF
> 
> 
> Graham Klyne wrote:
> > 
> > Nicely presented :-)
> > 
> > This looks like an approach I could live with.
> > 
> > I think the issue of "10" vs "010" needs to be clear -- you 
> seem to be
> > proposing that these ares distinct scalar values.
> 
> yes; they are distinguishable in all interpretations.
> 
> >  But under what
> > conditions does:
> > 
> >      X foo "10" .
> > 
> > entail
> > 
> >      X foo "010" .
> > 
> > ?
> 
> it never RDF-entials nor RDFs-entials.
> 
> However, in stuff layered on top of RDF/RDFS,
> if you added more axioms about foo... say, that
> ?x foo ?a
> ?a sameNumber ?b
> implies
> ?x foo ?b
> then you would get that conclusion.

But your 'sameNumber' property should be handled by
the built in RDF mechanisms for typing. I.e., you
would say 

   X foo "10".
   X foo "010".
   foo rdfs:range some:type.

or

   X foo [ rdf:value "10"; rdf:type some:type ].
   X foo [ rdf:value "010"; rdf:type some:type ].

and if both lexical forms "10" and "010" both map to the
same value in the value space of some:type, they are the same.

The lexical forms should not be the basis for equality, if 
you are really talking about equality of values.

Patrick



