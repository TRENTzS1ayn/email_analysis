docno="lists-047-3538576"
received="Wed Dec 12 18:06:30 2001"
isoreceived="20011212230630"
sent="Thu, 13 Dec 2001 01:06:23 +0200"
isosent="20011212230623"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="Question about S"
id="A03E60B17132A84F9B4BB5EEDE57957B160B3D@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
expires="-1"


To:w3c-rdfcore-wg@w3.org


OK, I alluded to a question that I've asked several
times about a characteristic of the S approach for
which I feel I haven't gotten a satisfactory answer.
I did get one very short comment from Pat, which merely 
emphasized my point (and concern).

Here is the question again with examples:

The S examples include statements such as the following:

   Bob ex:age _:1 .
   _:1 s:integer "10" .
   s:integer rdfs:domain xsd:integer .

I understand this to mean that the node '_:1' denotes a value 
of type xsd:integer and there is a mapping to that value from 
the lexical form "10" which is presumed to be a member of the 
lexical space of xsd:integer.

However, this is extending the semantics of rdfs:domain in
a way that only apples to data type properties by saying
something about the object of the statement rather than
the class of the subject -- i.e. that "10" is a member of the
lexical space of xsd:integer.

Furthermore, what if we use rdfs:subPropertyOf as follows:

   Bob ex:age "10" .
   ex:age rdfs:subPropertyOf s:integer .
   s:integer rdfs:domain xsd:integer .

Now things get messy. 

This basically asserts that Bob denotes a value in the
value space of xsd:integer, which is not (I would presume)
what is intended. In this case, it is the literal labled
node that denotes both the value and lexical form.

Thus, the interpretation/semantics of the S data typing 
property and use of rdfs:domain seems to depend on whether
the subject is a bNode or not.

I am concerned about these (apparent) inconsistency.

It also seems to indicate that data typing properties are
some other kind of property than current RDF properties for 
which the currently defined semantics of rdfs:domain, 
rdfs:subPropertyOf, etc. is insufficient and that we would
need to modify/extend/constrain the semantics of these
mechanisms to address these new data typing properties.

I would appreciate folk's comments regarding the above,
and apologize if I have not communicated my questions and
concerns clearly enough.

Thanks,

Patrick
 



