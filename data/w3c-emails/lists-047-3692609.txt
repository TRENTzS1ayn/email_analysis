docno="lists-047-3692609"
received="Fri Dec 14 05:08:00 2001"
isoreceived="20011214100800"
sent="Fri, 14 Dec 2001 10:04:30 -0000"
isosent="20011214100430"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Reification"
id="JAEBJCLMIFLKLOJGMELDMELJCCAA.jjc@hplb.hpl.hp.com"
charset="US-ASCII"
inreplyto="OF4AD323F7.E7F1EEED-ON41256B21.007487D8&#64;bayer-ag.com"
expires="-1"

To:<jos.deroo.jd@belgium.agfa.com>,<dave.beckett@bristol.ac.uk>
Cc:<w3c-rdfcore-wg@w3.org>



Jos:
> I would propose to drop reification!
> so proposal to drop its sentences in 5.5, 5.9, 5.10, 5.11, 5.12 and 5.14
> as well as "5.26 Reification Rules"

Mike Dean posted an interesting provenance example to webont:

 http://lists.w3.org/Archives/Public/www-webont-wg/2001Dec/0102.html


My take on this was not - wow a use case for reification, but ...

 This use case needs provenance. Provenance is an important part of the
information; hence the provenance model should be an *explicit part* of the
overall schema/ontology for the information being collected.


i.e. RDF reification can be seen as a one size fits all solution for
provenance, which history shows as having fitted hardly anyone. A better
way, which is more in tune with the extremely open undogmatic nature of the
semantic web, is to allow many different schemata for provenance to flourish
and not to give preference to any one of them.



I think we should not *drop* reification, just not encourage it.
We can treat reification as a purely syntactic macro, turning an rdf:ID on a
property element into the reification quad. We could offer no model theory,
and no primer. It is there simply as a backward compatibility thing.

Jeremy



