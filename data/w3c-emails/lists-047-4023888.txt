docno="lists-047-4023888"
received="Thu Dec 20 09:53:56 2001"
isoreceived="20011220145356"
sent="Thu, 20 Dec 2001 12:30:39 +0000"
isosent="20011220123039"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="RE: Question about S"
id="5.1.0.14.0.20011220122313.02eb66a8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="A03E60B17132A84F9B4BB5EEDE57957B160B45&#64;trebe006.NOE.Nokia. com"
expires="-1"


To:Patrick.Stickler@nokia.com,Graham.Klyne@MIMEsweeper.com
Cc:w3c-rdfcore-wg@w3.org

Hi Patrick,

At 03:21 17/12/2001 +0200, Patrick.Stickler@nokia.com wrote:

[...]

> >
> > The statements above, as given, don't express the idea that "10" is a
> > member of the lexical
> > domain of xsd:integer.  Hence...
>
>Then can you provide an alternate example that does? I'm
>presuming that somehow, somewhere, we need to know that "10"
>is a member of the lexical space of xsd:integer. How is that
>defined in S if not as above?

Consulting

   http://www-db.stanford.edu/~melnik/rdf/datatyping/

in section 4.9 we find:

   [ ] --foo:prop-->[ ]--xsd:integer.map-->"10"

[...]


>And then how do you declare a given URI as a datatype-defining
>URI?

URI's dont' define datatypes; they are names of resources.


>Perhaps you (or someone) could try (for my benefit, seemingly
>having a rather challenged perspective) to give one or two
>examples of how a pairing ("10", xsd:integer) is defined in
>terms of the S 'idiom'?

I believe Sergey has done something rather similar (using
date rather than integers) in:

   http://www-db.stanford.edu/~melnik/rdf/datatyping/



>It seems that every time I think I have a handle on the S
>proposal, it appears I don't. Or maybe I do, iteratively,
>but it seems to keep changing insofar as which mechanisms
>are used to do what.
>
>Leading off from Frank's list of basic requirements, and
>taking the conceptual view of "doing" data typing by
>capturing the pairing of lexical form and data type, how
>does one, using the S idioms (of whichever flavor):
>
>1. define the pairing ("10", xsd:integer) locally, with
>    explicit arcs on the object node; i.e. the equivalent
>    of the DAML idiom:
>
>       xxx ex:prop _:1 .
>       _:1 rdf:value "10" .
>       _:1 rdf:type xsd:integer .
>
>2. define the pairing ("10", xsd:integer) globally, with
>    typing defined in a schema; i.e. the equivalent of the P
>    idiom:
>
>       xxx ex:prop "10" .
>       ex:prop rdfs:range xsd:integer .

The aforementioned document does both of these.

Brian



