docno="lists-047-5127032"
received="Thu Jul 12 03:03:21 2001"
isoreceived="20010712070321"
sent="Thu, 12 Jul 2001 02:02:51 -0500"
isosent="20010712070251"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: Proposal: #rdfms-identity-anon-resources"
id="3B4D4B9B.D65E57F9@w3.org"
charset="us-ascii"
inreplyto="5.0.2.1.2.20010711180108.038ba8a0&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@Baltimore.com>
CC: RDF core WG<w3c-rdfcore-wg@w3.org>

Graham Klyne wrote:
> 
> All,
> 
> With reference to my previous message:
> 
>    http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0024.html
> 
> there's not been an overwhelming response concerning the key question
> raised, but some muted agreement with the suggestion that this is really a
> syntactic issue.

I'm perhaps a bit out of the loop, but on this issue,
please don't let my silence go as agreement.

On the contrary: I consider it essential that the
abstract syntax has a distinguished representation
for anonymous nodes, and that the interpretation
of these anonymous nodes in the abstract syntax
works like existentially quantified variables
in FOPL.

I've given test cases and running code (n-triples2kif.pl)
to support this position; I believe Pat H and
somebody else agreed with me.

> By way of a reminder, the key question was:
> 
>    1. Are anonymous resources allowed in the abstract graph syntax?

Absolutely, yes.

> In order to either (a) declare a quick victory, or (b) flush out the
> objections, I'm going to assume the answer is "no" and make a proposal for
> resolution of this issue.

I can't support any such proposal.

As to arguments in favor of such a proposal:

from aaron:

|I think all parsers should spit out 
|equivalent genids for the same document -- the spec should 
|mandate the genid to use.

I'm pretty sure there is no algorithm for coming up
with genids that works; i.e. there's no algorithm
for sorting the triples in a graph: you can't treat a graph
as if the edges didn't (sometimes) cross.

From Sergey:

|I agree with Aaron. Otherwise, testing parsers for compliance is
tricky.

We have two or three independent implementations of
the test for whether two n-triples files match,
using the existing n-triples syntax which *does* represent
anonymous nodes in a distinguished fashion.

Clearly it's preferable to complicate compliance testing
to some extent -- an extent that is evidently tolerable,
to at least 3 implementors --
than to complicate parsing with a consistent-genid algorithm,
especially when no such algorithm has been implemented
or even designed.

Er.. I guess there's a hash based algorithm that's
been designed and implemented, but it doesn't work,
as I explained earlier. I suppose I should re-iterate in detail.
But I don't have the details assembled just now.


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



