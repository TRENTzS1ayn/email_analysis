docno="lists-047-7444752"
received="Tue Jul 24 01:01:10 2001"
isoreceived="20010724050110"
sent="Mon, 23 Jul 2001 22:01:16 -0700"
isosent="20010724050116"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Proposal: #rdfms-identity-anon-resources"
id="v04210120b782b062b4f3@[130.107.66.237]"
charset="us-ascii"
inreplyto="3B5BB815.4351E211&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>DanC makes concrete a fundamental philosophical point:
>
>  An RDF processor can never know enough about the real world to decide
>  that two anonymous descriptions were intended to describe the same
>  resource.

True; but it may be worth remarking that this is partly because of 
the limited expressiveness of RDF, and might change in RDFn for 
n>1.0. For example if one could express uniqueness of a property, 
then knowing that two nodes had the same value of the property would 
be enough, whether the nodes were anonymous or not.

>Thus, if an RDF processor is ever to generate a URI for an anonymous
>resource, it must never use the same URI twice, otherwise it risks
>asserting that two different resources are in fact the same.

Right, which is exactly the correct logical rule for generating a 
skolem constant from an existential assertion: the skolem name has be 
new, ie not used anywhere else in the logical theory. In our case the 
'logical theory' has to be taken to be the entire Web in order to be 
safe. (Which does not mean that the entire Web is part of the theory, 
but that the processor has no way to know where the edges of its 
theory are.)

>The only algorithms that it can use therefore are those that generate
>(probably) unique identifiers each time they are called such as uuidgen.

Right, I agree.

>Brian
>
>
>Dan Connolly wrote:
> >
> > Aaron Swartz wrote:
> > >
> > > On Wednesday, July 18, 2001, at 01:21  PM, Dan Connolly wrote:
> > >
> > > > I've noodled on the approach of naming things based on their
> > > > XML element position, and I've convinced myself that won't
> > > > work either. I don't have a proof that there's no such algorithm,
> > > > but I'm not likely to spend more time thinking about it until
> > > > somebody makes a concrete suggestion (i.e. running code)
> > > > of an algorithm that works.
> > >
> > > Umm, what about the one built in to SiRPAC and most other RDF
> > > parsers. It will reliably generate the same numbered anonymous
> > > nodes for the same RDF/XML input.
> > >
> > > http://www.w3.org/RDF/Implementations/SiRPAC/
> > > http://zoe.mathematik.Uni-Osnabrueck.DE/RDF/parser.html
> >
> > But that algorithm generates the same identifier for lots
> > of different inputs.
> >
> > consider doc1, which says:
> >
> >         I'm thinking of something.  [sirpac generates: doc1#_g1 ]
> >         It's greater than 5.    [ sirpac spits out: <doc1#g1>
> > math:greaterThanNumeral "5" ].
> >
> > then I edit doc 1 and feed it to SIRPAC again:
> >
> >         I'm thinking of something.  [sirpac generates: doc1#_g1 ]
> >         It's less than 5.       [ sirpac spits out: <doc1#g1> 
>math:lessThan "5" ].
> >
> > the documents I wrote down didn't conflict with each other:
> > I was thinking of different somethings.
> >
> > But the triples that sirpac generates when parsing them do
> > conflict: they say that the very same something is
> > both less than 5 and greater than 5.
> >
> > The identifier has to carry all the information that
> > was said about it in order to "work", no?
> >
> > p.s. if you don't like my informal "I'm thinking of something"
> > syntax, it's mnemonic for:
> >
> >         <rdf:Description>
> >                 <math:greaterThanNumeral>5</math:greaterThanNumeral>
> >         </rdf:Description>
> >
> > and
> >
> >         <rdf:Description>
> >                 <math:lessThanNumeral>5</math:greaterThanNumeral>
> >         </rdf:Description>
> >
> > --
> > Dan Connolly, W3C http://www.w3.org/People/Connolly/

---------------------------------------------------------------------
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



