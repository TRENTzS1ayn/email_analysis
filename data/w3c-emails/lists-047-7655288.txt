docno="lists-047-7655288"
received="Tue Jul 24 12:40:55 2001"
isoreceived="20010724164055"
sent="Tue, 24 Jul 2001 17:38:20 +0100"
isosent="20010724163820"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="updated strawman model theory"
id="3B5DA47C.2206DA1F@hplb.hpl.hp.com"
charset="us-ascii"
expires="-1"


To: rdf core<w3c-rdfcore-wg@w3.org>

I've done an updated version of the strawman model theory based on the 
feedback so far:

Let U be the set of absolute URI References (as defined by RFC 2396).  
          
                          //ignore lang and namespaces for now
Let S be the set of of ISO 10646 strings

An interpretation I of STATEMENTS, a set of statements 
{s1, s2, ... ,sn} where each si is an n-triple statement,
consists of:

A set R of thingies

A subset P of thingies which corresponds to Properties

A mapping IN : U -> R

A mapping IEXT : P -> powerset(R x R)          // R cross R

A mapping IS : S -> R

Let STATEMENTS be a set {s1, s2, ..., sn} of n-triple statements

Let A be the set of names of the form _:name in STATEMENTS

STATEMENTS is true in I if and only if there is a substitution
mapping SUBST from the members of A to R such that each member 
of STATEMENTS is true in I under that substition.

<s> <p> <o> .  is true in I under substitution SUBST if and only if:

   s, p, o are members of U, IN(p) is a member of P
   (IN(s), IN(o)) is a member of IEXT(IN(p))

<s> <p> "string" . is true in I under substitution SUBST if and only if:

   s and p are members of U, IN(p) is a member of P 
   and string is a member of S
   (IN(s), IS(string)) is a member of IEXT(IN(p))

_:name <p> <o> is true in I under substitution SUBST if and only if:

  p and o are members of U, IN(p) is a member of P and
  (SUBST(_:name), IN(O)) is a member of IEXT(IN(p))

<s> _:name <o> is true in I under substitution SUBST if and only if:

  s and o are members of U, SUBST(_:name) is a member of P and
  (IN(s), IN(o)) is a member of IEXT(SUBST(_:name))
 

and similarly for anon nodes in other positions in the n-triple statement.

No doubt there is a more elegant way of expressing this without lots of
repetition.


Brian



