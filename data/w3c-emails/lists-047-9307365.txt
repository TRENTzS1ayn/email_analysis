docno="lists-047-9307365"
received="Thu Jun  7 22:05:13 2001"
isoreceived="20010608020513"
sent="Thu, 7 Jun 2001 21:05:13 -0500"
isosent="20010608020513"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: (tentative) container model proposal"
id="v04210165b745df891a7c@[205.160.76.219]"
charset="us-ascii"
inreplyto="Pine.LNX.4.30.0106071835180.29416-100000&#64;tux.w3.org"
expires="-1"


To: Dan Brickley<danbri@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>On Thu, 7 Jun 2001, Jan Grant wrote:
>
> > On Wed, 6 Jun 2001, Dan Brickley wrote:
> >
> > > (Tentative) Proposed Simplification
> >
> > >    The alternative to this reading is to take the paragraph about
> > >    sequential numbering to apply to instances of RDF data, not just when
> > >    serialised as XML/RDF but also in the context of databases, APIs etc.
> > >    To the authors knowledge (@@refs to the contrary welcome), there are
> >
> > http://ioctl.org/rdf/java/RDF.tar.gz
>
>Thanks! To clarify: if I create a sequence with 10 elements, then remove
>say the 7th, does the database do something like renumber the 8th to 7th,
>9th to become 8th etc etc., so as to preserve the continuity of numbers?

I would suggest not doing this, on several grounds.
1. The basic RDF model, if I am at last beginning to understand it, 
is that triples represent information about things, and that this 
information is inherently 'partial' in that it is always possible to 
add more. Following this line of thinking, knowing that the 8th item 
in a sequence is A, say, is partial knowledge of the sequence which 
can stand on its own, and says what it says independently of any 
context; and it seems quite reasonable that one could have partial 
information about a sequence, ie knowing its 8th element is A is 
independent of knowing its 7th element is B.
2. If containers of one kind or another are used to encode 
information by applications, then the position of some data element 
in a sequence might be used to encode information that should be 
preserved.
3. Similarly, it might be quite handy to be able to tell when one has 
incomplete information about the contents of a container. For 
example, a parser might want to know if all the parts of some 
expression are present.

>Does the database reject assertions such as
>
>[c1] -type-> [rdf:Seq]
>[c1] -rdf_23-> foo

Why should it? If I follow this, it would be saying that a certain 
thing was a sequence and also has property rdf_23. (?) That seems 
harmless and might be a useful way to say things about sequences.

>Is it impossible to use RDF.tar.gz to store 'gappy' descriptions of
>containers using the RDF built in container constructs?
>
> > >    no implementations of RDF that take this view, since it makes exchange
> > >    of partial information about containers highly problematic.
> >
> > It's a work-in-progress and the framework for experimental stuff I'm
> > interested in (query engines, anonymous resources, etc.)
> >
> > I've yet to see a real use of the exchange of "partial information about
> > containers".
>
>Imagine some useful information represented using containers, where the
>numbering has been used to carry meaning (eg. search results).

Yes, exactly.

>Imagine I
>send you some subset of that data serialised as XML/RDF. That's it.
>Actually, you might have a chat to Jasper and Nikki (ILRTers) about their
>representation of Z39.50 stateful searches in RDF; they may be doing just
>this. Z39.50 bibliographic search results can be represented as a
>(possible very large) RDF:Seq. Bits of that RDF:Seq get described in
>RDF/XML in response to queries by a client application.
>
>It might be helpful to think about this by analogy with schema
>language constraints you might learn (eg. using RDFS / DAML+OIL etc) about
>other data structures. For example, while a Person might always have two
>parents, that constraint doesn't require all representations of that
>person to always describe both their parents. Same goes for containers and
>the things in them.

Exactly, I agree. Think of RDF as describing the container rather 
than being an implementation of it, and this makes more sense. When 
you have all the pieces, you can think of it either way.

Pat Hayes

---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



