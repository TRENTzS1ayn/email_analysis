docno="lists-047-9319298"
received="Fri Jun  8 05:31:54 2001"
isoreceived="20010608093154"
sent="Fri, 8 Jun 2001 10:29:57 +0100 (BST)"
isosent="20010608092957"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="Rudimentary implementation experience Was: (tentative) container           model proposal"
id="Pine.GSO.4.31.0106081019500.16683-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="Pine.LNX.4.30.0106071835180.29416-100000&#64;tux.w3.org"
expires="-1"

To: Dan Brickley<danbri@w3.org>
cc: w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>


On Thu, 7 Jun 2001, Dan Brickley wrote:

> On Thu, 7 Jun 2001, Jan Grant wrote:
>
> > On Wed, 6 Jun 2001, Dan Brickley wrote:
> >
> > > (Tentative) Proposed Simplification
> >
> > >    The alternative to this reading is to take the paragraph about
> > >    sequential numbering to apply to instances of RDF data, not just when
> > >    serialised as XML/RDF but also in the context of databases, APIs etc.
> > >    To the authors knowledge (@@refs to the contrary welcome), there are
> >
> > http://ioctl.org/rdf/java/RDF.tar.gz
>
> Thanks! To clarify: if I create a sequence with 10 elements, then remove
> say the 7th, does the database do something like renumber the 8th to 7th,
> 9th to become 8th etc etc., so as to preserve the continuity of numbers?
>
> Does the database reject assertions such as
>
> [c1] -type-> [rdf:Seq]
> [c1] -rdf_23-> foo
>
> Is it impossible to use RDF.tar.gz to store 'gappy' descriptions of
> containers using the RDF built in container constructs?

Last question first. No, it doesn't; an it doesn't recognise them as
special, either. I've got an additional container-supporting API which
does something clever, and an (optional) layer that sits on top of this
and intercepts assertions like those above and reexpresses them in terms
of the collection API.

First question: yes the database does (from a functional POV) "renumber"
collection elements.

My experience, however, leads me to believe this behaviour isn't
necessarily the best way to do stuff. In particular, I found myself
toying with inventing (per-collection or per-stream or per-database)
switches to turn off this behaviour. Why? Well, there are two ways to
look at the two assertions Dan has above:

- turn rdf:_23 into an "assert at end of collection"
- insert 22 placeholders.

That would still let me do slightly more rapid collection-handling
(which is waht I was playing with) while permitting the "appropriate"
behaviour when I saw this case:

<rdf:Seq>
  <rdf:_3> <rdf:Description rdf:about="http://random.ioctl.org/#third" />
  </rdf:_3>
  <rdf:_2> <rdf:Description rdf:about="http://random.ioctl.org/#second" />
  </rdf:_2>
  <rdf:_1> <rdf:Description rdf:about="http://random.ioctl.org/#first" />
  </rdf:_1>
</rdf:Seq>

Here, the renumbering "functionality" became hysterically pathological.


-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287163 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Leverage that synergy! Ooh yeah, looking good! Now stretch - and relax.



