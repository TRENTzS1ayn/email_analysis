docno="lists-048-0923282"
received="Tue Nov  6 21:57:32 2001"
isoreceived="20011107025732"
sent="Tue, 6 Nov 2001 20:57:19 -0600"
isosent="20011107025719"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="RE: Subject literals"
id="p0510104bb80e50d957a6@[65.212.118.166]"
charset="us-ascii"
inreplyto="2BF0AD29BC31FE46B78877321144043114C06A&#64;trebe003.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
Cc:w3c-rdfcore-wg@w3.org

>  > The node itself provides the locus to which the datatyping
>>  information applies (in the proposed MT extension, at any rate.
>
>OK, it's slowly beginning to dawn on me that "labels" are not
>serving as the identity of the nodes (for crying out loud, guys,
>we're working with "labeled graphs" where the "label" identifies
>the node... can't we stick with traditional terminology so folks
>don't have to learn yet another language... ;-)

Don't start on that one. These things aren't even graphs, if you want 
to get technical; they are, apparently, partially labelled directed 
pseudographs. (Don't ask, OK?)

>So, saying that "fi" is the label of some node doesn't mean that
>it can't also have some e.g. "genid:1234" identifier that serves
>as its identity in a triple, right?

Right, the genids are used in the triples lexicalization to identify 
nodes. But they aren't in the graph itself. For example, '_:1' in a 
triple might indicate a blank node. But a blank node really is 
*blank*.

>What still has me confused is talking about literals as subjects.
>OK, fine, it's really some bNode with a system-specific identifier
>(genid: URI?) acting as the subject, but I don't see how that is
>any different than the former "anonymous resource node" treatment.

It has fewer nodes, it makes more sense (to me) and its easy to interpret.

>
>I.e., in both cases you have a node as the object, and that node
has properties for rdf:type and rdf:value.

No! If the literal node can be a subject, then you don't need the 
rdf:value arc at all. Its only there to provide a blank node to link 
the rdf:type to, because the current rules won't let us hang that 
edge directly onto the literal node. And then we need the rdf:value 
link to attach this blank node back to the literal node; but we 
needn't have put the bnode there in the first place, if the literal 
node could have been a subject.  (IMHO:-)

>It seems to me that
>by calling the literal a "label" rather than an rdf:value attached
>to the node, you're just changing the cosmetics of the model but
>not the significance of it. In either case, you still have a node
>and that node has the literal attached to it.

With the rdf:value arc, we have two nodes (where one would do, IMHO)

>You're just attaching
>it in a different place. Are you really saying that
>
>   _:x:"10" rdf:type xsd:integer.
>
>is in any way functionally different than
>
>   _:x rdf:value "10"; rdf:type xsd:integer .
>

Well, its a different graph.  Maybe this is making a mountain out of 
a molehill, but there is a difference.

>???
>
>(sorry if my N-triples notation is funky, I'm still learning...)
>
>Why does moving the literal from a property of the anonymous node
>to some "label" of the anonymous node change things? It just
>means that I no longer can use generic means to get the literal,
>but must either now know how to obtain the label of the node,
>and possibly parse the label to extract the literal.
>
>(sorry, but I'm looking at all this from the perspective of
>a software engineer, and I'm trying to figure out how such a
>change in the graph representation buys me anything)

Well, what counts as a 'change'? Seems to me that

aaa eg:prop "10" .

looks awfully like two nodes and an arc. All I want to do is leave them alone.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



