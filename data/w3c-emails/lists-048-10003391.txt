docno="lists-048-10003391"
received="Mon Oct 22 20:50:49 2001"
isoreceived="20011023005049"
sent="Mon, 22 Oct 2001 18:03:53 -0700"
isosent="20011023010353"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="use case challenge (was: Re: Issue rdfms-not-id-and-resource-attr)"
id="3BD4C1F9.EA45DB6A@db.stanford.edu"
charset="us-ascii"
inreplyto="p05101040b7fa6596101a&#64;[205.160.76.193]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
CC: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org

Pat Hayes wrote:
> [..]
> I would appreciate any remarks from anyone on what the intended uses
> of reification were. What would it be to 'use reification
> effectively' ? Use it for what? Part of my problem with reification
> has always been that I am unable to see a single effective use for in
> it RDF; every suggested use I have seen has seemed to involve a
> logical or conceptual error of some kind.
> 
> Pat

Here is a challenge ;) What is an adequate way of representing
aggregation and order in RDF?

Aggregation: I want to be able to identify a set of statements as
"belonging together", e.g. describing a certain self-contained thing.
For example, consider several sets of statements gathered from different
RDF/XML pages. How do I "mark" the statements within a single graph?

Order: I want to establish an order between the authors of a book:

isbn001 dc:creator author1
isbn001 dc:creator author2

How to add ordering without destroying the semantics of dc:creator? You
won't tell me that the solution is to use a container like rdf:Bag,
right? ;)

Sergey



