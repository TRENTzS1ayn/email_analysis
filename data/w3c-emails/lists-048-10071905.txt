docno="lists-048-10071905"
received="Tue Oct 23 08:08:14 2001"
isoreceived="20011023120814"
sent="Tue, 23 Oct 2001 12:27:38 +0100"
isosent="20011023112738"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: Issue rdfms-not-id-and-resource-attr"
id="5.1.0.14.2.20011023120728.039bb930@joy.songbird.com"
charset="us-ascii"
inreplyto="p05101040b7fa6596101a&#64;[205.160.76.193]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org

At 07:12 PM 10/22/01 -0500, Pat Hayes wrote:
>I would appreciate any remarks from anyone on what the intended uses of 
>reification were. What would it be to 'use reification effectively' ? Use 
>it for what? Part of my problem with reification has always been that I am 
>unable to see a single effective use for in it RDF; every suggested use I 
>have seen has seemed to involve a logical or conceptual error of some kind.

My view of reification is that it can serve a "use without assertion" 
role;  I understand that this is not exactly the same as conventional use 
of the term in logic, so it may be mis-named..

I have found (at least) the situations in which I have wanted a construct 
that serves this purpose:

(1) encoding rules in RDF for an RDF-driven expert system shell.  The 
antecedents and consequences of any rule must be clearly distinguishable 
from the facts that may be tested/asserted when the rule is triggered.

(2) designing a program that will use RDF to drive a user interface for 
creation, editing and display of arbitrary RDF.  The RDF-encoded 
information that is accepted/returned by the UI components needs to be in 
the form of a uniformly structured description of the statements, rather 
than the statements themselves.

(3) in contemplation of trust modelling in RDF, using a framework drawing 
from the ideas of contexts.  (I think McCarthy mentions somewhere that 
contexts must deal with reifications of statements.)  In this case, a 
description of some statements is required which quite explicitly may or 
may not be regarded as true, depending upon the available provenance 
information.

In each case, I have found that reification (as I understand it) *might* be 
used, but that it has also been possible to define new RDF classes and 
properties that achieve the desired effect in a specific scenario, and 
which I am confident could be used by a software system to achieve the 
desired effect.  I think I'm starting to see (based on RDFS "closures") how 
this also might work at a model theoretic level.

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>
------------------------------------------------------------



