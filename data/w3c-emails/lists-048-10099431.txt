docno="lists-048-10099431"
received="Tue Oct 23 10:06:16 2001"
isoreceived="20011023140616"
sent="Tue, 23 Oct 2001 15:04:06 +0100"
isosent="20011023140406"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="complex numbers"
id="JAEBJCLMIFLKLOJGMELDEEGCCCAA.jjc@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="p0510103eb7fa5e47594d&#64;[205.160.76.193]"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>


Pat:
>
> PS real and imaginary parts of complex numbers seems to me to be a
> very good motivating example for allowing literals to be subjects, by
> the way. I would like to be able to write
>
> http://example.org/complex-number#imaginary-part rdfs:range
> xmds:real-number
> http://example.org/complex-number#imaginary-part rdfs:domain
> xmds:complex-number
> "13.6i20.4" http://example.org/complex-number#imaginary-part "13.6"
>
> and be referring to numbers (not strings) everywhere.
>

I am underwhelmed by this example; in fact a little worried.

So then what about ...
"13.6" http://example.org/complex-number#integral-part "13" .

This looks like a thin end of a thick wedge.

Any string encoding some (non-boolean?) datatype is subject to further
decomposition of that datum. It may be important to ensure that that
datatype internal reasoning is in a separate box from RDF. For example, if
we allow the complete range of integer operations into RDF proper we may
find that the logical properties we would like are getting undermined by the
incompleteness (or inconsistency) of any discussion of the integers.

Having literals as disjoint from resources, and forbidding literals as
subjects are two techniques that help indicate a desire to not encode the
whole of mathematics into RDF. (I think maths is the most problematic
domain).

Jeremy



