docno="lists-048-10247823"
received="Tue Oct 23 23:12:36 2001"
isoreceived="20011024031236"
sent="Tue, 23 Oct 2001 22:12:29 -0500"
isosent="20011024031229"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: complex numbers"
id="p0510104fb7fbd44efd5f@[205.160.76.193]"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDEEGCCCAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>Pat:
>>
>>  PS real and imaginary parts of complex numbers seems to me to be a
>>  very good motivating example for allowing literals to be subjects, by
>>  the way. I would like to be able to write
>>
>>  http://example.org/complex-number#imaginary-part rdfs:range
>>  xmds:real-number
>>  http://example.org/complex-number#imaginary-part rdfs:domain
>>  xmds:complex-number
>>  "13.6i20.4" http://example.org/complex-number#imaginary-part "13.6"
>>
>>  and be referring to numbers (not strings) everywhere.
>>
>
>I am underwhelmed by this example; in fact a little worried.
>
>So then what about ...
>"13.6" http://example.org/complex-number#integral-part "13" .
>
>This looks like a thin end of a thick wedge.

I didn't intend it to be.

>Any string encoding some (non-boolean?) datatype is subject to further
>decomposition of that datum.

Sure, but I didn't mean to imply that all such decompositions would 
be stateable in this way. The example is just supposed to suggest the 
kind of assertion that could be made if some datatyping scheme were 
around that would support such distinctions ('xmds' is supposed to be 
read as 'Xml Mathematical Data Scheme' or some such).

>It may be important to ensure that that
>datatype internal reasoning is in a separate box from RDF.

Right, that is what I had in mind; but once that box is available, 
there is no reason why one cannot utilize it to make assertions that 
are automatically disambiguated by it, right?

>For example, if
>we allow the complete range of integer operations into RDF proper we may
>find that the logical properties we would like are getting undermined by the
>incompleteness (or inconsistency) of any discussion of the integers.

I agree, and didn't mean to suggest that we try to do this. But one 
can allow oneself to say SOME things about SOME integers without 
thereby being committed to all of Peano arithmetic. I'm not 
suggesting that we try to encode any recursive definitions or 
anything like that.

>Having literals as disjoint from resources, and forbidding literals as
>subjects are two techniques that help indicate a desire to not encode the
>whole of mathematics into RDF. (I think maths is the most problematic
>domain).

I would agree entirely. But saying that, say, 567881962 has the 
property of being the numerical value of my SS number, seems no more 
dangerous than saying that the numerical value of my SS number is 
567881962. We allow it one way round, so why are we so antsy about 
the other way around?

I agree with your overall worry, and this is indeed why I once argued 
against allowing literals as subjects. But I'm assured by the 
description logicians that in fact it is harmless in RDF (and maybe 
even in DAML+OIL, they now tell me, thought they are less sure of 
that), so I think we should let others impose any such restrictions 
if and when they need to, and let ourselves be more liberal in our 
own foundational syntax.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



