docno="lists-048-1031185"
received="Wed Nov  7 02:47:35 2001"
isoreceived="20011107074735"
sent="Wed, 7 Nov 2001 09:47:26 +0200 "
isosent="20011107074726"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: datatypes and MT"
id="2BF0AD29BC31FE46B78877321144043114C070@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="datatypes and MT"
expires="-1"


To:melnik@db.stanford.edu,jjc@hplb.hpl.hp.com
Cc:w3c-rdfcore-wg@w3.org


> > Charter:
> > [[[
> > Specifically, the RDF Core Working Group is not chartered 
> to develop a
> > separate data typing language that duplicates facilities 
> provided by XML
> > Schema data types
> > ]]]
> > 
> > XML Schema provides a mechanism for defining complex hence 
> we MUST use that.
> 
> XML Schema provides a mechanism for defining complex 
> datatypes (it's not
> going to be easy to use such custom types defined by means of 
> XML Schema
> though). I referred to complex numbers, just as an example; to my
> knowledge, XML Schema does not define complex numbers.

I think it is very important that we keep distinct complex
data types and simple (anySimpleType) data types. Complex data types 
are built up of components which may be complex or simple
data types. Simple (anySimpleType) data types are value spaces 
for which an explicit lexical space is defined.

Thus, the issue of data typing of literals only applies to
simple XML Schema data types. Complex data types are no
different that assigning type to any other URI distinct
resource. Though one would wonder just how meaningful it
is to assign an XML Schema defined complex data type to
an RDF resource since an XML Schema complex data type
defines a sub-tree structure and not a knowledge structure
embodied in an RDF graph...

Thus, as much as it is meaningful or possible given the differences
between XML tree and RDF graph structures, RDF already fully "supports"
XML Schema complex data types as one can assign any type to any resource, 
and lexical issues are not of concern. 

The problems at hand have to do with consistent support of XML 
Schema simple types and their relation to literal objects.

Right?

Patrick
 



