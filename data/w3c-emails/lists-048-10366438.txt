docno="lists-048-10366438"
received="Wed Oct 24 05:21:04 2001"
isoreceived="20011024092104"
sent="Wed, 24 Oct 2001 10:18:50 +0100"
isosent="20011024091850"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: Closing rdfms-difference-between-ID-and-about (was: RDFCore   WG minutes for the telecon 2001-10-12)"
id="JAEBJCLMIFLKLOJGMELDKEGCCCAA.jjc@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="p05101055b7fbf0eeb2a8&#64;[205.160.76.193]"
expires="-1"

To:"Pat Hayes"<phayes@ai.uwf.edu>,"Brian McBride"<bwm@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>



Can I state again what I think is proposed here:

+ RDF/XML may have "duplicate triples" in as much as it has triples.
+ N-triples has duplicates and an N-triple doc is a bag (multiset).

Hence, the N-triples doc corresponding to an RDF/XML doc has the same number
of occurrences of each triple.

[Note: jena.compare does not do this. I am not aware of any implementations
of this. I could modify the jena.compare code to make a stand alone Java app
which was multiset aware]

+ the RDF abstract syntax is the graph, this too has mutliple triples, and
has a multiset of edges not a a set of edges.
+ the model theory uses tidy graphs in which duplicates have been removed.


Stated that bluntly, the last two points don't feel quite right to me. Can't
we have a set in the abstract syntax and note that multisets occur in other
places. Shouldn't the abstract syntax be a tidy graph? untidy graphs just
being an implementation detail.

Jeremy



> -----Original Message-----
> From: w3c-rdfcore-wg-request@w3.org
> [mailto:w3c-rdfcore-wg-request@w3.org]On Behalf Of Pat Hayes
> Sent: 24 October 2001 05:18
> To: Brian McBride
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: Closing rdfms-difference-between-ID-and-about (was: RDFCore
> WG minutes for the telecon 2001-10-12)
>
>
> >Pat Hayes wrote:
> >
> >>>Brian/Pat - were does the WG stand on duplicate triples?
> >
> >
> >Actually, I'm not sure :(
> >
> >Let me try a strawman position:
> >
> >I agree with Pat that this seems to be more of an implementation
> >issue which is hard to discuss without a processing model.  However,
> >using terms like parser, loosely:
> >
> >   o it doesn't seem reasonable to require parsers to eliminate
> >duplicates - that  would prohibit the development of streaming
> >parsers.
> >
> >   o we need say nothing this in terms of representing an RDF graph -
> >it's up to the implementor whether they filter duplicates or not.
> >that way we don't break existing implementations of either family
> >for no good reason.
> >
> >   o Pat seems to reckon the model theory is simpler with a set.
>
> Its only a slight matter. Sets are more traditional and its slightly
> easier to state some of the lemmas. No big deal either way. What I
> would like however is for us to decide it one way or the other,
> because I have to re-do the math every time we change it.
>
> >Can we extend the notion of a tidy graph so that it removes
> >duplicate statements.  Any untidy graph has an equivalent tidy
> >graph, and the model theory is defined in terms of that.
>
> Yes, we can do that. Everyone go on that?
>
> Pat



