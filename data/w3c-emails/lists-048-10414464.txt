docno="lists-048-10414464"
received="Wed Oct 24 08:55:22 2001"
isoreceived="20011024125522"
sent="Wed, 24 Oct 2001 08:56:15 -0400"
isosent="20011024125615"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: Properties not predicates (was Re: PRIMER: draft data model  section)"
id="3BD6BA6F.7070301@mitre.org"
charset="us-ascii"
inreplyto="3BD66DF4.2050400&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
CC: Pat Hayes<phayes@ai.uwf.edu>, dehora<dehora@eircom.net>,w3c-rdfcore-wg@w3.org

I understood the point Brian was making (that what we call the middle 
component of the triple is one thing, and the kind of thing it *is* is 
something else;  that's why I referred to "overloading" in my earlier 
message on this subject), but it's not clear we've yet arrived at a 
satisfactory resolution.  The point is, if "predicate" is a misleading 
term to use in referring to the thing, ought we to continue to use it?

Brian McBride wrote:

> 
> 
> Pat Hayes wrote:
> 
>>> I support this as a change in specification prose.
>>> Please note there is an RDF property named "predicate"; it's used in
>>> reification. Changing that is a different matter.
>>
>>
>>
>> Yes, I just remembered this myself, and agree that would be a 
>> different matter altogether. I think I now follow Brian's earlier 
>> message. The idea would be that subject/predicate/object are 
>> grammatical categories for the parts of a triple, but the actual thing 
>> indicated by the predicate - the thingie in the middle - is called a 
>> property, right?
> 
> 
> 
> That is my interpretation of current usage.  So in an api, I have:
> 
>   stmt.getSubject()
>   stmt.getPredicate()
>   stmt.getObject()
> 
> to deconstruct a statement.
> 
>   stmt.getResource
> 
> does not make sense.
> 
> Brian
> 


-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



