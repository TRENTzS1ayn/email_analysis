docno="lists-048-10683408"
received="Wed Oct 24 18:15:24 2001"
isoreceived="20011024221524"
sent="Wed, 24 Oct 2001 17:15:18 -0500"
isosent="20011024221518"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Properties not predicates (was Re: PRIMER: draft data model  section)"
id="p05101071b7fce9f37107@[205.160.76.193]"
charset="us-ascii"
inreplyto="3BD70BC0.8040507&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>>....
>>>>   o a statement is an abstraction; its a tuple with three 
>>>>components, subject,
>>>>
>>
>>If distinct tuples are identified by three distinct components, then
>>however many times I write the same three components down, I've still
>>stated only one tuple.
>
>>Is a triple identified only by its components,
>>or by something else too?  If I say "Frank is confused" 500 times, have
>>I made 500 (true) statements, or only one?
>
>
>This sort of discussion can rathole deep and long.  I've seen it 
>many times before on rdf interest and elsewhere and never get 
>anywhere.

Well guys, this was kind of settled long, long ago. We have the 
terminology. The 'concrete' things - of which there are 500 in Franks 
example - are called 'tokens' (as in 'word token', 'sentence token', 
and I guess for us 'triple token') and the 'abstract' things are 
called, unfortunately, 'types'....OK, lets not go there. Let us just 
agree that when we don't say 'token', and when it matters, we always 
mean the abstract thing. So, with that understanding, there is ONE 
English sentence "Frank is confused", no matter how many times tokens 
of that sentence get said, written, emailed, whatever.

The only thing we have to bear in mind is that these abstract things 
really are *abstract*. You can't put them into computers or email 
them or point to them, or anything like that. So reifying one of 
these doesn't get you very far.

When it comes to graphs, unfortunately for Brian's peace of mind, 
there is an exactly similar possibility of confusion. For example, 
can two different graphs be exactly isomorphic? If 'graph' means 
something like a token, then yes, obviously. If it means something 
like a mathematical abstraction, then no; being isomorphic is what 
makes it the same graph. (Really, the SAME graph.) Ive been taking 
'RDF graph' to refer to the token sense until now, and thinking of 
these graphs as something like datastructures. It makes sense to talk 
of copying a graph, for example, with this reading. However, to 
follow my own advice above, I ought to really call these 'graph 
tokens'.

>It was for this, if for nothing else, that I wanted us to have a model theory.

I don't think that helps with this particular issue, however, since 
the MT is kind of neutral. You can read it as applying to the tokens 
or to the abstract structures (graphs, documents, whatever), and it 
works the same way in each case.

>Please, please, lets try to stick with the concepts we have a formal 
>mathematical definition for in the model theory.  We have nodes and 
>arcs and labels.  What does reification mean in those terms?

I think that regardless of which syntax you choose, RDF reification 
can only really be understood to be about the 'abstract' form of the 
syntax, not about the tokens.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



