docno="lists-048-10695002"
received="Wed Oct 24 18:29:00 2001"
isoreceived="20011024222900"
sent="Wed, 24 Oct 2001 17:28:54 -0500"
isosent="20011024222854"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Properties not predicates (was Re: PRIMER: draft data model  section)"
id="p05101072b7fcee156904@[205.160.76.193]"
charset="us-ascii"
inreplyto="3BD7185C.FABDC8E4&#64;mitre.org"
expires="-1"


To:fmanola@mitre.org
Cc:w3c-rdfcore-wg@w3.org

>Brian McBride wrote:
>>
>snip
>>
>>  This sort of discussion can rathole deep and long.  I've seen it many times
>>  before on rdf interest and elsewhere and never get anywhere.
>
>I agree. 
>
>>
>>  It was for this, if for nothing else, that I wanted us to have a 
>>model theory.
>>  Please, please, lets try to stick with the concepts we have a formal
>>  mathematical definition for in the model theory.  We have nodes and arcs and
>>  labels.
>
>OK, but a slight quibble at this point:  I want the model theory to help
>define and clarify the concepts we need to be using, but if we find we
>need other concepts, I want to change the model theory to cover them,
>not throw out the concepts because they aren't in the model theory.

I agree, FWIW. However I undertake to try to adapt the MT to suit 
whatever we decide.

>Now to your point:  I think the model theory has the concepts we need
>(possibly not using the same terms though).  In the model theory, we
>also have "asserted triples".  Also, in Section 2.1, there is also the
>statement: "An arc labeled with p from a node n1 to a node n2 maps [in
>logic] to an atomic assertion that the relation p holds true between the
>expressions s and o gotten by translating n1 and n2 respectively [to the
>appropriate logical constants] (written as (p s o) in KIF syntax)..."  I
>would say that the thing that is an "assertion" in logic is a
>"statement" in RDF [assuming we're dealing with only "asserted triples"
>at the moment.  What is that (p s o) thing in KIF syntax called?]  This
>was (as I understood it) the basis of all our discussions about the
>equivalence of RDF to a simple form of EC logic (using only binary
>properties.  (In fact, if I remember correctly, at one time those things
>we now call "statements" used to be called "assertions" in RDF).  The
>point is, we need more than nodes, arcs, and labels, we need things
>whose denotations are true or false.  The model theory says those things
>are asserted triples s p o (which I interpret as being the RDF syntax
>for a statement, like "Ora Lassila created <foo>").  Is the problem
>whether we're talking about the syntax (the RDF side) versus the
>interpretation?

I think that the mapping into logic doesn't help. This type/token 
distinction runs through all languages. Every time you write a piece 
of BNF you implicitly are saying that any token that can be parsed 
this way has the same 'type' (used here to mean 'syntactic type', not 
datatype). The very idea of syntax rests on the assumption of this 
distinction, since without it, the grammars could only be used once 
and then would have to be thrown away, since all the syntax class 
names would be like proper names and would only identify one thing in 
the world. So the mapping from RDF into logic can be understood as a 
mapping between the tokens (of a type) or between the types 
themselves.

>  > What does reification mean in those terms?
>
>Talk about a rathole!  How did reification get into this?

This isn't a rathole at all.  More like black ice. It is so simple 
that its hard for grown people to even see the distinction, because 
we are all so used to not bothering about it.  One wonders what the 
fuss is about. And indeed, it is all just academic hairsplitting and 
completely unimportant, until we get to reification. Then suddenly it 
matters, since the M&S seems to want to have things both ways: it 
reifies the type, but wants to use it to refer to a token. Can't be 
done!

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



