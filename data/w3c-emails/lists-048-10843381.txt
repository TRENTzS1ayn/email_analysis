docno="lists-048-10843381"
received="Thu Oct 25 10:58:37 2001"
isoreceived="20011025145837"
sent="Thu, 25 Oct 2001 09:58:17 -0500"
isosent="20011025145817"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: cheating about reification"
id="p05101089b7fdd519520e@[205.160.76.193]"
charset="us-ascii"
inreplyto="3BD796B1.656A8878&#64;db.stanford.edu"
expires="-1"


To: Sergey Melnik<melnik@db.stanford.edu>
Cc:w3c-rdfcore-wg@w3.org

>Pat,
>
>you pointed out many times that reification does not make sense. Of
>course, there is no construct in the MT draft that allows to "access"
>the reified statements directly.

Of course, but that is not my point. An earlier version of the MT did 
have such a construct but the WG asked me to remove it from the 
publication draft. My issue is with what is said about the concept of 
reification; and not really that it does not make sense, but more 
that there seem to be two senses in the M&S which are not 
distinguished, and that one of them is used in place of the other, 
which does not make sense.

>Hence, no resource symbols can ever be
>associated with those reified "thingies". To me, this looks rather like
>a problem in MT rather than a problem in Bill's or other people's
>thinking.

I'm not sure what you are talking about here, but I don't think it is 
a problem in the MT. It is easy to describe the rdf reification 
primitives in (a slight extension of) the MT - it was presented at 
the F2F -  but that description makes it clear that that sense of 
reification does not do the job that is claimed for it.

>In fact, all we have in the MT document that looks like a candidate
>vehicle for dealing with reification is the IEXT mapping. However, as
>you explained many times, IEXT maps resources to pairs of resources, and
>thus is pretty much useless for reification.

Right, but one would not use IEXT for reification. I introduced a 
REIF mapping from the syntax into IR, but one could do it more simply 
just by requiring IR to contain a suitable set of expressions, by 
semantic fiat, so that REIF is defined to be the identity.

>
>What about the following addition to the MT. Let a ternary relationship
>Reif be defined as:
>
>1) IR x IR x (IR union LV) <= Reif
>2) If (x,y,z) in (IR union Reif) x IR x (IR union LV union Reif),
>    then (x,y,z) in Reif
>3) Reif is the smallest set with (1), (2)
>
>In other words, Reif contains all reified statements that can possibly
>be constructed under a given interpretation I.

Right, that is almost the version I had at the F2F. (I used a mapping 
from the syntax into the domain, you use a three-place predicate 
defined recursively on the domain.) However, it was resoundingly 
criticized as not what reification actually means, in practice. (Dan 
C. told me that this was what reification *ought* to have been, but 
in fact it wasn't that.) I am still waiting to discover what 
reification actually is, in practice (as opposed to what the M&S says 
it is.)

>Now we have some
>"thingies" to reason about. By the way, it can be shown that the set
>Reif indeed exists, but the proof is non-trivial.

Its just a variation on Herbrand's theorem. If you want to get very 
strict, you need the second recursion theorem, I guess, but I'm 
willing to just accept that the syntax BNF has a minimal fixedpoint, 
and take that as read; after all, without that assumption, there 
isn't a language there to give a semantics to in the first place.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



