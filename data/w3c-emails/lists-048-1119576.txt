docno="lists-048-1119576"
received="Wed Nov  7 04:26:20 2001"
isoreceived="20011107092620"
sent="Wed, 7 Nov 2001 11:26:06 +0200 "
isosent="20011107092606"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Subject literals"
id="2BF0AD29BC31FE46B7887732114404316216F5@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Subject literals"
expires="-1"


To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Pat Hayes [mailto:phayes@ai.uwf.edu]
> Sent: 07 November, 2001 04:57
> To: Stickler Patrick (NRC/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: RE: Subject literals
> 
> 
> >  > The node itself provides the locus to which the datatyping
> >>  information applies (in the proposed MT extension, at any rate.
> >
> >OK, it's slowly beginning to dawn on me that "labels" are not
> >serving as the identity of the nodes (for crying out loud, guys,
> >we're working with "labeled graphs" where the "label" identifies
> >the node... can't we stick with traditional terminology so folks
> >don't have to learn yet another language... ;-)
> 
> Don't start on that one. These things aren't even graphs, if you want 
> to get technical; they are, apparently, partially labelled directed 
> pseudographs. (Don't ask, OK?)

Don't worry. I'm not touching that one with the proverbial ten
foot pole ;-)

> >So, saying that "fi" is the label of some node doesn't mean that
> >it can't also have some e.g. "genid:1234" identifier that serves
> >as its identity in a triple, right?
> 
> Right, the genids are used in the triples lexicalization to identify 
> nodes. But they aren't in the graph itself. For example, '_:1' in a 
> triple might indicate a blank node. But a blank node really is 
> *blank*.

Right. Got it.

> >What still has me confused is talking about literals as subjects.
> >OK, fine, it's really some bNode with a system-specific identifier
> >(genid: URI?) acting as the subject, but I don't see how that is
> >any different than the former "anonymous resource node" treatment.
> 
> It has fewer nodes, it makes more sense (to me) and its easy 
> to interpret.

OK, though we still have the issue of possibly erroneous interpretation
of non-locally typed literals based on schema inferred types (range).

I've already made the assertion that range definitions are only
prescriptive, and only when local types are defined. I'll let
folks respond to that assertion before saying more on that.
 
> >
> >I.e., in both cases you have a node as the object, and that node
> has properties for rdf:type and rdf:value.
> 
> No! If the literal node can be a subject, then you don't need the 
> rdf:value arc at all. Its only there to provide a blank node to link 
> the rdf:type to, because the current rules won't let us hang that 
> edge directly onto the literal node. And then we need the rdf:value 
> link to attach this blank node back to the literal node; but we 
> needn't have put the bnode there in the first place, if the literal 
> node could have been a subject.  (IMHO:-)

OK. Right. 

 @= :-)   (attempt at emoticon of lighbulb coming on above head ;-)
 
Patrick



