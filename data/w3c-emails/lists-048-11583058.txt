docno="lists-048-11583058"
received="Wed Oct 31 22:52:57 2001"
isoreceived="20011101035257"
sent="Wed, 31 Oct 2001 20:19:34 -0800"
isosent="20011101041934"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="heading toward datatyping telecon"
id="3BE0CD56.7D8A44A2@db.stanford.edu"
charset="us-ascii"
expires="-1"


To: RDFCore WG<w3c-rdfcore-wg@w3.org>
CC: Pat Hayes<phayes@ai.uwf.edu>,"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>

Folks (esp. Pat),

I'd like to keep the fruitful momentum around datatyping. If you
remember,
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0530.html
contained three suggestions on how to proceed with datatyping. In my
understanding, the bottom line of the recent discussion on the topic
is the following.

<SUG1> (what specs to use) was critized because UML is a large spec to
get into. I don't think <SUG1> is something we have to vote on. "Using
a spec as a foundation" does not sound normative anyway. However, I
think the datatyping discussion needs some well-defined deliverables.
One of them could be to specify how XML Datatypes (at least the
primitive ones) should (or SHOULD) be used in RDF. I'd like to suggest
that we vote on this deliverable next Friday.

<SUG2> was to focus on representing typing info in the triple
structure. To my knowledge, there haven't been any public objections
so far. Several schemes discussed on the list recently were in synch
with SUG2. It seems that we are already going down the SUG2 path, so
maybe voting is not even necessary - but it would be nice to do so for
the record.

<SUG3> was to make the interpretation of each literal symbol fixed and
determined by its textual contents. Pat and Peter P.-S. (who provided
valuable input as a non-member) propose a different approach, in which
the meaning of literal symbols depends on the context where they
appear (this context may be limited to a single statement, I'm not
sure about that). To my knowledge, Pat is still working on a new draft
of MT that relies on such context-dependent interpretation of
literals.

I'd like to ask Pat to try to wrap up some ideas (even if sketchy) and
share them with the WG in form of examples and illustrations. We
should attempt to achieve a common understanding of the options that
are open at this point. Datatyping is critical in the sense that
almost every single developer will need to deal with it. Therefore, it
is essential that even persons who are far from logics and model
theory (like some of us) understand the main points.

In any case, tomorrow I'm going to summarize my revised understanding
of the tradeoffs between a `straightforward' and Pat's/Peter's
approach.

Sergey



