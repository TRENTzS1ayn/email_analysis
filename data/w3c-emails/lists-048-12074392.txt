docno="lists-048-12074392"
received="Mon Sep  3 10:49:11 2001"
isoreceived="20010903144911"
sent="Mon, 3 Sep 2001 15:48:03 +0100"
isosent="20010903144803"
name="dehora"
email="dehora@eircom.net"
subject="Re: quick question/request about syntax wdraft"
id="001001c13487$72f1c0c0$01000001@MITCHUM"
charset="iso-8859-1"
inreplyto="quick question/request about syntax wdraft"
expires="-1"

To:"RDFCore"<w3c-rdfcore-wg@w3.org>




> Brian McBride:
>
> Bill de h?ra wrote:
> [...]
> > 1: changing them to this:
> > 
> > 6.32 parseLiteral " rdf:parseType=\"rdf:Literal\""
> > 6.33 parseResource " rdf:parseType=\"rdf:Resource\""
>
> You seem to be proposing a change to the language.  Do 
> you have compelling reasons for making this change?


Brian, I would say that this was proposed syntax change: it sounds less
dramatic ;) But in the light of the some M&S assertions which are not so
clear in concert:

[[[
Other values of parseType are reserved for future specification by RDF.
]]]

[[[
The parseType attribute should have one of the values 'Literal' or
'Resource'.
]]]

[[[
With RDF 1.0 other values must be treated as identical to 'Literal'.
]]]


the acknowledgement in the M&S:

[[[
The RDF Model and Syntax Working Group acknowledges that the
parseType='Literal' mechanism is a minimum-level solution to the
requirement to express an RDF statement with a value that has XML
markup. Additional complexities of XML such as canonicalization of
whitespace are not yet well defined. Future work of the W3C is expected
to resolve such issues in a uniform manner for all applications based on
XML. Future versions of RDF will inherit this work and may extend it as
we gain insight from further application experience. 
]]]


the known uses of parseType:

<http://lists.w3.org/Archives/Public/www-rdf-comments/2001AprJun/0127.ht
ml>.


then the seemingly compelling reasons are: 

1: now that we have good feedback now on how people are using xml-rdf we
should recognise that it is being used as an extensibility mechanism and
take the high ground on the matter. 

2: in using prefixes to disambiguate, everyone can play nice over
statement value interpretations. I think DAML and Tim Berners-Lee have
been smart here. 

3: with a mandated prefix the RDF recommendations can make their games
foremost and provide a sane minimal base of interpretations. 

4: prefixes give futureproofing. For example with an 'rdf:' prefix,
infoset would have been a snap to add this time around
(parseType="rdf:Infoset"). It makes architectural sense to allow a way
for future wgs to feed back known useful value interpretations into the
standard.

5: soft deprecation on the existing two mandated values makes the
processor and xml-rdf serialised data upgrades painless enough. In
software, it's a snap to callback to parseType handlers and drop them in
dynamically, especially if they're prefixed (more futureproofing). In
fact we possibly don't to have to deprecate anything, just advise.

[Personally, parseType sort of reminds me of SOAPAction in that it's
vague and asking to be embraced and extended. But that's just the musing
of a paranoid Irishman. And it's a backdoor hack to implicitly make
statements about literals, which we don't allow explicitly.]

Bill de h?ra


 



