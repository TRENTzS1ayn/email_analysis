docno="lists-048-12155917"
received="Mon Sep  3 18:44:53 2001"
isoreceived="20010903224453"
sent="Mon, 3 Sep 2001 18:32:25 -0400 (EDT)"
isosent="20010903223225"
name="Dan Brickley"
email="danbri@w3.org"
subject="cycles in subclass hierarchy (was: RDFCore Update) (fwd)"
id="Pine.LNX.4.30.0109031830230.15635-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>



FWIW I've no objections to making the change. I still thing that folk
designing schemas with subclass loops are making a usability error, but am
quite happy with the idea of removing this constraint from RDFS itself.

Dan

---------- Forwarded message ----------
Date: Mon, 03 Sep 2001 22:56:16 +0200
From: Frank van Harmelen <Frank.van.Harmelen@cs.vu.nl>
To: www-rdf-logic@w3.org
Subject: cycles in subclass hierarchy (was: RDFCore Update)
Resent-Date: Mon, 3 Sep 2001 17:00:15 -0400 (EDT)
Resent-From: www-rdf-logic@w3.org


Brian McBride <bwm@hplb.hpl.hp.com> wrote:

> The minutes of the RDFCore WG face to face meeting
>
>   http://www.w3.org/2001/sw/RDFCore/20010801-f2f/
>
> have just been approved

The following is a summary of the discussion in the DAML+OIL joint
committee as input to the decision on allowing cycles in the RDFS
class hierarchy or not.

The message is: allowing cycles is mandatory for DAML+OIL, and not
allowing them in RDFS will seriously break the layering of the
Semantic Web architecture.

In more detail:

1. in DAML+OIL, subclass-relations can be inferred even if they are not
explicitly stated (note that this is an important difference from RDF-S,
where A is only a subclass of B if >*and only if*< it is either
explicitly stated, or follows from subsumption in the class-hierarchy).

2. as a result of point 1, acyclicity of the subclass-relation in
DAML+OIL cannot always be detected by purely syntactic means, since
computationally expensive inference may be needed to detect implicit
("implied") subclass-relations

3. because of point 2, DAML+OIL cannot require acyclicity of the
subclass-relationship, since that requirement could only be enforced at
great computational expense.

4. Point 3 means that if RDF-S will enforce acyclicity of rdfs:subClassOf,
then DAML+OIL can no longer use rdfs:subClassOf.
In other words, DAML+OIL will be forced to introduce daml:subClassOf

5. Point 4 would mean that much (all?) backward compatability between
RDF-S and DAML+OIL would disappear: an RDF-S processor would be unable
to catch any of the semantics of a DAML+OIL ontology (whereas currently,
all the explicitly stated subclass relationships in a DAML+OIL ontology
are accessible to an RDF-S agent, since DAML+OIL uses rdfs:subClassof

6. An important design rationale behind DAML+OIL (and in fact much other
stuff on the Semantic Web so far) has been a layered approach, where
languages are stacked on top of each other, with as much partial
interpretation between the layers as possible. Tim BL has even argued in
[1], [2], [3] and many other places that such "partial understanding is
an essential design principle of the Web in general, Semantic or not.

The decision to make rdfs:subClassOf acyclic will force DAML+OIL to
introduce daml:subClassOf, and will therefore lead to an almost total
loss of partial understanding between these two closely related ontology
languages...

Frank van Harmelen.
                 ----
Frank.van.Harmelen@cs.vu.nl              http://www.cs.vu.nl/~frankh
Department of AI, Faculty of Sciences,  Vrije Universiteit Amsterdam
de Boelelaan 1081a, 1081HV Amsterdam, The Netherlands
tel (+31)-20-444 7731 fax&voicemail (+31)-84-8722806

[1] Evovability, WWW7 keynote speach,
    http://www.w3.org/DesignIssues/Evolution.html
[2] "Web Architecture from 50,000 feet"
    http://www.w3.org/DesignIssues/Architecture.html
[3] "Web Architecture: Extensible languages"
    http://www.w3.org/DesignIssues/Extensible.html



