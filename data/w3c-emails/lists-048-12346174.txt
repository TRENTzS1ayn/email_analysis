docno="lists-048-12346174"
received="Tue Sep  4 17:31:01 2001"
isoreceived="20010904213101"
sent="Tue, 04 Sep 2001 16:30:57 -0500"
isosent="20010904213057"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: ACTION 2001-08-24#9 : issues with containers"
id="3B954811.40CDCF3F@w3.org"
charset="us-ascii"
inreplyto="v04210107b7badf557a0d&#64;[130.107.66.237]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
CC:w3c-rdfcore-wg@w3.org

pat hayes wrote:
> 
> >Jan Grant wrote:
> >[...]
> > > While I have held, in principle, what I'd characterise as DanC's opinion
> > > here (or the more extreme version: "alt is totally broken")
> >
> >I'm not saying it's broken; I'm just saying it's not magic.
> >It's very mundane; from the MT perspective,
> >it means no more or less than any
> >other class (Apple, Bananna, Integer, ...).
> 
> Then why bother even mentioning it in the M&S, let along spending
> pages on it?

For the same reason that C programming books mention printf().
Yes, everybody could develop their own print routine
in vanilla C, but it's cost-effective for the community
to agree on a standard library of terms sometimes.

The widespread availability of printf() does not impact
the syntax and semantics of the C programming language
at all. It does, however, increase its utility significantly.

> The M&S doesn't seem to feel a compulsion to go on and
> on about recommended uses of Bananas.
> 
> > > - that is,
> > > that an app can infer what it likes, an alt-unaware MT is going to
> > > produce an odd semantics for something like
> > >
> > >      <doc1> <dc:creator> _:a .
> > >      _:a <rdf:type> <rdf:Alt> .
> > >      _:a <rdf:_1> <jan> .
> > >      _:a <rdf:_2> <dan> .
> > >
> > > ("doc1 was written by either jan or dan") - I don't see how you can
> > > ignore alt in the MT and get this interpretation, no matter how you go
> > > about it.
> >
> >I interpret that n-triples fragment not as "doc1 was written
> >by either jan or dan" but
> >
> >  doc1's has a creator value which is a collection including
> >  jan and dan; this collection is the sort where folks conventionally
> >choose
> >  one from the collection, rather than using all of them.
> >
> >Again, suppose the graph had a Bag rather than an Alt:
> >
> >      <doc1> <dc:creator> _:a .
> >      _:a <rdf:type> <rdf:Bag> .
> >      _:a <rdf:_1> <jan> .
> >      _:a <rdf:_2> <dan> .
> >
> >We don't license the inference that
> >       <doc1> <dc:creator> <jan>.
> >in that case, do we? No. Then why should rdf:Alt have any magic
> >associated with it?
> 
> Because that is what the M&S seems to imply, seemed to me; and
> because if we can't infer anything different from its being an Alt
> than a Bag, why does the language have both constructs in it?

At its core, the language has *neither* construct.
It has only
-- logical constants (URIs)
-- existentially quantified variables
-- two-place predicates
-- conjunction

That's it.

Bag and Alt are just two logical constants.


> It's
> not a question of 'magic', but of understanding why there would be a
> totally meaningless distinction built into the syntax.

Just because the distinction is not specified in a model
theory doesn't make it meaningless. The distinction
between Apples and Bananas is not in the model theory,
but there is a distinction: in many interpretations,
their extensions are different.


> This line amounts to treating all containers alike in the MT,

exactly; which, I think, is why you were actioned to remove
containers from the MT altogether.

> ie they
> are thingies that have elements which are accessed by applying rdf:_n
> to them, and that's all.

Yes!

> The only differences between bags and seqs
> and alts is that they are different by stipulation, ie nothing can be
> both of them at once.
> 
> However, if we do say this, then it seems question-begging (and
> intellectually dishonest) to go on to say that some aspect of meaning
> is 'conventionally' this or that, when the language itself doesn't
> support that 'conventional' interpretation. In other words, we are
> saying that it *does* mean something, nudge nudge wink wink, but *we*
> aren't going to come out and say what it does mean, for some reason.

Just not in the core model theory.

> (Not that we couldn't: we can, in fact, but we are refusing to, for
> some reason, probably because ... well, I cannot think why, to be
> honest. )
> 
> This seems to me to be exactly the wrong way to set up a useful
> semantic-web information interchange language.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



