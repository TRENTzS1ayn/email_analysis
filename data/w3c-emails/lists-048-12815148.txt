docno="lists-048-12815148"
received="Thu Sep  6 23:24:06 2001"
isoreceived="20010907032406"
sent="Fri, 7 Sep 2001 04:22:54 +0100"
isosent="20010907032254"
name="dehora"
email="dehora@eircom.net"
subject="RE: quick question/request about syntax wdraft"
id="000101c1374c$63cd36c0$01000001@MITCHUM"
charset="iso-8859-1"
inreplyto="Pine.GSO.4.31.0109031556480.10866-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"

To:"'RDFCore'"<w3c-rdfcore-wg@w3.org>




> Jan Grant:
> 
> 
> On Mon, 3 Sep 2001, dehora wrote:
>
> > 4: prefixes give futureproofing. For example with an 'rdf:' prefix,
> > infoset would have been a snap to add this time around
> > (parseType="rdf:Infoset"). It makes architectural sense to 
> allow a way
> > for future wgs to feed back known useful value 
> interpretations into the
> > standard.
> 
> Since namespaces don't leak into rdf:parseType attributes, do you want
> "foo:Literal"
> to be the same as "rdf:Literal" if "foo" is declared as "the same"
> namespace as "rdf"?

[...goes away and rereads namespaces and schema...]

Short answer: yes. 

Might that imply additions to RDF Schema? Possibly. 

A mandated string seems short sighted, having the namespace binding
allows one to make RDF assertions about an attribute value...that fits
in with describing RDF in RDF, or even, allowing more complex parseTypes
to been created (not sure that's a good thing actually). And really, if
we're MUSting namespacing RDF attributes...may as well be hung for a
sheep as a lamb.

This isn't a controversial technique anymore, but one issue come to
mind. Lack of tool support for qualified attributes; problems might
arise with RDF-XML fragments and transforms. My thinking on this is that
most XML plumbing will be upgraded to cater for XML Schema (which
requires attribute namespace qualification) since most XML plumbing will
want to play the (XML Schema dependent) web services game sooner rather
than later. And we can have words indicating that the prefix 'rdf:' is a
convention, in the same sense that 'xsd:' is a convention.

Bill de h?ra



