docno="lists-048-12879874"
received="Fri Sep  7 07:13:27 2001"
isoreceived="20010907111327"
sent="Fri, 7 Sep 2001 12:12:18 +0100"
isosent="20010907111218"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: quick question/request about syntax wdraft"
id="JAEBJCLMIFLKLOJGMELDIEBOCCAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
inreplyto="quick question/request about syntax wdraft"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>


> Jan Grant:
>
> Since namespaces don't leak into rdf:parseType attributes, do you want
> "foo:Literal"
> to be the same as "rdf:Literal" if "foo" is declared as "the same"
> namespace as "rdf"?

I think this issue is *already present* in industry practice.

There is the well established parseType "daml:collection".

This licenses the construction of graphs using daml:List daml:first daml:nil
and daml:rest (modulo misrememberings).

In all example usages the namespace prefix "daml" is bound. In some of these
it is bound to a namespace relating to one version of daml, in some it is
bound to a different version of daml.

My understanding is that the intended URL refs daml:List, daml:first,
daml:nil, daml:rest can only be determined by looking at the binding of the
namespace prefix "daml".

See, for one binding
http://www.daml.org/2001/03/daml+oil.daml

and

http://www.daml.org/2000/12/daml+oil.daml

for another.

I fear we need to bite the bullet and allow namespaces to leak into
rdf:parseType attributes.
This is, in my view, very ugly. However, the XML schema people have already
done this and we cannot turn the clock back.

I also fear that if we wish to bless "daml:collection" the blessing is for
"foo:collection" whatever URI foo is bound to (a daml related one or
otherwise).

Jeremy



