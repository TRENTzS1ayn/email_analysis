docno="lists-048-13150649"
received="Mon Sep 10 21:13:24 2001"
isoreceived="20010911011324"
sent="Mon, 10 Sep 2001 20:14:52 -0500"
isosent="20010911011452"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: namedNode? in predicate position?"
id="v04210112b7c314baa0f2@[205.160.76.173]"
charset="us-ascii"
inreplyto="5.1.0.14.2.20010907181611.035d8bc0&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@Baltimore.com>
Cc:w3c-rdfcore-wg@w3.org

>>>It seems to me that there is a difference in the treatment of URIs 
>>>used to label nodes and URIs used to label arcs, but I'm not sure 
>>>how that is formalized.  I used to think of reification as 
>>>providing a way to create an effect that might have a graph syntax 
>>>of an arc pointing to/from another arc.
>>
>>I don't think you need to involve reification at all; but then I 
>>may just be completely confused about what RDF reification means.
>
>I guess the difference is that I saw the arc, the thing pointed 
>to/from, as the statement <s p o>, where taking on board your note 
>above it could be viewed as the pair <s o> in the relational 
>extension of p.

Yes, but if you check the MT for asserted triples, that *is* the 
meaning of the statement <s p o>.

>
>>>In any case, I think it's certainly possible to have the uri that 
>>>labels a property arc also be used to label a node that is the 
>>>subject and/or object of another property, which some might say is 
>>>"to have a property be the value of another property".
>>
>>Yes, that is OK. No need to change the MT (or the graph syntax) to 
>>allow this. I will put a short note into the MT document to draw 
>>attention to this.
>
>Let's see if I get it right:  a URI used as an arc label, the arc 
>denotes a member of the property node's relational extension.  When 
>used as a node label, the node denotes the property itself.

Right. Neat, huh?

>?
>
>>>Should arcs be allowed to be "princeNodes"?
>>>
>>>I note that allowing property arcs to be "princeNodes" is not the 
>>>same as having ordinary nodes be princeNodes.  A URI denotes a 
>>>node resource, but it is an attribute of a property arc.  How does 
>>>a formalization capture this kind of distinction?
>>
>>Not sure I follow that distinction. ("attribute" ?)
>
>I was trying to express that the arc is qualified, not identified, 
>by the label applied to it.

Oh, because another arc can have the same label? Right. I tend to 
hink of that as a matter of syntax, though.

>
>(Hmmm... does it make sense to talk of the pair <s o> in the 
>relational extension of p as distinct from an isolated pair <s o>?)

I hope not :-)

>
>>>I have also found that to describe RDF-schema-based inferences, I 
>>>have wanted to construct expressions in which the RDF property is 
>>>a "variable".  I think the required effect could be achieved by 
>>>means other than "princeNode" arcs, but maybe less intuitive for a 
>>>developer.
>>
>>Yes, others have noted this also. OK,  this also can be allowed in 
>>the syntax without changing the MT; but I think that if we do allow 
>>this then I ought to rewrite the model theory slightly, because as 
>>it stands right now its not  quite clear what this would mean. The 
>>MT uses a standard logical device to describe existentials, 
>>basically saying that the existential is true if there is some 
>>interpretation of what it denotes that makes the assertion true. 
>>The trouble with this trick for relations (properties) is, that the 
>>simple denotation of a property isn't really all that important: 
>>what makes assertions involving it true or false are the 
>>*extensions* of those denotations. So a lot turns on whether those 
>>extensions are allowed to change when the denotation of the 
>>anonymous node is allowed to change. The only way to interpret this 
>>that would produce a reasonable proof theory would be to take the 
>>extension mappings as fixed and let just the denotations vary; 
>>which is what the MT says right now, in fact, but it ought to say 
>>it much more clearly and explicitly, since a lot hangs on that 
>>point if we are going to allow princeProperties.
>>
>>>(Hmmm... are we finding out why CGs use bipartite graphs rather 
>>>than labelled arcs?)
>>
>>Maybe, but we can go with the more liberal syntax. CGs are based on 
>>a slightly more traditional logic which doesn't have explicit 
>>extension mappings and doesn't allow properties to apply to other 
>>properties.
>
>I realized later that my thinking there was wrong, in that the 
>bipartite graph's purpose seems to be to allow n-ary relations to be 
>expressed.  I think your comment about extension mappings is more to 
>the point.
>
>But, having only binary relations may make it easier to introduce 
>the "other means":  I was thinking of something like the device 
>"Holds(property, subject, object)".

Yes. You can actually derive the property/extension trick by starting 
with this and thinking of Holds as a (binary) relation between 
property and the pair (subject,object), and that is then the 
extension mapping IEXT; so the two ideas are definitely related. 
(Doesnt work quite the same for more than 3 arguments, though :-)

Pat

---------------------------------------------------------------------
(650)859 6569 w
(650)494 3973 h (until September)
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



