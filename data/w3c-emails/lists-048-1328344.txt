docno="lists-048-1328344"
received="Wed Nov  7 07:59:30 2001"
isoreceived="20011107125930"
sent="Wed, 7 Nov 2001 12:59:06 -0000"
isosent="20011107125906"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: incomplete datatyping (was: Re: datatypes and MT)"
id="JAEBJCLMIFLKLOJGMELDGEGOCCAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
inreplyto="2BF0AD29BC31FE46B788773211440431621701&#64;trebe003.NOE.Nokia.com"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>


Patrick:
> Ahhh... here's where it gets really interesting...
>
> Do we mirror this derived type definition in the RDFS defined
> class hierarchy? I.e., do we need to define xsd:integer and
> xsd:string as a subClassOf xxx:size, so that folks can
> define values such as [ rdf:value "1"; rdf:type xsd:integer ]
> for properties with a range of xxx:size?
>
> Or should an RDF/RDFS engine testing range constraints also
> be an XML Schema data type engine able to parse and understand
> native XML Schema derived type defintions?
>

My proposed XML Schema/RDF Schema/RDF integration is showing in the examples
I sent an hour ago:

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0198.html

Basically the XML Schema sits in one file, and the RDF or RDFS refers to it
in some way (e.g. using its URL or using xsi:schemaLocation).

In this framework RDFS *does not* duplicate any of the mechanisms of XML
Schema but merely uses them (in external XML Schema files).

This is me trying to play by the charter; we might want to conclude that
this is sufficiently messy that the charter should be interpreted more
liberally.

Jeremy



