docno="lists-048-13574153"
received="Thu Sep 13 23:18:02 2001"
isoreceived="20010914031802"
sent="Fri, 14 Sep 2001 04:15:40 +0100"
isosent="20010914031540"
name="dehora"
email="dehora@eircom.net"
subject="Re: 2001-09-07#5 -  literal problem"
id="000701c13ccb$ab1c70c0$01000001@MITCHUM"
charset="us-ascii"
inreplyto="2001-09-07#5 -  literal problem"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>


Hi Pat,


>***the purpose of 'should not' is to allow applications some
flexibility
>on dealing with language tags. That is, when a literal is equal to
>another but only one has a lag tag, they can be considered equivalent,
>which might be sufficient for some applications to make a match.

Pat Hayes:

I find this odd. Why not let them be equal in this case? Omitting the 
language tag presumably means that no language information is being 
supplied. But in that case, there is no need to reject a match with 
an identical literal which does have a language tag, is there?

Or is the idea that omitting the language tag is a way of indicating 
that ANY language tag would be inappropriate?

(A rational way to make sense of this would be to assume that UND 
means 'not any known language' and a missing tag simply indicates no 
information; but that rational interpretation seems to be ruled out 
by the above quote from RFC 3066, unfortunately.)

>>

The bit you highlight is my doing :)

I should say that Jeremy and I spoke about this today. I mentioned I
wasn't sure whether the lang tag would affect equality so I threw in
equivalence. Null makes a match for me, but I'm not sure about 3066 und.
That is, I wasn't sure, whether this is true:

('Ciao Benny', und) == ('Ciao Benny', fr) : T






>         (s,_)  (s,t)  (s1,_)  (s1,t1)
>--------------------------------------
>(s,_)     t      f*      f       f
>(s,t)     f*     t       f       f
>(s1,_)    f      f       t       f*
>(s1,t1)   f      f       f*      t   (s,t1)  (s1,t)
>                                      ---------------
>(s,t1)    f*     f       f       f      t      f
>(s1,t)    f      f       f*      f      f      t
>
>

Pat Hayes:

Seems to me all the f* could be t. Why not have (Smith, English) 
match (Smith,_) ? 
>>

I can't think of a good reason. I'm happy to mark it up to equals,
unless anyone has strong objections.

         (s,_)  (s,t)  (s1,_)  (s1,t1)
--------------------------------------
(s,_)     t      t       f       f
(s,t)     t      t       f       f
(s1,_)    f      f       t       t
(s1,t1)   f      f       t       t   (s,t1)  (s1,t)
                                      ---------------
(s,t1)    t      f       f       f      t      f
(s1,t)    f      f       t       f      f      t


which makes it a truth table instead of a maybe table  :)

Bill



