docno="lists-048-13961846"
received="Mon Sep 17 13:28:42 2001"
isoreceived="20010917172842"
sent="Mon, 17 Sep 2001 18:24:43 +0100"
isosent="20010917172443"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: 2001-09-07#5 - literal problem"
id="3BA631DB.7090509@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="p05101004b7cbd2645068&#64;[205.160.76.175]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
CC:w3c-rdfcore-wg@w3.org



Pat Hayes wrote:


> Well, oddly enough, I did once do some work on three-valued logics, and 
> was thinking about that when commenting on the f*s.  But I now think 
> that what that "truth-table" is about is syntactic identity, not 
> equality (ie same referent). 


I so love that whooshing sound as something passes completely over
my head :(

I'm not sure what is meant by syntactic identity, and I'm not sure
why I should care about it.

The truth table shows (s,_)=(s,t) as f*.  The character strings
"(s,_)" and "(s,t)" are clearly different, so that can't be what
is meant by syntactic identity.

If (s,_) could be equal to (s,t), then presumably it could also
be equal to (s,w) where w != t.  Does that mean we can conclude
that (s,w)=(s,t) - not according to the truth table.  Are we
be dealing with an '=' operator which is not transitive?  Maybe
(s,_) can equal (s,t) or (s,w) but not both at the same time.

Does (s,_) denote exists(x): (s,x)  ?

In my naive view of the world, the literal denoted by
("foo", "http:/lang/en") is not equal to ("foo", _), just the same as
the pair (1,2) is not equal to (1,3).

What is the value in making this any more complicated?

I'm expecting when some a bunch of rdf/xml or n-triples is read that
we can be definitive about the number of unique triples in the graph
that results.  It worries met that f* will cause me to lose that
property.

I think I'm just confused.

Brian



