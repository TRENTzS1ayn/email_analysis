docno="lists-048-13970574"
received="Mon Sep 17 16:03:41 2001"
isoreceived="20010917200341"
sent="Mon, 17 Sep 2001 15:03:43 -0500"
isosent="20010917200343"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: 2001-09-07#5 - literal problem"
id="p0510100ab7cc0468094a@[205.160.76.175]"
charset="us-ascii"
inreplyto="3BA631DB.7090509&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>Pat Hayes wrote:
>
>Well, oddly enough, I did once do some work on three-valued logics, 
>and was thinking about that when commenting on the f*s.  But I now 
>think that what that "truth-table" is about is syntactic identity, 
>not equality (ie same referent).
>
>
>I so love that whooshing sound as something passes completely over
>my head :(

No, its easy.  Robin Hayes = the youngest son of Pat Hayes, but 
"Robin Hayes" =!= "the youngest son of Pat Hayes" since the latter 
has more letters in it. Equality is same denotation (maybe different 
expressions), syntactic identity is same expression.

>I'm not sure what is meant by syntactic identity, and I'm not sure
>why I should care about it.
>
>The truth table shows (s,_)=(s,t) as f*.  The character strings
>"(s,_)" and "(s,t)" are clearly different, so that can't be what
>is meant by syntactic identity.

Ah no, wait a minute. That is, I now understand, the old-fashioned 
wimpy WYSITLI (...is the lexical item) view of syntactic identity. 
That is the view that led me to say a while ago that a literal 
mustn't be the same character string as a URI, since otherwise you 
wouldn't know if it was a literal or not. But I now gather that there 
are other ways to ensure that something is a literal over and above 
its mere *appearance*. So Im assuming that the new XML-savvy syntax 
experts have got some criterion for saying whether or not two 
syntactic thingies are supposed to be considered 'the same' in the 
logical syntax, and I will take the MT from there.

>If (s,_) could be equal to (s,t), then presumably it could also
>be equal to (s,w) where w != t.

Well, maybe, but not both at once.

>Does that mean we can conclude
>that (s,w)=(s,t) - not according to the truth table.  Are we
>be dealing with an '=' operator which is not transitive?  Maybe
>(s,_) can equal (s,t) or (s,w) but not both at the same time.

Ah, you were ahead of me.

>Does (s,_) denote exists(x): (s,x)  ?

No no, that would be in the actual logic. But we are talking syntax 
here, so unless you want to quantify over parts of lexical items (did 
someone say "reify" ??) then you just don't get into questions like 
this. Its more like asking whether or not 'foo' is considered the 
same as 'Foo'.

>
>In my naive view of the world, the literal denoted by
>("foo", "http:/lang/en") is not equal to ("foo", _), just the same as
>the pair (1,2) is not equal to (1,3).
>
>What is the value in making this any more complicated?

Well, see Jeremy's earlier message. I have no opinion on this issue, 
to be honest, but I just wanted to make clear that the MT doesn't 
*require* that all those f*s have to be fs.

>
>I'm expecting when some a bunch of rdf/xml or n-triples is read that
>we can be definitive about the number of unique triples in the graph
>that results.  It worries met that f* will cause me to lose that
>property.

Ah, that is a good point. It will, indeed, since the number of nodes 
will change since they have to have a lexically unique labelling.

>I think I'm just confused.

Well, if its any consolation, I have a headache.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



