docno="lists-048-15415432"
received="Tue Sep 25 10:57:18 2001"
isoreceived="20010925145718"
sent="Tue, 25 Sep 2001 15:55:38 +0100"
isosent="20010925145538"
name="Bill de hOra"
email="bdehora@interx.com"
subject="2001-09-21#11 parseType qnames"
id="000001c145d2$23e82670$1c010a0a@MITCHUM"
charset="iso-8859-1"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>



action: "2001-09-21#11: Bill DeHora / Take proposal to the list next
week on parseType Qnames"


The text below is a revision from
<http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0164.html>
(action 2001-09-07#5). The goals are to legitimise the use of namespaced
parseType extensions and clarify text surrounding XML literals,
particularly M&S p203 in a backward compatible fashion. The text doesn't
saying anything about XML literal encoding, that's being dealt with
elsewhere
(<http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0341.html>)
, simply that rdf xml literals must be wf xml.

regards,
Bill

-- 
Bill de h?ra
InterX 
bdehora at interx.com 
dehora at acm.org 
+44(0)20-8817-4039 
www.interx.com 



proposed text:

(p1) The parseType attribute changes the interpretation of its element
content. 

(p2) The parseType attributes values defined are 'Literal' and
'Resource'. These values are case-sensitive. The value 'Literal'
specifies that the element content SHALL be treated as an RDF XML
literal. The element content is considered opaque: that is, it MUST not
be interpreted or passed on as RDF by the RDF processor in question. The
value 'Resource' specifies that the element content SHALL be treated as
if it were the content of a Description element. Further, content of an
element having a parseType="Resource" attribute MUST match the
production for Description. In all cases, the content of an element
having a parseType attribute MUST be well-formed XML in accordance with
the XML Recommendation [see 1 section 2].

(p3) It is recognized that parseType is useful as an extensibility
mechanism. The preferred technique to extend parseType is through the
use of namespace qualified names, as defined in the Namespaces In XML
Recommendation [2]. The purpose of using namespaces to denote parseType
values is to allow extensions to be associated with a vocabulary or
schema, and to avoid naming collisions between extensions. Note:
irregardless of the intended interpretation of any such extended
parseType, the element content itself MUST be at minimum well-formed
XML. 

(p4) In the same sense that the XML Namespaces notion of the default
namespace does not apply to XML attributes [see 2, section 5.2], the
default namespace is not applicable to RDF parseType values. Unqualified
values of parseType MUST NOT considered to be in any namespace.

(p5) Namespace unqualified values of parseType are reserved for use by
RDF.

(p6) How XML attributes which affect the interpretation of RDF XML
Literals are passed along by RDF processors is not specified: this
includes extended values of parseType. Processors which encounter
extended parseType values MAY pass on the found parseType value, where
they are capable of doing so. An RDF-XML processor encountering an
unrecognised extension of parseType value MUST default to treat that
parseType value as 'Literal'. 

[1] <http://www.w3.org/TR/2000/REC-xml-20001006>
[2] <http://www.w3.org/TR/1999/REC-xml-names-19990114>


 



