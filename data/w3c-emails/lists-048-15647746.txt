docno="lists-048-15647746"
received="Wed Sep 26 10:59:28 2001"
isoreceived="20010926145928"
sent="Wed, 26 Sep 2001 15:53:58 +0100"
isosent="20010926145358"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: PRIMER: v 0.1 of scope, outline and issues"
id="5.1.0.14.2.20010926153216.03a7d210@joy.songbird.com"
charset="us-ascii"
inreplyto="5.1.0.14.2.20010925171443.027b8948&#64;localhost"
expires="-1"


To: Eric Miller<em@w3.org>
Cc:w3c-rdfcore-wg@w3.org

At 05:28 PM 9/25/01 -0400, Eric Miller wrote:
>Scope and Goals
>To explain RDF to the end user in such a way they in turn
>       can explain it to others

Good.

>To explain the benifits of a common model

Good.

>To provide clear guidence to an end user how to use a
>       vocabulary in RDF

Good.

>To provide clear guidence to an end user how to create to
>       create instance data based on supporting vocabularies

Good.

>To clearly demonstrate to the end user the benifits of
>       this approach

Good.

>To highlight example applications that benifit from these
>       methodologies... we're asking people to do extra work, we
>       need to give clear indications of what the benifits of this
>       extra work provides.

I don't believe that using RDF necessarily does involve more work for 
application developers.  I think that's something that came about because 
of the difficulty of understanding RDF M&S 1.0.  For specialized (i.e. 
most) applications, it is possible to define a form of XML that is very 
close to what one might naturally use, yet which is also fully acceptable 
to a general RDF parser.

My point is to guide developers to a low cost of entry adoption of RDF, 
rather than try to convince them that it's worth doing a lot of extra work.

I personally think the key to this is to show how the graph model relates 
to "ordinary" XML.

>To provide a general definitions of terms and shared
>       semantics that are common across RDF Core specifications

Good.

..

Something that I felt was missing here was an explanation of the 
relationship between the abstract graph syntax and the RDF/XML syntax.  At 
one level, I think we need to encourage designers to use the graph 
formalism to construct their data models, and separately from that show how 
the graph is easily represented in RDF.

I think the biggest hurdle is to convey the idea of using URIs as property 
values (as in <ex:property rdf:resource="http://example.com/foo"/>) 
differently from other values.

..

>Open Issues
>Take on the explanation/relationship between RDF and XML

Ah, I guess this is what I meant above.  I could be persuaded to try and 
draft something.

>NTriples representation... this could help/hurt either way

I'd play it down here unless it's really needed.

>Model Theory explanation e.g. 
>http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0337.html

That's something I suggested ... I would be prepared to have a go at 
drafting something around this.

>various issues really depending on the scope and
>         goals... RDF primer subgroup to establish goals

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>
------------------------------------------------------------



