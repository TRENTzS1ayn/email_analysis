docno="lists-048-15857699"
received="Thu Sep 27 06:16:19 2001"
isoreceived="20010927101619"
sent="Thu, 27 Sep 2001 10:10:47 +0100"
isosent="20010927091047"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: some errors in the MT"
id="5.1.0.14.2.20010927095044.03b3fa10@joy.songbird.com"
charset="us-ascii"
inreplyto="p0510102eb7d7f7f54747&#64;[205.160.76.184]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org

At 05:09 PM 9/26/01 -0500, Pat Hayes wrote:
>There are some serious bugs in the RDFS closure table in section 6 of the 
>MT WP. See a recent message from Peter Patel-Schneider and my reply, on 
>rdf-logic http://lists.w3.org/Archives/Public/www-rdf-logic/2001Sep/0033.html.
>  I will try to get the bugs out and produce a revision as soon as 
> possible (couple of days). Along the way I will also fix all the little 
> typos and add a wee bit of explanatory prose here and there to prevent 
> the misinterpretations that seem to have been produced.
>
>One matter that I would like some feedback on is, what to do about 
>rdf:type rdfs:Literal.  Since it is syntactically illegal in RDF to write
>
>xxx rdf:type rdfs:Literal .
>
>when xxx is a literal, and since this is false in RDFS if xxx does not 
>denote a literal value, there would seem to be little utility in having 
>rdfs:Literal in the language at all, [...]

Some random thoughts...

(a) it seems that if literals are not to be treated as resources, then 
rdfs:Literal has no place in the language.  But the concept that would be 
represented by ICEXT(I(rdfs:Literal)) still has a place in the model theory 
- you call it LV, right?

(b) suppose we were to introduce a new property, say rdf:hasInstance, used 
to define in ICEXT in a similar way as rdf:type but swapping the positions; 
i.e.
     ICEXT(x) = {y | <x,y> is in IEXT(I(rdf:hasInstance)) }
might we not legally say:
     rdfs:Literal rdf:hasInstance xxx .  ??
Further, if x and y are both resources we can define an equivalence between
     <x,y> is in IEXT(I(rdf:hasInstance)) == <y,x> is in IEXT(I(rdf:type))

It seems to me that the property rdf:hasInstance is much better matched to 
the RDF language (that rdf:type), because its rdfs:domain is an rdfs:Class, 
which is an rdfs:Resource, which is always syntactically valid as the 
subject of an RDF statement.

(I'm hesitant to suggest we actually do this, just trying to point out that 
there might be a reasonable way of using rdfs:Literal in the language.)

>I am inclined to simply avoid this issue right now by explicitly stating 
>in section 6 that the RDFS analysis simply excludes all mention of 
>rdfs:Literal, with a brief explanation of why and suggestion that this 
>will be revisited in future work. If nobody objects strongly to this way 
>of getting out of this problem, I will circulate a draft wording soon.

I've no objection.  Thinking about this has suggested to me that literals 
should ultimately be resources, and (something whose interpretation is in 
LV) should be allowed in the subject position of an RDF statement.  It 
seems a few "gotchas" in the MT were caused by irregularity at this 
point.  But for the time being, I see the goal is to nail our colours 
firmly to the fence and remain agnostic on this point.

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>
------------------------------------------------------------



