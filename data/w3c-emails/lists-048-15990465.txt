docno="lists-048-15990465"
received="Thu Sep 27 12:43:01 2001"
isoreceived="20010927164301"
sent="Thu, 27 Sep 2001 11:42:59 -0500"
isosent="20010927164259"
name="Dan Connolly"
email="connolly@w3.org"
subject="RDF graph model limited by RDF/xml 1.0 syntax?"
id="3BB35713.AA960864@w3.org"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org

Consider this nice, clean graph model for RDF
(borrowing liberally from Peter F. Patel-Schneider's
message to www-rdf-logic of Thu, 27 Sep 2001 10:37:29 -0400):

An RDF graph is a four-tuple (that can be considered to be a
partially labeled, directed graph; the unlabelled nodes
are bNodes) 
                < N, E, LN, LE >
        where N is the set of nodes in the graph
              LN :(partial) N -> URI u L gives labels for nodes
              LE :(partial) E -> URI gives labels for edges
              E <= N x N is the set of edges in the graph

This would provide a somewhat disappointing resolution to these
issue:

http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete
  The RDF/XML syntax can't represent an an arbritary graph structure.

tough.

http://www.w3.org/2000/03/rdf-tracking/#rdfms-qnames-cant-represent-all-uris
  The RDF XML syntax cannot represent all possible Property URI's.

again, tough.


while elegantly addressing a whole pile of other issues:

http://www.w3.org/2000/03/rdf-tracking/#rdfms-literalsubjects
  Should the subjects of RDF statements be allowed to be literals?

yes.

http://www.w3.org/2000/03/rdf-tracking/#rdfms-graph
  Formal description of the properties of an RDF graph.

see above.

(not in the issues list?)
  can I use a bNode in the predicate part of an RDF statement?

yes.


I go back and forth on this/these issue(s). Suppose we decide that
yes, the RDF graph model is this nice, clean, orthogonal
thingy, with no warts like "you can use any URI you
want to name your properties, except that it has to
end with an XML name character" nor "no, you can't
just assert that one string is a substring of another
in RDF."

Then we convince, say, the topicmap folks and the SOAP
serialization folks to produce a mapping to this model...
perhaps by offering a testing infrastructure based
on n-triples.

The result is: lots of claims of interoperability
between topicmap tools, SOAP tools, and RDF tools,
but actually, no guarantee of such interoperability.
RDF serializers will have to have a "can't write
that property name in RDF 1.0 syntax" exception
and a "can't write a statement with a literal
as the subject" exception.

Now that I've written down my thoughts, I lean
toward saying: the future is longer than the past;
let's formalize a nice clean graph model, accept that
the 1.0 xml serialization has some limitations, and
work toward fixing those limitations in the future.
After all, an awful lot of RDF software is gonna
have nothing to do with the XML serialization, and
forcing all that software to support these
awkward limitations doesn't serve RDF's goals,
in the long run.

I wonder whether this resolution to literalsubjects
and to the question of whether bNodes are allowed
as predicates fits in our charter; i.e. I wonder
if it's acceptable to the community as a clarification
of the RDF 1.0 spec. Perhaps it's best to put
those off until we design an XML syntax that supports
them. I dunno.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



