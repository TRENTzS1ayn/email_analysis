docno="lists-048-16067431"
received="Thu Sep 27 17:03:18 2001"
isoreceived="20010927210318"
sent="Thu, 27 Sep 2001 16:03:13 -0500"
isosent="20010927210313"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: RDF graph model limited by RDF/xml 1.0 syntax?"
id="p0510100db7d940594b9b@[205.160.76.184]"
charset="us-ascii"
inreplyto="3BB35713.AA960864&#64;w3.org"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>Consider this nice, clean graph model for RDF
>(borrowing liberally from Peter F. Patel-Schneider's
>message to www-rdf-logic of Thu, 27 Sep 2001 10:37:29 -0400):
>
>An RDF graph is a four-tuple (that can be considered to be a
>partially labeled, directed graph; the unlabelled nodes
>are bNodes)
>                 < N, E, LN, LE >
>         where N is the set of nodes in the graph
>               LN :(partial) N -> URI u L gives labels for nodes
>               LE :(partial) E -> URI gives labels for edges
>               E <= N x N is the set of edges in the graph

Why is LE partial? Is that deliberate? Because we really can't have 
unlabelled *arcs*; we would need 'non-label labels' (eg bNode 
identifiers?) to say when two different arcs were parts of the same 
property.

Also, LN is required to be 1:1 where defined.

Also,   E <= N x N  doesn't allow for two arcs (with different 
labels) linking the same pair of nodes, which we have to permit. 
Better to have an explicit set E and mappings LE to labels and EE 
(edge ends) to NxN.

But you know, there is a well-defined notion of a graph, and we can 
just appeal to that, we don't need to be doing mathematical 
foundations here.

Heres the wording in the current MT draft (not yet circulated):

"An RDF graph is a partially labeled directed graph satisfying the 
following conditions: arcs are labelled with URIs; nodes from which 
arcs emerge are either unlabelled, or labelled with URIs; all other 
nodes are either unlabelled, or labelled with URIs or literals; and 
distinct labeled nodes have different labels. Unlabelled nodes are 
called anonymous or blank nodes."

>This would provide a somewhat disappointing resolution to these
>issue:
>
>http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete
>   The RDF/XML syntax can't represent an an arbritary graph structure.
>
>tough.
>
>http://www.w3.org/2000/03/rdf-tracking/#rdfms-qnames-cant-represent-all-uris
>   The RDF XML syntax cannot represent all possible Property URI's.
>
>again, tough.
>

I tend to agree.

>while elegantly addressing a whole pile of other issues:
>
>http://www.w3.org/2000/03/rdf-tracking/#rdfms-literalsubjects
>   Should the subjects of RDF statements be allowed to be literals?
>
>yes.

That would make a lot of things simpler, for sure. But it would be 
easy to tweak the graph model to keep the answer as 'no' here, as in 
the above wording.

>
>http://www.w3.org/2000/03/rdf-tracking/#rdfms-graph
>   Formal description of the properties of an RDF graph.
>
>see above.
>
>(not in the issues list?)
>   can I use a bNode in the predicate part of an RDF statement?
>
>yes.
>

In N-triples, yes. But its not like the node case in the graph; here, 
that bNode label has to really be in the graph; and then it had 
better be there for 'unlabelled' nodes as well, since otherwise there 
is  no way to know that a bNode used as an arc label is the same as a 
bNode labelling a node. Basically, the whole 'tidyness' notion goes 
out the window when we have bArcs., and much of the simplicity of the 
graph syntax is lost.

Still, we could live with N-triples as a canonical syntax, if we want 
to go that way.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



