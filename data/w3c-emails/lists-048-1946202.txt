docno="lists-048-1946202"
received="Thu Nov  8 18:27:28 2001"
isoreceived="20011108232728"
sent="Thu, 8 Nov 2001 17:27:27 -0600"
isosent="20011108232727"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="RE: Subject literals"
id="p05101015b810c331afc5@[65.212.118.147]"
charset="us-ascii"
inreplyto="2BF0AD29BC31FE46B78877321144043114C072&#64;trebe003.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
Cc:w3c-rdfcore-wg@w3.org

>Think of the graph as follows: its the NODES that denote things. 
>Nodes with a uriref label denote the resource with that uriref. 
>Blank nodes denote things, but we don't have names for them. Literal 
>nodes (in my understanding) are like uriref nodes in that they 
>denote through their labels, but literal labels denote things by a 
>different route than urirefs; their meaning is determined by a 
>datatyping scheme rather than by an interpretation.
>
>Now, nodeIDs ('_:2' and so on) are not mentioned, because they are 
>not in the graph at all; they are only used by an Ntriples parser to 
>keep track of the correspondence between labels in triples and nodes 
>in the graph.
>
>OK, things are becoming clearer. The literal itself does not 
>constitute the identity of the node, only its lexical representation,

Well, its label.

>just as a URI may represent the lexical identity of a global 
>resource in the serialization.

Not exactly. The URI is another kind of label that denotes a 
resource. The literal label doesn't denote the node, its just the 
label for it. The basic point is that there are two different 
syntaxes being discussed here: the graph itself, and the Ntriples 
lexicalization. The nodeIDs are needed in the latter in order to keep 
track of node identities, but in the graph notation they are not 
needed since the nodes are right there in the syntax. (As in the 
pictures in the M&S.)

>Right. Got it. But still, the fact that a uriref label is used as a 
>nodeID but a literal label is not, seems a little messy (for lack of 
>a more technical term ;-)

Yes. The technical term is 'untidy'. But (unless literals include 
their datatyping, as per URVs or similar) I think we must allow this 
much untidiness.

>.......
>  but more significantly (IMHO), it allows the datatype 'context' to 
>be inferred from other parts of the graph by using RDFS reasoning. 
>However, I confess that the issue you have raised about 
>inappropriate bindings has got me more worried about this than I was 
>previously.
>
>
>Well, hopefully I've not worried you needlessly. I think that the 
>issue of RDF not providing any kind of compilation of lexical forms 
>into canonical representations and that a descriptive interpetation 
>of rdfs:range presuming such a canonical representation does need to 
>be addressed. Or else we will have the risk of bindings that cannot 
>be reliably interpreted according to the inferred data type.
>

I now think that this can be handled as long as we can impose some 
'reasonableness' conditions on the datatypes. But admittedly, the 
need to impose any conditions is a definite con.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



