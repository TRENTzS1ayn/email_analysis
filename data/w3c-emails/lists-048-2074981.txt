docno="lists-048-2074981"
received="Thu Nov  8 21:06:38 2001"
isoreceived="20011109020638"
sent="Thu, 8 Nov 2001 20:06:43 -0600"
isosent="20011109020643"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Bags (was: closing semantic issues)"
id="p05101021b810e7b03eae@[65.212.118.147]"
charset="us-ascii"
inreplyto="3BEAD425.60108&#64;w3.org"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>Pat Hayes wrote:
>
>>>At 05:35 PM 11/6/01 -0600, Pat Hayes wrote:
>
>>>if we then learn that _:b1 and _:b2 are equivalent,
>>
>>
>>....but wait. Do we want to consider reasoning with equivalences at all?
>
>
>We certainly don't want to preclude it; the DAML+OIL stuff wouldn't
>layer on top, otherwise, would it?

No, but we can let them deal with the problems that come up when they 
do. We have enough trouble with the problems we have already.

>
>[...]
>
>>So heres the rule. If we have a triple
>>
>>foo rdf:type rdf:Bag
>>
>>in a graph, then say that the nodes which are in the object 
>>position of a triple of the form
>>
>>foo rdf:_n <object>
>>
>>in that graph are the 'foo member nodes'.
>
>
>No; you can't conclude from no information that there are no others.

I don't. I just assume that I am allowed to permute the ones Ive got 
in the graph. If more show up later, than a lot more permutations 
will be possible, but all the perms I already did will still be OK.

I don't think we need to allow permutations of things that might 
exist in the bag but that we don't know about yet. Ordinary RDF 
inference allows us to go from

_:x :_nnn foo .

to

_:x :_nnn _:y .

(hey, don't you just LOVE this notation?) and then we can permute 
*that* as well, if you want.

>
>And I do think that each of the _:n properties is functional;
>i.e.
>_:x rdf:_1 "abc".
>_:x rdf:_1 "def".
>is a contradiction (is that in the model theory?

Yes, it was. Actually strictly speaking, the MT would allow this 
provided "abc" and "def" denoted the same thing, which of course they 
don't do if they are strings.

>subject/predicate/object
>are also functional).
>
>So the best I can think of is that if we have
>
>  _:b rdf:type rdf:Bag.
>
>then there's some _:bc where
>
>  _:b rdfs:bagContents _:bc.
>
>and where any X with
>
>  _:b rdf:_NNN X.
>
>we have
>
>  X rdf:type _:bc.

So _:bc is the type of the bag contents? That would be a class, which 
is a set, right? (I.e. not a bag, if you follow me.)

>(hmm... that might end up with a literal subject. That
>doesn't bother me, but if it bothers other folks,
>I suppose some analog of ICEXT, say IBAG is in order.
>Ug... this the second really serious design bug
>I've seen with RDF containers).
>
>>Then any graph gotten by permuting the arcs to the foo member 
>>nodes, and replacing  the node foo by a new bnode, should be 
>>entailed by the first graph.
>>
>>Tell you want, lets agree not to talk about rdf:Bag-closures, OK?
>
>
>I'm not sure what a bag-closure is, but if it's the same issue as
>
>   http://www.w3.org/2000/03/rdf-tracking/#rdfms-seq-representation
>
>then I don't agree not to talk about it ;-)

I meant as in semantic closure, ie the set of all statements that are 
true about a bag. But hey, lets not talk about either of them.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



