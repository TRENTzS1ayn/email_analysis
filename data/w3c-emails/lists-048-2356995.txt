docno="lists-048-2356995"
received="Mon Nov 12 11:01:19 2001"
isoreceived="20011112160119"
sent="Mon, 12 Nov 2001 10:55:15 -0500"
isosent="20011112155515"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: DATATYPES: mental dump."
id="20011112105515X.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="3BEFEC65.E47577EB&#64;w3.org"
expires="-1"

To:connolly@w3.org
Cc:phayes@ai.uwf.edu,w3c-rdfcore-wg@w3.org


From: Dan Connolly <connolly@w3.org>
Subject: Re: DATATYPES: mental dump.
Date: Mon, 12 Nov 2001 09:36:05 -0600

> "Peter F. Patel-Schneider" wrote:
> [...]
> > [...]
> > 
> > Regardless of the situation with respect to incompatibility with RDF, I
> > view incompatibility with XML
> 
> I gather you mean XML Schema, not XML 1.0 itself...

Actually both.  If you don't have the XML Schema stuff below, you have
valid XML, which, in my view, should be valid RDF-in-XML.  If you want to
have datatypes, then you should have, again in my view, XML Schema
datatypes.

> > as a fatal problem with both these proposals.
> > I think that a scheme that is not compatible with
> > 
> >         [possibly some some xml schema stuff that may or may not type the 7 below]
> >         <foo [possibly some xml schema stuff that may or may not type the 7 below]>
> >           <bar [possibly some some xml schema stuff that may or may not
> >                 type the 7 below]>
> >                 7
> >           </bar>
> >         </foo>
> > 
> > is a non-starter.
> 
> Er.. that's an awfully high bar. To date, it hasn't been necessary
> to implement XML Schema in order to parse RDF.
> 
> I think that any scheme that requires an RDF parser to include
> an XML Schema processor to be a non-starter.
> 
> -- 
> Dan Connolly, W3C http://www.w3.org/People/Connolly/

If you don't want to have datatypes, then you don't have to implement XML
Schema.  If you do want datatypes, then you *shouldn't* have to implement
XML Schema, as you *should* be able to just use an existing XML Schema
implementation.  (If you can't, then there is a very serious problem with
XML Schema!)  In either case, I see no reason to implement an XML Schema
processor, but, of course, if you want to use XML Schema datatypes then
you certainly will need (possibly indirect) access to an XML Schema
processor.  How can it be otherwise? 

Peter F. Patel-Schneider



