docno="lists-048-2443274"
received="Mon Nov 12 14:33:12 2001"
isoreceived="20011112193312"
sent="Mon, 12 Nov 2001 19:33:19 +0000"
isosent="20011112193319"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: DATATYPES: mental dump."
id="3BF023FF.4050007@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="p05101027b811ba46a791&#64;[65.212.118.147]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
CC:w3c-rdfcore-wg@w3.org,"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>

Great stuff Pat.  Brought some much needed structure to the discussion.

Pat Hayes wrote:

[...]


> Datatype names can be names of classes or names of properties, or both.


Nervous twitch of antenae:  Don't we have an issue about whether classes and 
properties are disjoint?  Yes, in

  http://www.w3.org/2001/sw/RDFCore/20010801-f2f/2001-08-02.html#T21-00-44

we have restated rdfs-subClassOf-a-Property

as

   "are Property and Class disjoint?"

If we decide they are disjoint, does that cause P++ any problems?
[...]


> 
> None of the first three proposals require all this elaboration (although 
> they are not incompatible with it), since they all assume that literal 
> meanings are completely specified by the literal label (to be a single 
> literal value in X, or to be a string in S and DC), and the datatype 
> class heirarchy, if it exists, is invisible to RDFS. 


Is that true, which I suppose means "what exactly do you mean by that?"

For example, in proposal S, if I define the domain of say xsd:integer to be 
foo:integer and rdfs can conclude that any bNode with an xsd:integer property 
hanging of it is an integer.

Similarly, in the S proposal, would not xsd:byte be a subProperty of xsd:short 
which is a subProperty of ...


> They can all be 
> straightforwardly handled in RDF/XML.
> 
> 
> The S and CD proposals require that users conform to a given 'idiom', 
> and are often incompatible with current common usage in which literals 
> are used to refer to things other than strings;


I know what you mean here, but I object to the term incompatible.  Current RDF 
does not do anything about datatypes.  In one interpretation all literals denote 
strings, and if I have a property with value "10", then that's just fine.  An 
application can 'know' that it should interpret that as an integer.  With for 
example, the X and S and DC proposals they can continue to do so.  The datatype 
information is simply not represented in the RDF model; its encoded in the 
definition of the property.  This doesn't seem to me to any different from, say 
the property weightInKg which takes a P++ representation of an integer implying 
that units are kilograms, not pounds.

[...]


> Hope this helps; anyway, I've done a dump of *my* mental state, thank 
> goodness.


Thanks Pat.  This was really useful.

Brian



