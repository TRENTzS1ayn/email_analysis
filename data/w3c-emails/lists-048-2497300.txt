docno="lists-048-2497300"
received="Mon Nov 12 15:23:45 2001"
isoreceived="20011112202345"
sent="Mon, 12 Nov 2001 21:22:15 +0100"
isosent="20011112202215"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="RE: DATATYPES: mental dump."
id="OF4E766498.B67BDE90-ONC1256B02.006FDFC2@bayer-ag.com"
charset="us-ascii"
inreplyto="DATATYPES: mental dump."
expires="-1"

To:jjc@hplb.hpl.hp.com
Cc:w3c-rdfcore-wg@w3.org



Oh sorry, I forgot to mention that also
  play:me play:shoeSize "10", [ rdf:type xsd:decimal].
could be entailed from [1]
which is giving enough information to compute with that object


> With regards to
>> P++. (Pat)
>
> If we go down the XML Schema datatypes route the use of the xsi:type
> attribute to indicate type may well be appropriate... And give a syntax for
> allowing the additional type arcs on Literal nodes, without going beyond our
> current charter !

Jeremy, how would that be expressed in N-Triples?

--
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/


P.S. Some other dumps...

We think that "xyz" is *something* with literal representation 'xyz'
So "10" could be the number 16 (hexadecimal), 10 (decimal),
8 (octal), 2 (binary), etc.
If we have (in N3-without-contexts which is like N-Triples BTW!!!)

==== [1]
@prefix play: <http://example.org/play#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
play:me play:shoeSize "10".
play:shoeSize rdfs:range xsd:decimal.
====

we can entail

====
@prefix play: <http://example.org/play#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
_:x is play:shoeSize of play:me; rdf:type xsd:decimal.
====

and also

====
@prefix play: <http://example.org/play#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
play:me play:shoeSize [ rdf:type xsd:decimal].
====

I find the 'is ... of' way of expressing things quite
convenient in that it allows to talk about literal values



