docno="lists-048-2619420"
received="Tue Nov 13 08:39:21 2001"
isoreceived="20011113133921"
sent="Tue, 13 Nov 2001 08:44:44 -0500"
isosent="20011113134444"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: PRIMER:  new draft data model section"
id="3BF123CC.8080702@mitre.org"
charset="us-ascii"
inreplyto="2BF0AD29BC31FE46B78877321144043114C082&#64;trebe003.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
CC:w3c-rdfcore-wg@w3.org

Patrick--

Thanks for the comments.  Responses below.


Patrick.Stickler@nokia.com wrote:

> Frank,
> 
> I thought the draft on the data model section was
> very well written, and I'm happy to see the clear
> discussion about URLs vs. URIs (though you go on
> to use HTTP URLs for abstract concepts anyway ;-)


Yeah, well I didn't want to introduce (and have to explain) a new URI 
scheme.  However, I can do that if you think it would make the 
distinction clearer.


> 
> I am concerned though that the example serializations
> are in NTriples and not RDF/XML. Have we decided to
> make NTriples an "officially sanctioned and required"
> serialization? Will all RDF parsers have to eat
> NTriples to be fully conformant to the spec?


My current understanding is that Ntriples was defined only as a 
simplified notation to express test cases (it's only defined in the Text 
Case document);  however, there may be an expanded role for it now.  I 
use it in the Primer because it's a straightforward linearization of 
the graph structure, which is the *model* I'm trying to convey.  RDF/XML 
is (so far) the official *syntax* (as in "Model and Syntax") for 
serializing these models, but if I used it to explain the model, then 
folks would have to understand that syntax in order to understand the 
model, and I'd like to keep them separate if possible.  Also, there are 
all sorts of abbreviations and "irregularities" in the syntax that I'd 
like to avoid talking about.  It might, however, be worthwhile saying 
something more (briefly) about the relationship of Ntriples to the 
RDF/XML syntax.


> 
> Also, what is the relation between nodeIDs in NTriples
> to some representation in RDF/XML. We can't use rdf:ID,
> since that maps to a URI in the presence of an xml:base
> definition.
> 
> How does one achieve the same instance-specific-only
> nodeID representations in RDF/XML?
> 


NodeIds (or whatever the official name for them is now) were invented in 
order to be able to express, in Ntriples, the blank nodes (formerly 
called "anonymous resources") that appear in places like Figure 2 of the 
M&S.  You'll find other blank nodes, for example, in Figures 4, 14, and 
15.  The RDF/XML that expresses the RDF in those figures would need to 
produce nodeIDs if translated to Ntriples.  So it's not that we now need 
to provide a way to express nodeIDs in the RDF/XML, it's the other way 
around:  we created the concept of nodeIDs in order to express in 
Ntriples what we *already* could express in RDF/XML.


--Frank

-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



