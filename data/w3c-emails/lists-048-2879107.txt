docno="lists-048-2879107"
received="Tue Nov 13 15:36:22 2001"
isoreceived="20011113203622"
sent="Tue, 13 Nov 2001 22:36:01 +0200"
isosent="20011113203601"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="Observation about consistency of X and P++"
id="2BF0AD29BC31FE46B78877321144043114C088@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
expires="-1"


To:w3c-rdfcore-wg@w3.org


It occurred to me that both the X and P++ proposals
have a similar advantage in that qualifications of
values do not displace the value itself in the graph
representation as is now the case with qualified
anonymous nodes.

Thus, because literal nodes may act as the subjects
of statements, one need not deal with variants such
as

   _:X _:someProperty "foo" .

   _:Y _:someProperty _:Z .
   _:Z rdf:value "foo" .
   _:Z _:someType .

but rather, in either case, the value is
in the same place in the graph, and statements
are simply made about it. I.e

P++

   _:X _:someProperty _:1:"foo" .

   _:Y _:someProperty _:2:"foo" .

   _:2:"foo" rdf:type _:someType .

X

   [1,S,2,3,4] 
   [2,U,{X}]
   [3,U,{someProperty}]
   [4,L,"foo"]

   [5,S,6,7,8] 
   [6,U,{Y}]
   [7,U,{someProperty}]
   [8,L,"foo"]

   [9,S,5,10,11]
   [10,U,rdf:type]
   [11,U,{someType}]

Note that in both cases, the representations
for the statements about _:X and _:Y have
identitical structure. This is not the case
with the anonymous node form based on the 
present graph model.

(someone please tell me if I've munged up the P++
or NTriples notations)

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



