docno="lists-048-2887512"
received="Tue Nov 13 15:44:53 2001"
isoreceived="20011113204453"
sent="Tue, 13 Nov 2001 22:44:51 +0200"
isosent="20011113204451"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: DATATYPES: mental dump."
id="2BF0AD29BC31FE46B788773211440431621782@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="DATATYPES: mental dump."
expires="-1"


To:melnik@db.stanford.edu,phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org

> > OK, though I think we need to be careful about having the strings in
> > the interpretation, since the X and P schemes probably won't have
> > anything denoting those.
> 
> Right. I understand that strings may still exist somewhere in the
> interpretation even if the corresponding graph does not contain any
> symbols that denote those strings. Is this correct?

This is true for the X model. Even though double quotes are not
used, it is 100% explicit where the "strings" are according to
the notation syntax.

The only strings are the node labels.

> The example goes a bit farther than just talking about numbers. Age,
> weight, months etc. popped up on the list several times in the context
> of datatyping, and I think it is important to clarify what exactly
> different graphs and syntaxes try to express in each specific example.
> In other words, I feel it is important to distinguish whether 
> the token
> "14" in (_Robby p:weightKg "14") denotes a string, a number, 
> or a mass.

Doesn't the type associated with the value tell us this?

I.e. if any interpretation other than string is expected,
it must be indicated by a type association, either locally
or by rdfs:range.

Thus, given

   _X --p:weightKg--> "14" 
   _X --p:weightKg--> "14" --rdf:type--> xsd:string
   _X --p:weightKg--> "14" --rdf:type--> xsd:integer

The value "14" in the first two cases are interpreted
as strings and only the in the latter case as an integer.

Eh?
     
Patrick



