docno="lists-048-2964767"
received="Tue Nov 13 19:08:41 2001"
isoreceived="20011114000841"
sent="Tue, 13 Nov 2001 18:08:46 -0600"
isosent="20011114000846"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: DATATYPES: mental dump."
id="p0510103db81764a9f7ce@[65.212.118.147]"
charset="us-ascii"
inreplyto="3BF023FF.4050007&#64;hplb.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>>Datatype names can be names of classes or names of properties, or both.
>
>
>Nervous twitch of antenae:  Don't we have an issue about whether 
>classes and properties are disjoint?  Yes, in
>
>  http://www.w3.org/2001/sw/RDFCore/20010801-f2f/2001-08-02.html#T21-00-44
>
>we have restated rdfs-subClassOf-a-Property
>
>as
>
>   "are Property and Class disjoint?"
>
>If we decide they are disjoint, does that cause P++ any problems?

Not a fatal problem, though it would kind of force it to choose one 
or the other, so its claimed 'universality' would not be so 
impressive any more.

>[...]
>
>>
>>None of the first three proposals require all this elaboration 
>>(although they are not incompatible with it), since they all assume 
>>that literal meanings are completely specified by the literal label 
>>(to be a single literal value in X, or to be a string in S and DC), 
>>and the datatype class heirarchy, if it exists, is invisible to 
>>RDFS.
>
>
>Is that true, which I suppose means "what exactly do you mean by that?"
>
>For example, in proposal S, if I define the domain of say 
>xsd:integer to be foo:integer and rdfs can conclude that any bNode 
>with an xsd:integer property hanging of it is an integer.

The bNode denotes an integer, sure, but the literal itself on the 
literal node at the other end of the xsd:integer arc is still a 
string. Literals themselves are always treated like 'labels', ie 
strings which denote themselves, in the S/DC systems.

>
>Similarly, in the S proposal, would not xsd:byte be a subProperty of 
>xsd:short which is a subProperty of ...

Sure.

>
>>They can all be straightforwardly handled in RDF/XML.
>>
>>
>>The S and CD proposals require that users conform to a given 
>>'idiom', and are often incompatible with current common usage in 
>>which literals are used to refer to things other than strings;
>
>
>I know what you mean here, but I object to the term incompatible. 
>Current RDF does not do anything about datatypes.

I said current USAGE, and I was going on what others have said about 
people writing things like

Pat shoeSize "10" .

I know we don't currently have an official position on this, but I 
thought it was a common observation that people do these wicked 
things whether we say it is OK or not.

>In one interpretation all literals denote strings, and if I have a 
>property with value "10", then that's just fine.  An application can 
>'know' that it should interpret that as an integer.  With for 
>example, the X and S and DC proposals they can continue to do so. 
>The datatype information is simply not represented in the RDF model; 
>its encoded in the definition of the property.

? That is what the P(++) proposals do; seems to me that is exactly 
what the others fail to do. (??)

>This doesn't seem to me to any different from, say the property 
>weightInKg which takes a P++ representation of an integer implying 
>that units are kilograms, not pounds.

Well, see my response to Sergey on that example. That would only work 
in that form if there was a datatype mapping from numerals to 
kilogram weights, which is unlikely.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



