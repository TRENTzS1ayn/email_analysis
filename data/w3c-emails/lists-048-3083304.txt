docno="lists-048-3083304"
received="Tue Nov 13 22:55:09 2001"
isoreceived="20011114035509"
sent="Tue, 13 Nov 2001 21:53:52 -0600"
isosent="20011114035352"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: datatypes and MT  (#rdfms-graph)"
id="3BF1EAD0.63DBBBD4@w3.org"
charset="us-ascii"
inreplyto="p05101045b8177eb6138f&#64;[65.212.118.147]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
CC:w3c-rdfcore-wg@w3.org

Pat Hayes wrote:
[...]
> >I think that's what we're discussing. I'm suggesting this
> >as a definition of an RDF graph:
> >
> >         terms:
> >                 constants (URIs w/fragids)
> >                 string literals
> >                 bnodes (existentially quantified variables)
> >         statement:
> >                 term term term.
> >         formula:
> >                 statement*
> 
> But that clearly isn't a definition of a *graph*, right? Its  an
> N-triples -style lexical syntax for specifying graphs, at best, so we
> still need to settle all the tidiness questions.

No, not at all. n-triples has punctuation around URIs, whitespace,
etc.

The * in statement* isn't really intended as a kleene-star;
more like: set of statement. Perhaps with a small change
of emphasis/style it will look more like a graph:

Node = symbol U string U bnode
Edge = Node x Node x Node
Graph = 2^Edge

where symbol is the set of URIs w/fragids; string
is the set of unicode character sequences; bnode is
a set disjoint from those two sets, and 2^X
is notation for "sets of X's".


> So what this amounts
> to is: to allow literals in subject position (OK with me)

quite...

> and as arc
> labels (OK I guess, but seems kind of silly, eg how would we do
> datatyping of those?)

er... we don't. literals are all strings, and the
IEXT of all literals is empty.

OK, it's pretty much arbitrary whether you put the
"no literals in the predicate position" constraint
in the graph syntax or the model theory. But my intuition
says that the graph syntax is going to be in a lot
more people's faces, and exceptions there are going
to look uglier. I could go either way, though,
if I got my way on the rest of the issues.

> and also have nodeId-style labels on arcs, to
> quantify over properties.
> 
> Now, that last idea seems to me to basically break the graph syntax
> proposal; there really isn't any point in having a graph syntax if we
> have to include a labelling device to provide a lexical way of
> indicating identity, rather than relying on the graph structure
> itself. We might as well just give up on the F2F decision you cite
> above, and use Ntriples (suitably relaxed, as you suggest) as the
> primary syntax.  Don't get me wrong; I can live with that; I have no
> trouble with bound variables, and the MT can handle existential
> properties. But there is considerable social evidence that many
> people have a lot of trouble with it; and more to the point, I really
> think that it amounts to a reversal of the decision about making the
> graph primary.

Er... well, I wasn't there when the decision was made, and
I don't really see why it was made. It seems like a case
of making something sufficiently fuzzy that nobody can
disagree with it.


> It certainly is a rejection, in effect, of the
> *reasons* why that decision was made, viz. to get rid of bound
> variables (local names, anonymous things that had names anyway,
> skolems, whatever you want to call them) from the primary syntax. .

Get rid of bound variables? What version of the model
theory was rid of bound variables? certainly
not the version published 25 September 2001:

"This effectively treats all unlabeled nodes as existentially
        quantified in the RDF graph in which they occur."

-- http://www.w3.org/TR/2001/WD-rdf-mt-20010925/

I do think I'm missing the point.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



