docno="lists-048-3769698"
received="Wed Nov 14 15:24:03 2001"
isoreceived="20011114202403"
sent="Wed, 14 Nov 2001 22:23:46 +0200"
isosent="20011114202346"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Call for Agenda Items for this weeks telecon (datatype straw  poll?)"
id="2BF0AD29BC31FE46B78877321144043114C09B@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Call for Agenda Items for this weeks telecon (datatype straw  poll?)"
expires="-1"


To:bwm@hplb.hpl.hp.com,connolly@w3.org
Cc:w3c-rdfcore-wg@w3.org


> Pat in a later post proposed to distinguish the proposal I 
> originally labeled X 
> as URV and use X to denote the proposal in:
> 
>    
> http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0303.html

> The distinction is useful and I suggest we consider both.

Here is a revised version of Pat's excellent summary table
including URV (or just U) and X proposals: 


                                   U   S   DC   P  P++  X
CONS
requires literals as subjects                       x   
requires change to MT                           x   x   x
requires DTs to be 'proper'                     x   x  (x)
requires user conform to idiom    (x)  x    x
(requires literals to be typed)    x   x                
cannot express 'clashing' types   (x)       x  (x) (x)

PROS
fully general                                       x   x
conforms to current usage         (x)           x   x   x
allows free type merging               x                ?
compatible with DAML               x            x   ?  (x)
---

Note that I've qualified the con 'cannot
express clashing types' for the U(RV) proposal
as it is possible to define multiple mappings
from URV schemes to data types, including
mappings which have incompatible lexical space
or precision. Though the degree to which mutiple
types associated with a URV can "clash" is much
more limited than the other proposals.

The X proposal doesn't require literals as subjects
per se as all statements are defined in terms of
node identity, irrespective of the node type or
label. Any node can be a subject.

The X proposal only requires DTs to be 'proper'
in terms of value space, not lexical space.

The X proposal 'conforms to current usage' insofar
as it reflects the current model for reification of
statements, and treats the resource-centric graph
(such as employed by the other proposals) as a view
derived from that underlying statement-centric
representation.

As far as I can tell, the X proposal should be
compatible with DAML, though I've qualified that
as needing verification. The same should also be
true for the U proposal, in that since typed
literals become resources with URI Ref identity,
it shouldn't break anything, though data type
remains implicit.

I'm not 100% sure what is meant by 'free type
merging' so don't know if the X proposal does
or does not have that quality.

--

Hope the above is helpful.

Flame at will...   ;-)

Cheers,

Patrick



