docno="lists-048-4065198"
received="Thu Nov 15 06:11:25 2001"
isoreceived="20011115111125"
sent="Thu, 15 Nov 2001 13:11:06 +0200"
isosent="20011115111106"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: DATATYPES: mental dump."
id="2BF0AD29BC31FE46B7887732114404316217C4@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="DATATYPES: mental dump."
expires="-1"


To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Pat Hayes [mailto:phayes@ai.uwf.edu]
> Sent: 15 November, 2001 04:36
> To: Stickler Patrick (NRC/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: RE: DATATYPES: mental dump.
> 
> > >If anyone
> >thinks there's a better way for a given case, please suggest it.
> 
> I don't think the P++ option is expressible in RDF/XML, since it 
> requires literals to be subjects.

Apologies in advance for telling you what you mean by 
your P++ proposal, but... ;-)

Aren't you really saying that the node in the graph, which
is unique, and which has a literal as its label (which is
not necessarily unique) acts as the subject of the statement.

I.e., I've understood that my X proposal was quite
similar in principle to your P++ proposal in that it
defines urirefs and literals as just labels of nodes,
and nodes are unique in the graph, and one would expect
to merge any two nodes having the same uriref label,
but not merge two nodes having the same literal label
(which is why there are distinct UNodes and LNodes
in the X model)

Thus, in fact, P++ is expressable in RDF/XML but requires
a means to clearly denote the node identity and the 
label.

So while there may not be an "elegant" way to express
P++ in RDF/XML, I think it is at least expressable
according to a given idiom.

Eh?

Patrick



