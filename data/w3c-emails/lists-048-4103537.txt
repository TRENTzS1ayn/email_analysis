docno="lists-048-4103537"
received="Thu Nov 15 06:36:41 2001"
isoreceived="20011115113641"
sent="Thu, 15 Nov 2001 12:39:25 +0200"
isosent="20011115103925"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: DATATYPES: mental dump."
id="2BF0AD29BC31FE46B7887732114404316217BE@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="DATATYPES: mental dump."
expires="-1"


To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Pat Hayes [mailto:phayes@ai.uwf.edu]
> Sent: 15 November, 2001 03:26
> To: Stickler Patrick (NRC/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: RE: DATATYPES: mental dump.
> 
> 
> >
> >  > Yes, I do. I think that part of my overall feeling of 
> confusion comes
> >>  from the fact that we don't seem to have a crisp 
> definition of what
> >>  constitutes a datatype or a datatyping scheme
> >
> >How about the one defined by XML Schema, and also adopted by the X
> >proposal and 'lit:' ontology, namely a paired value space and
> >lexical space, the latter of which may have a canonical subset.
> 
> Right, I am happy with that, as long as 'paired' includes the mapping 
> between the lexical and value spaces. That is pretty much what Peter 
> and I were using as the definition as well.
> 
> Maybe we can all agree about something :-)

Well....

I am still unsure just what you mean by "mapping".

I am happy saying that a pairing of a lexical form (literal)
with a data type (URI) together *denote* a value in the
value space of the data type.

But... ;-)

I don't see how you could actually express the explicit 
*mapping* from lexical form to that actual value
without employing a canonical *lexical* representation
of that value, so what you are really defining is a mapping
from non-canonical lexical form to canonical lexical form
and thus just a relation between lexical space and 
canonical-lexical space for the data type.

Furthermore, since a given data type may not define a 
canonical lexical space, RDF would have to assert one
for it.

I must be missing your meaning of 'mapping' here, because
this all seems just way too impractical to me.

Or, maybe we really are in agreement here and the vocabulary
gremlin is up to its tricks...

If by 'includes a mapping' you simply mean that we explicitly
state that in the pairing of lexical form and data type
the lexical form corresponds to one and only one member of
the value space for the data type, with no attempt to offer
any representation of that value, then I think we're in
full agreement.

Patrick



