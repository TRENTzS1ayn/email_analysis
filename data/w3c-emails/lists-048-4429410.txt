docno="lists-048-4429410"
received="Thu Nov 15 13:47:24 2001"
isoreceived="20011115184724"
sent="Thu, 15 Nov 2001 12:47:45 -0600"
isosent="20011115184745"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="RE: DATATYPES: mental dump."
id="p05101065b819bc729611@[65.212.118.147]"
charset="us-ascii"
inreplyto="2BF0AD29BC31FE46B7887732114404316217BE&#64;trebe003.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
Cc:w3c-rdfcore-wg@w3.org

>  > -----Original Message-----
>>  From: ext Pat Hayes [mailto:phayes@ai.uwf.edu]
>>  Sent: 15 November, 2001 03:26
>>  To: Stickler Patrick (NRC/Tampere)
>>  Cc: w3c-rdfcore-wg@w3.org
>>  Subject: RE: DATATYPES: mental dump.
>>
>>
>>  >
>>  >  > Yes, I do. I think that part of my overall feeling of
>>  confusion comes
>>  >>  from the fact that we don't seem to have a crisp
>>  definition of what
>>  >>  constitutes a datatype or a datatyping scheme
>>  >
>>  >How about the one defined by XML Schema, and also adopted by the X
>>  >proposal and 'lit:' ontology, namely a paired value space and
>>  >lexical space, the latter of which may have a canonical subset.
>>
>>  Right, I am happy with that, as long as 'paired' includes the mapping
>>  between the lexical and value spaces. That is pretty much what Peter
>>  and I were using as the definition as well.
>>
>>  Maybe we can all agree about something :-)
>
>Well....
>
>I am still unsure just what you mean by "mapping".

I just mean in it the ordinary mathematical sense. A correspondence 
between two sets of things. Call it a function if you like, or a 
morphism, or a set of ordered pairs, or whatever.

The point being that it isn't enough to JUST give the lexical and the 
value spaces; you have to say HOW the datatype maps one into the 
other. For example, let me define a rather silly datatype that might 
be called regetni, where the lexical and value spaces are just like 
xsd:integer, but the mapping between them reads the numerals 
backwards, so that "12" means twenty-one and "0034" means four 
thousand three hundred. The lexical and value spaces are the same, 
but the mapping is different.

>I am happy saying that a pairing of a lexical form (literal)
>with a data type (URI) together *denote* a value in the
>value space of the data type.
>
>But... ;-)
>
>I don't see how you could actually express the explicit
>*mapping* from lexical form to that actual value

Right, I'm not talking about a mapping that could be *computed* by anything.

>.....
>If by 'includes a mapping' you simply mean that we explicitly
>state that in the pairing of lexical form and data type
>the lexical form corresponds to one and only one member of
>the value space for the data type, with no attempt to offer
>any representation of that value, then I think we're in
>full agreement.

Right, I think we are.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



