docno="lists-048-4523756"
received="Thu Nov 15 16:38:04 2001"
isoreceived="20011115213804"
sent="Thu, 15 Nov 2001 23:38:02 +0200"
isosent="20011115213802"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: datatypes and MT  (#rdfms-graph)"
id="2BF0AD29BC31FE46B78877321144043114C0A5@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="datatypes and MT  (#rdfms-graph)"
expires="-1"


To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Pat Hayes [mailto:phayes@ai.uwf.edu]
> Sent: 15 November, 2001 20:57
> To: Stickler Patrick (NRC/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: RE: datatypes and MT (#rdfms-graph)
> 
> 
> >  > ...The other proposals (S, DC and oldX=URV) don't need
> >>  this complication, however, since they can assume 
> tidiness on literal
> >>  nodes as well as urirefs.
> >
> >Can someone please point me to the most concise, prose definition
> >of tidiness as it relates to the graph?
> 
> Sorry, local jargon. I invented the term in the MT document, by 
> defining an RDF graph to be 'tidy' if had no duplicated names, so 
> each uriref or literal occurs only on a single node. (At that time I 
> was assuming (naively) a U-style treatment of literals. ) Since then 
> it has also been used to refer to the condition that triples are not 
> duplicated in any graph, for example.

That's what I thought it meant, and thus it is equivalent
to the "level 1 merge compression" I outline in my X proposal.

A tidy graph is an X level 1 graph. 

> The reason for having such a term is that forming the simple union of 
> two graphs can produce a non-tidy graph, so one has to get explicit 
> about the tidying process (ie the merging of nodes with the same 
> label to create a tidy merged graph.)

Absolutely.

And in fact, this is what motivated the URV encoding of typed
data literals, so that such values could "participate" in that
tidying process, to *substantially* reduce graph real estate,
and to make finite a number of potentially infinite levels
of anonymous node based qualification.

My X proposal shows an example of this in the section 
discussing URVs.

> When we started taking literals more seriously, some ways of treating 
> them (the P(++) ways) require that different occurrences of the same 
> literal may have different meanings, so it is no longer appropriate 
> to insist on tidiness for literal nodes. 

I had never thought they were expected to participate in tidyness,
since they clearly are ambiguous as to value. Did the original
specs suggest they weren't? Is that where the "literals denote strings"
view comes from?

> In fact, this is one way 
> that the P(++) proposals (and I think the X, though I'm not sure) can 
> be distinguished from the U/S/DC proposals, in that the latter will 
> work with graphs that are tidy on literals, while the others will 
> not. 

Correct. The X proposal expects that each literal occurence is
represented by its own node. Only nodes with uriref labels are
merged.

> So this decision has consequences even for the graph syntax.

Quite so. 

> Hope this helps.

Very much. Thanks,

Patrick



