docno="lists-048-4622845"
received="Thu Nov 15 17:46:36 2001"
isoreceived="20011115224636"
sent="Thu, 15 Nov 2001 16:46:49 -0600"
isosent="20011115224649"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="RE: DATATYPES: mental dump."
id="p05101074b819f53be6ce@[65.212.118.147]"
charset="us-ascii"
inreplyto="2BF0AD29BC31FE46B7887732114404316217D3&#64;trebe003.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
Cc:w3c-rdfcore-wg@w3.org

>  > >I.e., I've understood that my X proposal was quite
>>  >similar in principle to your P++ proposal in that it
>>  >defines urirefs and literals as just labels of nodes,
>>  >and nodes are unique in the graph,
>>
>>  I am puzzled, since this is just true of all RDF graphs: urirefs and
>>  literals ARE labels of nodes, and nodes ARE unique. Right. So what
>>  does it mean to say that the X proposal 'defines' this to be the
>>  case? All of RDF assumes this to be the case, surely (??)
>
>Not in terms of "tidying".
>
>Of course, nodes themselves are unique. What I meant is that
>while nodes with the same uriref labels might get merged,
>nodes with the same literal labels (or no labels) would
>not.

Ah, I see. Yes, I agree that the P(++) and X require literal nodes to 
be nontidy.  P++ uses the node as the carrier of the datyping 
information in the model theory.

>Thus, each literal is "hosted" by its own node and those
>don't ever merge. This allows literals (or rather their nodes)
>to serve as subjects.

Actually that is a separate issue, I think. One could have literal 
subjects with or without the tidiness condition. For example P (not 
P++) requires nontidy literals but doesn't require literal subjects.


IN haste

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



