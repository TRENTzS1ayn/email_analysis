docno="lists-048-4710536"
received="Fri Nov 16 05:24:57 2001"
isoreceived="20011116102457"
sent="Fri, 16 Nov 2001 10:23:39 +0000 (GMT)"
isosent="20011116102339"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="Re: bNodes, MT, process model. Re: datatypes and MT   (#rdfms-graph)"
id="Pine.GSO.4.31.0111161019420.26038-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="p05101070b819e9f2415f&#64;[65.212.118.147]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>
cc: w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>


On Thu, 15 Nov 2001, Pat Hayes wrote:

> >"how do I assert additional information about that node?"
>
> Add some triples to the graph. Well, wait a minute. You don't assert
> more information ABOUT the node, strictly speaking; you assert it
> about the thing that the node might denote. And you do that by adding
> triples to the graph linked to the node, just like you would for any
> other node.

Doh. OK, cheers.

> >
> >The MT obviously doesn't deal with process issues - how do we assert,
> >pass around, delete, transform bits of an RDF graph in an
> >implementation. That's not its job. The MT doesn't actually change much
> >(at all?) if you take the second point of view above. What does change
> >is the reasonable expectation of supported (supportable) operations on
> >an RDF store. Can we get away with this?
>
> I think we need to distinguish two different kinds of question to ask
> an RDF store. One is about the syntax of the graph: does it contain
> certain triples, how many properties are linked to this node, etc., ;
> the other is about what the graph means: does it *entail* this or
> that.  The MT is only concerned with the latter, but it is quite
> legitimate to ask the former kind of question. Now, it makes perfect
> sense to be able to refer to a particular blank node as a syntactic
> object and ask the first kind of questions about it. If we stored the
> graph using  nTriples, we might use nodeIDs to do this, for example.
> But that sense of 'labelling' a node in order to be able to refer TO
> THE NODE and maybe identify it later, has to be distinguished from
> the use of a node label as a referring name in the semantics. A blank
> node may be identified as a node by its nodeID, but that nodeID is
> not a logical name in RDF itself: it doesn't refer to any thing in
> the interpretation in the way that a uriref or a literal does. It has
> no RDF semantics.

This is what I was coming to; fine. (I've no problems with the blankness
of a node - my concerns were due to my blurring the distinction between
an RDF graph and the MTic interpretation of that graph.)

> >PS. Pat, please shoot me down.
>
> Did my best.

Heh, thanks.

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287088 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Whenever I see a dog salivate I get an insatiable urge to ring a bell.



