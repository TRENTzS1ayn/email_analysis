docno="lists-048-4808637"
received="Fri Nov 16 07:26:00 2001"
isoreceived="20011116122600"
sent="Fri, 16 Nov 2001 12:25:59 +0000"
isosent="20011116122559"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: Issue rdfms-abouteach"
id="20854.1005913559@tatooine.ilrt.bris.ac.uk"
inreplyto="2BF0AD29BC31FE46B78877321144043114C0A8&#64;trebe003.NOE.Nokia.com"
expires="-1"

To:Patrick.Stickler@nokia.com
cc:w3c-rdfcore-wg@w3.org


>>>Patrick.Stickler@nokia.com said:

<snip/>
> So, please don't tell me (or some other user) that the
> answer to their problems is to use some other notation than
> RDF/XML!

I gave you a legal RDF/XML example.

I just noted, for writing RDF by hand, which was what you said, there
are friendly ways to do it - get the machines to emit RDF/XML (for
other machines mostly).

> If and when N3 is an *official* serialization for RDF and
> *all* RDF parsers are required to support it in order to
> claim conformance, then I'll accept that as an acceptable
> answer.
> 
> Until then, it is just avoiding the issue.
>  
> > Can now be written as
> > 
> >  <rdf:Bag rdf:ID="guys">
> >     <rdf:li rdf:type="http://example.org/property/Male" 
> > rdf:resource="#Bob"/>
> >  ...
> 
> You are apparently missing the entire point of a
> syntactic *convenience*.

A syntactic mess really.

The form you were using is badly defined and even has its own issue:

  Clarify the interpretation of an ID attribute in the propertyElt
  production within a Description element with a distributive
  referrant.
  --  http://www.w3.org/2000/03/rdf-tracking/#rdfms-propElt-id-with-dr


<snip/>

> It is if you use standard XML mechanisms for inclusion.
>
> Or rather, one can create a syndicated XML instance from
> individual instances for interpretation by an RDF parser
> in terms of syntactic constructs.

On RDF and XML inclusion mechanisms:

    "An application conforms to XInclude if it:
      * supports XML 1.0, XML Namespaces, the XML Information Set,
        and XML Base
     ...
    "
     -- http://www.w3.org/TR/xinclude/#application

Until this refactoring, RDF/XML was't based on Infoset; and currently
we don't do XML Base (discussion stopped a few months ago), hence
XInclude can't be used with RDF/XML.

And use of XML external entities are something I've never seen for
RDF/XML and I wouldn't recommend using.  Ditto processing
instructions and other such stuff.

I would prefer working at the RDF level; use concepts such as
relationships between URI-labelled terms.  If you want to refer to
things in other documents, use rdfs:seeAlso.

Dave



