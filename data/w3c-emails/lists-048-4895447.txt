docno="lists-048-4895447"
received="Fri Nov 16 07:47:01 2001"
isoreceived="20011116124701"
sent="Fri, 16 Nov 2001 14:46:11 +0200"
isosent="20011116124611"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: DATATYPES: mental dump."
id="2BF0AD29BC31FE46B78877321144043114C0AA@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="DATATYPES: mental dump."
expires="-1"


To:melnik@db.stanford.edu
Cc:w3c-rdfcore-wg@w3.org

> x learnedToCountUpTo http://www.w3.org/2001/XMLSchema#integer:10

No. You wouldn't express it that way. URV's don't themselves
contain the data type URIs but map to them. I.e.:

You would express it as

  x learnedToCountUpTo <xsd:integer:10>.

and from the definition defined in the schema for
the 'xsd:' URV schema

  <xsd:integer> lit:mapsTo http://www.w3.org/2001/XMLSchema#integer .

implies

  x learnedToCountUpTo _:1 .
  _:1 rdf:value "10" .
  _:1 rdf:type http://www.w3.org/2001/XMLSchema#integer .


And if you had two statements

  x learnedToCountUpTo <xsd:integer:10>.
  y ageInYears <xsd:integer:10> .

Then your graph would be

   x --learnedToCountUpTo---> <xsd:integer:10>
                                  ^
                                  |
   y --ageInYears------------------

But the interpretation would be

  x learnedToCountUpTo _:1 .
  _:1 rdf:value "10" .
  _:1 rdf:type http://www.w3.org/2001/XMLSchema#integer .
  y ageInYears _:2 .
  _:2 rdf:value "10" .
  _:1 rdf:type http://www.w3.org/2001/XMLSchema#integer .

Thus, it is the object slot of the triple that denotes the
value, not the graph entity filling the slot.

Using URVs allows for far more graph nodes to be tidy and
thus results in a far more compressed graph, but they
are only a more concise, compressed "synonym" for the idiom

   x someProperty _:1 .
   _:1 rdf:value "someLiteral" .
   _:1 rdf:type   some:type .

Is that clearer?

Patrick



