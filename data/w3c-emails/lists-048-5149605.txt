docno="lists-048-5149605"
received="Fri Nov 16 13:43:00 2001"
isoreceived="20011116184300"
sent="Fri, 16 Nov 2001 12:41:58 -0600"
isosent="20011116184158"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Answer to the question: What is a &quot;value&quot; to RDF"
id="p05101079b81aff579b77@[65.212.118.147]"
charset="us-ascii"
inreplyto="5.1.0.14.2.20011116114441.03b3d860&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@MIMEsweeper.com>
Cc:w3c-rdfcore-wg@w3.org

>>[Patrick Stickler:]
>>>  >Honestly, I find that the S proposal bends (and breaks) just
>>>  >too many established intuitions and expectations about RDF
>>>  >semantics,
>>  >[Pat Hayes:]
>>  > I don't think it breaks the semantics at all; it just insists on a
>>>  rather rigorous way of understanding the meaning of literal labels.
>>>  That may ruffle many expectations, I concede. But part of our task
>>>  may be educational :-).
>
>If we were working on a "greenfield site" [*] I'd adopt the S scheme 
>straight away.  It's simple and coherent and doesn't preclude 
>simplified use, as illustrated above..  But I still worry about 
>backward compatibility.  ([*] UK planning (zoning) jargon for 
>building on virgin land; preferred by property developers because 
>it's cheaper than building on so-called "brownfield" sites.)
>
>I'd like to consider a simple example:
>
>     ex:foo ex:property "10" .
>     ex:property rdfs:range xsd:integer .
>
>Can this be legitimate?

In S, I don't think so, since xsd:integer has to be a property rather 
than a class.

Even if we allow it to be used in both ways at once, I cannot see any 
way in which range information on the asserting property (ie the 
property that occurs in the triple which has the bNode as object in 
the S idiom) can possibly constrain the datatype used in the second 
triple (the one that has the bNode as subject and the literal as 
object.), or indeed even have any interaction with it. The triple
_:x xsd:integer "10" .
can be, at best, only constrained to be false by a class restriction 
of the form
_:x rdf:type <someClass> .
It cannot be forced to be true.

>  If so, what can we say about it?
>
>Could we, for example, allow rdf:type values like xsd:integer to be 
>subclasses of rdfs:literal, so that the members of the value space 
>are still just strings, but having a restricted lexical form?

But that would not specify the datatype, since "10" might be a 
decimal or a binary or an octal or whatever.

>  Any interpretation of the string as (say) an integer would be 
>outside the scope of RDF, but we could still have some inference 
>from the above like:
>
>     ex:foo ex:integerProperty _:int10node .
>     _:int10node rdf:type xsdv:integer .
>     _:int10node rdf:value "10" .

Yes, but that is more the DC style than the S style. Howrya gonna get 
the xsd: name into a property position??

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



