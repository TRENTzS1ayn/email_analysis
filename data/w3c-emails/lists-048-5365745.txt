docno="lists-048-5365745"
received="Mon Nov 19 04:59:26 2001"
isoreceived="20011119095926"
sent="Mon, 19 Nov 2001 11:59:30 +0200"
isosent="20011119095930"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Answer to the question: What is a &quot;value&quot; to RDF"
id="2BF0AD29BC31FE46B78877321144043114C0B2@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Answer to the question: What is a &quot;value&quot; to RDF"
expires="-1"


To:phayes@ai.uwf.edu,Graham.Klyne@MIMEsweeper.com
Cc:w3c-rdfcore-wg@w3.org

> ... I'd adopt the S scheme 
> >straight away.  It's simple and coherent and doesn't preclude 
> >simplified use, as illustrated above..  But I still worry about 
> >backward compatibility.  

This is what bothers me about the S proposal. Despite many
attractive features, it is a radical (IMO) departure from 
the way that data typing is presently being done; namely
either by rdfs:range or anonymous nodes (per the DCMI
treatment, etc.)

It also raises a plethora of questions (yet to be answered)
about what it means for a property to embody the semantics
of a data type such that we can have multi-purpose properties
such as ex:age which not only define a property of a resource
but also the data type of the value, by having ex:age
be a subPropertyOf xsd:integer, with the latter treated as 
a property? E.g.

   xxx ex:age "10" .
   ex:age subPropertyOf xsd:integer .
   ex:age subPropertyOf foo:humanQuality .

I honestly think that the S approach is going to create more 
questions than it answers and that the changes it will
require in existing systems/data as well as the way things
are understood to be done in RDF at present could be detrimental
to general RDF acceptance -- i.e. the world at large is already 
having to take RDF with a grain of salt, so let's not turn that
grain into a salt lick by adopting too radical a solution ;-)

To that end, I've just sent out a recommendation to the WG which,
depending on your perspective or state of mind, can either
be seen as yet another proposal competing with the others
already named, or rather a recommendation to not consider any such
proposals, per se, but only clarify, standardize, and
interpret existing practice.

It is based on the premise that whatever solution we adopt, it
shouldn't require any significant changes to the way folks are 
using RDF now.

Anyway, I hope it will be useful in reaching closure on this
issue in a way that everyone is happy with.

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



