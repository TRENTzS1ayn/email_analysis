docno="lists-048-5376676"
received="Mon Nov 19 05:09:26 2001"
isoreceived="20011119100926"
sent="Mon, 19 Nov 2001 12:09:28 +0200"
isosent="20011119100928"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Answer to the question: What is a &quot;value&quot; to RDF"
id="2BF0AD29BC31FE46B788773211440431621807@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Answer to the question: What is a &quot;value&quot; to RDF"
expires="-1"


To:phayes@ai.uwf.edu
Cc:melnik@db.stanford.edu,w3c-rdfcore-wg@w3.org

> >Are you saying that given
> >
> >    xxx --foo:date--> "2001-11-29"
> >
> >that foo:date is not a data type?
> 
> No, but the S idiom would say that its being a datatype does not 
> entail that that literal "2001-11-29" *denotes* a date in the RDF 
> semantics; rather, this RDF triple should be understood as saying 
> that xxx is a date, and that '2001-11-29' is a lexical form of that 
> date in the datatype in question. So the literal label in this triple 
> denotes a string, not a date.

I don't find this treatement intuitive. It is essentially
saying that any form

   x --some:type-->

might be a contraction for

   x --rdf:type--> some:type

yet how do we know *which* properties correspond to that contraction?
Do we all make them subPropertyOf rdf:type? It's just making things
messier and less well defined that at present.

I think that we have a case of the tail (MT) wagging the dog (graph)
such that the S treatment is preferred because it is (supposedly)
easier to define in the MT but it does not reflect common usage
or present definition of the RDF graph model or intuitions about
the purpose and semantics of terms such as rdfs:range, rdfs:subClassOf,
 or rdfs:subPropertyOf.

And the present idiom based on anonymous nodes is IMO much
clearer and accomplishes the same purpose but does so per
the present RDF "tradition" without mucking up type and
property distinctions:

   xxx --rdf:type---> foo:date .
   xxx --rdf:value--> "2001-11-29" .

Thus, the anonymous node (bNode) denotes the value, and it
has properties for type and lexical form, and thus acts
as the identity in the graph for that pairing. 

Eh?

Patrick



