docno="lists-048-5427180"
received="Mon Nov 19 05:58:31 2001"
isoreceived="20011119105831"
sent="Mon, 19 Nov 2001 12:58:33 +0200"
isosent="20011119105833"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Answer to the question: What is a &quot;value&quot; to RDF"
id="2BF0AD29BC31FE46B78877321144043162180C@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Answer to the question: What is a &quot;value&quot; to RDF"
expires="-1"


To:Graham.Klyne@MIMEsweeper.com,phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Graham Klyne [mailto:Graham.Klyne@MIMEsweeper.com]
> Sent: 17 November, 2001 18:57
> To: Pat Hayes
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: Answer to the question: What is a "value" to RDF
> Importance: Low
> 
> 
> At 12:41 PM 11/16/01 -0600, Pat Hayes wrote:
> >>I'd like to consider a simple example:
> >>
> >>     ex:foo ex:property "10" .
> >>     ex:property rdfs:range xsd:integer .
> >>
> >>Can this be legitimate?
> >
> >In S, I don't think so, since xsd:integer has to be a 
> property rather than 
> >a class.
> >
> >Even if we allow it to be used in both ways at once, I 
> cannot see any way 
> >in which range information on the asserting property (ie the 
> property that 
> >occurs in the triple which has the bNode as object in the S 
> idiom) can 
> >possibly constrain the datatype used in the second triple 
> (the one that 
> >has the bNode as subject and the literal as object.), or 
> indeed even have 
> >any interaction with it. The triple
> >_:x xsd:integer "10" .
> >can be, at best, only constrained to be false by a class 
> restriction of 
> >the form
> >_:x rdf:type <someClass> .
> >It cannot be forced to be true.
> 
> I think I didn't state my query clearly enough.  The above example is 
> exactly the case I wanted to test (because I think it 
> corresponds to some 
> current usage).  But I was not clear that the xsd:integer is 
> *not* intended 
> to be the property used in the S scheme to indicate an integer value.
> 
> Consider this slightly enlarged example:
> 
>      ex:foo ex:property "10" .
>      ex:property rdfs:range xsd:integer .
>      ex:foo s:property _:a .
>      _:a s:inDecimal "10" .
> 
> where it is the node labeled _:a that denotes the integer 
> value 10.  (This 
> entails the smaller example above, right?)
> 
> I think it *can* be legimitate if the xsd:... URIs are 
> considered to be RDF 
> class names whose value space is strings that conform to the 
> corresponding 
> xsd:... lexical space.  In this interpretation, the xsd:... 
> URIs would not 
> be used to label properties;  some other label would be 
> required for that 
> (s:property and s:inDecimal in the above example).

This is the interpretation that is suggested in my
recent recommendation

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0579.html

In a nutshell, it is the "object slot" of the statement
that denotes the value, not the "thing" that is in the
slot (literal, uriref, or bNode).

> [Later]
> 
> It also occurs to me that we could have three parallel 
> namespaces; e.g.
> 
>     xsd:integer a rdf:Class.     (Lexical space of decimal 
> integers, per 
> XML schema)
>     xsdv:integer a rdf:Class.    (Value space of integers, 
> per XML schema)
>     xsdp:integer a rdf:Property.

And precisely who is the authority defining these classes
which have meaning only to RDF, and how does that sync up
with the use of XML Schema simple class usage outside of
RDF, and does that mean that *every* data type scheme must
define three parallel taxonomies?

This is what I mean by the S proposal not being fully
understood as far as implications to the big picture.

It may be the way to go for RDF 2.0 or even RDF 1.1 but
it just strikes me as too radical a change in too short
a time to fully understand its impact (good or bad).

Patrick



