docno="lists-048-5588208"
received="Wed Nov 21 02:48:04 2001"
isoreceived="20011121074804"
sent="Wed, 21 Nov 2001 09:47:46 +0200"
isosent="20011121074746"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: DATATYPING: initial draft"
id="2BF0AD29BC31FE46B78877321144043114C0C0@trebe003.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="DATATYPING: initial draft"
expires="-1"


To:melnik@db.stanford.edu,w3c-rdfcore-wg@w3.org



> -----Original Message-----
> From: ext Sergey Melnik [mailto:melnik@db.stanford.edu]
> Sent: 21 November, 2001 01:37
> To: RDFCore WG
> Subject: DATATYPING: initial draft
> 
> 
> The datatyping document I'm working on it available at
> 
> http://www-db.stanford.edu/~melnik/rdf/datatyping/
> 
> It is still very rough, but I'm posting the link so you can 
> ensure that
> I'm still on track (I'll be on a Thanksgiving trip Thu-Sun, 
> so I wanted
> to have something out before that).
> 
> Looking forward to your comments,
> Sergey


All in all, it looks to me to be a great start. 

The definitions in the section "Type System" of value space,
lexical space, and canonical space are very clear, and the
graphic showing the mapping with the canonical mapping
as a smaller arrow in the lexical mapping arrow is very nice.

Some comments on the "Type System" section: 

1. I think it should somehow address the fact that (a) RDF
provides no explicit (lexical) representation for the actual 
value in a given data type value space, and (b) the denotation 
of a value in a given value space is based on a pairing of 
lexical form (literal) with data type identifier (URI).

2. We may wish to put in a footnote pointing out that while
XML Schema also provides a similar definition of canonical
lexical space, it allows for some exceptions to the absolute
1:1 mapping between canonical lexical space and value space.

E.g. the "canonical" lexical space for xsd:decimal is not
canonical according to our definition (the XML Schema spec
admits this) -- and our definition is, I believe, correct 
and no such exceptions should be made (XML Schema 
should actually IMO used fixed point notation
for the canonical lexical space of decimals to fix that
"bug").

3. In the context of two types X and Y where X is a subClassOf Y:

a) The value space of X is a proper subset of the value space of Y.
b) The canonical lexical space of X is a proper subset of the lexical
   space of X.
c) The lexical space of X is NOT necessarily a proper subset of
   the lexical space of Y.

These are IMO fundamental properties of the rdfs:subClassOf
relation when defined between two data type classes.

4. We may wish to provide some discussion about the which 
XML Schema type definition mechanisms correspond to a subClassOf
relation. E.g. by restriction does, but by list does not, etc.
It may in fact be possible to parse a set of XML Schemata to
automatically extract all subClassOf relations and generate
an RDF Schema containing that knowledge.

5. It may be useful to give some examples of possible Facets,
even though they would be non-normative, to make clearer
their intended purpose.

--

One question about "naming" a mapping by property:

A property presently defines an attribute or quality of the
subject, yet a "data type property" defines an attribute or
quality of the object (possibly in addition to an attribute
of the subject), and that seems counter-intuitive to
common usage and perception of RDF semantics. E.g. given

   x eg:age "10" .
   eg:age rdfs:subPropertyOf xsd:integer .

the property eg:age is attributive explicitly to 'x'
and implicitly to "10". Is this really a good thing?

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



