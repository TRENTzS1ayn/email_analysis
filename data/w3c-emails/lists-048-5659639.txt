docno="lists-048-5659639"
received="Wed Nov 21 16:34:11 2001"
isoreceived="20011121213411"
sent="Wed, 21 Nov 2001 21:34:02 +0000"
isosent="20011121213402"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Issue rdfms-rdf-names-use"
id="5.1.0.14.0.20011121212700.0c9de0c8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="30494.1006376663&#64;tatooine.ilrt.bris.ac.uk"
expires="-1"


To: Dave Beckett<dave.beckett@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org

I wasn't clear enough before.  Roland is relying on:

   http://lists.w3.org/Archives/Public/www-archive/2001Jun/att-0021/00-part#196

[[[When an RDF processor encounters an XML element or attribute name that 
is declared to be from a namespace whose name begins with the string 
"http://www.w3.org/TR/REC-rdf-syntax" and the processor does not recognize 
the semantics of that name then the processor is required to skip (i.e., 
generate no tuples for) the entire XML element, including its content, 
whose name is unrecognized or that has an attribute whose name is 
unrecognized.]]]

What he is doing is:

   o writing an html document
   o embedding some RDF in it which does not get rendered by a
       browser
   o including in the middle of the RDF inside the html

      <rdf:html> some html here </rdf:html>

     which causes the browser to render the "some html here" and
     is ignored by the RDF parser.

I bring this to the WG's attention because para 196 is relevant to this 
issue, and also Roland's use of this is unusual.

Brian




At 21:04 21/11/2001 +0000, Dave Beckett wrote:
> >>>Brian McBride said:
> > I got the following example from Roland Schwaenzl
> >
> > Apparently, they use the fact that an RDF parser is required to turn of
> > parsing when it encounters a name in the RDF namespace it does
> > recognise.
>
><snip/>
>
>The existing M&S is rather vague on this point IMHO:
>
>   "The RDF element is a simple wrapper that marks the boundaries in an
>   XML document between which the content is explicitly intended to be
>   mappable into an RDF data model instance. The RDF element is
>   optional if the content can be known to be RDF from the application
>   context."
>   -- 2.2.1. Basic Serialization Syntax
>      http://www.w3.org/TR/1999/REC-rdf-syntax-19990222/
>
>since context is never defined. and in the grammar:
>
>    [6.1] RDF ::= ['<rdf:RDF>'] obj* ['</rdf:RDF>']
>
>    -- http://www.w3.org/TR/1999/REC-rdf-syntax-19990222/#RDF
>
>and thus rdf:RDF is actually entirely optional in the grammar.
>
>
>We could specify it clearer in several ways.
>
>I've currently got these words in my editors draft:
>
>   If the content is known to be RDF/XML by context, such as when
>   RDF/XML is embedded inside other XML content, then the grammar can
>   either start at Element Node RDF (only when an element is legal at
>   that point in the XML) or at production nodeElementList (only when
>   element content is legal, since this is a list of elements). Note
>   that if such embedding ocurrs, the grammar may be entered several
>   times but no state is expected to be preserved.
>
> 
>http://ilrt.org/discovery/2001/07/rdf-syntax-grammar/#section-Infoset-Grammar
>
>This gets around another issue - the XML infoset upon which this is
>based is not defined for namespaced XML elements / attributes, so we
>can't actually deal with them at all in the regular grammar:
>
>   XML 1.0 documents that do not conform to [Namespaces], though
>   technically well-formed, are not considered to have meaningful
>   information sets. That is, this specification does not define an
>   information set for documents that have element or attribute names
>   containing colons that are used in other ways than as prescribed by
>   [Namespaces].
>   -- http://www.w3.org/TR/2001/REC-xml-infoset-20011024/#intro
>
>
>so for Rolands example, the current wording allows his application to
>enter/leave RDF processing at the rdf:RDF element; and we don't and
>shouldn't define what is outside that.
>
>Dave



