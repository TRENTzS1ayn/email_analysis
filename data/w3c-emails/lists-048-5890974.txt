docno="lists-048-5890974"
received="Wed Nov 28 12:42:12 2001"
isoreceived="20011128174212"
sent="Wed, 28 Nov 2001 11:41:04 -0600"
isosent="20011128174104"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: Proposal to drop S from consideration"
id="3C0521B0.E70BA936@w3.org"
charset="us-ascii"
inreplyto="A03E60B17132A84F9B4BB5EEDE57957B07F4E3&#64;trebe006.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
CC:jjc@hplb.hpl.hp.com,w3c-rdfcore-wg@w3.org

Patrick.Stickler@nokia.com wrote:
[...]
> But that doesn't mean that other's won't.
> 
> And while I don't take issue with your interpretation of
> 
>   <dc:title>abc</dc:title>
> 
> such that 'abc' denotes a string, but you seem to imply
> (and please correct me if I'm wrong) that given
> 
>   <dc:date>2001-11-27</dc:date>
> 
> that '2001-11-27' also denotes a string, which I think
> is not the common view (certainly not my view).

As far as I know, it's the view taken in every implementation.
I'm not aware of any implementation that allows
any date-related operations on the value of such a property;
they all allow string operations on it.

Do you have some RDF software that treats the value of
that property as a date?

Applications on top of RDF parsers that know about dc:date
take the string and do date stuff with it. But not
the RDF parser itself.

> I think
> that most folks expect the data content of such a property
> element to correspond to a value in a value space, and that
> the data content literal correlates to a lexical form, not a
> string.

I see that as a misunderstanding of RDF 1.0's expressive
capabilities.

> The string representation of the literal is just a
> syntactic mechanism, not the actual semantics of the literal.
> The literal is a lexical form, not a string.
> 
> > > I am increasingly concerned about how many changes we feel
> > entitled to make
> > > under our charter.
> >
> >
> >
> > You see S as a change? I don't. It's the way I've read
> > the RDF spec since 1997 or so.
> 
> I definitely see S as a change, not only a change of common
> idiom but also requiring changes to how one thinks about
> property relations and the semantics of RDFS mechanisms.

But is it a change to the RDF language?

> The S proposal would require re-definition of the semantics
> of (and possible constraints on the use of) rdfs:subPropertyOf,
> rdfs:range, and rdfs:domain to prevent ambiguous overloading
> of semantics for properties such as
> 
>    ex:age rdfs:subPropertyOf xsd:integer .
>    Bob ex:age "10" .
>
> Where the property ex:age suggests that Bob is an integer.

It does more than suggest; it says quite clearly that
Bob is an integer; this is one of the many false
statements one can make with RDF. Yes, the
use of rdfs:subPropertyOf, rdfs:range, and rdfs:domain
is most sensibly constrained to uses that are
consistent with their semantics. But this in
now way motivates re-defining them.

> I see the S proposal as initiating a domino effect of
> changes, redefinitions, clarifications, and constraints
> that otherwise would not be needed if a combined P/U/DAML
> approach were adopted, as I've proposed, and the latter
> approach will address the needs of data typing and support
> of XML Schema data types equally well as the S proposal
> (possibly better, given backwards compatibility both with
> common idioms as well as common understanding of present
> RDF/S semantics).

On the other hand, P/U/DAML requires re-deploying RDF 1.0,
not just clarifying it.

I see S as a straightforward layer atop RDF 1.0.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



