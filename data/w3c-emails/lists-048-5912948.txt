docno="lists-048-5912948"
received="Thu Nov 29 05:26:18 2001"
isoreceived="20011129102618"
sent="Thu, 29 Nov 2001 10:26:09 -0000"
isosent="20011129102609"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: Proposal to drop S from consideration"
id="JAEBJCLMIFLKLOJGMELDCEJGCCAA.jjc@hplb.hpl.hp.com"
charset="US-ASCII"
inreplyto="3C0521B0.E70BA936&#64;w3.org"
expires="-1"

To:<connolly@w3.org>,<Patrick.Stickler@nokia.com>
Cc:<w3c-rdfcore-wg@w3.org>



There are currently available general purpose RDF environments with some
type support that do things differently from S.

I do not believe that there are any which do things remotely similarly to S.

DanC:
>
> Do you have some RDF software that treats the value of
> that property as a date?
>

Jena has API support for integers and floating point values in terms of
regarding the integer or floating point as the interesting value and the
string just as a lexicalisation.

See in particular:

http://www.hpl.hp.com/semweb/javadoc/com/hp/hpl/mesa/rdf/jena/model/Resource
.html#addProperty(com.hp.hpl.mesa.rdf.jena.model.Property,%20long)

and

http://www.hpl.hp.com/semweb/javadoc/com/hp/hpl/mesa/rdf/jena/model/Resource
.html#hasProperty(com.hp.hpl.mesa.rdf.jena.model.Property,%20double)

> Applications on top of RDF parsers that know about dc:date
> take the string and do date stuff with it. But not
> the RDF parser itself.

I don't think we should make a distinction between the parser and the rest
of the RDF processing. A valid implementation of a type mechanism might
include an untyped treatment during parsing and applying type rules later.
Stuff which requires application specific treatment and can't go into a
general platform is all that is application specific.

Giving the lack of type support in RDF M&S all a general purpose platform
can do is give support for the application programmer who has to know which
values get converted and which don't.

Query languages such as

http://swordfish.rdfweb.org:8085/rdfquery/index.html

(which is supported in Jena) currently take a very liberal view to typing.
If it fits the lexical space of an integer, and the query treats it as an
integer then it is an integer for now.

Both Jena and Swish take the view that Patrick is championing that the
string is just the lexical form, and there is some other value that is not a
string trying to get out.

Concerning Jena, I believe the HP developers will make the effort to support
whatever this WG recommends. My point is that S will probably require more
work than some of the other proposals.

Jeremy



