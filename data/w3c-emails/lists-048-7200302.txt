docno="lists-048-7200302"
received="Thu Oct 11 14:50:04 2001"
isoreceived="20011011185004"
sent="Thu, 11 Oct 2001 14:49:21 -0400"
isosent="20011011184921"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: new model theory for DAML+OIL"
id="20011011144921W.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="p05101050b7ea7eb7993b&#64;[205.160.76.193]"
expires="-1"

To:phayes@ai.uwf.edu
Cc:joint-committee@daml.org,w3c-rdfcore-wg@w3.org


I think that this is getting close to a solution.  However, I have come up
with a small collection of examples that we might think of handling.  I
enclose them and their ``status''.

peter


Datatyping Examples


Here are some datatyping examples, written in an XML-like sytax.  I think
that these examples should be handled by any datatype extension to RDFS.

Peter F. Patel-Schneider
Bell Labs Research



Untyped example:

   The following should be satisfiable:

<Person rdf:ID="Mary">
  <streetAddress>05</streetAddress>
</Person>

   Its models should include models where Mary's streetAddress is an integer
   and others where Mary's streetAddress is a string.

STATUS:  Not OK?


Typing through local type names:

   The following should be satisfiable:

<Person rdf:ID="Mary">
  <streetAddress xsi:type="xsd:string">05</streetAddress>
  <age xsi:type="xsd:integer">06</age>
</Person>

   Its models should all have Mary's age be the integer 6, and Mary's
   street address be the string "05".

STATUS:  OK, via local type decoration.


Non-typing through local type names:

   The following should be satisfiable:

<Person rdf:ID="Mary">
  <streetAddress xsi:type="xsd:anyType">05</streetAddress>
</Person>

   Its models should include models where Mary's streetAddress is an integer
   and others where Mary's streetAddress is a string.

STATUS:  Not OK.  Need types that don't pin down mapping.


Typing through direct range restriction:

  The following should be satisfiable:

<Person rdf:ID="Mary">
  <age>06</age>
</Person>

<rdf:Property rdf:ID="age">
  <rdfs:range rdf:resource="xsd:integer" />
</rdf:Property>

   Its models should all have Mary's age be the integer 6.

STATUS:  Probably OK?  Can type decorations be obtained here?


Typing through inherited range restriction:

  The following should be satisfiable:

<Person rdf:ID="Mary">
  <age>06</age>
</Person>

<rdf:Property rdf:ID="intrelation">
  <rdfs:range rdf:resource="xsd:integer" />
</rdf:Property>

<rdf:Property rdf:ID="age">
  <rdfs:subPropertyOf rdf:resource="intrelation" />
</rdf:Property>

   Its models should all have Mary's age be the integer 6.

STATUS:  Probably OK?


Inconsistent typing:

   The following should be allowed but unsatisfiable:

<Person rdf:ID="Mary">
  <streetAddress>05</streetAddress>
</Person>

<rdf:Property rdf:ID="streetAddress">
  <rdfs:range rdf:resource="xsd:integer" />
</rdf:Property>

<rdf:Property rdf:ID="streetAddress">
  <rdfs:range rdf:resource="xsd:string" />
</rdf:Property>

STATUS:  OK, through disjointness of integers and strings.


Typing from XML Schema:

   The following should be allowed:

<xsd:element name="item">
  <xsd:complexType>
   <xsd:sequence>
     <xsd:element name="quantity" type="xsd:integer">
   </xsd:sequence>
  </xsd:complexType>
</xsd:element name="item">

<item>
  <quantity>1</quantity>
</item>

  Its models should include only models where the item's quantity is the
  integer 1.

STATUS:  OK, through type decoration from XML data model?



