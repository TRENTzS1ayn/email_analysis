docno="lists-048-7646708"
received="Sat Oct 13 13:39:46 2001"
isoreceived="20011013173946"
sent="Sat, 13 Oct 2001 18:37:09 +0100"
isosent="20011013173709"
name="dehora"
email="dehora@eircom.net"
subject="Re: use cases for Literal? RSS? Dublin Core? PRISM? DAML? XAP?"
id="011601c1540d$b05c6dc0$01000001@MITCHUM"
charset="us-ascii"
inreplyto="use cases for Literal? RSS? Dublin Core? PRISM? DAML? XAP?"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>



Dan:
"The test data that Art collected...

  Test cases for parseType="Literal"
  Art Barstow (Mon, Oct 08 2001) 
  http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0095.html

shows that RDF implementations are pretty much all
over the map on this literal stuff.

That suggests, to me, that we should chuck it, like
we did aboutEachPrefix... but only if nobody's using it."


Jeremy:
"I would not be opposed to deleting parseType="Literal""



I wouldn't either (deleting all xml attributes pertaining to literals
would be a mercy killing at this point), but for my edification, can
someone please tell me how we got from insisting that proposals on this
attribute be backwards compatible to dropping it? If I'd known that
dropping the thing was a backwards compatible option, I'd have suggested
as much a month ago :)

Aside: 
Some of parseType="Literal" examples I see are illegal as wf XML. Why?
They don't have an enclosing/root element. That includes the dc example
in the M&S and most of the tests Dan refers to above. For example in
cases such as:

test002:

 <rdf:Description rdf:about="http://www.example.org">
   <eg:property xml:lang="en-US" rdf:parseType="Literal">well-formed
XML</eg:property>
 </rdf:Description>

where the resultant literal:

   well-formed XML

is not well formed XML, then processors should complain. The RDF as a
whole may be well formed XML, but The M&S is quite clear that such
literals are element content and this element content is to be wf XML:

From the M&S:

[[[
In all cases, the content of an element having a parseType attribute
must be well-formed XML.
]]]


From XML1.0 2nd ed:

[[[
2.1 Well-Formed XML Documents
[Definition: A textual object is a well-formed XML document if:]

Taken as a whole, it matches the production labeled document.

It meets all the well-formedness constraints given in this
specification.

Each of the parsed entities which is referenced directly or indirectly
within the document is well-formed.

Document
[1]    document    ::=    prolog element Misc* 
]]]

Expanding the <element> production (<prolog> and <Misc> have empty
expansions) tells us that we the next thing we see is either an
<EmptyElemTag> [44] or an <Stag> [40]. 

So not only are these processors all over the map, they don't know what
well formed XML is. Of the literal test cases, only test004 is legal
XML-RDF.


regards,
Bill 



