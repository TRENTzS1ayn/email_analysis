docno="lists-048-7938940"
received="Mon Oct 15 11:04:51 2001"
isoreceived="20011015150451"
sent="Mon, 15 Oct 2001 16:02:16 +0100"
isosent="20011015150216"
name="Bill de hOra"
email="bdehora@interx.com"
subject="Re: PRIMER: draft data model section"
id="000501c1558a$68395480$01000001@MITCHUM"
charset="US-ASCII"
inreplyto="PRIMER: draft data model section"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>


> Aaron:
>
> You seem to imply that the character string "John Smith" wrote this
web 
> page. As DanC pointed out: "I don't think a 10 character string
created 
> a web page."

Frank:

I don't either, but at this point, I'm trying to express things the way 
I think people might normally think about expressing them.  I try 
(possibly a little indirectly) later on to clarify this point, but I'm 
not sure it's the right thing to start off addressing the name vs. 
resource issue right away (although it could be more clearly identified 
as an issue further along, I suspect).  This is certainly one of the 
presentation decisions that needs to be made though.


BTW:  Regarding both this issue, the other issues you raise below, and 
any others that come up, I don't necessarily feel strongly about these 
things;  
>>

I do feel strongly about this. 

There's this notion floating around the RDF community regarding name and
entity when literals are property values in that properties must always
point to the name. I think Drew McDermott asked this question about
strings being implicated as entities publicly first on rdf-logic (I'll
stand corrected on that), but I believe his point was about the
semantics of properties, not literals. 

Please read a response I sent to Sean Palmer on this same matter:

http://lists.w3.org/Archives/Public/www-rdf-interest/2001Sep/0050.html

[Indeed most of the examples I've seen of literal values have literals
naming an entity in a common-sense way. Yes that's folkware semantics
but there's nothing wrong with common-sense just because computers don't
have any. In any case it's up to the modeller (in this case, the primer)
to make the semantics explicit. Surely that's what RDF is for?]

Anyway. There is _nothing_ in RDF to make us think that when a property
has a literal value the property means the literal itself is the entity
and not what the value might denote and I don't want the primer to
implicit mandate otherwise. If there's anything in the MT to that
effect, I'd appreciate being told, because I didn't know RDF had
constrained properties in such a way. 

In Frank's example, without clear semantics for 'creator' there isn't
enough information to make a decision on what's being implied. 

I suggest making it crystal that the example is to show how intuitive
the triples form. Do this by pulling an example from natural language,
as Frank is, and moving from a NL sentence to an RDF triple. Frank's
doing pretty much the right thing; the entity/name issue can be deferred
for a detailed discussion later. Indeed the 'maybe' of literal denoting
entities acts both as a foil to URI denotation and gives a nice hook
into the importance of declaring and inferring the semantics of
properties.

To help achieve this tho', put everything or nothing in quotes: the M&S
'Hello, Ora' examples are conveniently selective with quote marks which
is the root of this confusion. 

Also, literals aren't strings, but that's another matter :)

regards,
Bill

.. 
InterX 
bdehora at interx.com 
+44(0)20-8817-4039 
www.interx.com 



