docno="lists-048-8424424"
received="Tue Oct 16 11:43:37 2001"
isoreceived="20011016154337"
sent="Tue, 16 Oct 2001 11:42:10 -0400"
isosent="20011016154210"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: ACTION 2001-10-12#5:  frankm respond to gk text"
id="3BCC5552.E174FC19@mitre.org"
charset="us-ascii"
inreplyto="p05101015b7f16d2f4026&#64;[205.160.76.193]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
CC: Sergey Melnik<melnik@db.stanford.edu>,w3c-rdfcore-wg@w3.org

Pat Hayes wrote:
> 
> >Pat Hayes wrote:
> >>  [...]
> >>  > Frank Manola wrote:
> >>  > [...]
> >>  >[2.] If so, should they be clearly distinguishable as parser
> >>generated URI's?
> >>  >  -- Stricly speaking, the parser is not required to generate URIs.
> >>  >The parser *is* required to generate local names (that are not URIs)
> >>  >for anonymous resources. These names *are* distinguishable from URIs.
> >>
> >>  What exactly is 'the parser' here? (Parser of what?) If the parser is
> >>  parsing an Ntriples document, then the bNode ids are in the document
> >>  already and nothing needs to be generated.
> >
> >Not quite... If an Ntriple document contains bNode _x the parser must
> >generate different internal ids for _x each time the document is parsed,
> >right?
> 
> Nope. Oh, well, wait a minute. I guess Im not quite sure what exactly
> a parser for Ntriples is supposed to be doing. If it is constructing
> a graph then it doesnt need to generate anything. If however one is
> using the Ntriples as a primary notation to support inference, then
> yes, it will have to take some care to standardize nodeIDs apart from
> any nodeIDs from *other* documents. But strictly speaking it isn't
> *necessary* to generate new names to do this; renaming is just one
> technique for avoiding name clashes.

I think "nope" is technically the right answer.  The important thing
isn't that a parser *must* generate new internal ids each time it parses
the document, it's that it *might* generate new internal ids each time
it parses the document.  It's free to generate internal ids however it
wants to, as long as it can maintain uniqueness.  It's not clear to me
that that *requires* regenerating ids for each parse.  Regarding the
issue of the parser generating graphs, the answer is (once again) to
couch things in terms of the graph "model" again, right?  The parser is
required to maintain node identity at the level of the graph structure; 
what internal means it uses to do this is a representational issue (as
are bNode ids in Ntriples, at least at the moment).

> 
> >  > If the parser is dealing
> >>  directly with the graph syntax, then there is no need for the bNode
> >>  labels at all, and nothing needs to be generated. If the parser is
> >>  reading RDF/XML and constructing a graph, no new names need to be
> >>  generated.
> >
> >Again, some sort of internal ids (objects, or other data structures)
> >still need to be generated...
> 
> That's internal to the graph representation code, though, not part of the RDF.
> 

Exactly!

--Frank

-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-8752



