docno="lists-048-8920948"
received="Thu Oct 18 09:51:06 2001"
isoreceived="20011018135106"
sent="Thu, 18 Oct 2001 08:50:00 -0500"
isosent="20011018135000"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: literals must be self-evident"
id="3BCEDE08.ADE8DC4D@w3.org"
charset="us-ascii"
inreplyto="3BCE5D4E.3F09148E&#64;hplb.hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
CC:w3c-rdfcore-wg@w3.org

Jeremy Carroll wrote:
> 
> DanC:
> > That is: it's essential that the interpretation of
> > an RDF document is a function of the document alone,
> > and doesn't vary according to the contents of other
> > documents.
> >
> 
> I wish to point out a variety of scenarios which do not break the spirit
> of this.

These scenarios are only tangentially related to the point I'm making...

> Inclusion of/reference to a specific version of a document.
> 
> e.g.
>    We use a namespace such as one of the DAML ones which points to a
> particular version of DAML. Element tags such as daml:uniqueProperty
> will then have meaning that is constrained by axioms in some other
> document, but when daml change their axioms then our document does not
> change since it refers to the old axioms.

Provided the requirement I'm talking about is met -- and it is
met, in the current model theory WD -- a given interpretation
completely fixes the meaning of daml:uniqueProperty.

If "meaning [of our document] is constrained" you mean that
the set of interpretations that satisfy our document and the DAML schema
document depends on what's in the DAML schema document, then
yes, of course it does.

I'm just saying that our definition of the interpretation
of a document must be a function of the document alone,
and not of other documents.


> e.g.
>    We use an XML schema datatype as defined in the version of XML schema
> dated YYYY-MM-DD, e.g. integer. Later the definition of integer may
> change, but because our reference to schema is dated we are OK.
> 
> Hence, Dan's summary of the issue is, in my view, to some extent a red
> herring.

Then I haven't been clear.

I think graham stated it more precisely:
"the truth under any given 
interpretation of some RDF document is invariant;  consulting another 
document may restrict the interpretations that are considered to be
models."
-- GK, Wed, 17 Oct 2001 20:48:49 +0100

> Documents are not self-contained.

In the way that I am suggesting, they are. In particular:
literals are self-contained.

> The web architecture principle is much
> more to do with versioning and ensuring that you know which version of a
> module you are importing.

No, it's not. It's about having a fixed meaning (per interpretation)
regardless of what's going on in other documents.

(and a common interpretation of literals, I think).

> In practice, however, version control on the web is weak.
> 
> As an example XML Version 1.0 has had a changing concept of lang tag
> between it various editions and normative errata.

That's a red herring because XML 1.0 is not specified formally.
Would that it were...

> The result is that it
> does matter which version of the XML Version 1.0 definition you look at.
> While the use of a dated URL in the xml definition looks good, revving
> it is so problematic that it has been easier to just clarify and bug fix
> the spec without changing it - even when the bug fixes and
> clarifications are non-backwardly compatible.
> 
> Of course, this too is the RDF position. We should be talking about RDF
> 1.1, with a new URL. This would ensure that our 'clarifications' are
> clearly distinct from the old M&S. However, we all know that changing
> the URL breaks every thing, and so we can't.
> 
> In summary, my view is that Dan's web architecture principle that he
> pointed to is wishful thinking, and the real world (including the web as
> we know it), has compatibility problems that just have to be lived with.

No, no, no; the principle I'm talking about has everything
to do with keeping meaning (of literals) local to a document
(and, I think, consistent across documents),
and nothing to do with distributed computing issues...
or perhaps: everything to do with *avoiding* distributed
computing issues.

> Or perhaps, yes there are issues, but it's not our job to fix them.

I'm suggesting that this is a long-standing (though not
clearly stated) requirement of RDF, and it's our job
not to break it.

> Jeremy

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



