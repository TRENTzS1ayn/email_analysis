docno="lists-049-0000000"
received="Sat Apr  6 01:40:30 2002"
isoreceived="20020406064030"
sent="Sat, 06 Apr 2002 09:42:57 +0300"
isosent="20020406064257"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: RDF Datatyping Working Draft"
id="B8D473A1.12A02%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p05101515b8d3f0923008&#64;[65.217.30.94]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>, Jeremy Carroll<jjc@hplb.hpl.hp.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-06 3:34, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:

>> Sorry Pat I had skipped right over section 5 on my first speed-read :(, so I
>> think probably misunderstood some of the intent.
>> 
>> The picture in section 6.1.2 looks like RDF Model Theory without any
>> datatyping.
>> 
>> The picture in section 6.1.3 seems to have gone further than is licensed by
>> section 5.
> 
> Yes, it can be read that way. I think we need to re-do this picture.
>
>> In section 5, as I understand it, John and Judy get age 25 (the integer -
>> assuming knowledge of the actual l2v mapping) whereas Jane has age "25" the
>> string.
> 
> Right.

We need to be clear about whether we are talking about the property
value of ex:age and the AGE of the person. If the former, then yes,
the property value always remains the literal "25" and the meaning
of that literal is the literal string.

If, however, we are talking about Jane's AGE, then in the presence
of the datatyping MT and the rdfd:range assertion, then Jane's AGE
is twenty-five. 

This is because the datatyping MT asserts that "25" in this case is
a member of the lexical space of xsd:integer, and given the nature
of datatypes and the absolute N:1 mapping from lexical to value
space, to identify a member of the lexical space is to identify
a single member of the value space.

Without an rdfd:range assertion, both the inline and lexical form
idioms remain unspecified with regards to the datatype value
actually denoted -- and ultimately, it is the idiom that denotes
the datatype value, not the literal itself, because the literal
in isolation does not unambiguously denote a value. Only the
pairing of a literal and a datatype does so.

>> My asserted non-monotonicity occurs when John, Judy and Jane all have the
>> same age as in 6.1.3.
>> 
>> Here's why.
>> 
>> Consider:
>> 
>> <John> <ex:age> _:x .
>> _:x <xsd:integer> "25" .
>> <Judy> <ex:age> _:y .
>> _:y <rdfd:lex> "25" .
>> <ex:age> <rdfd:range> <xsd:integer> .
>> <Jane> <ex:age> "25" .
>> <foo> <bar> "25" .
>> <bar>  <rdfd:range> <xsd:string> .
> 
> So, when datatyped, John and Judy have age 25, but Jane has age "25", right?

No. With datatyping, all three have age 25 (twenty-five). Without
datatyping, the ages of Judy and Jane are underspecified, as no
actual value can be determined since the datatype context is unknown.

Even with datatyping, the property value of ex:age for Jane is still
the literal "25". It's datatyped interpretation, however, is 25
based on the datatype context of xsd:integer provided by the global
rdfd:range assertion.

There are multiple ways to represent the same value, and that representation
does not necessarily constitute a single node in the graph, but combination
of nodes and triples which together provide an unambiguous datatyping
interpretation. Just because "25" may participate in a datatyping idiom
that represents the value 25 does not mean that the literal node "25"
itself denotes the value 25.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



