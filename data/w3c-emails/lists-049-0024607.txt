docno="lists-049-0024607"
received="Sat Apr  6 05:13:04 2002"
isoreceived="20020406101304"
sent="Sat, 06 Apr 2002 11:09:49 +0100"
isosent="20020406100949"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: daml:collection"
id="5.1.0.14.0.20020406104459.00aac5c0@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="p05101513b8d3e7f92c3d&#64;[65.217.30.94]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org

At 18:16 05/04/2002 -0600, Pat Hayes wrote:
>>Folks,
>>
>>At the last SW coordination group telecon the WEBONT folks indicated that 
>>removing daml:collection would be a problem for them.
>
>Im not sure what that means. That is, daml:collection is part of the DAML 
>namespace, right? Not part of RDFS. So what has it got to do with us? Do 
>we even have the authority to remove something from someone else's namepsace?

Loose language on my part Pat.  When we decided at the f2f that a literal 
was a triple consisting of one bit and two strings, an option we rejected 
was that instead of the bit we have another string (or a uri).  We could 
have kept the value of the parseType attribute as part of the 
literal.  This was rejected, as I recall, on two grounds:

   o it would cause interoperability problems - no all processors would 
understand all parseType's

   o DanC had experience that it led to bad entailments

One effect of this, is that it is not possible to round trip RDF through a 
processor that does not understand daml:collection.  Such an RDF processor 
will read in some daml, and replace the parseType="daml:collection" 
attributes with parseType="Literal".

This represents a decision to discourage the the use of parseType as a 
general mechanism for extending the syntax.


>>  Consequently we agreed that the WEBONT chairs would solicit two 
>> volunteers from WEBONT to work with RDFCore to identify to figure out 
>> what they need and see if we can work out a solution.  I believe that 
>> DanC and Jos volunteered.
>>
>>As I understand things, the key requirements are:
>>
>>   o a compact and relatively conventient xml syntax
>>   o a way to represent a closed collection, i.e. our present 
>> understanding of issue * rdfms-seq-representation
>>
>>I understand it is not a requirement that the resulting RDF graph 
>>structure is a list.
>
>I bet they will get into a terrible mess if they only have unordered 
>collections.

Yeah, well the mechanisms we have in mind will work for rdf:Seq too.


>>Of course I defer to the WEBONT folks to state their requirements; I'm 
>>saying this just to get things started.
>>
>>Amongst the possible solutions, the ones I can see are:
>>
>>   o bless daml:collection as defined as part of RDF
>
>Yuk.

That seems to be the majority view.


>>   o WEBONT define a syntactic transform which turns whatever syntax they 
>> choose into regular rdf syntax before RDF sees it
>
>Again, they will do that anyway, right? That is, it is up to WEBONT to map 
>their syntax into RDF triples, surely: not up to us to do it for them. We 
>just have to give them the tools adequate to do the job.
>
>>   o RDFCORE defines a way of closing RDF's existing containers; Pat's 
>> suggestion of an end marker as that is closer to a list structure and 
>> doesn't involve integers (datatypes aghhhhhhhhhhhhhh!)
>
>To emphasize, we don't really need to close RDF containers. We only need 
>to be able to provide WEBONT with a way for them to *treat* their uses of 
>RDF containers as closed.
>
>>   o WEBONT defines a way of closing RDF's existing containers
>
>Right, exactly. That is what my proposal was, in fact. Then we don't have 
>to do anything :-)

I hadn't realised that aspect of what you had in mind.

It seems like we have two things to discuss with the webont folks:

   - technically how to meet the need
   - where to spec the solution

At the telecon this week we agreed that your proposal looks favourite and 
Jeremy I think has the action to bring it up at f2f and check for webont 
support.

As to where to spec the solution, there seem to be a number of factors:

   - technically, do we see a need for this functionality at the RDFS 
language level
     either because we want to different systems built on top of RDFS to 
interoperate
     or because folks operating with RDFS and  without DAML+OIL or OWL need the
     functionality

   - politically, do we need to do it to show willing to our brothers in webont


>Pat
>
>PS. So here is the formal proposal we make to WEBONT. We say that
>
>1. Whereas WEBONT needs to encode complex syntactic structures in RDF 
>triples, and requires some structuring primitives to enable it to do that; and
>2. Whereas the current RDF container model is apparently inadequate for 
>this task, by virtue of the there being no way to mark the end of a 
>container or specify an exact size for the container; and
>3. By virtue of the fact that to provide such a facility in RDF would be a 
>major change to the RDF language and data model, effectively introducing a 
>form of negation into the language,

Owwwwwwwwww!  I thought I asked you about that before.  Obviously I didn't 
understand the reply.  OK another strong technical reason about where it 
should be spec'd.

>  and would therefore be an unacceptable burden to the RDF core WG;
>THEREFORE
>4. The RDF core WG respectfully suggests to the WEBONT WG that it adopt 
>the following CONVENTION: that for purposes of WEBONT, a particular 
>individual be chosen to be the end-of-syntactic-container entity, by 
>analogy with NIL in LISP; and that for WEBONT purposes, any RDF container 
>used for syntactic encoding of WEBONT expressions (or for whatever other 
>purposes that WEBONT shall, in its total discretion, decree to be of 
>utility to itself) shall be understood to contain only those elements 
>which are lower, in the RDF ordering defined by the numerical indices of 
>the RDF container properties, than the index of the lowest-numbered 
>occurrence of said particular individual.

Just out of curiosity, have you been talking to lawyers a lot recently :)

The situation is that we've got a little subgroup of RDF and WEBONT folks 
tasked with proposing a solution to this (I believe, DanC, Jos, possibly 
Lynn, possibly another).  It would nice if that group were to make the 
proposal.  I think at this stage, we have had a discussion within RDFCore 
about it, Jos being present, and we are making an informal suggestion to 
the group at this time about how this could be accomplished.  More a sort 
of "Well, could you do it this way guys."

It would be good to get it sorted out quickly though, so some progress at 
the webont f2f would be good.

Brian



