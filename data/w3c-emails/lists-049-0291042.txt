docno="lists-049-0291042"
received="Wed Apr 10 15:06:22 2002"
isoreceived="20020410190622"
sent="Wed, 10 Apr 2002 21:13:02 +0200"
isosent="20020410191302"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: Denotation of datatype values"
id="MABBLGKMPIJFCKFGDBEPEEKFCAAA.jjc@hplb.hpl.hp.com"
charset="Windows-1252"
inreplyto="Denotation of datatype values"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>



Patrick:
> But it seems that no'one (myself included) feels that the
> answer is 'yes' (apart from perhaps Jeremy, though he has
> not responded to this question directly) so I'll drop it.

Whilst it is good of you to keep thinking of me, I have decided that I am
too far from the group consensus to contribute positively to the process.

I have lost quite what the "question" refered to above was, but it seems
that the e-mail has settled on a rational point (which I disagree with).

In some contexts the literal string "25" in the model theory denotes the
literal string "25" but "according to our shared understanding" there is a
corresponding value of 25. The 25 does not occur in the model theory, but
the application is expected to use it.

Personally I detect doublethink. If the specification indicates that the
application should use 25 when it receives "25" then wherever the official
line at which the model theory stops there is an implicit and
ill-articulated extended conceptual model which has the value 25 in it. That
is the conceptual model that the specifications expect the application
writer to use (and document authors ...). My earlier argument that the
datatyping proposal was non-monotonic is refuted up to the model theory.
This is from the clarity that there is only "25" and not 25. But the
argument still stands as far as the conceptual model goes.

It seems that the clarity of this thread that one idiom delivers 25 whereas
the other delivers "25" should be made clear in the document, and an
explicit admission that the disideratum of interoperability between the
global and local type mechanism has not been met.


Jeremy



