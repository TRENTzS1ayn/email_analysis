docno="lists-049-0773580"
received="Fri Apr 12 06:32:32 2002"
isoreceived="20020412103232"
sent="Fri, 12 Apr 2002 12:31:47 +0200"
isosent="20020412103147"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: Latest iteration of RDF Datatyping WD (ship it!)"
id="OF6C7DB314.C771CC69-ONC1256B99.00372110@agfa.be"
charset="us-ascii"
inreplyto="Latest iteration of RDF Datatyping WD (ship it!)"
expires="-1"

To:"Patrick Stickler<patrick.stickler"<patrick.stickler@nokia.com>
Cc:"ext Jos De_Roo<jos.deroo.jd"<jos.deroo.jd@belgium.agfa.com>,"Dan Connolly<connolly"<connolly@w3.org>,"RDF Core<w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>



[time-slice mode]

[...]

> >  and rule3b is my above concern
>
> Both rule 3a and 3b trouble me -- in that while it is important to
> illustrate the semantic equivalence between the three idioms, I
> would not want to see redundancy introduced into the graph simply
> for that purpose. The other rules simply make explicit what is
> implicit. But rules 3a and 3b say nothing new, insofar as the
> datatyping interpretation is concerned (the inline and lexical
> form idioms are sufficient on their own without the datatype
> property idiom equivalent) and 3b introduces an explicit denotation
> (bnode) for the value that is not present in the inline idiom.
>
> Perhaps rules 3a and 3b should be removed and the equivalences
> simply addressed in the verbage?

unfortunately our engines are not reading those...
no I wouldn't drop rule 3a
I'm running/investigating rule 3b without
  rdfd:range rdfs:subPropertyOf rdfs:range .
and I find it a loss not to have the benefit of RDFS entailment rule3
  { :rule3 . ?s ?p ?o . ?p rdfs:range ?C } log:implies { ?o a ?C } .

> Two additional rules I have been thinking may be needed, are those
> that assert the rdf:type of the blank nodes in the lexical form
> and datatype property idioms: I.e.
>
> {
>    aaa rdfd:range ddd .
>    bbb aaa ccc .
>    ccc rdfd:lex "LLL" .
> }
> log:implies
> {
>    ccc rdf:type ddd .
> }

ok, I see, you try to regain the lost benefit
where is Pat?

> {
>    ddd rdf:type rdfd:Datatype .
>    bbb aaa ccc .
>    ccc ddd "LLL" .
> }
> log:implies
> {
>    ccc rdf:type ddd .
> }

well, I think this one is not needed because we have
  { :ruleD1 . ?d a rdfd:Datatype } log:implies { ?d rdfs:domain ?d } .
and RDFS entailment rule2
  { :rule2 . ?s ?p ?o . ?p rdfs:domain ?C } log:implies { ?s a ?C } .

--
Jos



