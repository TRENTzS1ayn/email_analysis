docno="lists-049-10101681"
received="Wed Dec 11 06:57:26 2002"
isoreceived="20021211115726"
sent="Wed, 11 Dec 2002 13:56:02 +0200"
isosent="20021211115602"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Datatypes, datatype classes,  URIs and uniqueness"
id="013901c2a10c$474f1600$b29316ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="5.1.0.14.0.20021211112930.01f547b0&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:"pat hayes"<phayes@ai.uwf.edu>,"ext Brian McBride"<bwm@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Brian McBride" <bwm@hplb.hpl.hp.com>
To: "pat hayes" <phayes@ai.uwf.edu>; "Patrick Stickler" <patrick.stickler@nokia.com>
Cc: <w3c-rdfcore-wg@w3.org>
Sent: 11 December, 2002 13:32
Subject: Re: Datatypes, datatype classes, URIs and uniqueness


> At 18:19 09/12/2002 -0600, pat hayes wrote:
> 
> [...]
> 
> >>I think that it would be better to say that datatype URIs denote
> >>the datatype class, the instance of rdfs:Datatype, and that the class
> >>extension is the value space of the datatype.
> >
> >that would be clearer. I will rephrase this to make it clear there is no 
> >ambiguity.
> 
> Hmmm, I'm not so sure about that.  I think that datatypes as interpretation 
> properties will be used, and it was Patrick that argued that he didn't want 
> multiple uri's, and Pat's rather neat model theory trick that allows a 
> resource to have both a class and a property extension.

I don't think I'm suggesting that anything change in the substance
of what the MT is now saying, only in the terms in which it is stated,
which could be misunderstood as the datatype URIs actually denote two
different things.

> If we say that the URI denotes the class, I wonder if we run into problems 
> with the fact that its up to xsd to say what the URI denotes and into 
> issues with the using the same uri for both the class and the property.
> 
> My mental model was that the URI denoted the datatype, as specified by the 
> xsd folks - its their uri after all, and we define what the class extension 
> of that URI is.

I think that's essentially what I was suggesting. That the URI only
denotes one thing, the datatype, and its use with a typed literal
asserts that the datatype is rdf:type rdfs:Datatype, and as such,
we define the class extension of an rdfs:Datatype to be its
value space.

Our classification of a datatype defined by XML Schema as a member
of rdfs:Datatype seems consistent with the XML Schema definition.
That is the value of having an explicit definition of rdfs:Datatype
as being the set of all datatype things which are consistent with
the characteristics defined for rdfs:Datatype, no matter who has
defined the actual datatype.

I'm not sure if using the datatype URI as a property constitutes
ambiguity. Using the datatype URI as a property asserts that the
datatype is also rdf:type rdfs:Property. That seems a little
more problemmatic as e.g. XML Schema does not have a concept 
analogous to "property" per se, so saying that an XML Schema 
datatype is a member of rdfs:Property seems far less kosher to 
me and thus using datatype URIs as intepretation properties seems
to exceed the boundaries of what XML Schema datatypes are in
a way that rdfs:Datatype does not. But...

Patrick



