docno="lists-049-1017680"
received="Sat Apr 13 00:47:03 2002"
isoreceived="20020413044703"
sent="Sat, 13 Apr 2002 07:49:47 +0300"
isosent="20020413044947"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Datatype Draft Comments"
id="B8DD939B.130DB%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="B8DCAD39.312BF%me&#64;aaronsw.com"
expires="-1"

To: ext Aaron Swartz<me@aaronsw.com>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-12 23:26, "ext Aaron Swartz" <me@aaronsw.com> wrote:

> Some comments on http://www-nrc.nokia.com/sw/rdf-datatyping.html ($Date:
> 2002/04/12 12:38:34 $):
> 
> [read as part of my action to provide Dublin Core examples]
> 
> The use of rdfd:Datatype as a class and rdfd:datatype as a property is
> confusing. 

And here I was trying to make things clearer ;-)

Read

   xsd:integer rdf:type rdfd:Datatype .
   ex:age rdfd:datatype xsd:integer .

as "xsd:integer is an RDF Datatype and ex:age has
the datatype context of xsd:integer, and that datatype
context governs the interpretation of all values of
ex:age conforming to one of the three defined datatyping
idioms. Values of ex:age which do not conform to one
of the three defined idioms or do not satisfy the
constraints of the datatype context are invalid and
have no datatyping interpretation".

(I could put that in the WD somewhere...)

I.e., rdfd:datatype associates an rdfd:Datatype with a property.

Eh?

> What are rdfd:Datatypes? They seem to be properties.

They are both classes embodying the characteristics of datatypes
as defined in section 2 as well as properties for binding a lexical
form to a value node.

> What are the datatype mappings called?

Datatype mapping. See section 2 ;-)

> The example in 3.2.1 doesn't make sense. Even after I read the sentence:
> "The rdfd:lex property associates a literal node object which is presumed to
> be a member of the lexical space of some (possibly unspecified) datatype (a
> lexical form) with a non-literal node subject denoting the single member of
> the value space of the same datatype as the lexical form and which is
> represented by that lexical form." several times. (Can you try simplifying
> that sentence, please?)

I can try...

> Can you provide an example that explains what it's for? Oh, I see it's
> explained below with the implicit datatype stuff. Can you rearrange things
> so that they make more sense?
> 
> rdfd:lex seems redundant -- why not just use the inline idiom?

The key difference between the inline and lexical form idioms is
that the lexical form idiom provides an explicit denotation of
the value and the inline idiom does not (the value remains
implicit in the interpretation).

> (Images from section 4 down are broken.)

Well, actually, they're just not created yet ;-)

> Overall, you've done a nice job. I was able to get the gist of things by
> just looking at the pictures and headings.

Cool.

> I'll put some Dublin Core-specific comments in another email.

Thanks.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



