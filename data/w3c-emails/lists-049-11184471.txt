docno="lists-049-11184471"
received="Mon Dec 16 04:14:30 2002"
isoreceived="20021216091430"
sent="Mon, 16 Dec 2002 11:12:11 +0200"
isosent="20021216091211"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: checked RDF semantics for XSD stuff, couldn't grok    namespace  entailment"
id="009401c2a4e3$3751e2c0$eb9316ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="p05111b1eba21218986b4&#64;[10.0.100.86]"
expires="-1"


To:"Brian McBride"<bwm@hplb.hpl.hp.com>,"ext pat hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]

> The big content issue is whether plain literals are XSD strings. That 
> needs to be decided, soon, and may require changes in several 
> documents. I plan to simply be conspicuously agnostic on this issue 
> in this draft of the semantics, by deleting the paragraph that Dan 
> objects to. However I don't think that we should go to last call with 
> this an open issue, I'd like to get it clear one way or the other. 

For me, this issue is similar to whether xsd:nonNegativeInteger
and UAProf prf:Number have equivalent value spaces. I think it's
pretty clear they do. But it's not for RDF to say so.

Just as Jeremy was able to justify equivalences and relations
between various XML Schema datatypes which were not explicit
(or as explicit as we'd like) in terms of RDF datatyping semantics,
based on the definitions of those datatypes; so one could justify
the equivalence of RDF plain literal values and the values of
various arbitrary datatypes, such as xsd:string. But again,
RDF is datatype framework agnostic and it is not for RDF to say.

So, I agree that the membership of xsd:string values (probably) 
coincides with the set of RDF plain literals. *However* the place to 
state this is in a Note, such as that already proposed, which clarifies 
issues regarding the use of XML Schema datatypes with RDF. *Not* in
the RDF specs themselves.

So my recommendation is to say nothing at all about any relationship
with xsd:string and plain literals in the RDF specs (and this is not
the same as leaving it an open issue -- as it will/should be addressed
in a separate Note addressing such XML Schema related issues).

It's enough to be clear what plain literals are, so that one can
be clear and precise about their possible relationship to particular
datatypes such as xsd:string and others. The actual relationships are
out of scope.

I expect/hope that Dan, and others, would be satisfied with that.

Yes?

Patrick



