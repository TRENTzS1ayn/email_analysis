docno="lists-049-1151878"
received="Mon Apr 15 16:50:58 2002"
isoreceived="20020415205058"
sent="Mon, 15 Apr 2002 16:50:54 -0400"
isosent="20020415205054"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Denotation of datatype values"
id="p05101518b8e0e9c16f32@[65.217.30.94]"
charset="us-ascii"
inreplyto="MABBLGKMPIJFCKFGDBEPOEKFCAAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org

>Jeremy:
>>  [where] the model theory stops there is an implicit and
>>  ill-articulated extended conceptual model
>
>Patrick:
>>   [the conceptual model?] it's meant to
>>  be explicit
>
>OK. I withdraw the venom of my attack on the conceptual model, it's work in
>progress. I (at least) have found your point of view clear and consistent -
>although I haven't seen that as the WG's point of view; the earlier messages
>in this thread seemed to want to emphasise the stringiness of "25" rather
>than it's integer-ness.
>
>Jeremy:
>>  But the [non-monotonicty]
>>  argument still stands as far as the conceptual model goes.
>
>Patrick:
>>  Neither level is non-monotonic, and the datatyping level only clarifies
>>  but does not change the knowledge at the lower idiom level, so the
>>  transition between levels also is not non-monotonic.
>
>This seems close to my discussion about non-monotonicity about containers,
>so I don't think I will pursue the difference between the levels too much -
>except that there is an unnecessarily broad gap. E.g. the TDL model theory
>was much closer to the pair of a datatype and a string found in the
>conceptual model. The breadth of this gap fails (IMO) our principle charter
>goal of clarity.

I want to know what this 'conceptual model' is supposed to be, what 
the overall rules are for defining 'conceptual models', and how will 
we know when we have it right, and how in Gods name are we going to 
find the time to produce an entirely new kind of "model" of RDF at 
this stage of the game.

>
>As for non-monotonicity the datatyping conceptual layer that we are
>discussing is non-monotonic in its own right.

The MT is not monotonic, and the entailment defined by it is 
monotonic. So I don't really give a damn whether the 'conceptual 
layer' is monotonic or not, since I doubt if that precise kind of 
langauge even applies to such an illdefined notion.

>e.g.
>
><Jane> <age> "25" .
>
>delivers the unicode string "25", i.e. <xsd:string,"25">.
>
><film> <title> "25" .
>
>similarly delivers  <xsd:string,"25">.
>
>At this datatyping conceptual level
>
><Jane> <age> "25" .
><film> <title> "25" .
>
>allows us to conclude that Jane's age and the film's title are the same.

If these triples are true, they are the same. Period. No amount of 
subsequent additions of datatyping information can alter that. (That 
is, assuming that <age> means age. Of course, we are free to 
interpret <age> to mean 'the relation which holds between a person 
and the numeral representing their numerical age'. )

>
>Then we add the range constraint on <title>
>
><Jane> <age> "25" .
><film> <title> "25" .
><title> <range> <xsd:string> .
>
>I take it that the range constraint changes nothing, we are still having the
>value
><xsd:string,"25"> delivered in both cases, and so we are still concluding
>that Jane's age and the film's title are the same.

Right.

>
>Now we add the range constraint on <age>
>
><Jane> <age> "25" .
><film> <title> "25" .
><title> <range> <xsd:string> .
><age> <range> <xsd:integer> .
>
>We now have the film's title delivered as <xsd:string,"25"> the woman's age
>delivered as <xsd:integer,"25"> and they are different.

And that is now INCONSISTENT in a datatyped intepretation, ie there 
is NO such datatyped interpretation. You have now violated the 
semantic conditions on datatyping. So there is no revision, or 
defeasable reasoning, or nonmonotonicity. I know you don't like this, 
but this is what the current MT says, so (1) get used to it and (2) 
don't say that it is nonmonotonic. It isn't nonmonotonic.

>Hence we see defeasible reasoning: in the light of new information we revise
>our knowledge that Jane's age is <xsd:string,"25">, which in turn causes us
>to revise our conclusion that Jane's age and the film's title are the same.

No, that is still entailed. ANYTHING is entailed by a contradiction. 
If you can express the idea that they are not the same, that is 
entailed also. Contradictions are like that.

>
>This is non-mononotonic, and the WG cannot escape that by simply saying that
>it is not in the MT.

Yes, it can! That is exactly what it does say. The MT tells you what 
conclusions to draw. If you insist on drawing different ones, then 
YOU are the one with the problem.

>The only escape route is to acknowledge that in the
>absence of type information, the datatype is unknown (e.g. xsd:anyType or
>maybe xsd:anySimpleType). If we stay aware that
>   <xsd:anyType,"25"> != <xsd:anyType,"25">
>because anyType does define a mapping, then the problem begins to disappear.

There is no problem, but even if there were, having things that do 
not equal themselves sounds like a far worse problem.

>
>Unfortunately this is bringing untidiness back into the datatyping layer. We
>now are reading
>
><Jane> <age> "25" .
>
>not as 'Jane's age is "25"' but as 'Jane's age can be written as "25"'.

Well, you can read it that way by re-interpreting <age> to mean "age 
can be written as". This kind of reading is always open to you. The 
rdfd:range datatyping will still work OK, though now you ought to 
interpret <age> as (eg) "age when written as an xsd:integer would be".

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



