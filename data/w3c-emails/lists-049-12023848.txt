docno="lists-049-12023848"
received="Wed Feb  6 15:27:02 2002"
isoreceived="20020206202702"
sent="Wed, 06 Feb 2002 20:08:02 +0000"
isosent="20020206200802"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: summary of reification?"
id="5.1.0.14.2.20020206200114.00abfe70@joy.songbird.com"
charset="us-ascii"
inreplyto="p0510143bb88723ac59e5&#64;[65.212.118.208]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>
Cc: Sergey Melnik<melnik@db.stanford.edu>,w3c-rdfcore-wg@w3.org

At 12:25 PM 2/6/02 -0600, Pat Hayes wrote:
>>I see two ways of how the semantics of reification could be attacked:
>>
>>1. Explain the semantics using bNode + 4-triple constructs. Applications
>>are free to use a compact representation. If statements are used as
>>first-class objects, they can be treated just as some kind of bNodes.
>>The API-level identity of such bNodes is functionally determined by
>>their (s,p,o)-description. Alternatively, the applications can generate
>>exactly one such bNode for each (s,p,o) etc. Same trick could be applied
>>for  dealing with functionally determined bNodes in the model theory.
>
>No trick is needed. The ordinary MT already would treat the 4-triples in 
>this way already; reification is semantically transparent, on this view. 
>Which is another way of saying that we are trashing it. After all, there's 
>no way to stop anyone writing those 4-triples if they want to, right? 
>Trashing it doesn't make it illegal, it just says that we aren't saying 
>anything particular about what it means: its not a language feature, its 
>just a way you might want to write some RDF. Go ahead if y'all feel like it.

I want to pick up on two points here:

(1) there is provision (in RDFM&S) for a reified statement to be identified 
(e.g. by rdf:ID='xxx' on the corresponding property element), so simply 
saying reified statements are treated as bNodes seems to miss something.

(2) accepting almost all of the above that the reification properties are 
mostly like any other RDF properties, we need to express a view on this 
entailment:

     <ex:subj> <ex:prop> <ex:obj> .
entails
     _:r <rdf:type> <rdf:Statement> .
     _:r <rdf:subject> <ex:subj> .
     _:r <rdf:predicate> <ex:prop> .
     _:r <rdf:object> <ex:obj> .
?

What you say above suggests no such entailment.
I think that's fine, but want to be clear.

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>



