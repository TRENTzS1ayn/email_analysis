docno="lists-049-12242255"
received="Thu Feb  7 07:58:41 2002"
isoreceived="20020207125841"
sent="Thu, 07 Feb 2002 12:57:29 +0000"
isosent="20020207125729"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: summary of reification?"
id="5.1.0.14.0.20020207124423.02865db0@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="5.1.0.14.2.20020206200114.00abfe70&#64;joy.songbird.com"
expires="-1"


To: Graham Klyne<Graham.Klyne@MIMEsweeper.com>, Pat Hayes<phayes@ai.uwf.edu>
Cc: Sergey Melnik<melnik@db.stanford.edu>,w3c-rdfcore-wg@w3.org

At 20:08 06/02/2002 +0000, Graham Klyne wrote:

[...]


>     <ex:subj> <ex:prop> <ex:obj> .
>entails
>     _:r <rdf:type> <rdf:Statement> .
>     _:r <rdf:subject> <ex:subj> .
>     _:r <rdf:predicate> <ex:prop> .
>     _:r <rdf:object> <ex:obj> .
>?
>
>What you say above suggests no such entailment.
>I think that's fine, but want to be clear.

In a previous life, bc (before core), when thinking of the M&S formal model 
where it states in:

   http://lists.w3.org/Archives/Public/www-archive/2001Jun/att-0021/00-part#162

[[
   (P162) There is a set called Statements, each element of which is a 
triple of the form

(P163) {pred, sub, obj}
]]

that this said that all statements (not statings, this is the statements 
view) just exist, which is I think, equivalent to anything (and nothing) 
entails:

   _:s <rdf:type> <rdf:Statment> .
   _:s <rdf:subject> <subject> .
   _:s <rdf:predicate> <predicate> .
   _:s <rdf:object>    <object> .

for any subject, predicate and object.

So I suggest that if we decide that:

   <s1> <rdf:type> <rdf:Statment> .
   <s1> <rdf:subject> <subject> .
   <s1> <rdf:predicate> <predicate> .
   <s1> <rdf:object>    <object> .

   <s2> <rdf:type> <rdf:Statment> .
   <s2> <rdf:subject> <subject> .
   <s2> <rdf:predicate> <predicate> .
   <s2> <rdf:object>    <object> .

   <s1> <prop> <value> .

entails

   <s2> <prop> <value> .

then to be consistent we must also decide that anything (and nothing) entails:

   _:s <rdf:type> <rdf:Statment> .
   _:s <rdf:subject> <subject> .
   _:s <rdf:predicate> <predicate> .
   _:s <rdf:object>    <object> .

for any subject, predicate and object.

Brian



