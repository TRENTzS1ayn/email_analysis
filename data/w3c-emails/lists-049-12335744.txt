docno="lists-049-12335744"
received="Thu Feb  7 09:25:56 2002"
isoreceived="20020207142556"
sent="Thu, 07 Feb 2002 14:25:54 +0000"
isosent="20020207142554"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Dublin Core and multiple element concern"
id="16730.1013091954@tatooine.ilrt.bris.ac.uk"
inreplyto="bwm&#64;hplb.hpl.hp.com"
expires="-1"

To: RDF Core<w3c-rdfcore-wg@w3.org>
cc: Brian McBride<bwm@hplb.hpl.hp.com>


>>>Brian McBride said:
> ...  I also asked DaveB to look into the DC viewpoint
> ...  could you share the resulst with the list please.

I asked the lead author of 
  Expressing Qualified Dublin Core in RDF / XML
  http://dublincore.org/documents/2001/11/30/dcq-rdf-xml/

which is a Dublin Core Metadata Initiative (DCMI) standards-track
document to comment on the datatypes issues that were being brought
up.  We've exchanged emails but not got really to a terse summary.

I'm the lead editor of
  Expressing Simple Dublin Core in RDF/XML
  http://dublincore.org/documents/2001/11/28/dcmes-xml/


So the following is my opinion with my DC hat on, NOT an official
view of the DCMI.  In the notes below, the set of 15 elements is the
DCMI is the Dublin Core Metadata Element Set (DCMES).


1. DCMI uses XML Namespaces for grouping concepts

  DCMI Namespace Policy
  http://dublincore.org/documents/2001/10/26/dcmi-namespace/

2. DCMI will define only 1 term for a concept, in some namespace.

   So like for PRISM (also a DCMES in RDF/XML app) - DCMES will not
   define multiple versions of terms.

3. URIs for DCMI terms are constructed by appending the term name to
   the namespace URI for the term.

   See namespace policy document above.

3. DCMES already uses and recommends the following RDF/XML for
   writing simple DCMES property and value.

  <dc:title>title of thing</dc:title>

and for RDF/XML expects the triple
  <thing> dc:title "title of thing" .
to be emitted

Plus
  <dc:title rdf:resource="URI"/>

is allowed.  Both may be used at the same time.


4. DCMI provides RDF Schemas at the namespace URIs of its terms

   So providing extra datatyping info for each term is possible.


5. DCMI expects xml:lang attribute to be allowed on XML
  <dc:title xml:lang="en">title of thing</dc:title>

and the DCMI community wants to be able to get at that language value
somehow.  I strongly support this.

I have been asked by some people in DCMI community how RDF models
this and could not give an answer.


6. The DCMI has the idea of "encoding schemes" for expanding on the
value of the simple string valued property like above.  This is the
closest thing to data types here.

In the Qualified DC in RDF/XML document above, it is recommended to
model like this (If I understand it correctly).

<dc:subject>
  <rdf:Description>
    <rdf:value>19D10</rdf:value>
    <rdfs:label>Algebraic K-Theory of spaces</rdfs:label>
    <rdfs:isDefinedBy rdf:resource="URI2"/>
  </rdf:Description>
</dc:subject>

The rdfs:isDefinedBy might point to any relevant URI2 that defines
the encoding - such as a term in a controlled vocabulary; this would
not be to an RDF(s) document.

Optionally an rdf:type might also be used to point to a node of type
rdfs:Class in an rdf schema if such existed.

The rdf:value isn't required to point to a literal; it might point to
another blank node with another rdf:value, rdfs:label


---

There is probably more,  but I'll stop here.

Dave



