docno="lists-049-12464289"
received="Thu Feb  7 12:17:34 2002"
isoreceived="20020207171734"
sent="Thu, 7 Feb 2002 09:16:57 -0800 "
isosent="20020207171657"
name="Ronald Daniel"
email="rdaniel@interwoven.com"
subject="RE: Dublin Core and multiple element concern"
id="145C1D60907A4944ABAE75DE3FF6418C2C7F29@xchanger3.interwoven.com"
charset="iso-8859-1"
inreplyto="Dublin Core and multiple element concern"
expires="-1"


To:"'Pat Hayes'"<phayes@ai.uwf.edu>, Dave Beckett<dave.beckett@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org

Pat Hayes asked:

> What would rdf:value mean if it wasnt 
> pointing to a literal? For example what relationship between _:x and 
> _:y would this state:
> _:x rdf:value _:y .
> _:y rdf:value "10" .

To bring back an example from olden times,
you need one more statement:

   <document> <dc:subject> _:x

and the interpretation is that

   <document> <dc:subject> "10"

is the most acceptable loss of information if one must
simplify (perhaps radically) the model for some reason
and one has no application-specific knowledge of what
to keep and what to delete.

So, to answer your question,
  _:x rdf:value "10"
is the abbreviation of your model above that best preserves
its intent. It would still be the best if _:x had started with
10k other properties.

Search for 'dumb-down rule' on Google for metadata specs
where this convention has been used.

Assumed constraints are that there should only be one
rdf:value from a node. Assumption is that the chain of
rdf:values ends in a string. If the <document> has
multiple <dc:subject> properties, they SHOULD all have
different strings at the end of the rdf:value chains.


Ron



