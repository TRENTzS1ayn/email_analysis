docno="lists-049-12500303"
received="Thu Feb  7 12:40:08 2002"
isoreceived="20020207174008"
sent="Thu, 7 Feb 2002 09:39:35 -0800 "
isosent="20020207173935"
name="Ronald Daniel"
email="rdaniel@interwoven.com"
subject="RE: why S doesn't require double properties [was: Datatyping  Sum  mary  V4]"
id="145C1D60907A4944ABAE75DE3FF6418C2C7F2A@xchanger3.interwoven.com"
charset="ISO-8859-1"
inreplyto="why S doesn't require double properties [was: Datatyping  Sum  mary  V4]"
expires="-1"


To:"'Brian McBride'"<bwm@hplb.hpl.hp.com>,"Daniel W. Connolly"<connolly@w3.org>
Cc: RDF core WG<w3c-rdfcore-wg@w3.org>

Brian McBride said:
> At 09:36 05/02/2002 -0800, Ronald Daniel wrote:
> 
> [...]
> 
> > > I'm quite confident PRISM (and dublin core and most other apps)
> > > will do just fine only using S-B.

Actually, that was a quote of Dan C's.
 
> Hmmm, does that mean that our user community is saying:
> 
>    o S-B on its own is sufficient
>    o keep it simple, only give us one way to do things

What I am saying is subtly different. I'm saying that
it doesn't appear that choosing S-A (or any other idiom)
over S-B would cause us (PRISM) any serious heartburn.
However, if you rely on us (PRISM and the community of
programmers at large, IMHO) to correctly apply and
maintain such distinctions, you will get serious heartburn
when trying to use our data.

(As an aside, S-B is probably closer to our intent than the
others. But believe me, those idioms played no part in how
the elements were defined. Some elements, like references
to subject codes, are closer to S-A than S-B.)

Ron Daniel Jr.
Standards Architect
Interwoven, Inc.
Tel: 408-530-5922
Cell: 925-368-8371
Email: rdaniel@interwoven.com 
Visit www.interwoven.com



