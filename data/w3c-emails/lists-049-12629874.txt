docno="lists-049-12629874"
received="Fri Feb  8 04:29:55 2002"
isoreceived="20020208092955"
sent="Fri, 8 Feb 2002 09:31:07 +0000"
isosent="20020208093107"
name="patrick.stickler@nokia.com"
email="patrick.stickler@nokia.com"
subject="Re: Datatyping and idioms"
id="9418E19C-1C76-11D6-BA3A-0003931DF47C@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20020207171604.037e5ec0&#64;joy.songbird.com"
expires="-1"

Cc: Brian McBride<bwm@hplb.hpl.hp.com>, RDF core WG<w3c-rdfcore-wg@w3.org>
To:"ext Graham Klyne"<Graham.Klyne@MIMEsweeper.com>



On Thursday, February 7, 2002, at 05:21 , ext Graham Klyne wrote:

> I'm a little concerned that the specific idioms may have taken on the 
> status of proposals.
>

I fully agree that idioms should not drive the model,
and that we should first agree on the model and then
choose the best idioms that work with that model.

> In my mind, the idioms were ways of _testing_ the various datatyping 
> proposals, with some claim that they (or something like them) were 
> actually being used.
>

Perhaps at first, though ultimately, we need to choose
specific idioms, and those idioms have to be an integral
part of the final solution, in order to achieve consistency
of expression and interoperability between applications
(consistency of interpretation).

We cannot end up with a scenario of "use whatever idiom
suits your fancy". There should be two and only two "official"
idioms -- one for local and one for global datatyping.

And while users always remain free to express their knowledge
in whatever idiom they like, those idioms will be proprietary
and not part of the expectations that all users will share for
the effective global interchange of knowledge.

So, while we should not let the tail wag the dog and
allow the idioms to force the model, likewise we should
not underestimate the importance and need of minimally
few consistent idioms to express datatyping knowledge
in terms of that model.

That is why I structured the TDL proposal to first define
the TDL pairing model, and let the idioms constitute a layer above
the model.

Cheers,

Patrick



