docno="lists-049-12666351"
received="Fri Feb  8 05:54:45 2002"
isoreceived="20020208105445"
sent="Fri, 08 Feb 2002 10:53:15 +0000"
isosent="20020208105315"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Datatyping Summary V5 (skippable)"
id="5.1.0.14.0.20020208103328.02852b78@0-mail-1.hpl.hp.com"
charset="us-ascii"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>

Skippable.

Things have moved on a lot in datatyping since the last version of 
this.  We have a new initiative for moving forward which is "where the 
action is" on datatyping currently.  However, I think it best to do another 
of these posts to capture the input received after V4.

-------------

An updated summary of the datatyping issues, as I currently understand them.

Overall Status:

If all the proposed withdrawls and Sergey's union trick for B1 are accepted 
then the only can't live with left is Jeremy's on B8.

Changes:

  o Propose withdraw B10 as its fixed by Pat's model theory.

  o Sergey withdraws B5, but DanC is not convinced.

  o Propose withdraw B4, all accept literals can be treated
    as tidy for datatyping

  o B1:  Sergey suggests union trick

  o notes B10 also affects S-P and S-B.

Issue B1:
=========

status: proposed resolution

In S, if one wants to use both idiom A and idiom B, e.g.

<mary> <age> "10" .
<age> <rdfs:range> <xsd:integer.lex> .

and

<mary> <ageD> _:a .
_:a <xsd:integer.map> "10" .

two properties have to be used, <age> and <ageD>, in this example.

Sergey suggests that the range of <age> can be the UNION of 
xsdr:integer.map and xsdr:integer.lex and xsdr:integer.val.

Patrick: are you satisfied?

Can't Live With: PatrickS


Issue B2: Multiple Lexical Representations of a data value
==========================================================

status: agreed that S-A allows this and TDL does not.

S, idiom A, permits multiple lexical representations of a data value:

_:i <xsd:double> "10.1" .
_:i <xsd:double.de> "10,1" .


Issue B3: the self entailment issue
===================================
status: Withdrawn in favour of B4:

From:

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0410.html

[[I accept the reasoning above; it doesn't address my objection;
it' just shows that my example wasn't very good. Sergey's
example makes the point better:]]

B9 also added in response to Graham's request.


Issue B4 - TDL breaks existing code
===================================

status: propose withdraw, literals are tidy

This is similar to B3. I've changed the example slightly from Sergey's.

Under TDL, consider the graph:

_:f <rdf:type> <film> .
_:f <dc:Title> (_, "10") .
<mary> <age> (_, "10").

Does not entail:

_:x <dc:Title> _:y .
_:z <age> _:y .

Literals are no longer pairs, so this is no longer true.

DanC: do you accept

Can't Live With: DanC


Issue B5: Storage Requirements
===============================

status: DanC disputes

TDL requires significantly more storage to implement.


Issue B6: S requires 4 URI's be registered for each data type
=============================================================
S requires that for each datatype 4 URI's be registered
datatype
datatype.lex
datatype.val
datatype.map

Sergey: Do you agree this is the case? If not, how many URI's are required 
to implement ALL the idioms of S and coexist in the same model.


Issue B7: Complexity
====================

status: agreed

S has several ways of expressing the same thing. An RDF processor has to be 
aware of them all. Supported by Jeremy's error cases message

http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0397.html

and a message from Andy Seaborne to rdf comments:

http://lists.w3.org/Archives/Public/www-rdf-comments/2002JanMar/0058.html


Issue B8: S-B encourages logically (sic) errors in the
application type processing.
=======================================================

status: ?

Given:

_:f <rdf:type> <film> .
_:f <dc:Title> "10" .
<mary> <age> "10" .

an application 'knows' that the range of <age> is an integer so it 'knows' 
that mary has <age> 10. Under S-B, running a query:

?x <dc:Title> ?y .
?z <age> ?y .

will return ?x = _:f and ?z = <mary>, and knowing that the age of <mary> is 
10, may conclude that the title of the film is also 10.

Can't Live With: Jeremy


Issue B9: In TDL a document does not entail itself
==================================================

status: Withdrawn.

Under TDL, does:

<foo> <dc:Title> "W3C" .

entail

<foo> <dc:Title> "W3C" .

yes.


Issue B10: Say what you mean
============================

status: propose for withdrawl (Pat's model theory fixes)

The concern here is that in TDL, a literal denotes a pair consisting of a 
value and a lexical representation of that value. The problem is then that 
the german representation of floating point number, e.g. "10,5" is 
different from the english representation, e.g. "10.5".

Thus under TDL a german 10 and a half is a different thing from an english 
10 and a half.


More formally, under TDL:

<foo> <eg:size> _:s1 .
_:s1 <rdf:value> "10,5" .
_:s1 <rdf:type> <xsd:double-de> .

<bar> <eg:size> _:s2 .
_:s2 <rdf:value> "10.5" .
_:s2 <rdf:type> <xsd:double> .

does not entail:

<foo> <eg:size> _:s .
<bar> <eg:size> _:s .

Note that S-P and S-B have a similar problem.

Pat's new model theory addresses this.  In both TDL and S-P, the bNode 
denotes something from the value space, not a pair.

Does anyone disagree.



