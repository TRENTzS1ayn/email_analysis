docno="lists-049-13344492"
received="Tue Feb 12 13:50:17 2002"
isoreceived="20020212185017"
sent="Tue, 12 Feb 2002 18:49:07 +0000"
isosent="20020212184907"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Reification: proposed resolution"
id="5.1.0.14.0.20020212184224.02393090@0-mail-1.hpl.hp.com"
charset="us-ascii"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>

Following up on Frank's excellent reification process, and the decision we 
made last week support the provenance use case, I'm wondering if we can 
move forward on reification.  I wonder if at this weeks telecon we can 
decide that the answer to the question:

Does

   <stmt1> <rdf:type> <rdf:Statement> .
   <stmt1> <rdf:subject> <subject> .
   <stmt1> <rdf:predicate> <predicate> .
   <stmt1> <rdf:object> <object> .

   <stmt2> <rdf:type> <rdf:Statement> .
   <stmt2> <rdf:subject> <subject> .
   <stmt2> <rdf:predicate> <predicate> .
   <stmt2> <rdf:object> <object> .

   <stmt1> <property> <foo> .

   entail:

   <stmt2> <property> <foo> .

is NO.

Regarding Graham's entailment:

<ex:subj> <ex:prop> <ex:obj> .

entails

      _:r <rdf:type> <rdf:Statement> .
      _:r <rdf:subject> <ex:subj> .
      _:r <rdf:predicate> <ex:prop> .
      _:r <rdf:object> <ex:obj> .

Whilst I see the sense behind it, I'm a bit concerned by the practical 
implications of all the statements in my graph entailing their 
reifications.  So from a standpoint of simplicity and pragmatics, I propose 
that there are NO other entailments in the model theory to do with 
reification.

Brian



