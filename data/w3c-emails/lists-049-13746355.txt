docno="lists-049-13746355"
received="Wed Feb 13 16:53:00 2002"
isoreceived="20020213215300"
sent="Wed, 13 Feb 2002 16:52:56 -0500"
isosent="20020213215256"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Reification: proposed resolution"
id="p05101417b8908f5b34a9@[192.168.0.6]"
charset="us-ascii"
inreplyto="3C69A15C.2080307&#64;mitre.org"
expires="-1"


To: Frank Manola<fmanola@mitre.org>
Cc:w3c-rdfcore-wg@w3.org

>Brian McBride wrote:
>
>>Following up on Frank's excellent reification process, and the 
>>decision we made last week support the provenance use case, I'm 
>>wondering if we can move forward on reification.  I wonder if at 
>>this weeks telecon we can decide that the answer to the question:
>>
>>Does
>>
>>   <stmt1> <rdf:type> <rdf:Statement> .
>>   <stmt1> <rdf:subject> <subject> .
>>   <stmt1> <rdf:predicate> <predicate> .
>>   <stmt1> <rdf:object> <object> .
>>
>>   <stmt2> <rdf:type> <rdf:Statement> .
>>   <stmt2> <rdf:subject> <subject> .
>>   <stmt2> <rdf:predicate> <predicate> .
>>   <stmt2> <rdf:object> <object> .
>>
>>   <stmt1> <property> <foo> .
>>
>>   entail:
>>
>>   <stmt2> <property> <foo> .
>>
>>is NO.
>
>
>I hope so too.
>
>>
>>Regarding Graham's entailment:
>>
>><ex:subj> <ex:prop> <ex:obj> .
>>
>>entails
>>
>>      _:r <rdf:type> <rdf:Statement> .
>>      _:r <rdf:subject> <ex:subj> .
>>      _:r <rdf:predicate> <ex:prop> .
>>      _:r <rdf:object> <ex:obj> .
>>
>>Whilst I see the sense behind it, I'm a bit concerned by the 
>>practical implications of all the statements in my graph entailing 
>>their reifications.  So from a standpoint of simplicity and 
>>pragmatics, I propose that there are NO other entailments in the 
>>model theory to do with reification.
>
>
>Brian--
>
>What do you see the practical implementations of this entailment 
>being?  Given the view of
>
><ex:subj> <ex:prop> <ex:obj>
>
>as a "stating" (inscription, statement occurrence, aka "triple"), I 
>don't see how we can logically (?) deny that the presense of this 
>triple entails that "there exists a statement with [such and such 
>characteristics]".

No, we can. Logically, that is.

>Haven't we just said it?  Does the problem have to do with what we 
>say instances of <rdf:Statement> are (statements or triples)?  I.e., 
>we can't say "there exists a statement..." because it isn't one, 
>it's a triple?

No, the issue is more that the 'world' being described by an RDF 
graph isn't required to include the graph itself. My graph (my 
ontology) might be all about employees, or all about battlefield 
troop deployment or about red apes, or whatever. If we say that it 
has to entail all its own reifications then we are kind of forcing 
all ontologies to be about themselves, whether they want to be about 
that or not.  The point is that an asserted ontology has to be 
considered to be true, OK; but its shouldnt be required or obliged to 
contain *all* truths, even about itself. We should allow ontology 
writers to be selective.

>
>A more practical issue, it seems to me, is that even if all the 
>statements in your graph entail their reifications, what's the 
>point? There's no way (in RDF) to associate any generated 
>reifications with the original triples.

Quite. And that association, which is the core connection in 
reification, is really outside the scope of any normal MT and doesnt 
have any entailment consequences.

>Conversely, if I have some way of identifying triples by associating 
>URIs with them, I can define triples expressing provenance or 
>anything else about them without any special reification syntax. 
>Mind you, given that I can identify individual triples in this way, 
>I still might find it useful to have a "standard" vocabulary, like 
><rdf:predicate>, for referring to the various parts of the triples, 
>but that wouldn't necessarily have anything to do with provenance.

I agree.


Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



