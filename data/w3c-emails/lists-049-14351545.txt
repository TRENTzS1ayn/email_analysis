docno="lists-049-14351545"
received="Fri Feb 15 03:13:28 2002"
isoreceived="20020215081328"
sent="Fri, 15 Feb 2002 10:14:51 +0200"
isosent="20020215081451"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatyping draft 3 (for telecon)"
id="B892901B.E7BA%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="1013749453.19851.41.camel&#64;dirk"
expires="-1"

To: Dan Connolly<connolly@w3.org>, Pat Hayes<phayes@ai.uwf.edu>
CC: RDF Core<w3c-rdfcore-wg@w3.org>, Brian McBride<bwm@hplb.hpl.hp.com>


On 2002-02-15 7:04, "ext Dan Connolly" <connolly@w3.org> wrote:

> On Thu, 2002-02-14 at 22:58, Pat Hayes wrote:
>> Latest version of the datatype summary document now available at
>> 
>> http://www.coginst.uwf.edu/users/phayes/DatatypeSummary3.html
> 
> Where's S-B?

There is no S-B datatyping idiom. But did you mean S-A?

If you use the S-B like idiom, where the literal is the
direct object of the property, then you are simply not
using any datatyping. The literal is the literal is the
literal and it does not denote (insofar as RDF is concerned)
any typed value (that's what you wanted, right? "W3C" is
"W3C" wherever it occurs as the direct literal object of
a property).

Some external application may impose some proprietary
typed interpretation on it, but any such typing is
non-portable and outside the scope of RDF.

Thus

  _:work dc:date "2002-02-14" .

does not attribute a date value to _:work, only
a literal that some application, based on the defined
semantics of dc:date, may interpret as a date value,
if its able to grok the meaning of the mystery lexical
representation used.

To RDF, it's just a literal. It's not a date.

> i.e. what name are we giving to the class
> of lexical representations of dates, so we can
> use them in range constraints, ala...
> 
> dc:date rdfs:range rdfdt:date.lex.
> 
> _:work dc:date "2002-02-14".

You would use the rdf:drange property to specify
that dc:date expects/requires/has a typed value
of e.g. xsd:date

   dc:date rdfs:drange xsd:date .

and that range constraint only applies to a value
expressed using one of the datatyping idioms.

[Though, this would only be a system-specific,
local constraint, since DC makes no mandates about
datatyping of values]

Note that if you said

   dc:date rdfs:range xsd:date .
                ^^^^^

then you would be implying (not constraining) the values
of dc:date simply to the set of date values defined by
xsd:date (its value space) irespective of their lexical
representations. And such an implication would not be
a datatyping constraint (which involves lexical
constraints). It would simply say that the property value
denotes some member of the value space of dc:date without
concerning itself with how such a value is represented or
how the mapping from representation to actual value is
executed; the latter being left as an excercise for the
application.

--

Do to RDF datatyping, you have three choices:

1. Implicit, global: the value triple idiom

In conjunction with a drange constraint

   dc:date rdfs:drange xsd:date .

you could say

   _:work dc:date _:1 .
   _:1 rdf:lform "2002-02-14" .

2. Explicit, local: the doublet idiom

Independent of any drange constraint (which if
present would be either superfluous or prescriptive)
you could say explcitly

   _:work dc:date _:1 .
   _:1 rdf:lform "2002-02-14" .
   _:1 rdf:dtype xsd:date .

3. Explicit, semi-local, condensed: the datatype triple idiom

Independent of any drange constraint (which if
present would be either superfluous or prescriptive)

First, declare xsd:date to be a 'datatyping property'

   xsd:date rdf:type rdfs:Datatype .
   xsd:date rdfs:subPropertyOf rdf:lform .

then you can say

   _:work dc:date _:1 .
   _:1 xsd:date "2002-02-14" .


That's it.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



