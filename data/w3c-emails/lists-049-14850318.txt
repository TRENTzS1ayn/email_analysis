docno="lists-049-14850318"
received="Sat Feb 16 03:50:24 2002"
isoreceived="20020216085024"
sent="Sat, 16 Feb 2002 10:51:48 +0200"
isosent="20020216085148"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatyping draft 3 (for telecon)"
id="B893EA44.EBAE%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="145C1D60907A4944ABAE75DE3FF6418C2C7FE3&#64;xchanger3.interwoven.com"
expires="-1"

To: ext Ronald Daniel<rdaniel@interwoven.com>, Dan Connolly<connolly@w3.org>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-02-16 9:50, "ext Ronald Daniel" <rdaniel@interwoven.com> wrote:

> Dan said:
>> On Fri, 2002-02-15 at 02:14, Patrick Stickler wrote:
>>> If you use the S-B like idiom, where the literal is the
>>> direct object of the property,
>> 
>> Yes, that's what I mean by S-B.
>> 
>>> then you are simply not
>>> using any datatyping.
> 
> Perhaps a more accurate statement is that you would ignore
> the datatyping that he is doing. His code would quite
> happily accomplish a number of useful tasks, like detecting
> when a garbage value was provided. He could also reuse a lot
> of existing code, like stuff that parses the wide variety of
> date formats so we can do sensible date comparisons.

Right. I probably worded it too strongly. What I meant is
that he would not be doing "RDF datatyping" such that the
datatyping knowledge is expressed in RDF.

>> I have a choice to use S-B whether this WG
>> endorses it or not. If this WG endorses
>> it, I'm likely to get more interoperability;
>> I'd like that.
> 
> I'm in massive agreement with Dan on this.
> This WILL be used. It already has been. More is on the way.
> You probably don't want to cut yourself off from very
> large sources of production-quality info which happens
> to have a very simple structure typed in this very simple
> way. After all, 'quantity has a quality all its own'.

Sure. We can neither force anyone to do things a given
way, nor choose to reject valuable knowledge that can be
put to use productively. Of course not. That was never my
suggestion.

Apologies if I gave that impression. I was simply trying
to be very explicit about what an arbitrary application
might be able to do with arbitrary RDF encoded knowledge
which is supposed to have datatyping -- and the S-B
idiom usage falls somewhat out of that scope.

Most of my recent comments/concerns have had to do with
genericity and to what degree RDF graphs "stand on their
own" without any external knowledge -- which I think is
an imperative for achieving a SW where arbitrary agents
interoperate based solely on the knowledge expressed in
the RDF graph and do not rely on any presumptions external
to the graph, unless taken from the standards/specifications
defining the SW architecture itself.

S-B expressed data which relies on application specific
interpretation does not reflect such genericity, and
therefore will be a hinderance to portability and
interoperability as the SW scales to a global scope.

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



