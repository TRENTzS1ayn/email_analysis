docno="lists-049-14902456"
received="Sat Feb 16 11:06:12 2002"
isoreceived="20020216160612"
sent="Sat, 16 Feb 2002 18:07:39 +0200"
isosent="20020216160739"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Parser mods to support rdf:dtype and rdf:lform"
id="B894506B.EBD4%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.0.20020215191253.00a75f50&#64;0-mail-1.hpl.hp.com"
expires="-1"

To: ext Brian McBride<bwm@hplb.hpl.hp.com>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-02-15 21:14, "ext Brian McBride" <bwm@hplb.hpl.hp.com> wrote:

> At 16:15 15/02/2002 +0200, Patrick Stickler wrote:
> [...]
> 
>> Not all applications which implement RDF datatyping will be aware
>> of all possible datatypes.
>> 
>> Hence the utility of a fully local, and clear representation
>> of typed literals.
> 
> What can an RDF processor, which is not schema aware, do with a datatype it
> does not explicitly recognise?

Pass the TDL pairing of datatype URIref and literal to some
external module to get a value.

If it can't tell which is the datatype generically, it
can't do that (or it can just guess about all possible
TDL pairings and hope to get one back, but that's kinda
sloppy.

It can also convert TDL pairings to other representations
for tighter graph compression, such as 'tdl:' URVs so that
for any given pairing, there is one and only one node.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



