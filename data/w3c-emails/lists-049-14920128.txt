docno="lists-049-14920128"
received="Sat Feb 16 11:14:19 2002"
isoreceived="20020216161419"
sent="Sat, 16 Feb 2002 18:15:44 +0200"
isosent="20020216161544"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatyping draft 3 (for telecon)"
id="B8945250.EBDD%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p0510144fb8933026eb32&#64;[192.168.0.6]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>, Dan Connolly<connolly@w3.org>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-02-15 23:39, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:

>> On Thu, 2002-02-14 at 22:58, Pat Hayes wrote:
>>>  Latest version of the datatype summary document now available at
>>> 
>>>  http://www.coginst.uwf.edu/users/phayes/DatatypeSummary3.html
>> 
>> Where's S-B?
>> 
>> i.e. what name are we giving to the class
>> of lexical representations of dates, so we can
>> use them in range constraints, ala...
>> 
>> dc:date rdfs:range rdfdt:date.lex.
>> 
>> _:work dc:date "2002-02-14".
> 
> As discussed, that  would be the rdf:range of a datatype property.
> I'll add comments about this in a version 4  tonight.

I don't think so.

My understanding about rdfs:range and general RDF classes is
that, a non-datatype class is simply a value space. It's a set
of values. And rdfs:range is a constraint on a property to
have property values (statement objects) that are members of
the value space (the only space) of the specified class.

A datatype class (rdfs:Datatype) is a special kind of class
which, in addition to having the value space, the members
of that value space have lexical representations, defined
by an additional lexical space, and there is an N:1 mapping
from the lexical space to the value space.

Thus, an rdfs:range constraint on a datatype class is no
different than an rdfs:range constraint on a non-datatype
class, it simply constrains to the value space of the class,
whether it is datatype class is not relevant.

Thus

   dc:date rdfs:range xsd:date

simply constrains the property values of the dc:date property
to be members of the value space of xsd:date, irrespective
of their lexical representations.

Now, rdfs:drange constrains both to the value space, and
requires that the value itself is represented by a member
of the lexical space of that datatype class. Thus, to
say

   dc:date rdfs:drange xsd:date

means that, in addition to constraining the property values
of the dc:date property to members of the value space of
xsd:date, they must also have lexical representations that
are members of the lexical space of xsd:date and there
must be a valid mapping between the lexical representation
and the value.

Per my recent proposal that the semantics of rdfs:drange
denote a union of the value space and lexical space of
the datatype class, one can use either the inline or
value triple idioms and achieve the desired interpretation.

But rdfs:range says nothing whatsoever about lexical spaces.

Eh?

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



