docno="lists-049-15070013"
received="Sun Feb 17 14:36:38 2002"
isoreceived="20020217193638"
sent="Sun, 17 Feb 2002 20:35:58 +0100"
isosent="20020217193558"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: a theory of rdf:Bags"
id="OFBE306464.02A7912C-ON41256B63.0068596D@agfa.be"
charset="us-ascii"
inreplyto="a theory of rdf:Bags"
expires="-1"

To:"Dan Connolly<connolly"<connolly@w3.org>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>



[...]

> Anyway... that's my idea. I meant to write
> it down in RDF/n3, but I haven't gotten
> around to it. Maybe Jos will beat me to it. ;-)

Oh Dan, you have no idea how such sentences
are triggering something in me (even so hard
that I just forgot to put the lights of my car
on while I was picking up my daughter at
the trainstation, and it was very dark...)

Suppose we can use your proposed lists as
( first-item-of-list / rest-of-list )
and also ?v for u.q. variables
then we could write in N3

( ) :sameBagAs ( ) .

and

{ ( ?a ?c ) :remove ?x . ?b :sameBagAs ?x }
log:implies
{ ( ?a / ?b ) :sameBagAs ?c } .


which is using predicate "remove" which is like
( item list ) :remove list-with-removed-item
such that

( ?a ( ?a / ?c ) ) :remove ?c .

and

{ ( ?a ?b ) :remove ?c }
log:implies
{ ( ?a ( ?x / ?b ) ) :remove ( ?x / ?c ) } .


that may seem dark, but it actually works
when we add those implications to
http://www.agfa.com/w3c/euler/owl-rules.n3
i.e.

( :a :a :b ) :sameBagAs ( :b :a :a ) .

--
Jos De Roo, AGFA htt://www.agfa.com/w3c/jdroo/



