docno="lists-049-15338588"
received="Tue Feb 19 01:34:40 2002"
isoreceived="20020219063440"
sent="Tue, 19 Feb 2002 08:36:10 +0200"
isosent="20020219063610"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: around the table on datatypes [ was: Re: datatyping draft 3 (for  telecon)]"
id="B897BEFA.EEA8%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="OFC1A03503.58FEB99B-ONC1256B65.00051B0C&#64;agfa.be"
expires="-1"

To: ext Jos De_Roo<jos.deroo.jd@belgium.agfa.com>,"Brian McBride<bwm"<bwm@hplb.hpl.hp.com>
CC: Pat Hayes<phayes@ai.uwf.edu>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-02-19 3:01, "ext Jos De_Roo" <jos.deroo.jd@belgium.agfa.com> wrote:

> 
> [...]
> 
>>   o Does the datatyping proposal meet your
>>     needs and the needs of your users?
>>     (Who are they?) (What is missing?)
> 
...
> resolving S-B is needed

I think that the union treatment of rdfs:drange does this nicely.

Consider the following example, including all *four* datatyping
idioms (inline, value triple, doublet, and datatype triple):

   ppp rdfs:drange xsd:integer .
   aaa ppp "10" .
   bbb ppp _:1 .
   _:1 rdfs:dlex "10" .
   ccc ppp _:2 .
   _:2 rdfs:dlex "10" .
   _:2 rdfs:dtype xsd:integer .
   eee ppp _:3 .
   _:3 xsd:integer "10" .

All of the above idioms define the pairing ("10",xsd:integer) which
unambiguously denotes the integer value 'ten'.

The property value of ppp is either a member of the lexical space
(literal) or member of the value space (bNode) and the graph
syntax makes it crystal clear which partition of the union the
actual property value corresponds to; with no conflict nor
confusion of the global range typing for any of the idioms.

Eh?

C.f. http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0469.html
for more use cases...

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



