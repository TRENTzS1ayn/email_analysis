docno="lists-049-15997863"
received="Wed Feb 20 15:27:59 2002"
isoreceived="20020220202759"
sent="Wed, 20 Feb 2002 14:27:59 -0600"
isosent="20020220202759"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Concerns about reification"
id="p05101433b899b60a2f60@[65.212.118.219]"
charset="us-ascii"
inreplyto="5.1.0.14.0.20020219172324.02a6cd58&#64;0-mail-1.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>, Sergey Melnik<melnik@db.stanford.edu>
Cc: RDFCore WG<w3c-rdfcore-wg@w3.org>

>Hi Sergey,
>
>At 10:11 15/02/2002 -0800, Sergey Melnik wrote:
>>Brian asked me (for the Xth time, sigh) to express my concerns about
>>reification in writing. My position remains that we need an
>>interoperable and efficient way of doing reification.
>
>I'm sorry about the repeats.
>
>>If we go for "stating" (answer "No" to Q1 in [1]), no special semantics
>>is associated with the vocabulary rdf:Statement, rdf:subject,
>>rdf:predicate and rdf:object. This means applications *cannot
>>interoperate* using this vocabulary since its meaning is unspecified.
>>Effectively, going for "stating" amounts to deprecating 4-triple
>>reification as used today.
>
>I see what you mean here, and I agree with it, though I think you 
>express it a bit too forcefully.  There was no model theory in M&S 
>at all, but folks seem to have managed to do useful things with it. 
>Thus, even without model theoretic semantics, the reification 
>vocabulary can be used, and provided you understand the semantics 
>attached to it by a particular application, then you can do useful 
>things with it.
>
>But I agree with you, that it defines no semantics that apply across 
>the board to all applications.

But you know, the same applies to containers. There really is no 
semantics to containers, in the sense that no extra semantic 
conditions need to be imposed on the RDFS container vocabulary in 
order to make sequence-based containers 'work' . But they do work, 
all the same, because they wear their relevant structure openly, 
expressed in RDF itself (and implicitly in the lexicographic ordering 
of the membership property names, in that case) . So one can have 
nontrivial content expressed in RDFS without imposing *extra* 
semantics on a vocabulary.

As Ive often said, RDF is a pipsqueak of a language, but its not 
completely powerless to say things. No special semantics isn't quite 
the same as no semantics at all.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



