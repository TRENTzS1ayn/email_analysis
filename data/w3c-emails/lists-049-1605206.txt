docno="lists-049-1605206"
received="Wed Apr 17 04:48:26 2002"
isoreceived="20020417084826"
sent="Wed, 17 Apr 2002 11:51:16 +0300"
isosent="20020417085116"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="RDF Datatyping MT *does* define Datatyped Literal Pairings"
id="B8E31234.13481%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20020416212135.037c7910&#64;joy.songbird.com"
expires="-1"

To: ext Graham Klyne<Graham.Klyne@mimesweeper.com>
CC: Pat Hayes<phayes@ai.uwf.edu>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-16 23:24, "ext Graham Klyne" <Graham.Klyne@MIMEsweeper.com>
wrote:

> At 08:09 PM 4/16/02 +0300, Patrick Stickler wrote:
>
>>>    Jenny age "10" .
>>>    age rdfd:range xsd:integer .
>
>> ... the combination of the
>> inline idiom and the rdfd:range/datatype assertion designates
>> the pairing <xsd:integer, "10"> and that pairing is the basis
>> for any datatyping interpretation. I.e., the knowledge in the
>> graph unambiguously identifies a single value by designating
>> a datatyped literal pairing. What that actual
>> value is, we don't know *at this level*. But at a higher level
>> where the full knowledge of xsd:integer is available, then
>> we know that the pairing <xsd:integer, "10"> identifies the
>> value ten.
>> 
>> The RDF Datatyping MT is not saying the value is ten. It is
>> saying that it is whatever value is identified by the interpretation
>> of the lexical form "10" within the context of the datatype
>> xsd:integer.
>> 
>> That may seem like a very slight distinction, but it is
>> a very significant one.
> 
> Slight, maybe.  Significant, definitely, in the sense that (as far as I can
> tell) it goes beyond that which is specified by the model theory.

No, it does not go beyond the MT. It is exactly what the MT states.

The present datatyping MT says for this particular example:

--

(3) ... if E contains the triples

   <ex:age, rdfd:datatype, xsd:integer>
   <Jenny, ex:age, "10">

then L2V(I(xsd:integer))("10") is defined;
i.e. "10" is in the lexical space of I(xsd:integer).

--

Thus the literal "10" is a member of the lexical space
of xsd:integer, and there is only one member of the value space of
xsd:integer represented by "10", therefore according to the
datatype xsd:integer, the value indicated by the above statements
is ten.

I.e. the datatype-specific interpretation of the above
RDF knowledge is that Jenny's age is ten. Granted, the value
ten has no denotation in the graph, but it is unambiguously
identified by the idiom, in the context of the full semantics
of xsd:integer.

Now, some folks seem to assert that all the datatyping MT asserts
is that "10" is a valid lexical form for xsd:integer, but
given the definition of datatypes, everything else follows
automatically so I don't see the real distinction.

It is true that at the RDF MT level, it is not possible to
know which value is indicated -- but it is possible to
know that a single specific value is indicated, and know
that it is the value represented by the particular lexical
form according to the semantics of a particular datatype.

To state that a given literal is a member of the lexical
space of a particular datatype is to associate that literal
with the datatype -- is to define a datatyped literal pairing.

   L2V(I(xsd:integer))("10") is a datatyped literal pairing.
   Datatyped literal pairings thus have definition in the MT.

let me repeat that in case some of you missed it ;-)

   L2V(I(xsd:integer))("10") is a datatyped literal pairing.
   Datatyped literal pairings thus have definition in the MT.

Thus, what the RDF MT provides is a datatyped literal pairing
which may be evaluated at a level above RDF by an application
with the full knowledge of the datatype in question in order
to obtain the actual value.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



