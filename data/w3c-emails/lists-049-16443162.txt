docno="lists-049-16443162"
received="Thu Feb 21 19:25:01 2002"
isoreceived="20020222002501"
sent="Fri, 22 Feb 2002 01:24:20 +0100"
isosent="20020222002420"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: simplified datatyping proposal"
id="OFDFB19237.A754E2F5-ONC1256B68.00014BBF@agfa.be"
charset="us-ascii"
inreplyto="simplified datatyping proposal"
expires="-1"

To:jos.deroo.jd@belgium.agfa.com
Cc:"\"\"Pat Hayes<\"phayes\"<phayes\"_<phayes\"phayes\"@ai.uwf.edu>, \"\"Graham Klyne<\"Graham.Klyne\"<Graham.Klyne\"_"<Graham.Klyne"Graham.Klyne"@MIMEsweeper.com>,""w3c-rdfcore-wg"<w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>



Oops... forgot to mention that that check is
like a DDT (datatype triple) (as you may have seen)
bridging S-B assertions to DTT queries




[...]

>>  ... i.e. under some schema, say:
>>
>>    ex:age rdfs:drange datatype:DecimalNumber .
>>
>>the statement:
>>
>>    person:Jenny ex:age "Humpty Dumpty" .
>>
>>would always be false
>
>OK. But you don't care how it gets to be false, as it were.

that kind of inconsistency detection is indeed "beyond"
but it can be delegated to appropriate machinery
and it should be no problem to hand that over
as a check (with stringified object)
  _:xx datatype:DecimalNumber "Humpty Dumpty" .

--
Jos



