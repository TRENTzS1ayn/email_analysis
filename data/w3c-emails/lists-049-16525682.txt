docno="lists-049-16525682"
received="Fri Feb 22 04:49:30 2002"
isoreceived="20020222094930"
sent="Fri, 22 Feb 2002 11:51:04 +0200"
isosent="20020222095104"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Occam-slashed datatypes"
id="B89BE128.F5AC%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p0510141fb89b72840696&#64;[65.212.118.219]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-02-22 6:00, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:

> As promised, brief writeup at
> 
> http://www.coginst.uwf.edu/users/phayes/simpledatatype2.html
> 
> Pat

Looks good.

And the shared bNode treatment outlined in 3.1 looks like
a suitable alternative to my proposed use of rdfs:Literal
to exclude the bNode idioms.

We may want to change the language in the final specification
to avoid saying things like "aserts that Jenny's age is 35"
since that depends on specific knowledge about the datatype,
but rather say "asserts that Jenny's age is the value
given by the extra-RDF datatyping mapping DDD("35") where
the rdfs:Datatype ddd denotes the extra-RDF datatype
DDD. Otherwise, folks who were expecting the MT to actually
provide the complete interpretation to actual value may get
confused to think it actually does, when it in fact doesn't
and can't.

Your treatment of the inline idiom as "virtualy" equivalent
to the value triple, to avoid range conflicts, I guess works,
though it seems less clean or basic than just treating
rdfs:Datatype's as unions which doesn't force any such special
treatment of rdfs:range in terms of datatyping or force
datatyping semantics on folks using rdfs:range for non-datatype
ranges. But I can live with it, I guess, if I have to.

Though, we could still benefit from the union approach, as it
allows us to leave out rdfs:dlex entirely and avoid a datatyping
clashable local idiom. If datatype is implicit, use the inline
idiom. If it is explicit, use the datatype idiom. And that is
that.

The union approach also makes the last three paragraphs
of section 4 (in pink) unnecessary -- and thus the whole business
about the meaning of rdfs:range is fully consistent across RDF
classes (datatype or otherwise), doesn't force any datatyping
semantics onto non-datatype classes used with rdfs:range, and thus is
simpler and clearer for users while providing an (extra-RDF)
datatyping interpretation that is equally clear and consistent
for applications.

Regards,

Patrick


--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



