docno="lists-049-1662220"
received="Wed Apr 17 05:32:09 2002"
isoreceived="20020417093209"
sent="Wed, 17 Apr 2002 12:33:07 +0300"
isosent="20020417093307"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: RDF Datatyping MT *does* define Datatyped Literal Pairings"
id="B8E31C03.1349C%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="JAEBJCLMIFLKLOJGMELDMELACDAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"

To: Jeremy Carroll<jjc@hplb.hpl.hp.com>, ext Graham Klyne<Graham.Klyne@mimesweeper.com>
CC: Pat Hayes<phayes@ai.uwf.edu>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-17 12:06, "ext Jeremy Carroll" <jjc@hplb.hpl.hp.com> wrote:

> 
> No it doesn't.
> 
> Consider:
> 
> <ex:age, rdfd:datatype, xsd:string>
> <ex:age, rdfd:datatype, xsd:integer>
> <Jenny, ex:age, "10">
> 
> Fine by the MT, "10" is in the lexical space of both datatypes.

Right.

> No "TDL" pair in sight.

Please, let's not confuse things by bringing up old,
and irrelevant, acronyms, eh ;-)

But the MT *does* define two datatyped literal pairings.

> (Or perhaps the point is that there are two TDL
> inconsistent pairs around - but no inconsistency in the MT).

The MT asserts two datatyped literal pairings -- i.e provides
two interpretations, and if those interpretations conflict,
then that is (possibly) an inconsistency in the graph.

This is no different than multiple rdfs:range constraints conflicting.

The above graph defines the pairings

   <xsd:string,"10">
   <xsd:integer,"10">

and asserts both interpretations to the statement about Jenny's
age.

This follows from the MT, which, when selecting each of the
rdfd:datatype assertions in turn, says:

(3) ... if E contains the triples

   <ex:age, rdfd:datatype, xsd:string>
   <Jenny, ex:age, "10">

then L2V(I(xsd:string))("10") is defined;
i.e. "10" is in the lexical space of I(xsd:string).

(defines the pairing <xsd:string,"10">)

and

(3) ... if E contains the triples

   <ex:age, rdfd:datatype, xsd:integer>
   <Jenny, ex:age, "10">

then L2V(I(xsd:integer))("10") is defined;
i.e. "10" is in the lexical space of I(xsd:integer).

(defines the pairing <xsd:integer,"10">)

Of course, if the two datatypes were, say xsd:integer
and xsd:decimal, then there would be no inconsistency,
no "datatype clash", but the MT would still define
two pairings.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



