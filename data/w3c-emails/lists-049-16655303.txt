docno="lists-049-16655303"
received="Fri Feb 22 13:25:06 2002"
isoreceived="20020222182506"
sent="Fri, 22 Feb 2002 12:25:03 -0600"
isosent="20020222182503"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Occam-slashed datatypes"
id="p05101426b89c3caa4f70@[65.212.118.219]"
charset="us-ascii"
inreplyto="B89BE128.F5AC%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-02-22 6:00, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:
>
>>  As promised, brief writeup at
>>
>>  http://www.coginst.uwf.edu/users/phayes/simpledatatype2.html
>>
>>  Pat
>
>Looks good.

??? Then why did you vote for 'string' at the telecon? In the above, 
the answer is 'number'.

>And the shared bNode treatment outlined in 3.1 looks like
>a suitable alternative to my proposed use of rdfs:Literal
>to exclude the bNode idioms.
>
>We may want to change the language in the final specification
>to avoid saying things like "aserts that Jenny's age is 35"
>since that depends on specific knowledge about the datatype,
>but rather say "asserts that Jenny's age is the value
>given by the extra-RDF datatyping mapping DDD("35") where
>the rdfs:Datatype ddd denotes the extra-RDF datatype
>DDD. Otherwise, folks who were expecting the MT to actually
>provide the complete interpretation to actual value may get
>confused to think it actually does, when it in fact doesn't
>and can't.
>
>Your treatment of the inline idiom as "virtualy" equivalent
>to the value triple, to avoid range conflicts, I guess works,
>though it seems less clean or basic than just treating
>rdfs:Datatype's as unions which doesn't force any such special
>treatment of rdfs:range in terms of datatyping or force
>datatyping semantics on folks using rdfs:range for non-datatype
>ranges. But I can live with it, I guess, if I have to.
>
>Though, we could still benefit from the union approach, as it
>allows us to leave out rdfs:dlex entirely and avoid a datatyping
>clashable local idiom. If datatype is implicit, use the inline
>idiom. If it is explicit, use the datatype idiom. And that is
>that.
>
>The union approach also makes the last three paragraphs
>of section 4 (in pink) unnecessary -- and thus the whole business
>about the meaning of rdfs:range is fully consistent across RDF
>classes (datatype or otherwise), doesn't force any datatyping
>semantics onto non-datatype classes used with rdfs:range, and thus is
>simpler and clearer for users while providing an (extra-RDF)
>datatyping interpretation that is equally clear and consistent
>for applications.

Patrick, as Ive said to you, as far as I can tell, there is no 'union 
approach' It doesn't seem to make mathematical sense. I am willing to 
be corrected if you can show me how it would work; but until someone 
does, I propose to ignore it.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



