docno="lists-049-1777200"
received="Wed Apr 17 17:28:33 2002"
isoreceived="20020417212833"
sent="Wed, 17 Apr 2002 16:28:30 -0500"
isosent="20020417212830"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: RDF Datatyping MT *does* define Datatyped Literal Pairings"
id="p05101507b8e398538cb6@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E31C03.1349C%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-04-17 12:06, "ext Jeremy Carroll" <jjc@hplb.hpl.hp.com> wrote:
>
>>
>>  No it doesn't.
>>
>>  Consider:
>>
>>  <ex:age, rdfd:datatype, xsd:string>
>>  <ex:age, rdfd:datatype, xsd:integer>
>>  <Jenny, ex:age, "10">
>>
>>  Fine by the MT, "10" is in the lexical space of both datatypes.
>
>Right.
>
>>  No "TDL" pair in sight.
>
>Please, let's not confuse things by bringing up old,
>and irrelevant, acronyms, eh ;-)
>
>But the MT *does* define two datatyped literal pairings.
>
>>  (Or perhaps the point is that there are two TDL
>>  inconsistent pairs around - but no inconsistency in the MT).
>
>The MT asserts two datatyped literal pairings -- i.e provides
>two interpretations, and if those interpretations conflict,
>then that is (possibly) an inconsistency in the graph.

No, having two different interpretations isn't an inconsistency, its 
an ambiguity. This graph is consistent, but it is rather dangerous in 
that it will rapidly become inconsistent if you use ex:age with a 
dlex idiom.

>This is no different than multiple rdfs:range constraints conflicting.
>
>The above graph defines the pairings
>
>    <xsd:string,"10">
>    <xsd:integer,"10">
>
>and asserts both interpretations to the statement about Jenny's
>age.

No, it just imposes both lexical constraints. And since they both 
apply, it is consistent.

>This follows from the MT, which, when selecting each of the
>rdfd:datatype assertions in turn, says:
>
>(3) ... if E contains the triples
>
>    <ex:age, rdfd:datatype, xsd:string>
>    <Jenny, ex:age, "10">
>
>then L2V(I(xsd:string))("10") is defined;
>i.e. "10" is in the lexical space of I(xsd:string).
>
>(defines the pairing <xsd:string,"10">)

That extra gloss is misleading. The MT doesn't say anything about pairings.
>
>and
>
>(3) ... if E contains the triples
>
>    <ex:age, rdfd:datatype, xsd:integer>
>    <Jenny, ex:age, "10">
>
>then L2V(I(xsd:integer))("10") is defined;
>i.e. "10" is in the lexical space of I(xsd:integer).
>
>(defines the pairing <xsd:integer,"10">)
>
>Of course, if the two datatypes were, say xsd:integer
>and xsd:decimal, then there would be no inconsistency,
>no "datatype clash", but the MT would still define
>two pairings.

There is no clash right now, though I wouldn't exactly *recommend* 
this style of using rdfd:range. You can't obtain a datype clash by 
using the inline idiom, as it admits of no ambiguity.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



