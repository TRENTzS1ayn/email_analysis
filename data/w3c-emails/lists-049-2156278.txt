docno="lists-049-2156278"
received="Thu Apr 18 14:25:44 2002"
isoreceived="20020418182544"
sent="Thu, 18 Apr 2002 20:27:22 +0300"
isosent="20020418172722"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Denotation of datatype values"
id="B8E4DCAA.135DA%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p0510150bb8e39ec10e71&#64;[65.217.30.94]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-18 1:02, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:


>> The MT, IMO, stops short of the line. It gets 95% there and fails
>> to actually say how to get to the finish. It fails to capture
>> the ultimate "why" of the idioms.
> 
> Patrick, you want to ALTER the MT, clearly.

I actually don't think so. I just consider it acceptable
to interpret the present MT as all three of the datatyping
idioms identifying a datatype value, even if the inline
idiom does not provide explicit denotation for that value
in the graph.

What the users of RDF Datatyping need, IMO, is the ability
to express and communicate datatype values. If they can't
do that, then something is broken.

I don't think the MT needs to be changed. I actually think
we are in very violent agreement, and are just bandying over
words and how best to explain what the MT says to folks who
will not or cannot read the MT.

It is your interpretation of the inline idiom as only constraining
literals to the lexical space and not actually identifying a
datatype value that I consider not "going all the way".

> The trouble with your
> position, however, is that the place you want to get to, that last
> 5%, is a place we have already surveyed, and we found problems with
> it. 

We found problems with trying to have all three idioms denote
the datatype value. But by agreeing that the inline idiom does
not in fact denote the value, even if it does unambiguously
identify the value, works just fine.

> Some of our customers definitely do not want to be located there.
> They WANT to be able to be sloppy about datatype values, mix talk of
> strings with talk of integers, etc., and still they want to invoke
> lexical form checking using datatypes.

I understood the concerns/desires differently. I heard that they
wanted to be able to use the inline idiom and leave the interpretation
entirely to the application, or at most, indicate which datatypes
should apply to the interpretation of which literal values.

But perhaps you're right, and I've misunderstood...

>> If you want the MT to be the only level addressed in the RDF
>> Datatyping specification, then could we consider giving datatyped
>> literal pairings a formal definition in the MT. They need no
>> explicit denotation in the graph, no more so than the datatype
>> mappings do. They only need definition. Eh?
>> 
> 
> I don't see how this will help, or even what it really means.

Forget the pairings. They are only a conceptual convenience that
captures what I consider to be the key mechanism of RDF datatyping.

What I ultimately want to see from the MT (and thought it provided)
is that each and every one of the datatyping idioms (when complete)
define/identify/provide a specific datatype value.

>... The various idioms
> provide all the precision (or lack of it) that anyone seems to need,

I consider all of the idioms to be equally precise, though some are
more explicit than others.

> If you want to be sloppy, you can be;

The only way to be sloppy, IMO, is to use an implicit idiom without
any rdfd:datatype assertion, i.e. for their to be no datatype associated
with the literal to tell the application what the intended interpretation
is. If you specify the datatype, it is fully precise.

Not having a bnode to denote the value is not, IMO, being sloppy.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



