docno="lists-049-2234964"
received="Thu Apr 18 16:55:40 2002"
isoreceived="20020418205540"
sent="Thu, 18 Apr 2002 15:55:26 -0500"
isosent="20020418205526"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Before we go on..."
id="p0510152db8e4e019f476@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E4D4A5.135D1%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-04-18 0:50, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:
>
>
>>>  The RDF Datatyping MT is not saying the value is ten. It is
>>>  saying that it is whatever value is identified by the interpretation
>>>  of the lexical form "10" within the context of the datatype
>>>  xsd:integer.
>>
>>  No, it isn't saying that. It doesn't refer to contexts, and it is not
>>  saying that the lexical form identifies a value. That is a very
>>  misleading and confusing way to describe what the MT says, since the
>>  MT says very clearly that any literal denotes a string, even when it
>>  is 'associated' with a datatype, and even in the 'context' of a
>>  datatyping interpretation.
>
>You continue to misunderstand what I am saying.

Well, if I am not understanding it, might it be possible that others 
will also misunderstand it? Im doing my best here.

>For the record,
>and please print this out and paste it somewhere where you will
>always see it:
>
>  Patrick Asserts: A literal node always denotes itself, the literal string.
>                   The meaning of a literal node never changes.
>
>There, now let's try again:
>
>A literal *AND* a datatype *TOGETHER* identify a single, specific
>datatype value.

Of course they 'identify' one, yes, in some sense: that's part of the 
definition of a datatype. But that is irrelevant to the meaning of 
RDF. The point is that no amount of datatyping is going to change the 
fact that a literal node DENOTES itself, and that the only sense of 
'meaning' we have. There is no notion of a literal and a datatype 
denoting anything 'together'.  That just doesn't make sense. There is 
(or was) a notion of a datatyped interpretation (ie one that took 
account of the extra meaning incorporated in the semantic conditions 
on the rdfd vocabulary), and what I said above still holds: a literal 
node always denotes itself, even in a datatyped interpretation. 
Datatypes plus literals define datatype values, but datatypes do not 
make literals MEAN datatype values.

>The fact that a given literal represents a particular datatype value
>according to the lexical to value mapping of a particular datatype
>does not change the meaning of the literal itself.

That reads as incoherent to me. If the meaning of the literal is 
unchanged, and is itself, then the literal (node) does NOT 
'represent' the datatype value in any semantically meaningful sense. 
Look, we argued this out already. There was a (different) datatyping 
proposal in which literals could mean datatype values. We considered 
that option, and after long and arduous discussions, decided against 
it. Lets not re-hash these debates yet again.

>
>OK?
>
>If you disagree with that, then we disagree about the very
>foundation of what RDF Datatyping is, and we need not bother
>to go forward.

Well, the WG has to go forward. Seems to me that we came to a 
decision already about how to do it (and I wasn't even at the meeting 
:-).

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



