docno="lists-049-2273212"
received="Thu Apr 18 18:14:19 2002"
isoreceived="20020418221419"
sent="Thu, 18 Apr 2002 17:14:06 -0500"
isosent="20020418221406"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: 2002-04-16 RDF Datatyping WD submitted for review by WG"
id="p05101531b8e4f3326e1b@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E4D7EC.135D5%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-04-18 1:33, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:
>
>
>>  Minor point. I know Im going back on what I said before, but now I
>>  see all the examples (congrats on those, BTW) I find the closeness of
>>  rdfd:datatype and rdfd:Datatype rather anxiety-producing.  (Does
>>  anyone else agree?) I think we should either go back to rdfd:range or
>>  something truly different like rdfd:typeCheckOnRange.
>
>Would it help if we rather changed the name of the class to
>rdfd:RDFDatatype?

Hmm, sounds like we are saying that it is one of *our* datatypes :-) 
Actually I think that rdfd:Datatype is OK, its in line with 
rdfs:Class and rdfs:Property and so on.

>
>Thus, rdfd:datatype associates an rdfd:RDFDatatype
>with a given property.
>
>The reason why I moved away from using rdfd:range is that it
>is not the rdfd:range property which is constraining anything,
>it is the semantics of the datatype itself, which is completely
>opaque to RDF. All that the rdfd:range/datatype property does
>is associate a datatype with a property, so that all datatyping
>idioms used with that property are interpreted in terms of that
>datatype.

Right, but it does it in a particular way, see below.

>
>The datatype itself constrains the literals to the members of
>its lexical space and the bnodes to the members of its value
>space based simply on the presence or absence of a lexical
>to value mapping from the literal/lexical form to the value.
>If there is none, then either the literal/lexical form or
>value (or both) are invalid.
>
>Thus, there is no range like semantics asserted by the
>rdfd:range/datatype property itself in the same manner
>as the rdfs:range property. So I wouldn't want to revert
>to rdfd:range.

Right, I take your point and agree. On the other hand there is a link 
to rdfs:range in that the datatyping constraints are applied to the 
object of the property rather than the subject, so the 'pointed end' 
association is similar to rdfs:range (instead of rdfs:domain). Its 
not a very logical connection, but I bet users will find it a useful 
association. That is why I rather liked the 'drange' or 'dcrange' 
idioms, which had a kind of range-ish flavor but didnt actually say 
'range'.

How about rdfd:dtype ??  I really just want it to be more visually 
distinct from the class name: it's too easy to make typos at present.

Pat

PS How about rdfd:datatypeCheckOnPointyEnd.... Nah.



-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



