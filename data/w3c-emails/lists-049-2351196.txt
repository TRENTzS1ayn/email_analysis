docno="lists-049-2351196"
received="Thu Apr 18 20:15:35 2002"
isoreceived="20020419001535"
sent="Thu, 18 Apr 2002 19:15:26 -0500"
isosent="20020419001526"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: What is RDF Datatyping?"
id="p05101537b8e50f65094e@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E4A6B0.135CB%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>Please read the following carefully and possibly several times
>before blasting away at it. Thanks.
>
>--
>
>I assert that the following are true and should be captured by the
>RDF Datatyping specification:
>
>1. The purpose of RDF Datatyping is to exchange knowledge containing
>datatype values.

Not exclusively, no. That is clearly not true of all of our users, eg 
Dublin Core. If you change the last word to 'information' or some 
such, I would agree.

>2. The means by which RDF Datatyping captures knowledge about
>datatype values is by associating lexical forms (literals) with
>datatypes (URIrefs).
>
>2. A datatyping idiom is an expression of a datatyped value

No, that is too limiting. And unnecessary. The point of the 
datatyping idioms is to provide unambiguous syntactic patterns which 
have particular meanings relative to datatypes. Exactly what those 
forms and meanings are is determined by the rules in the MT, and we 
should explain them as clearly as we can, of course. BUt we should 
respect them (or change them.) We shouldnt just ignore them.

>which
>associates a lexical form with a datatype, and
>is comprised of (a) a literal, taken to be a lexical form, (b) a
>URI, taken to identify a datatype, and optionally (c) a blank node
>which denotes the datatype value represented by the lexical form
>according to the lexical to value mapping of the specified datatype.
>
>3. A literal which occurs as part of a datatyping idiom always
>denotes itself, the string,

Right

>even though it is also understood to
>represent a datatype value

Wrong. It should never be understood that way in RDF. An application 
may choose to do so, but that interpretation would go outside the RDF 
spec and could result in invalid inferences.

>in conjunction with the specified
>datatype. This is not a contradiction. The literal by itself
>cannot identify a datatype value. It is only the combination
>of the literal and datatype which provide sufficient information
>to identify a datatype value.

Even in combination with a datatype, the literal still means itself. 
That is what the WG agreed, and what the MT reflects.

>
>4. The value denoted by a blank node occurring as part of a lexical
>form or datatype property idiom is unknown to RDF. It can only be
>known externally to RDF with the addition of full knowledge of the
>datatype mapping. Thus, datatype clashes cannot occur within RDF.

That is a very misleading way of putting it. The clashes occur in 
RDF, in a real sense - they are a consequence of the RDF semantic 
conditions -  but they can only be detected by using information 
about datatypes.

>I consider sections 2-4 of the datatyping WD to capture these truths.
>Whether the terminology used is optimal, or whether the concept of
>datatyped literal pairings is acceptable or not, and whether it
>remains or is removed, is a separate matter. I am happy to
>rephrase those sections to the satisfaction of the WG, or allow
>any other WG member to do so, but I consider the above truths
>to hold and will expect any rewording of the datatyping specification
>to reflect them.

Then we need to discuss what to do, because I think these views do 
not reflect the intent or the actual stated consequences of the MT as 
it exists, nor the clearly expressed description of the datatyping 
model as expressed in my document, nor much of the email and telecon 
discusssions that led us to this point.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



