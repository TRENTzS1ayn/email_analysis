docno="lists-049-2621315"
received="Fri Apr 19 06:30:50 2002"
isoreceived="20020419103050"
sent="Fri, 19 Apr 2002 11:23:31 +0100"
isosent="20020419102331"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="A test case? [Re: Before we go on...]"
id="5.1.0.14.0.20020419111554.031e6af8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="OF1AB959AF.F99A3AF6-ONC1256BA0.002A257B&#64;agfa.be"
expires="-1"


To:"Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>,"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:"Pat Hayes"<phayes@ai.uwf.edu>,"RDF Core"<w3c-rdfcore-wg@w3.org>

Thank you Jos!

Observing, and to some extent fearing, the nature of the recent datatypes 
discussion, I was wondering if we could bring some more structure to it by 
asking for a test case.  Then I saw this message from Jos and thought this 
might be the basis of a test case we could decide on.  Is it?  Is there an 
entailment test here?

Brian

ps: Someone (Jos?) has a badly formed email address configured for Patrick 
- my email server barfs when I try to reply.

   "Patrick Stickler <patrick.stickler" <patrick.stickler@nokia.com>

should be

   "Patrick Stickler" <patrick.stickler@nokia.com>

Oh and similarly for PatH and RDFCore for that matter.

B


At 10:05 19/04/2002 +0200, Jos De_Roo wrote:

>[just 6 lines of entailment stuff]
>
>we're that close, aren't we???
>the stake in the ground (I think) was
>
>//////
>rdfs:Datatype a rdfs:Class .
>rdfs:drange a rdf:Property; rdfs:domain rdfs:Property; rdfs:range 
>rdfs:Datatype; rdfs:subPropertyOf rdfs:range .
>rdfs:dlex a rdf:Property; rdfs:domain rdfs:Resource; rdfs:range rdfs:Literal .
>
>{ ?d a rdfs:Datatype } log:implies { ?d rdfs:domain ?d } .
>{ ?d a rdfs:Datatype . ?o ?d ?l } log:implies { ?o rdfs:dlex ?l } .
>{ ?p rdfs:drange ?d . ?o rdfs:dlex ?l . ?s ?p ?o } log:implies { ?o ?d ?l } .
>\\\\\\
>
>and now I would think we have
>
>//////
>rdfd:Datatype a rdfs:Class; rdfs:subClassOf rdf:Property .
>rdfd:dcrange a rdf:Property; rdfs:domain rdf:Property; rdfs:range 
>rdfd:Datatype.
>rdfd:lex a rdf:Property; rdfs:domain rdfs:Resource; rdfs:range rdfs:Literal .
>
>{ ?d a rdfd:Datatype } log:implies { ?d rdfs:domain ?d } .
>{ ?d a rdfd:Datatype . ?o ?d ?l } log:implies { ?o rdfd:lex ?l } .
>{ ?p rdfd:dcrange ?d . ?o rdfd:lex ?l . ?s ?p ?o } log:implies { ?o ?d ?l } .
>\\\\\\
>
>???
>
>--
>Jos



