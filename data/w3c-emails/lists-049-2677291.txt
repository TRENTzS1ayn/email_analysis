docno="lists-049-2677291"
received="Fri Apr 19 07:28:14 2002"
isoreceived="20020419112814"
sent="Fri, 19 Apr 2002 12:09:17 +0100"
isosent="20020419110917"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: A test case? [Re: Before we go on...]"
id="5.1.0.14.2.20020419115350.03dc0610@joy.songbird.com"
charset="us-ascii"
inreplyto="5.1.0.14.0.20020419111554.031e6af8&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:"Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"RDF Core"<w3c-rdfcore-wg@w3.org>

Jos,

I'm sorry I missed the significance of this message first time.  Thanks 
Brian for pointing it up!

At 11:23 AM 4/19/02 +0100, Brian McBride wrote:
>Thank you Jos!
>
>Observing, and to some extent fearing, the nature of the recent datatypes 
>discussion, I was wondering if we could bring some more structure to it by 
>asking for a test case.  Then I saw this message from Jos and thought this 
>might be the basis of a test case we could decide on.  Is it?  Is there an 
>entailment test here?

[...]

>At 10:05 19/04/2002 +0200, Jos De_Roo wrote:
>
>>[just 6 lines of entailment stuff]
>>
>>we're that close, aren't we???
>>the stake in the ground (I think) was
>>
>>//////
>>rdfs:Datatype a rdfs:Class .
>>rdfs:drange a rdf:Property; rdfs:domain rdfs:Property; rdfs:range 
>>rdfs:Datatype; rdfs:subPropertyOf rdfs:range .

I think rdfs:subPropertyOf rdfs:range is wrong here.  I don't think we ever 
had this.

>>rdfs:dlex a rdf:Property; rdfs:domain rdfs:Resource; rdfs:range 
>>rdfs:Literal .
>>
>>{ ?d a rdfs:Datatype } log:implies { ?d rdfs:domain ?d } .
>>{ ?d a rdfs:Datatype . ?o ?d ?l } log:implies { ?o rdfs:dlex ?l } .
>>{ ?p rdfs:drange ?d . ?o rdfs:dlex ?l . ?s ?p ?o } log:implies { ?o ?d ?l } .
>>\\\\\\
>>
>>and now I would think we have
>>
>>//////
>>rdfd:Datatype a rdfs:Class; rdfs:subClassOf rdf:Property .
>>rdfd:dcrange a rdf:Property; rdfs:domain rdf:Property; rdfs:range 
>>rdfd:Datatype.
>>rdfd:lex a rdf:Property; rdfs:domain rdfs:Resource; rdfs:range rdfs:Literal .
>>
>>{ ?d a rdfd:Datatype } log:implies { ?d rdfs:domain ?d } .
>>{ ?d a rdfd:Datatype . ?o ?d ?l } log:implies { ?o rdfd:lex ?l } .
>>{ ?p rdfd:dcrange ?d . ?o rdfd:lex ?l . ?s ?p ?o } log:implies { ?o ?d ?l } .
>>\\\\\\

I broadly agree with these rules.  I guess they each represent an 
entailment test?

...

I think the second and third antecedents should include something like:

    ?l a rdfs:Literal .

Because:

   { ?d a rdfd:Datatype . ?o ?d ex:uriref } log:implies { ?o rdfd:lex 
ex:uriref } .

I think is NOT a valid entailment.

Or maybe the first test should include the conclusion:

    ?d rdfs:range rdfs:Literal .

...

I'd also suggest:

{ ?p rdfd:dcrange ?d . ?s ?p ?l . ?l a rdfs:Literal } log:implies { [ ?d ?l 
] } .

#g



-------------------
Graham Klyne
<GK@NineByNine.org>



