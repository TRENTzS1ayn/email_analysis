docno="lists-049-2787905"
received="Fri Apr 19 19:09:29 2002"
isoreceived="20020419230929"
sent="Fri, 19 Apr 2002 18:09:26 -0500"
isosent="20020419230926"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: Denotation of datatype values"
id="p0510154db8e65112d85a@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E5BBEF.137A4%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-04-19 11:32, "ext Graham Klyne" <Graham.Klyne@MIMEsweeper.com>
>wrote:
>
>>  At 04:17 PM 4/18/02 -0500, Pat Hayes wrote:
>>>>>   Some of our customers definitely do not want to be located there.
>>>>>   They WANT to be able to be sloppy about datatype values, mix talk of
>>>>>   strings with talk of integers, etc., and still they want to invoke
>>>>>   lexical form checking using datatypes.
>>>>
>>>>  I understood the concerns/desires differently. I heard that they
>>>>  wanted to be able to use the inline idiom and leave the interpretation
>>>>  entirely to the application, or at most, indicate which datatypes
>>>>  should apply to the interpretation of which literal values.
>>>>
>  >>> But perhaps you're right, and I've misunderstood...
>>>
>>>  Well, check this out with Graham.
>>
>>  Well, speaking for CC/PP, as currently designed (and, by association,
>>  UAProf as I understand it's currently implemented):
>>
>>  The starting point is this:  the applications uses literals in places where
>>  the intent is to express a number, or some other value;  e.g. something
>>  akin to:
>>
>>     HardwarePlatform ex:dpi "100" .
>>
>>  The _implementations_ to date interpret this as meaning a display
>>  resolution in dots-per-inch is 100 (the number).  Yes, I know this is what
>>  Patrick argues for -- BUT (and this is a big "BUT") it's the application
>>  that makes that interpretation, not RDF as described by Pat's document [1].
>
>I'm not arguing that the literal node all by itself denote the value.
>
>But that it is clear that the presence of both the literal value and
>an rdfd:datatype assertion communicates to the application that
>the literal is intended to be interpreted by the application as a lexical
>form of the specified datatype

OK so far

>which represents a specific value of
>that datatype.

Wrong. The RDF literal is not intended to, and does not, represent 
the datatype value. That is clearly and unequivocally stated by the 
MT, so we should not confuse the reader by saying something different.

I don't think we need to tell users that if they have a literal and a 
datatype then the two together can be thought of determining a 
datatype value, and they can even compute it if they want to. They 
can probably work that out for themselves. But that is their 
business, not ours. Our job is to tell them what the RDF is supposed 
to be saying, and we should be careful to get that just right. A lot 
can turn on the difference between a numeral and a number. If an 
application wants to get them muddled, that is fine; but if that 
muddling causes a NASA rocket to miss an orbital rendezvous, I would 
like it to be very clear to the congressional committee that the 
fault lies in the application code, not in the RDF spec.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



