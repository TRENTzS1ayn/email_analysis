docno="lists-049-2870168"
received="Fri Apr 19 21:31:41 2002"
isoreceived="20020420013141"
sent="Fri, 19 Apr 2002 20:31:34 -0500"
isosent="20020420013134"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: A test case? [Re: Before we go on...]"
id="p05101501b8e6711559bc@[65.217.30.94]"
charset="us-ascii"
inreplyto="B8E5DD71.137DA%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org

>On 2002-04-19 13:23, "ext Brian McBride" <bwm@hplb.hpl.hp.com> wrote:
>
>>  ...  Is there an entailment test here?
>
>Here's mine.
>
>Given the following closure rules:
>
>.....
>
># Rule 4 (this is new)
>
>{
>    ?p rdfd:datatype ?d .
>    ?s ?p ?l .
>    ?l rdf:type rdfs:Literal
>}
>log:implies
>{
>    ?s ?p ?o.
>    ?o rdfd:lex ?l
>} .

I don't think rule 4 is valid. That is, Im not sure quite what
?l rdf:type rdfs:Literal .
is intended to convey, but if its supposed to say that the object of 
the previous triple is a literal, then the rule is not valid. Here's 
a counterexample:

Suppose IEXT(I(<ex:PPP>)) is the identity map. Then for example I satisfies

_:x <ex:PPP> "10" .
<ex:PPP> rdfd:datatype <xsd:integer> .

(map _:x to "10"; all literal strings are in the universe; "10" is in 
the lexical space of the datatype) but not

_:x <ex:PPP> "10" .
<ex:PPP> rdfd:datatype <xsd:integer> .
_:x <ex:PPP> _:y .
_:y rdfd:lex "10" .

since this requires _:y to denote an integer, and so requires 10 to 
equal "10" in that datatyped interpretation.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



