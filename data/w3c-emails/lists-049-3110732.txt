docno="lists-049-3110732"
received="Mon Apr 22 17:03:51 2002"
isoreceived="20020422210351"
sent="Mon, 22 Apr 2002 22:03:47 +0100"
isosent="20020422210347"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: addressing requirements around daml:collection (rdfms-seq-representation)"
id="14522.1019509427@tatooine.ilrt.bris.ac.uk"
inreplyto="connolly&#64;w3.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
cc:w3c-rdfcore-wg@w3.org, Lynn Andrea Stein<las@olin.edu>


>>>Dan Connolly said:

[Editing all to leave just your summary]

I'll comment on the syntax impact; which is primarily what concerns me


> * mint a new "end-marker" term

Low

> 
> * add a "count" property to bags.

Low; we already track that in the syntax data model


> * add a 'highest index' property to bags:

Low
(Mozilla actually uses this internally, if I recall correctly)

> Let's call that the first proposal... I dub it 'longhand-OK'.

Low

>   * add parseType="collection" to RDF/xml;
> 
>   * add rdf:first, rdf:rest, rdf:nil too.
> 
>   * specify that parseType="collection"
>   is notation for first/rest/nil triples
>   ala daml:collection.
> 
> Let's call that parse-collection-STD,

High - since this is new RDF/XML syntax.

It requires adding 4 terms but it is the parseType collection and the
complex triple generation that worries me.  It would need explaining
of how they work, new test cases and would probably be tricky.  How
does this relates to existing containers?  The answer would need
clear explanation.  Is this not a new container mechanism which we
decided not to do?

> ...
>  (does anybody in the WG know of anybody in
>   the general RDF implementation community
>   who hasn't already added support for daml:collection?)
> ...

Anyone who has implemented RDF M&S and no more will likely fail on
daml:collection.  That includes PRISM, Dublin Core, Mozilla and so
on.

It may be mature for a few parsers (mostly the Java ones), but not most.

> ...
> On balance, I prefer parse-collection-STD right now.
> But I need to sleep on it or something to be sure.
> Other thoughts? Lynn? Jos? DaveB?
> ...

I prefer the first three suggestions (no preference) since they would
not cause any significant delay to the document.  Adding substantial
new material like this collection stuff will require more time.

I feel like we should be very cautious adding changes late in the
(WG) day to RDF 1.0.  The changes we made have been out in the
RDF community for a while (namespace prefixes, aboutEach*).

--

With my implementor hat on; it won't take me long to handle this
since I already have a daml:collection implementation.

Dave



