docno="lists-049-3187786"
received="Mon Apr 22 18:51:42 2002"
isoreceived="20020422225142"
sent="22 Apr 2002 17:51:30 -0500"
isosent="20020422225130"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: addressing requirements around daml:collection  (rdfms-seq-representation)"
id="1019515900.4818.1161.camel@dirk"
inreplyto="p0510150bb8ea3bba9cfc&#64;[65.217.30.94]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>
Cc: Jos De_Roo<jos.deroo.jd@belgium.agfa.com>, Lynn Andrea Stein<las@olin.edu>,w3c-rdfcore-wg@w3.org


On Mon, 2002-04-22 at 17:35, Pat Hayes wrote:
> >[...]
> >
> >>  RDF/xml has special syntax for containers, but experience
> >>  trying to exploit it to come to intuitive conclusions
> >>  has exposed problems. Take the class above... say
> >>  Continent is the subject of that oneOf property.
> >>  If we know
> >>
> >>     ex:Bob daml:differentIndividualFrom ex:Eurasia.
> >>     ex:Bob daml:differentIndividualFrom ex:Africa.
> >>     ex:Bob daml:differentIndividualFrom ex:North_America.
> >>     ex:Bob daml:differentIndividualFrom ex:South_America.
> >>     ex:Bob daml:differentIndividualFrom ex:Australia.
> >>     ex:Bob daml:differentIndividualFrom ex:Antarctica.
> >>
> >>     ex:NotContinent daml:complementOf ex:Continent.
> >>
> >>  then we should be able to conclude
> >>
> >>     ex:Bob rdf:type ex:NotContinent.
> >>
> >>  Now this works perfectly well* when the oneOf claim
> >>  is spelled out long-hand using first/rest/nil.
> 
> [To Dan:]
> Well, that isn't clear.

Sigh... I should have known better than to make that claim
without working out the details...

> After all, it is RDF-legal to add some other 
> rest/first/rest chains to the same bnodes,

Well, first and rest are UniqueProperties.

i.e. if

:x ont:first :y.
and
:x ont:first :z.
then
:y ont:equivalentTo :z.

So if you add other first/rest chains, you claim
the relevant gizmos denote the same thing. If that's
not the case, you've contradicted yourself.

> so the daml:list is just 
> as dependent on a closed-world assumption

I don't see any closed world reasoning in saying
that first/rest are functional/unique properties.

> as the RDF container syntax 
> would be in this context. I bet that your (and Jos) code would break, 
> or act unpredictably, if given a branching daml:list.

Well, 'unpredictably' is probably a reasonable way to
characterize the behaviour of a prover when given
inconsistent input. But I don't see why this
case is special in that respect.


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



