docno="lists-049-3317284"
received="Tue Apr 23 20:11:05 2002"
isoreceived="20020424001105"
sent="Tue, 23 Apr 2002 17:41:49 -0500"
isosent="20020423224149"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: addressing requirements around daml:collection     (rdfms-seq-representation)"
id="p05101523b8eb92e4589a@[65.217.30.94]"
charset="us-ascii"
inreplyto="1019590849.5315.2668.camel&#64;dirk"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>On Tue, 2002-04-23 at 14:29, Pat Hayes wrote:
>>  >On Mon, 2002-04-22 at 17:35, Pat Hayes wrote:
>>  >>  >[...]
>
>>  >>  >>  Now this works perfectly well* when the oneOf claim
>>  >>  >>  is spelled out long-hand using first/rest/nil.
>>  >>
>>  >>  [To Dan:]
>>  >>  Well, that isn't clear.
>>  >
>>  >Sigh... I should have known better than to make that claim
>>  >without working out the details...
>>  >
>>  >>  After all, it is RDF-legal to add some other
>>  >>  rest/first/rest chains to the same bnodes,
>>  >
>>  >Well, first and rest are UniqueProperties.
>>
>>  There isn't any such notion in RDF.
>
>Not yet; but I say, again:
>
>|So the next proposal is:
>|
>|  * add parseType="collection" to RDF/xml;
>|
>|  * add rdf:first, rdf:rest, rdf:nil too.
>|
>|  * specify that parseType="collection"
>|
>|  is notation for first/rest/nil triples
>|  ala daml:collection.
>
>By 'ala daml:collection' I meant: including
>the fact that first/rest are functional.
>

Oh, I see.  But then that is a much bigger change/extension to RDF 
than it seems, since now RDF has a way to encode functional 
properties. That goes beyond just adding a different kind of 
container. I would like to explore what the other implications of 
that might be.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



