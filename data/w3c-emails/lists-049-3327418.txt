docno="lists-049-3327418"
received="Tue Apr 23 20:11:09 2002"
isoreceived="20020424001109"
sent="Tue, 23 Apr 2002 18:29:34 -0500"
isosent="20020423232934"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: suggested wording for removing weasels from MT"
id="p05101524b8eb9430a68a@[65.217.30.94]"
charset="us-ascii"
inreplyto="1019593164.5164.2759.camel&#64;dirk"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>On Tue, 2002-04-23 at 14:52, Pat Hayes wrote:
>>  >On Mon, 2002-04-22 at 16:58, Pat Hayes wrote:
>[...]
>>  >I'd really rather just take it out until we're more
>>  >clear about how to use the hook.
>>
>>  Well, I have to say something about what it means to 'assert' an RDF
>>  graph. The document already makes some vague noises about one graph
>>  being taken to include a merge of any other graphs that are thought
>>  to define its vocabulary,
>
>It does? Where did that come from?

Actually I think it is a leftover from some stuff in an earlier draft 
about social assumptions corresponding to a restriction on the set of 
allowable models.

>The nice thing about a model theory is that it *eliminates*
>things like vague noises. I hope we have no vague noises
>anywhere in the model theory spec.

The MT is very sharp about the *content* of what is asserted. It 
doesn't specify what counts as an assertion, and it can't specify 
that. For example, ever since the F2F in Sebastopol we have at times 
talked about what it would mean to use an RDF graph as a 'query' 
rather than an assertion. Same graph, same MT, but a different 
'speech act'. I think that the dark triples stuff belongs in the same 
category: its about counting some triples, but not others, as part of 
what is actually asserted. My only point is to say , as clearly as 
possible, that that issue is OUTSIDE the MT. Whatever gets asserted, 
the MT specifies its meaning: that's the job of an MT. However, it 
can't do everything.

>  > so it seemed harmless to add that some
>>  users might want a graph to assert *less* than is actually in it. I
>>  don't see this as a "hook", since it doesn't even hint at any way to
>>  implement or use this,
>
>
>No? I read it (and I think lots of other people would read it)
>as saying "well, you know those entialment tests? sometimes
>they work, but not always. It depends, really, on
>fuzzy stuff that we're waving our hands around but not
>actually specifying."

OK, It isn't meant to say that. I'll try to make the point more 
clearly. The notion of entailment is still sharp, and the entailment 
tests still talk about entailment and resolve those issues 
unambiguously. The issue is whether you are asserting the antecendent 
of the entailment or not. If you are, then the entailment tells you 
that you had better realize that you are also asserting the 
consequent. But that decision - whether or not you are asserting 
something - has to be decided by some criterion which is external to 
the MT itself. The very same entailment test can be read in the other 
direction as being about querying: if you query the consequent, that 
query could generate the antecedent as a query.

I know that you want it to be the case that all RDF is asserted, but 
that isn't how N3 or Euler or Wilbur or Drew's RDF reasoner, or even 
DAML+OIL (with the current semantics, anyway) operate, and I don't 
think there is any hope in hell of having it be the way that OWL will 
work. I just want to make sure that if some more sophisticated 
picture of RDF assertion is used, that isn't seen as breaking the MT.

>  > just an acknowledgement that people do
>>  sometimes do things like this (some of them people on the WG itself,
>>  in fact)
>
>For example?

See above. I was particularly thinking of Euler.

>
>>  and a warning that the scope of the MT should be adjusted
>>  accordingly whenever it is clear that this is being done.
>
>
>
>>   The only
>>  normative aspect of this is that the MT (now with no clauses in it
>>  about unasserted triples) defines the content of whatever is
>>  asserted; that is unambiguous and unqualified.
>
>Yes, and the syntax spec tells us the connection between
>a hunk of XML and what's asserted (i.e. a graph of asserted
>triples).

It tells us the connection between the XML and the graph, but it 
doesn't say under what circumstances either of them are being 
*asserted* (as opposed to, say, held up for inspection, questioned, 
queried, or just plain cited.) Nowhere in the spec., as far as I 
know, is it formally stated what counts as an *assertion* of any RDF. 
The issue doesn't arise for XML because there is no notion of 
entailment in XML, so if 'assert' means anything at all (doubtful in 
XML) then its pretty much the same as 'publish'. RDF can't be that 
simple, because any app has to be able to decide which way it is 
looking at the entailment arrow. Is it using this RDF to draw 
conclusions from, or is it trying to establish it as a conclusion 
from something else?

>I want to make sure that the connection between
>RDF/XML and the various entailments is rock solid, with no
>weasel words in between.

Right, I want to get all the weasel wording out of the formal spec, 
that was part of what I was trying to do.

>  > It relegates the whole
>>  'dark triples' issue to an area where the RDF spec is already vague
>>  in any case (what counts as an 'assertion' of RDF content, in
>>  general?)
>
>That's not vague at all, to me. If you think it's vague
>in some way, please give me an example so that we can
>put it in the test suite to make it crystal clear.

Its vague in the sense that people use RDF in other ways which are 
consistent with the MT and the rest of the spec. Any RDF that appears 
on the sharp end of a rule in Stefan's RDF reasoning engine isn't 
being asserted. If we ever finish defining the DAML query language, 
and if someone encodes it into RDF, then that RDF won't be being 
asserted.  Anyone who takes two pieces of RDF and tries to see if one 
of them entails the other, is not using the second one as an 
assertion. Not all of RDF is at the blunt end of an entailment arrow.

I don't think the test suite would help. Any syntactic test would 
apply to assertions and queries equally well, and entailment tests 
can be read either way round.

>  > thus rendering it relatively harmless; but in any case,
>>  that is where it belongs, rather than in the MT.
>>
>>  Pat
>>
>>  PS. I wonder why you are being so stern about this issue, Dan, since
>>  being utterly rigid about RDF meaning being *exactly* fitted to RDF
>>  graphs is about the only position that will guarantee that RDF will
>>  be unusable as a foundation for the SW.
>
>I accept that as your opinion. I disagree.
>
>On the contrary: without a solid mathematical basis for RDF,
>it has no role to play in building the Semantic Web.

Im not wanting to weaken its solid mathematical base. On the 
contrary, I'd like it to have a much solider one. It ought to have a 
solid notion of proof, based on something like Gentzen tableaux. Then 
these distinctions between assertions and queries would be quite 
clear and unambiguous. As things stand, its just a notation for 
expressing content, and it has no way to make distinctions like 
assert/query/include as subexpression; so those distinctions have to 
come from outside, or from notational extensions (eg in various rule 
languages which extend RDF).

>I could be wrong. If so, I'd like to find out sooner rather
>than later.
>
>If being clear about what RDF is makes it clear that it's useless,

What I meant was that being very strict about having every triple 
always asserted was a way to make it (not useless, but) unusable as a 
foundation for other languages.

>I'd prefer that to weasel words that allow everybody to be
>happy when nobody actually agrees as to what's going on.
>
>
>>  I'm trying hard here to find
>>  a way to make Tim's layer-cake diagram work, and you seem determined
>>  to sabotage it.
>
>I prefer to resolve conflicts at the earliest possible opportunity.
>If the layer cake goes up in smoke as a result of being clear
>what a hunk of RDF/XML means, then so be it.

No, we can be clear. We just have to be a bit more flexible, is all. 
We need a way to include structure without asserting it. Its not 
rocket science, but it does need something with just a whiff more 
structure than a simple bag of triples. When we finally get around to 
doing this, which is bound to happen eventually, I don't want to 
spend nine months on another working group explaining to everyone why 
it is that the MT doesn't need to be completely rewritten now that 
not all triples are asserted.

>Let's do that
>quickly so we can get on with something else.

Well, amen to that.

Pat

PS, 'query' in the above might be misleading, I don't mean that in 
the SQL sense, but in the sense of Prolog 'goal', ie the thing being 
proven.

-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



