docno="lists-049-3737667"
received="Thu Apr 25 09:26:41 2002"
isoreceived="20020425132641"
sent="Thu, 25 Apr 2002 10:56:11 +0100"
isosent="20020425095611"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="daml:collection"
id="5.1.0.14.0.20020425104535.033cd0f0@0-mail-1.hpl.hp.com"
charset="us-ascii"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>

I've been catching up on the daml:collection discussion.  Thank you DanC for

   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0334.html

I don't follow the reasons for:

   [[* add a 'highest index' property to bags:
it tells you the highest index that's used
to relate a collection to one of its members.
This is only slightly better than a "count" property,
to my mind.
]]

You reject the count property on the grounds of arithmetic and 
comparison.  RDF must already have the concept of equality of properties 
and ordering of the ordinal properties.  I don't see that this proposal 
requires any more than that.

It seems to me, that if we are closing RDF's current containers, then this 
is the front running option.  I'm a wee bit nervous that it introduces 
something close to negation by the back door though.  Pat?

The alternative is that the owl folks use daml collection.  They can do 
that without  any help from us, just as the daml folks did.  Daml was quite 
happy to define daml:collection as an extension to RDF.  All that is needed 
is a preprocessor to turn it into legal RDF.  Such a preprocessor may be 
built into an RDF parser, but that is an implementation matter.

Between these two choices, should we ask the customer which they prefer?

Brian



