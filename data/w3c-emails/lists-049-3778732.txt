docno="lists-049-3778732"
received="Thu Apr 25 10:36:50 2002"
isoreceived="20020425143650"
sent="Thu, 25 Apr 2002 09:36:58 -0500"
isosent="20020425143658"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: provisional new MT draft"
id="p05101547b8edc341a97b@[65.217.30.94]"
charset="us-ascii"
inreplyto="Pine.GSO.4.44.0204251018390.23534-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To: Jan Grant<Jan.Grant@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org

>On Wed, 24 Apr 2002, Pat Hayes wrote:
>
>>  An incomplete but readable draft of the MT with containers and
>>  reification added and tidy literals can be found at
>>  http://www.coginst.uwf.edu/~phayes/w3-rdf-mt-draft-42402.html.  @@
>>  indicates comments or work to be done. I know it is scruffy, bear
>>  with me.
>
>Frivolous comment: I used to have a somwhat unflattering nickname
>("weasel")*, so to read of their demise was quite a blow :-)
>
>Anyroadup: I was thinking about this yesterday when sketching out a
>separate unix-style filter to output the rdf(s)-closure of an ntriples
>document.
>
>However, it is easy to see that the rules will indeed terminate
>on any finite RDF graph, since there are only finitely many
>triples that can be formed from a given finite vocabulary.
>
>Unfortunately, this isn't true when you include closure rules for RDF
>containers

Yes, I know. I am worrying about that right now.

>- since any graph presumaby entails (for example)
>
><rdf:_n> <rdf:type> <rdf:Property>

also <rdf:_n> <rdfs:subPropertyOf> <rdf:memberOf>
and maybe a few others, I'm working on it.

>for any value of n in <rdf:_n>. It's simple to say "throw in all of
>these" (I'd be happy with this) but a naive approach to implementing
>Pat's closure rules will take a looooong time :-)

Or, you could say, add only the ones that have been mentioned in the 
graph. Entailment will still work but will have to be stated more 
carefully. Its a bit yucky either way, but that's the cost of 
defining an infinite vocabulary.

Im inclined to go with the 'throw in all' partly because it really 
does make it clear that these rules aren't meant to be RUN, which I 
tried to emphasize in the text. Infinite forward branching is fine if 
you run the rules backwards, for example. The above comment about 
termination is potentially misleading in this regard, I now see.

>
>jan
>
>PS. This isn't too much of a hardship for pure entailment tests, since
>there's an obvious getout.
>
>* got it off a guy named "Womble", go figure.

When I was at school they called me 'misty' (Pun on 'hayes/haze', but 
I think it really meant that I wasn't all there.)

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



