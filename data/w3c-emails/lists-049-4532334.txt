docno="lists-049-4532334"
received="Mon Apr 29 09:58:32 2002"
isoreceived="20020429135832"
sent="Mon, 29 Apr 2002 15:07:00 +0100"
isosent="20020429140700"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="Reviewing Model Theory"
id="5.1.0.14.2.20020429135031.00abb2f0@joy.songbird.com"
charset="us-ascii"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>, RDF core WG<w3c-rdfcore-wg@w3.org>

Looking at:

http://www.coginst.uwf.edu/~phayes/w3-rdf-mt-draft-42402.html

I think the changes are all improvements, and that this can be published as 
a revised WD.  My comments below could be treated as comments to the 
published WD.

--

Section 3
---------

[[
IP contains   I(rdf:type)

if x is in IP then IEXT(I(rdf:type)) contains <x, I(rdf:Property)>

This forces every rdf interpretation to contain a thing which can be 
interpreted as the 'type' of properties. (The second condition could be 
regarded as defining IP to be the set of resources in the universe of the 
interpretation which have the value I(rdf:Property) of the property 
I(rdf:type). This way of construing subsets of the universe will be central 
in interpretations of RDFS.)
]]

I'm wondering if the above shouldn't read:
[[
x is in IP  iff IEXT(I(rdf:type)) contains <x, I(rdf:Property)>
]]

Otherwise, does "defining IP to be the set of resources in the universe of 
the interpretation which have the value I(rdf:Property) of the property 
I(rdf:type)" work as claimed.

if we have
   (x in IP) => (IEXT(I(rdf:type)) contains <x, I(rdf:Property)>)
then we know that if some x' is not in IEXT(I(rdf:type)) then it's not in 
IP, but we don't know that every x' in IEXT(I(rdf:type)) is also in IP, 
which seems to be needed if this is to be regarded as defining IP.


Section 5.1
-----------

When talking about reification, I sometimes describe the node of type 
rdf:Statement (your '@@@' the "subject of the reification".

When you say:
[[
Formally, <x,y> is in IEXT(I(rdf:subject)) just when x is an occurence of 
an RDF triple with the form

aaa bbb ccc .
]]

I think it might be important to be clear that the triple (aaa bbb ccc .) 
exists in the domain of interpretation, and not necessarily in the graph; e.g.
[[
Formally, <x,y> is in IEXT(I(rdf:subject)) just when x is an occurence in 
the domain of interpretation (IR) of an RDF triple with the form

aaa bbb ccc .

NOTE: there is no implication here that the triple occurs in the graph that 
contains the reification, just that it exists in the domain of intertpretation.
]]

(Hmmm that's a bit repetitious... was trying to be emphatic.)

This bit didn't make sense to me:
[[
Notice that this condition involves a two-stage interpretation process: we 
have to interpret the subject of the triples in the reification to refer to 
another triple, then treat that triple as RDF syntax and apply the 
interpretation mapping again to get to the referent of the object.
]]
I don't see that there is any need to interpret the triple that is 
referenced -- according to the theory, that interpretation would be just 
true or false, no?

(Otherwise, I found the treatment of reification was very helpful.)


Section 5.2
-----------

I can't remember -- did we agree to drop the rdf:Alt container?

Do we mean to say anything about the truth or falsity of a graph like this:

_:xxx <rdf:type> <rdf:Bag> .
_:xxx <rdf:_1> <ex:a> .
_:xxx <rdf:_1> <ex:b> .

?


Section 6
---------
Should the definition of IP contents also include rdf:memberOf, etc.?

Similarly, IC for rdfs:Container, rdf:Bag, rdfg:Seq, 
rdfs:ContainerMembershipProperty?

Also, I think rdfs:Container and rdfs:ContainerMembershipProperty should be 
in rdfsV.

Further, although rdfs:seeAlso, rdfs:isDefinedBy, rdfs:comment and 
rdfs:label are omitted, should they mentioned to the extent that they exist 
as vocabulary, and to specify their appearance in the extension of 
rdfs:domain and rdfs:range?

(This last point actually arises indirectly from a real-world concern:  is 
it appropriate to use rdfs:label and rdfs:comment to annotate non-schema 
resources?  It is, at least, useful to know about their domain and 
range.  Maybe this matter should be dealt with in the RDF schema doc rather 
than here?)

Literals:  as far as I can tell, you have been very careful to be 
non-committal about whether rdfs:Literal and rdfs:Resource are disjoint 
classes, or have I missed something.  It might be helpful to say something 
explicit here.

(Test case:  is the following satisfiable:
    _:x rdf:type rdfs:Resource .
    _:x rdf:type rdfs:Literal .
?)

#g
--



-------------------
Graham Klyne
<GK@NineByNine.org>



