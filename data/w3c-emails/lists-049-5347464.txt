docno="lists-049-5347464"
received="Thu Aug  1 17:12:01 2002"
isoreceived="20020801211201"
sent="Thu, 01 Aug 2002 22:29:31 +0100"
isosent="20020801212931"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: xml.com piece on XML Schema datatypes"
id="5.1.0.14.2.20020801221855.03bb4010@127.0.0.1"
charset="us-ascii"
inreplyto="Pine.LNX.4.30.0208011642050.1842-100000&#64;tux.w3.org"
expires="-1"


To: Dan Brickley<danbri@w3.org>
Cc:<w3c-rdfcore-wg@w3.org>


At 04:49 PM 8/1/02 -0400, Dan Brickley wrote:
>Since we're supposed to be hooking RDF up to XML Schema datatypes, it's
>probably worth taking a look at feedback ...

>http://www.xml.com/lpt/a/2002/07/31/wxstypes.html

The bit which particularly struck a chord with me was this:

[[
In XML, everything is a string. Since XML contains text, everything is, by 
definition, expressible as a string. If we take this as fundamental, then 
every type in XML is simply a string with certain patterning constraints.
]]

This is a position which may be defensible in the world of XML, which is 
very much concerned with a text-based syntax.  But I think that RDF needs 
to be able to break free from the constraints of textually based data 
definitions.

My own particular pet peeve with XML schema datatypes is the lack of a 
rational number primitive (my comment was submitted to, considered and 
rejected by XML schema WG).  To my view, this should be the concept from 
which all other numeric data types are derived, by restriction.  (All 
schemes for representing numbers in a computer that I'm aware of represent 
rational numbers only.)

I've no objection that RDF should be able to use XML schema datatypes, but 
I already know of applications where they aren't enough.  CONNEG uses 
rational numbers, and we're working to make CONNEG vocabulary accessible to 
CC/PP.

#g


-------------------
Graham Klyne
<GK@NineByNine.org>



