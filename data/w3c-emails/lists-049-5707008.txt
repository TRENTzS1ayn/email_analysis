docno="lists-049-5707008"
received="Tue Aug  6 03:22:29 2002"
isoreceived="20020806072229"
sent="Tue, 06 Aug 2002 10:22:21 +0300"
isosent="20020806072221"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: toward a minimal datatypes spec: hmm..."
id="B97553DD.1997E%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="1028296026.28231.216.camel&#64;dirk"
expires="-1"

To: Dan Connolly<connolly@w3.org>, Graham Klyne<Graham.Klyne@mimesweeper.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>



On 2002-08-02 16:47, "ext Dan Connolly" <connolly@w3.org> wrote:


>>     :Jenny :age _:x .
>>     _:x :integer "10" .
>> ...
> 
> But are there *any* consequences to this convention?
> 
>> The tough question, I think, is whether we need to commit to tidy literals
>> throughout at this time,
> 
> I find that question easy to answer, in the affirmative.

In Cannes, I proposed that if we could have tidy syntax with untidy
semantics, via the closure rule

IF
   :s :p "LLL" .
   :p rdfs:range :d .
   :d rdf:type rdfs:Datatype .
THEN
   :s :p :x .
   :x :d "LLL" .

but I recall that someone pointed out a potential for
contradiction (Jos?)

If I've understood Dan correctly, this is essentially what he
is proposing. Right?

If we could have this kind of entailment, so that the inline
idiom with a range constrained property is indirectly communicating
a datatype value for that property to the application, I'm fine
with that. It's not as clean a solution to untidy literals, but
it still accomodates the untidy semantics inherent in literals
(which are not global constants, or else they'd serve the same
purpose as URIs).

Patrick


--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



