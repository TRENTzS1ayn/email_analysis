docno="lists-049-6196007"
received="Thu Aug  8 11:25:32 2002"
isoreceived="20020808152532"
sent="Thu, 08 Aug 2002 17:21:32 +0200"
isosent="20020808152132"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="Re: XML Schema is untidy (was RE: type test case)"
id="3D528C7C.5070801@db.stanford.edu"
charset="us-ascii"
inreplyto="A03E60B17132A84F9B4BB5EEDE57957B5FBA7A&#64;trebe006.NOE.Nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
CC:jos.deroo.jd@belgium.agfa.com,Graham.Klyne@MIMEsweeper.com,jjc@hplb.hpl.hp.com,w3c-rdfcore-wg@w3.org


Patrick.Stickler@nokia.com wrote:

> ...
> Secondly, I was pointing out that XML Schema has untidy
> semantics with regards to lexical forms of datatype
> values -- and provides both global and local mechanisms
> for associating a datatype with that lexical form for
> interpretation.


XML Schema is stuck with Unicode strings in the DOM model. RDF abstract 
model can use other kinds of constants, e.g., binary objects. In fact, 
the new proposal is more reminiscent to how datatyping is done in 
programming languages like Java/C rather than XML Schema. For example, 
in these languages, built-in datatypes like numbers, strings or unicode 
characters have distinct syntactic representation, i.e., 5, '5', "5", 5d 
, and (float)5 denote five different things.


 > ...

> Some comments on Dan's NTriples examples:
> 
> 1. The triple
> 
>   :jenny :age 10.
> 
> suggests that numerical values are native to RDF (i.e. a
> new node type) which must be understood by all
> RDF parsers and applications. RDF has no native
> datatypes, and I've understood it to be WG
> consensus that RDF would be datatype and datatype
> framework neutral.


RDF defines an abstract syntax (graph) and several concrete syntaxes.
In the new proposal, the abstract syntax is datatype neutral. The 
concrete syntaxes do need to worry about the encoding of typed values.


Sergey



