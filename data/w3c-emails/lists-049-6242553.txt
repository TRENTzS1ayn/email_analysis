docno="lists-049-6242553"
received="Thu Aug  8 12:35:49 2002"
isoreceived="20020808163549"
sent="Thu, 08 Aug 2002 18:35:42 +0200"
isosent="20020808163542"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="new datatyping proposal consistent with OMG's MOF"
id="3D529DDE.6040707@db.stanford.edu"
charset="us-ascii"
inreplyto="3D525074.9030200&#64;db.stanford.edu"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>


I just reviewed OMG's MOF 1.4 standard (to remind, basically MOF is a 
kind of abstract syntax used for representing and manipulating UML 
artifacts. MOF is the counterpart of RDF in the UML world):

http://www.omg.org/cgi-bin/doc?formal/2002-04-03

The new datatyping proposal seems consistent with the way how primitive 
datatypes are introduced in MOF. See Sec. 2.3.5, p. 2-14 for details. In 
particular,

"MOF defines six standard data types that are suitable for technology 
neutral metamodeling. (Other primitive datatypes can be defined by 
specific technology mappings or as user or vendor-specific extensions. 
However, the core MOF specification says nothing about what they mean)."

Those primitive datatypes are boolean, integer, long, float, double, and 
unicode string.

MOF is an industry standard that has been around for years. If we choose 
a similar path, we are likely to be on the safe side. Moreover, a 
similar treatment of datatypes in RDF will facilitate the alignment of 
MOF and RDF (see 
http://lists.w3.org/Archives/Public/www-webont-wg/2002Aug/0042.html for 
details).

Sergey



