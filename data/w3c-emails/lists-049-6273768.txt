docno="lists-049-6273768"
received="Fri Aug  9 06:42:37 2002"
isoreceived="20020809104237"
sent="Wed, 7 Aug 2002 14:42:31 +0300"
isosent="20020807114231"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: What the #&#64;&amp;*$(!&#64; is going on here?! (was RE: N-Triples for           proposed xsi:type [was Re: xsi:type test case ]"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBA71@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="What the #&#64;&amp;*$(!&#64; is going on here?! (was RE: N-Triples for           proposed xsi:type [was Re: xsi:type test case ]"
expires="-1"


To:<dave.beckett@bristol.ac.uk>
Cc:<w3c-rdfcore-wg@w3.org>,<Graham.Klyne@MIMEsweeper.com>,<jjc@hplb.hpl.hp.com>




> -----Original Message-----
> From: ext Dave Beckett [mailto:dave.beckett@bristol.ac.uk]
> Sent: 07 August, 2002 14:08
> To: Stickler Patrick (NRC/Tampere)
> Cc: w3c-rdfcore-wg; Graham.Klyne; jjc
> Subject: Re: What the #@&*$(!@ is going on here?! (was RE: 
> N-Triples for
> proposed xsi:type [was Re: xsi:type test case ] 
> 
> 
> 
> >>>"Patrick.Stickler" said:
> > [lots]
> 
> Don't read into a proposed N-Triples syntax change more than I wrote.
> I could have put it has datatype(decimal, "2.0") or somesuch.
> Specifically don't read that as qnames but evocative of how XSD is
> used in XML; similar how the xsi:type is being used in this RDF/XML -
> a special attribute.
> 
> But I'm still waiting for the triples for these RDF/XML + xsi:type
> examples.  Which is hard to do if they have no n-triples syntax.
> I'll create a better N-triples if needed when I'm clear what (if
> anything) has changed in the graph.  Catch 22.
> 
> Dave

I see two things being proposed here:

1. a change to the local idiom which uses xsi:type instead
   of the datatype property

To that, I would simply say, if we are going to use any
such idiom, we should use rdf:type. Unless the MT is going
to define how the RDF type system and the XML Schema type
system interrelate, I hardly see the justification for
using external vocabulary when there exists RDF vocabulary
that will do the job.

I.e. if you plan to map

   <ex:foo xsi:type="xsd:integer">10</ex:foo>

to

   [] ex:foo (xsd:integer)"10" .

or 

   [] ex:foo _:x .
   _:x xsd:integer "10" .

where one can infer that

   (xsd:integer)"10" rdf:type xsd:integer .

or 

   _:x rdf:type xsd:integer .

then why not just say

   <ex:foo rdf:type="xsd:integer">10</ex:foo>

???

Surely that is far clearer, cleaner, and more intuitive.

Why bring xsi:type into the mix?! RDF applications are not
operating on XML, they're operating the graph. If xsi:type
is not going to be carried over as a term into the graph,
there is no reason to use it.

Also, see my questions about RDF extending the semantics
and usage of xsi:type with regards to non-XML Schema
datatypes.

What does it mean if one says

   <ex:foo xsi:type="foo:blarg">10</ex:foo>

where "foo:blarg" is not defined by an XML Schema?! What
if its definition violates constraints/requirements
imposed by XML Schema? Can an RDF application assume that
it does not?

2. There is a proposal to make typed literals (i.e. TDLs)
atomic components of the graph syntax, along with 
URIrefs, bnodes, and literals. 

Well, it's pretty late in the game to start reworking
the plumbing of the RDF graph, eh? If we can make such
radical changes to the graph syntax, then let's get
literals as subjects -- which would allow us to have
a much cleaner solution for local datatyping -- namely
just using rdf:type as for any other kind of RDF typing.

It seems to me that we've run off the road and down
a cliff insofar as the process of concensus on 
datatyping is concerned...

(hmmm... maybe that was the point...)

Patrick



