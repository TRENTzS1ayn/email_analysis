docno="lists-049-6512272"
received="Fri Aug  9 12:56:09 2002"
isoreceived="20020809165609"
sent="Fri, 9 Aug 2002 12:56:08 -0400 (EDT)"
isosent="20020809165608"
name="Dan Brickley"
email="danbri@w3.org"
subject="RDF datatyping: retro chic / progress report"
id="Pine.LNX.4.30.0208091240260.29222-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>




Thought this might be of historical interest. And perhaps motivate some
closure. It's over four years since we first published a W3C WD discussing
RDF datatyping. I don't intend to be still doing this in another four
years. I don't think any of us should. We need to get something simple and
useful out the door, and worry about elaborations later...

The amount of telecon time we have left to work on datatype-related issues
is best counted in minutes not years. I'm encouraged by the recent turn of
discussions as it holds out some hope for modest but useful progress over
RDF'98. Time will tell...

Dan



From http://www.w3.org/TR/1998/WD-rdf-schema-19980409/

W3C Working Draft 9 April 1998
Editors:
Dan Brickley, University of Bristol
R.V. Guha, Netscape
Andrew Layman,  Microsoft

[[
Open Issue C.21. Interactions with External Type Systems

The RDF Schema mechanism defines a basic type system. It was not developed
to provide every imaginable capability. Instead, in the interests of
simplicity and performance, it will be only as expressive as needed to
meet the requirements of PICS. (Support for PICS generic capability, which
we expect to be in the next public release of this document, will provide
enough sophistication for most applications).

The RDF Schema mechanism will need to interact with many externally
developed typing systems. There are two broad categories of such systems.
The first are externally defined "primitive data types", such as IEEE
floating point numbers, Integers, Boolean values, Dates and Times, etc.
The second category are external "type systems", which provide features
such as inheritance, type inferencing, etc.

At this time we have not even begun to consider the second category.
Several factors make it difficult to decide on the appropriate
interactions with the first category. RDF models are exchanged as XML
document instances. The XML Working group has expressed an interest in
working on the problem of data typing, to provide the ability to specify
that element content should be interpreted as an integer, a date, a float,
left as a string, etc. The interactions between data typing efforts in XML
and RDF is currently being discussed by the W3 staff, so this document
does not provide a specification for those interactions that is as firm as
the specification for elements such as RDFS:Class, RDFS:subClassOf, etc.

However, it is the rough consensus of the RDF Schema WG that it would be
useful to show that the current schema system can actually accommodate
externally defined primitive data types. Therefore, figure 1, and the
relevant portion of the text of the specification, was modified to give a
provisional indication of how external types might be handled. The reader
is advised that those portions of the specification are highly subject to
change, even more so than the rest of this specification. All of those
sections have been explicitly marked to refer to this open issue.
]]


From 2.1 The Type System [[
 We anticipate the development of a set of classes corresponding to a set
 of "datatypes." This paper does not define datatypes, but does note that
 datatypes may be used as the value of the RDFS:range property.
]]



