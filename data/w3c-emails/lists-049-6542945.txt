docno="lists-049-6542945"
received="Fri Aug  9 13:32:18 2002"
isoreceived="20020809173218"
sent="Fri, 9 Aug 2002 20:32:15 +0300"
isosent="20020809173215"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="The latest proposal ++&ndash;&ndash;"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBA83@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
expires="-1"


To:<w3c-rdfcore-wg@w3.org>



I would like to put on the table a slight extension to
and restriction of the latest proposal for a single node
local datatyping idiom, which embrases global/implicit
datatyping and datatyping ranges.

I'm hoping this may in fact reflect an intersection of
the WG concensus of late and from the stake in the ground.

Delete it at will...

--

Core:

   Datatypes are denoted by URIrefs and belong to the RDF
   Class rdfs:Datatype.

   Datatypes have a lexical space, value space, and N:1 mapping
   from lexical to value space, all of which are opaque at
   the RDF level 

   The RDF Class extension of a datatype is its value space.

   Any arbitrary datatype which satisfies the above is an 
   acceptable datatype for use with RDF.

Local/Explicit Datatyping:

   A new graph node type is introduced, constituting a datatyped
   lexical form, which is the pairing of the URI denoting
   the datatype and a string corresponding to a member of
   the lexical space of that datatype.

   This new node type is not the same as a literal node.

   This new node type is tidy, and has globally unambiguous
   and consistent semantics. It is analogous to a URIref
   node, except that the structure is not opaque to RDF,
   and the fact that it is not opaque allows closure rules
   to relate the local and global datatyping mechanisms
   as well as integrate it with rdfs:range.

   The RDF/XML representation for a datatyped literal 
   corresponds to

   <some:Property rdf:type="&datatypeURI;">&lexicalForm;</some:Property>

   The value of the rdf:type attribute is a URIref.

   The graph representation for a datatyped literal is a 
   single node with a label consisting of the datatype
   URI followed by the lexical form, represented in 
   NTriples as something akin to

   <datatypeURI>"lexicalForm"

   or alternately using a QName as in

   some:datatype"lexicalForm"

   (note that this is simply the concatenation of the
    representation for a URI and qname with that of
    a non-datatyped literal)

   The following closure rule is defined:

   IF
      <datatypeURI>"lexicalForm" .
   THEN
      <datatypeURI>"lexicalForm" rdf:type <datatypeURI> .

   This captures the semantics expressed in the RDF/XML
   and inherent in the semantics of datatypes as defined
   above, as the datatyped literal node denotes the
   datatype value, and the class extension of a datatype
   is its value space, thus any datatyped literal node
   has an rdf:type of the datatype itself.

Global/Implicit Datatyping:

   Literal nodes are untidy, syntactically and semantically,
   and denote (possibly underdefined) datatype values. Those
   values may be, in the most general case, simply strings,
   though in the absence of any datatyping information, this
   can not be determined.

   The rdfs:range constraint is used to assert the datatype
   of non-datatyped literal nodes, as well as to assert the
   expected/required datatype of datatyped literal nodes.

   The following closure rule is defined:

   IF
      ?s ?p "LLL" .
      ?p rdfs:range ?d .
      ?d rdf:type rdfs:Datatype .
   THEN
      ?s ?p ?d"LLL" .

   This equates the global/implicit and local/explicit datatyping
   mechanisms.

--

Thus, to give a concrete example with interpretation,
both of the following state that Jenny's age is the
integer ten:

   Jenny age "10" .
   age rdfs:range xsd:integer .

   Jenny age xsd:integer"10" .

The following is undefined insofar as what "10"
denotes:

   Bob age "32" .

and is analogous semantically to

   Bob age _:x .

--

This modified/extended/constrained variant of Guha and Sergey's
proposal

1. has no triple bloat, having a single node for both local/explicit
   and global/implicit datatyping

2. is fully extensible, since any arbitrary datatype which has
   URI denotation and conforms to the minimal characteristics
   defined above can be used (including binary objects with
   e.g. base64 lexical encoding)

3. provides for full and intuitive integration with current
   rdfs:range semantics

4. does not require any specialized URI scheme

5. reflects current practice, both RDF and XML Schema, with
   regards to global/implicit typing

That's it. Have a nice weekend.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com
 



