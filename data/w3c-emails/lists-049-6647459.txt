docno="lists-049-6647459"
received="Mon Aug 12 06:18:43 2002"
isoreceived="20020812101843"
sent="Mon, 12 Aug 2002 12:18:34 +0200"
isosent="20020812101834"
name="Sergey Melnik"
email="melnik@db.stanford.edu"
subject="Any use cases for untidy literals except long range datatyping?"
id="3D578B7A.3080501@db.stanford.edu"
charset="us-ascii"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>, pat hayes<phayes@ai.uwf.edu>,Patrick.Stickler@nokia.com


I'd like to restate the questions, which Jan raised recently, more 
explicitly.

Much of the ongoing discussion about tidy/untidy literals amounts to 
arguing about different readings of a given piece of RDF/XML or NTriples 
syntax. From what I can tell, both tidy and untidy literals are 
implementable, so we have to pick one and wrap up.

To my knowledge, untidy literals have been first suggested in the 
context of long range datatyping (aka implicit/global idiom). 
Specifically, untidy literals provide a shortcut for using a bNode with 
a property (two triples are essentially merged into one).

Is this shortcut so fundamental that there is value of making it part of 
the spec?

Is there an appealing use case for untidy literals that is not long 
range datatyping (aka implicit/global idiom)?

Are we closing off any important extensibility paths if we go for tidy 
literals?

Sergey



