docno="lists-049-6852277"
received="Fri Aug 16 02:49:38 2002"
isoreceived="20020816064938"
sent="Fri, 16 Aug 2002 09:49:31 +0300"
isosent="20020816064931"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Syntax-level typing (was Re: A data typing proposal)"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBA8B@trebe006.NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Syntax-level typing (was Re: A data typing proposal)"
expires="-1"


To:<connolly@w3.org>
Cc:<melnik@db.stanford.edu>,<guha@guha.com>,<w3c-rdfcore-wg@w3.org>




> -----Original Message-----
> From: ext Dan Connolly [mailto:connolly@w3.org]
> Sent: 15 August, 2002 22:24
> To: Stickler Patrick (NRC/Tampere)
> Cc: melnik@db.stanford.edu; R.V.Guha; w3c-rdfcore-wg@w3.org
> Subject: RE: Syntax-level typing (was Re: A data typing proposal)
> 
> 
> On Wed, 2002-08-07 at 02:59, Patrick.Stickler@nokia.com wrote:
> > 
> > > > And it requires no changes to RDF whatsoever. Just use a 
> > > URI to denote
> > > > the typed literal which denotes the value in question. Done.
> > > 
> > > ... It's critical that these expressions
> > > act like literals in the model theory. 
> > 
> > EH? They're URI denoted resources. Not literals.
> 
> Your 7Aug message was in reply to a proposal in
> which they *are* literals; you suggested
> that this proposal was the same as your val:
> proposal, and I was pointing out a difference.
>
> Yes, in your val: proposal they're URI denoted resources.
> But not in the syntax-level typing proposal.
> http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Aug/0012.html


Well, I can see where the disconnect may have occurred.
What I was trying to communicate was that "10" and
xsd:integer"10" should not be treated as the same
thing, whatever they are called, because one is
ambiguous and the other is not.

Even though xsd:integer"10" is not a URI, it shares the 
same characteristics of tidyness, having globally unambiguous
and consistent meaning.

Yes, I appreciate that some, like yourself, ascribe such
characteristics to "10" as well, but that is not a point
of concensus.

> > In fact, what is being proposed is a fourth atomic graph 
> > component, in addition to URIrefs, bnodes, and literals -- which 
> > is a TDL!!! a Typed Data Literal -- and which unambiguously 
> > denotes a datatype value.
> > 
> > Kriminy!
> > 
> > You simply can't treat literals as global constants. They
> > are contextual. 
> 
> I accept that as your opinion.
> I disagree.
> 
> In my opinion, RDF literals have always had the
> property that if they look the same, they denote
> the same thing, and if they look different
> (modulo a few things like &#65; vs A),
> they denote different things.

Well, I don't see how that bears out in practice, in RDF
applications, which apply different interpretations to
the same literal string based on content.

> In my opinion, RDF has always had string literals and
> XML infoitem literals.

As I see it, literals in RDF were simply a way to capture
raw data that would be interpreted and utilized by higher
level applications, and has said *nothing* whatsoever about
the meaning or global consistency of meaning of such literal
strings. In fact, if you look at the examples in the original 
specs, it is fairly evident, IMO, that "Ora Lassila" is meant 
to denote the person, just as much as the blank node is meant to
denote him. Of course, not having a MT it is hard to argue
religiously about that, but I think that your view is not the
most obvious or most widely held.

Yes, your applications have presumed that literals constitute 
global constants, but that is not asserted by the majority of
applications that I am aware of, nor IMO by 
the RDF specifications.

Finally, if one looks at two significant cases, XML (Schema)
and CC/PP, both assert that inlined, implicitly typed (via
properties/elements) literals denote actual datatype values,
insofar as the application is concerned. If "10" in
the following XML

   <age>10</age>

given 

   <xsd:element name="age" type="xsd:integer"/>

did not denote an integer, then alot of application developers
who are eating this XML are going to be rather upset.

The same, I think, will be true for RDF, if/when we have
the analogous case

   <rdf:Description rdf:about="...">
      <age>10</age>
   </rdf:Description>

   <rdf:Description rdf:about="#age">
      <rdfs:range rdf:resource="&xsd;integer"/>
   </rdf:Description>

So, while you are certainly free to stick to your assertion
that untyped literals are global constants, that does not
appear to be how most folks see it.

Making literals tidy at the RDF MT layer conflicts with 
this broader perception of literals denoting values, not
strings (other than the trivial cases where the datatype
is in fact xsd:string or similar), and to that end, untyped
literals have untidy semantics, and both the MT and abstract
syntax should reflect that.

I appreciate that it really sucks if you would have to overhaul
all your applications in the advent of untidy literals, but
surely that is a short term and limited inconvenience and not
worth forcing the rest of the RDF world to continue down a
path that doesn't coincide with actual application semantics
and the intent and expectations of the users.

> In my opinion, what is bein proposes is that
> RDF have integer literals, along with string
> literals and XML infoitem literals.

Well, I know that was one of the proposals, but I
don't think that was what Sergey's summary proposed
(or then I *really* missed it).  What I understood was
being proposed was simply a syntactic change to the
representation in both the XML and graph syntax, where instead of
having a bnode, a datatype property arc, and a literal
denoting the lexical form, we'd have a single node which
would have a label consisting of the datatype identity
and the lexical form. Thus, rather than

   <some:Property xsd:integer="10"/>

we'd have

   <some:Property xxx:type="xsd:integer">10</some:Property>

and rather than

   _:x xsd:integer "10" .

we'd have

   xsd:integer"10" .

or some such labeled node.

And the semantics of that single, datatype+literal labeled
node would correspond to that of the bnode in the earlier
idiom, namely the node would denote the value
(member of the value space) of the datatype having
that particular lexical representation.

I did not understand the proposal as introducing any modification
whatsoever to the actual semantics of local datatyping as defined
by the stake-in-the-ground proposal. 

> > How may times do we have to go round this
> > issue before we get past it?!
> 
> It might help if you would make an effort to distinguish
> matters of fact and matters of record from matters
> of opinion.

I'm always making that effort, even if I don't always
succeed. 

Patrick

> 
> -- 
> Dan Connolly, W3C http://www.w3.org/People/Connolly/
> 
> 
> 



