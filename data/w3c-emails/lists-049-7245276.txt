docno="lists-049-7245276"
received="Thu Aug 22 11:54:11 2002"
isoreceived="20020822155411"
sent="Thu, 22 Aug 2002 12:08:02 -0400"
isosent="20020822160802"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: weekly call for agenda items"
id="3D650C62.3060404@mitre.org"
charset="us-ascii"
inreplyto="5.1.0.14.0.20020822153849.0223ddb0&#64;0-mail-1.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


Brian McBride wrote:

> I've added these to the agenda as requested.  A couple of comments below:
> 
> At 13:30 21/08/2002 -0400, Frank Manola wrote:
> 
>> Meaning of rdf:type and relationship between RDF and RDFS;  specifically,
>>
>> (a) must any RDF processor understand the object of an rdf:type 
>> property as being an rdfs:Class (and hence understand what an 
>> rdfs:Class is)?
> 
> 
> Converting this to a test case, (which may or may not capture Frank's 
> intended question), I suggest that an RDF processor is not required to 
> conclude
> 
>   _:b rdf:type rdfs:Class .
> 
> from:
> 
>   _:a rdf:type _:b .
> 
> That is a job for rdfs reasoning on rdfs:range.


Thanks!  This test case precisely captures the question (I wrote up a 
similar test case myself, but only after posting my original message). 
Your suggested response is my current understanding, but I'd like this 
nailed down.


> 
> 
>> (b) must an RDF processor that understands what an rdfs:Class is also 
>> understand the rest of the RDFS vocabulary?
> 
> 
> I'm not sure how to reduce this to a test case.  If the intent is to ask 
> whether any processor capable of implementing the above entailment, must 
> implement all of the RDFS closure rules, why might we be tempted to say 
> that?
> 


My original idea was that, while there might be RDF processors that 
would support arbitrary additional amounts of RDFS processing as well as 
"vanilla RDF", in general I imagine there would be "RDF" processors 
(these wouldn't handle the first entailment, as you've suggested) and 
"RDFS" processors that would handle both RDF and RDFS entailments.  The 
RDFS processors would be the ones to handle the first entailment, and 
(of course) would handle the others as well.  What you're suggesting, I 
think, is that we don't want to rule out the intermediate case, e.g., an 
RDF processor might choose to also support, say rdfs:Class entailments, 
but not some of the other RDFS vocabulary (?)

--Frank



 


-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



