docno="lists-049-7828193"
received="Mon Aug 26 07:16:40 2002"
isoreceived="20020826111640"
sent="Mon, 26 Aug 2002 14:12:34 +0300"
isosent="20020826111234"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: a review of 'RDF Datatyping'"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBAA2@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="a review of 'RDF Datatyping'"
expires="-1"


To:<connolly@w3.org>,<w3c-rdfcore-wg@w3.org>




> -----Original Message-----
> From: ext Dan Connolly [mailto:connolly@w3.org]
> Sent: 23 August, 2002 17:00
> To: w3c-rdfcore-wg@w3.org
> Subject: a review of 'RDF Datatyping'
> 
> 
> 
> Some review comments on
> 
>   http://www-nrc.nokia.com/sw/rdf-datatyping.html
>   Last Modified: 19 August 2002
> 
> Hmm... 'datatyping'? it's a verb?

Yes.

> I'd rather something like
> 
> Using Primitive Datatyps in RDF
> 
> 
> The editors are listed as:
> 
>   Pat Hayes,
>   Sergey Melnik,
>   Patrick Stickler,
> 
> Have they all looked at it? Maybe there
> should be an asterisk or something by
> the folks that haven't read it yet.

Sure. I've annotated the latest revision accordingly.

> The introductory text (abstract, status,
> introduction, desiderata) look like
> they haven't gotten much attention for
> a while, so I'm not reviewing them
> closely. The verbification of datatype
> shows up in "1.1 What is Datatyping?"
> again, though.
> 
> | RDF literals are structured objects consisting of
> | a string, which is optionally qualified as
> | XML content (rdf:parseType equal to "Literal")
> | and/or having an associated xml:lang value
> 
> I think this view of literals is confusing people;
> as I have said in discussion of the model theory,
> I think it's less confusing to explain it so
> that literals are a union of
> string
> string-with-lang
> XML infoitem
> XML info-item-with lang

Is this union view now the WG view? The last I was aware
of was the structured n-tuple view.

I'm happy to describe literals however the WG feels is best.

> | The conceptual framework for RDF datatyping
> | presented in this specification is compatable
> | with the type system defined by XML Schema
> | for both simple and complex datatypes.
> 
> Complex datatypes??? We don't even handle
> facets on the primitive types, let alone
> complex types. Hmm... but this doesn't
> look like a typo; there's further discussion
> of the concept and even an example. I'm
> not interested in this aspect of the design.
> I'd rather it were left out.

I've marked it as an optional component that can be
omitted without any affect to the core datatyping
machinery.

Given the way the current proposal works, you really
do get complex datatypes "for free", so I don't see
much reason not to include them.

Still, it is a disjunct issue from the core proposal.

> | For an XML Schema complex datatype, its value
> | space is the set of all valid infosets licensed
> | by its content model and its datatype mapping
> | is the mapping from each XML serialization to
> | its corresponding infoset. 
> 
> Really? Which part of the XML Schema spec
> does that come from? Please cite it by
> section.
> 
> | 3.2 Global Datatyping
> 
> verbification again.
> 
> | Global datatyping leaves the datatype of the
> | property value implicit
> 
> which property? 

The property of the statement.

> Ill-formed definite descriptions
> are a major pet-pieve of mine.

Feel free to suggest an alternative wording.

> The use of rdf:type with values of datatypes
> seems to complicate life considerably...
>
> You seem to be using the entailment...
> 
>   ex:age rdfs:range xsd:integer .
>   Jane ex:age "25" .
> ==>
>   "25" rdf:type xsd:integer

Correct.

> which makes a certain amount of sense (though
> I don't think it follows from current model
> theory drafts, because of the literal in the
> subject position), 

Well, that's a syntactic issue. The semantics of

   "25" rdf:type xsd:integer 
and
   xsd:integer"25" 

is considered to be identical.

> but note that "25" might get
> related to any number of classes by the
> rdf:type property this way. Does the model
> theory in this spec handle all those cases?

It should, via rdfs:range, though the
graph syntax precludes a given literal from
having more than one explicitly defined (local)
datatype.

Given the datatype-centric nature of lexical
representations, I don't see this as being a
real limitation in practice. Datatype class
membership is a very specialized form of 
RDF class membership, and datatyping need not
exibit the full genericity and flexibility of
RDF typing itself.

> Hmm... the model theory seems to use
> rdfs:range directly, rather than using
> the rdf:type conclusion that follows
> from rdfs:range... so it won't work
> with stuff like DAML+OIL restrictions.
> 
> I see section 6.1.3 DAML+OIL doesn't
> have much stuff in it.
> 
> Consider something like
> 
> :Person rdfs:label "Person";
> rdfs:subClassOf [
>   ont:onProperty :age;
>   ont:toClass xsdt:integer;
> ].
> 
> I gather the DAML+OIL crowd expects to
> be able to do stuff like that. And it won't
> work with this model theory, because the
> DAML restriction stuff goes right past
> rdfs:range to rdf:type.

I'll let Pat address this point.

Cheers,

Patrick



