docno="lists-049-8522770"
received="Mon Dec  2 02:37:21 2002"
isoreceived="20021202073721"
sent="Mon, 2 Dec 2002 09:37:15 +0200"
isosent="20021202073715"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatype test case"
id="006701c299d5$a2800d60$a09216ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="p05111b01ba0497e373b9&#64;[10.0.100.86]"
expires="-1"


To:"Brian McBride"<bwm@hplb.hpl.hp.com>,"ext pat hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext pat hayes" <phayes@ai.uwf.edu>
To: "Brian McBride" <bwm@hplb.hpl.hp.com>
Cc: <w3c-rdfcore-wg@w3.org>
Sent: 01 December, 2002 05:57
Subject: Re: datatype test case


> 
> >Does the empty graph datatype(xsd:integer, xsd:decimal) entail
> >
> >xsd:integer rdfs:subClassOf xsd:decimal .
> 
> Well, if Dan C is right about the datatype values, then yes, it does, 
> since we have IFF conditions on subClassOf. That is, it XSD-entails 
> it. I didn't mention things like this because I thought we were only 
> supporting the XSD primitive datatypes. If we are supporting the 
> entire edifice of all the built-ins, then there are lots of possible 
> entailments which could be stated in RDFS, including the above.
> 
> Do you want me to try to make a table of all the valid RDFS triples 
> in XSD interpretations, assuming of course that we can take the XSD 
> spec at face value? I don't think it would take all that long, 

It's been done. I've done an RDF Schema that defines the relations
that are explicit in the XML Schema specs, and Jeremy has done a
great job of disecting the XML Schema spec to extract all of the
(arguably) implicit relations. The only thing that has not been
specified are relations involving non-subset intersections of value
spaces -- but as we have no vocabulary to express such relations...

> but I 
> am slightly worried about missing something (are there any 
> subproperty entailments? 

??? Where do subproperties come into play? *WE* do not define
any kind of datatyping properties.

> HOw do we express the fact that two 
> different dtypes have compatible L2V mappings?? Etc.

*We* don't. We don't expect any two datatypes to have any intersection
of lexical space or L2V mapping, even if they have an intersection
of value spaces.

Of course, there's no reason that someone other than the RDF Core
WG couldn't define a vocabulary for defining such additional relationships,
but knowing that the same lexical form in two datatypes maps to the same
value for both datatypes is not necessary to do RDF datatyping and
therefore need not be specified formally.

Patrick



