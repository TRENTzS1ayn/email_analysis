docno="lists-049-8551346"
received="Mon Dec  2 03:00:58 2002"
isoreceived="20021202080058"
sent="Mon, 2 Dec 2002 10:00:51 +0200"
isosent="20021202080051"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: xsd:float and xsd:decimal"
id="007b01c299d8$ef600bf0$a09216ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="p05111b0bba0f0cede169&#64;[10.0.100.247]"
expires="-1"


To:"Dan Connolly"<connolly@w3.org>,"ext pat hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


> >
> >This isn't a question about how XML Schema works;
> >it's about how our datatypes design integrates
> >with XML Schema.
> >
> >If Jeremy and I have not convinced the WG that this is how
> >XML Schema works, questions from those who doubt it
> >should "be referred to the authorities
> >who defined the datatypes", i.e. www-xml-schema-comments.
> 
> You have not convinced me that this is how XML Schema is intended to 
> work. The other authorities have not convinced me that it is not, I 
> hasten to add. I think that there is confusion within the XML spec on 
> the matter, and that the answers are unclear, which is why it is 
> particularly important that we do not make pronouncements that might 
> be made false by the other spec writers. And in any case I agree with 
> Brian that these questions are none of our business. What we should 
> say is that IF the spec of some datatypes says that the items in one 
> value space are a subset of those in another, THEN the relevant 
> rdfs:subClassOf property holds between the datatype classes in any 
> datatype interpretation. We can say that, sure: but we should not, in 
> my view, actually assert that any such relationships hold between 
> particular XSD datatypes. Those questions are not for us to decide, 
> and even if they are true now, they might not be in the future.

I think the key deciding point here is that whether or not a given
subClassOf relation or value equality relation holds or not given
two XML Schema datatypes, NOTHING IN THE RDF DATATYPING SOLUTION
HAS TO CHANGE.

I.e. we have provided a complete and sufficient solution for working
with all XML Schema datatypes in RDF, and if the XML Schema specs
are ambiguous as to whether two typed literals are equal or not,
that has *NOTHING* to do with the datatyping solution we have provided,
but is a matter for the XML Schema folks, with the support of the RDF
community (not the RDF Core WG) to resolve. And we have provided the
tools for them to clarify those relationships with the precision 
needed by the RDF community.

> >I am an XML Schema guy; please let's not make this
> >an us-versus-them thing.

It's not. You now have the facilities provided by RDF datatyping
to clarify the XML Schema specs. But however you might clarify
the relationships between particular XML Schema datatypes and
particular datatype values, that has no affect whatsoever on the
RDF datatyping machinery. 

The RDF datatyping solution has shown that the XML Schema specs
are lacking. So as an XML Schema guy, you now have some new tools
to go make XML Schema better.

But it's not for the RDF Core WG to interpret the XML Schema specs,
only to ensure that RDF can work as required with all valid 
interpretations -- and it does, so we're done.

> Its not a case of 'versus', but of each spec being careful to 
> restrict itself to defining what it sets out to define and to defer 
> to other specs matters which are within their purview. That just 
> seems like good cooperation policy to me: it gives each group rights 
> to make proclamations in its territory. I wouldn't want XML Schema to 
> be making claims about what rdfs:Datatype was supposed to mean, and I 
> don't see why we need to say anything about what xsd:integer is 
> supposed to mean.

Exactly.

Patrick



