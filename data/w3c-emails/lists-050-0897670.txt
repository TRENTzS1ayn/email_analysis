docno="lists-050-0897670"
received="Mon Jan  7 01:36:24 2002"
isoreceived="20020107063624"
sent="Sun, 06 Jan 2002 14:52:24 +0200"
isosent="20020106125224"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Question about S"
id="B85E1528.AD24%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20020103114009.00a071e0&#64;joy.songbird.com"
expires="-1"

To: ext Graham Klyne<Graham.Klyne@MIMEsweeper.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-01-03 13:45, "ext Graham Klyne" <Graham.Klyne@MIMEsweeper.com>
wrote:


>> Then can you provide an alternate example that does? I'm
>> presuming that somehow, somewhere, we need to know that "10"
>> is a member of the lexical space of xsd:integer. How is that
>> defined in S if not as above?
> 
> Well, this might (for some appropriate definition of lex:integer):
> 
>    Bob ex:age _:1 .
>    _:1 s:integer "10" .
>    s:integer rdfs:range lex:integer .
> 
> [...]

Fair enough. Clearly the S idiom provides a means to define
a pairing of lexical form and data type, but I don't see any
of the S idiom variants proposed thus far as being nearly as
economical as the P, DAML, or U idioms. I.e.

   Bob ex:age "10" .
   ex:age rdfs:range xsd:integer .

or

   Bob ex:age _:1 .
   _:1 rdf:value "10" .
   _:1 rdf:type xsd:integer .

or

   Bob ex:age <xsd:integer:10> .


and the P and DAML idioms are currently in use and understood
by (presumably) a non-trivial body of the RDF community, so why
adopt yet another idiom if the present ones do the job? Especially
when those idioms demand a proliferation of (unnecessary) URI sets
where a single data type URI is sufficient?

Patrick 

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



