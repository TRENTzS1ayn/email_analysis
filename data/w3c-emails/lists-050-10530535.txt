docno="lists-050-10530535"
received="Tue Jun 25 11:19:45 2002"
isoreceived="20020625151945"
sent="Tue, 25 Jun 2002 10:19:42 -0500"
isosent="20020625151942"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Dark triples, current closure / entailment rules, can someone                clarify?"
id="p05111b06b93e39a6e7e3@[65.217.30.113]"
charset="us-ascii"
inreplyto="Pine.GSO.4.44.0206251103390.27038-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To: Jan Grant<Jan.Grant@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org


>On Mon, 24 Jun 2002, patrick hayes wrote:
>
>>
>>  >Pat indicated at the F2F that entailments "accidentally" drawn would be
>>  >"harmless".
>>
>>  RDF entailments, yes.
>>
>>  >Can someone clear up this example for me?
>>  >
>>  >A:
>>  ><eg:foo1> <rdf:subPropertyOf> <dark:eg:foo2> .
>>  ><dark:eg:foo2> <rdf:subProperotyOf> <eg:foo3> .
>>  >
>>  ><eg:a> <eg:foo1> <eg:b> .
>>  >
>>  >B:
>>  ><eg:foo1> <rdf:subPropertyOf> <dark:eg:foo2> .
>>  ><dark:eg:foo2> <rdf:subProperotyOf> <eg:foo3> .
>>  >
>>  ><eg:a> <dark:eg:foo2> <eg:b> .
>>  >
>>  >C:
>>  ><eg:foo1> <rdf:subPropertyOf> <dark:eg:foo2> .
>>  ><dark:eg:foo2> <rdf:subProperotyOf> <eg:foo3> .
>>  >
>>  ><eg:a> <eg:foo3> <eg:b> .
>>  >
>>  >
>>  >Does A |= C? Does A |= B? B |= C?
>>
>>  Yes:
>>  A|= C (by subproperty chaining and then the subproperty closure rule)
>>  No:
>>  A |= B (dark conclusion)
>
>Actually, for the same reason, isn't this a "yes"? Because the non-dark
>statements are a strict subset of the antecedent?

Whoops. Yes. sorry, you are right. So A|=B and A|= C but B|=/=C. OK.

>
>>  B |= C (dark, ie missing, antecedent)
>>
>>  However, notice that should be rdfs:subPropertyOf. To anticipate your
>>  next question: yes, one does have to be careful using darkened
>>  triples in RDFS hierarchical inferences (basically, any kind of
>>  transitivity implication, ie subPropertyOf and subClassOf.)  What I
>>  claimed was that it was safe with RDF-valid reasoning (ie
>>  effectively, existential generalization).
>
>To be honest, I think examples like this are why we should have an
>explicit, not implicit name-based, darkening mechanism.

I fail to follow why this kind of example would lead you to that 
conclusion. BUt in any case there are other strong reasons for not 
coming to that conclusion, which we have gone over now several times. 
If there is any way to assert darkness, then there is no way, in 
practice, to avoid nonmonotonicity. Moreover, it places an additional 
burden on users and implementers, who ideally shouldnt even have to 
know about this stuff almost all the time.

Pat


>At the F2F I was
>in favour of it, but the more I think about it the more it seems like a
>mistake to key this off property names. Some explicit syntax mechanism
>(either Patrick's, or an "rdf:asserted='True'" or such) seems much less
>error-prone... particularly if we can provide a little more sugar by
>having shorthand constructs (daml:collection) that normally produce some
>darkened triples do that "by default".
>
>jan
>
>--
>jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
>Tel +44(0)117 9287088 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
>and Nostradamus never dreamed of the Church of the Accellerated Worm


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



