docno="lists-050-11242686"
received="Fri Jun 28 04:41:24 2002"
isoreceived="20020628084124"
sent="Fri, 28 Jun 2002 11:45:55 +0300"
isosent="20020628084555"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatypes message - draft 2"
id="B941FCF3.1791F%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="1025199961.22220.38.camel&#64;dirk"
expires="-1"

To: Dan Connolly<connolly@w3.org>
CC: ext Brian McBride<bwm@hplb.hpl.hp.com>, RDF Core<w3c-rdfcore-wg@w3.org>



On 2002-06-27 20:46, "ext Dan Connolly" <connolly@w3.org> wrote:

> 
> On Thu, 2002-06-27 at 01:40, Patrick Stickler wrote:
>> 
>> 
>> On 2002-06-26 20:38, "ext Brian McBride" <bwm@hplb.hpl.hp.com> wrote:
>> 
>> 
>> In the introduction, it would be good, I think, to add a comment
>> that the tidy/untidy issue has little to do with implementational
>> efficiency of triples stores,
> 
> not true; see comments from Sergey a long time ago about
> the cost of untidy literals in RDF/database systems.

Sorry, but those were, IMO, sufficiently refuted.

> Sorry I don't have time to find it.
> 
> The swap/cwm implementation would suffer a significant
> efficiency hit if literals weren't tidy.
> 
> http://www.w3.org/2000/10/swap/
> 
> esp in def loadToStore(store, addr):
> 
>   store.storeQuad((store._experience,
>                    store.semantics,
>                    store.intern((SYMBOL, addr)),
>                    store.intern((FORMULA, addr + "#_formula" ))))

Sure, if you didn't fix it. The above treatment of literals
as global constants would simply be wrong, given their untidy
semantics.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



