docno="lists-050-11252333"
received="Fri Jun 28 04:50:42 2002"
isoreceived="20020628085042"
sent="Fri, 28 Jun 2002 11:55:12 +0300"
isosent="20020628085512"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: datatypes message - draft 2"
id="B941FF20.17926%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="1025244566.22220.169.camel&#64;dirk"
expires="-1"

To: Dan Connolly<connolly@w3.org>, Pat Hayes<phayes@ai.uwf.edu>
CC: RDF Core<w3c-rdfcore-wg@w3.org>



On 2002-06-28 9:09, "ext Dan Connolly" <connolly@w3.org> wrote:

>> and every literal might or
>> might not be the same as any other.
> 
> ... that's the definition of untidy literals, no?
> 
> You can't tell whether two literals denote the same thing,
> so you have to keep them separate until you know more.

You have to keep their interpretation separate. But a
given implementation could in fact use tidy storage
so long as the semantics remains untidy. I.e. you
can't base equality tests only on the basis that two literals
are string equal, etc. but must include the contextual
information about the occurrences of those literals when
determining equality.

Literals have untidy semantics no matter what. The choice
for having untidy syntax in the *conceptual* model was
to make that more explicit to users who might otherwise
get confused if they see a tidy graph syntax with (implicit)
untidy semantics. But just because the *conceptual* model
uses untidy syntax does not mean that any particular
implementation must do so.
 
Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



