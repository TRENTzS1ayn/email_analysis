docno="lists-050-11261519"
received="Fri Jun 28 05:02:24 2002"
isoreceived="20020628090224"
sent="Fri, 28 Jun 2002 12:06:55 +0300"
isosent="20020628090655"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: rdfms-syntax-incomplete"
id="B94201DF.1792B%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p05111b2cb941af091856&#64;[65.217.30.113]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>, Jeremy Carroll<jjc@hplb.hpl.hp.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>



On 2002-06-28 9:14, "ext pat hayes" <phayes@ai.uwf.edu> wrote:

> 
>> At the f2f one of the postponed issues that I wished to advocate
>> reopening was:
>> 
>> http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete
>> 
>> In particular, given the amount of change we have made I think a
>> small change to
>> rectify the bnode serialization problem should be considered.
>> 
>> However we were out of time, and so I have decided to raise this by e-mail.
>> 
>> This is primarily motivated for me by Jena development.
>> Within Jena we have repeated user requirement to enable round-tripping.
>> 
>> e.g. one of our summer students yesterday said words like: "we use N-triple
>> as
>> our transport becuase bNodes are important."
>> 
>> Since we are not proposing N-triple as a standard, we do have some
>> obligation to
>> make RDF/XML useable.
>> 
>> I propose that we should modify the RDF/XML syntax to permit bNode labels
>> "_:foo" wherever we currently permit URI refs.
> 
> Would that be extendable to allow nodeIDs on literal nodes, also, to
> handle untidy literals?

Seems so to me.

One could simply view untidy literal nodes as analogous to bnodes
with literal labels. Each denotes a (potentially) different resource
and the literal label provides a contextual name for that resource,
but since the literal label does not have globally constent meaning
(as does a URIref) the denotation is underspecified without that context.

As with a bnode, you know it denotes "something", but you don't
necessarily know exactly what that is, insofar as some global
name (URIref) is concerned.

So, _:foo is a bnode and _:bar"1234" is a literal node. Both are
"untidy" and the nodeID simply disappears in the graph representation,
leaving only the literal string in the case of the literal node.
_:foo -> "", _:bar"1234" -> "1234".

Eh?

Patrick


--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



