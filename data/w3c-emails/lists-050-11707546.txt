docno="lists-050-11707546"
received="Fri Mar  1 12:35:53 2002"
isoreceived="20020301173553"
sent="Fri, 1 Mar 2002 11:35:52 -0600"
isosent="20020301173552"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: xml:lang [was Re: Outstanding Issues ]"
id="p05101423b8a56a91f228@[192.168.0.11]"
charset="us-ascii"
inreplyto="1014828101.1042.38.camel&#64;jammer"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org

>On Wed, 2002-02-27 at 10:25, Pat Hayes wrote:
>>  >At 11:02 12/02/2002 +0200, Patrick Stickler wrote:
>[...]
>>  >I read M&S and it said that language is part of the literal, so that
>>  >is how I wrote the code.  In Jena, a literal is a pair, as defined
>>  >in M&S.
>>
>>  Well, Brian, surely you might have mentioned this before,
>
>As I said before, several folks did mention it a long time
>ago, but after while, we got tired of saying "string
>or string with lang or XML thingy" and just said string.

I guess I naively assumed that was a decision, not just tired lips.

>
>I was pretty careful to be sure the way we resolved
>the lang issue doesn't matter to the model theory.
>
>To the model theory, a literal is still just a string. We can
>encode two strings in one, after all, no?

Oh, OK, if you are happy to do that, fine. BUt then lets make sure 
that nobody ever says that those strings are pairs, or are not 
'really' strings, or whatever.

>Here's the
>n-triples design DaveB and I kicked around after the meeting:
>
>("abc", 'en') ->"abc"-en
>("abc",  none) ->"abc"
>("abc", 'fr') ->"abc"-fr

If that really is "abc"-en and not "abc-en", than I don't see how 
this is a string. Those double quotes aren't part of the literal 
itself, right? They are just n-triple syntax markers to indicate  a 
literal, and the literal itself is the string inside the double 
quotes. So those dashed tags are NOT part of the literal itself, if 
the literal is a string. So back to the drawing board.

>
>Also, for XML literals, we'll have xml("canonical-form...", "en").
>
>The point is: the literal is syntactically evident in the RDF document.

I dont care what is syntactically evident in the document. I want to 
know what is in the graph. If a literal node is anything more than a 
string, then what kind of thing is it?

>
>>  when the
>>  datatyping discussion was in full progress, all predicated on the
>>  assumption (and indeed the frequent explicit assertion, to which
>>  nobody raised the slightest objection) that literals were strings. If
>>  literals are not strings, then we have to go and do all that again,
>>  because NONE of it makes any sense at all. What is the result of
>>  applying the lexical-to-value mapping of xsd:number to the pair
>>  ("34", "french") ?
>
>same as the result of applying it to "blarf": you lose.
>
>>  >A good reason might have the form "If we do it as m&s says, 
>>problem x occurs".
>>
>>  Well, one problem for us is that we will have to re-open the
>>  datatyping discussion again from square one.
>
>I don't think so.

I do.

>
>>  For example, if literals
>>  can be pairs, then we could put the datatype name in the second slot
>>  of the pair,
>
>no... the pair comes from RDF/XML syntax.

Can it ONLY come from there? We already have graphs that cannot be 
rendered into XML, so I don't see why we cannot have a few more.

>
>Eventually, you're going to have to take a peek at the syntax, Pat. ;-)

The graph IS the syntax. XML is just one of the possible lexicalizations.

>
>For the examples above, that's:
>
><rdf:Description rdf:about="http://example/something">
>           <dc:title xml:lang="en">abc</dc:title>
></rdf:Description>
>
>becomes
>
><http://example/something> <http://purl.org/dc/elements/1.1/title>
>"abc"-en.
>
>If you want to muck with things in n-triples, you have to reflect
>them back into RDF/XML.

WHY?? We already do not do this.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



