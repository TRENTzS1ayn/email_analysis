docno="lists-050-12065197"
received="Mon Mar  4 14:13:45 2002"
isoreceived="20020304191345"
sent="Mon, 04 Mar 2002 19:13:06 +0000"
isosent="20020304191306"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: RDF C14N Max or Min"
id="5.1.0.14.2.20020304190554.03c3d400@joy.songbird.com"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDKECPCDAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>,<w3c-ietf-xmldsig@w3.org>

At 03:53 PM 3/4/02 +0000, Jeremy Carroll wrote:
>The trade off is that a maximal specification will:
>- break all existing systems
>- be harder to implement
>- provide a better foundation for interoperability
>
>A minimal specification will
>- almost bless some existing implementations
>- not commit to decisions that we are not yet in a position to know the
>answer to.
>- provide sufficient interoperability for some test cases and perhaps for
>the model theory

My antennae twitched when I read:

>- not commit to decisions that we are not yet in a position to know the
>answer to.

I think this may be a case to apply the old "be liberal in what you accept, 
conservative in what you emit" adage.  (Normally, I don't think it's a good 
way to write specs, even if it is good advice to implementers.)

In particular, I think it would be better to not make a decision if we 
really don't know what the answer should be.  But we also need to try and 
say something that will allow interoperation to happen.

Is it possible to suggest a range of options that implementations should 
accept and process, and recommend something for now as a preferred option 
to generate data with (say) minimal loss of information, as Eric has suggested?

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>



