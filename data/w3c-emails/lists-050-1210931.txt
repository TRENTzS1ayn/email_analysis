docno="lists-050-1210931"
received="Thu Jan 10 11:42:00 2002"
isoreceived="20020110164200"
sent="Thu, 10 Jan 2002 11:40:53 -0500 (EST)"
isosent="20020110164053"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: No model theory for reification?"
id="Pine.LNX.4.30.0201101125140.13622-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="JAEBJCLMIFLKLOJGMELDKEMECCAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"

To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
cc:<w3c-rdfcore-wg@w3.org>,<der@hplb.hpl.hp.com>


On Thu, 10 Jan 2002, Jeremy Carroll wrote:

>
> Having consulted with my colleagues I will *not* be proposing to drop
> reification.
>
> However, in the feedback I got the following suggestion was made:
>
>
> > There are two use cases which, if not supported by reification,
> > you need to at least document recommended solutions - provenance
> > and quoting.
> [ ... ]
>
> > One approach might be to not remove reification but to relegate it to an
> > advisory section. In particular, leave in the rdf:Statement,
> > rdf:subject etc tags as reserved tags. Have two "how to's" which
> > describe how one might represent provenance or quoting in RDF and
> > say that you have reserved the tags
> > "rdf:Statement" etc for this purpose but they have no special
> > semantic status other than being the recommended type tags to
> > use if you are trying to encode ground facts which happen to be about
> > RDF statements.

I'm sympathetic, but some comments / nits.

re 'reserved the tags "rdf:Statement" etc', they're not tags, they're RDF
classes and properties. One class (rdf:Statement) and three properties
(rdf:p/s/o). Like other classes and properties, they have various
representations as XML elements/tags.

saying they're to be used 'for this purpose' (provenance and quoting)
doesn't adequately describe the meaning of these constructs. What *is* an
instance of rdf:Statement? We need to give a clear answer, rather than
allude to possible uses for the class. That's the mistake the old spec
fell into (cont. below).


> This approach allows us to:
> - avoid the "RDF is (NOT) its own metatheory" hole.


> - avoid the stating versus statement problem (depends on usage).

How so? Giving a clear definition for rdf:Statement, rdf:predicate,
rdf:object and rdf:subject might avoid the stating/statement problem. If
we fail to define rdf:Statement clearly, we'll continue to have
stating/statement problems. I can't see how merely saying " rdf:statement
and p/s/o are 'reserved for quoting, provenance etc." fixes this problem.

One way to be clear when defining classes is to give identity conditions
for members of the class, eg. specify whether members of rdf:Statement
are uniquely picked out by their predicate/subject/object properties. I
suspect that if we explore that route, we'll find the statement/stating
confusion unwravels into the need to be more careful distinguishing URIs
from the resources they name.

> - keep the good bits of reification (have standard vocab. for modelling
> RDF).

Yep.

> It is characterised by there being no model theory for reification.

Somewhere we need to write down a clear account of rdf:Statement; if it
looks mathematical, the Model Theory spec seems a reasonable home for it.

cheers,

Dan


-- 
mailto:danbri@w3.org
http://www.w3.org/People/DanBri/



