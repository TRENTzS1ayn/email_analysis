docno="lists-050-12472199"
received="Fri Mar  8 11:47:17 2002"
isoreceived="20020308164717"
sent="Fri, 08 Mar 2002 18:49:04 +0200"
isosent="20020308164904"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="A very short list of residual datatyping issues (just one ;-)"
id="B8AEB821.10594%patrick.stickler@nokia.com"
charset="US-ASCII"
expires="-1"

To: RDF Core<w3c-rdfcore-wg@w3.org>



Here's my very short list of outstanding issues that I see as
still remaining to be resolved for the stake-in-the-ground datatyping
proposal, with proposed resolutions:


1. Union versus non-union interpretation of datatypes

Overview of Issue:

a) XML Schema associates a single URI with a datatype. That
   URI denotes the entire datatype, not just its value space.
   Stating that the URI only denotes the value space may be
   considered contrary to the XML Schema usage and leaves
   datatypes without a formally defined URI denoting the entire
   datatype.

b) The present proposal does not provide any means of using
   rdfs:range to constrain the values of datatyped properties
   without resulting in the inability to use both global or
   local idioms freely and without conflict.

c) The semantics of rdfs:drange embodies a union interpretation
   of datatypes by constraining a property's values to either
   a member of the lexical space or a member of the value space.
 
Proposed Resolution:

a) Datatype URIs denote the entire datatype, meaning the union of
   both lexical and value spaces. Members of both lexical and value
   spaces are all equal members of the RDFS datatype class.

b) Use rdfs:range to associate datatypes with property values, and
   also constrain property values to members of the datatype class
   (i.e. to members of either the lexical or value space).

   This removes the need for rdfs:drange, providing a complete
   datatyping solution with no new vocabulary whatsoever.

   This allows for rdfs:range constraints to be defined for
   datatype classes without any conflict between idioms.

   This leaves the semantics of rdfs:range unchanged. And applications
   need not specially provide for the semantics of an additional
   rdfs:drange constraint property. I.e. the solution requires no
   change to existing RDFS capable systems and works fully with all
   existing RDFS capable systems.

   Since rdfs:drange already embodies a union interpretation, this
   is not so much a change to the stake-in-the-ground proposal as
   a distillation to its essential functionality.

c) RDF graph syntax provides all that is needed to differentiate
   between members of lexical and value spaces. Literal nodes which
   are members of a datatype class are always interpreted to be lexical
   forms, the things at the blunt end of a datatype mapping.

   There is no loss of precision in knowing which graph nodes
   are lexical forms or values; yet usage is simpler and more intuitive
   for less technical users and consistent with clearly communicated
   expectations regarding the use of the inline idiom and rdfs:range
   for datatyping.


Attached is some N3 which illustrates the proposed resolution (slightly
expanded/refined from the version distributed at the f2f).


Regards,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com







application/octet-stream attachment: rdfdt.n3




