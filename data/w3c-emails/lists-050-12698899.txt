docno="lists-050-12698899"
received="Mon Mar 11 10:40:09 2002"
isoreceived="20020311154009"
sent="Mon, 11 Mar 2002 15:36:57 +0000"
isosent="20020311153657"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: xml literal and xslt (resend)"
id="13879.1015861017@tatooine.ilrt.bris.ac.uk"
inreplyto="jjc&#64;hplb.hpl.hp.com"
expires="-1"

To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
cc: w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>



Not replying to all this message; but I'm summarising something that
I read underlying this:

  Applying XSLT over RDF/XML (or XML) with embedded XML that uses
  qnames in attribute values can mess things up.  This is due to
  RDF's XML syntax not knowing about such things and XSLT and other
  XML specs using them.

I don't see how this is an RDF Model question, and I haven't been
hearing any large requirement for users for XSLTing lots of RDF/XML.
If XSLT's design makes it hard to do this particular case, that isn't
an issue the RDF Core WG can or should address.

So I'd reduce your assumptions from:

- we want RDF/XML to be processable through XSLT without getting corrupted.

  but it doesn't seem easy to do in certain cases where qnames as
  attribute values are meaningful in embedded XML inside parseType
  litearl.  Sorry, we have no solution at this time.

I feel we shouldn't over-engineer and require new
implementation code in order to address this.

I definitely support:

  "dropping qnames in attribute values from the level of ambition,
  and merely trying to not prevent implementations from treating
  unusual namespaces unusually" -- Jeremy

Note there is a use case for PIs in embedded XML, recently posted to
www-rdf-interest

Dave



