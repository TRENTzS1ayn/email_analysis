docno="lists-050-12717217"
received="Mon Mar 11 11:28:48 2002"
isoreceived="20020311162848"
sent="Mon, 11 Mar 2002 16:28:28 -0000"
isosent="20020311162828"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: xml literal and xslt (resend)"
id="JAEBJCLMIFLKLOJGMELDIEEMCDAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
inreplyto="13879.1015861017&#64;tatooine.ilrt.bris.ac.uk"
expires="-1"

To:"Dave Beckett"<dave.beckett@bristol.ac.uk>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>




The other extreme that I see in the possibility space is a proposal like:

========

Propose that:
- the exact form of the string value corresponding to any given XML Literal
within RDF/XML is implementation dependent.
- the string value is well-balanced XML that can be inserted as the elment
content between two tags:

<foo></foo>

to form an XML document, satisfying both XML and XML Namespaces.

- taking the exclusive canonicalization of both the original XML Literal in
its containing document, and the string value within the dummy "<foo></foo>"
document produce the same character string. Equality between xml literals is
defined on this basis, but only for the purpose of exercising the test
cases.
- that the canonicalization above is without comments

- we create some test cases (e.g. with qnames in attribute values) for which
interoperability difficulties may be observed

========

What this means is that implementations
must:
- preserve all visibly used namespaces
- not leave dangling qnames in element tags or attribute names
- not leave dangling entity references
- preserve whitespace (except in tags)
- preserve processing instructions

are free to:
- ignore or keep comments
- use any form of the XML that is Infoset equivalent
- include any namespaces (whatsoever) that are not visibly used, e.g. to
treat a declaration as a visible use.
- be written in XSLT, and/or have XSLT preprocessors (not compatible with
treating declarations as visible use)
- not implement C14N

This does not suffer from namespace pollution.


Jeremy



