docno="lists-050-13183853"
received="Wed Mar 13 05:42:08 2002"
isoreceived="20020313104208"
sent="Wed, 13 Mar 2002 12:44:08 +0200"
isosent="20020313104408"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: A very short list of residual datatyping issues (just one ;-)"
id="B8B4FA18.109B6%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="OFC7D49EA1.B1DBC040-ON41256B7A.0068EB48&#64;agfa.be"
expires="-1"

To: ext Jos De_Roo<jos.deroo.jd@belgium.agfa.com>,"Brian McBride<bwm"<bwm@hplb.hpl.hp.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-03-12 21:50, "ext Jos De_Roo" <jos.deroo.jd@belgium.agfa.com> wrote:

> 
> [...]
> 
>>> b) The present proposal does not provide any means of using
>>>    rdfs:range to constrain the values of datatyped properties
>>>    without resulting in the inability to use both global or
>>>    local idioms freely and without conflict.
>> 
>> Thats issue 2, but I don't know what it means.  Test case please.
> 
> I suppose Patrick wants something like
> 
> eg:age rdfs:range xsd:number .
> eg:Jenny eg:age "35" .
> eg:Jenny eg:age _:1 .
> _:1 xsd:number "35" .
> 
> to entail

Correct.

> ...
> 
> the trouble that I see is the following
> suppose we also know that
> 
> eg:age rdf:type owl:UniqueProperty .
>
> hence we can entail
> 
> eg:Jenny eg:age "35" .
> eg:Jenny eg:age _:1 .
> _:1 xsd:number "35" .
> _:1 owl:sameIndividualAs "35"
>
> but we also know that the domain and range
> of xsd:number are disjoint hence we can entail
> 
> eg:Jenny eg:age "35" .
> eg:Jenny eg:age _:1 .
> _:1 xsd:number "35" .
> _:1 owl:sameIndividualAs "35"
> _:1 owl:differentIndividualFrom "35"
> 
> which tells us that we have an inconsistent
> given and it doesn't make sense to entail
> stuff from that!!!

Well that sucks! ;-)

Thanks, Jos, for offering a reasonably compelling reason
why the union interpretation isn't as optimal as I had
thought.

I withdraw my proposal to interpret datatype URIs as
denoting unions of value and lexical space.

It appears that the problem is the inline idiom (which
was always the problem).

Clearly, the value triple idiom would have been far
easier to work with in this regard. Having the literal
there as the direct value of the property just mucks
everything up.

Sigh....  

(too bad we can't go back to the original convergence proposal)
 
> ps
> eg:age rdfs:drange xsd:number .
> eg:Jenny eg:age "35" .
> eg:Jenny eg:age2 _:1 .
> _:1 xsd:number "35" .

Unfortunately, while the rdfs:drange 'constraint' does
provide the information needed for extra-RDF applications
to interpret the inline idiom, it is useless "below the line".
No generic RDFS Validator will be able to make any use of
it. Only an application with full knowledge of the datatypes
in question can test such constraints.

Maybe that's the best we can do...

> or
> eg:age rdfs:range xsdr:number .
>
> eg:Jenny eg:age "35" .
> eg:Jenny eg:age2 _:1 .
> _:1 xsd:number "35" .
> 
> could work, so drange or xsdr
> and age and age2

Well, please, let's not get back to multiple URIs and
mutiple vocabularies... ;-)

--

Though it's now probably useless to say, I seems now
that we would have been much better off with

eg:age rdfs:range xsd:integer .
eg:Jenny eg:age [ rdfs:dlex "35" ] .
and/or
eg:Jenny eg:age [ xsd:integer "35" ] .

- no drange, no dtype
- no inline idiom, bnode always required
- no datatype clashes (since no dtype)
- no need for rdfs:drange, rdfs:range works fine
- no problems with owl:UniqueProperty entailments

No, it doesn't give us the inline (S-B) idiom. I guess
it's a matter of having your cake and eating it too.

So be it, I guess we've painted ourselves into a corner...

(although all of the above *is* in the present stake in
the ground proposal... the decision would simply be to
toss out the inline/S-B idiom on the grounds that it
mucks up rdfs:range entailments...)

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



