docno="lists-050-13366052"
received="Wed Mar 13 22:17:09 2002"
isoreceived="20020314031709"
sent="Wed, 13 Mar 2002 16:31:50 -0500"
isosent="20020313213150"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: Proposed NTriples changes for literal notation"
id="017501c1cb06$bae49770$9601a8c0@CREST"
charset="iso-8859-1"
inreplyto="13646.1015860276&#64;tatooine.ilrt.bris.ac.uk"
expires="-1"


To:<www-rdf-comments@w3.org>
Cc:<w3c-rdfcore-wg@w3.org>

It has been very convenient that NTriples have been a subset of N3.
These proposals mark a significant parting of the ways as they stand.

The "-" character in N3 I had intended to use in the future as an operator.

The "." character is often used immedaitely after the last token in a
statement.

Therefore,  "foo"en would be much preferable to "foo"-en  which looks
certianly to me like a subtraction.

And insisting on a space before "." is both messy, and error prone, as well
as not current practice.

I accept the form of these literals only in the context of an attempt to
formalize the
RDF spec as it is, but not as an endorsement of the way forward.  For the
future,
I hope that RDF will move toward unicode strings as primitives, and
langauges as properties.  { "chat"en  =  [lang:en "chat"].}

To be able to handle the smenatics of  the (langauge,string) pairs, one
needs to
define the URI for relationship between the pair and the langauge, and the
namespace URI for the ISO langauge codes. Then  I think one can
interface a langauge-pairs-aware application with a non-aware application.

There are many many langauge which use character
strings as primitives, and no others I know that use (lang, string) pairs.
 So convergence with other langues, and APIs for RDF in those langauges, and
so on,
are made much more cumbersome
for RDF by the existence of these literals.

Tim



