docno="lists-050-13386191"
received="Thu Mar 14 02:54:40 2002"
isoreceived="20020314075440"
sent="Thu, 14 Mar 2002 09:56:42 +0200"
isosent="20020314075642"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: A very short list of residual datatyping issues (just one ;-)"
id="B8B6245A.10ADE%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20020313165217.03a65060&#64;joy.songbird.com"
expires="-1"

To: ext Graham Klyne<Graham.Klyne@mimesweeper.com>
CC: ext Brian McBride<bwm@hplb.hpl.hp.com>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-03-13 18:56, "ext Graham Klyne" <Graham.Klyne@MIMEsweeper.com>
wrote:

> At 10:06 AM 3/13/02 +0200, Patrick Stickler wrote:
>>> At 01:03 PM 3/12/02 +0200, Patrick Stickler wrote:
>>>> works OK, since the bNode is a member of the value
>>>> space of xsd:integer; but
>>>> 
>>>>    Bob age "35" .
>>>> 
>>>> generates a range constraint conflict since "35" is
>>>> a member of the lexical space, not value space of
>>>> xsd:integer.
>>> 
>>> This is addressed/allowed by the latest datatyping proposal [1], in the
>> form:
>>> 
>>>   ex:Jenny ex:age "10" .
>>>   ex:age rdfs:drange datatype:decimal .
>> 
>> You missed my point, Graham. I was concerned with generic application
>> of rdfs:range constraints by RDFS Validators having no special knowledge
>> of datatypes.
>> 
>> Obviously, I'm quite aware of the functionality of rdfs:drange.
> 
> Yes, I missed your point.
> 
> Let me see if I get it now.  Given:
> 
>    Bob age "35" .
>    age rdfs:range datatype:decimal .
> 
> you say there is a range type inconsistency?
> 
> I agree that there is an inconsistency here.  I don't agree that it is a
> problem.  Effectively, by saying that:
> 
>    age rdfs:range datatype:decimal .
> 
> (and assuming that the value space of datatype:decimal does not include
> literal values) then I think you are saying that literals should not be
> used with this property.

Fair enough, if that is what folks want to say.

My concern was that, without any rdfs:range constraint at all,
one cannot utilize a generic RDFS validator to test explicitly
typed datatype values, but if rdfs:range is used for that
purpose, it excludes use of the inline idiom which always will
conflict with any rdfs:range statement with a datatype object.

And thus, this means that in a practical setting, where either
idiom may and should be permitted to occur, rdfs:range is useless
for datatyped properties since it eliminates cohabitability between
the global and local idioms.

Maybe that's just the way it goes. But it seems like we're losing
alot of useful functionality from generic RDFS validation.

Patrick


--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



