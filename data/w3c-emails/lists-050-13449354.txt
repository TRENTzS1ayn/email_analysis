docno="lists-050-13449354"
received="Thu Mar 14 03:29:05 2002"
isoreceived="20020314082905"
sent="Thu, 14 Mar 2002 17:28:41 +0900"
isosent="20020314082841"
name="Martin Duerst"
email="duerst@w3.org"
subject="Re: rdfms-xmllang - text for a note"
id="4.2.0.58.J.20020311211242.00a93a20@localhost"
charset="us-ascii"
inreplyto="3C7F9C15.3E54AB87&#64;profium.com"
expires="-1"


To: Martyn Horner<martyn.horner@profium.com>, Jeremy Carroll<jjc@hplb.hpl.hp.com>
Cc: John Cowan<jcowan@reutershealth.com>,Misha.Wolf@reuters.com,bwm@hplb.hpl.hp.com,w3c-i18n-ig@w3.org,w3c-rdfcore-wg@w3.org

At 16:19 02/03/01 +0100, Martyn Horner wrote:
>Jeremy Carroll wrote:

> > NOTE: This definition of equality is appropriate when constructing an RDF
> > graph, when checking an RDF test case, and when interpreting an RDF graph
> > according to the RDF model theory. In other contexts it is usually more
> > appropriate to use the methods described in RFC 3066 treating a missing
> > language tag as "*".

>What are your `other contexts'? I guess you mean non-RDF contexts by the
>(I hope) all-inclusive `when interpreting an RDF graph
>according to the RDF model theory'. I am anxious to make the point that
>the same transitive equivalence criteria are used throughout RDF
>construction and querying (and hence in the construction of queries in
>any query language).

Hello Martyn,

I think it's clear that for URIs, we need an extremely careful
and clear definition of transitive equivalence, and RDF tools
shouldn't use anything else than this definition. URIs are
what keeps the Semantic Web (and the Web as we know it) together.

On the other hand, for the matching of literals, we need an equally
clear definition of transitive equivalence in the model mainly so
that we can state other kinds of equivalences and relationships
based on the core model equivalence.

While the significance of two URIs being equivalent in two
pieces of RDF is very high, the significance of two literals
in two pieces of RDF being equivalent (by whatever definition
of equivalence we chose for the RDF model) should not be
overestimated. If you happen to find two labels "John Smith",
in two different pieces of RDF that you merge, while they
may indeed be merged in the model, any kind of query language or
application that would run off and conclude that what's
behind these two labels is in any serious way related, without
using other evidence, would be in serious danger of producing
nonsense. On the other hand, with significant additional
evidence and logic, you might well be able to deduce that
what is behind the two labels "John B. Smith" and "jsmith"
is indeed the same person.

So a good RDF query tool will be able to help users to use
the appropriate equivalences the right way, to their benefit.
A tool that just runs off and does blind equivalencing on everything
won't help anybody. As an example, if RDF is used for metadata,
e.g. in the context of Dublin Core, equivalences ignoring
language, ignoring accents, ignoring case, and more, may
well be what users need.


Regards,   Martin.



