docno="lists-050-13709828"
received="Fri Mar 15 05:40:02 2002"
isoreceived="20020315104002"
sent="Fri, 15 Mar 2002 10:20:55 -0000"
isosent="20020315102055"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="xml literal (was RE: Weekly Call for Agenda Items)"
id="JAEBJCLMIFLKLOJGMELDIEGCCDAA.jjc@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDMEFMCDAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"

To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Brian McBride"<bwm@hplb.hpl.hp.com>,"RDF Core"<w3c-rdfcore-wg@w3.org>


I am sorry, I messed up.

The wording I proposed does not meet up with DaveB's proposal for N-triple
(i.e. that xml ltieral equality in N-triple is binary compare).

Here's another attempt, with the same intent but also getting compatibility.


NEW:
[[[
1. Propose that:
- the exact form of the string value corresponding to any given XML Literal
within RDF/XML is implementation dependent.
- the string value is well-balanced XML that can be inserted as the elment
content between two tags:

<foo></foo>

to form an XML document, satisfying both XML and XML Namespaces.

- taking the exclusive canonicalization of both the original XML Literal in
its containing document, and the string value within the dummy "<foo></foo>"
document produce the same character string.
- that the canonicalization above is without comments
- that this closes the xml literal and xml literal namespaces issues

2. Propose that:
The Ntriple test cases for xml literal are defined using the exclusive
canonicalization without comments. The following algorithm can be used to
generate n-triple output to verify test case conformance:
- take the string value returned from the parser for an xml literal
- create a new XML document by inserting that string value between
<foo></foo>
- take the exclusive canonicalization without comments of the element
content of this new document and output this value as the string component
of the n-triple.
]]]


Moreover, we don't need to add a suite of C14N-X tests to the test suite, so
how about restricting our test cases to as easy as possible ones while
exercising the relevant cases, e.g.:
- no predefined entity or character references in the output
- keeping the number of attributes in elements down, and trying to avoid the
cases where reordering of attributes happens.
- no new lines at all
- input should be reasonably canonical (e.g. canonical use of whitespace,
use of (") not (') for attribute values)


I would guess we do need to show
- adding visibly used namespace declarations
- PI handling?
- entity reference substitution?

I think we could omit:
- comment handling?
- removing of unused namespace declarations?

The dividing line is:
- the ones I think should be in show what is interoperably required of any
implementation needs to do (e.g. expand entities, retain PIs, put in
visisbly used namespaces)
- areas which are only part of C14N and not really imported into the RDF
specification except as a way of getting equality are not in the tests
- areas which we are deliberately leaving vague are not in the tests.

OLD:

> [[[
> Propose that:
> - the exact form of the string value corresponding to any given
> XML Literal
> within RDF/XML is implementation dependent.
> - the string value is well-balanced XML that can be inserted as the elment
> content between two tags:
>
> <foo></foo>
>
> to form an XML document, satisfying both XML and XML Namespaces.
>
> - taking the exclusive canonicalization of both the original XML
> Literal in
> its containing document, and the string value within the dummy
> "<foo></foo>"
> document produce the same character string. Equality between xml
> literals is
> defined on this basis, but only for the purpose of exercising the test
> cases. [Such equality may be used for other purposes but there are
> other notions of equality (such as via Inclusive Canonicalization) that
> may also be useful.]
> - that the canonicalization above is without comments
> - that this closes the xml literal and xml literal namespaces issues
> ]]]
>



