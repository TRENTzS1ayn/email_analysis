docno="lists-050-14455688"
received="Thu Mar 21 09:17:11 2002"
isoreceived="20020321141711"
sent="Thu, 21 Mar 2002 14:13:54 +0000"
isosent="20020321141354"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Datatyping issue, too many options?"
id="5.1.0.14.0.20020321140030.03166320@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="p05101417b8b996e415d2&#64;[65.212.118.252]"
expires="-1"


To: Pat Hayes<phayes@ai.uwf.edu>, Graham Klyne<GK@NineByNine.org>
Cc:w3c-rdfcore-wg@w3.org

At 16:53 16/03/2002 -0800, Pat Hayes wrote:
[...]

>>(3) Section 5:
>>
>>    ex:Jenny ex:age _:x .
>>    _:x rdfs:dlex "10" .
>>    ex:age rdfs:drange datatype:decimal .
>>
>>I think that options (1) and (2) cover the use cases that have been put 
>>forward.  I don't recall a use-case that needs (3), so this may be an 
>>issue to the extent that the proposal goes to some additional effort to 
>>support more options than may be really needed.

I think the issue here is whether we need to retain the ability to say:

   ex:Jenny ex:age _:x .
   _:x rdfs:dlex "10" .

when we can say:

   ex:Jenny ex:age _:x .
   _:x xsdr:decimal "10" .

The former is useful if we want to be able to represent a graph where the 
type of _:x is unknown, and then later add it, for all uses of ex:age by 
adding the triple:

   ex:age rdfs:range xsdr:decimal . # or drange if you prefer

A user case I have heard mentioned is where one scrapes some data from a 
web page, captures it as:

   ex:Jenny ex:age _:x .
   _:x rdfs:dlex "10" .

Later discover that age's take a decimal value and add the range constraint.

It does seem to met that its unlikely to be too onerous to use replace the 
rdfs:dlex xsdr:decimal in that situation.

Pat was pretty pasionate about this facility being needed;  I'm not groking 
it.  Can anyone suggest what I'm missing?

Brian



