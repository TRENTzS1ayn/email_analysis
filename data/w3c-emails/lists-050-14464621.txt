docno="lists-050-14464621"
received="Thu Mar 21 09:27:56 2002"
isoreceived="20020321142756"
sent="Thu, 21 Mar 2002 14:25:51 +0000"
isosent="20020321142551"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="RE: Unasserted triples, Contexts and things that go bump in      the night."
id="5.1.0.14.0.20020321141512.030f94a0@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDKEHDCDAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Dan Connolly"<connolly@w3.org>
Cc:"Pat Hayes"<phayes@ai.uwf.edu>,<w3c-rdfcore-wg@w3.org>

At 13:54 21/03/2002 +0000, Jeremy Carroll wrote:



> > At 22:28 20/03/2002 -0600, Dan Connolly wrote:
> > [...]
> > >Oh... but more substantively:
> > >the hassle of dealing with an infinite number
> > >of rdf:_1 rdf:_2 things.
>Brian:
> > Hmmm.  Its been proposed we make all those subproperties of some common
> > super property, e.g. rdf:member.  Is there anything we are likely
> >  to want
> > to say about any rdf:_nnn that is not true of rdfs:member.  Would
> > that deal
> > with this, or am I missing the point?
>
>The latter :( ...
>
>The problem is that the daml:list construction with an explicit end is
>viewed as safer vis-a-vis a closed world assumption that is being made.

I'm aware of the point about closure.  I thinks there are ways to deal with 
that. DanC brought up another point about handling the infinity of rdf:_nnn 
properties.  I took that to mean that there are problems e.g. stating that 
they are all of type rdfs:Property.

I now realise that it would be somewhat tedious to define an infinite set 
of subproperties, e.g. foo:_1 a subproperty of rdf:_1, foo:_2 etc.

Brian



