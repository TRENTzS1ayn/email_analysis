docno="lists-050-15124897"
received="Mon Mar 25 08:11:51 2002"
isoreceived="20020325131151"
sent="Mon, 25 Mar 2002 14:10:59 +0100"
isosent="20020325131059"
name="Massimo Marchiori"
email="massimo@w3.org"
subject="RE: motivation for bNodes/existentials in RDF; note for parsers"
id="NGBBJNKIMLOPPCFHEJEMKEMACAAA.massimo@w3.org"
charset="iso-8859-1"
inreplyto="1016852387.30410.180.camel&#64;dirk"
expires="-1"

To:"Dan Connolly"<connolly@w3.org>,"Pat Hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>,"Lynn AndreaStein"<las@olin.edu>



> -----Original Message-----
> From: Dan Connolly [mailto:connolly@w3.org]
> Sent: Saturday, March 23, 2002 3:59 AM
> To: Pat Hayes
> Cc: w3c-rdfcore-wg@w3.org; Massimo Marchiori; Lynn AndreaStein
> Subject: motivation for bNodes/existentials in RDF; note for parsers
>
>
> Pat, Dave,
>
> I just explained to another colleague of
> mine, Massimo, that RDF formulas are not
> just sets of ground facts...
>   (and
>     (p1 s1 o1)
>     (p2 s2 "lit2")
>     ...
>    )
>
> but that RDF can express existential quantification...
>
>  (exists (?b1 ?b2 ?b3 ...)
>   (and
>     (p1 s1 ?b1)
>     (p2 ?b2 "lit2")
>     ...
>    )

<disclaimer>
In these kind of sentences I always have to argue with Dan, as
he always says so and I always reply in the usual way...
So, restating the above, the *current version of the
RDF Model theory* states that the interpretation of RDF
ought to be ... bla.
This is important to remember, as it's a fundamental design choice
that it's going to be decided, but it's not present in the
"normative RDF" (M&S) document.
</disclaimer>

> Have you added some explanation about that
> to the model theory spec?
I think what concerns me most, in this context, is the appropriate
explanation of why this is the choice to make, versus the most
obvious choice we have at our disposal (i.e., skolemization).
That is, what are the pro's and con's that favour the existential
approach vs the skolem one?
AFAIK the second one has been so far the natural choice (the
"understood standard" if you want ;), for some good reasons.
So, summing up, since this is a fundamental architectural decision
(not just syntactic sugaring) concerning RDF, what is most interesting
is to give the reasons for this interpretation vs the easiest skolem one.
Yes, it's a classic "last call" fundamental question, because that spawns
into the data model, on which there are many things to discuss, but well,
Dan brought the matter up early ;)

Thanks,
-M

ps Apologies if the pro-con analysis and motivation has already been posted,
if so I probably missed it (not an unlikely possibility).



