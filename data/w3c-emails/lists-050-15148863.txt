docno="lists-050-15148863"
received="Mon Mar 25 09:06:40 2002"
isoreceived="20020325140640"
sent="Mon, 25 Mar 2002 14:06:02 +0000 (GMT)"
isosent="20020325140602"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="RE: motivation for bNodes/existentials in RDF; note for parsers"
id="Pine.GSO.4.44.0203251359270.12799-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="NGBBJNKIMLOPPCFHEJEMKEMACAAA.massimo&#64;w3.org"
expires="-1"

To: Massimo Marchiori<massimo@w3.org>
cc: Dan Connolly<connolly@w3.org>, Pat Hayes<phayes@ai.uwf.edu>, w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>, Lynn AndreaStein<las@olin.edu>


On Mon, 25 Mar 2002, Massimo Marchiori wrote:

> > Have you added some explanation about that
> > to the model theory spec?
> I think what concerns me most, in this context, is the appropriate
> explanation of why this is the choice to make, versus the most
> obvious choice we have at our disposal (i.e., skolemization).
> That is, what are the pro's and con's that favour the existential
> approach vs the skolem one?
> AFAIK the second one has been so far the natural choice (the
> "understood standard" if you want ;), for some good reasons.

Not for everyone.

> So, summing up, since this is a fundamental architectural decision
> (not just syntactic sugaring) concerning RDF, what is most interesting
> is to give the reasons for this interpretation vs the easiest skolem one.
> Yes, it's a classic "last call" fundamental question, because that spawns
> into the data model, on which there are many things to discuss, but well,
> Dan brought the matter up early ;)

At the first WG F2F we had a long (and, i think, productive) argument*
about this. Sergei produced a good set of pros and cons; my arguments
for this are ...

- supports "non-assertional" mode, ie, RDF querying by turning around
  the "X entails what?" into "what entails X?"

- aesthetic reasons, and those of transparency. When I write an
  assertion with a blank node, I intend it to mean "there exists...".

- DanC also claimed that skolemisation was too much of a general
  impediment to getting software written :-) I think he may have
  been dramatising for, well, dramatic effect, but I've some sympathy
  with this POV. In other words, supporting anonymous nodes requires
  some API fiddling, but is not necessarily a "simpler mechanism".


jan

* debate may not be too kind a word. It was certianly heated!

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287088 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Generalisation is never appropriate.



