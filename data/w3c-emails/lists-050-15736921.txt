docno="lists-050-15736921"
received="Wed May  1 08:01:12 2002"
isoreceived="20020501120112"
sent="Wed, 1 May 2002 13:00:16 +0100"
isosent="20020501120016"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: comments on syntax wd: bug in graph seriali[zs]ation algo"
id="JAEBJCLMIFLKLOJGMELDEEOJCDAA.jjc@hplb.hpl.hp.com"
charset="US-ASCII"
inreplyto="p05101509b8f36688e670&#64;[65.212.118.251]"
expires="-1"

To:"Pat Hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>




> -----Original Message-----
> From: w3c-rdfcore-wg-request@w3.org
> [mailto:w3c-rdfcore-wg-request@w3.org]On Behalf Of Pat Hayes
> Sent: 29 April 2002 23:12
> To: Jeremy Carroll
> Cc: w3c-rdfcore-wg@w3.org
> Subject: RE: comments on syntax wd: bug in graph seriali[zs]ation algo
>
>
> >DanBri:
> >>  I propose section 6 be dropped for now, until this is fixed.
> >
> >Opposed.
> >
> >There are practical problems in RDF serialization.
> >At some point the specs need to acknowledge this, and indicate to
> >implementors what they should do.
>
> Why does the spec need to tell implementors what to do? There are
> several well-known techniques for handling local variables, and the
> choice is up to the implementor.

The problem is, I have the graph:

_:a <eg:foo> _:a .

I wish to write an RDF/XML file that conveys the information.
I cannot, what should I do.

The solution in section 6 is:
1: take an instance of the graph that is serializable in RDF/XML
2: serialize that instance.

I agreed with DanB that there was not enough warning text about that
operation.

But there is a practical problem, and it is part of our job to clarify both
the existence of and possible work-arounds to, this problem.

>
> >In RDF2 I would hope to fix
>
> Fix what?
>
> >this, e.g. allow the "_:nnn" bnode syntax as
> >matching uriref production in the grammar.
> >That was out of charter.
> >
> >The charter allows us to clarify M&S.
> >The clarification is "this is screwed up".
>
> Wait: its not screwed up. The MT is about as clear as it can possibly
> be on this issue. Bnodes are not urirefs, and it is *invalid* to
> replace a bnode by a uriref, even a 'new' one.  Sorry about the
> practical problems, but life is like that.

practical problems = screwed up

no offence to the MT (which I hold in highest regard) but it isn't
everything.

Jeremy



