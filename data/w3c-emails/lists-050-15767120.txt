docno="lists-050-15767120"
received="Thu May  2 03:29:45 2002"
isoreceived="20020502072945"
sent="Thu, 02 May 2002 10:32:57 +0300"
isosent="20020502073257"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: The place of rdfs:Literal's in the world..."
id="B8F6C659.145E9%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="p0510150ab8f36ac1e3e3&#64;[65.212.118.251]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-04-30 1:12, "ext Pat Hayes" <phayes@ai.uwf.edu> wrote:

>> On 2002-04-29 9:04, "ext Patrick Stickler" <patrick.stickler@nokia.com>
>> wrote:
>> 
>>>>>  .....
>>>>> 
>>>>>  # Rule 4 (this is new)
>>>>> 
>>>>>  {
>>>>>     ?p rdfd:datatype ?d .
>>>>>     ?s ?p ?l .
>>>>>     ?l rdf:type rdfs:Literal
>>>>>  }
>>>>>  log:implies
>>>>>  {
>>>>>     ?s ?p ?o.
>>>>>     ?o rdfd:lex ?l
>>>>>  } .
>>>> 
>>>>  I don't think rule 4 is valid. That is, Im not sure quite what
>>>>  ?l rdf:type rdfs:Literal .
>>>>  is intended to convey, but if its supposed to say that the object of
>>>>  the previous triple is a literal, then the rule is not valid.
>> 
>> I would like to (finally) clarify a few things about rdfs:Literal that
>> have been confusing at least me (and perhaps others) for some time.
>> 
>> A few specific questions:
>> 
>> 1. Is it true that rdfs:Literal rdfs:subClassOf rdfs:Resource ?
> 
> Not necessarily, no. That triple can be true or false in a given
> interpretation, ie its not true in all of them.
> 
> We could change the MT to make it universally true if y'all feel that
> would make sense. What that amounts to would be saying that all
> interpretations must have all literals in their universe of discourse
> (assuming that literals denote themselves, as they do no. If literals
> can denote values, as in the now-reopened datatyping proposals, then
> it would say that all interpretations must contain all literal
> values. )

Would the latter work for both cases? I.e. would it fit with the present
approach yet allow a possible shift later if so decided?

>> 
>> 2. Even if a blank node or URIref denotes a (literal) string, can
>>    a blank or URIref node be rdf:type rdfs:Literal?
> 
> Not sure what you mean.  Strictly speaking, a piece of the graph
> syntax doesn't have an rdf:type of any kind. The only *things* that
> are of rdf:type rdfs:Literal are strings; but a uriref can denote a
> string.

Well, I'm trying to come to grips with the assertion by the RDFS
spec that members of rdfs:Literal are self denoting so it seems
to say that the nodes themselves are the members of rdfs:Literal,
not the strings they denote.
 
>> 
>> The latest Schema draft says:
>> 
>> rdfs:Literal     This represents the set of atomic values,
>                 eg. textual strings.
>> and
>> 
>> rdfs:Literal
>> 
>> rdfs:Literal represents the self-denoting nodes called the 'literals' in the
>> RDF graph structure. Atomic values such as textual strings are examples of
>> RDF literals.
> 
> Oh dear. It shouldn't say things like that. (Rats, something else to
> read and review. )

OK, this may be the source of my misunderstanding.

How would you word it? What are the members of rdfs:Literal?

>> Fair enough, but is a blank node that denotes a literal string
>> "atomic"? What does it mean for a node to be "atomic"? And if a literal
>> node is self-denoting, then I would expect that a blank node or URIref
>> node that denotes a literal is *not* itself of rdf:type rdfs:Literal,
>> since it is not a self-denoting node. Eh?
> 
> The thing that is of the type is the denotation of the node - what
> the node refers to, or talks about - not the node itself. So if the
> bnode denotes a string, then the triple made up of it plus 'rdf:type'
> plus 'rdfs:Literal' is true.  See the basic definition of I( s p o .)
> in the MT.

That's what I thought. In which case, I don't see how having

   _:x daml:equivalentTo "10" .
   Jenny ex:age _:x .

is any different than

   Jenny ex:age "10" .

and the automatic membership of that denoted by the bnode _:x
and the literal node "10" as rdfs:Literal .

>> as that is a special class that reflects members of the graph syntax. E.g
>> 
>> URIRef/Blank Nodes       rdfs:Resource
>> Literal Nodes            rdfs:Literal
>> Property Arcs            rdf:Property
>> 
>> Eh? Is this wrong?
> 
> Yep.
> 
>> If so, why?
> 
> It confuses use and mention.

I understand.

> 
>> I'd *really* appreciate some clarification on this issue. Thanks.
> 
> Hope this helps.

It did.

Thanks,

Patrick

> Pat
> 

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



