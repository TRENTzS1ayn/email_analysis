docno="lists-050-16199327"
received="Thu May 16 14:51:20 2002"
isoreceived="20020516185120"
sent="16 May 2002 13:51:12 -0500"
isosent="20020516185112"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: Dublin Core, the Primer and the Model Theory"
id="1021575072.2295.84.camel@dirk"
inreplyto="5.1.0.14.2.20020516164455.03b45b20&#64;joy.songbird.com"
expires="-1"

To: Graham Klyne<Graham.Klyne@MIMEsweeper.com>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org


On Thu, 2002-05-16 at 11:17, Graham Klyne wrote:
> At 08:49 AM 5/16/02 -0500, Dan Connolly wrote:
> >The way I see it, dc:creator relates a work to
> >either its creator or a name for its creator.
> >So the conclusion just says that the two works
> >have either the same creator or have creators with
> >the same name.
> >
> >I'd rather the dublin core folks didn't use
> >RDF this way, but they did choose to, and
> >I'm pretty sure they were made aware of
> >this sort of nonsense when they made the choice.
> 
> I don't think it's "nonsense", even though it may be less precise than some 
> alternative usages one might envisage.
> 
> It's also a pattern of RDF use that seems to be very common among simple 
> applications, not just Dublin Core, which is not surprising given it has 
> always been enshrined in the RDF specifications, from the very first 
> example.  To try and turn that around, I think you might as well give up on 
> much of the following and energy that has gone into making even some small 
> successes for RDF, and start again from scratch.


Well, maybe.

But keep in mind there are at least a few implementations
that we break if we go the other way:

  # how does existing RDF software handle this datatypes test?
http://lists.w3.org/Archives/Public/www-rdf-interest/2002Jan/thread.html#199


Responses indicate RDQL, rdfql, Squish, and Euler think literals
are tidy. But there was some indication of willingness to change...
"things could be changed to support non-tidy literals and then
I suppose you'd have to do something like...".


I suppose I'm willing to think it over, again. But tidy literals
is pretty deeply embedded into all the software and applications
I've developed over the last 18 months.

> Loads of folks are using XML for application data.  Many of these 
> applications are, IMO, natural territory for RDF.  I've had mixed success 
> persuading people to use an RDF-based format, but where I have had small 
> successes it's been on the basis that RDF doesn't have to be a giant leap 
> from what people are already doing.  Using literal text in loose ways, like 
> dc:creator, is something that I believe application designers need if they 
> are not to be put off using RDF.
> 
> RDF, and in particular Pat's 'simpledatatype2' [1], can accommodate that 
> kind of looseness without irretrievably damaging it's ability to be more 
> precise when the need arises (or is recognized).
> 
> My view is that adopting a datatyping proposal that accommodates the ways 
> that application designers feel comfortable with will have a big effect on 
> RDF's eventual fate.  I have not personally found the arguments that lead 
> us to require tidy literal interpretations to be compelling.  That this 
> approach leads to characterizations of the Dublin Core approach as 
> "nonsense" is indicative (to me) that it's out of step with thinking of 
> application designers in the large.
> 
> #g
> --
> 
> [1] http://www.coginst.uwf.edu/users/phayes/simpledatatype2.html
> 
> 
> 
> -------------------
> Graham Klyne
> <GK@NineByNine.org>
-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



