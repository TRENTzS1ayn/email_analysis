docno="lists-050-1791493"
received="Tue Jan 15 02:45:25 2002"
isoreceived="20020115074525"
sent="Tue, 15 Jan 2002 09:45:31 +0200"
isosent="20020115074531"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: RDF datatyping goals (action from teleconference)"
id="B869AABB.B9A3%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20020113114610.00a878f0&#64;joy.songbird.com"
expires="-1"

To: ext Graham Klyne<Graham.Klyne@MIMEsweeper.com>, Jeremy Carroll<jjc@hplb.hpl.hp.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-01-13 14:29, "ext Graham Klyne" <Graham.Klyne@MIMEsweeper.com>
wrote:


> I think there are three kinds of schema-related usage pattern that we
> may 
> wish to consider:
> (a) schema statements included explicitly in the same RDF document
> (b) schema statements referenced in a separate RDF document
> (c) schema statements implied and "understood" by the processing
> application
> 
> ... 
>
> I'll argue that a non-schema-aware application that operates per (c) is
> semantically equivalent to schema-aware application that operates per
> (b);  a (b) application can exchange information with a (c) application
> (presuming the appropriate schema document can be discovered for (b)).

I agree. Whether (b) or (c) is imployed is an issue of modularity, not
of functionality. And in fact, in the case of (c), a schema may in fact
exist be considered a design specification to be interned in an application
which, for efficiency reasons, omits arbitrary schema processing.

> I'll also argue that (a) is semantically equivalent to (b) in the sense
> that if an RDF graph and any associated schema graphs are merged, the
> result can be interpreted per (a).

This I don't fully agree with. The typing knowledge defined in the
schema may have multiple possible interpretations.

The semantics of the rdfs:range 'constraint' (as I see it) is to
define an implicit union of data types, the members being the objects
of the rdfs:range, which may be used to

1. Deduce the type(s) of a non-locally typed literal by examination
   of those lexical forms in terms of the definition of the lexical
   space for each type (all types which match are inferred as valid
   types for the literal). In the case of XML Schema, where type unions
   are explicitly ordered, this deduction would infer only one type,
   namely the first to match the lexical form as a valid member of its
   lexical space.

2. Constrain the type(s) of a locally typed literal by expecting/requiring
   that the literal represents a lexical form that is a member of the
   lexical space of at least one of the union member types.

and I'm sure that other equally valid and useful interpretations exist.

Which interpretation is applied is up to the particular application.

It is not assumed, IMO, that the evaluation of global typing knowledge
would involve the modification/extension of the explicitly defined
(local) typing knowledge in the graph -- though an application would
be free to assert additional statements based on whatever interpretation
and other operations it performs in terms of the graph.

> So, we have three usage patterns that are equivalent

Unfortunately, no...    Only (b) and (c) are equivalent.

> This suggests to me that the idioms in the datatyping desiderata would
> better be presented in two parts:  "direct statements" from which some
> meaning is directly derived, and schema statements that help to define
> the 
> environment for evaluation of the direct statements.

I think we are, in principle, in agreement here, in that the foundation
of what datatyping "is" or "means" is independent of idiom, and that
idioms are explained in terms of how they relate to that foundational
model.

This is the approach taken by PD, where the foundational model is the
pairing of lexical form to datatype identity, and different idioms
allow an application to obtain, deduce or infer that pairing.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



