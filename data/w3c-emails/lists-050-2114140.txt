docno="lists-050-2114140"
received="Fri Jan 18 07:49:39 2002"
isoreceived="20020118124939"
sent="Fri, 18 Jan 2002 12:48:17 +0000"
isosent="20020118124817"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Review of MT"
id="5.1.0.14.0.20020118124710.030d49b0@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="B86DC7F3.BCE8%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>, RDF Core<w3c-rdfcore-wg@w3.org>

At 12:39 18/01/2002 +0200, Patrick Stickler wrote:
>On 2002-01-14 5:35, "ext Jeremy Carroll" <jjc@hplb.hpl.hp.com> wrote:
>
>
> > I was disappointed that no account was offered of the relationship
> > between:
> >
> > <a> <rdf:type> <rdf:bag> .
> > <a> <rdf:_1> <b> .
> > <a> <rdf:_2> <c> .
> >
> > and
> >
> > <a> <rdf:type> <rdf:bag> .
> > <a> <rdf:_2> <b> .
> > <a> <rdf:_1> <c> .

My understanding of Pat's plan is to get the current version out and then 
move on to wrapping it up by sorting out containers and reification.  I 
suggest we don't want to delay this till those are done.

Brian



> >
> > My belief is that we either need to offer such an account
> > or drop rdf:bagID from the syntax. In certain cases a parser
> > may produce either from identical input.
>
>Sticking my neck out....
>
>Perhaps we could do the following, to alleviate this problem:
>
>1. Define a different closure rule for rdf:Bag and rdf:Alt
>    which retains the rdf:li (not rdf:_n) relations to members.
>
>2. Define a closure rule which declares that rdf:_n for every 'n'
>    is an rdfs:subPropertyOf rdf:li -- so that queries for all
>    rdf:li statements for a collection will match all rdf:_n
>    subproperties.
>
>This captures IMO the fact that rdf:Bag and rdf:Alt are not ordered
>but rdf:Seq is, and provides a single membership relation (rdf:li)
>for all collection memebers, regardless whether membership relations
>are defined in terms of rdf:li or rdf:_n.
>
>The separate closure rules for rdf:Bag and rdf:Alt will also
>preclude separate parsers from generating different, incompatable
>graphs. I.e. you'd always get
>
>  <a> <rdf:type> <rdf:Bag> .
>  <a> <rdf:li> <b> .
>  <a> <rdf:li> <c> .
>
>The question of repetition of bag members then depends on
>the fact (?) that redundant statements are not merged in a tidy
>graph, only their components.
>
>Thus,
>
>  <a> <rdf:type> <rdf:Bag> .
>  <a> <rdf:li> <b> .
>  <a> <rdf:li> <b> .
>  <a> <rdf:li> <c> .
>
>Constitutes four distinct statements (triples) and the bag thus
>has two instances of <b> in it. But no ordering is defined, as
>is the nature of bags.
>
>The comparable rdf:Seq would have its member relations mapped
>to rdf:_n properties according to the RDF/XML serialization
>order, and thus, all parsers will produce the identical graph,
>as is now the case.
>
>  <a> <rdf:type> <rdf:Seq> .
>  <a> <rdf:_1> <b> .
>  <a> <rdf:_2> <b> .
>  <a> <rdf:_3> <c> .
>
>Eh?
>
>Patrick
>
>--
>
>Patrick Stickler              Phone: +358 50 483 9453
>Senior Research Scientist     Fax:   +358 7180 35409
>Nokia Research Center         Email: patrick.stickler@nokia.com



