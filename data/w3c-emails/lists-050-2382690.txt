docno="lists-050-2382690"
received="Fri Jan 18 19:39:47 2002"
isoreceived="20020119003947"
sent="Sat, 19 Jan 2002 01:39:27 +0100"
isosent="20020119003927"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: review MT draft"
id="OFB5E88C37.4DDEFE81-ON41256B46.0000FBD7@bayer-ag.com"
charset="us-ascii"
inreplyto="review MT draft"
expires="-1"

To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org


>>>>2/ my main comment is w.r.t. the need for unasserted triples
>>>>i.e. one could assert e.g. rrr ppp ooo.
>>>>suppose rrr is a resource which is a set of triples
>>>>then those triples in rrr are *not* necesarily asserted
>>>>OK, this is when ppp is something like log:implies
>>>>or something else where we need dereferencing rrr
>>>>(or rrr could be identified by value such as in N3)
>>>>anyhow that rrr can be a set of unasserted RDF triples
>>>
>>>This point seems to go beyond RDF as it is currently constituted, so
>>>unless we plan to open up this issue of resources being sets of
>>>triples, I propose to ignore this issue for now.
>>
>>fair enough (for the current state of the art of RDF MT)
>>but I think that "resources being sets of triples" are evident
>
>Well, of course a resource can be anything, so I guess it can be a
>set; but saying that is one thing, and expecting to be able to get
>inside the set and access its contents is something else. That is a
>whole other issue that involves in effect adding a set theory to RDF.
>It might be a simple set theory, but its still a big step from here
>we are now.

well, I thought that *set of triples* was an RDF graph...
[[
  An RDF graph can be defined in terms of labeled nodes and arcs
  (see Appendix A), but we will use an equivalent but more convenient
  definition, in which a graph is defined to be *a set of triples* of
  the form <S, P, O>, where P is a URI reference (in the sense of
  [RFC 2396]), which we will call auriref, S is either a uriref or a
  blank node, and O is either a uriref, a blank node, or a literal.
]]
of course not necessarily asserted
btw, I think the flag (asserted/unasserted) is at that set/graph level
(and not at the individual triple level)
also the (de)referencing is determined by ppp
(which indeed requires builtin stuff)
no???

>>(also in the light of tagging them or so, so this is
>>in a way related to the "(drop) reification" issue
>>and after all to the use/mention stuff)
>
>Yes, I agree it is related.
>
>>>Mind you, that might be a good issue to open up, if folk feel that it
>>>doesn't go beyond our charter. (?)
>>
>>I mind :-)
>
>OK, let me try to write up some ideas which arise from recent webOnt
>emailings together with this and maybe that will get things started.
>Some time next week.

really! I'm looking forward (and glad, because I cannot write well)

--
Jos



