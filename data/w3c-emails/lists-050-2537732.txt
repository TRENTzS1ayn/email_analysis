docno="lists-050-2537732"
received="Mon Jan 21 08:17:34 2002"
isoreceived="20020121131734"
sent="Mon, 21 Jan 2002 14:11:51 +0100"
isosent="20020121131151"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: review MT draft"
id="OFE27DEC8A.DB8653B2-ONC1256B48.004789A4@bayer-ag.com"
charset="us-ascii"
inreplyto="review MT draft"
expires="-1"

To:phayes@ai.uwf.edu
Cc:w3c-rdfcore-wg@w3.org


>>>>>>2/ my main comment is w.r.t. the need for unasserted triples
>>>>>>i.e. one could assert e.g. rrr ppp ooo.
>>>>>>suppose rrr is a resource which is a set of triples
>>>>>>then those triples in rrr are *not* necesarily asserted
>>>>>>OK, this is when ppp is something like log:implies
>>>>>>or something else where we need dereferencing rrr
>>>>>>(or rrr could be identified by value such as in N3)
>>>>>>anyhow that rrr can be a set of unasserted RDF triples
>>>>>
>>>>>This point seems to go beyond RDF as it is currently constituted, so
>>>>>unless we plan to open up this issue of resources being sets of
>>>>>triples, I propose to ignore this issue for now.
>>>>
>>>>fair enough (for the current state of the art of RDF MT)
>>>>but I think that "resources being sets of triples" are evident
>>>
>>>Well, of course a resource can be anything, so I guess it can be a
>>>set; but saying that is one thing, and expecting to be able to get
>>>inside the set and access its contents is something else. That is a
>>>whole other issue that involves in effect adding a set theory to RDF.
>>>It might be a simple set theory, but its still a big step from here
>>>we are now.
>>
>>well, I thought that *set of triples* was an RDF graph...
>
>True, true. Hmmm. And if we use a URI in a subject position that
>happens to be the URI of an RDF graph, then it seems reasonable
>enough that it ought to *denote* that set of triples, right? OK, I'm
>getting there...
>
>>[[
>>   An RDF graph can be defined in terms of labeled nodes and arcs
>>   (see Appendix A), but we will use an equivalent but more convenient
>>   definition, in which a graph is defined to be *a set of triples* of
>>   the form <S, P, O>, where P is a URI reference (in the sense of
>>   [RFC 2396]), which we will call auriref, S is either a uriref or a
>>   blank node, and O is either a uriref, a blank node, or a literal.
>>]]
>>of course not necessarily asserted
>>btw, I think the flag (asserted/unasserted) is at that set/graph level
>>(and not at the individual triple level)
>>also the (de)referencing is determined by ppp
>
>Why ppp and not sss? [Later: Oh, I see, the ppp is what does the
>DEreferencing. Ah, cute. Some properties can look inside their
>subject/object denotations and get at the stuff inside. There are all
>kinds of semantic rocks lurking here, as Im sure you know, but we
>might be able to find a safe path through them.  More later...Sorry
>Im slow...]

well, one possible *safe path through them* could be
using appropriate domain/range declarations such as e.g.
  ppp rdfs:domain log:Formula .
or something like that
do we have a name for the class of RDF graphs or the
set of set of triples?

--
Jos



