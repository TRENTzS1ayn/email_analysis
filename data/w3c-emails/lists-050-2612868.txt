docno="lists-050-2612868"
received="Mon Jan 21 14:00:29 2002"
isoreceived="20020121190029"
sent="Mon, 21 Jan 2002 14:00:26 -0500 (EST)"
isosent="20020121190026"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: use/mention and reification"
id="Pine.LNX.4.30.0201211345570.2880-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="1011638197.2608.6.camel&#64;dirk"
expires="-1"

To: Dan Connolly<connolly@w3.org>
cc: Jan Grant<Jan.Grant@bristol.ac.uk>, RDF core WG<w3c-rdfcore-wg@w3.org>


On 21 Jan 2002, Dan Connolly wrote:

> On Mon, 2002-01-21 at 04:06, Jan Grant wrote:
> > On 18 Jan 2002, Dan Connolly wrote:
> [...]
> > I still don't understand why you can't pronounce
> >
> > <sentence> <rdf:Subject> <mary> .
> >
> > as "the sentence has a subject whose referent is (the person) Mary" -
> > ie, if you just change your intuition about what rdf:Subject "means"
> > does this go away?
>
> Well, yes. That is: it becomes completely useless to me.

For me too. I've used RDF's reification vocab to stuff one RDF graph
inside another to carry it thru RDF environments without the inner graph
content being asserted alongside the 'outer' graph. So I second DanC's
point. My implementor feedback is that current RDF reification vocab (with
Resource rather than Literal or a wrapper node as range of the
pred/sub/obj properties) is broken for my purposes. I can't use it to
carry RDF through RDF. If that's what it's for, it doesn't work.

This bites most obviously with blank nodes, perhaps. Blanks in the inner
graph need to be preserved, regardless of whether the outer graph is
equiped with URIs for those nodes. And vice-versa. Indirecting
pred/subj/obj values through a representation of the node-identifier used
seems to be the only way of doing this over RDF as currently specified.
Or perhaps I should say 'blanks in the inner graph need to be preserved
*for the kind of apps I'm building*'. My apps care a lot about keeping
track of the who-said-what aspects of RDF document interchange and
aggregation. Other apps might be happier doing one big graph merge and
flattening things down, and might I suppose find some role for RDF
reification that hasn't occured to me. The reification vocab was RDF 1.0's
only real nod towards machinery for keeping track of who-said-what; having
it fail for that task is a bit of a downer...

Dan


-- 
mailto:danbri@w3.org
http://www.w3.org/People/DanBri/



