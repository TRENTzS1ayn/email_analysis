docno="lists-050-2681790"
received="Tue Jan 22 03:14:23 2002"
isoreceived="20020122081423"
sent="Tue, 22 Jan 2002 10:15:14 +0200"
isosent="20020122081514"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: use/mention and reification"
id="B872EC32.C067%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="Pine.LNX.4.30.0201211345570.2880-100000&#64;tux.w3.org"
expires="-1"

To: ext Dan Brickley<danbri@w3.org>, Dan Connolly<connolly@w3.org>
CC: Jan Grant<Jan.Grant@bristol.ac.uk>, RDF Core<w3c-rdfcore-wg@w3.org>


On 2002-01-21 21:00, "ext Dan Brickley" <danbri@w3.org> wrote:

> On 21 Jan 2002, Dan Connolly wrote:
> 
>> On Mon, 2002-01-21 at 04:06, Jan Grant wrote:
>>> On 18 Jan 2002, Dan Connolly wrote:
>> [...]
>>> I still don't understand why you can't pronounce
>>> 
>>> <sentence> <rdf:Subject> <mary> .
>>> 
>>> as "the sentence has a subject whose referent is (the person) Mary" -
>>> ie, if you just change your intuition about what rdf:Subject "means"
>>> does this go away?
>> 
>> Well, yes. That is: it becomes completely useless to me.
> 
> For me too. I've used RDF's reification vocab to stuff one RDF graph
> inside another to carry it thru RDF environments without the inner graph
> content being asserted alongside the 'outer' graph. So I second DanC's
> point. 

I don't see that a reified statement constitutes assertion, per the
present treatment where subject, predicate, etc. denote the resource
nodes bearing URI labels rather than URI literals.

If you have

   <rdf:Statement>
      <rdf:subject rdf:resource="#Mary"/>
      <rdf:predicate rdf:resource="#likes"/>
      <rdf:object rdf:resource="#John"/>
   </rdf:Statement>

that does not assert

   <rdf:Description rdf:about="#Mary">
      <likes rdf:resource="#John"/>
   </rdf:Description>

I.e., if there isn't an arc <#likes> from <#Mary>
to <#John> then it isn't asserted, and whether or
not it is asserted does not effect the reification.

It *might* actually be asserted that Mary likes John,
but the authority for the assertion may not be the
same authority for the reification/quoting.

It could be that Bob says that Mary likes John (no
assertion) but Fred asserts that Mary likes John -- and
thus we need for refication to include the actual resource
nodes so the we know we are talking about the same things,
whether such knowledge is quoted or asserted.

The fact that some resource node is created in
the graph that may never participate in any assertion
(rather than just being a URI in a literal) does
not force any interpretation of assertion.

*BUT* should later there arise an actual assertion
of that same knowledge, per RDFs tidying functions,
the named resources participating in reified/quoted
statements and asserted statements sync up (merge), and
we immediately know that the quoted statements and
asserted statements are talking about the same "things".

Thus, I agree with Graham's view that the present
treatment of reification for quoting does not force
an interpretation of assertion, and (adding to that)
that it is essential that we use the same graph
representation for all resources, whether statements
are reified/quoted or asserted.

Even bundling of quoted statements can be handled, by
simply defining a scope qualification for those statements
and extracting them by query. E.g.

   <rdf:Statement>
      <rdf:subject rdf:resource="#Mary"/>
      <rdf:predicate rdf:resource="#likes"/>
      <rdf:object rdf:resource="#John"/>
      <rdfx:scope rdf:resource="uuid:de14f...7c"/>
   </rdf:Statement>

Where the UUID scope relates to the "package" of statements.
None of the "quoted" statements are asserted (at least not
by the refied form) and are easily distinguished from any
other quoted/reified statements.

Cheers,

Patrick 

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



