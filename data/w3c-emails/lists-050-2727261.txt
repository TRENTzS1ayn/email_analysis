docno="lists-050-2727261"
received="Tue Jan 22 05:07:54 2002"
isoreceived="20020122100754"
sent="Tue, 22 Jan 2002 10:06:17 +0000 (GMT)"
isosent="20020122100617"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="Re: use/mention and reification"
id="Pine.GSO.4.44.0201221001140.4771-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="Pine.LNX.4.30.0201211345570.2880-100000&#64;tux.w3.org"
expires="-1"

To: Dan Brickley<danbri@w3.org>
cc: Dan Connolly<connolly@w3.org>, RDF core WG<w3c-rdfcore-wg@w3.org>


On Mon, 21 Jan 2002, Dan Brickley wrote:

> On 21 Jan 2002, Dan Connolly wrote:
>
> > On Mon, 2002-01-21 at 04:06, Jan Grant wrote:
> > > On 18 Jan 2002, Dan Connolly wrote:
> > [...]
> > > I still don't understand why you can't pronounce
> > >
> > > <sentence> <rdf:Subject> <mary> .
> > >
> > > as "the sentence has a subject whose referent is (the person) Mary" -
> > > ie, if you just change your intuition about what rdf:Subject "means"
> > > does this go away?
> >
> > Well, yes. That is: it becomes completely useless to me.
>
> For me too. I've used RDF's reification vocab to stuff one RDF graph
> inside another to carry it thru RDF environments without the inner graph
> content being asserted alongside the 'outer' graph. So I second DanC's
> point.

I really don't follow this. Are you claiming that

<a> <rdf:type> <rdf:Statement> .
<a> <rdf:subject> <foo:mary> .
<a> <rdf:predicate> <baz:owns> .
<a> <rdf:object> <baa:lamb> .

_is_ asserting <..mary> <..owns> <..lamb> ? 'Cause I don't see why that
should be the case. I was looking for MT-based reasons why this doesn't
amke sense, not engineering hacks to encode one graph inside another,
because as far as I can tell, this suffices.

> My implementor feedback is that current RDF reification vocab (with
> Resource rather than Literal or a wrapper node as range of the
> pred/sub/obj properties) is broken for my purposes. I can't use it to
> carry RDF through RDF. If that's what it's for, it doesn't work.
>
> This bites most obviously with blank nodes, perhaps. Blanks in the inner
> graph need to be preserved, regardless of whether the outer graph is
> equiped with URIs for those nodes. And vice-versa.

Again, this begins to sound like an engineering compromise. RDF has
blank nodes (we decided this).

> Indirecting
> pred/subj/obj values through a representation of the node-identifier used
> seems to be the only way of doing this over RDF as currently specified.
> Or perhaps I should say 'blanks in the inner graph need to be preserved
> *for the kind of apps I'm building*'. My apps care a lot about keeping
> track of the who-said-what aspects of RDF document interchange and
> aggregation. Other apps might be happier doing one big graph merge and
> flattening things down, and might I suppose find some role for RDF
> reification that hasn't occured to me. The reification vocab was RDF 1.0's
> only real nod towards machinery for keeping track of who-said-what; having
> it fail for that task is a bit of a downer...

Agh.
jan (cursing time differences and lack of shared whiteboards)

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287088 Fax +44 (0)117 9287112 RFC822 jan.grant@bris.ac.uk
Boycott Arabic numerals! What have they ever done for us?



