docno="lists-050-3096776"
received="Wed Jan 23 17:10:14 2002"
isoreceived="20020123221014"
sent="Wed, 23 Jan 2002 22:05:22 +0000"
isosent="20020123220522"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: TDL Model Theory"
id="5.1.0.14.2.20020123212738.03901df0@joy.songbird.com"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDAENFCCAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>

At 08:20 PM 1/23/02 +0000, Jeremy Carroll wrote:
>Anyone wanting a heads-up on current state of play:
>
>http://lists.w3.org/Archives/Public/www-archive/2002Jan/0114.html
>
>Patrick and I are now at integration stage and looking well-placed for
>meeting the end-of-the-week deadline.

I'm still working on understanding this ... so far it looks OK to me.  I'm 
focusing on the model theory appendix.

I have a couple of comments/questions...

>Appendix The Model Theory for TDL
>
>Datatypes are viewed as in Patel-Schneider's work [OWL: URL:???]. That is
>each datatype d has four components:
>u(d)   the URI reference
>L(d)   the lexical space (subset of the se of Unicode strings)
>V(d)   the value space,
>M(d)   a subset of L(d) x V(d), such that there is at least one
>pair in M(d) for each string of L(d), and at least one pair in M(d) for 
>each value in V(d).
>
>Unlike previous work, the mapping is a relationship rather  than a function.
>This is specifically to accomodate XML Schema Union datatypes.  A full 
>discussion
>of these is found in the next appendix. For all other datatypes the mapping
>is a function. Each datatype is a resource and is found in the Universe of
>interpretation.
>
>An RDF interpretation is with respect to some possibly empty set, DT, of
>datatypes. DT is a subset of IR, the set of resources.
>We use a set IR of resources, the set of U of Unicode strings and a set VL
>of values. V(d) is a subset of VL for every d in DT.  The Universe is IR
>union ( U x VL )
>
>Terminology
>
>Unicode node   a node in the graph labelled  with a unicode string.
>
>literal-value pair   a pair in U x VL.
>
>
>The Interpretation of Unicode Nodes
>
>Each Unicode node is interpreted as a literal-value pair.
>If E is labelled with u, then I(E) = (u,v) for some v in VL.

OK, they key idea here is that the denotation of a literal node is a 
<unicode-string,value> pair, rather than just a value, right?

So the denotation of a node labeled with "10" and type-designated to be a 
decimal integer can never be exactly the same as a node the denotes just an 
integer value that is, say, the count of my fingers-and-thumbs, without 
regard for how it is lexically represented.   (I don't see this as a 
problem, but note that it seems like a departure from previous approaches.)

>The Interpretation of Datatype URIs
>
>If E is a uriref and the label of E=u(d) for some d in DT, then I(E) = d.

Hmmm... it's just a nit (I think) but this implies that a uriref has a 
label.  Do you mean something like:  "If E is labelled with a uriref and 
the label of E=u(d) ..."

>The Interpretation of Blank Nodes
>The mapping A on blank nodes is unrestricted and a blank node can be 
>interpreted
>as any object in the Universe (including literal-value pairs).
>
>The Interpretation of Asserted Triples
>
>The function IEXT is modified as follows:
>IEXT maps the set of properties IP into the powerset of ( Universe x 
>Universe).

If literals cannot be subjects, would this become a powerset of (IR x 
Universe)?

>IEXT(rdf:value) is the identity of the Univers
>
>For each d in DT
>     IEXT(rdf:type) contains the pair ( (unicode-string, value), d )
>     if and only if (unicode-string, value) is in the map
>associated with d.
>
>Idiom P
>A range constraint on a property p to the URI of a datatype d in DT, imply 
>that:
>d is a class
>the objects of p "belong" to that class (using ICEXT, which is defined in 
>terms of IEXT(rdf:type), which is defined above for d)
>
>Hence the object of p must be interpreteed as a  literal-value pair
>in the map of the datatype.
>
>Idiom D
>
>The interpretation of the blank node, subject of the rdf:value is constrained
>to be the same as the interpretation of the unicode node, by the constraint
>on IEXT(rdf:value).
>
>Moreovoer this literal-value pair is required to be a mapping in the datatype
>by the interpretation of the rdf:type edge.

Something thing that is bothering me about this is:  the interpretation of 
a Unicode node is stated in such a way that there may be several 
literal-value pairs that could be denoted.  Do you mean the interpretation 
in this case to be ambiguous?  Suppose that data types BinaryNumber and 
DecimalNumber are recognized, then a node labelled "10" can denote:
    <BinaryNumber,2>
    <DecimalNumber,10>


Also, how does the change to rdf:type work for data types that don't have a 
defined lexical form?  E.g. consider the format used by RDFWeb for 
describing people:

   _:gk rdf:type  foaf:Person .
   _:gk foaf:name "Graham Klyne" .
   _:gk foaf:mbox <mailto:GK@ninebynine.org> .
   (etc...)

There is no defined lexical form that universally denotes me, the 
person.  So what is the denotation of the thing labelled _:gk ?

#g



------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>
        __
       /\ \
      /  \ \
     / /\ \ \
    / / /\ \ \
   / / /__\_\ \
  / / /________\
  \/___________/



