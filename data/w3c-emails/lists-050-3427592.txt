docno="lists-050-3427592"
received="Thu Jan 24 20:45:21 2002"
isoreceived="20020125014521"
sent="Thu, 24 Jan 2002 19:45:30 -0600"
isosent="20020125014530"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: use/mention and reification"
id="p0510101cb8765a63784c@[65.212.118.208]"
charset="us-ascii"
inreplyto="Pine.GSO.4.44.0201240955400.4771-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To:w3c-rdfcore-wg@w3.org

Hi people. Sorry Ive been out of the loop while this stuff has been 
going on. I am trying to catch up. Some comments on recent 
discussions.

First,  all the Superman discussion is very nice, but largely 
irrelevant to RDF. Most of this stuff about who knows which name 
means the same as which other name, de re versus de dicto, etc., only 
really has any content when the language contains some kind of 
equality, ie some way to *say* that two different names (of 
individuals) co-refer. RDF has no way to say this, and isn't likely 
to ever have it, so why are we even venturing into this philosophical 
minefield? In fact, I'd suggest that any example that involves 
referring to anyone's state of belief, any assertion of co-identity 
(ie of the form this means the same as that, or this name refer to 
what that name refers to), or any assertions about what anyone says 
(when taken literally), should just be ruled out of our discussions 
as irrelevant and probably misleading.

Second, it would be nice if claims that reification is of real use to 
anyone were backed up with examples of how it is used. This isn't 
meant to be cynicism, more that examining real use cases is likely to 
be a much better way to cut to the quick, and so the more examples we 
have in front of us, the better. I want to see *how* it is being used.

Third, I am pretty confident that any particular interpretation of 
reification can be incorporated in  the MT without too much trouble. 
Really. There seems to be a widespread sense that reification is 
somehow intrinsically un-semantic, or something like that.  What will 
be a problem is the case where there are several incompatible 
versions of reification and we want them all at the same time. Even 
that could be done by offering a kind of MT smorgasbord, though I 
would rather avoid that if there is any way to avoid it.

Fourth. Although the contrast that Dan C. takes a stance on is the 
one that gets the most attention, there are others that require 
answers.  Dan C wants the subject of the reification of [Mary loves 
Bill] to be a word starting with "M" rather than a lady in love. I 
agree; but I want to know if that is a word TOKEN or a word TYPE? 
Does the reification identify a particular node in a particular graph 
(which is to be distinguished from a textually indistinguishable node 
in a different graph at a different URL), or is it something more 
like a word in the sense of a word in a dictionary? That matters a 
lot to how it can be used. Seems to me that the former - the token 
interpretation - is what we would need for any application involving 
provenance or history. Under the hood, the entire web consists of 
tp's of one kind or another, after all, and it's tokens that arrive 
down the pipe at a certain time from a certain source and get stored 
in memory in a certain place, not symbols.

Fifth. (Although this is a slightly different topic, it's related. ) 
After the recent webont hoo-ha about layering onto RDF, and after 
huge battles with Jim H., I am more firmly convinced than ever that 
RDF really, really needs some way to live a kind of dual life, to be 
a (simple but useful) basic, vanilla notation for expressing simple 
facts, sure; but also be a generic structure-encoding framework on 
which to construct more complex notations, which can parse, transmit 
and maybe manipulate those notations even when it cannot 'interpret' 
them. And right now, RDF really cannot do both these things at once. 
Reification has been used, and touted, as the way to do both at once, 
but I think that this is a really bad, bad way to use reification. If 
this is what it is for, then (1) it cannot also be used for what the 
M&S says it is for, or any of this stuff we are talking about; and 
(2) this is a really clunky, awkward, triple-hogging, ugly, wasteful 
way to do that. So I would propose that we find, or invent, some 
OTHER way to do that, and leave reification to do other things.

And I will suggest a way to do it in another message, just as soon as 
I can get the time; it is just a proposal to adopt the 'context' idea 
used in N3 and make it into a language feature. If that is out of 
charter (I will argue that it should not be) then we ought to sketch 
it in enough detail to see how it would work, recommend that the next 
WG do something like it ASAP, and assume that they will and that will 
solve that problem, and put it aside. That at least would free up 
reification from this issue.

Pat

PS More on reification alternatives in a later message.
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



