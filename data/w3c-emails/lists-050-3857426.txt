docno="lists-050-3857426"
received="Fri Jan 25 14:39:55 2002"
isoreceived="20020125193955"
sent="25 Jan 2002 13:38:54 -0600"
isosent="20020125193854"
name="Dan Connolly"
email="connolly@w3.org"
subject="RE: TDL conflicts with the &quot;duh!&quot; requirement"
id="1011987534.5188.130.camel@dirk"
inreplyto="JAEBJCLMIFLKLOJGMELDEENPCCAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"

To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
Cc: RDF core WG<w3c-rdfcore-wg@w3.org>


On Fri, 2002-01-25 at 13:09, Jeremy Carroll wrote:
> 
> Dan:
> > Brace yourself for mind-bogglinly deep
> > formal argument:
> >
> > premise:
> > <http://www.w3.org/> dc:title "W3C".
> > conclusion:
> > <http://www.w3.org/> dc:title "W3C".
> >
> > That's it.*
> >
> 
> IMO we want this case to hold, but that it is not necessarily the case that
> we always want "W3C" = "W3C".

Who's "we"? I always want "W3C" = "W3C". ;-)

> For instance, if we allow literals as subjects,

I want that. (eventually; I don't mind syntactic limitations
in 1.0, but I agree we shouldn't do anything today to prevent
doing this later)

> and say use xml:lang to
> generate triples (which I think some members of the group would like) then
> in general a string in one lang is not the same as the same string in
> another lang.

I very much dislike that sort of design; i.e. I consider the
use of xml:lang in the RDF schema for RDF schema broken.

<rdfs:Class rdf:ID="Class">
  <rdfs:label xml:lang="en">Class</rdfs:label>
  <rdfs:label xml:lang="fr">Classe</rdfs:label>

i.e.
rdfs:Class rdfs:label "Class".
rdfs:Class rdfs:label "Classe".

Some folks implement special magic around literals that allow
you to distinguish the french label from the english label.
But I think that stuff is broken; i.e. I think it also
violates the "duh!" requirement.

I much prefer

rdfs:Class rdfs:label [ newLangVocab:en "Class"].
rdfs:Class rdfs:label [ newLangVocab:fr "Classe"].

especially since I learned there's an RDF 1.0 syntactic idiom for this:

<rdfs:Class rdf:ID="Class">
  <rdfs:label newLangVocab:en="Class"/>
  <rdfs:label newLangVocab:fr="Classe"/>

This idiom works with completely vanilla triple handling
(apis, query languages, etc.)

TimBL started writing about it years ago, though I only
recently understood what he meant:
  http://www.w3.org/DesignIssues/InterpretationProperties


> There is also my example where the string "100" in a context in which base
> 10 is understood is different from the string "100" in which base 2 is
> understood.

Surely you agree this is practically representable in S, no?
i.e. without putting the "duh!" requirement at risk.

> More strictly I should say 'the interpretation of the string "100" is
> different'.
> 
> Now, Dan's example is interesting because the two contexts are identical and
> hence the entailment is desired.
> 
> This looks quite like the bNode case
> 
> <http://www.w3.org/> dc:title _:a.
> 
> entails
> 
> <http://www.w3.org/> dc:title _:b.
> 
> (Dan's example is only interesting when the two nodes labelled "W3C" are
> different).
> 
> Thus I think the patch to the TDL model theory is likely to change the
> interpretation of literal nodes (Unicode string nodes) to be like that of
> bNodes: i.e. involving an existential qualifier. This is likely to be over
> the possible literal-value pairs that meet the type and string constraints.
> 
> I will work on it next week.

Please consider the related test case I gave a while back
while you're at it:

 _:somebody ex:leftShoeSize "10".

  ex:leftShoeSize s:subPropertyOf ex:shoeSize.

RDFS-entail this?

_:somebody ex:shoeSize "10".


If you get knee-deep in model theoretic gymnastics, please,
don't be a hero. Just take another look at S and see
if you still can't live with it. ;-)



-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



