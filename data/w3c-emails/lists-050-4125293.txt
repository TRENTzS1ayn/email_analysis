docno="lists-050-4125293"
received="Mon Jan 28 06:56:48 2002"
isoreceived="20020128115648"
sent="Mon, 28 Jan 2002 11:57:13 -0000"
isosent="20020128115713"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: Tidy literal nodes incompatable with current MT?"
id="JAEBJCLMIFLKLOJGMELDAEODCCAA.jjc@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="B87B0283.C6F7%patrick.stickler&#64;nokia.com"
expires="-1"

To:"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:<w3c-rdfcore-wg@w3.org>




Patrick

you are losing my support this morning :)


TDL inevitably requires interpreting one occurrence of a literal differently
from another occurrence of the same literal. e.g. the literal node label
"1984" will be interpreted as a string when it is a book title, and as an
integer when it is an age.

If this literal happens to be stored in the same memory location as the
other is completely irrelevant. In as much as they are being interpreted
differently they *are* different literals.

Thus any implementation detail about whether or not we share storage and
thus technically about whether the representation of the graph in the
computer memory is tidy or not is beside-the-point.

What S requires (as you yourself have pointed out) is that there is one
literal node for each literal label and that has one interpretation. If
multiple meanings are needed that is up to the application semantics.

What TDL requires is that different occurrences of literal nodes with the
same label have different meanings. It is an implementation detail how
literals are actually store, but the clearest exposition of the TDL position
is that the graph is untidy. Anything else is mere sophistry.


Jeremy



