docno="lists-050-4348804"
received="Mon Jan 28 10:36:49 2002"
isoreceived="20020128153649"
sent="Mon, 28 Jan 2002 15:36:47 -0000"
isosent="20020128153647"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="For untidiness ..."
id="JAEBJCLMIFLKLOJGMELDKEOFCCAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>




This message consists of some examples about untidiness; only the first is
datatyping specific.

1: The book title "1984"
2: M&S first two examples
3: Sergey's example from his "can't live with" message

In general I see a literal node in an RDF graph as denoting something.
Typically, if a greater level of precision is required, that literal node
can be replaced with a resource (URIref node or bnode) and a more complex
description given. The very same string may appear in the more complex
description. In this case the string stands for something else (a part of
its original denotation).

Every data model is an approximation. Different people approximate at
different points.
In the semantic web there are no modelling police preventing different
levels of approximation. We wish to allow free merging of graphs from
different sources. Hence the very same string will denote one thing in one
place, and another thing in another place.

At this stage I am unbothered about whether these differing denotations
occur in the RDF layer or the application layer.


So here goes:

1:

urn:isbn:0451524934 my:title "1984" .
http://giant-redwoods.org/aTree my:age "1984"


in S-B

my:title rdfs:range xsd:string.lex .
my:age rdfs:range xsd:integer.lex .

in TDL

my:title rdfs:range xsd:string .
my:age rdfs:range xsd:integer .

In S-B and TDL an application will want a book title as a string, and an age
as a number. Thus the denotation of "1984" at the application level diverges
in the two triples.
As I understand S-B, the string "1984" can only denote one thing, and so the
reading of my:age "1984" as an integer is incorrect, and the application is
faulty.
This is unacceptable. Sergey please can you clarify how tidiness matches
with divergent application level semantics.

2:

M&S

Very first example

  http://www.w3.org/Home/Lassila == Creator ==> "Ora Lassila"

and

Second example

  http://www.w3.org/Home/Lassila == Creator ==> _:a
  _:a == Name ==> "Ora Lassila"
  _:a == Email ==> lassila@w3.org


M&S does *not* indicate that the second is a better modelling idiom than the
first, it addresses "the case that we want to say something more about the
characteristics of the creator"

Suppose we take descriptions of the first kind and mix with descriptions of
the
second kind. In any sort of web we will need to do this sort of thing, since
we
cannot control the modelling techniques of everybody.

In a tidy graph, the sort of interpretation that Sergey appears to want is
that a Creator of one thing is the same as the Name of the Creator of
another.
This is clearly a type error (in the most general sense of the word type).

Of course, a modeller concerned with peoples names is probably dissatisfied
with a Name being a string. Of course a name is in fact a complex object
with parts like firstName, familyName, preferredName, fullName, and (at
least on British driving licenses) commonAliases. I fear that Ora's
preferredName may be "Ora Lassila" as well.

3: Sergey's example

_1 --dc:Title--> "The Origin of Species"
_2 --my:book-->  "The Origin of Species"

Many modellers may use a predicate like my:book to show a relationship
between a subject (a person) and an object they possess (generally a book
they possess).

In which case the following is also plausible:

_2 --my:book-->  _3 --dc:Title--> "The Origin of Species"

This seems to suggest that "The Origin of Species" is both a title of
something and a book. I generally believe that titles are parts of book.


Jeremy



