docno="lists-050-4391801"
received="Mon Jan 28 11:46:56 2002"
isoreceived="20020128164656"
sent="Mon, 28 Jan 2002 16:46:54 -0000"
isosent="20020128164654"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Datatyping MT agreement"
id="JAEBJCLMIFLKLOJGMELDAEOHCCAA.jjc@hplb.hpl.hp.com"
charset="iso-8859-1"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>




I thought it might be helpful to clairfy the common areas in the two model
theories for TDL and S. (And hence to clarify what the dispute is about).


Given a string and a datatype (e.g. "0" and xsd:integer) both TDL and S have
representations in the model of:
- the string itself
    + in TDL the first component of the interpretation of the string
    + in S the interpretation of the string (which I think is XL(s))
- the mapped value
    + in TDL the second component
    + in S-A the interpretation of the b-node
    + in S-P the first component of the interpretation of the b-node


A difference is that S requires these two distinct enitities in the universe
of discourse to be mapped from two distinct entities in the graph; whereas
TDL likes idiom S-B and manages to map that single node into both the string
itself and the mapped value.

Both S and TDL also have a representation in the model theory of the
datatype, although for TDL this representation is limited to the uri &
mapping only, (from which the other properties can be deduced).

Obviously both model theories have the non-datatype machinery in common.

Jeremy



