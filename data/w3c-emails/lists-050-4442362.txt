docno="lists-050-4442362"
received="Mon Jan 28 17:18:06 2002"
isoreceived="20020128221806"
sent="28 Jan 2002 16:17:10 -0600"
isosent="20020128221710"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: Datatyping Summary"
id="1012256231.4874.200.camel@dirk"
inreplyto="5.1.0.14.0.20020128202622.00a7e078&#64;0-mail-1.hpl.hp.com"
expires="-1"

To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc: RDF core WG<w3c-rdfcore-wg@w3.org>, jeremy Carroll<jjc@hplb.hpl.hp.com>, Patrick Stickler<patrick.stickler@nokia.com>, Sergey Melnik<melnik@db.stanford.edu>


On Mon, 2002-01-28 at 15:58, Brian McBride wrote:
[...]
> Issue B3:  the "duh" issue
> ==========================
> 
> DanC is concerened that with TDL:
> 
>    <mary> <haircolor> "red" .
> 
> and a rule:
> 
>    ?x <haircolor> "red" => ?x <rdf:type> <redhead> .
> 
> one cannot conclude
> 
>    <mary> <rdf:type> <rdfhead> .
> 
> since one conclude that both "red"'s denote the same thing.
> 
> Jeremy has responded:
> 
> From:
> 
>    <mary> <haircolor> "red" .
>    <haircolor> <rdfs:range> <xsd:string> .
> 
> and the same rule one can draw the required inference.
> 
> DanC:  Does that solve the problem?

It's perhaps a work-around for the specific case of matching
literals in rules, but...

> Do you withdraw that objection?

no. The rules example is an important scenario, but it's
not the only scenario where I think the "duh!" requirement
applies.

We've done a few thought experiements about modifying
our implementation's treatment of literals to be (lex, type) pairs,
but it gets horribly messy.

But lots of folks would consider our code horribly messy
as it is, so that's perhaps not much of an argument.

But as Sergey and I pointed out, there seem to be a lot
of RDF query engines and such deployed that consider
"abc" a match for "abc".

Before I would withdraw my objection, I'd like to hear
from the implementors of swish, RQL, etc.; to hear
that they're willing to undo the parts of their implementation
that assume that "abc" always denotes the same thing.

Oops... I see you've made that a separate issue.

If rules were the only reason for my objection, I might
change my position from "I can't live with TDL" to "I think S
works great and I think TDL is very, very inconvenient".
But it's not, so I won't.


> Jeremy/Patrick:  Do you accept that without the range constraint, DanC is 
> correct?



> Issue B4 - TDL breaks existing code
> ===================================
> 
> This is similar to B2.  I've changed the example slightly from Sergey's.
> Consider the graph:
> 
>    _:f <rdf:type> <film> .
>    _:f <dc:Title> "10" .
>    <mary> <age> "10" .
> 
> Given a query:
> 
>    (?x <dc:Title> ?y) & (?z <age> ?y)
> 
> existing applications will return:
> 
>    ?x = _:f, ?y = "10", ?z = <mary>
> 
> Under TDL, they would return null.
> 
> Sergey:  Does this version of the issue illustrate your point?

If it doesn't illustrate his, it illustrates mine.
Color me "can't live with TDL" over this issue.

> Jeremy/Patrick:  Do you accept this analysis; would the query return null 
> under TDL?
[...]

> Issue B6: S requires 4 URI's be registered for each data type
> =============================================================
> 
> S requires that for each datatype 4 URI's be registered
> 
>    datatype
>    datatype.lex
>    datatype.val
>    datatype.map
> 
> Sergey:  Do you agree this is the case?  If not, how many URI's are 
> required to implement ALL the idioms of S and coexist in the same model.

On a related note, we can't go making up names in somebody else's
namespace. If we're going to use anything other than *exactly* the
URIs made up by the XML Schema WG, we've got to mint our own names
in our own namespace. I didn't notice that decimal.lex and such
were in the XML Schema WG's namespace. Let's not do that.
(see also my "hey, kids, get off my lawn!" posting to www-rdf-interest
a while ago)


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



