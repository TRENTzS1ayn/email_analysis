docno="lists-050-4660173"
received="Tue Jan 29 14:47:17 2002"
isoreceived="20020129194717"
sent="29 Jan 2002 11:44:01 -0600"
isosent="20020129174401"
name="Dan Connolly"
email="connolly@w3.org"
subject="RE: Datatyping Summary"
id="1012326242.17980.8.camel@dirk"
inreplyto="p05101037b87c7fed11a5&#64;[65.212.118.208]"
expires="-1"

To: pat hayes<phayes@ai.uwf.edu>
Cc: RDF core WG<w3c-rdfcore-wg@w3.org>


On Tue, 2002-01-29 at 11:17, Pat Hayes wrote:
> Dan, you had almost convinced that some version of the S proposal is 
> the best way for RDF to go, but then you said this:
> 
> >To me, it comes down to this: In the RDF community, do folks
> >expect that "abc" always denotes the same thing as "abc"?
> >I looked at the Jena source, and it seems to.
> >The squish, rql, rdfdb and other query languages seem to.
> >
> >That's why I objected to the DAML design; it undermines
> >a popular assumption in the RDF community. (not to
> >mention that I find it ugly that we can't use
> >strings and URIs as the basic building blocks
> >for knowledge exchange).
> 
> Re first paragraph above; are they really expecting that "abc" always 
> *denotes* the same thing as "abc", for literals?

yes.

> (Not just that "abc" 
> is the same string as "abc" , i.e.) Because if they are, then they 
> really seem to me to just not doing datayping at all.

Not in the RDF 1.0 language, no; the S proposal is a proposal
to layer datatyping on top of RDF 1.0. Just like
logics with integers and lists layer character strings on top.


> Which is fine, 
> I guess; but then we are supposed to be doing datatyping, right? I 
> mean, by mandate, in our charter. So even though existing code may 
> decide to ignore it, surely we are obliged to take it more seriously.

Pat, we had this discussion already, no?

DanC wrote:
| PatH wrote:
| > If all literals were unambiguous then there would be no need to
| > even use datatyping schemes. Traditional logical notations for
| > example have felt no need for datatyping schemes for exactly this
| > reason: they fix the meanings of things like numerals, and use other
| > syntactic constructions to denote things like character strings.
|
| Bingo! Then we'll be in good company.
-- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Dec/0025.html

> Re second paragraph.  I have to say, if the RDF community is 
> expecting that strings and URIs are a sufficient basis for knowledge 
> exchange, then its time the RDF community  stepped out into the real 
> world for a while. Come on, you can't be serious, surely? For 
> example, numbers are *really* handy, you know?

Numbers aren't interestingly different from strings, as the
basis of syntax. In either case, you have denumerably many
expressions, each of which denotes a different object,
right? Just to be masochistic or something*, I worked
out PRA in RDF/n3 the other day... I started with "0"
and :succ and taught cwm how to add...
  http://www.w3.org/2001/03swell/pra.n3

Yes, XML punctuation and such is a pain. S-expressions are
clearly better than XML elements and attribute. I suppose
that's why they're not popular; worse is better, after all.
Er.. anyway...

But in the TDL proposal, as I understand it,
we don't have integers *nor* strings as syntactic literals
in our language. The *only* way to write two expressions
that are guaranteed to denote distinct things is to
give an RDF literal *and* a related datatype.



> http://www.coginst.uwf.edu/~phayes

* the actual reason was to investigate the claim that
"PRA is THE NECESSARY AND SUFFICIENT logic for talking
about logics and proofs"
 -- http://theory.stanford.edu/people/uribe/mail/qed.messages/22.html


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



