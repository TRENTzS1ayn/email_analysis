docno="lists-050-4810323"
received="Wed Jan 30 06:26:08 2002"
isoreceived="20020130112608"
sent="Wed, 30 Jan 2002 12:24:33 +0100"
isosent="20020130112433"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: Datatyping Summary"
id="OF00FC2F89.BCEB6289-ONC1256B51.003C4A2C@bayer-ag.com"
charset="us-ascii"
inreplyto="Datatyping Summary"
expires="-1"

To:jjc@hplb.hpl.hp.com
Cc:w3c-rdfcore-wg@w3.org


[...]

> This framework allows me to illustrate an aspect of my "can't live" issue
> with S-B.
>
> S-B allows range constraints, in this example perhaps:
>
> <dc:title> <rdfs:range> <xsd:string.lex> .
> <age> <rdfs:range> <xsd:integer.lex> .
>
> I currently understand S-B as, within the RDF datatyping layer, insisting
> that "10" is a string.
> The two range constraints are used to:
> - constrain the set of possible strings
> - act as a hint to the application layer that:
>    * type conversion is possible
>    * type conversion is desirable.
>
> Thus given the database and the schema the application processing will
> correctly treat the title as a string, and the age as an integer. Good.
>
> Now, the query also operates in the application layer.
> This returns true.
>
> Thus in the application layer we have the following facts being the case:
>   The film has the title "10".
>   mary has age 10.
>   The age of mary is the title of the film.
>    i.e. that 10 is "10"
>
> There is a type clash here, and the combination is a logical error.

I don't follow Jeremy
i.e I don't see how you can draw the S-B conclusion
  The age of mary is the title of the film.
(where I suppose you mean age-value and title-value)

given

  :Mary :age "10" .
  :film :title "10" .

  :age rdfs:range xsd:int.lex .
  :title rdfs:range xsd:string.lex .

the query

  :Mary :age _:x .
  :film :title _:x .

will succeed
and I don't see any problem with that

nothing can be deduced w.r.t. values
i.e.
  dt1(v1) = dt2(v2)
does *not* mean that v1 = v2

--
Jos



