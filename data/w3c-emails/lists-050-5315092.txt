docno="lists-050-5315092"
received="Wed Jan 30 17:58:35 2002"
isoreceived="20020130225835"
sent="Wed, 30 Jan 2002 16:58:51 -0600"
isosent="20020130225851"
name="Pat Hayes"
email="phayes@ai.uwf.edu"
subject="Re: literal value terminology (was: Re: Review of MT)"
id="p0510102ab878e2317779@[65.212.118.208]"
charset="us-ascii"
inreplyto="3C4F6FB1.F16C9377&#64;db.stanford.edu"
expires="-1"


To: Sergey Melnik<melnik@db.stanford.edu>
Cc:w3c-rdfcore-wg@w3.org

>  >
>>  PS. Let me try to review some of the issues. When discussing
>>  datatypes, there is an established terminology used by XSD: lexical
>>  spaces and value spaces. Sergey and I would both like to conform to
>>  that as far as possible, to be sure. However I think that our
>>  understandings of how to conform to it differ. My understanding
>>  always was that the things in a datatype lexical space would be
>>  identified with lexical items in RDF syntax, and things in the value
>>  space would be identified with semantic values. (Hence the P-style
>>  proposals, BTW, which try to incorporate the datatype mapping into
>>  the MT as a special kind of interpretation mapping.) I think (?) that
>>  Sergey's understanding is that the domains that arise in datatyping -
>>  lexical spaces and value spaces - *both* belong in the semantics of
>>  RDF, and that the lexical items in RDF syntax that refer to them are
>>  something else altogether. Hence the 3-way distinction outlined
>>  above, which distinguishes RDF syntax from datatype lexical space. I
>>  can see how that would leave a terminological muddle surrounding the
>>  term "literal value" , which sounds (to Patrick and Sergey?) like it
>>  would be a (semantic) value which happened to be a literal, ie
>>  something in the lexical space of a datatype. That interpretation
>>  simply hadn't occurred to me, I confess.
>
>This is a perfectly accurate analysis, Pat, and a very nicely worded
>one. In fact, as obvious as it is, it did not occur to me that elements
>of lexical spaces (per XSD) could simply be identified with RDF literals
>(i.e. literal tokens ;)

Ah. It never occurred to me (until this year) that they could or 
should be distinguished. No wonder we have had some trouble 
understanding one another.

>The question is whether we go with a 2-way or a 3-way distinction. It
>looks like this issue needs to be clarified in the "foundations" part of
>the datatyping document. The 3-way distinction seems somewhat more
>general. Are there any caveats? Which one would you prefer?

Well, I vastly prefer the 2-way, since it is based on what seems to 
me to be a basic vanilla-flavored picture of language and semantics, 
where the lexical items are used to refer to some other kinds of 
entity, so that a numeral denotes a number and so on. Then datatyping 
is like a generalized sorting mechanism for part of the lexicon of 
the assertional language. But that leads fairly directly to the old 
P/P++ proposals, which seem to be off the table at this stage (?). 
(Im still catching up with the January emailings, and am not yet 
fully uptodate on the various proposals and their status.)

I guess I see the 3-way as essentially giving up on datatyping. It 
says that RDF itself simply is not a typed language: an RDF literal 
has a single, fixed meaning independent of any datatyping scheme: it 
is a quoted string which denotes a lexical item which itself is a 
string. That is what would be assumed in the RDF MT, which would not 
even need to mention datatyping, in this proposal. Data types would 
play no special role in RDF validity and would not be a semantic 
extension. I guess this makes my job easier, but it somehow seems 
like a cop-out to me.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



