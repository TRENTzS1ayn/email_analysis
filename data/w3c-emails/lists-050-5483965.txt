docno="lists-050-5483965"
received="Thu Jan 31 06:47:14 2002"
isoreceived="20020131114714"
sent="Thu, 31 Jan 2002 13:48:20 +0200"
isosent="20020131114820"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Datatyping: questions about TDL proposal"
id="B87EFBA4.CD2A%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="CEECKEAMDAJDDEDGJNBEIEBICAAA.jjc&#64;hpl.hp.com"
expires="-1"

To: RDF Core<w3c-rdfcore-wg@w3.org>



I only offer a few comments here that hopefully will be useful. If
not, ignore them. They are simply intended to clarify the intent
of the non-MT portions of the TDL proposal, per Pat's questions.


On 2002-01-31 13:00, "ext Jeremy Carroll" <jjc@hplb.hpl.hp.com> wrote:

> For Patrick, as I understand it, the key idea is that datatyping is about
> pairs.
> Each pair being a string from the input document and the type with which to
> interpret the string.

Correct.

> I find this pairing a little simplistic, in that in the syntactic idiom of
> range constraints for example, many types can be applied.

If mulitple TDL pairings can be inferred from mutiple range constraints,
then you have multiple possible interpretations. And if a given literal
is a member of multiple TDL pairings, then it is expected that multiple
types can be applied to it.

I agree that it is simple, but I don't think it is simplistic ;-)

> I also considered and rejected suggesting to Patrick that the emphasis on
> string-type pairs should be dropped.

Of course, that would be hard to do, since that *is* the TDL model ;-)

>> Q2. In the figure immediately below, what is meant by 'internal
>> value' and 'application value space'?
> 
> I will leave this one to Patrick.
> Although see my (separately posted) response to C15, which I think touches
> on similar issues.

Any application that wishes to compare two actual values must
provide a canonical, internalized representation for them. That
representation is not necessarily a lexical representation (and
for numerical types rarely is). Each application needing to
compare two values expressed in an RDF graph must execute the
mapping from the lexical form in the RDF graph to that internalized
value, which is a proxy for the single unique member of the value
space of the datatype.

>> Q9. In section 3.1 example 1, the figure has this new kind of (green
>> hexagonal) node in it. What is this thing, exactly?

See the definition in section 2.1 for "typed data literal" (TDL).

As the label in the hexagon indicates, it shows the TDL pairing
of lexical form and datatype identity (literal and URIref). It
is pointing to the pair of labels, not nodes, which denotes
a single value in the value space of the datatype. It is this
pairing that allows an application to map the lexical form
into an internalized representation for the value.

Cheers,

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



