docno="lists-050-6037033"
received="Mon Jul  1 13:14:12 2002"
isoreceived="20020701171412"
sent="Mon, 01 Jul 2002 18:12:48 +0100"
isosent="20020701171248"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="test case: Test case A and reification"
id="5.1.0.14.0.20020701114356.02069e00@15.144.25.13"
charset="us-ascii"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>


The discussion at Friday's telecon reminded me why I was keen to have test 
case A still in.  I've tried to raise this point a couple of times and just 
wanted to put it more formally.

It is suggested that, even with untidy literals:

   _:a <p> "lit" .
   _:b <p> "lit" .

entails:

   _:a <p> _:l .
   _:b <p> _:l .

Consider a statement and its reification:

   <s> <p> "a" .                       (1)
   _:s rdf:subject <s> .
   _:s rdf:predicate <p> .
   _:s rdf:object "a" .                (2)
   _s: rdf:type rdf:Statement.

Does the object of statement (1) denote the same thing as the object of 
statement (2)?

Given the model theory as it stands (Pat - is this right?) the answer to 
this question is yes.

Now consider:

   <jenny> foo:age "10" .                   (3)
   <film>  dc:title "10" .                  (4)
   foo:age  rdfs:range xsdr:decimal .
   dc:title rdfs:range xsdr:string .

and two reifications:

   _:a rdf:subject <jenny> .
   _:a rdf:predicate foo:age .
   _:a rdf:object "10" .                    (5)
   _:a rdf:type rdf:Statement .

   _:b rdf:subject <film> .
   _:b rdf:predicate dc:title .
   _:b rdf:object "10" .                    (6)
   _:b rdf:type rdf:Statement .


Then the objects of statements (5) and (6) cannot denote the same thing as 
the objects of statements (3) and (4) respectively.

I confess I find this rather bizarre.  In the case where the object of a 
statement is a literal, then the value of the rdf:object property of the 
reification of that statement denotes a syntactic entity, otherwise it 
denotes a semantic one.  (Sorry that doesn't sense to a logician, but Pat'l 
know what I mean.)

Is that what we mean to say?

If the answer to test case A is yes, then we need an non-entailment test:

   <s> <p> "a" .
   _:s rdf:subject <s> .
   _:s rdf:predicate <p> .
   _:s rdf:object "a" .
   _s: rdf:type rdf:Statement .

where _:s is a reification of the first statement

does not entail:

   <s> <p> _:o .
   _:s rdf:object _:o .

Brian



