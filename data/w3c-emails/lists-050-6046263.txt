docno="lists-050-6046263"
received="Mon Jul  1 13:38:33 2002"
isoreceived="20020701173833"
sent="Mon, 01 Jul 2002 18:37:23 +0100"
isosent="20020701173723"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="RE: test case A revisited"
id="5.1.0.14.0.20020701181401.021bfdd8@15.144.25.13"
charset="us-ascii"
inreplyto="JAEBJCLMIFLKLOJGMELDCEDICEAA.jjc&#64;hplb.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"RDF Core"<w3c-rdfcore-wg@w3.org>


At 14:13 01/07/2002 +0100, Jeremy Carroll wrote:
> > Consider
> >
> >    _:b1 rdf:type rdf:Seq .
> >    _:b1 rdf:_1   "10" .
> >    _:b2 rdf:type rdf:Seq .
> >    _:b2 rdf:_1   "10" .
> >
> > This would require that the first member of each sequence is the same.
> >
>
>My take is that global datatyping and containers of literals simply do not
>interoperate.
>Containers with literal values either are untyped or locally typed.

Maybe its not so bad as I first thought.  If we decide that the answer to 
test case A is yes and the answer to test case C is no, then we will need 
some magic in the model theory to handle rdf:object (per my recent 
post).  I guess it would mean applying the same magic to the ordinal 
properties.


>I don't believe that any of the proposed global datatyping solutions 
>(ever) work
>with containers.
>
>Hence I think:
>
>+ test case A is a choice (the group seems minded to say that the entailment
>holds - I disagree but not strongly).
>
>+ containers cannot contain globally typed literals (i.e. the literals are
>either self-denoting or untyped)

Hmm, the question is which.  The later seems to imply, if one puts a 
literal in a container, then one doesn't know what it denotes.

Brian



