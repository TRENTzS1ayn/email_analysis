docno="lists-050-6382397"
received="Mon Jul  8 19:28:08 2002"
isoreceived="20020708232808"
sent="Mon, 8 Jul 2002 16:28:18 -0700"
isosent="20020708232818"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: datatypes: new information - email delayed awaiting WG    response"
id="p05111b22b94fce123231@[192.168.0.146]"
charset="us-ascii"
inreplyto="5.1.0.14.0.20020704111324.020cb838&#64;15.144.25.13"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org


>At 20:44 03/07/2002 +0100, Graham Klyne wrote:
>>At 04:58 PM 7/3/02 +0100, Brian McBride wrote:
>
>[...]
>
>>But I do think this is a matter of taste, rather than a forced outcome.
>
>Yup, but its beginning to give me the heebee jeebees.
>
>>As for:
>>>http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jul/0011.html
>>
>>I'm inclined to say "relax", but I'd be too tentative to be convincing.
>>
>>If we have:
>>
>>     a someProp "lit" .
>>     b someProp "lit" .
>>|=
>>     a someProp _:x .
>>     b someProp _:x .
>>
>>I think it's pretty clear that:
>>
>>    _:a dc:title "4th July" .
>>    _:b dc:date  "4th July" .
>>    dc:title rdfs:subPropertyOf dc:property .
>>    dc:date  rdfs:subPropertyOf dc:property .
>>|=
>>    _:a dc:property _:l .
>>    _:b dc:property _:l .
>>
>>So the problem you raise is what happens when different datatypes 
>>are applied to dc:title and dc:date?  If the datatypes have no 
>>literal->value mappings in common, then I think that simply means 
>>the graph is not satisfiable.  I.e. there is no (DT-)interpretation 
>>that satisfies the antecedent so the entailment is trivially valid.
>
>Right.

Er.. wait. In this case you could rationally apply one dtype 
constraint to dc:title and a different one to dc:date, and don't 
apply any dtype constraint to dc:property, so the above example would 
have any particular force. The current 'stake' proposal would only 
require that the literal fit into both lexical spaces, and I presume 
that would be OK if "4th July" is a well-formed DC date format.

>  The logic survives, as best I can understand it, but is this the 
>behaviour we want to specify?  Would someone ever want to build a 
>language on top of RDFS which had some notion of a TOP property.  If 
>they did, what would the implications for datatypes be?
>
>Are we willing to accept the constraint that all subProperties of a 
>property must have the same datatype constraint?  Or is there some 
>magic in the model theory that can allow them not to?

Not really, since (never mind datatypes for now) the whole point of 
subPropertyOf is that the subproperty implies the superproperty, ie if

A ex:foo B .
ex:foo rdfs:subPropertyOf ex:baz

then

A ex:baz B .

and then add datatyping on ex:baz, and you get the equivalent of 
having it for ex:foo automatically. That is, the implication that is 
involved here isn't really to do with datatyping but to do with 
subPropertyOf.

HOWEVER, the point is that datatypes inherit downwards, not upwards. 
In the above example, if you were to datatype dc:property, then both 
dc:title and dc:date would inherit that datatying constraint, in 
effect; but you could datatype them (differently, if you like) 
without dc:property being affected in any way.

Pat


Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax
phayes@ai.uwf.edu 
http://www.coginst.uwf.edu/~phayes



