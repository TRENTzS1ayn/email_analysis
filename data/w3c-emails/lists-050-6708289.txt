docno="lists-050-6708289"
received="Tue Jul 16 13:34:13 2002"
isoreceived="20020716173413"
sent="Tue, 16 Jul 2002 13:34:04 -0400"
isosent="20020716173404"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Primer:  some vocabulary questions"
id="3D34590C.32F07E48@mitre.org"
charset="us-ascii"
inreplyto="5.1.0.14.0.20020712163125.02266038&#64;15.144.25.13"
expires="-1"


To: RDF Core<w3c-rdfcore-wg@w3.org>



I'm in the process of adding the new stuff I was asked to add to the
Primer (e.g., rdf:value), as well as clarifying a bunch of the old stuff
(e.g., Schema), and, in trying to come up with a sensible organization
(and, in some cases, explanation), found I had a few questions on rdf
vs. rdfs vocabulary and related matters.  

1.  Must a processor that claims to understand "rdf" understand (i.e.,
correctly do something with) everything in the rdf: namespace?  Or,
putting it another way, if a processor barfs at something that *is* in
the rdf: namespace, is there something wrong with it?  I understand that
we've not fully dealt with stuff like conformance, but, for example, the
RDF/XML spec enumerates the names in the rdf: namespace, and says that
any other names are not defined and should generate a warning.  However,
I couldn't find any productions that explicitly mention, e.g., Seq and
Alt, so if someone builds an RDF/XML processor that flags those names,
is it wrong?  To repeat, I'm mainly asking about this not as commentary
on RDF/XML, but as a question about what it means to be an "rdf
processor" (a similar question could be asked about "rdfs processor").  

2.  A related issue involves the way the current Schema document unions
rdf: and rdfs: terms into groups like "RDF Core Classes and
Properties".  The problem is whether that might be misinterpreted to
mean that an rdf processor must understand, say, rdfs:Resource,
rdfs:isDefinedBy, rdfs:domain, rdfs:Class, and so on (because they're
listed as "RDF classes" and "RDF Core classes"?  (I can appreciate that
there may be no special semantics associated with some of these, so that
as long as an rdf processor generates the appropriate triples when it
encounters these terms, the graph will be OK, but is it supposed to
complain or not complain when it sees these names?)

3.  rdf:type is defined as having a range of rdfs:Class (the latter not
being defined in the rdf: namespace), which again mixes the namespaces a
bit.  Should it be made clear that people can write good RDF using
rdf:type with a value that isn't a class (even if an rdfs processor that
rigorously enforces schemas as constraints comes along later and
complains)?  Or, to put this another way, should we be telling people
that if they want to define types, even though rdf:type itself is in the
RDF vocabulary, they ought to use the RDFS vocabulary to define what's
at the other end of the arrow?

Just wondering...

--Frank

-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-8752



