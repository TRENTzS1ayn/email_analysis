docno="lists-050-7625996"
received="Sun Jul 28 03:44:22 2002"
isoreceived="20020728074422"
sent="Sun, 28 Jul 2002 09:49:57 +0200"
isosent="20020728074957"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Datatypes [Was: Minutes telecon 26th July 2002]"
id="MABBLGKMPIJFCKFGDBEPCEACCBAA.jjc@hplb.hpl.hp.com"
charset="Windows-1252"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>





> 12) Datatypes
>
> Proposed as main theme for next week.

Eric is eager for us to make substantial progress.

I can think of one possibility that might work.

We have substantial, probably unaminous, consensus on datatyping.

Well, on the local idiom for datatyping.

Let's just stick with that and not attempt to address the global idiom.


Advantages:
- true consensus possible
- provides a mechanism within to use XML schema datatypes within RDF
- still some work to do on polishing this (particularly the "what is the URI
for xsd:int?" problem)
- areas where still insufficient clarity about best path left as research

Disadvantages:
- part of the global idiom is currently heavily used for untyped data
- local idiom only provides no migration plan for such data, other than data
laundry followed by republish.
- belief that the community want a global idiom


This plan could be linked with an attempt to move the research discussion of
global idiom forward. e.g. we could produce two or more W3C notes on global
idioms; we could action WG members to submit datatyping papers to WWW2003;
we could lobby for an RDF datatyping session in WWW2003.

In my view we have done excellent work on the global idiom, but there are
still three or four viable candidates:

- untidy
- tidy
- two properties
- something more linked to XML Schema (I don't believe this has been
sufficiently articulated yet, but it appears to be Patel-Schneider's
preference.)

In the latest round of opening up the discussion we have received good
arguments for more than one of these.


By providing a means for datatyping (the local idiom) we will facilitate
experiments with the global idiom in that an experimental system will be
able to reformat and export its data according to the standard, even if that
is clunky and has some non-optimal features.


The principle merits of this proposal are:
1: timeline
  This proposal gives us a chance to move datatyping forward in a fashion
that does not further derail our timeline
2: honesty
  This proposal does not (I think) pretend to a greater level of consensus
than we have within the WG or could command within the community.

Jeremy



