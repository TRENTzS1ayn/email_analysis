docno="lists-050-8240651"
received="Mon Jun  3 08:17:47 2002"
isoreceived="20020603121747"
sent="Mon, 03 Jun 2002 08:28:44 -0400"
isosent="20020603122844"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Role of N-Triples (was Re: datatyping revised draft)"
id="3CFB60FC.30509@mitre.org"
charset="us-ascii"
inreplyto="B9210CBA.15F57%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


Independently of any usage of N-Triples in the datatyping document, it 
might be a good idea to (once again?) clarify the usage of N-triples, 
since I disagree with Patrick's position.  The primary RDF syntax is 
that of a *graph* (the WG decided this, and the model theory and syntax 
documents reflect this decision). Users *should* have to learn the graph 
model of RDF in order to understand the normative definition of RDF. 
    In our documents, we have used *drawings* of graphs (nodes and arcs) 
to illustrate graphs without objection;  I believe that N-Triples are 
merely an alternative (and often more convenient) notation for 
presenting graphs.  I repeat:  *graphs* are normative.  If N-Triples can 
be objected to because they are a non-normative notation for expressing 
graphs, then so can arc-and-node drawings (and so could a set-theoretic 
notation).  I don't consider, as Patrick apparently does, that users 
will be unnecessarily burdened by seeing N-Triples in our documents, and 
particularly in the Primer. Rather, N-Triples help express (and clarify) 
the model for which the RDF/XML is the serialization (I think people 
find them far easier to understand than the XML syntax).  They are a 
useful device in the Primer, and are also essential in the syntax 
specification, where the effect of writing the various statements is 
specified by what triples get generated.   After all, you have to have 
an abstract model in terms of which to explain what the RDF/XML 
serializes.

--Frank


Patrick Stickler wrote:

> 

snip

> <soapbox>
> For the record, I believe that NTriples have no place in any
> normative sections of the RDF specifications. Users should not
> have to learn NTriples in order to understand any normative
> definition of RDF. NTriples are for the test cases, and the only
> place you should see them and see a definition of the NTriples
> syntax is in the test cases document. All other documents should
> use RDF/XML exclusively for serializing RDF statements.
> 
> I'm don't even think the Primer should provide any coverage of
> NTriples. No, I'm not anti-NTriples (or even anti-N3). NTriples
> are very, very important. But they have a very specific and
> most importantly non-normative role, and I'm afraid that if
> we start peppering all the specs with NTriples that users will
> feel they must also understand and use NTriples to use RDF
> and they don't. RDF/XML is the only official serialization of RDF,
> so let's set a good example and use it.
> </soapbox>


-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



