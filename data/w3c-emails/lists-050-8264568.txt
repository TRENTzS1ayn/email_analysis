docno="lists-050-8264568"
received="Mon Jun  3 10:23:34 2002"
isoreceived="20020603142334"
sent="Mon, 03 Jun 2002 10:34:20 -0400"
isosent="20020603143420"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: Role of N-Triples (was Re: datatyping revised draft)"
id="3CFB7E6C.1090400@mitre.org"
charset="us-ascii"
inreplyto="B9214A18.15FD8%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
CC: RDF Core<w3c-rdfcore-wg@w3.org>


Patrick Stickler wrote:

> 

snip

> 
> A good rule of thumb would be: is the example trying to capture some
> feature specific to the graph syntax -- or is it simply expressing
> RDF statements. If the former, then go ahead and use NTriples, but
> if the latter, then let's stick to RDF/XML.


It seems to me that your rule of thumb is slightly backwards.  The graph 
isn't "syntax", it's the basic model (that is, the abstract concept of 
the graph is the basic model, not the specific N-Triples or drawing 
expressions of it).  And "RDF statements" are components of the graph 
(in fact, the M&S defines a statement as a triple).  The graph isn't a 
"realization" of a set of statements;  it *is* a set of statements. 
RDF/XML happens to be an XML-based serialization of the graph, but it is 
not true that RDF/XML expresses statements and the graph does not.  I 
think the issue is what are you attempting to talk about when you 
present a statement.  Are you attempting to talk about some basic aspect 
of the statement, in an abstract (model) sense, or are you trying to 
talk about some aspect of the XML serialization of the statement (or 
something which could equally well be illustrated by the XML 
serialization).

 
> 
> Let's not "be lazy" and use NTriples just because it's easier to
> type. Unless it's clearly showing graph structure, let's not. Eh?


I don't think most of us are "being lazy" when we write N-triples; 
we're trying to express what we need to express in what we think is the 
clearest way possible, using the abstract graph model, of which 
N-triples seems to be the most direct representation.  The RDF/XML 
syntax is confusing to many people, and hence not the clearest way to 
explain things.  Also, the XML serialization has many alternative ways 
to express the same RDF, and often we want people to be focusing on the 
basic RDF model, not on a particular serialization.  I think we are, in 
fact, acting on principle when we use N-Triples, but the principle is to 
try to explain the more complicated (RDF/XML) in terms of the simpler 
and more fundamental (N-Triples), rather than the other way around. 
This may be an unfortunate situation, but I think it's an accurate 
reflection of the facts.

--Frank

PS:  I wouldn't mind at all seeing N-Triples passing about the Web.


-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



