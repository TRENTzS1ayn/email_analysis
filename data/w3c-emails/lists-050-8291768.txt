docno="lists-050-8291768"
received="Tue Jun  4 12:05:13 2002"
isoreceived="20020604160513"
sent="Tue, 04 Jun 2002 17:09:52 +0100"
isosent="20020604160952"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: Role of N-Triples (was Re: datatyping revised draft)"
id="5.1.0.14.2.20020604170119.03e69670@joy.songbird.com"
charset="us-ascii"
inreplyto="3CFB60FC.30509&#64;mitre.org"
expires="-1"


To: Frank Manola<fmanola@mitre.org>
Cc: Patrick Stickler<patrick.stickler@nokia.com>, RDF Core<w3c-rdfcore-wg@w3.org>


At 08:28 AM 6/3/02 -0400, Frank Manola wrote:

>Independently of any usage of N-Triples in the datatyping document, it 
>might be a good idea to (once again?) clarify the usage of N-triples, 
>since I disagree with Patrick's position.  The primary RDF syntax is that 
>of a *graph* (the WG decided this, and the model theory and syntax 
>documents reflect this decision). Users *should* have to learn the graph 
>model of RDF in order to understand the normative definition of RDF.    In 
>our documents, we have used *drawings* of graphs (nodes and arcs) to 
>illustrate graphs without objection;  I believe that N-Triples are merely 
>an alternative (and often more convenient) notation for presenting 
>graphs.  I repeat:  *graphs* are normative.

So far, I pretty much agree...

>   If N-Triples can be objected to because they are a non-normative 
> notation for expressing graphs, then so can arc-and-node drawings (and so 
> could a set-theoretic notation).

... and with this.

But my position would be that the arc-and-node drawings are _not_ a 
normative representation of a graph, any more (or less) than 
N-triples.  They are useful for purposes of explication, but no software is 
obliged to generate and/or process them.  N-triples might also have such a 
use;  I'm less convinced of that, but that doesn't matter.

In some ways, I think the most useful message the Primer can convey is one 
that firmly establishes the idea of RDF as based on a graph -- My 
recollection from learning about RDF is that many of the other important 
issues follow quite easily once that idea is established.

>   I don't consider, as Patrick apparently does, that users will be 
> unnecessarily burdened by seeing N-Triples in our documents, and 
> particularly in the Primer. Rather, N-Triples help express (and clarify) 
> the model for which the RDF/XML is the serialization (I think people find 
> them far easier to understand than the XML syntax).  They are a useful 
> device in the Primer, and are also essential in the syntax specification, 
> where the effect of writing the various statements is specified by what 
> triples get generated.   After all, you have to have an abstract model in 
> terms of which to explain what the RDF/XML serializes.

If it's is generally felt that N-triples make it easier to follow the 
primer (compared with the alternatives), then I say by all means use 
them.  Such an assessment will, of course, be highly subjective (but that's 
OK) and should take into account any additional learning that might be 
required, or potential confusion about multiple formats.

#g



-------------------
Graham Klyne
<GK@NineByNine.org>



