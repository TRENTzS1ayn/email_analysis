docno="lists-050-9839447"
received="Fri Jun 14 22:18:08 2002"
isoreceived="20020615021808"
sent="Fri, 14 Jun 2002 21:18:08 -0500"
isosent="20020615021808"
name="patrick hayes"
email="phayes@ai.uwf.edu"
subject="Re: datatyping unstaked"
id="p05111a1ab9304cc0cf11@[65.217.30.123]"
charset="us-ascii"
inreplyto="1024059960.14588.34.camel&#64;dirk"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc:w3c-rdfcore-wg@w3.org


>On Thu, 2002-06-13 at 22:04, patrick hayes wrote:
>[...]
>>  Still, there is no free lunch, and it does require
>>  making some changes to the current RDF docs, particularly the MT, and
>>  maybe some of the test cases.
>
>That made me nervous...
>
>And indeed,
>
>>  For example, the above graph does NOT entail
>>
>>  <ex:Jenny> <ex:age> _:x .
>>  _:f <dc:title> _:x .
>>  _:f <rdf:type> <ex:movie> .
>
>That kills it, for me.

OK, well why don't you and the rest of the WG duke this out? I have 
the sense that you are in a minority on this one.

>That's the characteristic
>I actually need about literals.

Can you say why this is so central for you? *Why* do you need this? 
Wouldnt it be enough to generalize them one step at a time, and 
introduce dlex links between the bnodes and the literal? After all, 
that is what we would have in any case in the current scheme, and you 
seem happy with that. So what is the objection to having it generated 
from a more compact graph?

Heres a way to describe it. Define a process called 'literal 
unfolding' on RDF graphs. It can be applied to any node N of a graph 
G. If the node N is a bnode or a uriref or a literal which occurs 
only in triples with rdfd:lex as the predicate,  then the result is G 
(in these cases N is called 'unfolded') otherwise you get the result 
by replacing each triple S P N . , where P is not rdfd:lex, with a 
linked pair of triples
S P X  .
X rdfd:lex N .
where X is a new blank node. Clearly the result is unfolded.

Any graph is equivalent to its unfolding, and unfolded graphs can be 
existentially generalized in the usual way, even on literals. Any 
graph can be existentially generalized on unfolded nodes; folded 
nodes must be unfolded (maybe one triple at a time) during 
existential generalization.

Now, Dan. You want to always work with unfolded graphs. But allowing 
folded graphs isn't going to cost you very much, seems to me: you can 
always unfold them if you want to, and go on from there. But allowing 
the folded possibility will make a whole lot of other people a whole 
lot happier.

>It's no fun
>saying they denote themselves if you can't
>existentially generalize them.

Well, you can, but you have to do it one step at a time, as it were.

>i.e. this is just another form of untidy literals.

Yes, it has the same logic as untidy literals. But it still works 
with tidy graphs, in fact. I thought that was the key issue for you.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)322 0319   cell
40 South Alcaniz St.(850)202 4416   office
Pensacola,  FL 32501(850)202 4440   fax



