docno="lists-051-10090202"
received="Thu Oct 31 04:32:48 2002"
isoreceived="20021031093248"
sent="Thu, 31 Oct 2002 09:33:04 +0000"
isosent="20021031093304"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Datatyping literals:  question and test cases"
id="5.1.0.14.0.20021031090450.0417aab0@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="009701c280af$2fbf1800$6d9316ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>,"Graham Klyne"<GK@NineByNine.org>,"ext pat hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>


At 09:29 31/10/2002 +0200, Patrick Stickler wrote:



>[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, 
>patrick.stickler@nokia.com]
>
> > >But, what about this:
> > >
> > >   _:x ex:prop "http://example.org/" .
> > >   ex:prop rdfs:range xsd:anyURI .
> >
> > That depends on how xsd:anyURI defines its value space. If its the
> > set of strings conforming to the URI syntax, then OK.
>
>ARGH! Pat, no!
>The WG has decided (with Nokia's dissent) that inlined literals
>denote their string components (i.e. string-semantics)

No it has not.  Their has been some recent discussion on whether they 
denote (string,lang) pairs or the union of strings and (string, lang) 
pairs.  To the best of my recollection, denoting just strings is not a 
current option.

>  and therefore
>the above range assertion is a datatype clash! It is *never* OK.
>Never ever ever. It is not possible for it to ever be OK.

Why not?  Surely that depends on whether the value spaces of literals and 
anyURI's are disjoint.  If literals can denote strings (as you claim they 
can), and anyURI's are strings, then this is not necessarily a datatype clash.
[...]

>Furthermore, not that xsd:anyURI is *not* a subtype even of xsd:string!
>I.e., even XML Schema says that a member of the value space of xsd:anyURI
>is *not* a member of the value space of xsd:string -- a URI is not a string!

A reference would be helpful here.  Where does  XSD say that different 
primitive types must have disjoint value spaces.

It is true that anyURI is not derived from xsd:string, but is that because 
the value spaces are different, or because there is no facet that would 
allow exact expression of the value space of anyURI?  The only facet that 
might be used is PATTERN which requires a regular expression.  If the 
grammar for anyURI cannot be expressed as regular expression, then anyURI 
cannot be derived from xsd:string.

Brian



