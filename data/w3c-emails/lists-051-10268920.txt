docno="lists-051-10268920"
received="Thu Oct 31 09:36:28 2002"
isoreceived="20021031143628"
sent="Thu, 31 Oct 2002 15:35:52 +0100"
isosent="20021031143552"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: rdf:first/rest/nil/List: syntax-only at the RDF level"
id="OF3BFAF6F9.54E42DDD-ONC1256C63.0048EB15-C1256C63.00503531@agfa.be"
charset="us-ascii"
inreplyto="rdf:first/rest/nil/List: syntax-only at the RDF level"
expires="-1"

To:"pat hayes<phayes"<phayes@ai.uwf.edu>
Cc:"Jeremy Carroll"<jjc@hpl.hp.com>,w3c-rdfcore-wg@w3.org,w3c-rdfcore-wg-request@w3.org




[...]

> I actually said in the MT document that those rules weren't intended
> to define a process or to be directly implemented. I wish Id never
> mentioned closure rules: it was only intended to be a way of relating
> the semantics together.

right, I understand that, but still, inference rules can be inferenced
why then not use e.g. owl properties for some of the rdfs-rules
e.g.
rdf:first a owl:FunctionalProperty.          # and just have rdf:List
rdfs:subClassOf a owl:TransitiveProperty.    # instead of rule5
rdfs:subPropertyOf a owl:TransitiveProperty. # instead of rule3

I really can't see any problem with such an *implementation*
at least not as far as I did tests with that (for all our testcases)
(in a similar way, owl-rules could make use of e.g. math properties)

-- ,
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



