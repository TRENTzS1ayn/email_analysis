docno="lists-051-10314045"
received="Thu Oct 31 11:33:49 2002"
isoreceived="20021031163349"
sent="Thu, 31 Oct 2002 10:33:38 -0600"
isosent="20021031163338"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Datatyping literals:  question and test cases"
id="p05111b07b9e707a54925@[65.217.30.130]"
charset="us-ascii"
inreplyto="000501c280cb$4c8f2080$6d9316ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org


>[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, 
>patrick.stickler@nokia.com]
>
>
>----- Original Message -----
>From: "ext Brian McBride" <bwm@hplb.hpl.hp.com>
>To: "Patrick Stickler" <patrick.stickler@nokia.com>; "Graham Klyne" 
><GK@NineByNine.org>; "ext pat hayes" <phayes@ai.uwf.edu>
>Cc: <w3c-rdfcore-wg@w3.org>
>Sent: 31 October, 2002 11:33
>Subject: Re: Datatyping literals: question and test cases
>
>
>>  At 09:29 31/10/2002 +0200, Patrick Stickler wrote:
>>
>>
>>
>>  >[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690,
>>  >patrick.stickler@nokia.com]
>>  >
>>  > > >But, what about this:
>>  > > >
>>  > > >   _:x ex:prop "http://example.org/" .
>>  > > >   ex:prop rdfs:range xsd:anyURI .
>>  > >
>>  > > That depends on how xsd:anyURI defines its value space. If its the
>>  > > set of strings conforming to the URI syntax, then OK.
>>  >
>>  >ARGH! Pat, no!
>>  >The WG has decided (with Nokia's dissent) that inlined literals
>>  >denote their string components (i.e. string-semantics)
>>
>>  No it has not.  Their has been some recent discussion on whether they
>>  denote (string,lang) pairs or the union of strings and (string, lang)
>>  pairs.  To the best of my recollection, denoting just strings is not a
>>  current option.
>>
>>  >  and therefore
>>  >the above range assertion is a datatype clash! It is *never* OK.
>>  >Never ever ever. It is not possible for it to ever be OK.
>>
>>  Why not?  Surely that depends on whether the value spaces of literals and
>>  anyURI's are disjoint.  If literals can denote strings (as you claim they
>>  can), and anyURI's are strings, then this is not necessarily a 
>>datatype clash.
>>  [...]
>
>I would assert that anyURI values are not strings, but URIs. I don't
>believe that anyone expects that the URI value space is ordered, i.e.
>that it is meaningful to ask if URI X is "less than" URI Y,

Well, neither is the space of strings, other than by a kind of pun on 
"less than", so I don't find that a very persuasive argument. And one 
could always say that URIs *were* ordered (since they are strings :-) 
but that the ordering isn't important or meaningful for URIs, just as 
it isn't for, say, names of capital cities.

There is always this possibility for talking about some class of 
things that (are/can be encoded as) a subset of strings: one can 
treat them as a separate category, or as an algebraic structure 
defined over strings (algebraic to allow for equivalences like 
leading zeros). You get the same answers in each case, so a debate 
here is really an aesthetic one rather than a real debate, seems to 
me.

>only whether
>they are equal. Furthermore, equality between values of xsd:anyURI is
>not the same as string equality. I.e.
>
>    "http://EXAMPLE.COM/"^^xsd:anyURI == "http://example.com/"^^xsd:anyURI
>
>This is no differen than the case of
>
>    "10"^^xsd:integer == "000000010.0000000"^^xsd:integer

Really? Then you have to be saying that in the first case, those 
strings on the page *denote* URIs, rather than *are* URIs. That is a 
very interesting idea. So when I type a URI into my RDF editor, what 
really goes on is that I type a character string which denotes a URI, 
which in turn denotes something else. So there is a two-stage 
denotation going on, when I interpret the RDF? That would be a very 
odd semantics, but it might be interesting.

>Yet
>
>    "http://EXAMPLE.COM/"^^xsd:string != "http://example.com/"^^xsd:string


Seems to me that you, Patrick, want a very 'strongly typed' overall 
framework where almost every lexical form is a distinct category, 
whereas others prefer a much more 'weakly typed' regime where one 
just lumps together just about all lexical forms as species of 
character string. The two attitudes would produce different kinds of 
class structure for lexical entities: a strict taxonomy, maybe even a 
partition, in the first case and a wild-west RDFS kind of tangle in 
the second case. I would like to find a way to accommodate both 
views, but I wonder if it is possible.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



