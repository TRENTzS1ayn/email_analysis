docno="lists-051-10493636"
received="Thu Oct 31 14:33:05 2002"
isoreceived="20021031193305"
sent="Thu, 31 Oct 2002 13:32:52 -0600"
isosent="20021031193252"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Datatyping literals:  question and test cases"
id="p05111b1bb9e73423b7c5@[65.217.30.130]"
charset="us-ascii"
inreplyto="001101c28101$3783f360$79c215ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org


>[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, 
>patrick.stickler@nokia.com]
>
>
>>  >Inlined literals and rdfs:range will *never* work together, except
>>  >in the single case of rdfs:StringLiteral. I wonder if folks appreciate
>>  >that oddity.
>>
>>  You seem to be assuming that it is impossible for two different
>>  datatypes to have the same value space.
>
>Not at all. But see below.
>
>>  I wasn't aware that this was
>>  a general rule. I would have no problem for example saying that
>>  rdfs:StringLiteral and xsd:String had the same value space. (NOt the
>>  same lexical space, but the same value space.)
>
>I am presuming, perhaps incorrectly, that for one value space
>to intersect with another value space that for any two values
>X and Y which occur in the intersection of those value spaces
>the same relations hold for them in terms of either datatype.
>
>I.e., if X < Y in datatype 1 then X < Y in datatype 2.
>
>If one datatype has an ordered value space and the other does
>not, then can they really intersect?

Well, what does it mean to say that the space doesn't have an 
ordering? I mean, its not *impossible* to define an ordering on 
URIrefs. I think you have a picture here where a 'space' is something 
like an algebra, ie a set together with some operations or relations 
on the set, rather than simply a set or class of things. Two 
different algebras can have the same underlying set. (I think its 
called the 'carrier' of the algebra, but it was years ago :-)

>If X = Y in one value space yet X != Y in the other value space
>can they really intersect?

Well, not if that really means identity, but then if it meant that, 
this would be impossible.

>
>I think not, in both cases.
>
>Since I do not consider the value space of rdfs:StringLiteral
>to be ordered, then I do not see that it can intersect with
>that of xsd:string.

HOw about saying that xsd:string has an ordering defined on it which 
isnt relevant to rdfs:StringLiteral?

The reason for being so careful about this terminology is that the 
operations are defined on the whole space, sure; but the things IN 
the space are just what they happen to be, which ever category you 
put them into. So with the operations-over-the-carrier-set picture, 
any particular rdfs:StringLiteral is indeed an xsd:string and vice 
versa, even if it makes sense to distinguish the two classes for some 
'global' reason.

This is the 'weak typing' view Im giving you here, of ocurse.

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



