docno="lists-051-11863202"
received="Fri Sep  6 06:52:04 2002"
isoreceived="20020906105204"
sent="Fri, 6 Sep 2002 12:51:24 +0200"
isosent="20020906105124"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: handling bare literals and PS a Q. about lang tags"
id="OF6AF95551.40CBA97A-ONC1256C2C.003A4075@agfa.be"
charset="us-ascii"
inreplyto="handling bare literals and PS a Q. about lang tags"
expires="-1"

To: pat hayes<phayes@ai.uwf.edu>
Cc: Patrick Stickler<patrick.stickler@nokia.com>,w3c-rdfcore-wg@w3.org



[...]

> If we combine the semantic
> conditions for bnodes and for datatype literals, then (_:x, "10") is
> basically a variable ranging over possible things that "10" could be
> mapped to by a datatype.

that is it
we should have no problem implementing that
(in Euler
    O--verb->uri-or-var
     --object->O--verb->string)

[...]

> Finally, one alternative is to do all the above but ALSO allow bare
> literals as legal nodes, and require them to follow Dan's preferences
> and denote themselves. Then *bare* literals provide a way to refer to
> lexical forms, and datatyped literals (including those with bnodes in
> them) allow us to use literals to refer to values. In this case all
> nodes would be tidy also, but a bare literal would never be the same
> as a literal node.  In many ways this conforms to everyone's wishes,
> I think: literals always refer to themselves, datatyped literal nodes
> always refer to values, all the usual semantic rules apply uniformly,
> and we can say anything. The only real cost will be to legacy systems
> which use bare literals to refer to values, but they will need to be
> changed, probably, whatever we do. And we can discuss the translation
> strategies in the previous paragraph, with their pros and cons, for
> use by conversion implementers.

I think I prefer that one

> If the WG feels this is worth bothering with, I could wrote this up
> as a draft in a few days.

O, definitely
I'm impressed

-- ,
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



