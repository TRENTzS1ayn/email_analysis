docno="lists-051-11924641"
received="Fri Sep  6 08:42:57 2002"
isoreceived="20020906124257"
sent="Fri, 6 Sep 2002 14:42:15 +0200"
isosent="20020906124215"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: handling bare literals and PS a Q. about lang tags"
id="OF285F1914.870BBBF9-ONC1256C2C.004476D2@agfa.be"
charset="us-ascii"
inreplyto="handling bare literals and PS a Q. about lang tags"
expires="-1"

To: Dave Beckett<dave.beckett@bristol.ac.uk>
Cc: pat hayes<phayes@ai.uwf.edu>,w3c-rdfcore-wg@w3.org



[...]

> > Finally, one alternative is to do all the above but ALSO allow bare
> > literals as legal nodes, and require them to follow Dan's preferences
> > and denote themselves. Then *bare* literals provide a way to refer to
> > lexical forms, and datatyped literals (including those with bnodes in
> > them) allow us to use literals to refer to values. In this case all
> > nodes would be tidy also, but a bare literal would never be the same
> > as a literal node.  In many ways this conforms to everyone's wishes,
> > I think: literals always refer to themselves, datatyped literal nodes
> > always refer to values, all the usual semantic rules apply uniformly,
> > and we can say anything. The only real cost will be to legacy systems
> > which use bare literals to refer to values, but they will need to be
> > changed, probably, whatever we do. And we can discuss the translation
> > strategies in the previous paragraph, with their pros and cons, for
> > use by conversion implementers.
>
> I'm not clear what you are saying here with "legacy systems which use
> bare literals to refer to values".  Are you saying:
>
>   <foo:prop>10</foo:prop>
>
> would give different triples?
>
> ie not
>   _:a <http://example.org#prop> "10"
> but something else:
>   _:a <http://example.org#prop> _:b"10"

I understood it as that that would still give (in last alternative)
    _:a <http://example.org#prop> "10" .

and that
    <foo:prop rdf:datatype="xsd:int">10</foo:prop>

would give
    _:a <http://example.org#prop> xsd:int"10" .

and that
    <foo:prop rdf:datatype="">10</foo:prop>

would give
    _:a <http://example.org#prop> _:b"10" .

???

> I can't yet work out how large the impact is of making all literal
> nodes be a (basic node, literal) pair.  This obviously affects
> N-Triples but I think it also changes all our test cases and every
> piece of rdf code ever written.  Or am I misreading something?

well, I think nothing should change
(it's just an add on)

> I guess if as you suggested after Connolly [[ use the same bnode for
> every literal in the entire world]] that would reduce the pain since
> existing systems would implicitly be using that.

I quess I see your confusion
therefore bare literals stay as they were
i.e. denoting themselves, no?

> I'm also not sure if you haven't sort-of sneaked in literal subjects
> which was a postponed issue:
>
> [[
> we are able to say things like
>
> Jenny ex:age (_:y, "10") .
> _:y rdf:type rdf:Datatype .
> ]]
>
> The above isn't representable in RDF/XML (with datatypes attribute)
> unless we add another one: rdf:datatypeNodeID

right

-- ,
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



