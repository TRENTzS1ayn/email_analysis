docno="lists-051-12508648"
received="Thu Sep 12 10:17:45 2002"
isoreceived="20020912141745"
sent="Thu, 12 Sep 2002 17:17:43 +0300"
isosent="20020912141743"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Literals: language and xml (was: Comments on new datatyping                document, part 1)"
id="002a01c25a67$28c6e550$864416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="Pine.GSO.4.44.0209111401490.20295-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To:"ext Jan Grant"<Jan.Grant@bristol.ac.uk>
Cc:"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Graham Klyne"<GK@NineByNine.org>,"RDF core WG"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 50) 483 9453, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Jan Grant" <Jan.Grant@bristol.ac.uk>
To: "Patrick Stickler" <patrick.stickler@nokia.com>
Cc: "ext Jeremy Carroll" <jjc@hplb.hpl.hp.com>; "Graham Klyne" <GK@NineByNine.org>; "RDF core WG" <w3c-rdfcore-wg@w3.org>
Sent: 11 September, 2002 16:09
Subject: Re: Literals: language and xml (was: Comments on new datatyping document, part 1)


> On Wed, 11 Sep 2002, Patrick Stickler wrote:
> 
> >  The RDF
> > MT does not and cannot *know* that "10"->10.
> 
> "cannot" is (or denotes) an overly strong term. 

Perhaps, but I meant to stress the absolute opacity of datatypes
that should be reflected in the MT, just as URIrefs are absolutely
opaque.

> For what it's worth, I
> agree with much of what Jeremy's saying (and I'm glad that someone's
> better able to articulte this than me).

I'm certainly sympathetic to it, just not so much that I
would consider values as labels a reasonable representation,
all things considered.

> RDF/XML might be an interchange format*, but implementations are
> springing up that use RDF's conceptual model (or an implementer's best
> take thereon) in a more-or-less concrete fashion.

Well, that's their perogative, and I'm certainly in favor
of making the conceptual model easy to implement, but alot
of the arguments I'm hearing seem to be suggesting that
the tail should be wagging the dog...

> While I buy Jeremy's point of view over Patrick's, that's not to say
> that I don't find the latter way of looking at things at least
> semi-persuasive. Ultimately, we're going to be dealing with
> representations, not referents, at some stage. The question is whether
> we make that explicit and how early in the "RDF story" we make that
> distinction explicit. I see Patrick's point of view as doing this early;
> and Jeremy's as leaving it as late as possible, because a lot of people
> can conveniently ignore the symbol/referent distinction and still get
> useful work done.

Well, all the other node labels are names of resources, not the
resources themselves (URIrefs, systemIDs, etc.).

It seems odd to me that typed literal nodes would be any different,
having the actual resources as labels rather than the names of those
resources.

(I consider an XML literal to denote an infoset resource, so
it too is a name, not the actual resource, but that's another
discussion entirely...)

It's up to the application to map from names to resources, no
matter whether those names are URIrefs, system IDs or datatype/lexicalform
pairings.

The purpose of the abstract syntax/model, as I understand it, is
to provide a system-independent, generic, explicit, and consistent
embodyment of the assertions made in the RDF/XML, *and* according to
the names used by the particular statements. 

Putting actual resources
into the "abstract" model, especially since not all systems will
be able to recognize and/or represent such resources natively, seems 
to violate the system-neutrality and genericity that should be a key 
characteristic of any standardized model for information interchange.
Doing so begs the question of why we don't do all kinds of other mergings
where it is "obvious" that two labeled nodes denote the same thing.

The abstract graph should capture what is *said*, and *how* it is
said, not what is meant by what is said.

It's the job of the MT to say what the graph means. And putting
values into the graph blurs that clean, and IMO crucial, distinction
between syntax and semantics. The graph is syntax. It should have
syntactic labels true to the original expression in RDF/XML; and 
that means datatype+lexicalform labels for typed literal nodes.

Cheers,

Patrick



