docno="lists-051-12545077"
received="Thu Sep 12 10:31:54 2002"
isoreceived="20020912143154"
sent="Thu, 12 Sep 2002 17:31:48 +0300"
isosent="20020912143148"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Proposal for abstract syntax representation of inline literals (was Re: weekly call for agenda items)"
id="004901c25a69$20e61250$864416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="OF89420324.0F97EDB5-ONC1256C32.004E80A1&#64;agfa.be"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"ext Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"ext Brian McBride"<bwm@hplb.hpl.hp.com>,"RDF Core"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 50) 483 9453, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Jos De_Roo" <jos.deroo.jd@belgium.agfa.com>
To: "Jeremy Carroll" <jjc@hplb.hpl.hp.com>
Cc: "ext Brian McBride" <bwm@hplb.hpl.hp.com>; "Patrick Stickler" <patrick.stickler@nokia.com>; "RDF Core" <w3c-rdfcore-wg@w3.org>
Sent: 12 September, 2002 17:23
Subject: RE: Proposal for abstract syntax representation of inline literals (was Re: weekly call for agenda items)


> [...]
> 
> > I suggest an abstract syntax along the lines of:
> >
> > An RDF Literal Node can be labelled with one of:
> >
> > - an RDF String Literal (as now)
> > - an RDF XML Literal  (as now)
> > - a value from the value space of a datatype.
> 
> so they are selfdenoting (as now)

If you mean datatype value labeled nodes denote themselves,
yes (*if* we have such labels). But not all of the above
three node types are self denoting. It has not been
decided yet what string literals denote.

> > We simply note that an implementation that is unaware of a specific 
> datatype
> > used in an RDF/XML document will need to store the datatype URI + 
> lexical
> > form pair as a fall-back.
> 
> OK

No. We should note nothing of the sort. We should say nothing
about what any application should or should not do about
representing the abstract model internally in some system.

We say what the abstract graph contains, and what it means, and
how a given application deals with that is entirely and completely
out of scope. That's the purpose of an interchange standard, to
only say what is necessary for consistent, reliable interchange,
and remain completely silent about everything else.

No?

And the abstract graph should reflect the RDF statements that
have been made, using the names employed by the original
expression of those statements. If the MT says two string-unequal
names mean the same thing, fine, but the graph should still
reflect the original names used.

Patrick



