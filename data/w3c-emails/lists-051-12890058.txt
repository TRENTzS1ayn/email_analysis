docno="lists-051-12890058"
received="Tue Sep 17 15:50:44 2002"
isoreceived="20020917195044"
sent="Tue, 17 Sep 2002 21:49:15 +0200"
isosent="20020917194915"
name="Jeremy Carroll"
email="jjc@hpl.hp.com"
subject="Re: daml:collection is just Literal test: need help with details [was:     current action list]"
id="200209172149.15403.jjc@hpl.hp.com"
charset="us-ascii"
inreplyto="daml:collection is just Literal test: need help with details [was:     current action list]"
expires="-1"

To:w3c-rdfcore-wg@w3.org




Another test that I haven't implemented.

Again doesn't seem to be in the repository.

Dan suggested

   <rdf:Description>
          <ex:brothers rdf:parseType="daml:collection">
            <rdf:Description rdf:about="http://example/#Fred"/>
            <rdf:Description rdf:about="http://example/#Bob"/>
          </ex:brothers>
        </rdf:Description>

my parser (with rdf:parseType="d" not "daml:collection") gives:


_:jARP0 <http://example.org/eg#brothers> xml"\n            <rdf:Description xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" rdf:about=\"http://example/#Fred\"></rdf:Description>\n            <rdf:Description xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" rdf:about=\"http://example/#Bob\"></rdf:Description>\n          " .


Getting the spaces right in the test cases will be bothersome, why not use a flush-left test:

<rdf:Description>
<ex:brothers rdf:parseType="daml:collection">
<rdf:Description rdf:about="http://example/#Fred"/>
<rdf:Description rdf:about="http://example/#Bob"/>
</ex:brothers>
</rdf:Description>

which should go to

_:jARP0 <http://example.org/eg#brothers> xml"\n<rdf:Description xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" rdf:about=\"http://example/#Fred\"></rdf:Description>\n<rdf:Description xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" rdf:about=\"http://example/#Bob\"></rdf:Description>\n" .


note the rule about visibly used namespaces (this case rdf).

This is going to be a right pain to implement.
Currently strict mode in ARP just turns various warnings into errors. 
This one doesn't generate any warnings but invokes a different behaviour.

Jeremy



