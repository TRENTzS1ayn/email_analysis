docno="lists-051-13437720"
received="Mon Sep 23 06:28:13 2002"
isoreceived="20020923102813"
sent="Mon, 23 Sep 2002 13:26:40 +0300"
isosent="20020923102640"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Proposed N-Triples changes for datatypes &amp; (untidy) literals"
id="006a01c262eb$b4471870$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="BHEGLCKMOHGLGNOKPGHDGEEDCAAA.jjc&#64;hpl.hp.com"
expires="-1"


To:"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Dave Beckett"<dave.beckett@bristol.ac.uk>,"RDF Core"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 50) 483 9453, patrick.stickler@nokia.com]


> > Adding untidy literals (and bnodes are required)
> > ================================================
> >
> > Change 4
> >
> > FROM
> > langString ::= '"' string '"' ( '-' language )?
> > TO
> > langString ::= ( nodeID )* '"' string '"' ( '-' language )?
> 
> NodeID not necessary. Literal node is untidy and unreferencable.

I understood reification as requiring the specific untidy literal
node to be referencable. Is this not the case?

In any case, I feel that globally unique labels for untidy
literals will make things easier with regards to software
evolution and migration, by allowing legacy software to
maintain presumptions about absolute syntactic tidyness 
based on string equality of labels, and syntactic equality 
reflecting semantic equality.

Thus, the current behavior of node equality functions in
present APIs will remain "correct", and the clarification
about the untidy semantics of inline literals will have been
captured in the unique labels rather than having to change
those functions to grock the syntactic/semantic distinctions.

Only parsers need change, so that they give the inline literals
the needed systemID prefix.

Patrick



