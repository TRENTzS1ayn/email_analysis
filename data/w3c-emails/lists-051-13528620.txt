docno="lists-051-13528620"
received="Mon Sep 23 09:35:17 2002"
isoreceived="20020923133517"
sent="Mon, 23 Sep 2002 16:34:24 +0300"
isosent="20020923133424"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: DECIDED: untidy semantics"
id="000901c26305$ee387960$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="OF08FBBEDF.06794C00-ONC1256C3D.00457F6E-C1256C3D.004719E9&#64;agfa.be"
expires="-1"


To:"ext Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 50) 483 9453, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Jos De_Roo" <jos.deroo.jd@belgium.agfa.com>
To: "Patrick Stickler" <patrick.stickler@nokia.com>
Cc: "w3c-rdfcore-wg" <w3c-rdfcore-wg@w3.org>
Sent: 23 September, 2002 15:56
Subject: Re: DECIDED: untidy semantics


> 
> 
> [...]
> 
> > So, rather than the above, we'd have
> >
> > ==== untidyP
> > @prefix : <untidy#> .
> > :Sergey :votes _:a"untidy" .
> > :Graham :votes _:b"untidy" .
> > ====
> >
> > which does not entail
> >
> > ==== untidyC
> > @prefix : <untidy#> .
> > :Sergey :votes _:x .
> > :Graham :votes _:x .
> >
> > though, given the additional knowledge
> >
> > :votes rdfs:range xsd:string .
> >
> > a datatype aware RDF application could infer that Sergey's
> > and Graham's votes were the same, as it would be able to
> > determine that in both cases, the same value is denoted.
> 
> right, and I'm not arguing against that
> we actually just got that result (*)
> after adding following RDFS closure rules
> 
> -------------------------------------------------
>         | IF                    | THEN
> -------------------------------------------------
> :rule2b | ?p rdfs:domain ?C .   |
>         | (?t ?s) ?p ?o .       | (?C ?s) ?p ?o .
> -------------------------------------------------
> :rule3b | ?p rdfs:range ?C .    |
>         | ?s ?p (?t ?o) .       | ?s ?p (?C ?o) .
> -------------------------------------------------
> 
> 
> my argument is that "xyz" is "xyz" but *not* _:a"xyz"

Well, one would never be comparing "xyz" with _:a"xyz"
as we will either opt for systemIDs or not.

I'm not sure if I fully grok your parenthesized notation. I'm
presuming that (?t ?o) equates to _:a"xyz". Right? If so,
then doesn't rule 2b introduce typed literals as subjects?

My proposal is that we would never have a label consisting
of only the bare lexical form "xyz" but would always have the
unique systemID prefix, which would differentiate all occurrences
of implicitly typed lexical forms.

Thus, _:a"xyz" is a distinct node from _:b"xyz", or in your
notation above (_:a "xyz") and (_:b "xyz"), where
the systemIDs _:a and _:b are taken to denote the implicit
datatypes governing the interpretation of those lexical forms 
and their equality cannot be tested without knowing which datatype
_:a and _:b denote. If they denote the same datatype, then
we can conclude, based on the fundamental rules for RDF datatyping
that the two literal nodes denote the same value (as they are
then analogous to the same identical pairing of datatype and lexical
form). If they denote different datatypes, then some 
extra-RDF-MT knowledge about the datatypes is needed to
test equality. If the datatypes are not known for both, or
that extra-RDF-MT knowledge about the datatypes is not
known, then equality cannot be tested. They *might* be equal,
but we can't tell.

But would be no bare lexical form labeled nodes such as "xyz"
in the graph.

Patrick



