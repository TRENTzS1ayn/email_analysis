docno="lists-051-13603421"
received="Mon Sep 23 13:33:51 2002"
isoreceived="20020923173351"
sent="Mon, 23 Sep 2002 20:31:57 +0300"
isosent="20020923173157"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: xml:lang and XML infoset: two new datatypes"
id="001901c26327$1ddecbd0$2280720a@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="3D8F33F4.2070501&#64;db.stanford.edu"
expires="-1"


To:"ext Sergey Melnik"<melnik@db.stanford.edu>,"Dan Connolly"<connolly@w3.org>
Cc:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"RDF Core"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 50) 483 9453, patrick.stickler@nokia.com]

> My observation is that there is no room in a (URI, string) pair to keep 
> e.g., an xml:lang value, if the language-tagged strings is a separate 
> datatype. My suggestion to the editors is to make the pairs more 
> flexible, e.g., (URI, something).

The WG voted for the technical foundation outlined in part 1 of
the restructured datatyping specification, which specifies (URI, something)
where that something is a literal, which is a unicode string with
optional language tag.

I.e. a typed literal is a structure that contains a literal which
is itself a structure.

Have a look again at part 1 to see how this is specified. I forget
the www-archive URL, but it is also available at
http://www-nrc.nokia.com/sw/rdf-datatyping.html.

And per my recent proposals, we can treat all literals as typed
literals, where the first member of the pair is either a datatype
URIref or a systemID implicitly denoting the datatype, thus, per
part 1:

   literal      ::= [ xmlFlag ] unicodeString [ languageTag ]
   typedLiteral ::= ( datatype, literal )
   datatype     ::= URIref | systemID

Or, better, just make the datatype a manditory part of the literal 
structure:

   literal      ::= datatype [ xmlFlag ] unicodeString [ languageTag ]
   datatype     ::= URIref | systemID

which is probably clearer. The reason why there was the structural
distinction between literal and typed literal in part 1 was because
we hadn't yet decided for untidy inline literals at that time, so
it was not possible to introduce the datatype denotation as part of
the basic literal structure itself. Now though we can, and probably
should.

Patrick



