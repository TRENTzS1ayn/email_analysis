docno="lists-051-13802424"
received="Tue Sep 24 15:37:51 2002"
isoreceived="20020924193751"
sent="Tue, 24 Sep 2002 21:36:18 +0200"
isosent="20020924193618"
name="Jeremy Carroll"
email="jjc@hpl.hp.com"
subject="Re: The case for untidy literal semantics"
id="200209242136.18592.jjc@hpl.hp.com"
charset="us-ascii"
inreplyto="The case for untidy literal semantics"
expires="-1"

To:w3c-rdfcore-wg@w3.org




While Brian's summary is helpful, I keep wondering whether we are comparing 
the worst that came out of the tidy camp, with the worst that came out of the 
untidy camp.

Personally I like the syntactic transform on input, which adds a bnode into 
the graph in the place of each untyped  literal, and then another arc. The 
resulkting graph is understood with tidy literal semantics. The RDF/XML doc 
now has untidy literal semantics.

It's pretty minimal work for the tool builders; there is a difficult 
transitional phase for RDF apps built on top of the tools. Tool builders may 
need to support transitional deprecated APIs that make the bnode-arc-literal 
combination just look like a literal.

Mandating the transform and then tidy semantics should make it relatively easy 
to ensure that the community does the same thing (rather than variations on a 
theme).

Jeremy



