docno="lists-051-13844456"
received="Wed Sep 25 04:14:14 2002"
isoreceived="20020925081414"
sent="Wed, 25 Sep 2002 11:14:08 +0300"
isosent="20020925081408"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: DECIDED: untidy semantics"
id="002b01c2646b$8573eb00$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="5.1.0.14.0.20020924174401.022a8da0&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>,"ext Brian McBride"<bwm@hplb.hpl.hp.com>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


----- Original Message -----
From: "ext Brian McBride" <bwm@hplb.hpl.hp.com>
To: "Jeremy Carroll" <jjc@hplb.hpl.hp.com>; "Jos De_Roo" <jos.deroo.jd@belgium.agfa.com>; "Patrick Stickler"
<patrick.stickler@nokia.com>
Cc: "w3c-rdfcore-wg" <w3c-rdfcore-wg@w3.org>
Sent: 24 September, 2002 19:50
Subject: RE: DECIDED: untidy semantics


> At 17:40 24/09/2002 +0200, Jeremy Carroll wrote:
> [...]
>
>
> >My understanding of the tidy position is that this mapping is made by the
> >application at its own initiative, and it is unlicensed, or licensed only by
> >private channel.
>
> The way I tend to think of the tidy position on this is that the mapping is
> defined in the definition of the property.  Its not that its necessarily
> private or unlicensed but it is unavailable to a generic RDF processor.  As
> an example, the cc/pp bitsPerPixel property could be defined to be:
>
>    A string which is the decimal representation of the integer number of
> bits per pixel

But how do we then make that property-based datatype assertion explicit
in the RDF so that arbitrary semantic web agents know what is meant by
the literal? You can't use rdfs:range, because then there is a semantic
conflict between the tidy interpretation of the literal, denoting itself,
and the assertion of the range, denoting a value.

The basis of the untidy approach is as Jeremy pointed out, that somewhere,
at some level, that literal is expected to *mean* something, and often
what it is expected to mean is something other than the string itself,
and thus, the intuitive view of what a literal is is the name of a thing,
a value. What that value is may only be known to some extra-RDF application,
but adopting value based semantics allows folks to utilize the RDFS
machinery to make explicit in the RDF what values are meant rather than
leaving that knowledge somewhere else off in la la land where some generic
RDF processor cannot access it.

RDF is about the *interchange* of knowledge, therefore I see any option
that leaves critical knowledge such as the intended denotation of some
lexical representation outside the scope of RDF to be self-defeating.

RDF should allow systems to say what their global assumptions are about
the datatyping context of particular properties, and tidy semantics
precludes that.

I'd rather see untyped literals removed from the language entirely
than left there to promote ambiguity in the expression of shared
knowledge.

Patrick



