docno="lists-051-13888393"
received="Wed Sep 25 04:45:58 2002"
isoreceived="20020925084558"
sent="Wed, 25 Sep 2002 11:39:33 +0300"
isosent="20020925083933"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: The case for untidy literal semantics"
id="003901c2646f$12cc6dd0$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="5.1.0.14.0.20020924164148.0223feb8&#64;0-mail-1.hpl.hp.com"
expires="-1"


To:"RDF Core"<w3c-rdfcore-wg@w3.org>,"ext Brian McBride"<bwm@hplb.hpl.hp.com>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


> Some RDF assumes string based semantics for literals.  [There ought to be a
> reference here, perhaps something from RSS ...

RSS presumes value-based semantics.

C.f. http://web.resource.org/rss/1.0/modules/syndication/, e.g.

[
updateFrequency

Used to describe the frequency of updates in relation to the update period. A positive integer indicates how many times in that
period the channel is updated. For example, an updatePeriod of daily, and an updateFrequency of 2 indicates the channel format is
updated twice daily. If omitted a value of 1 is assumed.
]

> 2.  Principle of Least Change
> ...
> 2) As expressed, this argument does not address the tradeoff that
> exists.  Whilst adopting untidy semantics makes it easier to specify that a
> literal really denotes an integer, it adds a burden of requiring the
> content producer to specify that strings were intended, where that would
> not be necessary with tidy semantics.

Yet, this has the clear benefit of the intent of the content producer
being made explicit and clear, rather than remaining implicit or
even unknown. It also serves to help identify conflicts between systems
in their presumptions about interpretation, should one system assert
e.g. xsd:string and another assert xsd:integer for the same property.
Surely such knowledge would be emmensely beneficial and worth the effort
of specification.

--

You appear to have missed one very important issue, namely,

Probable Schism of the RDF Community
--------------------------------------

If tidy semantics is adopted *and* those applications which are
already deployed which employ inline literals with value-based
semantics (Adobe XMP, CC/PP, DC, RSS, etc.) refuse to change their
serializations for reasons of practicality (and that is likely to
be the case), then these applications will have conflicting and
non-monotonic interpretations of the RDF compared to the RDF MT.

The RDF MT will say that a given inline literal denotes itself,
the string, yet the application may say that it denotes something
else -- thus, entailments that hold for the RDF MT may not hold
for the application MT and visa versa. Furthermore, higher level
or client applications which wish to interact with RDF knowledge
expressed according to these value-based models will not be able
to utilize generic RDF tools and inference engines because they
will not behave correctly according to the value-based semantics.

In short, there will occur a schism in the RDF commmunity, with
two competing and conflicting model theories in use and incompatability
between them.

I would consider that to be a catastrophic blow to RDF, particularly
considering that RDF has been slow to grow and the above value-based
applications are each a "poster child" for RDF. Adoption of tidy
semantics would be a rather odd and brutal way to reward early adoption
of RDF by these applications.

And given that there has been expressed broad sentiment that value
based semantics is better for RDF in the long run, and more accurately
reflects the purpose and goal of RDF and the SW it seems that
current implementors of generic tools simply need to bite the bullet
and make the necessary changes, in the interest of present but
especially future users of RDF and the SW.

Patrick



