docno="lists-051-13899775"
received="Wed Sep 25 04:48:44 2002"
isoreceived="20020925084844"
sent="Wed, 25 Sep 2002 11:41:25 +0300"
isosent="20020925084125"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: The case for untidy literal semantics"
id="004301c2646f$5526aa60$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="200209242136.18592.jjc&#64;hpl.hp.com"
expires="-1"


To:"ext Jeremy Carroll"<jjc@hpl.hp.com>,<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Jeremy Carroll" <jjc@hpl.hp.com>
To: <w3c-rdfcore-wg@w3.org>
Sent: 24 September, 2002 22:36
Subject: Re: The case for untidy literal semantics


> 
> 
> While Brian's summary is helpful, I keep wondering whether we are comparing 
> the worst that came out of the tidy camp, with the worst that came out of the 
> untidy camp.
> 
> Personally I like the syntactic transform on input, which adds a bnode into 
> the graph in the place of each untyped  literal, and then another arc. The 
> resulkting graph is understood with tidy literal semantics. The RDF/XML doc 
> now has untidy literal semantics.
> 
> It's pretty minimal work for the tool builders; there is a difficult 
> transitional phase for RDF apps built on top of the tools. Tool builders may 
> need to support transitional deprecated APIs that make the bnode-arc-literal 
> combination just look like a literal.
> 
> Mandating the transform and then tidy semantics should make it relatively easy 
> to ensure that the community does the same thing (rather than variations on a 
> theme).
> 
> Jeremy

Well, I consider adding a systemID prefix to accomplish the very
same thing, and without adding additional triples to the graph.

And it would be just as easy for tool builders to do, since they
anyway have to generate such systemIDs for bnodes.

Patrick



