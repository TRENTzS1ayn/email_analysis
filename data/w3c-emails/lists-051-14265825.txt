docno="lists-051-14265825"
received="Thu Sep 26 05:28:28 2002"
isoreceived="20020926092828"
sent="Thu, 26 Sep 2002 12:28:22 +0300"
isosent="20020926092822"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Minutes: 2002-09-20"
id="006801c2653f$0f1589d0$d74416ac@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="OF9F17EEC6.48A7CD85-ONC1256C40.002EAFE2-C1256C40.002FF65E&#64;agfa.be"
expires="-1"


To:"ext Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"ext Jeremy Carroll"<jjc@hpl.hp.com>,<w3c-rdfcore-wg@w3.org>




[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com]


----- Original Message ----- 
From: "ext Jos De_Roo" <jos.deroo.jd@belgium.agfa.com>
To: "Patrick Stickler" <patrick.stickler@nokia.com>
Cc: "ext Jeremy Carroll" <jjc@hpl.hp.com>; <w3c-rdfcore-wg@w3.org>
Sent: 26 September, 2002 11:43
Subject: Re: Minutes: 2002-09-20


> 
> 
> [good archeology]

;-)


> > So while I understand that you still have a desire for some
> > form of "global string constant literal", other than a URIref,
> > you do not appear opposed to the idea of a distinctly labeled,
> > implicitly typed, untidy literal nodes which denote values
> > and not strings.
> 
> of course not (just that "implicitly typed" is there
> too much, should better be "unknown typed" I guess)

Well, I guess the term implicit seems applicable since
the interpretation of the inline literal is based on 
it being a lexical form that denotes some value. We can't
know what that value is based on the node label alone,
since the datatype is not specified, but a lexical form
denoting a datatype value implies a datatype, hence the
term "implicitly typed".

Given some implicitly typed literal _:x"LLL" the datatype
denoted by the system identifier _:x is unknown. But
the form of representation in the abstract syntax and
the semantics in the MT are analogous to explicitly
typed literals, where the datatype is in fact known, 
e.g. <DDD>"LLL"

Given the above representation, where each inline literal
has a unique systemID prefix, *all* nodes in the 
abstract graph can be considered both syntactically and
semantically tidy, no matter what type of node they
are (URIref, blank, explicitly typed literal, or 
implicitly typed literal).

Eh?

> as that was "Brian's birthday present" you remember
> i.e. datatyped literals but with an explicit/unambiguous
> syntax

But that hasn't changed. We still have explicitly typed
literals with unambiguous syntax and semantics.

   <&xsd;integer>"10"

always means the integer value ten, and is tidy.

> besides that I think we need a clarification of that
> "global string constant literal" or "self-identifier"
> or "tidy literal" or "inline literal" or whatever
> you call it 

My understanding/usage of the above terms:

"global string constant literal" - a bare string literal
with no explicit datatyping is taken to be a global constant,
where the meaning of the string is fixed. So, any two
statements that refer to the same string are considered to
be talking about the same thing. So both

   :DanC x:isMemberOfOrganization "W3C" .
   :blarg zz:widgetCode "W3C" .

are talking about the same thing when they say "W3C". Or
again both

   :x foo:integerValue "10" .
   :y bar:binaryValue "10" .

are talking about the same thing when they say "10".

Now, if you are simply using RDF as a structured markup
language, fine. It's OK to just talk about strings. But
if you are trying to use RDF to talk about the world,
well, such an interpretation of literals is rather sloppy
and unlikely to reflect the real world consistently.


"inline literal" - an old-style RDF literal without any
explicit local datatyping. E.g. <age>10</age>


"tidy literal" - an inline literal that is interpreted as
a global string constant. The meaning of a tidy literal 
reflects the form of expression.


"untidy literal" - an inline literal that is interpreted
as denoting some value, where the label embodies the
lexical form for that value according to some unspecified,
unknown datatype. The meaning of an untidy literal 
reflects the world.


"self-identifier" - ??? a global string constant?


Patrick



