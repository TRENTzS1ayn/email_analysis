docno="lists-051-14278233"
received="Thu Sep 26 05:45:25 2002"
isoreceived="20020926094525"
sent="Thu, 26 Sep 2002 10:30:17 +0100"
isosent="20020926093017"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="RE: Technical change to the RDFS MT (test cases in n3)"
id="5.1.0.14.2.20020926095717.03e66ec0@127.0.0.1"
charset="us-ascii"
inreplyto="BHEGLCKMOHGLGNOKPGHDIEECCAAA.jjc&#64;hpl.hp.com"
expires="-1"


To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"pat hayes"<phayes@ai.uwf.edu>
Cc:<w3c-rdfcore-wg@w3.org>


At 09:52 AM 9/23/02 +0200, Jeremy Carroll wrote:
>Domain & range test case, in n3, will RDF/XML latter.
>
>1:[[
>
>eg:prop rdfs:range eg:A .
>eg:A rdfs:subClassOf eg:B .
>
>rdfs-entails
>
>eg:prop rdfs:range eg:B .
>]]

Prompted by Jos' message, I've just scanned the OWL debate on this.

It seems to be that it hinges on differing views of the nature of a 
class:  my limited reading around description logics suggests to me that 
DLs treat classes as being identified by their set of members.  Thus, if 
two classes have the same members they are ipso facto the same class.

The RDF model theory separates a class from its members.  So if we look at 
the above entailment, it may not hold, even though a related entailment 
always holds:

1a:[[

eg:prop rdfs:range eg:A .
eg:A rdfs:subClassOf eg:B .
_:x eg:prop eg:C

rdfs-entails

eg:C rdf:type eg:B .
]]

That is, if for all eg:C that are members of some class eg:B,
eg:C is a valid object for property eg:prop,
it does not necessarily follow that eg:B is a range of eg:prop.

...

As far as I can tell, accepting or rejecting Jeremy's entailment 1 has 
little practical effect.

I think that because there may be subsets of IR that to not correspond to 
ICEXT(x) for any x in IR, it's still possible to have PropObj a subset of 
IR such that

   _:x eg:prop eg:C => eg:C in PropObj

without PropObj being the class extension of any range of eg:prop.

So I'm inclined to say the entailment doesn't really add any useful value, 
so why bother?

...

Returning to Pat's proposed change [1], I think I can see that the IFF is 
appropriate for rdfs:subClassOf and rdfs:subPropertyOf, because they are 
directly related to expectations of class membership.  I'm not so convinced 
the same considerations apply to rdfs:range and rdfs:domain.

The current MT [2] constraints on an RDFS interpretation are
[[
If <x,y> is in IEXT(I(rdfs:range)) and <u,v> is in IEXT(x) then v is in 
ICEXT(y)

If <x,y> is in IEXT(I(rdfs:domain)) and <u,v> is in IEXT(x) then u is in 
ICEXT(y)

If <x,y> is in IEXT(I(rdfs:subClassOf)) then ICEXT(x) is a subset of ICEXT(y)

If <x,y> is in IEXT(I(rdfs:subPropertyOf)) then IEXT(x) is a subset of IEXT(y)
]]

I can see Pat's additions to the rdfs:subClassOf and rdfs:subPropertyOf 
entailments.  I'm not sure what the corresponding additions would be for 
rdfs:range and rdfs:domain.

#g
--

[1] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Sep/0169.html

[2] http://www.w3.org/TR/rdf-mt/#rdfs_interp



-------------------
Graham Klyne
<GK@NineByNine.org>



