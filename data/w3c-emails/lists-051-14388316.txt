docno="lists-051-14388316"
received="Thu Sep 26 11:25:14 2002"
isoreceived="20020926152514"
sent="Thu, 26 Sep 2002 18:24:08 +0300"
isosent="20020926152408"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Intentions of XMP"
id="LLlftPVFn0zS.13X2mvjj@mail.nokia.com"
charset="ISO-8859-1"
inreplyto="Intentions of XMP"
expires="-1"

To:"RDF Core WG 7332#"<w3c-rdfcore-wg@w3.org>,"ext Alan Lillich"<alillich@adobe.com>, Patrick Stickler<patrick.stickler@nokia.com>




Thanks very much for your clarifications, Alan. I hope 
you don't mind my forwarding them to the RDF Core
working group.

Some additional questions and comments below...

_____________Original message ____________
Subject:Intentions of XMP
Sender:ext Alan Lillich <alillich@adobe.com>
Date:Thu, 26 Sep 2002 17:53:52 +0300

Patrick,

I'm an engineer working on XMP at Adobe. Andrew Salop forwarded a couple of
messages from w3c-rdfcore-wg. I thought I'd mention the basic intent of XMP
and maybe avoid future confusion. In one message you wrote:

> I think it's pretty evident that Adobe is expecting users of XMP to be
> thinking in terms of values, not lexical representations.

This is pretty much true, but not a piece of deep architecture. Clients
certainly know that dates should be formatted as ISO 8601 for example. A
good way to think about the Adobe XMP toolkit is that it models traditional
programming data structures, but with access through path strings and string
values for extensibility.

So when it comes down to comparing two
values, applications are not basing equality for
e.g dates on string comparison, but on the values
denoted by those strings. Right.

We store as RDF because it works. We are not RDF theory centric. We are not
at all concerned with the formalisms of triples. The Adobe toolkit has no
notion of triples and tries to not explicitly expose RDF.

XMP is primarily about solving pretty simple metadata needs for Adobe
customers.

In the other message Brian McBride wrote:

> What we need is an objective test of whether an API implementation is tidy or
> untidy.  We have agreed a model theoretic test, i.e. does
> 
> <a> <b> "foo" .
> <c> <d> "foo" .
> 
> entail
> 
> <a> <b> _;l .
> <c> <d> _;l .
> 
> If we could express this directly in the XMP API then your suggestion we would
> have an objective test.
...
> Is there a way to express the entailment directly in the XMP API so we can
> execute the test?

I have no idea what Brian is talking about. Which makes me seriously doubt
that the Adobe XMP toolkit has anything resembling what you're calling
entailment.

Perhaps a clearer, more mnemonic way to ask this question
would be, do the literal values of the following two properties
mean the same thing to XMP applications? Would they be
considered to carry equivalent semantics in both cases?

<xmp:CreateDate>2002-09-25T11:36:07Z</xmp:CreateDate>
<dc:title>2002-09-25T11:36:07Z</dc:title>

Regards,

Patrick

[Patrick Stickler, Nokia/Finland, patrick.stickler@nokia.com]



