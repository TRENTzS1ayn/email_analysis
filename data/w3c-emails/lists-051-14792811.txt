docno="lists-051-14792811"
received="Fri Sep 27 10:05:52 2002"
isoreceived="20020927140552"
sent="Fri, 27 Sep 2002 16:58:06 +0300"
isosent="20020927135806"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Reopening tidy/untidy decision"
id="007101c2662e$973755b0$e180720a@NOE.Nokia.com"
charset="iso-8859-1"
inreplyto="3D944C04.6020209&#64;mitre.org"
expires="-1"


To:"ext Frank Manola"<fmanola@mitre.org>,"Sergey Melnik"<melnik@db.stanford.edu>
Cc:"Brian McBride"<bwm@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>,"ext Eric Miller"<em@w3.org>




> 3) Untidiness requires changes in existing apps and APIs, whereas tidy 
> interpretation does not.

Perhaps not as much as one might think. If each inline literal
is prefixed with a unique systemID, it may very well be that
little to no existing apps or APIs need change -- rather, 
syntactic comparisons that before returned true will now 
return false (since while "10" == "10", _:a"10" != _:b"10")
and thus applications may not be licensed to
make all the entailments that they earlier were making, not
without clarifying the full meaning of the literal, presuming
the knowledge is there to do so.

This reflects the "clarification" made about the meaning of
inline literals, and encourages those applications which wish
to compare property values based on meaning rather than form
of expression to consider the semantics asserted for the
property.

On the other hand, if those applications wish to continue
treating inline literals as global constants, they must 
themselves take that extra step of stripping off the systemID
prefix prior to comparison, with (hopefully) full knowledge
that that is not licensed by the RDF MT. But they can do
it easily enough, and encapsulate that "sin" in a single
proxy comparison method to that provided by the API.

Patrick



