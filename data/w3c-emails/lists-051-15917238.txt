docno="lists-051-15917238"
received="Thu Apr  3 13:00:00 2003"
isoreceived="20030403180000"
sent="Thu, 03 Apr 2003 18:58:24 +0100"
isosent="20030403175824"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="williams-01, proposal to close"
id="5.1.0.14.2.20030403182845.02621100@127.0.0.1"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org


With reference to:
   http://www.w3.org/2001/sw/RDFCore/20030123-issues/#williams-01

I propose that this comment is addressed by revised text at:
   http://www.ninebynine.org/wip/RDF-concepts/20030401/Overview.html#section-data-model
   http://www.ninebynine.org/wip/RDF-concepts/20030401/Overview.html#section-URI-Vocabulary
(copied below)

This revision is to bring the introduction of the RDF graph concept, and 
its use of URIs, into line with the agreed model [1], as articulated by Pat 
[2].

[1] [[[ref?]]]
[2] http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Feb/0152.html

I also note that the description of abstract graph syntax in section 6 is 
already consistent with this model.

#g
--


[[
3.1 Graph data model

The underlying structure of any expression in RDF is a collection of 
triples, each consisting of a subject, a predicate and an object. A set of 
such triples is called an RDF graph (defined more formally in section 6). 
The structure can be illustrated by a directed node-arc diagram in which 
each triple is represented as a node-arc-node link (hence the term "graph".)

   [image of the RDF triple comprising (subject, predicate, object)]

Each property arc represents a statement of a relationship between the 
things denoted by the nodes that it links, having three parts:

    1. a property that describes some relationship (also called a predicate),
    2. a value that is the subject of the statement, and
    3. a value that is the object of the statement.

The direction of an arc is significant: it always points toward the object 
of a statement.

The nodes of an RDF graph are its subjects and objects.

When some RDF is published or claimed to be true, the triples in the graph 
are treated as assertions or statements. The assertion of an RDF triple 
says that some relationship, indicated by the property, holds between the 
subject and object of the triple. The assertion of an RDF graph amounts to 
asserting all the triples in it, so the meaning of an RDF graph is the 
conjunction (logical AND) of all the statements it contains. A formal 
account of the meaning of RDF graphs is given in [RDF-SEMANTICS].

3.2 URI-based vocabulary

A node may be a URI with optional fragment identifier (URI reference, or 
URIref), a literal, or blank (having no separate form of identification). 
Arcs are URI references. (See [URI], section 4, for a description of URI 
reference forms, noting that relative URIs are not used in an RDF graph. 
See also section 6.4.)

A URI reference or literal used as a node identifies what that node 
represents. A URI reference used as an arc identifies the relationship 
between the nodes connected by the arc. The arc URI reference may also be a 
node in the graph.

A blank node is a node that is not a URI reference or a literal. In the RDF 
abstract syntax, a blank node is just a unique node that can be used in one 
or more RDF statements, and has no globally distinguishing identity.

A convention used by some linear representations of an RDF graph, to allow 
several statements to contain the same blank node, is to use a blank node 
identifier, which is a local identifier that can be distinguished from all 
URIs and literals. When graphs are merged, their blank nodes must be kept 
distinct if meaning is to be preserved; this may call for re-allocation of 
blank node identifiers. Note that such blank node identifiers are not part 
of the RDF abstract syntax, and the representation of statements containing 
blank nodes is entirely dependent on the particular concrete syntax used.
]]


-------------------
Graham Klyne
<GK@NineByNine.org>
PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E



