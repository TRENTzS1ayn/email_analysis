docno="lists-051-16235614"
received="Fri Apr  4 04:31:42 2003"
isoreceived="20030404093142"
sent="Fri, 4 Apr 2003 11:31:16 +0200"
isosent="20030404093116"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: pfps-08 last call comment on typed literals"
id="BHEGLCKMOHGLGNOKPGHDGEGOCBAA.jjc@hpl.hp.com"
charset="US-ASCII"
inreplyto="3E8D26C4.9070805&#64;hplb.hpl.hp.com"
expires="-1"

To:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>
Cc:<phayes@ai.uwf.edu>,<w3c-rdfcore-wg@w3.org>,<bwm@hplb.hpl.hp.com>



Peter Patel-Schneider wrote:
> > So finish the job!  :-)

I think I will try to echo what I hear Peter suggest, since Patrick seems to
be (1) following this thread (2) of the opinion that there is not a proposal
that changes rdf:XMLLiteral to be a normal rather than a special datatype.

So:
We have not been contemplating changing either:
1) the rdf:parseType="Literal" syntax
2) the representation of this, as a canonical XML doc, in the domain of
discourse
We have  changed the treatment so that:
  most of the syntactic transformation of from (1) to (2) is done in Syntax
and not in rdf:XMLLiteral mapping rules.
We could go the whole hog, and make the mapping rules of rdf:XMLLiteral the
identity.
Leaving (2) fixed we have that the syntax document not only has to
canonicalise the literal content, but also it converts it into an XML
document as currently specified in concepts.
This would change test cases: e.g.

<rdf:RDF>
  <rdf:Description xml:lang="en">
    <rdfs:comment rdf:parseType="Literal"
    ><b>Bold</b></rdfs:comment>
  </rdf:Description>
</rdf:RDF>

would correspond to n-triples

_:a rdfs:comment
"<rdf-wrapper xml:lang=\"en\"><b>Bold</b></rdf-wrapper>"^^rdf:XMLLiteral .

or something like that (I don't swear I've canonicalized correctly).
Whether or not we include a redundant @en in the literal is immaterial.

We may well then have
rdf:XMLLiteral as a subdatatype of xsd:string
i.e. it is completely well-behaved and may or may not have synonyms and we
don't care, and language tags never participate in l2v mappings. We could
even ditch them all together from typed literals.

Jeremy



