docno="lists-051-16505809"
received="Fri Apr  4 09:27:06 2003"
isoreceived="20030404142706"
sent="Fri, 04 Apr 2003 09:47:49 -0500"
isosent="20030404144749"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: Issue jsr-118 (global datatyping)"
id="3E8D9B15.1080205@mitre.org"
charset="us-ascii"
inreplyto="A03E60B17132A84F9B4BB5EEDE57957B5FBB66&#64;trebe006.europe.nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
CC:gk@ninebynine.org,w3c-rdfcore-wg@w3.org,Art.Barstow@nokia.com


Patrick--

I believe that "non-monotonicity" is more correctly used to describe 
what goes on within the *same* reasoner, not between *different* 
reasoners.  I'm not disagreeing with the idea that there will be 
interoperability problems introduced whenever two systems disagree on 
basic assumptions (in this case, whether the interpretation of the 
properties affects the interpretation of the literals).

Patrick.Stickler@nokia.com wrote:

> 
> 
>>-----Original Message-----
>>From: ext Frank Manola [mailto:fmanola@mitre.org]
>>Sent: 03 April, 2003 16:52
>>To: Stickler Patrick (NMP/Tampere)
>>Cc: gk@ninebynine.org; w3c-rdfcore-wg@w3.org
>>Subject: Re: Issue jsr-118 (global datatyping)
>>
>>
>>Patrick.Stickler@nokia.com wrote:
>>
>>
>>>Er... you're telling them to use plain literals in the RDF but
>>>interpret them as typed literals by the applications. This
>>>means that conclusions drawn from an RDF-only application about
>>>those CC/PP statements will differ from conclusions drawn by
>>>a CC/PP application.
>>>
>>
>>Yes.
>>
>>
>>
>>>That means that non-monotonicity is being introduced between the
>>>RDF and CC/PP layers.
>>>
>>>No?
>>>
>>
>>No.  Dealing with literals this way in CC/PP may be a Bad 
>>Thing (e.g., 
>>it may create a lack of interoperable semantics with other 
>>applications), but I don't think it's properly described as 
>>non-monotonicity.  It's always going to be the case that an app that 
>>uses a specialized vocabulary with built-in meaning that it 
>>understands 
>>is going to be able to draw more conclusions about graphs using that 
>>vocaulary than an RDF-only application.  This is true of OWL, for 
>>example.  This doesn't mean OWL is introducing 
>>non-monotonicity between 
>>the RDF and OWL layers.  The same is true for specialized 
>>interpretations of schemas and literals (it's an application specific 
>>way of interpreting the RDF, just as a specialized vocabulary 
>>would be). 
>>  We can still claim it's a bad idea without describing it as 
>>non-monotonicity.
>>
>>
> 
> It's one thing to have vocabulary that will not be understood at
> lower levels, or for which there will be inferences that can be
> made at a higher level that do not hold at the lower levels.
> 
> It's another issue to have different inferences at different
> levels based on the very same statements.
> 
> If my RDF-only application holds the following entailment:
> 
> IF
>    _:x ccpp:BitsPerPixel "2" .
>    _:x ccpp:Model "2" .
> THEN
>    _:x ccpp:BitsPerPixel _:v .
>    _:x ccpp:Model _:v .
> 
> yet if for my CC/PP application, that entailment does *not* hold, 
> then that is non-monotonicity, and that is completely unnacceptable.


I don't agree.  It would be non-monotonic if additional triples were 
added to the graph, and the *RDF-only application* then determined that 
the entailment no longer held.  However, what we have here is a 
different reasoner, the CC/PP application, making different assumptions 
about how to interpret the literals (namely that the properties provide 
additional information).  The CC/PP application can consistently 
interpet those literals based on those assumptions.  Admittedly that may 
creates problem for interoperation between the two applications;  all 
I'm saying is that I doubt "non-monotonicity" is the way to describe this.


> 
> Compare to
> 
>    _:x ccpp:BitsPerPixel "2"^^ccpp:Number .
>    _:x ccpp:Model "2"^^ccpp:Literal .
> 
> which does not entail
> 
>    _:x ccpp:BitsPerPixel _:v .
>    _:x ccpp:Model _:v .
> 
> And note that I have not used any vocabulary but the CC/PP vocabulary.
> 
> The proposal promotes non-monotonicity.
> 
> We should recommend to CC/PP that they adopt typed literals in their 
> serializations since the CC/PP semantics clearly deals with datatype
> values.
> 
> CC/PP knowledge about terminals is only one subset of knowledge about
> terminals, and that knowledge should have a consistent interpretation
> both by CC/PP specific applications as well as arbitrary RDF applications
> consuming that knowledge.


Ideally this would be true (for any kind of specific application, not 
just CC/PP), but I doubt it's going to happen (and in any event, I 
continue to think "non-monotonicity" isn't the issue).


> 
> As such, any non-monotonicity, or any other incompatibility between
> CC/PP specific and RDF-general interpretations of CC/PP expressed
> knowledge should be avoided.
> 
> Patrick

--Frank

-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



