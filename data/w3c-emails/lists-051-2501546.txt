docno="lists-051-2501546"
received="Mon Nov 11 08:00:12 2002"
isoreceived="20021111130012"
sent="Mon, 11 Nov 2002 13:59:33 +0100"
isosent="20021111125933"
name="Jos De_Roo"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: rdfs closures"
id="OF017D0BEC.0AA1E344-ONC1256C6E.004730A9-C1256C6E.00476ADE@agfa.be"
charset="us-ascii"
inreplyto="rdfs closures"
expires="-1"

To:"pat hayes<phayes"<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org




[...]

>>you wrote somewhere rdfs:rest
>>I've no rdf:_n stuff in my stuff
>>I wonder why in 4.2 you don't have
>>   rdfs:Class rdf:type rdfs:Class.
>>   rdfs:Container rdf:type rdfs:Class.
>>   rdfs:List rdf:type rdfs:Class.
>>   rdfs:Property rdf:type rdfs:Class.
>
>They can all be derived from range and domain assertions elsewhere
>plus the rules. I was trying to keep the list down to a minimum.
>
>>and also why you say (also in 4.2) that
>>(some) properties are a rdf:Property
>>(why those some?
>
>Because we can derive the others, but there is no inference path to these.

right, exactly (how could I have misunderstood that)
e.g. to find that
  rdf:List rdf:type rdfs:Class.
there is the argument

 {
  <http://www.agfa.com/w3c/euler/rdfs-rules#rule2> .
  rdfs:subClassOf rdfs:domain rdfs:Class.
   {
    <http://www.agfa.com/w3c/euler/rdfs-rules#rule7> .
     {
      <http://www.agfa.com/w3c/euler/rdfs-rules#rule3> .
      rdfs:domain rdfs:range rdfs:Class.
      rdf:first rdfs:domain rdf:List} log:implies
    {rdf:List a rdfs:Class}} log:implies
  {rdf:List rdfs:subClassOf rdfs:Resource}} log:implies
{rdf:List a rdfs:Class}.


we now work with your minimal set plus
  rdf:type rdfs:domain rdfs:Resource.
and also striked
  rdfs:member rdfs:domain rdfs:Container.
and it works fine

-- ,
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



