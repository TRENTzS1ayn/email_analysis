docno="lists-051-3086773"
received="Wed Nov 13 09:12:44 2002"
isoreceived="20021113141244"
sent="Wed, 13 Nov 2002 09:13:10 -0500"
isosent="20021113141310"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: More semantic comments (XML Schema value spaces)"
id="p05111b04b9f80a7a06a0@[10.0.1.100]"
charset="us-ascii"
inreplyto="1037145513.22866.19509.camel&#64;dirk"
expires="-1"


To: Dan Connolly<connolly@w3.org>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org


>On Mon, 2002-11-11 at 17:13, pat hayes wrote:
>[...]
>>  >3.4
>>  >
>>  >I found the following unintelligible, possibly because I don't have
>>  >access to the XSD example in your (or mayber Peter's) head.
>>  >
>>  >[[Users shoudl take care to distinghuish the value space ...
>>  >identical when viewed as class members.]]
>>
>>  Yes, it is rather odd. The plain fact is that the XML schema specs
>>  are logically contradictory when one thinks of a value space as a
>>  set. Enquires have determined that XMLSchema value spaces are not
>>  sets,
>
>?!?!?
>
>yes, they are:
>
>"A value space is the set of values for a given datatype."
>  -- http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#value-space

There is little point in quoting one assertion from a text that has 
internal contradictions.

But I spoke too hastily. What I should have said is that they are not 
sets *of the values which the spec declares them as containing*. The 
spec (plus published or just-to-be-published errata) insists that no 
two primitive value spaces have the same members, by definition. It 
also says that base64Binary and hexcodedBinary both have value spaces 
containing the same members. On being queried about this, Henry 
Thompson gave the following replies: (1) primitive value spaces can 
contain the same members (2) members of distinct primitive value 
spaces are considered to be distinct, by definition.  This is 
impossible in set theory, no matter what the spec says. The spec is 
evidently confused.

>  > but something like categories or algebras. The same thing, seen
>>  as a member of two different value spaces, is considered to be two
>>  different things.

That is the impression I formed from trying to make sense of what 
Henry said and re-reading the spec in that light. But it is only an 
impression. Another interpretation is that the spec uses a 
nonstandard notion of 'value' in which there are two layers of 
interpretation and the xsd-"value' is the thing in the first layer, 
while the RDF-mathematical-"value" is in the second layer, with a 
many-to-one mapping between them.

>
>Inquiries may *suggest* otherwise, but only excerpts from
>the text of the spec can *determine* what XML Schema
>value spaces are.
>
>I'm interested in what leads you to think they're not
>sets.

Extended series of emails from Henry Thompson in reply to a direct 
query on the topic from Brian, followed by searching enquiries from 
me. I can forward them if you like. Henry's view is that the value 
spaces are best seen as sets of pairs <value, value space>. These are 
not the same sets as the class extensions of the datatype domains in 
RDF.

>
>In particular, I'm interested in seeing anything from
>the spec that suggests they're not sets (i.e. is
>inconsistent with the text excerpted above) reported as a bug
>to www-xml-schema-comments@w3.org .

I thought of sending in such a bug report, but decided that it wasn't 
a bug, exactly, and in any case it wasn't my business to help XML 
Schema clean up its own mess.

Pat


>
>>  This is simply impossible in RDFS if we interpret
>>  value spaces as classes. So I was trying to give the reader a warning
>>  about this without being so coarse as to imply anything derogatory
>>  about XML schema.
>
>--
>Dan Connolly, W3C http://www.w3.org/People/Connolly/


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



