docno="lists-051-3527548"
received="Tue Nov 19 22:03:21 2002"
isoreceived="20021120030321"
sent="Tue, 19 Nov 2002 22:03:16 -0500"
isosent="20021120030316"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: Datatype test cases: important ones (please have a look)"
id="p05111b10ba00aa4fa9ac@[10.0.100.86]"
charset="us-ascii"
inreplyto="Pine.GSO.4.44.0211191704490.12073-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To: Jan Grant<Jan.Grant@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org


>They're described in
>http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf
>
>I've put the major classes of test case in place (as I see them) - still
>to do: JJC's entailment (whether we want to approve it or not), round
>out the test cases for the other XSD datatypes.
>
>
>Test case name & description... names are as given in the manifest file
>(relative to http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/) -
>see manifest file for related files.
>
>test001
>A simple datatype production; a language+datatype production.
>Simply duplicate the constructs under
>http://www.w3.org/2000/10/rdf-tests/rdfcore/ntriples/test.nt
>
>test002
>A parser is not required to know about well-formed datatyped literals.
>
>non-well-formed-literal-1
>Without datatype knowledge, a "badly-formed" datatyped literal
>cannot be detected.
>
>non-well-formed-literal-2
>With appropriate datatype knowledge, a "badly-formed" datatyped
>literal is a semantic error.

Is it? The semantics only says that extensions MAY wish to post an 
error. I have no axe to grind here, but we ought to be consistent. If 
this is an RDF(S) error condition then the semantics ought to be 
clear on this also.

Also, under these conditions, it is valid to infer that a 
non-badly-formed datatyped literal is in the datatype space,ie the 
inference

aaa bbb "xxx"^^ddd .
-->
aaa bbb _:x .
_:x rdf:type ddd .

which is not valid without the datatype check.

>
>semantic-equivalence-within-type-1
>Demonstrating the semantic equivalence of two lexical forms of the
>same datatyped value.
>
>semantic-equivalence-within-type-2
>As semantic-equivalence-within-type-1; the entailment works both ways.
>
>language-important-for-non-dt-entailment-1
>language-important-for-non-dt-entailment-2
>Language attributes on a datatyped literal make them distinct for
>the purposes of non-datatype-aware entailments.
>
>language-ignored-for-numeric-types-1
>language-ignored-for-numeric-types-2
>language-ignored-for-numeric-types-3
>Language doesn't affect the semantic equivalence of some datatypes,
>when doing a DT-entailment.
>
>semantic-equivalence-between-datatypes
>Members of different datatypes may be semantically equivalent.
>
>This last one needs confirmation.

It should say that this is up to the datatype source to confirm , but 
that if it does so then the inference is valid. Not sure of exactly 
the best way to express this.

Pat



-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



