docno="lists-051-3538596"
received="Wed Nov 20 05:53:31 2002"
isoreceived="20021120105331"
sent="Wed, 20 Nov 2002 10:50:26 +0000 (GMT)"
isosent="20021120105026"
name="Jan Grant"
email="Jan.Grant@bristol.ac.uk"
subject="Re: First bit of datatype test cases (for Jos): manifest support."
id="Pine.GSO.4.44.0211201039500.20573-100000@mail.ilrt.bris.ac.uk"
charset="US-ASCII"
inreplyto="p05111b0eba00a87f3cf6&#64;[10.0.100.86]"
expires="-1"

To: pat hayes<phayes@ai.uwf.edu>
cc:w3c-rdfcore-wg@w3.org



On Tue, 19 Nov 2002, pat hayes wrote:

> >Basically, if an entailment test (positive or negative) requires
> >datatype knowledge / general DT closure rules then the entailmentRules
> >tag is needed. In addition, the datatypeSupport tag can be repeated to
> >list the specific datatypes used in the test.
>
> Not sure what this all means, but please make sure that the test
> cases always have an explicit

It just means, if the test case requires knowledge of lexical->value
mapping for a particular datatype, you list it in the test case
description (outside any files that have the test contents). "To run
this test case you need to know about XSD integer lexical->value
mapping".

> <whatever> rdf:type rdfs:Datatype  .
>
> antecedent for all the datatypes used.

They don't at the moment, but I'll include those asap.

> >Should a premise document contain a semantic error with respect to any
> >constraints imposed by the entailment rules selected, the entailment is
> >treated as not holding; that is, the test will succeed.
>
> Well, er, actually, in this case the entailment DOES hold, strictly
> speaking, rather in the way that False implies anything. But OK, you
> can *treat* it as not holding.

Yeah, I didn't really like it at the time, 'cause the MT is written so
that things are false rather than broken. Unfortunately, I had no way to
generate a false N-Triples consequent document at the time :-)

So although it's not a straightforward entailment, the "positive
entailment test" succeeds if:
- the premise document(s) have no semantic errors due to
  constraints wrt the entailment rules used, and
- the premise document(s) entail the consequent documents.

and a negative entailment test succeeds in exactly the opposite case.

> How about
>
> _:x eg:foo "fiewh"^^xsd:integer .
> _:x rdf:type xsd:integer .
>
> ??Strictly speaking, the MT says that this (trivially) entails
> anything, because its always false. Similarly
>
> _:x eg:foo "fiewh"^^xsd:integer .
> _:x rdf:type rdfs:Literal .

It's the "always false" that the neg. entailment test is trying to
catch; perhaps it'd be simpler to have a "no valid interpretations exist
for document X (wrt some set of constraints)" test? - That would mean
that an entailment test would do what a logician expects from the name.
Jos, you're running these test cases, what'd be your preference?

jan

-- 
jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
Tel +44(0)117 9287088 Fax +44 (0)117 9287112 http://ioctl.org/jan/
Unfortunately, I have a very good idea how fast my keys are moving.



