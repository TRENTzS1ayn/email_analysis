docno="lists-051-4093099"
received="Thu Nov 21 07:02:37 2002"
isoreceived="20021121120237"
sent="Thu, 21 Nov 2002 12:04:12 +0000"
isosent="20021121120412"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Datatype test cases: important ones (please have a look)"
id="5.1.0.14.0.20021121115806.03257cf8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="005d01c2912e$5b9dda30$149316ac&#64;NOE.Nokia.com"
expires="-1"


To:"RDFCore Working Group"<w3c-rdfcore-wg@w3.org>


At 09:19 21/11/2002 +0200, Patrick Stickler wrote:

[...]

> > >
> > > > The way this is put suggests that
> > > >
> > > >   <a> <b> "10"^^xsd:integer .
> > > >
> > > > entails all other datatype representations of the same value.
> > >
> > >Within _one_ datatype, that's true - this is rule rdfD 2 in the current
> > >MT.
> > >
> > >For multiple datatypes, the MT says this:
> > >
> > >[[
> > >These rules do not support any entailments based on identity between
> > >values of different datatypes. An obvious generalization of the second
> > >rule would permit such conclusions, but questions of identity between
> > >items in value spaces of two different datatypes should be referred to
> > >the authorities who defined the datatypes.
> > >]]
> >
> > Oh yes, you are right.  We are straying into specifying things about xsd
> > that are not up to us.
> > But I do think we have to do that for the 10 and 010 cases.  I do think
> > those need to be changed, but would want a second opinion.
>
>I think the entailment should hold for all other datatype representations
>of the same value where the datatype is a supertype of the xsd:integer.

I haven't been clear again, sorry.  The issue I was trying to raise is not 
whether the entailment holds, but how we should represent the test 
case.  If the test case is of the form

   <a> <b> "10"^^xsd:integer .

datatype entails (xsd)

   <a> <b> "010"^^xsd:integer .

and bearing in mind the we expect these to be machine checkable, do this 
suggest that a datatype aware RDF processor must generate the infinity of 
different representations of the number 10.  I might be wrong here - Jos 
seems to have done it without this problem.  If we couch the test in the form:

   <a> <b> "10"^^xsd:integer .
   <c> <d> "010"^^xsd:integer .

datatype entails (xsd)

   <a> <b> _:v.
   <c> <d> _:v.

then there is no suggestion that the process has to generate the infinity 
of values, only that it needs to be able tell when two lexical forms it is 
given denote the same value.

Brian



