docno="lists-051-4173726"
received="Thu Nov 21 09:51:14 2002"
isoreceived="20021121145114"
sent="Thu, 21 Nov 2002 14:52:45 +0000"
isosent="20021121145245"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="test case representation"
id="5.1.0.14.0.20021121145042.077000e8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="OFFA14C64E.899106E8-ONC1256C78.00481682-C1256C78.004A5643&#64; agfa.be"
expires="-1"


To:"Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"RDFCore Working Group"<w3c-rdfcore-wg@w3.org>


At 14:31 21/11/2002 +0100, Jos De_Roo wrote:

>[...]
>
> > If the test case is of the form
> >
> >    <a> <b> "10"^^xsd:integer .
> >
> > datatype entails (xsd)
> >
> >    <a> <b> "010"^^xsd:integer .
> >
> > and bearing in mind the we expect these to be machine checkable, do this
> > suggest that a datatype aware RDF processor must generate the infinity of
>
> > different representations of the number 10.  I might be wrong here - Jos
> > seems to have done it without this problem.
>
>right, this is the traditional forward/backward chaining stuff
>we do the latter and so start from the entailed graph and try
>to find evidence for it in the premised graphs, which is quite
>obvious here as the term "010"^^xsd:integer unifies with the
>term "10"^^xsd:integer

Aha!  I see how you got away with it.  A forward chaining reasoner such as 
cwm would have a problem, presumably.

Brian



