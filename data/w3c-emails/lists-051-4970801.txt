docno="lists-051-4970801"
received="Mon Nov 25 09:36:06 2002"
isoreceived="20021125143606"
sent="Mon, 25 Nov 2002 12:06:27 +0000"
isosent="20021125120627"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="Re: Hang on a second... Re: Datatype test cases: important     ones    (please           have a look)"
id="5.1.0.14.2.20021125115618.0426e070@127.0.0.1"
charset="us-ascii"
inreplyto="p05111b28ba0310df4828&#64;[10.0.100.86]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org


At 04:49 PM 11/21/02 -0600, pat hayes wrote:

>>At 11:21 21/11/2002 -0600, pat hayes wrote:
>>[...]
>>
>>>But its not valid for rdf:XMLLiteral, as I understand it. And since this 
>>>is now in RDF, some datatyping is included in RDF entailment.
>>
>>Oh bu**er.  Pat can you make the call this week.
>
>Yes.
>
>>Can we have a discusion of how much datatying moves into RDF.  I was 
>>kinda hoping this would be pretty opaque.
>
>Look, I CAN leave it the way it is, more or less. I had been trying to 
>make it be that the document was organized in layers like:
>
>basic graph entailment
>RDF and RDF entailment
>RDFS and RDFS entailment
>Datatyping and D-entailment
>
>.Keeping it layered and having XMLLiteral in the RDF namespace means I 
>should put the XML datatyping into the second layer, and the rest of 
>datatyping stays where it is but now needs to be rewritten a little (that 
>is no big deal). BUt this changes the definition of rdf-entailment and 
>hence of rdfs_entailment. Which is rather a bigger deal.
>
>Jeremy apparently wants to not have the namespace change make any 
>difference to the entailments. LIke I said, we could go that way, and it 
>would be a lot less of a change. It then reads kind of oddly, though, in 
>that just one thing in the RDF namespace isn't actually given any 
>semantics in RDF or in RDFS, but requires access to a datatype. But there 
>isn't any datatype for it: the last section refers dtype issues to the 
>owner of the datatype, and we ARE the owner of this datatype, so its up to 
>us to say what its semantics is, right? And if we are doing it, why aren't 
>we doing it in RDF already???
>
>I assumed that the namespace change was intended to lead to all these 
>changes to the entailments. If not, then I should probably leave well 
>enough alone; and then its just a matter of editing rdfs/rdf here and 
>there and putting a bit of protective prose explaining why rdf-entailment 
>ignores rdf:XMLLiteral.
>
>Anyone object to that?

Not objecting.  But...

Is it possible/reasonable that RDF-entailment is defined minimally for XML 
literals, and further refined (through additional constraints on the 
interpretations) at the level of datatype-entailment.

I think there is a precedent for this in RDF- and RDFS-interpretation of 
container vocabulary.  The vocabulary is introduced by RDF with no 
semantics, and then some semantic constraints are defined by  the RDFS 
layer.  Doen't this work naturally for XML literals?

#g


-------------------
Graham Klyne
<GK@NineByNine.org>



