docno="lists-051-5014135"
received="Mon Nov 25 09:36:36 2002"
isoreceived="20021125143636"
sent="Mon, 25 Nov 2002 11:52:56 +0000"
isosent="20021125115256"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="RE: weekly call for agenda items"
id="5.1.0.14.2.20021125113932.0426ca00@127.0.0.1"
charset="us-ascii"
inreplyto="p05111b20ba02eedc4f08&#64;[10.0.100.86]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
Cc:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org


At 02:18 PM 11/21/02 -0600, pat hayes wrote:
>>Also when we went down this canonicalization route we were very aware that
>>there are perfectly good RDF implementations that cannot tell when two XML
>>literals are identical.
>
>I don't think that position is now tenable.

I feel should hesitate to speak here, but I shall anyway...

The more I discuss RDF and its associated concepts, the more it seems to me 
that this idea of identity is slippery and subtle, and often treated 
glibly, en passant.

I think it's not hard to agree on identity when dealing with a concrete 
representation (at the level of a sequence of octets), but one when starts 
to look for deeper forms of equivalence life always seems to get 
complicated.  When do two different octet sequences indicate the same 
name?  When do two different names indicate the same value?  Etc.

I think the well-ordered world of formal semantics imposes a similar 
well-ordering on the concept of identity, but doesn't always explain how 
that ordering is to be achieved.  In the case of XML literals, what form of 
equivalence do we mean?  We have several choices:
- equivalent octet sequences
- equivalent Unicode character sequences
- equivalent infosets (whatever that means)
- equivalent RDF graphs (OK, not an option for XML literals, but it is 
another notion of equivalence in XML data)

Shallow notions of equivalence are easy to determine, and are sufficient to 
infer deeper notions of equivalence.  Deeper notions of equivalence can be 
arbitrarily difficult.

So what's my point?

What is the position that is not tenable?

I think we can fairly safely assume that RDF implementations can determine 
character-level equivalence between XML literals.  But it will be 
problematic for some applications (think: DPH) if the ability to determine 
deeper levels of equivalence is required.  I'm not sure why we *need* any 
deeper level than character equivalence.  I think this falls into the same 
category as being able to detect entailments:  some true facts may be 
overlooked, but we don't end up concluding falsehoods.

#g


-------------------
Graham Klyne
<GK@NineByNine.org>



