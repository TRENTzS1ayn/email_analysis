docno="lists-051-5042750"
received="Mon Nov 25 10:41:38 2002"
isoreceived="20021125154138"
sent="Mon, 25 Nov 2002 15:42:52 +0000"
isosent="20021125154252"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: More on XSD in RDF"
id="5.1.0.14.0.20021125153148.070bfda8@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="002f01c29461$7764f9c0$4b9316ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>


At 11:03 25/11/2002 +0200, Patrick Stickler wrote:
[...]

>My impression is that while there is evidently a problem with equality in 
>XML Schema
>simple datatypes, it is not per se a problem with RDF Datatyping.

yes.  Sorta.  I'll take your word for it there is a problem with XML Schema 
datatypes, but I'd rather we focussed our attention and efforts on the RDF 
issues we have.


>I.e., it should be sufficient to (a) note the problems in XML Schema and 
>(b) submit
>suggestions to the XML Schema WG, but I don't see how this impacts the current
>RDF datatyping model.

Yes.


>If XML Schema says that xsd:float and xsd:decimal have disjunct value spaces,
>we may wish to disagree and consider that a bug, but that doesn't affect how
>those datatypes are modeled in RDF. It simply means that the assertion
>
>    xsd:decimal rdfs:subClassOf xsd:decimal .

Oh I hope that's a type.  If Schema doesn't agree to that we are in 
trouble.  Did you mean something like

   xsd:integer rdfs:subClassOf xsd:decimal .


>(and/or visa versa) is (possibly) in conflict with the XML Schema spec.
>So what. That's not RDF's problem and RDF is not creating the problem.

YES.

>If the XML Schema spec says "1.0"^^xsd:decimal != "1.0"^^xsd.float  (and
>my understanding is that it does say this) then applications should respect
>that if they are using those datatypes.
>
>If the XML Schema datatype relations are either broken or ill defined, 
>then fix them.
>
>The RDF datatyping model is then providing a benefit to the XML community by
>shining a light on the problem.

I think this is a good approach.

I think I find myself agreeing strongly with Patrick here.  We need to 
balance two things:

   o getting finished
   o making sure we don't ignore signs of serious problems

My interpretation of where we are at is:

   o We have a datatyping model for RDF

   o There are some subtlties of specific schema datatypes that we have not 
yet worked out but they do not call the general model into question.  As 
Patrick, says whether xsd:float is a subclass of xsd:double is a matter for 
the xsd guys to define.

   o I'm sympathetic to us having worked this stuff out in some detail for 
xsd datatypes to check that there are no hidden gotchas, but I think that 
may take some time and need us to work with xml schema folks.

   o I suggest:

   - we use non controversial examples of schema datatypes in our test 
cases - stay away from the stuff that tests understanding of schema 
datatypes more than rdf

   - we propose through the coordination group the writing of note jointly 
by folks from rdfcore and xml schema datatypes which defines the RDF schema 
for XML Schema datatypes.

   - that we write that note after last call and before proposed rec

Comments?

Brian



