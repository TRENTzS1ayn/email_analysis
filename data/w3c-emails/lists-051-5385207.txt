docno="lists-051-5385207"
received="Thu Nov 28 10:30:42 2002"
isoreceived="20021128153042"
sent="Thu, 28 Nov 2002 15:32:10 +0000"
isosent="20021128153210"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: parseType=&quot;Literal&quot;"
id="5.1.0.14.0.20021128152214.0320cc50@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="BHEGLCKMOHGLGNOKPGHDIEMCCAAA.jjc&#64;hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org


At 18:40 22/11/2002 +0100, Jeremy Carroll wrote:

[...]

>[2] Implementations MAY use the exclusive canonicalization with or without
>comments [XC14N] of the literal text l to find the lexical form.

I'm reading this a bit out of context, but 'find' seems like a strange word.


>[3] Implementations MAY choose to ignore namespaces that are not visibly
>utilized (as defined by [XC14N]), XML comments, and aspects of an XML
>document that are not reflected in the canonical form (e.g. insignificant
>white space within element tags).
>
>[4] Implementations MAY choose to not ignore such aspects of the literal
>text l.
>
>[5] Implementations are NOT REQUIRED to perform canonicalization
>when creating an RDF graph corresponding to an RDF/XML document.
>
>[6] Implementations MUST preserve in the lexical form of the XML Literal the
>information found in the exclusive canonicalization without comments [XC14N]
>of the literal text l.
>
>[7] See the [RDF-CONCEPTS] section on XML Literals for further information.
>]]
>
>[1] Constrains implementations a bit.
>
>[2] - [5] are all just (normative) suggestions, to leave implementors with
>ideas about how to do this. They are normative in that an implementor will
>know that they have satisfied their obligations if they perform [2].
>
>[6] is the only paragraph that defines the minimum requirement, but I think
>it could be deleted. This would then, technically, allow an RDF
>implementation to always return an empty string.

That seems like a bad thing.


>Given that this is (too?) long; it could be reduced to just say [1] [2] [5]
>[7].
>
>The problem is that the phrasing is inevitably daunting, [6] requires some
>study of an obscure recommendation to understand it.

Maybe we could just try to say it more gently.

This specification allows an implementation some freedom to choose exactly 
what string it will use as the lexical form of an XML Literal.  Whatever 
string an implementation uses , its canonicalization (without comments, as 
defined in ...) must be the same as the same canonicalization of the 
literal text l.  A minimal implementation is to use l without change.

Brian



