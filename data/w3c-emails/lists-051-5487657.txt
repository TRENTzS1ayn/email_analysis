docno="lists-051-5487657"
received="Fri Nov 29 10:42:14 2002"
isoreceived="20021129154214"
sent="Fri, 29 Nov 2002 10:59:20 -0500"
isosent="20021129155920"
name="Frank Manola"
email="fmanola@mitre.org"
subject="Re: Quick review of RDF primer"
id="3DE78ED8.2020108@mitre.org"
charset="us-ascii"
inreplyto="5.1.0.14.2.20021128154034.00a2dc20&#64;127.0.0.1"
expires="-1"


To: Graham Klyne<GK@ninebynine.org>
CC: RDF core WG<w3c-rdfcore-wg@w3.org>


Graham--

Thanks;  helpful comments.  Some remarks below.

--Frank

Graham Klyne wrote:

> RDF Primer
> W3C Working Draft 11 November 2002
> This version: http://www.w3.org/TR/2002/WD-rdf-primer-20021111/
> 
> 
> I think this is looking very good.  I haven't done a detailed read 
> through:  I started looking for overlaps with RDF Concepts.  Those 
> overlaps that I noticed (e.g. URIs, RDF graph model, structured 
> information) had such different forms of presentation that I think they 
> really stand separately as extended explanations, with very little real 
> overlap.
> 
> [RDF graph model:  cross-ref from concepts?  Likewise simple facts -> 
> structured data?]


Yes;  I have these cross-reference/terminology issues on my TODO list.


> 
> Buried in section 3.2 (syntax) is an important discussion of anyone 
> being able to add RDF assertions about any resource.  Maybe this should 
> be more prominent?


I'll see what I can do.


> 
> Section 4:  built-in *types* should be *classes*??


I'll have to think about this.  I've been reluctant to use "classes" 
until they've been introduced in the Schema section (I can use "type" 
because they are referenced with rdf:type), and they aren't really 
considered as "classes" unless the app processing them understands the 
schema vocabulary are they?


> 
> Section 4.3.1:  maybe needs to split into two sections;  one to deal 
> with breaking up n-ary relations, and another to introduce rdf:value?


Section 2.4 also deals with breaking up n-ary relations.  Hmm....


> 
> General comment, not specifically Primer:  the description of rdf:value 
> is fine, but how does it relate to a normative specification?  What can 
> we say formally about rdf:value?   What formal semantics 
> (interpretation) allows us to make inferences like:
> 
>    my:cat rdf:type ex:DomesticCat .
>    my:cat ex:weight _:x .
>    _:x rdf:value "15" .
>    _:x ex:unit ex:Kilogram
> 
> =>
> 
>    my:cat rdf:type ex:Obese .
> 
> but NOT:
> 
>    my:cat rdf:type ex:DomesticCat .
>    my:cat ex:weight _:x .
>    _:x rdf:value "15" .
>    _:x ex:unit ex:Pound
> 
> =>
> 
>    my:cat rdf:type ex:Obese .
> 
> ?
> 
> My point here is if we are to encourage such usage of rdf:value, then 
> there ought to be some normative description to back up such usage.


This makes sense.  On the other hand, this isn't really being described 
in the Primer because we're *encouraging* using it.  It's more a 
question of "it's there in the spec, so we ought to describe what it's 
there for, since it's a question that naturally going to come up."


> 
> 
> Section 4.3.2, given the links to XML schema datatypes we now have, and 
> the subtleties (i.e. non-obviousness from a typical programmers' PoV) of 
> the alternative approach of using rdf:type for true/false values, and 
> the distinction of meanings viewed from an open-world perspective, I 
> wonder if this section really belongs here?


This section is now gone (cf my msg of 11/26)


> 
> Section 5, para 2:  (RDF schema) mechanisms to *describe* rather than 
> *specify*?


Yes;  I'm in the process of another rewrite of that section.


> 
> Section 5.1, para 2, typo: "different kins of moFor"
> 
> Is it worth noting, in passing, that it is not necessary to define a 
> schema to use new vocab, even if it's recommended practice to do so for 
> the purposes of documentation and consistency checking?


Good point.  I was going to make this point about datatypes anyway, and 
it's better that it be made generally.


> 
> 5.3:  very good!
> 
> 5.5: "specifying that two different classes, defined in separate 
> schemas, actually represent the same concept."  Or have the same 
> members?  (I think this is a subtle difference between the RDF view of a 
> class and the DAML/Description Logics view.)


Hmm...


> 
> 
> 6. Examples.  I've only skimmed these, so I may be missing something.  I 
> think it would be useful to have an example that shows some simple 
> inference in action.  I have come to the view that it is the ability to 
> have standard tools do inference -- even very simple inference, and the 
> ease of doing so, that sets RDF apart from other network data formats 
> like XML.  I'm thinking of maybe something of DanC's work relating to 
> travel schedules might work.  A simple example I like is DanC's tools to 
> create graphs from arbitrary RDF:  at heart, a simple cwm inference rule 
> defines the nodes to be graphed.


Well, maybe.  But someone else would have to write this up.


> 
> 
> Section 8:  does it make sense for a non-normative document to have 
> normative references?
> 


Don't know.  What are the semantics of "normative references" in these 
specs?


--Frank 


-- 
Frank Manola                   The MITRE Corporation
202 Burlington Road, MS A345   Bedford, MA 01730-1420
mailto:fmanola@mitre.org       voice: 781-271-8147   FAX: 781-271-875



