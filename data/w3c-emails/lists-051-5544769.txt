docno="lists-051-5544769"
received="Sat Nov 30 23:53:57 2002"
isoreceived="20021201045357"
sent="Sat, 30 Nov 2002 21:57:20 -0600"
isosent="20021201035720"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: More on XSD in RDF"
id="p05111b0aba0cefd4dcf4@[10.0.100.247]"
charset="us-ascii"
inreplyto="Pine.GSO.4.44.0211260953190.7263-100000&#64;mail.ilrt.bris.ac.uk"
expires="-1"


To: Jan Grant<Jan.Grant@bristol.ac.uk>
Cc:w3c-rdfcore-wg@w3.org


>On Tue, 26 Nov 2002, Patrick Stickler wrote:
>
>>     xsd:decimal rdfs:subClassOf xsd:float .
>
>This isn't true, because 0.1 does NOT occur in the xsd:float value
>space. (it's 2^-1 . 5^-1)
>
>>     xsd:float rdfs:subClassOf xsd:decimal .
>
>This is true if floats and decimal value spaces are just sets of
>numbers, as Jeremy described.

In mathematics, there is no such thing as a 'float'. The term was 
invented for use in programming, and refers to a mode of 
*representation*, not to a kind of number. So to just blandly assume 
that it is obvious that the sets of 'floats' and 'decimals' are 
supposed to be subsets of the positive rationals, is being very 
casual with what might well be a rather delicate distinction, seems 
to me. Many systems and even quite a few textbooks take it as obvious 
that floats and integers, for example, are *disjoint* sets of 
entities; SpecWare, the leading program-property proving logic, 
assumes strong typing in which for example the real number zero and 
the integer zero are considered to be distinct numbers. Some set 
theoretic FOM formalizations make distinctions like this, and 
category theory would also treat them as distinct entities (in 
different categories, with morphisms between them.) In all of these 
cases the subClassOf relationship above would be firmly rejected. I 
honestly have no idea what XML schema thinks the relationship between 
floats and decimals is, even after reading the specs. You can 
understand phrases like 'set of numbers' in more than one way, 
depending on what you think 'numbers' are. So I think we should be 
careful, is all, not to jump the gun over issues like this. The 
answers are NOT obvious from the published specs. At the very least, 
we should refer such questions to a suitable authority. I really 
don't think that we should be saying anything that depends on an 
*interpretation* of the XSD spec. Instead, we should try to be very 
clear what information we expect a datatype spec to give an RDF 
engine, and what RDF takes it to mean, and then we should let the 
authors of the XML Schema spec tell us what that information actually 
is for the XSD class of datastructures. If that requires them to do 
some more work, then fine, but let them do that work, not us for 
them. We might very well get it wrong, and in any case we don't have 
either the time or the authority to do it for them.

Pat

>
>
>--
>jan grant, ILRT, University of Bristol. http://www.ilrt.bris.ac.uk/
>Tel +44(0)117 9287088 Fax +44 (0)117 9287112 http://ioctl.org/jan/
>"My army boots contain everything not in them." - Russell's pair o' Docs.


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



