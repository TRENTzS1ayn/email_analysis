docno="lists-051-5965806"
received="Fri Oct 11 09:25:33 2002"
isoreceived="20021011132533"
sent="11 Oct 2002 08:25:58 -0500"
isosent="20021011132558"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: An implementation of proposal F"
id="1034342758.27708.19.camel@dirk"
inreplyto="5.1.0.14.0.20021010175407.020c26b8&#64;0-mail-1.hpl.hp.com"
expires="-1"

To: Brian McBride<bwm@hplb.hpl.hp.com>, Janne Saarela<janne.saarela@profium.com>
Cc: rdf core<w3c-rdfcore-wg@w3.org>,www-rdf-comments@w3.org



[I hope crossposting isn't too awkward in this case...]

On Thu, 2002-10-10 at 11:55, Brian McBride wrote:
> 
> Folks should take a look at:
> 
>    http://lists.w3.org/Archives/Public/www-rdf-comments/2002OctDec/0004.html
> 
> where our old friend Janee Saarela notes that his company's rdf 
> implementation implements proposal F.

Janne, I wonder if you've really implemented F...

I see this much:

========
1. RDF schemas are used to validate incoming native RDF instance data

2. RDF schemas are used to enforce correct entry of RDF metadata
in a Web based interface.
========

But that much can be done with B (rdfs:format) as well.

The question is: how does your implementation handle the case
where datatype information isn't available at parse time?

Suppose you read in just this much:

   <rdf:Description rdf:about="Jenny">
     <foo:age>10</foo:age>
   </rdf:Description>
   <rdf:Description rdf:about="Johnny">
     <foo:age>10</foo:age>
   </rdf:Description>

I presume your implementation has some way of asking...

values = store.getTriplesMatching('...Jenny',
'...age', wildcard)

yes? In this case, I'd expect one value. Then, we
ask...

results = store.getTriplesMatching('...Johnny', '...age',
values[0])

and the critical question is: how many results does your
implementation return? If it implements F, it must
return 0, since there isn't enough information to
determine that the values of the two triples are
the same.

If it returns 1 result, it's tidy, and it's actually
implementing something closer to B or C.


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



