docno="lists-051-6344752"
received="Mon Oct 14 16:53:28 2002"
isoreceived="20021014205328"
sent="14 Oct 2002 15:54:01 -0500"
isosent="20021014205401"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: So now we have tidy literals..."
id="1034628841.26925.151.camel@dirk"
inreplyto="5.1.0.14.2.20021014214845.00a581b0&#64;127.0.0.1"
expires="-1"

To: Graham Klyne<Graham.Klyne@MIMEsweeper.com>
Cc: Brian McBride<bwm@hplb.hpl.hp.com>, RDF core WG<w3c-rdfcore-wg@w3.org>



On Mon, 2002-10-14 at 15:55, Graham Klyne wrote:
> Confused or no, I think we're approximately in accord.

I don't think so...

>  I have a slight 
> concern about "infoset" popping up in the abstract syntax, but if you mean 
> something for which an infoset could be constructed I guess that's about 
> the same.
> 
> The words I was proposing were:
> [[
> An untyped literal is either a string literal or an XML literal, either of 
> which consists of a sequence of Unicode characters and a language 
> code.

no, there's no language code in the literal value of...

<title>abc</title>

>  See section 3.2 for details.
> ]]
> (noting that typed literals are dealt with in a separate, nearby section).
> 
> This isn't meant to be a complete definition -- hence ref section 3.2.
> 
> Personally, I'd say the xsd:string and untyped cases are different (i.e. no 
> corresponding entailment).  One reason is that (I understand) an xsd:string 
> value doesn't have a language.

Nor does a plain (1.a) string.

> #g
> --
> 
> At 09:34 AM 10/14/02 -0500, Dan Connolly wrote:
> > > >> From past discussion, I'm expecting that the answer will be that a
> > > >> literal denotes a composite value consisting of a Uniocode string, a
> > > >> language code and an XML flag, or something of that kind.  That would
> > > >> tally with the current abstract syntax description [1].
> > > >
> > > >Right, though DanC has been suggesting we consider that we two types of
> > > >literals, each a pair of the literal and the string, one is a bare 
> > literal
> > > >and the other is an xml literal.
> > >
> > > Yes... I think I came closer to that in the tentative text, which you did
> > > not quote.  But mainly, I wanted to make sure we're all facing the same
> > > direction now ;-)
> >
> >I'm confused by the above.
> >
> >It seems to me that the class of Literals is a sort of union:
> >
> >         1.a strings, resulting from
> >                 <title>abc</title>
> >         where no xml:lang dominates the <title> propElt
> >
> >         1.b lang-strings, resulting from
> >                 <title xml:lang="en">abc</title>
> >
> >         2.a XML infoset thingies, resulting from
> >                 <title rdf:parseType="Literal">some <em>very</em> good
> >                         stuff</title>
> >         [some text earlier in a thread said that this was a
> >         unicode string; I wouldn't say that; it can be serialized as
> >         a unicode string, as we do in n-triples. But that doesn't
> >         make it a string]
> >
> >         2.b XML infoset thingies, with lang, resulting from
> >                 <title xml:lang="en"
> >                 rdf:parseType="Literal">some <em>very</em> good
> >                         stuff</title>
> >
> >         3.a datatype values, resulting from
> >                 <date rdf:datatype="&xsd;date">2000-10-12</date>
> >         These consist of an absolute URI reference
> >         and a unicode string.
> >
> >I dunno if we have 3.b lang-datatype-values. I hope not.
> >
> >Nor do I know if datatype values of type &xsd;string are
> >identical to normal 1.a strings. It seems best, for users,
> >if they are, but it's sort of an ugly special case.
> >
> >Test case:
> >
> >         <rdf:Description rdf:about="#something">
> >           <p1>abc</p1>
> >           <p2 rdf:datatype="&xsd;string">abc</p2>
> >         </rdf:Description>
> >
> >entails?
> >
> >         <rdf:Description rdf:about="#something">
> >           <p1 rdf:nodeID="X" />
> >           <p2 rdf:nodeID="X" />
> >         </rdf:Description>
> 
> -------------------
> Graham Klyne
> <GK@NineByNine.org>
-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



