docno="lists-051-6694309"
received="Wed Oct 16 07:33:41 2002"
isoreceived="20021016113341"
sent="Wed, 16 Oct 2002 12:33:29 +0100"
isosent="20021016113329"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: rdf:datatype v xsi:type"
id="3DAD4E89.6040507@hpl.hp.com"
charset="us-ascii"
inreplyto="3DAD4C59.8050408&#64;mitre.org"
expires="-1"


To: Frank Manola<fmanola@mitre.org>
CC: Jeremy Carroll<jjc@hplb.hpl.hp.com>, Graham Klyne<Graham.Klyne@mimesweeper.com>,w3c-rdfcore-wg@w3.org


Summary: 'out of scope' too strong - but I would prioritize XSD.
Summary2: I support xsi:type

Jeremy:
>>
>> I don't think there are any killers here.
>> In particularly I disagree with Patrick when he raises non-XSD types - 
>> simply out of scope as far as I am concerned.
> 

Frank:

> I guess I don't understand this "out of scope" comment.  You may not 
> care about referring to non-XSD types (I do), but considering them was 
>  certainly "in scope" as far as making the "rdf:datatype" decision was 
> concerned.  If you'd like to revisit the "what datatypes we're prepared 
> to reference" question, 


No, you're right I wasn't trying to revisit any decisions here; it's more 
which is the tail and which is the dog.

I believe that Patrick already has implementations that use non-XSD types.
I certainly don't want to (maliciously) make those not compliant with RDF; 
but they are 'non-standard' in the sense that the overall datatype 
quadruple is one of Patrick's creation (not a standard's doc) using methods 
that do not appear in a standard's doc.

I think the central usage that should motivate the main thrust of our 
design decisions should be a standard one, and the only standard we have 
considered (in any depth) is xsd. If we don't like the datatypes on offer 
there we should be working with the XML schema group to improve them.

XSD provides a standard collection of built-in types and a standard way of 
creating user-derived types. It isn't perfect; and won't do everything.

Hence providing a mechanism that permits Patrick's non XSD types seems OK 
to me, as long as it does not distort the XSD usage. My opinion is that the 
use of rdf:datatype as opposed to xsi:type will be (rightly) perceived by 
the XML world as (another) outbreak of NIH from the RDF world. If we were 
determined, we could choose to make xsi:type work - possibly we should, 
possibly we should defer to the tag who own the qname/uri issue.

Making xsi:type work for RDF might create some problems when using RDF 
datatypes which are not XSD datatypes; for me it is more important to align 
with the needs of the (large) XML world, rather than those of the (small) 
RDF world.

Jeremy



