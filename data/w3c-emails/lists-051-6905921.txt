docno="lists-051-6905921"
received="Thu Oct 17 13:06:10 2002"
isoreceived="20021017170610"
sent="Thu, 17 Oct 2002 10:06:05 -0700"
isosent="20021017170605"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: details of rdf:datatype?"
id="p05111b04b9d4996a2724@[192.168.0.7]"
charset="us-ascii"
inreplyto="00f101c27385$9f7980e0$544516ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org


>[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, 
>patrick.stickler@nokia.com]
>
>
>----- Original Message -----
>From: "ext Dan Connolly" <connolly@w3.org>
>To: <w3c-rdfcore-wg@w3.org>
>Sent: 14 October, 2002 15:40
>Subject: details of rdf:datatype?
>
>
>>
>>  I'm puzzling thru the details of the [6Sep] decision.
>>
>>  It seems to specify that this holds:
>>
>>  :jenny :age <...#integer>"10".
>>  =>
>>  :jenny :age <...#decimal>"10".
>>
>
>At the RDF MT level, it does not hold.

? Well, we can write the MT either way. The most obvious way to write 
it (where the dtype-lexicalform pair denotes the value) would make 
this entailment correct.

>
>>  since those two literals denote the same value.

Exactly.

>  >
>>  and this one holds:
>>
>>  :jenny :age <...#decimal>"010".
>>  =>
>>  :jenny :age <...#decimal>"10".
>
>No. This one doesn't hold either.
>
>The only case where the RDF MT can say that two typed
>literal nodes denote the same value is when both the
>datatype URI and the lexical form are identical, and
>in that case, they are merged into the same tidy node.

That is one way to go, but its not required by the MT.  (It would be 
slightly awkward to write the MT so it doesn't support these 'value' 
entailments, but it could be done either way.)

>
>If either the datatype URI and/or the lexical form is
>not identitical, then the RDF MT cannot determine
>equality. They might be equal, they might not.
>
>Thus, the two entailments above do not hold at the
>RDF level because RDF itself does not know which
>values are denoted,

Ah, that is an interesting point. This idea, that RDF doesn't know 
what the values are, could be used as a guiding principle for 
designing the MT. If we said that the MT wasn't *allowed* to refer to 
the actual values, then indeed we would be obliged to give 'no' 
answers to the above entailments. But its not required by the MT, but 
rather could be imposed on the MT.

>only that there is consistent
>denotation for any particular pairing of datatype
>and lexical form.

In effect, the MT (if it conformed to this restriction) would treat 
the pair <dtype, lexical form> as *being* the denotation (the 
semantic 'value'. )

>
>>  If somebody would please confirm, I'd appreciate it.
>>
>>  But I don't see how this works for an open-ended set
>>  of datatypes. Does this hold?
>>
>>  :jenny :age <http://example/vocab#type1>"hello".
>>  =>
>>  :jenny :age <http://example/vocab#type2>"hello".
>>
>>  If type1 and type2 map hello to the same value, it does hold.
>
>It does not hold insofar as the RDF MT is concerned. An
>application which understands the datatypes in question
>may conclude that they denote the same value, but that
>depends on the datatypes themselves, and that knowledge
>is outside the scope of the RDF MT.

Its not outside the scope of the MT, but we might decide that it is 
outside the scope of RDF. Its up to us.

>
>>  Likewise, if type1 maps hello1 and hello2 to the
>>  same value, then the following holds:
>>
>>  :jenny :age <http://example/vocab#type1>"hello1".
>>  =>
>>  :jenny :age <http://example/vocab#type1>"hello2".
>>
>>  It seems to me that a parser should raise an exception
>>  if it sees rdf:datatype used with a value it doesn't
>>  recognize. Recognizing datatypes is a parse-time thing;
>
>Actually, it's a run-time thing since no RDF parser is
>expected to understand any particular datatypes,

Well, we might say that an RDF inference engine is required to 
understand XML datatypes, for example, at least to the point of being 
able to detect identity.

>  and
>generic triples stores may serve statements to a broad
>range of applications, some of which may grok more
>datatypes than others.

True. So, maybe some RDF engines will be incomplete if they are 
unable to grok all the datatypes involved.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903   home
40 South Alcaniz St.(850)202 4416   office
Pensacola              (850)202 4440   fax
FL 32501           (850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes



