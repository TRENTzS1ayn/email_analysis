docno="lists-051-7123023"
received="Mon Oct 21 04:12:24 2002"
isoreceived="20021021081224"
sent="Mon, 21 Oct 2002 09:13:38 +0100"
isosent="20021021081338"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Typed literals: current status"
id="5.1.0.14.0.20021021090914.0307b050@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="200210182202.23978.jjc&#64;hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-rdfcore-wg@w3.org


At 22:02 18/10/2002 +0200, Jeremy Carroll wrote:

[...]


>Given the deployed code using parseType="Literal" and the I18N use cases such
>as ruby and bidi its a non-starter to try and remove this functionality. But
>if we had two new types rdf:ClassicLiteral, rdf:ClassicXMLLiteral then we
>could move all the complexity of XML Literals into a datatype definition.e

There have been several suggestions along these lines.  I would expect such 
a proposal to get support if it can be done quickly.


>This would address TBLs issue here in that RDF as an abstraction, would be
>free from the XML base.
>
>Disadvantages are:
>+ defining a datatype outside XSD, not a team play

Not really.  Used xsd datatypes where you can.  Protecting our legacy is 
only reasonable.  Unifying existing M&S specs with xsd datatypes is a team 
play.

[...]

>I guess if there was some pull from the WG in this direction, I would be
>inclined to add a note to the doc:
>
>[[
>Note: the WG is still considering whether to unify the treatment of literals.
>This would involve regarding all literals as typed literals, and would use
>two new datattypes (rdf:ClassicLiteral rdf:ClassicXMLLiteral) to correspond
>to the old String Literal and XML Literal respectively.
>]]]

We don't have time for that.  Make the call.

Brian



