docno="lists-051-8231363"
received="Fri Oct 25 04:43:33 2002"
isoreceived="20021025084333"
sent="Fri, 25 Oct 2002 09:46:03 +0100"
isosent="20021025084603"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: Semantics was RE: weekly call for agenda items"
id="5.1.0.14.0.20021025093734.0d7b0260@0-mail-1.hpl.hp.com"
charset="us-ascii"
inreplyto="OFF0936EA2.13DAE15D-ONC1256C5D.002E2F79-C1256C5D.002E8A16&#64; agfa.be"
expires="-1"


To:"Jos De_Roo"<jos.deroo.jd@belgium.agfa.com>
Cc:"Jeremy Carroll"<jjc@hplb.hpl.hp.com>,"pat hayes"<phayes@ai.uwf.edu>,w3c-rdfcore-wg@w3.org,w3c-rdfcore-wg-request@w3.org


At 10:28 25/10/2002 +0200, Jos De_Roo wrote:

>I guess it's the one from
>http://lists.w3.org/Archives/Public/www-webont-wg/2002Sep/0308.html
>
>1:[[
>
>eg:prop rdfs:range eg:A .
>eg:A rdfs:subClassOf eg:B .
>
>entails
>
>eg:prop rdfs:range eg:B .
>]]

Which looks clearly false to me, so I'd better ask to find out what I'm 
missing.

Consider:

   IEXT(A) = {a}
   IEXT(B) = {a, b}

Then if I say that prop can take any member of A as its value, it can also 
take any member of B, because B happens to be a superclass of B.

Wierd!

Isn't it to stop that sort of thing happening that we switched domain and 
range to conjunctive semantics, i.e. so that an inferencing engine finding 
a range constraint would know that all values must be a member of that 
class; there is no way to add members to the range?

Brian



