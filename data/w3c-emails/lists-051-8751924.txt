docno="lists-051-8751924"
received="Mon Oct 28 05:53:12 2002"
isoreceived="20021028105312"
sent="Mon, 28 Oct 2002 12:50:16 +0300"
isosent="20021028095016"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="RE: rdfs:StringLiteral vs xsd:string"
id="N6ZrTlZxPDcX.nCqVhQvs@mail.nokia.com"
charset="ISO-8859-1"
inreplyto="rdfs:StringLiteral vs xsd:string"
expires="-1"

To:w3c-rdfcore-wg@w3.org,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>, Patr ick Stickler<patrick.stickler@nokia.com>





_____________Original message ____________
Subject:RE: rdfs:StringLiteral vs xsd:string
Sender:ext Jeremy Carroll <jjc@hplb.hpl.hp.com>
Date:Mon, 28 Oct 2002 12:36:49 +0300


> It occured to me that one likely (and I think accurate) reason why
> rdfs:StringLiteral and xsd:string are different is because the former
> only defines equality of values, not ordered comparisons as does 
> the latter. Just a thought...

order over natural lang strings is awkward cf Charmod.

Which is why they are separate. rdfs:StringLiteral's are
nat. lang strings but xsd:string's are not. Right?

Patrick 

Jeremy



