docno="lists-051-9205556"
received="Tue Oct 29 07:36:18 2002"
isoreceived="20021029123618"
sent="Tue, 29 Oct 2002 14:33:15 +0300"
isosent="20021029113315"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="RE: rdfs:StringLiteral"
id="YzqQcTrjVHVH.S2fV2dyS@mail.nokia.com"
charset="ISO-8859-1"
inreplyto="rdfs:StringLiteral"
expires="-1"

To:"pat hayes"<phayes@ai.uwf.edu>,"Brian McBride"<bwm@hplb.hpl.hp.com>,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>, Patrick Stickler<patrick.stickler@nokia.com>
Cc:w3c-rdfcore-wg@w3.org




All datatypes cannot be subtypes of xsd:string. That would mean
that all value spaces of all datatypes are proper subsets of the
value space of xsd:string -- i.e. all values are strings...

Patrick

_____________Original message ____________
Subject:RE: rdfs:StringLiteral
Sender:ext Jeremy Carroll <jjc@hplb.hpl.hp.com>
Date:Tue, 29 Oct 2002 14:14:50 +0300



Should all datatypes be subtype of rdfs:Literal, or maybe just xsd:string
(and its subtypes)?

Should we still have rdfs:StringLiteral defined in vocabulary as the class
to which untyped literals belong? (Not a datatype)

Jeremy


> -----Original Message-----
> From: Brian McBride [mailto:bwm@hplb.hpl.hp.com]
> Sent: 29 October 2002 09:54
> To: pat hayes; Jeremy Carroll
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: rdfs:StringLiteral
>
>
> What does the class hierarchy look like?
>
> rdfs:XMLLiteral has to be a subclass of rdf:Literal for backward
> compatibility, right?
>
> rdfs:XMLLiteral also must be a member of rdfs:Datatype.
>
> My antenae are tingling, but I can't immediately see anything
> wrong with that.
>
> Brian
>
>
> At 17:37 28/10/2002 -0600, pat hayes wrote:
>
> >>Pat:
> >>>  undatatyped literals were indeed un-datatyped
> >>
> >>fine. I'll roll back,
> >
> >You are such a REASONABLE bloke, Jeremy :-)
> >
> >>
> >>>  rdfs:XMLLiteral is a masterpiece
> >>
> >>and Pat skilfully chooses an option that wasn't really meant to
> be on the
> >>table - I am afraid that will be the most work for me, but it
> shouldn't be
> >>too bad - but your flattery compensates for the additional work!
> >>
> >>Thinking about it, it probably will read OK, possibly better,
> than either of
> >>the alternatives I had given.
> >>
> >>I'll be down to one built-in datatype, which is clearly then a
> special case.
> >>It (alone) needs a lang tag in its interpretation, so that too
> is a special
> >>and unique case that then is non-genralizable (which will please brian).
> >>
> >>Having two sorts of literal typed and untyped is manageable
> (more manageable
> >>than three). And getting the XML stuff out of the abstract
> syntax into the
> >>datatyping will hopefully please Tim and Massimo.
> >
> >And, by the way, it also fits very nicely into the Lbase proposal, which
> >also includes XML structures as a special case (because there
> was no other
> >way to get them into it.)
> >
> >Pat
> >
> >
> >--
> >---------------------------------------------------------------------
> >IHMC                                    (850)434 8903   home
> >40 South Alcaniz St.                    (850)202 4416   office
> >Pensacola                               (850)202 4440   fax
> >FL 32501                                        (850)291 0667    cell
> >phayes@ai.uwf.edu                 http://www.coginst.uwf.edu/~phayes
>
>



