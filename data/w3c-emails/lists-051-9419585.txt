docno="lists-051-9419585"
received="Wed Oct 30 03:29:16 2002"
isoreceived="20021030082916"
sent="Wed, 30 Oct 2002 10:26:18 +0300"
isosent="20021030072618"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="RE: rdfs:StringLiteral"
id="b2cWl0WDjMWv.WcFfkRtL@mail.nokia.com"
charset="ISO-8859-1"
inreplyto="rdfs:StringLiteral"
expires="-1"

To:w3c-rdfcore-wg@w3.org,"ext Jeremy Carroll"<jjc@hpl.hp.com>, Patrick S tickler<patrick.stickler@nokia.com>





_____________Original message ____________
Subject:RE: rdfs:StringLiteral
Sender:ext Jeremy Carroll <jjc@hpl.hp.com>
Date:Wed, 30 Oct 2002 10:01:05 +0300



thanks Patrick I misspoke.

Should all datatypes be subclass of rdfs:Literal; 

No. As that would mean that their value spaces
are proper subsets of rdfs:Literal and e.g. an integer
value is not itself a literal.

In reality, the rdfs:Literal class is IMO a bug as it reflects
a syntactic quality of an object, not it's semantics. 

But since in the case of inlined literals the semantics
directly reflects the syntactic representation of the
literal, we could simply shorten rdfs:StringLiteral to
rdfs:Literal which I think would reflect the original
intent regarding its meaning -- that all inlined literals
are members of rdfs:Literal, and are self denoting.

Then, rdfs:Literal is an rdfs:Datatype, but has no 
other datatype subclasses. Thus, rdfs:Literal,
rdsf:XMLLiteral, and xsd:string are all unrelated
datatypes.

Patrick



