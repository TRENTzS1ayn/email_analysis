docno="lists-052-10101190"
received="Tue Jan 14 04:20:14 2003"
isoreceived="20030114092014"
sent="Tue, 14 Jan 2003 11:20:07 +0200"
isosent="20030114092007"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Critical literal semantics issue"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBAC2@trebe006.europe.nokia.com"
charset="utf-8"
inreplyto="Critical literal semantics issue"
expires="-1"


To:<jjc@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>
Cc:<pfps@research.bell-labs.com>




> -----Original Message-----
> From: ext Jeremy Carroll [mailto:jjc@hplb.hpl.hp.com]
> Sent: 13 January, 2003 19:26
> To: w3c-rdfcore-wg@w3.org
> Cc: pfps@research.bell-labs.com
> Subject: Critical literal semantics issue
> 
> 
> 
> 
> WebOnt asked me to ensure that RDF Core was sufficiently aware of the 
> importance webont attach to the issue raised by the OWL 
> Semantics' editor 
> concerning the semantics of literals in RDF.
> 
> The details can be found at:
> http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMa
> r/0014.html
> 
> further discussion, including how this impacts OWL semantics is at:
> 
> http://lists.w3.org/Archives/Public/www-webont-wg/2003Jan/0093.html
> http://lists.w3.org/Archives/Public/www-webont-wg/2003Jan/0171.html
> 
> My understanding is that this is a critical issue that should 
> be fixed 
> before we move semantics to last call.
> 
> The best outcome for webont would be that Pat and Peter discuss the 
> problem, agree a resolution, and this is reflected in the RDF 
> Semantics Last Call ...

Fair enough, so long as it is consistent with the concensus of 
the RDF WG as to what the MT is supposed to say about literals.

> A minimal outcome is that RDF Core replies to Peter's 
> comments soon to 
> indicate what will, or will not, be done in the RDF Semantics 
> Last Call, so 
> that Peter can take whatever action is necessary in the OWL 
> Semantics Last 
> Call.
> 
> While my personal understanding of this issue is limited, it 
> does seem to 
> me to be in the showstopper category that merits attention 
> despite the 
> near-freeze on our documents.

Some comments to Peter's posting:
 
> It appears to me that RDF(S) literals are now broken.  (I'm working from
> the LCC candidate at http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-200030117/) 
> 
> The only semantic constraints that mention rdfs:Literal are
> 1/ I(rdfs:Literal) is a member of IC
> 2/ rdfs:comment rdfs:range rdfs:Literal.
> 2/ rdfs:label rdfs:range rdfs:Literal.
> 
> All this means is that rdfs:Literal denotes a class, but it says nothing
> about the class extension of rdfs:Literal.  

The class extension of rdfs:Literal is understood to be a subset of LV
(see further comments below), i.e. all resources which are denoted by a 
plain (untyped) literal or a valid typed literal are in LV and hence
instances of rdfs:Literal.

If a syntactically well formed typed literal is semantically invalid, 
i.e. if the lexical form does not belong to the lexical space of the 
datatype, then whatever that invalid typed literal denotes is not a
member of LV and hence not an instance of rdfs:Literal. 

It seems to me that this is where the problem lies. See below.

> In particular, the denotation
> of untyped literals do not have to be instances of rdfs:Literal, 

Yes they do, and are. It may be the MT doc is insufficiently clear
on this point.

The things denoted by plain literals (in fact, themselves) are
members of LV and hence instances of rdfs:Literal. This is (or
rather, should be) provided for by the MT, given the fixed
interpretation of all plain literals.

Perhaps section 3.3.1 could be expanded to help clarify that, while
we cannot explicitly say in the MT that ICEXT(I(rdfs:Literal)) is 
in fact a subset of LV, it is nonetheless understood to be.

> nor need
> there be *any* instances of rdfs:Literal at all.  

Need there be?

> Further, comments and
> labels are not necessarily literals (typed or untyped).

If denoted by untyped literals, or by semantically valid typed
literals, they are.

But I see your point about semantically invalid typed literals.
In that case, they are not.

> This makes several parts of RDFS and datatyped interpretations problematic,
> because rdfs:Literal is not (no longer?) the class of all literals nor is
> rdfs:Literal necessarily (any longer?) a datatype.
> 
> 1/ The denotation of "arthur"^^xsd:decimal is not necessarily not in
>    ICEXT(I(rdfs:Literal)) in a datatype interpretation that makes
>    xsd:decimal be the XML Schema decimal datatype.

Perhaps the solution would be to include such "ghost" resources denoted
by semantically invalid typed literals, whatever they might be, in LV 
rather than exclude them. Then, a typed literal may denote a
semantically invalid value, but it would still be in LV and hence
an instance of rdfs:Literal.

Pat?

> 2/ The following RDFS closure rule is not valid:
> 
>    rdfs11: xxx rdf:type rdfs:Datatype . -> xxx rdfs:subClassOf rdfs:Literal .

This rule is still valid, since any semantically valid typed literal
denotes a member of LV and hence an instance of rdfs:Literal.

If one has a semantically invalid but well formed typed literal, the
resource it denotes is not a member of the class extension of the datatype.

The value space of the datatype is garunteed to be a subset of LV, and if
a typed literal is semantically invalid, it falls outside the scope of
that datatype and hence also outside the scope of the closure rule in
question.

Cheers,

Patrick

--
Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, patrick.stickler@nokia.com
 



