docno="lists-052-10761074"
received="Thu Jan 16 12:21:22 2003"
isoreceived="20030116172122"
sent="Thu, 16 Jan 2003 15:04:49 +0000"
isosent="20030116150449"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="Re: Review of Concepts Doc"
id="5.1.0.14.2.20030116150338.00a1d1b0@127.0.0.1"
charset="us-ascii"
inreplyto="000201c2b005$c77d06e0$adc115ac&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>


Patrick, thanks for this ... I've added it to my last-call issue list.

#g
--

At 03:09 PM 12/30/02 +0200, Patrick Stickler wrote:

>Here are my comments regarding the Concepts Doc. Issues
>that I consider critical, to be addressed before actual last call
>are prefixed with asterisks. Other comments may be considered
>non-critical, but the editors are certainly welcome to address them
>before last call, time permitting.
>
>1. Introduction
>
>It may be better to say "RDF Base" rather than "RDF Core" in
>order to (a) sync with the terminology/organization of the
>XML specs and (b) avoid confusion with "RDF Core WG".
>
>1.1 Structure of this Document
>
>The text
>
>"RDF's abstract syntax is a graph, which can be serialized using XML (but 
>which is quite distinct from XML's tree-based infoset
>[XML-INFOSET]). The abstract syntax captures the fundamental structure of 
>RDF, independently of any concrete syntax used for
>serialization."
>
>should probably be moved to just before section 1.1 as it has nothing to 
>do with
>the structure of the document though is certainly introductory material.
>
>2. Motivations and Goals
>2.1 Motivation
>
>*** The statement "RDF provides a world-wide lingua franca for these 
>processes."
>*** is incorrect. RDF is not itself a language for system interaction. It is
>*** a meta-language for defining languages for system interaction. Just as 
>XML is
>*** a meta-language for defining document models and is not itself a 
>document model.
>*** This should be rephrased as something like "RDF provides a common 
>foundation for
>*** the reliable interchange of information between such processes."
>
>2.2 Design Goals
>
>Given the ambiguity of the word "syntax", it might be better if
>the bullet "XML-based syntax" would rather be "XML-based serialization
>syntax" (as it is in section 3).
>
>2.2.1 A Simple Data Model
>2.2.2 Formal Semantics and Inference
>2.2.3 Extensible URI-based Vocabulary
>2.2.4 XML-based Syntax
>2.2.5 Use XML Schema Datatypes
>2.2.6 Anyone Can Make Simple Assertions About Anything
>2.2.7 Arbitrary Expression of Simple Facts
>2.2.8 A Basis for Binding Agreements
>3. RDF Concepts
>3.1 Graph Data Model
>3.2 URI-based Vocabulary and Node Identification
>3.3 Datatypes (Normative)
>
>*** No mention is made in this section of datatypes defined in
>*** frameworks other than XML Schema. It needs to be clearly
>*** stated that while RDF Datatyping adopts foundational concepts
>*** from XML Schema Datatyping, and thus XML Schema datatypes are
>*** (generally) usable with RDF, RDF Datatyping is compatable with
>*** any datatype conforming to the defined characteristics of
>*** rdfs:Datatype and need not be defined (or even definable) by
>*** XML Schema. Since this seems to be the most substantive normative
>*** definition of RDF Datatyping, this should be made clear here.
>
>3.4 Literals
>
>The first sentence
>
>"Literals are used to identify values such as numbers and dates by means
>of a lexical representation."
>
>seems only to apply to typed literals, given the language of 'values'
>and 'lexical representation'. Perhaps a more generic statement is in
>order, such as
>
>"Literals are used to identify resources such as strings, numbers,
>dates and XML encoded content which in RDF have a non-URIRef textual
>representation."
>
>-
>
>Additional clarification of "plain literals ... are self denoting"
>would be useful, to bring home the fact that the plain literal
>"25" cannot be interpreted to mean twenty-five.
>
>3.5 Representation of Simple Facts
>
>The text
>
>"Some simple facts indicate a relationship between two objects.
>Such a fact may be represented as an RDF triple in which the predicate names
>the relationship, and the subject and object denote the two objects."
>
>is confusing in its use of 'object' with two different senses. Better to
>use 'resource' for the first sense. E.g.
>
>"Some simple facts indicate a relationship between two resources. Such a fact
>may be represented as an RDF triple in which the predicate
>names the relationship, and the subject and object denote the two resources."
>
>Since everything in RDF is a resource, including literals, this is clearer.
>
>-
>
>The first real example of the abstract graph syntax seems to be a
>rather complex one, bringing in relational tables and class typing
>immediately into the mix.
>
>It might be good to first have a more basic example earlier on, without
>blank nodes, rdf:type, etc.
>
>3.6 Entailment
>3.7 RDF Core URI Vocabulary and Namespaces
>
>The statement "RDF uses URIs to identify resources and properties." should 
>probably be
>shortened to just "RDF uses URIs to identify properties." since (a) this 
>section is
>about vocabulary (properties) and resources may also be identified by 
>literals.
>
>4. Meaning of RDF (Normative)
>4.1 Asserted and Non-asserted Forms
>4.2 Social Meaning
>
>Change "...as an assertion in any other format." to
>"... as an assertion in any other form."
>
>4.3 Authoritative Definition of Terms
>4.4 Interaction Between Social and Formal Meaning
>4.5 Example (Informative)
>5. XML Content within an RDF Graph (Normative)
>
>I am uncomfortable with the <rdf-wrapper> convention, but as
>it seems to work, so be it. Let's see what the community has
>to say...
>
>*** However, it seems odd that we would not be fully compatable
>*** with XML 1.1 if at all possible. I.e., should we not say that
>*** all XMLLiteral values should be normalized?
>
>6. Abstract Syntax (Normative)
>6.1 RDF Triples
>6.2 RDF Graph
>6.3 Graph Equality
>6.4 RDF URI References
>6.5 RDF Literals
>6.5.1 Literal Equality
>6.5.2 The Value Corresponding to a Typed Literal
>
>In the Note:, you could make it clear why it is more useful
>to compare values rather than lexical forms -- that a given
>value may have more than one lexical representation and therefore
>a comparison of forms may return F whereas a comparison of
>values may return T.
>
>6.6 Blank Nodes
>7. Fragment Identifiers
>8. Acknowledgments
>
>*** Sergey is mentioned in the first paragraph but not the second. I'm
>*** presuming this was an unintentional omission.
>
>9. References
>9.1 Normative References
>9.2 Informational References
>
>[Patrick Stickler, Nokia/Finland, (+358 40) 801 9690, 
>patrick.stickler@nokia.com]

-------------------
Graham Klyne
<GK@NineByNine.org>



