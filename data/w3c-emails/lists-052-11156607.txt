docno="lists-052-11156607"
received="Sun Jan 19 04:10:57 2003"
isoreceived="20030119091057"
sent="Sun, 19 Jan 2003 11:10:53 +0200"
isosent="20030119091053"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: problems with RDF datatyping"
id="A03E60B17132A84F9B4BB5EEDE57957B160C9F@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="problems with RDF datatyping"
expires="-1"


To:<Jan.Grant@bristol.ac.uk>
Cc:<bwm@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>,<phayes@ai.uwf.edu>




> -----Original Message-----
> From: ext Jan Grant [mailto:Jan.Grant@bristol.ac.uk]
> Sent: 17 January, 2003 16:29
> To: Stickler Patrick (NMP/Tampere)
> Cc: bwm; w3c-rdfcore-wg; phayes
> Subject: RE: problems with RDF datatyping
> 
> 
> On Fri, 17 Jan 2003 Patrick.Stickler@nokia.com wrote:
> 
> > I would consider the inclusion of the URIref as part of the
> > datatype definition a mistake.
> 
> If that's the case (and your position seems reasonable) then 
> I don't see
> that we have any choice but to include the language tag 
> contents in the
> L2V mapping for all datatypes, OR to drop it from XMLLiteral.

I would drop it from XMLLiteral, as I've proposed many times
before. The fact that the RDF/XML serialization can "infect"
what is essentially an XML fragment taken in isolation (and
not relevant or part of an RDF/XML serialization -- i.e. not
constituting any RDF statements -- is IMO a bug in the original
M&S and should be fixed.

If one has an XML literal and one wishes to specify xml:lang
for that literal, then fine, do so, *in* the literal. 

Having the RDF/XML context "leak" into the XML literal makes
RDF far more cumbersome to use for modular content management.

> The reason why PFPS was suggesting that the URIRef be made a 
> part of the
> datatype definition was (as far as I can tell) so that we can ensure
> XMLLiteral gets a separate treatment. I would much rather 
> remove this -
> clearly awkward - special case and give a regular treatment to all
> datatypes.

I fully agree. A third option is to back up a bit and not treat
XML literals as typed literals and not define any datatype
rdfs:XMLLiteral. I.e., back to when we had three kinds of 
literals: plain, typed, and XML. 

But I'd rather see the semantic significance of xml:lang for
XML literals removed as it is for all typed literals.

Question: are there *any* existing implementations which rely
on xml:lang defined at higher scope in the RDF/XML serialization
for the proper interpretattion/processing of XML literals? 

Patrick



