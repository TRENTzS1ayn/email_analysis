docno="lists-052-11386161"
received="Fri Jan 24 12:03:08 2003"
isoreceived="20030124170308"
sent="Tue, 21 Jan 2003 12:27:13 -0700"
isosent="20030121192713"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: problems with RDF datatyping"
id="p05111b0cba534b68c869@[10.0.100.247]"
charset="iso-8859-1"
inreplyto="20030121.094805.05459064.pfps&#64;research.bell-labs.com"
expires="-1"


To:"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>
Cc:bwm@hplb.hpl.hp.com,w3c-rdfcore-wg@w3.org


>From: pat hayes <phayes@ai.uwf.edu>
>Subject: Re: Fwd: problems with RDF datatyping
>Date: Sun, 19 Jan 2003 23:12:00 -0800
>
>>  >From PFPS:
>>  >
>>  >>In trying to make the OWL semantics correspond to the RDF semantics I came
>>  >>up with the following problems in RDF datatyping:
>>  >>
>>  >>1/ A datatype is an element of IR, because the RDF MT says that 
>>datatypes are
>>  >>denoted by URI references.  However, rdf:XMLLiteral is said to 
>>be a datatype
>>  >>  but rdf:XMLLiteral is a URI reference.  Something is wrong here.
>>
>>  Nothing is wrong here. "rdf:XMLLiteral" is a uriref, and it denotes
>>  rdf:XMLLiteral, a resource which is a datatype. Peter seems to be
>>  making a use/mention confusion. But in any case, IR *can* contain
>>  urirefs, eg one can quote a uriref as a string.
>
>As far as I can see, "rdf:XMLLiteral" is a string, rdf:XMLLiteral is a
>QName

No, a Qname is a NAME. "rdf:XMLLiteral" is a Qname. When used, the 
name refers to its denotation.

>that is used in RDF as if it was a URI reference, and
>I(rdf:XMLLiteral), for I some RDF interpretation, is a resource.
>It thus appears to me that it is the RDF Semantics document that is making
>a use/mention confusion

Well, one of us is confused. By my lights, you are making the 
use/mention mistake. I try to adhere to a consistent convention 
whereby I use names - pieces of text - to refer to the things they 
denote, and quote them when I wish to refer to the names themselves.

From the above, you seem to have a 3-level distinction in mind 
(string/Qname/referent), rather then the usual 2-level one. (??) Or 
do you mean that the string denotes the Qname which in turn denotes 
the referent? So there are two levels of denotation involved?


>  when it refers to rdf:XMLLiteral as a datatype.
>Of course, there is nothing against a resource being a URI reference, but I
>don't think that that is the intent.

Right. The intent is that the use of the name refers to the 
denotation, not to the name.

>
>>  >>2/ XSD-interpretations include in their datatypes the XML Schema datatypes
>>  >>that are problematic when removed from XML documents or have other
>>  >>problems.
>>
>>  They might, but that is not our problem or our business. We are
>>  required by charter to integrate RDF with the XSD datatypes.
>
>Well, perhaps, but I would think that the RDF Core WG would like to have it
>be that XSD-interpretations actually make sense.

Indeed. We would also like world peace. BUt its not our job to 
achieve it, in either case.

>
>>  >>  XSD-interpretations also include, for example, the datatype
>>  >>named FOO, which is not defined as an XML datatype.
>>
>>  I fail to follow this point. It seems to be false, insofar as I can
>>  understand it.
>
>>From Section 3.4,
>
>      In any XSD-interpretation, any uriref of the form
>      http://www.w3.org/2001/XMLSchema#sss will be understood to denote the
>      datatype named sss in [XML-SCHEMA2].
>
>What then does http://www.w3.org/2001/XMLSchema#FOO denote?

Nothing in particular, since there is no datatype named foo in 
[XML-SCHEMA2]. What is your point?

>
>>  >>3/ A datatype has to be more than is specified in the RDF MT.  Except for
>>  >>XSD-interpretations, which explicitly mention the URI-reference 
>>to datatype
>>  >>relationship, there is no way of tying the intended URI-reference for a
>>  >>datatype to that datatype.
>>
>>  We do not specify it, but that is not the same as saying that it
>>  cannot be done. Seems to me that it can be done simply by fiat: I can
>>  publish a document which simply asserts that the uriref
>>  http://www.coginst.uwf.edu/~phayes/myexample#octalinteger denotes the
>>  datatype consisting of the integers with octal lexical forms. Viola.
>
>Sure you can do this, but is this sort of thing part of Datatyped
>interpretations?

The result might be, if someone were to use my datatype.

>  If so, what is the form of the documents that make the
>connection?

God alone knows. None of my business.

>If not, then how can I, in datatyped RDF, make the connection
>between http://www.coginst.uwf.edu/~phayes/myexample#octalinteger and
>the datatype that turns octal numeral strings into integers in the usual
>way?  I don't see any way, in RDF, of so doing.

You can't do that 'in RDF', whatever that couldl possibly mean. RDF 
*assumes* that it has been done, somehow. If an RDF engine can't find 
the relevant datatype information from the uriref, it can post an 
error.

>
>>  I anticipate that agreed methods of formally specifying the
>>  denotations of Urirefs will emerge. But that is not our business.
>
>Well then, how can I, in datatyped RDF, arrange it so that
>
>"10"^^http://www.coginst.uwf.edu/~phayes/myexample#octalinteger
>
>denotes the integer usually written as 8?   If I can't, then what use is
>RDF datatyping?

It assumes some external method of declaring dataypes. The section on 
datatype inferences makes it pretty clear what information is 
actually required.

>
>>  >>  For example, if I have D containing a datatype
>>  >>for integers and a datatype for strings, there is no way to require that a
>>  >>particular URI reference, say ex:int, denotes the integer datatype.
>>
>>  Who is to say whether or not there is no way to require a URIref to
>>  denote a datatype? The RDF MT does not specify how this is to be
>>  done, but there is no reason why it should. But it is not impossible
>>  for someone to specify this in any way they feel like doing. I do not
>>  think that this is, or should be, an issue we need to be concerned
>>  with: it is part of a much larger issue of attaching meanings to
>>  urirefs.
>
>Then what good is RDF datatyping?

It presumes some extrnal scheme for locating datatypes (datatyping 
inforamation, if you like) by usiung urirefs.  It does not provide a 
means to create such information or to attach it to a uriref; that is 
the business of the definer of the datatypes in question. RDF can use 
it, however, once it is defined.

>
>>  >>It probably makes more sense to say that a datatype is a four-tuple,
>>  >>consisting of a URI reference, a lexical space, a value space, and a
>>  >>lexical-to-value mapping.
>>
>>  We could do that, but since we say that they are triples and are
>>  denoted by urirefs, the two formulations seem to me to be essentially
>>  equivalent.
>
>Well the difference would be that in a D-interpretation with a datatype
><u,l,v,l2v>, the denotion of the URI reference u would be that datatype.

But that would make the interpretation mapping dependent on the 
interpretation. What we need is a situation where the denotation 
mappings for dattaypes are effectively fixed globally, but sources 
external to RDF have the ability to do the fixing. As far as RDF is 
concerned, a uriref indicating a recognized datatype is a proper 
name, not a logical constant.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola??????????????(850)202 4440   fax
FL 32501???????????(850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



