docno="lists-052-11452915"
received="Fri Jan 24 13:16:26 2003"
isoreceived="20030124181626"
sent="Fri, 24 Jan 2003 13:14:58 -0500 (EST)"
isosent="20030124181458"
name="Peter F. Patel-Schneider"
email="pfps@research.bell-labs.com"
subject="Re: problems with RDF datatyping"
id="20030124.131458.112368571.pfps@research.bell-labs.com"
charset="us-ascii"
inreplyto="p05111b0cba534b68c869&#64;[10.0.100.247]"
expires="-1"


To:phayes@ai.uwf.edu
Cc:bwm@hplb.hpl.hp.com,w3c-rdfcore-wg@w3.org


From: pat hayes <phayes@ai.uwf.edu>
Subject: Re: problems with RDF datatyping
Date: Tue, 21 Jan 2003 12:27:13 -0700

[...]

> >>  >>2/ XSD-interpretations include in their datatypes the XML Schema datatypes
> >>  >>that are problematic when removed from XML documents or have other
> >>  >>problems.
> >>
> >>  They might, but that is not our problem or our business. We are
> >>  required by charter to integrate RDF with the XSD datatypes.
> >
> >Well, perhaps, but I would think that the RDF Core WG would like to have it
> >be that XSD-interpretations actually make sense.
> 
> Indeed. We would also like world peace. BUt its not our job to 
> achieve it, in either case.

No, but I do think that it is the job of the RDF Core WG to not include XML
Schema datatypes that do not work in the RDF datatyping context.  This can
easily be done by excluding the XML Schema datatypes that don't work for
RDF.  Jeremy Carroll even went to the trouble of investigating which ones
to cause trouble.

> >>  >>  XSD-interpretations also include, for example, the datatype
> >>  >>named FOO, which is not defined as an XML datatype.
> >>
> >>  I fail to follow this point. It seems to be false, insofar as I can
> >>  understand it.
> >
> >>From Section 3.4,
> >
> >      In any XSD-interpretation, any uriref of the form
> >      http://www.w3.org/2001/XMLSchema#sss will be understood to denote the
> >      datatype named sss in [XML-SCHEMA2].
> >
> >What then does http://www.w3.org/2001/XMLSchema#FOO denote?
> 
> Nothing in particular, since there is no datatype named foo in 
> [XML-SCHEMA2]. What is your point?

My point is that the RDF Schema document claims directly that 
http://www.w3.org/2001/XMLSchema#sss denotes the datatype named sss in XML
Schema datatypes, for any sss that makes
http://www.w3.org/2001/XMLSchema#sss be a URI reference.


[...]

> >Then what good is RDF datatyping?
> 
> It presumes some extrnal scheme for locating datatypes (datatyping 
> inforamation, if you like) by usiung urirefs.  It does not provide a 
> means to create such information or to attach it to a uriref; that is 
> the business of the definer of the datatypes in question. RDF can use 
> it, however, once it is defined.

I still don't see where RDF gets this information.  I see how I can specify
a datatype, in the form of a mapping plus lexical and value spaces, but I
can't see anywhere where I can state which URI reference is supposed to
denote my datatype.

> >>  >>It probably makes more sense to say that a datatype is a four-tuple,
> >>  >>consisting of a URI reference, a lexical space, a value space, and a
> >>  >>lexical-to-value mapping.
> >>
> >>  We could do that, but since we say that they are triples and are
> >>  denoted by urirefs, the two formulations seem to me to be essentially
> >>  equivalent.
> >
> >Well the difference would be that in a D-interpretation with a datatype
> ><u,l,v,l2v>, the denotion of the URI reference u would be that datatype.
> 
> But that would make the interpretation mapping dependent on the 
> interpretation. What we need is a situation where the denotation 
> mappings for dattaypes are effectively fixed globally, but sources 
> external to RDF have the ability to do the fixing. As far as RDF is 
> concerned, a uriref indicating a recognized datatype is a proper 
> name, not a logical constant.

I still remain completely confused as to how this is supposed to work.  

peter



