docno="lists-052-1243990"
received="Tue Apr 22 08:06:35 2003"
isoreceived="20030422120635"
sent="Tue, 22 Apr 2003 14:06:49 +0300"
isosent="20030422110649"
name="Jeremy Carroll"
email="jjc@hpl.hp.com"
subject="xmlsch-01 Typed Literal Structure proposal to close"
id="200304221406.49550.jjc@hpl.hp.com"
charset="us-ascii"
expires="-1"

To:w3c-rdfcore-wg@w3.org



Summary: reject.

The comment is
[[ 
   The introduction of pairs consisting of a lexical form and a type (or,
    strictly speaking, a lexical form and a type label) seems at first
    glance to complicate the RDF model somewhat. We have had the
    impression that in other parts of RDF, typing is handled by adding
    further arcs and nodes. If the type of a resource is identified by
    having an arc labeled rdf:type from it to (the URI of) its (RDF) type,
    and if the type of an arc is similarly identified by an arc, then
    surely a reason ought to be given for shifting to a different method
    for typing literal strings. It seems like a dramatic shift in the
    infrastructure of RDF, from "everything is a node, an arc, or a
    literal value" to "everything is a node, an arc, or a typed literal
    value". Perhaps not quite so dramatic, after all. But the question of
    design consistency remains: why not "everything is a typed node, a
    typed arc, or a typed literal"?
]]

The propose response is to do nothing.

Here is a draft reply:

[[
We have considered your comment and rejected it.
This aspect of the new design has been the one that
we found the most difficult, and we are not surprised that
aspects of it seem overly complicated.
To answer your question as to why we use a different
means to type literals than that used to type nodes and
properties:
- RDF nodes and properties are typically untryped.
  Type information can be added monotonically,
  potentially by a further document elsewhere on the
  Web, or by an inference rule.
- untyped literals, however, are character strings, or
  pairs of character strings and language tags.
  Adding type information, such as maling a speciifc
  literal node into an xsd:int, is not monotonic, but
  a destructive operation, in that previously true
  information, and valid inferences may cease to be true.
Because of this difference in the behaviour of
literal nodes from other nodes in response to addiitonal
type information, the WG decided to provide a different
mechanism, operating syntactically, rather than the rdf:type
mechanism which operates semantically.

We remind you that the group was far from unanimous
in its discussions concerning literal typing, with Mike Dean's
formal objection being indicative of the minority position:
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0173.html

]]

Jeremy

 



