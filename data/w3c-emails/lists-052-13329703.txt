docno="lists-052-13329703"
received="Mon Jul  7 04:32:17 2003"
isoreceived="20030707083217"
sent="Mon, 7 Jul 2003 11:32:12 +0300"
isosent="20030707083212"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: [Fwd: Re: Summary of strings, markup, and language tagging in RDF  (resend)]"
id="A03E60B17132A84F9B4BB5EEDE57957B0263015B@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="[Fwd: Re: Summary of strings, markup, and language tagging in RDF  (resend)]"
expires="-1"


To:<bwm@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>,<duerst@w3.org>



> 3. For the common use case, where applications embed a 
> literal in an XML
> document, it is preferable to distinguish,in the graph, between plain
> and XML literals, so that e.g. different escaping conventions can be
> applied.

By this, do you mean, that the reason why we have special
treatment of XML literals at all, in addition to fully generic
support for plain and typed literals, is simply because RDF
uses XML for its serialization. If RDF used some other serialization
as standard, such as N3, then the need for the special datatype
would not exist (insofar as the need for the RDF specs to define
it)?

If so, I agree.

Thus, XML literals are not singled out because XML is by itself
more special than some other lexicalization, but because it
simply intersects with RDF's own serialization and it's very
useful to keep track of that in a standardized manner.

--

I couldn't think of anything else you didn't cover.

Patrick



