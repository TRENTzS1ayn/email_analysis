docno="lists-052-13370565"
received="Mon Jul  7 07:36:51 2003"
isoreceived="20030707113651"
sent="Mon, 07 Jul 2003 10:54:51 +0100"
isosent="20030707095451"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="Re: XML observation"
id="5.1.0.14.2.20030707103427.0345b810@127.0.0.1"
charset="us-ascii"
inreplyto="p06001241bb2a6581c1d3&#64;[10.0.100.7]"
expires="-1"


To: pat hayes<phayes@ihmc.us>,w3c-rdfcore-wg@w3.org, Martin Duerst<duerst@w3.org>


Well said, Pat!

I've been mulling how to say something very similar to this myself, without 
appearing to be destructive.  Roughly, we seem to have two viewpoints:
- XML is text-with-markup
- XML is a generic presentation framework for arbitrary data
and these two goals are not always compatible.

I think we are seeing a fault line in RDF design caused by the tensions of 
trying to make XML serve different masters.  (I am wondering if there isn't 
an issue here that shouldn't be raised with TAG, to clarify the role of XML 
in web architecture, per the options above.)

For a design as (hopefully) fundamental as RDF, I don't think it's a (long 
term) viable option to just paper over the cracks.  I have always been a 
strong proponent of Pat's "view G" of graphs:  RDF as just another flavour 
of XML doesn't hang together in my view.

There a couple of other data I'd like to introduce:  in his pre-last-call 
review of the RDF concepts document, Tim Berners-Lee expressed some concern 
about the "distinguished" nature of XML in RDF [1].  That was a comment 
which was never really given a lot of attention that I was aware of, and is 
one which I personally agree.  Similar sentiments have been expressed in an 
exchange between Patrick and Peter Patel-Schneider [2].

#g
--

[1]  TimBL:
[[
I have to say I have a problem with RDF being tied to always have to have 
an XML literal as a base type. This breaks layering - and level breaking 
features should I believe be left for another layer. You should not require 
any RDF machine to have to include an XML infoset system. The choice of XML 
syntax was supposed to be an enginering but arbitrary choice.
]]
-- http://www.w3.org/2002/07/29-rdfcadm-tbl.html#xtocid103643
referenced by:
http://lists.w3.org/Archives/Public/www-rdf-comments/2002JulSep/0092.html


[2] PatrickS/PFPS:
[[
 > (As an aside, I personally consider the exceptional nature of XML literals
 > to be a mistake, for lots of reasons, but that's the way they are defined
 > so the "fix" at this stage is to simply make the specs clear about it).

Agreed.
]]
-- http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0091.html


At 19:01 03/07/03 -0500, pat hayes wrote:

>Thinking about the issue we have been discussing, it occurs to me that XML 
>has been holding a tiger by the tail and is now getting bitten, and this 
>debate is a symptom of that.
>
>XML started life as a generalized text-markup system, and for that purpose 
>it is wonderful. But it has been touted and used as something much more 
>that just text markup: it has been announced as a kind of universal 
>solvent for transmitting any kind of structure, a universal 
>general-purpose structure-description system. Unfortunately, several of 
>its features (most notably the restriction of attribute values to strings, 
>cf http://www.waterlang.org/doc/trouble_with_xml.htm) are clearly serious 
>design faults when seen from this more general point of view.  But more to 
>the present point, the use of a *language* to describe structures requires 
>us to clearly distinguish the text of the description from the thing - the 
>structure - being described. Making a distinction like this is so 
>second-nature to programmers, mathematicians, logicians and linguists - in 
>fact anyone who uses technical languages professionally - that it takes a 
>while in dealing with XML to realize that XML conspicuously fails to make 
>it, and that in fact that the entire design of XML is predicated on 
>denying it. XML documents describe structure by *displaying* it, in 
>effect: they *are* the structure they describe. And of course this is 
>entirely appropriate for a markup language: it is the very essence of 
>markup that the markup *labels* the text it is the markup 'of'.
>
>To put the same point another way, markup is inherently indexical: what it 
>means depends on where it is. If you write <title>The Way Things 
>Were</title>, what the enclosing markup says, in effect, is: 'THIS 
>enclosed text is a title'.  The same piece of markup surrounding some 
>other piece of text will implicitly refer to that other piece: its meaning 
>- what it is talking *about* - depends on where in the text the markup 
>occurs. It's location in the text is part of its meaning; and when it is 
>used with no text to mark up, simply as a structural description language, 
>this indexicality is retained in the *descriptive* conventions of the 
>resulting language: so XML as a structural description convention has a 
>built-in confusion between describing structure and displaying or 
>exhibiting it, a built-in ambiguity between being a description and being 
>a kind of diagram or map, a built-in tendency to confuse use and mention.
>
>This is clearly seen in the discussion we have been having. Martin (view 
>X) sees a piece of RDF/XML as being a kind of XML text, and the resulting 
>document as *displaying* the RDF structure in the XML. He expects that 
>RDF/XML will satisfy the textual scoping mechanisms which arise naturally 
>in any kind of layout display: in particular, attributes should apply to 
>all of the items which are in the *textual* scope of the XML 
>element.  That is the XML 'structure as textual display' assumption, of 
>course.  Patrick (view G) sees a structural description language rendered 
>(in a fairly ad-hoc way) into XML syntax; the actual XML document is of 
>relatively little importance: on this view, it is the structure described 
>by the document that defines the significant, meaningful notions of scope 
>and context.  And the RDF/XML conventions clearly isolate the XML 'inside' 
>a parseType-attributed element from the XML surrounding the element, so it 
>is 'obvious' that the lang tags that may be relevant to the outer context 
>do not apply to the inner one.
>
>In my earlier metaphor, Parick here is the teeth of the tiger. Once XML is 
>sold, and bought, as a general-purpose structural description language, 
>and is used as such by professionals who are familiar with the conventions 
>of such languages, the XML scoping conventions which are inherited from 
>its role as a markup language are no longer appropriate: in fact, they are 
>*ludicrous*: they are like a children's toy in an engineering 
>shop.  Expecting professional programmers to conform to descriptive 
>conventions defined by text-markup languages is whistling at the 
>wind.  Programmers have been using more sophisticated scoping conventions 
>for over half a century; not because they didn't know better, but because 
>they *needed* to.  You can't display recursion using indexical markup, for 
>a start.
>
>The XML publicists have bitten off more than they know how to chew. If the 
>result is XML that disobeys the XML 'conventions' and is unreadable by 
>non-programmers, should anyone be surprised?
>
>Pat Hayes
>--
>---------------------------------------------------------------------
>IHMC    (850)434 8903 or (650)494 3973   home
>40 South Alcaniz St.    (850)202 4416   office
>Pensacola                       (850)202 4440   fax
>FL 32501                        (850)291 0667    cell
>phayes@ihmc.us       http://www.ihmc.us/users/phayes

-------------------
Graham Klyne
<GK@NineByNine.org>
PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E



