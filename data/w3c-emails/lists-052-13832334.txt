docno="lists-052-13832334"
received="Thu Jul 10 18:55:07 2003"
isoreceived="20030710225507"
sent="Thu, 10 Jul 2003 18:55:01 -0400"
isosent="20030710225501"
name="Martin Duerst"
email="duerst@w3.org"
subject="Last call comments that made RDF Core remove lang from XML   Literals"
id="4.2.0.58.J.20030710154808.04676fd0@localhost"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org,w3c-i18n-ig@w3.org


I have not yet gotten a satisfactory picture of why actually RDF
Core dropped language information from XML Literals post last call.
I would really like to better understand why this happened.

I asked Brian today about where to find the relevant material,
and he pointed me to
http://www.w3.org/2001/sw/RDFCore/20030123-issues/#semantics,
in particular to the issues with 'XML Literal' in their title.
I have carefully scanned these, and all the other last call
issues on this document, extracted all I thought *might*
be potentially relevant below, and commented on them.

The overall conclusion is that none of them requests to remove
language information from XML literals, neither directly, or,
as far as I could infer, indirectly. So I'm still at a loss
why this was done.

I also haven't found any direct evidence for what Brian wrote at:
http://lists.w3.org/Archives/Member/w3c-i18n-ig/2003Jul/0054.html

2. RDFCore agrees with feedback that it received, that
building an XML specific mechanism into its core model is architecturaly
inappropriate - it mixes things that should be independent.  Accepting
this implies that parseType="Literal" values must use one of the
existing mechanisms - i.e. either plain literals or typed literals, or a
new more general mechanism must be invented, e.g. a new triple
structure.  An XML specific mechanism is undesirable.

I'm sure I must be missing something, and I would apreciate
somebody to tell me what I'm missing.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-02
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0093.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

The translation into Lbase is incorrect in several places.  It
incorrectly adds single quotes to strings.  It ignores the language
tag for typed literals with type rdf:XMLLiteral.
 >>>>

That's about the language tag, but there was no request to ignore
language for XML Literals, just to fix the translation.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-03
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0092.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

The translation into Lbase is pointless.  There is no notion given in
the document that can be used to determine whether it is correct or
not.  For example, I expected to see a claim stating that
     G1 x-entails G2
iff
     TR(G1) plus the axioms for x entails TR(G2) in Lbase
without such a claim there is no notion of success for the
translation, and thus it is pointless.
 >>>>

This seems to be very general, not about XML Literals in particular.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-04
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0091.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

The closure rules for RDF are incomplete.  There are XML documents
without an enclosing language tag that have the same canonical form as
XML documents with and enclosing language tag.  This means that the
RDF entailment lemma is false.
 >>>>

This seems to suggest to fix the closure rules, not to remove
language information from XML literals (I guess the commenter
meant XML literals rather than XML documents).


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-06
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0089.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

The datatyping rules for XML Literals are incomplete.  For example,
malformed typed literals with type rdf:XMLLiteral are not excluded
from LV.
 >>>>

This is a request for fixing a problem that is general to XML Literals,
not specific to language information.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-07
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0088.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

The rules for typed literals are incomplete.  They do not give a
meaning for "a"@t^^dt:foo, for dt:foo a datatype and t a language tag.
 >>>>

This is about typed literals in general.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-08
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0087.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

I believe that there are errors in the treatment of typed literals in
the RDF model theory.  For example, let I be an interpretation where
rdf:XMLLiteral and ex:bar both denote the domain element.  However,
the typed literal "xx"^^ex:bar does not necessarily denote the same
thing as "xx"^^rdf:XMLLiteral because the rule for rdf:XMLLiteral uses
the URI reference directly, and not its denotation.
 >>>>

This is about XML Literals, but not as far as I can see about
language information.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-09
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0086.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

 >>>>
I believe that there is a missing part of datatypes in the RDF model
theory, and, moreover, that this missing part makes datatypes unusable
in RDF.  The missing part is a mechanism for tieing a URI reference to
a datatype.

For example, suppose that I want to have a datatype that takes octal
numerals to the appropriate integer.  According to Section 3.4, I
create a datatype whose lexical space is octal numerals, those value
space is the integers, and whose lexical-to-value mapping is the
appropriate one.  Suppose further that I only want this one datatype.
I then form the set containing only this datatype (and some other
domain element for XML Literals).  Let's call my datatype O and the
datatype for XML Literals X, so I need to form the set { O,X } .
 >>>>

This seems to mention XML Literals only because an RDF processor
has to know them, so the set of known datatypes always has to include
them.


http://www.w3.org/2001/sw/RDFCore/20030123-issues/#pfps-10
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0085.html
 >>>>
From: "Peter F. Patel-Schneider" <pfps@research.bell-labs.com>

I believe that untyped literals do not work correctly in the RDF model
theory. The semantic constraint on rdfs:Literal is, from Section 3.3

     ICEXT(I(rdfs:Literal)) is a subset of LV

However, the denotations of untyped literals are only required to be
in LV.   Therefore the denotation of "a" is not necessarily in
ICEXT(I(rdfs:Literal)).

This situation has observable consequences.  For example
         ex:foo ex:rel "a" .
does not RDFS-entail
         ex:foo ex:rel _:x .
         _:x rdf:type rdfs:Literal .

The situation is made even stranger in datatyped interpretations.  If
there is a datatype whose value spaces includes the string "a", then
entailment over this datatype has the above entailment.
 >>>>

This is about untyped (i.e. plain) Literals.


Regards,    Martin.



