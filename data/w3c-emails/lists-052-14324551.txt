docno="lists-052-14324551"
received="Mon Jul 14 18:19:29 2003"
isoreceived="20030714221929"
sent="Mon, 14 Jul 2003 17:43:09 -0400"
isosent="20030714214309"
name="Martin Duerst"
email="duerst@w3.org"
subject="Re: Related comment from XML Schema"
id="4.2.0.58.J.20030714172339.04857878@localhost"
charset="us-ascii"
inreplyto="006401c34793$a8b08090$810fa20a&#64;NOE.Nokia.com"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>,<w3c-rdfcore-wg@w3.org>
Cc:<w3c-i18n-ig@w3.org>,<msm@w3.org>


Hello Patrick,

At 13:03 03/07/11 +0300, Patrick Stickler wrote:

>Several members of the WG have tried to make the following
>point clear to you, yet you seem to keep missing it, insofar
>as your posts suggest, at least to me.
>
>The RDF Core WG has not "removed language information
>from XML literals", as if we don't care about the
>ability to associate language with XML encoded content,

Could you then please explain to me where the language
information goes if the XML literal is something like
"Hello <strong>World</strong>!" ? Where in the graph
(the G-view) is it, or, where in the graph would I put it?


>An XML literal within an RDF/XML serialization is NOT the
>same as e.g. a MathML fragment within an XHTML instance.

Well, there are clearly similarities, and there are clearly
differences.


>XML markup languages are free to express their own semantics,
>including what information embodied in a given infoset is relevant
>to the application for which the markup language was designed.

RDF can indeed do that, within the boundaries of M&S and
the needs of I18N and others.


>The XML specs specify what information is available, and
>specifies how that information is available in a consistent
>fashion, but they do not mandate what information must be
>used by a given application.

Yes. But in particular in I18N, as I already explained,
we want to have as much consistency as possible in the
machinery, because we have more than enough issues from
the user side where things are just not consistent at
all, but dominated by human culture and customs.


>If I have an XML DTD for a data serialization model that
>includes the definition
>
><!ELEMENT literal #ANY>
><!ATTLIST   literal  xml:lang FIXED ''>

If you want to do that in any of your actual RDF/XML data,
your are free to do it. However, this does not mean that
you have to force everybody else to do it.


>RDF/XML is a data serialization model. Period. Enf of story.
>
>It is not a textual content markup model.

RDF as such is definitely better explained as a data model than
as textual markup.
That's exactly why M&S included parseType="Literal". It wasn't
put in there for data-like XML blobs, because that was what
RDF was designed for, and the creators of RDF/XML in M&S tried
hard to make it easy for many different kinds of XML to be
interpreted as RDF (e.g. by adding default parseType="Resource"
attributes,...).
What is now called XML literals was put in there for textual stuff.
The example in M&S and the people who remember when it was done
(including me) can confirm that.


>XML fragments embedded in RDF/XML are encapsulated in
>that data serialization model, and as such, the semantics of
>XML that apply to XML fragments in textual markup models
>do not apply to XML fragments encapsulated in a data markup
>model.

So how do you explain that xml:lang applies to plain literals?


>You claim you understand the G-view, but you appear to
>believe that RDF/XML is *wrong* for taking that view. If you
>do in fact understand the G-view, then you would accept that
>contextual properties such as xml:lang should not apply to
>literals and that no only are the decisions made to date by
>the WG valid per the G-view but that there exist bugs in
>the legacy-inherited treatment of plain literals that conflict
>with that view.

If you want to take the G-view, then either it is appropriate
for plain literals and xml literals to have language information,
or it is not appropriate for either of them. This can be
discussed rather independent of RDF/XML.



>Either proposal allows folks who have no clue whatsoever about
>data encapsulation issues relating to XML serialization models to
>go along merrily doing the wrong thing, just as they did with M&S,
>but those of us who do know what we're doing, will do the right
>thing with typed literals, and try our best to deal with any scruffy
>graphs containing old-style M&S literals.

Can you give an example of what you call 'scruffy graph containing
old-style M&S literals'?

Regards,    Martin.



