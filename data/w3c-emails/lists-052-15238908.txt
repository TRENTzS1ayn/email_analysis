docno="lists-052-15238908"
received="Wed Jul 23 18:34:14 2003"
isoreceived="20030723223414"
sent="Wed, 23 Jul 2003 14:39:09 -0400"
isosent="20030723183909"
name="Martin Duerst"
email="duerst@w3.org"
subject="Re: first pass parseType=&quot;Literal&quot; text for primer"
id="4.2.0.58.J.20030723142451.052035c8@localhost"
charset="us-ascii"
inreplyto="5.1.0.14.2.20030722223657.025d5628&#64;127.0.0.1"
expires="-1"


To: Graham Klyne<gk@ninebynine.org>, rdf core<w3c-rdfcore-wg@w3.org>, i18n<w3c-i18n-ig@w3.org>


Hello Graham,

We still seem to be caught up in terminology.
I'll try again and go back to the text from Brian:

>This example illustrates that designers should take care when designing
>RDF data.  In cases where the value of a property may sometimes contain
>rich text and sometimes not, the designer should either use
>rdf:parseType="Literal" throughout, or design the application to handle
>both plain literals and rdf:XMLLiteral's.

What I was trying to say is that on the Web, asking people to use
a special way (rdf:parseType="Literal") throughout when they originally
have no motivation to do so and cannot anticipate what they or others
may need in the future is a bad idea, because it does not scale.

Many people designing 'RDF Applications' will start out with e.g.
<Title> being a plain literal. Later, they may discover that there
are cases where they would need markup. But with the current design,
they would have to go back and change all the <Title>s from plain
literals to XML Literals. The way RDF is supposed to work, this
will just not work out. So the needs for micro-markup, in particular
for internationalization, will very sadly just be ignored if we
don't change the design.


At 22:49 03/07/22 +0100, Graham Klyne wrote:

>At 15:05 22/07/03 -0400, Martin Duerst wrote:
>>Hello Graham,
>>
>>Sorry that I used the wrong word, maybe. Let me explain some
>>of the background for the language I have used.
>>
>>The key document that proposed serious internationalization for
>>the Web, written by Gavin Nicol, and still available at
>>http://www.mind-to-mind.com/library/papers/multilingual/multilingual-www.h 
>>tml,
>>used the concept of "The WWW As A Multilingual Application"
>>to explain why it was important to have an overall I18N model:
>>On the Web (many people these days say *in* the Web), there
>>is no guarantee that your data will stay with your application
>>and not go somewhere else.
>
>I took a look at that, and immediately come up against a problem:

I should have been more explicit, but you might have noticed:
The work on Web Internationalization is close to 10 years old.
I'm sure that most other documents written about the Web in
1994 look quite a bit outdated nowadays, even if they were
quite revolutionary when they were written. What stays, even
after that much time, is the very basic idea.


Regards,    Martin.




>[[
> From an end-user perspective, no matter where a link leads, the browser 
> will be able to cope intelligently with the data received. From a system 
> viewpoint, all clients and servers should be able to at least communicate.
>]]
>which implies (to me) that the only thing the web is supposed to do is 
>browsing.  To me, the web (and especially the semantic web) is about 
>browsing and much much more.
>
>The document then raises the need for multiple data formats for different 
>purposes, and goes on, as far as I can tell, to talk about no data format 
>other than HTML.
>
>As a discussion of web *browsing*, I'm not criticising this document, but 
>I do think there's more to the web.  (I also think that RDF is a 
>technology that has, or should have, uses *beyond* the web, but that's 
>probably not an argument to swing in this forum ;-)
>
>>As you have showed very well below, the word 'application'
>>is still used for smaller, identifiable pieces of software rather
>>than for the whole Web. However, the idea that any Web page should
>>be renderable on any browser, that pieces of XML data can move around
>>freely, and that any RDF data can move to other places (called applications
>>in general usage of the term) nevertheless is the central idea of
>>the Web (including of course the Semantic Web).
>
>In citing those quotes from the architecture document, I saw a clear 
>distinction between "agents" (which the architecture document also 
>mentions) which appear to be the "identifiable pieces of software", and 
>applications which I see as multiple cooperating software components 
>communicating across the Internet using Web architectural principles.
>
>>So while I may have used the wrong words, I think my point was a
>>very valid one, namely that any kind of attempt at trying to look
>>at RDF data too much in terms of single, independent 'applications',
>>and trying to use this to justify design, is against the very basic
>>idea of the Web.
>
>I think there's a false dichotomy here:  we're not talking about a "single 
>application", not is it multiple "independent applications", but a web of 
>networked applications that share concepts and ideas to the extent that 
>it's useful for them to do so.  In particular, RDF is not separate from 
>the rest of the web, nor is it just another part of "the Web application".
>
>#g
>--



