docno="lists-052-16150678"
received="Mon Jul 28 09:17:27 2003"
isoreceived="20030728131727"
sent="28 Jul 2003 14:16:43 +0100"
isosent="20030728131643"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: [Fwd: Jena semantic tests]"
id="1059398202.2139.47.camel@dhcp-91-3.hpl.hp.com"
inreplyto="1059150794.2424.910.camel&#64;dirk.dm93.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
Cc: rdf core<w3c-rdfcore-wg@w3.org>



On Fri, 2003-07-25 at 17:33, Dan Connolly wrote:

[...]

> > ** Failures - could fix:
> > NegativeEntailmentTest xmlsch-02/Manifest.rdf#whitespace-facet-2 - FAIL
> > NegativeEntailmentTest xmlsch-02/Manifest.rdf#whitespace-facet-1 - FAIL
> >   These test non-mutual entailment of a valid literal with an invalid 
> >   literal that differs only by whitespace. Unfortunately our XSD 
> >   handling library is happy with the whitespace and doesn't 
> >   treat " 3 " as an invalid int. 
> >   This could be fixed if that is indeed how XSD is supposed to work,
> >   though the current behaviour seems more useful in practice.
> 
> Would somebody please turn that into a question of clarification
> for the XML Schema folks?

I think we've had that in a comment from them.  They pointed out, as I
understand it, that whitespace processing occurs before the lexical form
is determined, thus "3" is a member of the lexical space of decimal, but
" 3 " is not.  

  <foo xsi:type="xsd:decimal"> 3 </foo>

is legal because the spaces are discarded as part of determining the
lexical form.

The RDFCore WG agreed that it required the exact lexical form when it
approved the xmlsch-02 test case.

I suggest this fits the be precise what you produce and forgiving in
what you consume model.  When generating RDF/XMl, make sure you don't
include the white space, to produce a correct document.  But when
processing incoming RDF/XML, you can be a bit more forgiving.

Brian



