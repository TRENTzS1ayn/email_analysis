docno="lists-052-16394374"
received="Mon Jul 28 19:43:57 2003"
isoreceived="20030728234357"
sent="Tue, 29 Jul 2003 00:35:16 +0100"
isosent="20030728233516"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="Re: first pass parseType=&quot;Literal&quot; text for primer"
id="5.1.0.14.2.20030729003337.01ea7768@127.0.0.1"
charset="us-ascii"
inreplyto="4.2.0.58.J.20030728151746.02542e38&#64;localhost"
expires="-1"


To: Martin Duerst<duerst@w3.org>, rdf core<w3c-rdfcore-wg@w3.org>, i18n<w3c-i18n-ig@w3.org>


At 17:20 28/07/03 -0400, Martin Duerst wrote:
>>(So, yes, 1 and 2 are two different things.  I believe this to be a 
>>necessary distinction...)
>
>Their representations are different. But why do their denotations
>have to be different?

Because, ultimately, you need to be able to distinguish somehow between '<' 
for markup and '<' uninterpreted.  (This is predicated on the current 
design that plain literals are self-denoting strings -- the only way I can 
see to make all this work is that the abstract syntax representation 
maintains a distinction between character data and markup data.)

>>Within this scheme, I assert there is *no way* to require that XML 
>>interpretation of these characters be applied without marking the 
>>distinction, which is what the XML datatype provides.
>
>But note that we are not speaking about changing the interpretation
>of something by changing from plain literal to XML literal, we are
>speaking about two different representations ((1) and (2)) that
>could/should denote the same string of characters.

I thought about that, but within the current scheme couldn't see any way to 
make it work, for the reason noted above.

I don't think I've anything more constructive to add at this stage, and 
should back off.  Maybe someone else can see a way past the block that I 
perceive?

#g


-------------------
Graham Klyne
<GK@NineByNine.org>
PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E



