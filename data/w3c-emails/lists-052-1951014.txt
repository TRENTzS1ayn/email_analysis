docno="lists-052-1951014"
received="Sat Apr 26 13:59:38 2003"
isoreceived="20030426175938"
sent="Sat, 26 Apr 2003 12:59:31 -0500"
isosent="20030426175931"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: proposed closure of vass-02 / property instances"
id="p0521060bbad0692d745c@[10.0.100.12]"
charset="iso-8859-1"
inreplyto="20030425141917.GG12807&#64;tux.w3.org"
expires="-1"


To: Dan Brickley<danbri@w3.org>
Cc:w3c-rdfcore-wg@w3.org


>http://www.w3.org/2001/sw/RDFCore/20030123-issues/#vass-02
>raised:
>http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0561.html
>
>original:
>http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0282.html
>
>[[
>Instantiation of properties
>
>  Furthermore, although the RDF/S specification claims that properties
>  are first-class citizens, properties are not treated as equally as
>  classes. In RDF/S, both a metaclass of classes and a metaclass of
>  properties is a class, in contrast to Telos, where a metaclass of
>  individuals is a class, but a metaclass of properties (metaproperty)
>  is a property. Hence, while in Telos a metaproperty can have domain
>  and range, in the RDF/S model it cannot. Furthermore, at the data
>  layer, a property cannot be of type property, as in the case of
>  resources and classes. This is attributed to the fact that the
>  rdf:type property is applicable only for classes and RDF/S does not
>  provide us with an instantiation mechanism for properties at the data
>  layer. The current version of the RQL data model preserves this kind
>  of asymmetry in the manipulation of properties.
>]]
>
>
>I propose that we acknowledge that RDF puts limits on the treatment
>of property-instances (aka statements)

Is that in fact what is meant by 'property instances' in the above? I 
don't see how the text of the comment makes sense with that 
interpretation, nor that it corresponds to the Telos model (as far as 
I can understand that, admittedly.)

Seems to me that this comment is based on a systematic 
misunderstanding of RDFS, one that is exhibited in the papers the 
comment cites. For example, the comment " a property cannot be of 
type property.... the rdf:type property is applicable only for 
classes and RDF/S does not provide us with an instantiation mechanism 
for properties at the data layer" , if I follow it, seems to be flat 
wrong. Properties *are* of type rdf:Property; and Im not sure what is 
meant by 'data layer', but RDFS does provide an instantiation 
mechanism for properties, viz. rdfs;subPropertyOf.  If one uses OWL 
it is easy to specify a subproperty to be a single instance.  Perhaps 
this is based on a mistaken impression that RDF classes cannot, or 
maybe should not, contain properties?

Apart from matters like its built-in temporal model,  the basic Telos 
framework described by Mylopoulis is, as far as I can see, all easily 
and straightforwardly representable in RDFS, perhaps augmented with a 
little OWL here and there to indicate some restriction classes. 
Telos is based on a triples model; Telos 'attributes' can be RDF 
properties, for example. As Mylopousis et al (1990) 
http://citeseer.nj.nec.com/mylopoulos90telos.html  point out, "The 
first-class status of attributes and the ability to define attribute 
classes and metaclasses plays a particularly important role....a 
sparse framework can be used to accomplish a great deal."  Some of 
the properties, eg those used to encode attributes, might have to be 
considered as 'constraints' rather than as merely assertions, but 
this is a familiar issue we have dealt with elsewhere: it only means 
that a full Telos reasoner would have to impose some extra 
Telos-specific interpretation.

Pat


>as describable things. But that we
>do not accept any reason to change the RDF design at this time.

Correct.

>
>Regarding Property instances as resources:
>
>I propose...
>[[
>  * the WG discussed this issue at various times in the context of reification

I don't think this has anything to do with reification.  RDFS *does* 
have property instances as resources. They are subproperties.

>   and revisions/clarifications to RDF's formal model per the 
>original 1999 spec.
>
>  * the mission of RDF Core as a WG is explicitly a clarificatory one; we
>  are not designing a new RDF, but clarifying the existing one.
>
>  * many RDF _implementations_ allow for property instances (statements) to be
>   tagged, grouped, labelled etc.
>
>  * there are proposals (eg. N3) which make such facilities explicit within a
>   Semantic Web data language.
>
>  * the WG will note to the Semantic Web Coordination Group that Last Call
>  comments were received on this, and that any (currently hypothetical)
>  RDF 2 charter designs should take this into account.
>
>  * we do not intent to change the RDF formal model. While acknowledging that
>  a variety of alternate designs might have also been deployable, we 
>believe the
>  current design is workable and has been implemented successfully.
>]]
>
>
>The basic situation imho is that there are plenty of design choices we could
>have taken; some more Telos-like. But we're at the stage in our 
>process where we
>are fixing bugs, rather than shopping for a complete new design.
>
>In that context, the proposal is to reject the LC comment on our WDs.

I think we should reject it rather more forcibly, however.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola??????????????(850)202 4440   fax
FL 32501???????????(850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



