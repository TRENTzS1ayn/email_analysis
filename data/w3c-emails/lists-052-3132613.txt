docno="lists-052-3132613"
received="Mon Aug  4 03:39:39 2003"
isoreceived="20030804073939"
sent="Mon, 4 Aug 2003 10:32:17 +0300"
isosent="20030804073217"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: XML literals"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBC14@trebe006.europe.nokia.com"
charset="UTF-8"
inreplyto="XML literals"
expires="-1"


To:<connolly@w3.org>
Cc:<bwm@hplb.hpl.hp.com>,<jjc@hpl.hp.com>,<gk@ninebynine.org>,<phayes@ihmc.us>,<w3c-rdfcore-wg@w3.org>,<pfps@research.bell-labs.com>


 

-----Original Message----- 
From: ext Dan Connolly [mailto:connolly@w3.org] 
Sent: Fri 8/1/2003 4:17 PM 
To: Stickler Patrick (NMP/Tampere) 
Cc: Brian McBride; Jeremy Carroll; Graham Klyne; ext pat hayes; w3c-rdfcore-wg@w3.org; Peter F. Patel-Schneider 
Subject: Re: XML literals



On Fri, 2003-08-01 at 00:06, Patrick Stickler wrote:
[...]
>         
> Maybe. 
> 
>         in 1:1 correspondence with the lexical space.
> Right.

Hmm... that one gave me pause... but OK.

>         The exact nature of XML values is not specified.
> 
> No. This bothers me. Alot.

Really? The exact nature of integers is not specified;
just various relationships like addition and
multiplication of them.


No. The nature of integers *is* specified, by the relationships such as addition, multiplication, etc.

Perhaps I've misunderstood Pat, but I understood him to be saying that we simply are not going to say anything about the L2V mapping other than it is 1:1 -- i.e. it may very well be that the value space of rdfs:XMLLiteral is rdfs:subClassOf xsd:integer! Since after all, we could posit an L2V mapping that mapped canonical XML fragments onto integers in a 1:1 relationship (theoretically at least).

 


If it bothers you, then feel free to suggest an alternative.




I did.


We could pick any set that's in 1-1 correspondence
with the lexical space; e.g. pairs
        (humpty-dumpty, lexical-value)

or perhaps less churlishly...
        (http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral <http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral> , lexical-value)


> It is our responsibility to define what the values of XML Literals
> are.

Only inasmuch as required to get the technology deployed.



If you mean deployed in a fully system independent, portable manner that facilitates the interchange of RDF expressed knowledge between arbitrary applications where interoperability is based on our specs, then I agree.

But I'm not sure you're saying that. "Deployed" can mean so many things.



> It's *our* datatype, and no'one else should have to define it,  or
> guess.

They don't have to guess; what Pat wrote tells them everything
they need to know.

I'm an implementor, and *I* am unsure of what the value space of rdfs:XMLLiteral contains, per Pat's recent recommended change. It is clearly *not* the set of lexical forms -- which is the only thing that looks like XML to me. It could be the set of all pumpkins that have ever existed for all I know. 

I expect to operate on values, not lexical forms, and if the datatype definition does not tell me which value I have, given a particular lexical form, the that definition is incomplete and unnacceptable.


> I've never understood the opposition to having a value space
> consisting of infosets. I wish someone would tell me what significant
> problem or issue I'm missing...

How to construct an infoset and how to compare them isn't
specified.



Thank you. That seems a good reason for not having infosets in the value space.

Still, we do need to define what the value space of rdfs:XMLLiteral is. At the very least, we can simply make rdfs:XMLLiterals self denoting, no?

Patrick



