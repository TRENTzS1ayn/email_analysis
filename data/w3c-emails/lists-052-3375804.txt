docno="lists-052-3375804"
received="Tue Aug  5 07:38:53 2003"
isoreceived="20030805113853"
sent="Tue, 5 Aug 2003 14:34:13 +0300"
isosent="20030805113413"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: XML literals"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBC2D@trebe006.europe.nokia.com"
charset="UTF-8"
inreplyto="XML literals"
expires="-1"


To:<duerst@w3.org>
Cc:<w3c-rdfcore-wg@w3.org>


 

-----Original Message----- 
From: ext Martin Duerst [mailto:duerst@w3.org] 
Sent: Mon 2003-08-04 19:28 
To: Stickler Patrick (NMP/Tampere) 
Cc: w3c-rdfcore-wg@w3.org 
Subject: RE: XML literals



At Mon, 4 Aug 2003 10:53:45 +0300, Patrick.Stickler@nokia.com wrote:

 > Fine, then we define it ourselves. Let the lexical form itself be the
UTF8 encoded canonical form

No other lexical form is UTF-8 encoded. Lexical space is always
on strings of characters, irrelevant of encoding.




Then let it be a unicode string. I'm not particular on that point. Only that it be consistently and explicitly defined.


 > (full Unicode support is provided by RDF/XML serialization and/or
various editorial interfaces)
 > and XML literals are self denoting, just like plain literals.

Would that mean that they are still equal to hexBinary?

 > No need to map from Unicode to UTF8.
 > No need to posit a value space based on some other specification. They
are exactly what they
 > are in the graph, and string equality provides for value comparison.

String equality? Or octet sequence equality?

By "string equality" I meant character sequence equality, as appropriate given the encoding, UTF8 or Unicode or whatever.


 > And being canonicalized XML fragments, implementors know what the values
are and what to
 > do with them.

Overall, I'm wondering why you are opposed to have them 'different
from everything else', 

I was simply not sure that Pat's claim that they were different from any other XSD value space is necessarily true. There are alot of questionmarks there, and we may later *want* there to be some intersection somewhere with XSD so if  it doesn't absolutely need to be said, why say it?

but are okay with 'same as octet sequences'
if you claim that implementers anyway know what to do with them,
i.e. treat them as canonicalized XML fragments.

Maybe this is some basic unease at having something undefined.
This would indeed allow others to write an implementation that
would treat them as pumpkins. But who would seriously do that?

Neither equating XML fragments with octet sequences nor equating
them with pumpkins seems very adequate. And it seems strange to
me that we would have to do something rather inadequate just to
avoid something maybe even more inadequate, in particular if
that other thing (the pumpkins) is utter nonsense.



What exactly are you proposing we say the value space of XML literals contains?

 

Patrick

 



