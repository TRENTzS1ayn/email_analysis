docno="lists-052-3708862"
received="Thu Aug  7 08:17:04 2003"
isoreceived="20030807121704"
sent="Thu, 7 Aug 2003 08:17:04 -0400"
isosent="20030807121704"
name="Dan Brickley"
email="danbri@w3.org"
subject="need CR? :( Re: Denotation of XMLLiterals: poll"
id="20030807121704.GE8168@w3.org"
charset="us-ascii"
inreplyto="3F30E68D.1090900&#64;hplb.hpl.hp.com"
expires="-1"

To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc: rdf core<w3c-rdfcore-wg@w3.org>



* Brian McBride <bwm@hplb.hpl.hp.com> [2003-08-06 12:29+0100]
> 
> It seems that there is some concern about XMLLiterals denoting octet 
> sequences.  As I understand things, RDFCore doesn't feel strongly that 
> the denotation MUST be octet sequences.  Pat has layed what we really 
> care about in:
> 
> http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0452.html
> 
> I suggest we accept Pat's suggestion and reconsider the denotation of 
> XMLLiterals.  I have seen three suggestions, as I recall:
> 
>  A) be a bit vague about XMLLiterals really are - just define their 
> essential properties
> 
>  B) have them denote XPATH nodesets
> 
>  C) have them denote a pair (uri, lex form), where uri is the uri of 
> rdf:XMLLiteral.
> 
> Concern has been expressed about A being to vague.  Others have 
> responded saying thats normal - integers are defined in terms of their 
> properties.
> 
> Concern has been expressed that XPATH nodesets are too vague, we don't 
> really know that they are and are thus no better than A, but are in some 
> way worse.  Cannonicalization does define an equality relation on them
> 
> I have heard a private concern expressed about C, that if we did that, 
> shouldn't we treat all datatypes that way.  Further, that this does 
> guarantee that there are no other ways of denoting the same pair with 
> another, posibly user defined datatype.
> 
> How do we choose?  If you have a preference and rationale, it would be 
> good hear it.

Thinking about this some more, I'm increasingly uncomfortable with the
idea of picking one of these 3 somewhat different answers, and then
storming on to REC without another cycle of external review. The relationship(s) 
between RDF and XML is _the_ big problem that's haunted the entire RDF
project since 1997. To be having such a straw poll at this stage, without
expectation of major review from the RDF and XML developer community, is 
a cause for concern. Nobody's fault but that's where we're at.

If the choices A, B, C actually mean anything and matter, and have 
substantive differences amongst them, I suggest the answer to your
question 'how do we choose' is 'with outside help from XML and RDF
implementors'.

If A, B and C don't really have any observable differences in the
workings of an RDF implementation, maybe this wouldn't matter. But we 
seem to be discussing the choice as if it was a real one with
consequences that matter in the world. Declaring a dependency on some 
version of XPath, for example, is a non-trivial thing to do.

I'm coming round to the view that we need a CR[1]. In 1999, RDF M+S was
promoted prematurely to REC with minimal implementation experience; 
we're still cleaning up the resulting mess. I fear we're about to do the 
same thing regarding RDF's relationship to XML.

If A vs B vs C is non-trivial, a CR will help us evaluate our decision.
If it is trivial and our decision doesn't matter at all, then let's 
just flip a 3-sided coin...

Dan

[1] http://www.w3.org/2003/06/Process-20030618/tr.html#q70



