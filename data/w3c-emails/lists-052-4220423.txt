docno="lists-052-4220423"
received="Mon Aug 11 09:40:21 2003"
isoreceived="20030811134021"
sent="Mon, 11 Aug 2003 16:40:05 +0300"
isosent="20030811134005"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Text for FAQ re rdf:datatype=&quot;&amp;rdfs;#XMLLiteral&quot;"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBC31@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="Text for FAQ re rdf:datatype=&quot;&amp;rdfs;#XMLLiteral&quot;"
expires="-1"


To:<fmanola@mitre.org>
Cc:<w3c-rdfcore-wg@w3.org>




> -----Original Message-----
> From: ext Frank Manola [mailto:fmanola@mitre.org]
> Sent: 11 August, 2003 16:13
> To: Stickler Patrick (NMP/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: Text for FAQ re rdf:datatype="&rdfs;#XMLLiteral"
>
> > Perhaps it remains an open question whether we require RDF
> > parsers to check the validity of lexical forms explicitly
> > specified with rdf:datatype="&rdf;XMLLiteral". I (perhaps
> > mistakenly) thought we didn't want to impose such a requirement
> > on RDF parsers. Perhaps we do.
> > 
> > Patrick
> > 
> 
> 
> I'm not necessarily suggesting that we *ought* to impose such a 
> requirement, just pointing out that it seems to break the 
> model that we 
> describe for other datatypes. 

I don't think it breaks any model. RDF is completely ignorant
about any datatype other than rdf:XMLLiteral. Thus, it simply
is unnable to say anything about lexical forms other than
those for rdf:XMLLiteral.

rdf:XMLLiteral is RDF's own datatype, so it seems reasonable
that RDF parsers would pay it special attention -- but that
doesn't mean that the datatype itself is in any way different
from any other datatype or is getting treatment that is
contrary to the MT.

> And I think it'll be natural 
> for people 
> to wonder exactly how (or when) the validity of an instance of 
> rdf:XMLLiteral gets determined, if RDF software doesn't do it.  

I agree with you there, and upon considering it, I think we
*should* in fact require (or at least very strongly encourage)
RDF parsers to check explicitly specified lexical forms
for rdf:XMLLiteral for validity.

> If we 
> continue our litergy that says we're not defining a 
> processing model, I 
> don't see how this can be dependent on whether we imagine an RDF/XML 
> parser on top of an XML parser (for example).  Even though we define 
> RDF/XML as the standard language for serializing RDF graphs, that 
> language is defined in terms of how the RDF/XML generates 
> triples.  

Well, I'd view validity checking of rdf:XMLLiteral lexical forms
to be a syntax check, though I could conceive of many valid
arguments that such checking would not be completely generic
(but so what, what does it hurt?)

> It's 
> at the level of triples that this validity checking would have to be 
> done.  Presumably it's at this level that whether subjects and 
> predicates are valid URIrefs is determined, and whether any literals 
> specified are valid literals.

Fine, so an RDF parser SHOULD (not necessarily MUST) check the
validity of all lexical forms for rdf:XMLLiteral, however they
were defined, and SHOULD issue a warning for any illformed
lexical forms.

We can treat it as an optional, but recommended, step following
the purely generic, datatype agnostic parsing phase.

> I'd note that an alternative would be to treat rdf:XMLLiteral sort of 
> like we treat other datatypes, except that we (RDF) have defined a 
> built-in name for it.  That is, we don't define XML (any more than we 
> define xsd:integer) but we know people are presumably going 
> to want to 
> use XML literals, so we provide this datatype, which is likely to be 
> widely available (but if it is made available in a particular RDF 
> implementation, the implementation has to provide the appropriate 
> software to support the RDF-defined datatype model, and the datatype 
> semantics).  I don't really care, except if we're going to break the 
> model, I think we need to say so.

I don't think any special attention given to rdf:XMLLiteral by
RDF parsers breaks any model, but I agree that we should be clear
about the what's and why's.

Patrick



