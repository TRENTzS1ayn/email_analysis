docno="lists-052-4667732"
received="Fri Aug 15 05:14:55 2003"
isoreceived="20030815091455"
sent="Fri, 15 Aug 2003 12:14:50 +0300"
isosent="20030815091450"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: JJC's take on I18N concerns"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBC36@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="JJC's take on I18N concerns"
expires="-1"


To:<duerst@w3.org>,<jjc@hpl.hp.com>,<w3c-i18n-ig@w3.org>,<w3c-rdfcore-wg@w3.org>
Cc:<swick@w3.org>,<timbl@w3.org>,<sandro@w3.org>,<djweitzner@w3.org>




> -----Original Message-----
> From: ext Martin Duerst [mailto:duerst@w3.org]
> Sent: 14 August, 2003 23:32
> To: Jeremy Carroll; w3c-i18n-ig@w3.org; w3c-rdfcore-wg@w3.org
> Cc: swick@w3.org; timbl@w3.org; sandro@w3.org; djweitzner@w3.org
> Subject: Re: JJC's take on I18N concerns
> 
> 
> 
> Hello Jeremy,
> 
> Just to make sure, here some responses:
> 
> At 21:32 03/08/13 +0300, Jeremy Carroll wrote:
> 
> >[[
> >1. The current approach fails to preserve markup integrity for XML
> >literals that have been scraped or obtained from another repository.
> >I18N is not convinced that there will not be use cases where markup
> >integrity is important, and that the current approach will 
> amount to an
> >insuperable issue in those situations.
> >]]
> >
> >A simple reversible algorithm for XHTML family is:
> ...
> 
> This algorithm is restricted to the XHTML family,
> and as you say, would need to be applied systematically.
> Which spec will give the details, and which spec will
> say that it has to be applied?

No XHTML specific solution is required.

I've already pointed out XML Fragment as a solution to
the XML scraping problem, and to the general problem
of capturing information about the context of XML
Fragments.

I've also pointed out that it is not RDF's duty to
solve the general XML Fragment context issues.

I don't consider the XML scraping use case to
identify any failure in the present (editors'
draft) design.

It is a problem that will exist for *any* case where
an XML Fragment is taken out of its context and
encapsulated in *any* formalism.

Any solution that RDF might offer to this problem will
be an RDF-specific solution. And such a solution will
be a partial solution, limited only to language
context, insofar as the general problem of capturing
XML Fragment context is concerned.

Far better for the I18N WG to work with the **XML** 
community on a general, consistent solution to this
problem using XML Fragment, or similar, than to continue
to harass the RDF Core WG to provide a proprietary
solution that will likely be *INCOMPATIBLE* with
any general solution that might later arise within
the XML community.

--

Here is the last I personally plan to say on this matter:

I've seen two key issues that you have brought to our attention:

1. XML literals don't have a lang tag indicating
   language scope, so how do XML users capture
   this contextual information about fragments.

2. The relationship between plain literals and
   XML literals without markup has not be addressed.

As for #1, I've said enough, I think, above about that.
The context of an XML Fragment is not RDF's concern. And
there exists a W3C rec (albeit only CR) for addressing
such issues in a consistent manner. It is up to the 
XML community to bring it to maturity and promote its use.
RDF should remain agnostic as to such solutions, supporting
whatever the XML community decides (which it will do,
without any need for modification, based on the latest
editors' draft).

As for #2, the editors are working on text to clarify this
relationship. In a nutshell "abc" and
"abc"^^rdf:XMLLiteral denote two distinct values,
but applications may choose to "convert" or "coerce"
between such values, without (substantial) loss of
meaning, just as they may convert between 
"1"^^xsd:integer and "1.0"^^xsd:decimal. As far
as the MT is concerned, however, plain literals values
and XML literal values are disjunct.


Patrick



