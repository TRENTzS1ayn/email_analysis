docno="lists-052-5721457"
received="Tue Aug 26 07:21:20 2003"
isoreceived="20030826112120"
sent="Tue, 26 Aug 2003 14:21:13 +0300"
isosent="20030826112113"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: xmlsch-02"
id="A03E60B17132A84F9B4BB5EEDE57957B02630228@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="xmlsch-02"
expires="-1"


To:<bwm@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>,<Patrick.Stickler@nokia.com>




> -----Original Message-----
> From: ext Brian McBride [mailto:bwm@hplb.hpl.hp.com]
> Sent: 26 August, 2003 11:56
> To: Stickler Patrick (NMP/Tampere)
> Cc: w3c-rdfcore-wg@w3.org
> Subject: Re: xmlsch-02
> 
> 
> 
> 
> Patrick.Stickler@nokia.com wrote:
> 
> 
> [...]
> 
> > 
> > UGH! Please, no.
> > 
> > If Peter or others are unhappy about our fudging, then we shouldn't
> > fudge, and we should take the stricter position that lexical forms
> > are lexical forms are lexical forms and no whitespace processing
> > is ever to be applied to any lexical form.
> 
> Why is that preferrable?  This has come up at all because the most 
> commonly used library Xerces, implements the more forgiving function. 

Xerces is an XML tool. Not an RDF tool.

To argue that RDF should be weakened because a non-RDF tool
does not provide RDF-specific features seems pretty odd.

Secondly, Xerces, even if the most widely used tool, is not equivalent
to the standard, and the standard does not say that whitespace
processing is part of L2V mapping. I.e., one could very well argue
that Xerces does not provide a distinct L2V function/method since
(or if) it provides no way to exclude whitespace processing.

[I'm actually wondering if it might. Could anyone in the know 
check if it is possible to exclude whitespace processing when
mapping lexical forms to values using Xerces?]

> It has been suggested we should not specify something that most 
> implementations wont implement?  In effect this suggestion 
> arises from 
> implementation feedback.

Yes, but I didn't see anything that would result in support for
XML Schema datatypes not being implemented -- only the necessary
validation checks for cases where lexical forms require whitespace
processing to be valid.

Somewhere, we have to draw the line, and pretending that "  10  " 
is a valid lexical form for xsd:integer is simply going too far.

If that means that RDF implementors providing support for XML
Schema datatypes can't safely use Xerces out-of-the-box, then
cest la vie. They either need to augment the checks in addition
to Xerces or find another tool.

Patrick



