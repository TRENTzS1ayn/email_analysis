docno="lists-052-5882894"
received="Wed Aug 27 08:06:24 2003"
isoreceived="20030827120624"
sent="Wed, 27 Aug 2003 15:00:41 +0300"
isosent="20030827120041"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: xmlsch-02"
id="A03E60B17132A84F9B4BB5EEDE57957B5FBC4D@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="xmlsch-02"
expires="-1"


To:<danbri@w3.org>,<jjc@hplb.hpl.hp.com>
Cc:<bwm@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>,<Patrick.Stickler@nokia.com>




> -----Original Message-----
> From: ext Dan Brickley [mailto:danbri@w3.org]
> Sent: 27 August, 2003 14:31
> To: Jeremy Carroll
> Cc: Brian McBride; Stickler Patrick (NMP/Tampere); 
> w3c-rdfcore-wg@w3.org
> Subject: Re: xmlsch-02
> 
> 
> * Jeremy Carroll <jjc@hplb.hpl.hp.com> [2003-08-27 11:14+0100]
> > 
> > Actually in response to Patrick's latest on "pfps-06 on hold"
> > 
> > 
> > Choices may be:
> > 
> > 1) Fudge - peter unhappy, can probably persuade WebOnt to 
> be unhappy, 
> > difficult to defend WG decision
> > 
> > 2) LC design - Xerces implementors have difficulty in passing tests
> 
> How responsive are the Xerces group to suggestions? Is there an API
> addition or behaviour change that we could plausibly request of them?

From what Jos suggests, the behavior is pretty widespread, and in fact,
XML tools supporting XML Schema simple types are behaving in a 
perfectly reasonable and useful way for dealing with lexical forms 
extracted from or interpreted within an XML context.

I can't imagine the Xerces folks, or any XML tools vendor, being
very receptive to suggestions that would make their tool less useful
in the context for which it is intended.

In fact, many programming languages also disregard whitespace when
mapping lexical forms to interned values.

E.g. sscanf("   10    ", &myInteger);

BUT, that does not mean that the presence of whitespace is valid
insofar as the lexical form is concerned, only that in practice,
applications have found it feasible to disregard it without
problems.

This is really a processing issue, not a definitional issue.

We formally constrain XML literals to a precise form, even though most
XML tools would be quite happy with countless possible variants.

"<foo/>" is not a valid XML literal, but I don't expect any XML
parser to complain.

I see no reason why we would not formally constrain XML Schema
typed literals to the very lexical spaces formaly defined by the 
XML Schema spec, even if most XML tools are quite happy with 
variant forms.

In the long run, interoperability will be greater, if the lexical
forms are valid, as not everyone will necessarily employ XML-specific
tools to support XML Schema datatypes, and where a valid lexical
for for xsd:integer may be acceptable to a system-internal datatype
scanner/parser, an invalid form with whitespace may not.

Patrick



