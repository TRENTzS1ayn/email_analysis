docno="lists-052-6018209"
received="Wed Aug 27 10:52:24 2003"
isoreceived="20030827145224"
sent="Wed, 27 Aug 2003 15:31:03 +0100"
isosent="20030827143103"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: pfps-06 hold off?"
id="3F4CC0A7.701@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="A03E60B17132A84F9B4BB5EEDE57957B02630233&#64;trebe006.europe.nokia.com"
expires="-1"


To:Patrick.Stickler@nokia.com
Cc:phayes@ihmc.us,w3c-rdfcore-wg@w3.org


Patrick.Stickler@nokia.com wrote:
> 
> 
>>-----Original Message-----
>>From: ext pat hayes [mailto:phayes@ihmc.us]
>>Sent: 27 August, 2003 04:16
>>To: Brian McBride
>>Cc: w3c-rdfcore-wg@w3.org
>>Subject: Re: pfps-06 hold off?
>>
>>
>>
>>
>>>Pat,
>>>
>>>I'm wondering whether we should hold off your following up 
>>
>>pfps on pfps-06 as:
>>
>>>  1) the xml schema lex 2 val mapping may be about to change
> 
> 
> Honestly, Brian, I'm wondering how this could happen. We do
> not define the XML Schema L2V mapping, and the XML Schema
> specs are quite clear that the L2V mapping does *not* include
> whitespace processing, so I remain very puzzled at your
> suggestion that this could change.

I agree with you Patrick that we cannot change the definition of the 
lexical space of an xsd datatype, or the mapping from that space to the 
value space.

However, it did occur to me that we could choose to adopt a scheme 
something like you suggest below.

> 
> All that we could do ourselves would be to say that the RDF
> L2V mapping, for XML Schema datatypes, includes the whitespace
> processing, but such a position creates such blatant dependencies
> and other nastiness in our design that simply thinking about
> such a thing happening makes my ass start to twitch.

Could you spell out for me what 'blatant' dependencies are created and 
what other nastiness is created.

> 
> Can you please, if possible, clarify what basis you have for
> suggesting that the XML Schema L2V mapping might change, or
> that the RDF L2V mapping would not be the same for XML Schema
> datatypes as defined by XML Schema?

I simply, in my ignorance, don't know why your ass twitches.
> 
> The few comments that we have recieved from implementors regarding
> the looseness of the Xerces implementation does not IMO even 
> begin to justify any such changes.

Consider a meeting with the director requesting advancement to PR.

Director:  Hmmm, quite a few of the implementations seem not to be 
implementing this test case.

WG:  That's because we defined the L2V mapping strictly according to XSD 
datatypes and don't include white space processing.

Director:  Well, if that is what the implementations are doing, why 
don't you allow white space processing in the mapping.

WG: ...

Can you help me out with the WG's response.

Brian



