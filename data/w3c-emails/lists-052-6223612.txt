docno="lists-052-6223612"
received="Fri Aug 29 05:12:06 2003"
isoreceived="20030829091206"
sent="Fri, 29 Aug 2003 12:12:02 +0300"
isosent="20030829091202"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: xmlsch-02"
id="A03E60B17132A84F9B4BB5EEDE57957B02630274@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="xmlsch-02"
expires="-1"


To:<bwm@hplb.hpl.hp.com>,<gk@ninebynine.org>
Cc:<w3c-rdfcore-wg@w3.org>,<pfps@research.bell-labs.com>,<Patrick.Stickler@nokia.com>




> -----Original Message-----
> From: ext Brian McBride [mailto:bwm@hplb.hpl.hp.com]
> Sent: 29 August, 2003 11:50
> To: Graham Klyne
> Cc: Stickler Patrick (NMP/Tampere); w3c-rdfcore-wg@w3.org; Peter F.
> Patel-Schneider
> Subject: Re: xmlsch-02
> 
> 
> Hi Graham,
> 
> Its good that you are able to keep at least partialy in touch 
> with things.
> 
> Graham Klyne wrote:
> 
> [...]
> 
> > 
> > While (reasonably, IMO) staying silent about what 
> applications should do 
> > if faced with text that is not well-formed RDF.
> 
> What I write here is not advocacy, but I thought it might be 
> helpful to 
> pass on something I learned in a recent conversation with pfps.
> 
> A point made by pfps is that the object of the triple represented in:
> 
>    _:a eg:prop "ten"^^xsd:integer .
> 
> is well formed RDF according to the specs.
> 
>    "ten"^^xsd:integer
> 
> does not denote a Literal, but it does denote something that is not a 
> literal (if I've understood semantics properly).  Similarly,
> 
>    " 10 "^^xsd:integer
> 
> does not denote a literal according to the current specs (given an 
> xsd:integer aware interpretation).
> 
> Peter's point to me was that if it were an error, he would have no 
> problem with suggesting automatic correction, but he does 
> have a problem 
>   correcting something that is not an error.

Quite so. I don't think the recent wording changes were intended
to say that " 10 "^^xsd:integer is not an error, but that RDF
applications can recover from that error if they so choose.

Perhaps we should have phrased it as MAY perform whitespace
processing but if they do MUST issue a warning if the lexical
form changes. Of course, the recent examples from Jos about
"10.0"^^xsd:integer also being acceptable to .NET suggests 
that we really need to broaden the discussion to include any
invalid but still safely coercible lexical form, not just
whitespace processing... 

But I think it's clear that neither " 10 " or "10.0" are 
valid lexical forms for xsd:integer and their occurrence
in a typed literal would be an error.

Patrick



