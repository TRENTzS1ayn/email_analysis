docno="lists-052-6878379"
received="Wed Dec 17 07:19:35 2003"
isoreceived="20031217121935"
sent="Wed, 17 Dec 2003 12:13:47 +0000"
isosent="20031217121347"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="Re: Semantics document, new rule 'gl'"
id="5.1.0.14.2.20031217121008.032bee98@127.0.0.1"
charset="us-ascii"
inreplyto="p06001f02bc04c7155ebe&#64;[192.168.1.11]"
expires="-1"


To: pat hayes<phayes@ihmc.us>
Cc:w3c-rdfcore-wg@w3.org


At 06:48 16/12/03 -0800, pat hayes wrote:
>>Rule: lg1
>>If E contains: uuu aaa lll .
>>Then:          uuu aaa _:nnn.  _:nnn foo:sameAs lll .
>>(where _:nnn is allocated as described for rule 'lg'.)
>>
>>Rule: gl1
>>If E contains: uuu bbb _:nnn .  _:nnn foo:sameAs lll .
>>Then:          uuu bbb lll .
>>
>>(The 'foo:sameAs' property is intended to appeal to the owl:sameAs 
>>property, without getting entangled with the owl semantic conditions on 
>>owl:sameAs.
>>I.e., a foo:sameAs b does not necessarily mean that I(a) == (b), just that
>>    a p c . <=> b p c .
>>and
>>    d q a . <=> d q b .
>>for all syntactically allowable c, d, p, q.)
>
>Right, exactly. That is what is needed in an implementation: to treat the 
>literal and its allocated bnode *in exactly the same way* wherever 
>syntactically possible.  In fact, the best way to handle this would be to 
>actually use the literal in subject position when applying the rules, if 
>your implementation can handle that, and just ignore rules lg and gl.  Or, 
>maybe, apply rule lg to everything, *including the proposed conclusion* 
>which would be closest to standard computational-logic practice and would 
>obviously avoid the need for that silly rule gl; in effect it would just 
>eliminate literals altogether in favor of blank nodes.

Thanks.

I could use the literal-as-subject approach, but I wanted (for no 
particular reason other than a sense of tidiness) to be able to check 
proofs that were based as closely as I could manage on the RDF formal spec.

#g


------------
Graham Klyne
For email:
http://www.ninebynine.org/#Contact



