docno="lists-052-7620799"
received="Wed Feb  5 18:15:59 2003"
isoreceived="20030205231559"
sent="Wed, 5 Feb 2003 17:15:53 -0600"
isosent="20030205231553"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: response to issue pfps-09"
id="p05111b00ba6747e09fbc@[10.0.100.86]"
charset="iso-8859-1"
inreplyto="20030205.153808.52818927.pfps&#64;research.bell-labs.com"
expires="-1"


To:"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>
Cc:w3c-rdfcore-wg@w3.org


>From: pat hayes <phayes@ai.uwf.edu>
>Subject: Re: response to issue pfps-09
>Date: Wed, 5 Feb 2003 13:46:11 -0600
>
>>  >From: pat hayes <phayes@ai.uwf.edu>
>>  >Subject: response to issue pfps-09
>>  >Date: Tue, 4 Feb 2003 17:49:00 -0600
>>  >
>>  >>  I believe that there is a missing part of datatypes in the RDF model
>>  >>  theory, and, moreover, that this missing part makes datatypes unusable
>>  >>  in RDF.  The missing part is a mechanism for tieing a URI reference to
>>  >>  a datatype.
>>  >>
>>  >>  ----
>>  >>
>>  >>  The MT assumes that datatypes are defined externally to RDF, and that
>>  >>  part of this defining process involves associating a uriref with each
>>  >>  datatype which can be used as its 'name', ie the semantic assumption
>>  >>  is that the denotation is defined externally.
>>  >
>>  >The MT provides mechanisms for communicating the lexical space, value
>>  >space, and L2V map of these externally defined datatypes to datatyped
>>  >interpretations.  However, it is lacking a mechanism for communicating the
>>  >RDF ``name'' of the datatype to datatyped interpretations.
>>
>>  I think there are two issues here that I (we?) have been getting confused.
>>
>>  1. A D-interpretation should require that the denotation of a
>>  recognized datatype uriref is a particular datatype, as a semantic
>>  condition.
>>
>>  2. Some *mechanism* should be provided in the semantics document for
>>  assigning or attaching the denoted datatype to the datatype uriref.
>
>It appears to me that 2 is part of 1.  If a ``recognized datatype uriref is
>a particular datatype'' then it is surely the case that that datatype must be
>somehow assigned or attached to the datatype uriref.

Yes, somehow. But how, exactly, is not for the RDF WG to decide, seems to me.

Look, RDF assumes that urirefs denote, and that's all it assumes.  If 
a uriref is being used to *name* something, ie if its denotation is 
supposed to be fixed somehow and publicly accessible, then this 
requires a process of baptism, of assigning a name to the thing 
named. I do not know how to do that, and you are saying that neither 
do you, and until there is such a process you don't know how to 
baptize a new datatype. Indeed, I agree, I don't know either. But our 
charter only requires us to incorporate the XML Schema datatypes, and 
we have baptised those.

I think this larger problem - what are the appropriate protocols for 
achieving baptism on the Web - is more than the RDF WG can tackle. It 
is a larger and more comprehensive issue which impacts many other 
things than RDF.

[...]

>  >
>>  Right, this was always the intention, that if ex:foo is a recognized
>>  datatype uriref, then there is some datatype x such that in any
>>  D-interpretation I , I(ex:foo) = x. I should make that more explicit,
>>  clearly.
>
>But which URI reference denotes which datatype?

That is determined, presumably, by the agency which creates the 
datatype and describes it in some standards document, or otherwise 
publicises it. How is the meaning of any uriref determined? Im not 
sure what kind of an answer you were expecting here.

>
>What I want to be able to do in D-interpretations is
>
>1/ Create some datatypes, say octal and hexidecimal numbers.
>2/ Be able to create typed literals that use these datatypes, for example
>    "A"^^me:hexidecimal and "10"^^me:octal.
>
>I don't see how the current definition of D-interpretations gives me this
>ability.

I don't think it does, indeed. All it is is a model-theoretic 
semantics, not a universal datatype-defining system. In itself, it 
doesn't give you the means to *create* anything, all it does is 
define some semantic constraints to conform to.

>Without both of these, I don't see how RDF datatyping is useful.

Well, it lets you use the XML schema datatypes and it provides a 
framework, or part of a framework, for future extensions. It isn't a 
complete comprehensive system for creating new datatypes on the Web. 
I don't think there is any prospect of such a comprehensive system 
being constructed at present, but there may be other initiatives 
under way about which I know nothing, of course.

Pat

-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola??????????????(850)202 4440   fax
FL 32501???????????(850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



