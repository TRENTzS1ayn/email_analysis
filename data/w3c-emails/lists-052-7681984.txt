docno="lists-052-7681984"
received="Thu Feb  6 10:45:17 2003"
isoreceived="20030206154517"
sent="Thu, 06 Feb 2003 15:15:09 +0000"
isosent="20030206151509"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="Re: response to issue pfps-09"
id="5.1.0.14.2.20030206151414.032e0560@127.0.0.1"
charset="us-ascii"
inreplyto="p05111b00ba6747e09fbc&#64;[10.0.100.86]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org


At 05:15 PM 2/5/03 -0600, pat hayes wrote:
>If a uriref is being used to *name* something, ie if its denotation is 
>supposed to be fixed somehow and publicly accessible, then this requires a 
>process of baptism, of assigning a name to the thing named.

Hmmm... "baptism by file" ?-)

In a response to this message, Peter says:
>Well, why not just make RDF datatypes be four-tuples, instead of triples,
>adding a URI reference?  A D-interpretation would then be required to
>interpret the URI reference for datatypes as the datatype.  What is wrong
>with this?

It seems to me that this is one way of indicating, formally, that the 
denotation of datatypes by some URIs is part of the interpretation.  Which 
is pretty much what I understood we meant by some given 
D-interpretation.  I don't think this imposes any additional mechanism on 
RDF applications.  Is there a problem with this as a suggestion to provide 
a formal way of expressing the link between a URI and a datatype that it 
may denote?

And also:
>But then datatype extensions each have to be full-fledged semantic
>extensions to RDF, instead of being just instantiations of the RDF
>datatyping framework.

I think so, in the same sense that RDFS is a "full-fledged semantic 
extension to RDF".  This what I understood by the D-interpretation 
approach, and don't see any problem here.

#g


-------------------
Graham Klyne
<GK@NineByNine.org>



