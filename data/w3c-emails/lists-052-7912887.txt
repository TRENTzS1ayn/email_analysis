docno="lists-052-7912887"
received="Wed Feb 12 05:05:27 2003"
isoreceived="20030212100527"
sent="Wed, 12 Feb 2003 10:00:56 +0000"
isosent="20030212100056"
name="Graham Klyne"
email="GK@NineByNine.org"
subject="Re: Two questions about bagid"
id="5.1.0.14.2.20030212095233.032efec0@127.0.0.1"
charset="us-ascii"
inreplyto="4C854F09-3E0E-11D7-84BF-000393914268&#64;w3.org"
expires="-1"


To: Tim Berners-Lee<timbl@w3.org>
Cc: RDF Core<w3c-rdfcore-wg@w3.org>


[Restricting thread to RDFcore]

At 02:15 PM 2/11/03 -0800, Tim Berners-Lee wrote:
>I have a question about implementation of the bagid feature.
>My parser doesn't currently implement it, and so  fails the RDF
>tests which involve it.   The same seems to apply to Ids on
>arcs.
>
>One curious thing is that I have not yet found a live case which
>which uses bagid to produce the reification suggested in the spec.
>No one on the #RDFIG channel when the question
>was posed yesterday could could really think of an application
>which used it, and no one could really defend its existence as a feature.
>I couldn't by a Google search find any real use on the web.
>(apart from papers about RDF and test cases).
>Is this feature then worth implementing? What does the group think?
>
>
>Another question is about the semantics.
>I understand that an id  :i  on the statement  { :superman :can :fly}
>should generate the statements
>
>:i a rdf:Statement;  rdf:subject :superman;   rdf:predicate :can; 
>rdf:object :fly.
>:superman :can :fly.
>
>and I might want to use this to generate attribution:
>
>:lois :thinks :i.
>
>This would suggest that an owl reasoner (say) that knows that :superman and
>:clarkekent are daml:equivalent should be able to infer that
>
>:i a rdf:Statement;  rdf:subject : clarkekent;   rdf:predicate :can; 
>rdf:object :fly.
>: clarkekent :can :fly.
>:lois :thinks :i.
>
>This seems counterintuitive, as one would expect it allow one to conclude
>that the modified statement is due to the original source.
>Some form of quoting around the subject, predicate
>and object would seem necessary.

I agree that bagid doesn't help at all with this issue.

Indeed, I don't think the current RDF semantics (alone), with what I might 
call its "flat space of interpretations", can adequately deal with the 
issues of propositions about attitudes that you raise.

I did some musing about this topic a while ago [1], and had some thoughts 
about extension to the RDF semantics to deal with such issues.  As yet, 
it's gone no further than that document.  Essentially, what I try to do is 
sketch how RDF model theory might extend to cover the kinds of things you 
do with Notation3 formulae.

#g
--

[1] http://www.ninebynine.org/RDFNotes/UsingContextsWithRDF.html



-------------------
Graham Klyne
<GK@NineByNine.org>



