docno="lists-052-7981370"
received="Wed Feb 12 15:01:32 2003"
isoreceived="20030212200132"
sent="Wed, 12 Feb 2003 11:43:36 -0800"
isosent="20030212194336"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: Two questions about bagid"
id="46C6CAFB-3EC2-11D7-84BF-000393914268@w3.org"
charset="US-ASCII"
inreplyto="p05111b41ba6f325672d5&#64;[10.0.100.86]"
expires="-1"

Cc: Jan Grant<Jan.Grant@bristol.ac.uk>, RDF Core<w3c-rdfcore-wg@w3.org>, www-rdf-comments<www-rdf-comments@w3.org>
To: pat hayes<phayes@ai.uwf.edu>




On Tuesday, Feb 11, 2003, at 16:17 US/Pacific, pat hayes wrote:

>> On Tue, 11 Feb 2003, Tim Berners-Lee wrote:
>>
>>>  Another question is about the semantics.
>>>  I understand that an id  :i  on the statement  { :superman :can 
>>> :fly}
>>>  should generate the statements
>>>
>>>  :i a rdf:Statement;  rdf:subject :superman;   rdf:predicate :can;
>>>  rdf:object :fly.
>>>  :superman :can :fly.
>>>
>>>  and I might want to use this to generate attribution:
>>>
>>>  :lois :thinks :i.
>>>
>>>  This would suggest that an owl reasoner (say) that knows that 
>>> :superman
>>>  and
>>>  :clarkekent are daml:equivalent should be able to infer that
>>>
>>>  :i a rdf:Statement;  rdf:subject : clarkekent;   rdf:predicate :can;
>>>  rdf:object :fly.
>>>  : clarkekent :can :fly.
>>>  :lois :thinks :i.
>>>
>>>  This seems counterintuitive, as one would expect it allow one to
>>>  conclude
>>>  that the modified statement is due to the original source.
>>>  Some form of quoting around the subject, predicate
>>>  and object would seem necessary.
>
> Right. This arises from the way that RDF handles reification. The 
> obvious, and simplest, way to understand the above would be one where 
> the reification :i refers to the triple itself, ie to its syntactic 
> form, in effect quoting it.  Then the equality substitution would not 
> be valid, since even though :clarkekent = :superman, the *triples* 
> expressing the propositions that Clarke can fly, and that Superman can 
> fly, are distinct piece of syntax.   But this way of understanding 
> reification was rejected by the WG in favor of one where the 
> reification is understood to refer to the things that the original 
> triple referred to, so that for example the subject of the reified 
> triple is not the subject NODE of the triple, but the thing that node 
> refers to, which is that same flying guy, no matter what name you use 
> to refer to him by. This might be called a de-re rather than a 
> de-dicto interpretation of reification. This allows equality 
> substitution, but it does not allow a reification to be coherently 
> used as a de-dicto object of a psychological modality like 'thinks' or 
> 'believes'.
>
> We could have gone either way on this. But we can't go both ways at 
> once.

What is not clear is the use of going with the de-re interpretation.  
Whatever i  identifies, I don't know what the semantics are of a 
statement which involves i.  There don't seem to be any use cases 
either.

Would the spec be damaged in practice if the id=  on property arcs and 
bagid= atttributes were deprecated, or removed to a separate module?

I'd note that cwm, while it does not implement these bag things, it 
does implement quoting (with parsetype=quote), which is needs, for 
representation of a set of statements from a specific source and so on. 
So that implementation experience suggests that the bagid system, while 
adding complexity, does not meet those needs which apparently 
originally lead to the bagid feature's introduction.

Tim



