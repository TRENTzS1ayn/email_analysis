docno="lists-052-8780645"
received="Mon Feb 24 10:58:42 2003"
isoreceived="20030224155842"
sent="Mon, 24 Feb 2003 16:58:34 +0100"
isosent="20030224155834"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: reagle-01, reagle-02 issues"
id="BHEGLCKMOHGLGNOKPGHDOEDMCBAA.jjc@hpl.hp.com"
charset="iso-8859-1"
inreplyto="12277.1046100959&#64;hoth.ilrt.bris.ac.uk"
expires="-1"

To:"Dave Beckett"<dave.beckett@bristol.ac.uk>,"Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:"w3c-rdfcore-wg"<w3c-rdfcore-wg@w3.org>



>
> The other question is: which X?  I assume the choices are Exclusive
> or Canonical, with/without comments.  Did we get a recommendation or
> suggestion from the commenters?

Reagle says:
(I recommend you use exc-c14n).

see
http://lists.w3.org/Archives/Public/www-rdf-comments/2003JanMar/0128.html

that leaves the comments issue open, but (realistically) excludes the
preservation of namespaces that are not used.

>
>
> > =====
> > 3 is now my preference - I realise it needs expansion, but
> before I do that
> > I wish to list pros and cons, and get feedback from WG.
> > =====
> >
> > Consider three use cases:
> > A) cheap and cheerful RDF impl using embedded XHTML
> > B) OWL or other semantically advanced use where it is desired that
> > representation in domain of discourse is not implementation dependent.
> > C) Embedding XSLT document inside and rdf:XMLLiteral (hence requiring
> > support for preservation of not visibly used namespaces)
> >
> >
> > 1:
> > A - works
> > B - doesn't really work, because of comments and not visibly
> used namespaces
> > C - might work depending on having an implementation that knows when to
> > preserve not visibly used namespaces
> >
> > 2:
> > A: expensive
> > B: works
> > C: does not work
> >
> > 3:
> > A: works
> > B: works
> > C: does not work
> >
> > i.e. our current position works non-interoperably for XSLT in
> RDF - a use
> > case that we have not seen, and that is its only advantage over
> soln 3 which
> > interoperably does not work for XSLT in RDF.
> >
> > ====
> >
> > If we go for soln 2 or soln 3 we have to reconsider whether we wish to
> > preserve comments, and which not visibly namespaces we preserve.
> > I suggest preserve comments, and no namespaces that are not
> visibly used.
>
> OK, this is your X choice.  Did DigSig group express a preference?

exc-c14n - I do not have an axe to grind on the comments either way.

>
>
> From my experience, I think preserving comments will be tricky to
> implement on top of the C SAX API so slightly prefer not preserving
> them.  I will investigate, however.   I have no preference on the
> namespaces.

If the comments are hard in some environments let's ditch them.

>
> Is 3 still too lax for "removing implementation variability from RDF/XML"?

Yes. Reagle says (in the same msg):
"what purpose is a canonicalization even serving if you are
likely to get implementation variances? "

I think this comment could be addressed editorially - not clear in which
document though.
e.g.
"The design of rdf:XMLLiteral and its relationship to
rdf:parseType="Literal" permits implementation variablity in the
representation of rdf:XMLLiteral's in an RDF graph, but does not permit
variability in the denotation of rdf:XMLLiteral's under RDF datatyped
semantics."

(requires wordsmithing)


>
> > BTW - if we go for 2 or 3 ARP will need updating - it has some
> support for
> > preservation of not visibly used namespaces. I could ask on
> jena-dev whether
> > anyone is using this feature.
>
> Yes, well, all the (updated) RDF parser implementations will have to
> change for 2 or 3.  Since there are some that already claim
> conformance to the revised syntax.
>

I would have thought quite a lot already canonicalize anyway - if you do not
worry about resources that is the easiest path; and I would be surprised if
many do much with not visibly used namespaces.

Do we know?

If we were to make a change we should IMO ask the parser implementors who
have declared victory for their input.

Jeremy



