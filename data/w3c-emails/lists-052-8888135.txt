docno="lists-052-8888135"
received="Tue Feb 25 10:57:42 2003"
isoreceived="20030225155742"
sent="Tue, 25 Feb 2003 15:53:53 +0000"
isosent="20030225155353"
name="Dave Beckett"
email="dave.beckett@bristol.ac.uk"
subject="Re: reagle-01, reagle-02 issues"
id="13679.1046188433@hoth.ilrt.bris.ac.uk"
inreplyto="jjc&#64;hplb.hpl.hp.com"
expires="-1"

To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
cc: w3c-rdfcore-wg<w3c-rdfcore-wg@w3.org>



>>>Jeremy Carroll said:

> Dave said:
> > From my experience, I think preserving comments will be tricky to
> > implement on top of the C SAX API so slightly prefer not preserving
> > them.  I will investigate, however.   I have no preference on the
> > namespaces.
> 
> If the comments are hard in some environments let's ditch them.

I checked and both main C XML parsers I use in Raptor and they do
support comments via the SAX API.  However, neither support any form
of XML canonicalization via the SAX API (libxml does via DOM however)

In order to handle both, I would have to write a SAX-based XML
canonicalization myself and consequently I would prefer whichever is
easiest to write :)  The other alternative is to only provide C14N
when used with libxml and use its C14N DOM interface to do the hard
work.

<snip/>

> I would have thought quite a lot already canonicalize anyway - if you do not
> worry about resources that is the easiest path; and I would be surprised if
> many do much with not visibly used namespaces.
> 
> Do we know?
>
> If we were to make a change we should IMO ask the parser implementors who
> have declared victory for their input.

Certainly.  I suspect it depends mostly on what XML parser C14N
implementations are available per language.

Dave



