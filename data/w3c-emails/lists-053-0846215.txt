docno="lists-053-0846215"
received="Thu Jun  5 15:05:36 2003"
isoreceived="20030605190536"
sent="05 Jun 2003 14:05:58 -0500"
isosent="20030605190558"
name="Dan Connolly"
email="connolly@w3.org"
subject="Re: vass-01 flat layering"
id="1054839957.8234.1237.camel@dirk.dm93.org"
inreplyto="5.1.0.14.0.20030528104542.02db0990&#64;localhost"
expires="-1"

To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc: Pat Hayes<phayes@ai.uwf.edu>,w3c-rdfcore-wg@w3.org



On Wed, 2003-05-28 at 05:01, Brian McBride wrote:
[...]
> 
> The question of layering has been made many times by many people.  The RDF 
> schema approach is unusual and it is not uncommon for folks, e.g. those 
> familiar with UML, to ask "why did you do it differently".  I was kinda 
> hoping there was a relatively simple answer to that question.

The design derives from the principle...

"Anyone Can Make Simple Assertions About Anything"
http://www.w3.org/TR/rdf-concepts/#section-anyone

One straightforward approach is to refer the commentor
to that section and see if it satisfies him.

Another approach is to elaborate that section to derive
the "non-traditional" aspects of RDF/RDFS design
(properties of properties, classes of classes) from
that principle.

TimBL has done it a number of times orally; I wish I
had a tape recorder. Hmm... he chimed in on a relevant
thread...

Re: FAQ: stratified class hierarchies vs. RDFS
From: Tim Berners-Lee (timbl@w3.org)
Date: Thu, Jun 27
http://lists.w3.org/Archives/Public/www-rdf-comments/2002AprJun/0204.html

... but no, that's hardly what I'd send to the commentor.
Let's see... the argument goes like this, as I recall...

[[[

1. A tree is more constrained than a graph, i.e. web.
A central architectural principle of the web is that
it is, in the general case, an unconstrained web;
trees, lattices, tables, etc. can be embedded
in the web, but the web as a whole is unconstrained.
This is a fundamental architectural feature of
the Web; lots of systems that
had all the other features of the Web and more,
but lacked this one, failed.

2. RDF builds on the existing web of URIs, promoting
the idea of typed links from something rarely exploited
to a central feature, properties, and promoting
the informal relationship between linked resources
to formal logical... well, formulas; in exchange
for the reduced expressiveness of formal systems,
we get the benefit of computationally assisted
reasoning.

[hmm... perhaps we can leave points 1 and 2 implicit;
but I'm not deleting them from this message...]

3. Consider single inheritance. If doc1 says
<doc1#baseball> rdf:type <doc1#Sport>, and some other
party wants to use the same concept of baseball
but relate it to a different class, ala
<doc1#baseball> rdf:type <doc2#Business>, to
prevent them from doing so is to artificially
constrain RDF, counter to point 1.

4. Consider stratified class hierarchies.
If docA says
  <docA#DatabaseTable> rdf:type <docA#ModellingTechnique>.
and docB says
  <docA#ModellingTechnique> rdf:type <docB#ConceptsInPhilosophyBook1>.

And docC says
  <docB#ConceptsInPhilosophyBook1> rdf:type <docA#DatabaseTable>.

Then any stratified design imposes an arbitrary limitation
on the use of these three documents.

]]

Something like that. Hmm... perhaps something in between
is more straightforward...

>   And if there 
> is, I see no reason for not offering it in response to this comment.
> 
> I personally find the example in the webont docs quite convincing.  It 
> seems to be that in general I want to be able to treat Cabernet Sauvignon 
> as both an instance of the class of species of grape and a class of grape 
> instances.  Maybe a response might include something of that nature.  The 
> world just ain't layered.

Yes, that seems responsive to the comment.

Another possible alternative is for the chair
to rule this discussion out of scope on charter grounds;
to reply to the commentor that the WG isn't chartered
to explore alternative designs. That's cheaper
in the short-run, but the cost of actually trying
to satisfy the commentor should be weighed against
the risk that the comment will come back during
proposed recommendation review, from a member,
when it will be in order to say "well, we're not
interested in what we chartered you to do any more."



Meanwhile...
I like the approach of writing up the constrained
form of RDFS that matches some of the FOL/UML/OOP
intuitions... I'd like that to be a separate NOTE,
though.

-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



