docno="lists-053-0999069"
received="Sun Jun  8 12:40:43 2003"
isoreceived="20030608164043"
sent="08 Jun 2003 13:42:25 +0100"
isosent="20030608124225"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="MT Bug?"
id="1055076145.25118.15.camel@localhost.localdomain"
expires="-1"

To:w3c-rdfcore-wg@w3.org



Fiddling about with the MT, I noticed:

The closure rule se1 is defined such that given a bnode as the object of
a triple, it will generate a similar triple with a different bnode. 
When applied recursively, this will generate an infinite number of
triples.  Similarly for se2.

The current official Ed's draft of the MT

  http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#ClosRules

states:

[[
2. Apply the rules se1 and se2 and the following RDF closure rules
recursively to generate all legal RDF triples (i.e. until none of the
rules apply or the graph is unchanged.) Here xxx and yyy stand for any
URIref, blank node or literal, aaa for any URIref.
]]

Given the definitions of se1 and se2, the terminating condition can
never be met, unless the definition of 'aaa' is intended to overrides
that given in the definition of se1 and se2.  I'm confused.

I suggest that the MT adopt a uniform terminology throughout, e.g. 'aaa'
always means just a URIref throughtout, or whatever convention the
editor finds most appropriate.

What is the current position on the size of the closures generated by
these rules?  Is it the intent to make them as small as we reasonably
can?  Does it matter?  Was it the editors intention that the rules
generate this infinite set of triples?

Brian



