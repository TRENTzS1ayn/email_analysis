docno="lists-053-1033385"
received="Mon Jun  9 17:42:55 2003"
isoreceived="20030609214255"
sent="Mon, 9 Jun 2003 16:42:52 -0500"
isosent="20030609214252"
name="pat hayes"
email="phayes@ihmc.us"
subject="blank nodes out the wazoo"
id="p05210614bb0a89699067@[10.0.100.24]"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org

While fixing a silly mistake in the MT document, I noticed the 
following. We require that RDF graphs contain no redundancies in the 
sense that the same triple cannot occur more than once in the graph. 
However, they can contain redundancies in the sense that a triple 
with a bnode in it can be duplicated with a different bnode, even 
though the resulting triples would look the same in a graph diagram. 
The resulting graph has no extra information in it, but this quirk 
allows an RDF graph to have infinitely many consequences. For 
example, a single triple

a p b .

has infinitely many consequences;

_:x p b .
a p _:y .
_:z1 p _:z2 .
_:z3 p _:z4 .
-:z5 p _:z6 .
....

where all these bnodes are distinct; see attached jpeg.

My question is, does the WG feel that it might be worth ruling this 
out as a syntactic possibility? If this kind of bnode-duplication 
were ruled out, then the set of graphs simply entailed by any RDF 
graph would be finite.  That would generalize the 
no-duplicate-triples condition implicit in our definition of a graph 
as a set, to treat triples which 'look' the same when you erase the 
bnode labels as though they literally were the same.

Pat


-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola(850)202 4440   fax
FL 32501(850)291 0667    cell
phayes@ihmc.us       http://www.ihmc.us/users/phayes





application/mac-binhex40 attachment: blank_nodes_wazoo.jpg




