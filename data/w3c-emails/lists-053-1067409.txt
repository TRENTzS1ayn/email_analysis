docno="lists-053-1067409"
received="Tue Jun 10 09:59:40 2003"
isoreceived="20030610135940"
sent="Tue, 10 Jun 2003 08:59:35 -0500"
isosent="20030610135935"
name="pat hayes"
email="phayes@ihmc.us"
subject="Re: Closure Rule rdf2 generates infinite set of triples"
id="p05210618bb0b923b50b6@[10.0.100.24]"
charset="us-ascii"
inreplyto="1055238622.3015.5.camel&#64;dhcp-91-136.hpl.hp.com"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org


>I noticed that closure rule rdf2 in
>
>   http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#rdf_entail
>
>will generate an infinite number of triples from any triple with an xml
>literal as its object.

Is that really the case? I still have not got a clear picture of what 
the XMLliteral value is supposed to be or how it relates to the 
lexical form, but my understanding was that the lex2value mapping was 
a pretty simple normalization process, so that the set of lexical 
forms which map to the same 'value' would be reasonably small.

>I was wondering if there was a reason to prefer the form of the closure
>rule given over one of the form:
>
>sss1 ppp1 xml1
>sss2 ppp2 xml2
>
>|=
>
>sss1 ppp1 _:x
>sss2 ppp2 _:x
>
>where xml1 and xml2 denote the same XML literal value.

Im not sure if that would be sufficient to find all entailments, but 
I'll think about it.

BTW< there is an obvious way to limit se1 and se2 to keep those 
closures finite, which I suspect you already noticed, when I read you 
earlier message more carefully: do not apply them to bnodes. Duh.

Pat



-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola(850)202 4440   fax
FL 32501(850)291 0667    cell
phayes@ihmc.us       http://www.ihmc.us/users/phayes



