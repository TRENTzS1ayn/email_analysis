docno="lists-053-11811425"
received="Mon Sep  1 23:07:59 2003"
isoreceived="20030902030759"
sent="Mon, 1 Sep 2003 20:08:09 -0700"
isosent="20030902030809"
name="pat hayes"
email="phayes@ihmc.us"
subject="Action needed: subClassOf on datatypes"
id="p06001a1cbb79af17ac3c@[10.0.1.4]"
charset="us-ascii"
expires="-1"


To:w3c-rdfcore-wg@w3.org
Cc:"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>


Guys, this is to point out a recently identified buglet in the 
datatype semantics and to outline  alternative ways to deal with it. 
Mia culpa for not catching this earlier, but we need to fix it 
somehow.

Recall that we weakened the conditions on rdfs:subClassOf a while 
back, so that being a subset was a necessary but not sufficient 
condition for being a subClass. This means that the inference rule 
rdfD4  is not valid, since even ddd's value space is a subset of 
eee's value space and they are both datatypes, it still doesn't 
necessarily *follow* that one is an rdfs:subClassOf the other.

This means in turn that the text case we discussed 2 weeks ago which says that
xsd:integer rdfs:SubClassOf xsd:number .
is XSD-entailed by the empty graph, is wrong. In fact, the only 
subclass assertions which follow from the empty graph are those of 
the form

aaa rdfs:subClassOf aaa .
aaa rdfs:subClassOf rdf:Resource .

even in D-interpretations.
----

I can think of four ways to fix this.

(a) modify the test case doc by deleting the test case;
(b) modify the test case to say that this only follows under the 
strengthened extensional semantic conditions on rdfs:subClassOf 
described in section 4.1 of the semantics document;
(c) modify  the test case to say that the case is D-consistent with 
the empty graph, not that it is D-entailed by it;
(d) modify the semantics of D-interpretations to insist that datatype 
class subsetting *is* treated extensionally, so that the rule rdfD4 
is valid and the test case is OK. This can be done by adding the 
following semantic condition on D-interpretations:

if <aaa, x> and <bbb, y> are in D and the value space of x is a 
subset of the value space of y, then <x,y> is in 
IEXT(I(rdfs:subClassOf))

I would vote against (b), and think that (c) is wimpy; I think (a) 
(or (c) ) is the best solution, but would be willing to go with (d) 
if the WG feels that we *ought* to impose extensional conditions on 
datatype classes.  In rule terms, do y'all think that rdfD4 *ought* 
to be a valid rule (ie to be undeniably true under all 
circumstances), or would it be better to allow people to make, but 
also be free to not make, subClassOf assertions about 'external' 
datatypes? I like that latter approach, myself, because it is more in 
line with the intensional approach we have adopted generally, and it 
neatly sidesteps issues involving identity versus equality and other 
wierd stuff that seem to arise in XSD discussions. On the other hand, 
it means work for some other editors, rather than for me.

I have versions of the semantics document ready for both alternatives 
(a or c) and (d).

Pat
-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola(850)202 4440   fax
FL 32501(850)291 0667    cell
phayes@ihmc.us       http://www.ihmc.us/users/phayes



