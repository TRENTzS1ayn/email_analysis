docno="lists-053-12991327"
received="Wed Sep 10 05:29:39 2003"
isoreceived="20030910092939"
sent="Wed, 10 Sep 2003 12:28:11 +0300"
isosent="20030910092811"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: I18N Issue alternative: collapsing plain and xml literals"
id="A03E60B17132A84F9B4BB5EEDE57957B026302EF@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="I18N Issue alternative: collapsing plain and xml literals"
expires="-1"


To:<Patrick.Stickler@nokia.com>,<gk@ninebynine.org>,<danbri@w3.org>,<bwm@hplb.hpl.hp.com>
Cc:<w3c-rdfcore-wg@w3.org>,<Patrick.Stickler@nokia.com>



> And since the escaping will protect the non-markup based 
> semantics of any markup characters occurring literally in
> plain strings, there is no confusion when comparing strings
> with markup and strings that just look like they have markup
> since they won't be the same string in the graph. I.e.
> 
>           in RDF/XML                 in graph
>   plain: "<b>foo</b>"               "&lt;b&gt;foo&lt;/b&gt;"
>   XML:   "<b>foo</b>"               "<b>foo</b>"


It thus, becomes a task for us to explain to users how/why
a plain literal with what looks like markup is not the same
as an XML literal with markup.

So if the start out with

<rdf:Description rdf:about="#something" dc:title="Foo"/>

and later want to make that title bold, they can't simply 
change it to

<rdf:Description rdf:about="#something" dc:title="<b>Foo</b>"/>

but have to use

<rdf:Description rdf:about="#something">
   <dc:title rdf:parseType="Literal"><b>Foo</b></dc:title>
<rdf:Description>

I.e. they have to *say* in the RDF/XML that they are now
using text with markup rather than just text.

But this also means that one can define the rdfs:range of
a property as rdfs:Literal, define a value without markup,
the later decide you want to add markup (which requires
using rdf:parseType="Literal") without any change to the
semantics of the property itself or any artificial division
between text and text with markup.

Patrick



