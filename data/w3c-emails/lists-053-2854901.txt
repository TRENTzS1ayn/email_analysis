docno="lists-053-2854901"
received="Sat Mar  1 14:35:50 2003"
isoreceived="20030301193550"
sent="Sat, 1 Mar 2003 12:35:34 -0700"
isosent="20030301193534"
name="pat hayes"
email="phayes@ai.uwf.edu"
subject="Re: reagle-01, reagle-02 issues"
id="p05111b17ba86b9fc45cb@[10.0.100.86]"
charset="iso-8859-1"
inreplyto="3E5FF626.7050406&#64;hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hplb.hpl.hp.com>
Cc:w3c-rdfcore-wg@w3.org


>>I took this comment as a rhetorical question meaning, "why bother 
>>even getting into canonicalization if you have implementation 
>>variance?" and hence suggesting a fourth option, which you did not 
>>consider:
>>
>>D. Ignore XML canonicalization and treat XML literals as strings, 
>>ie the L2V mapping is the identity.
>>
>>Then the entire rdf:XMLliteral datatype machinery is just an 
>>elaborate way of encoding the old 'XML bit', which I thought was 
>>the original intent in any case. Introducing XML canonicalization 
>>seems to have been one those neat ideas that got slipped in without 
>>too much discussion and has turned out to be a tar-pit. I am 
>>particularly concerned that this ugly mess is now centrally 
>>included in the very core of RDF. I would hope that many 'cheap and 
>>cheerful' RDF engines wouldn't even want to know about XML, still 
>>less about XML canonicalization.
>
>This really does not meet the requirements ...
>
>XML parsers really really have variability, when building RDF/XML 
>parsers we have to work out how to deal with that.

I do not see why this is a central issue for us. We have said that 
the definitive RDF syntax is the graph. There is no variability in a 
graph, and that handles Webonts concerns. The issue you raise is an 
issue with XML, and I do not feel that XML's mess should be dirtying 
RDF's kitchen.

>So the simple webont examples where they want a single well-defined 
>denotation of some literal constructed with an 
>rdf:parseType="Literal" cannot be addressed simply by saying "use 
>the original string".

We can tell Webont that a given RDF graph has a single well-defined 
denotation. The issue arising from XML's variability, if real, should 
be addressed by the definition of RDF/XML

>In some real contexts there isn't a string to use (e.g. parsing a DOM tree).

I do not understand this. The RDF graph syntax is required to have a 
string in every literal. There is always a string to use.

>
>We could have put all the work in the parser, and then the semantics 
>could just use the string - that may be your preference, but it's 
>too late now.

I don't think it is too late.

>In practice I would expect a webont impl to work that way. However, 
>I also believe in practice that there will be cheaper parsers for 
>low footprint environments which don't do this.

If I understand you, any parser which does not do this will produce 
ambiguous RDF/XML.

Again, I disagree that it is too late to do this. We are not under 
any obligation to repair deficiencies in XML. I propose that we 
simply assert that we are not responsible for variability in XML 
parsers, and that the RDF graph is the definitive RDF syntax.

Pat

>Jeremy


-- 
---------------------------------------------------------------------
IHMC(850)434 8903 or (650)494 3973   home
40 South Alcaniz St.(850)202 4416   office
Pensacola??????????????(850)202 4440   fax
FL 32501???????????(850)291 0667    cell
phayes@ai.uwf.edu          http://www.coginst.uwf.edu/~phayes
s.pam@ai.uwf.edu   for spam



