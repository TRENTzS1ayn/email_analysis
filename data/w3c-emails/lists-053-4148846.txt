docno="lists-053-4148846"
received="Fri Mar 14 10:40:49 2003"
isoreceived="20030314154049"
sent="Fri, 14 Mar 2003 10:40:44 -0500"
isosent="20030314154044"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: summary of reification semantics issues (material for  discussion)."
id="51EC7581-5633-11D7-887D-000393914268@w3.org"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20030314103240.01f4dd60&#64;127.0.0.1"
expires="-1"

Cc: pat hayes<phayes@ai.uwf.edu>,w3c-rdfcore-wg@w3.org
To: Graham Klyne<GK@NineByNine.org>




On Friday, Mar 14, 2003, at 05:41 US/Eastern, Graham Klyne wrote:

> I have the feeling that this statements/statings de re/de dicto issue 
> is not well-enough understood by a wide enough audience to be nailed 
> down in a recommendation at this time.  Real experience is patchy and 
> sometimes contradictory.

That isn't normally what we like to put in a standards :-)

> Tim, from what I see, most of your work in this area has been based on 
> N3 formulae rather than the "reification" vocabulary, which are in any 
> case outside "standard" RDF as currently described.  (I happen to like 
> that approach, but that's not the issue here.)

Yes. *

> As a working group, we were faced with this reification vocabulary 
> that our charter required we had to do something with.  Deprecation 
> was an option, but on balance was not considered right in this case.  
> I don't think it fundamentally needs to be in the RDF base language 
> (one can invent additional vocabularies for similar purpose, when 
> required), but that's not the starting position we were given.

I know the starting position was to change as little as possible.  I 
also appreciate the group's wanting to move on. On the other side
of the scale, the reification stuff in the current spec is as you say 
very little
understood. It is not used (widely?), is confusing to newcomers, and 
adds a disproportionate of
complexity to parsers (in its current form).  The take-up of RDF is 
limited
significantly and validly by a newcomer's impact with the reification 
bit of the spec.
If it were in the spec, it would be reasonable to be in a module, with 
no pretense
at being fundamental or core.  As it is, it is a bit of an 
embarrassment, as it is in a Rec
but probably wouldn't have passed CR by current standards.
Maybe the balance should be tipped a wee bit.

> In summary, I don't think this discussion is greatly helpful for the 
> *working group* at this time, and that we should clarify the existing 
> vocabulary in a way that is least disruptive, and recognize that it is 
> not the last word on these issues.

I'm just not sure that that is the fastest way to victory.  I haven't 
looked at the cost of
taking it out in that I don't know who actually uses it.  From the 
parser's point of view,
of course, it has zero cost as the parser can remain the same, just the 
conformance
requirement is dropped.

One of the tests of the web community is the extent to which it
can do a spring-cleaning of the existing layers to spruce them up for 
later additions.
The removal of unnecessary clutter is not something the standards 
processes were initially
set up to do, but it is an important duty, and we should do it when we 
can.

tim
sans chapeau

______________
* ((I have tried to reify formulae (cwm's old --flatten and --reify) , 
and Sandro has also reified them, but the initial de-re approach 
without quoting was clearly wrong.  It's nice to be able to convert any 
nested set of formulae into a flat graph for transport through flat 
graph world - and even maybe writing the axioms for formula operations 
like log:include in terms of that graph. The proof output (cwm's  not 
working --why option) runs into the same problem. So it would have been 
nice to have had a reification vocabulary.  But I don't see other 
examples of people actually using it in practice, so it shouldn't be in 
the RDF core.  I think it will come out of the definition of formulae, 
and I would love it if that's how we do rules and query but I don't 
know.))



