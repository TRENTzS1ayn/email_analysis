docno="lists-053-4389687"
received="Fri Mar 21 09:54:39 2003"
isoreceived="20030321145439"
sent="Fri, 21 Mar 2003 15:54:49 +0100"
isosent="20030321145449"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: comment horrocks-01"
id="BHEGLCKMOHGLGNOKPGHDCEENCBAA.jjc@hpl.hp.com"
charset="iso-8859-1"
inreplyto="comment horrocks-01"
expires="-1"

To:<w3c-rdfcore-wg@w3.org>




I missed this ...

Some examples of why we might want to reason about comments:

1:

<rdf:Property rdf:about="&my;comment">
  <rdfs:subPropertyOf rdf:resource="&rdfs;comment"/>
  <my:comment>
   I use this property to distinguish comments made by me
   from other rdfs:comments.
  </my:comment>
</rdf:Property>


2: (In OWL Full)

<owl:Class rdf:ID="someThings">
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="&rdfs;comment" />
      <owl:hasValue>
This thing is in the class someThings.
      </owl:hasValue>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Class>


The first seems to be the whole point of having RDF(S) being able to talk
about itself. User level extensions are permitted - if you don't like that
work in OWL DL or a subset.

The second is significant because we have dropped rdf:aboutEach and
rdf:aboutEachPrefix.
This shows how an rdf:aboutEach type scenario can be approached in OWL - put
all the items we wish to discuss in a class and then use a restriction - in
this case on rdfs:comment, to add a comment to every resource in that class.

A true about each can be done in the following way in OWL Full:

<owl:ObjectProperty rdf:about="&eg;hasMember">
  <owl:inverseOf rdf:resource="&rdfs;member"/>
</owl:ObjectProperty>
<owl:Restriction>
  <owl:onProperty rdf:resource="&eg;hasMember"/>
  <owl:hasValue rdf:resource="#aContainer"/>
  <rdfs:subClassOf>
    <owl:Restriction>
      <owl:onProperty rdf:resource="&rdfs;comment" />
      <owl:hasValue>
This thing is in the container #aContainer.
      </owl:hasValue>
    </owl:Restriction>
  </rdfs:subClassOf>
</owl:Restriction>


I think we should be pointing Ian at XML comments ...
They seem to do what he really wants.

Jeremy



