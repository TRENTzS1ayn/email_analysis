docno="lists-053-5242271"
received="Sun May  4 16:02:53 2003"
isoreceived="20030504200253"
sent="Sun, 4 May 2003 22:03:04 +0300"
isosent="20030504190304"
name="Jeremy Carroll"
email="jjc@hpl.hp.com"
subject="Languageless Typed Literals"
id="200305042203.04182.jjc@hpl.hp.com"
charset="us-ascii"
expires="-1"

To:w3c-rdfcore-wg@w3.org




I offered to propose the removing of language tags from typed literals.

The only difficult bit is rdf:XMLLiteral.

This message is discussion, giving the options, and I will send the proposal 
in a follow-up.

Option 1:
XMLLiteral ceases to be a typed literal but we revert to the old treatment 
where it was simply a special.

Advantages:
It divorces the needs of typing from the needs of XMLLiteral.

Disadvantages:
Ugly (we had pre-last call comments asking us to change, which we did).
Systems are required to have significant support for XMLLiteral, and cannot 
combine XMLLiteral support with their datatype support. N-triples for XML 
literals changes, and the test cases have to change.
Significant support for XMLLiteral is required even by systems that do not 
support RDF/XML.

Option 2:
Literals can have both a type and a language tag if and only if the type is 
rdf:XMLLiteral, otherwise unchanged.

Advantages
Least change from the last call while correcting the mistake.

Disadvantages
Ugly. XMLLiteral becomes a syntactic exception as well as a semantic 
exception. (So our response to pfps-08 shifts from *reject* to *reject with 
menaces*)

Option 3: (this is the one I will propose)
Change syntactic treatment of rdf:parseType="Literal" to do the wrapping and 
include the language tag in with the rdf-wrapper element. The datatype 
rdf:XMLLiteral then does *not* have a language tag, but is essentially a 
sub-datatype of xsd:string (i.e. it is the identity mapping on a certain 
class of canonical XML documents)

Advantages:
XMLLiteral ceases to be a special case (except that it is in the RDF 
namespace, and gets handled in the semantics before any other datatyping)

Disadvantages:
Ugly for parser writers. N-triples for XML literals changes, and the test 
cases have to change.

Option 4:
Language tag is simply dropped from all typed literals including 
rdf:XMLLiteral

Advantages:
Simple. rdf:XMLLiteral ceases to be a special case. Parser tests for 
XMLLiterals do not change

Disadvantages:
Entailments concerning XMLLiterals and language tags change.
I would prompt the I18N WG to object. (I would see, for example, the ruby 
tests in
http://www.w3.org/2002/03owlt/editors-draft/draft/proposed-misc-200-xmlliteral
as overly prejudiced by such a change)

=====================

Option 4 in my mind is simply incorrect - there are XMLLiterals for which the 
language is semantic meaningful.

Option 3 requires the RDF/XML parser to deal with the problem in its entirety
Options 1 and 2 divide the problems amongst other components of a semantic web 
stack.

Jeremy



