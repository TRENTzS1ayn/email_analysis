docno="lists-053-5269528"
received="Mon May  5 06:07:22 2003"
isoreceived="20030505100722"
sent="Mon, 5 May 2003 13:07:19 +0300"
isosent="20030505100719"
name="Patrick.Stickler@nokia.com"
email="Patrick.Stickler@nokia.com"
subject="RE: Languageless Typed Literals"
id="A03E60B17132A84F9B4BB5EEDE57957B01B90D71@trebe006.europe.nokia.com"
charset="iso-8859-1"
inreplyto="Languageless Typed Literals"
expires="-1"


To:<jjc@hplb.hpl.hp.com>,<w3c-rdfcore-wg@w3.org>



> -----Original Message-----
> From: ext Jeremy Carroll [mailto:jjc@hplb.hpl.hp.com]
> Sent: 05 May, 2003 12:59
> To: Stickler Patrick (NMP/Tampere); w3c-rdfcore-wg@w3.org
> Subject: RE: Languageless Typed Literals
> 
> 
> 
> 
> 
> > My preferences, in order, most prefered to least preferred:
> > 
> > Option 4, 1, 3, 2
> > 
> > > Option 4 in my mind is simply incorrect - there are XMLLiterals 
> > for which the 
> > > language is semantic meaningful.
> > 
> > Well, why is it not unreasonable to require that, where an 
> xml:lang tag
> > is relevant to an XML literal, that it be specified 
> *within* the XML 
> > literal. Why do we have to do it for *every* XML literal 
> automatically?
> > 
> 
> That feels to me like a step backward from what M&S provides 
> (sort of).
> 
> e.g.
> <rdf:RDF xml:lang="en">
> ...
>   <eg:prop rdf:parseType="Literal">I did <em>not</em> 
> like that</eg:prop>
> ...
> </rdf:RDF>
> 
> ==>
> 
> <eg:prop rdf:parseType="Literal"><span xml:lang="en">I did 
> <em>not</em> 
> like that</span></eg:prop>

Point taken.

My strong preference is then for option 1, reverting (in a sense)
XML literals to the M&S definition.

This has the additional benefit that lexical forms can be left
as-is in the graph per the RDF/XML serialization and only need be 
canonicalized when testing for equality.

Thus, plain and XML literals both may take lang tags and neither
are typed literals nor fall within the scope of RDF datatyping.

Typed literals do not take lang tags, period.

This avoids all the headaches relating to the bizzare datatype
rdf:XMLLiteral.

Patrick



