docno="lists-053-5413038"
received="Tue May  6 04:25:47 2003"
isoreceived="20030506082547"
sent="Tue, 6 May 2003 10:24:52 +0200"
isosent="20030506082452"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: timbl-03"
id="BHEGLCKMOHGLGNOKPGHDCEJBCBAA.jjc@hpl.hp.com"
charset="iso-8859-1"
inreplyto="p05210641badc760bbdb8&#64;[10.0.100.12]"
expires="-1"

To:"pat hayes"<phayes@ai.uwf.edu>,"Dave Beckett"<dave.beckett@bristol.ac.uk>
Cc:<w3c-rdfcore-wg@w3.org>



> I personally agree
> with Tim that these (type List) triples are redundant, and I would
> bet that the OWL stuff, even if it does need them, could be trivially
> rewritten so that it did not. I was hoping that we could get back to
> Peter and find out whether he thought the problem was serious.


Peter punts the problem back to me - since I am the most recent person on
record as arguing for type triples in general (in OWL DL).

Here are my thoughts:

1: this is merely aesthetic either way
   People who don't/do want the type triples can have what they want simply
by not using the rdf:parseType="Collection" syntax (whichever way we
decide).

2: the triples *are* redundant
   It is easy to automatically add them; or for that matter, automatically
remove them.

3: the construct was added for OWL, and so the aesthetic judgement as to
whether they should be there or not in the convenience
rdf:parseType="Collection" syntax, should be made by WebOnt.

4: Given that in OWL DL and OWL Lite many type triples are needed, it is, in
my opinion, more aesthetic, to have these type triples also for Lists. The
need for type triples is principally to distinguish the various types of
user defined in Property in OWL Lite and OWL DL.

Jeremy



