docno="lists-053-5452473"
received="Tue May  6 08:37:13 2003"
isoreceived="20030506123713"
sent="Tue, 06 May 2003 12:50:41 +0100"
isosent="20030506115041"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="Re: Languageless Typed Literals"
id="5.1.0.14.2.20030506124054.01f4b008@127.0.0.1"
charset="us-ascii"
inreplyto="200305042203.04182.jjc&#64;hpl.hp.com"
expires="-1"


To: Jeremy Carroll<jjc@hpl.hp.com>,w3c-rdfcore-wg@w3.org


At 22:03 04/05/2003 +0300, Jeremy Carroll wrote:
>Option 3: (this is the one I will propose)
>Change syntactic treatment of rdf:parseType="Literal" to do the wrapping and
>include the language tag in with the rdf-wrapper element. The datatype
>rdf:XMLLiteral then does *not* have a language tag, but is essentially a
>sub-datatype of xsd:string (i.e. it is the identity mapping on a certain
>class of canonical XML documents)
>
>Advantages:
>XMLLiteral ceases to be a special case (except that it is in the RDF
>namespace, and gets handled in the semantics before any other datatyping)
>
>Disadvantages:
>Ugly for parser writers. N-triples for XML literals changes, and the test
>cases have to change.

Thinking about "Ugly for parser writers" ...

(1) It's true that the mapping from XML to N-triples is changed, but it 
seems to me that specific parser implementations still have a choice to 
return the XML content and wrapper information separately through their API.

(2) A minor variation on the proposal would be to include the <rdf-wrapper> 
*only* when there is a non-blank language tag that applies to the literal 
value.  Absent this, just return the content?  This would mean that many 
applications that don't use XML language tagging would not see any difference.

#g


-------------------
Graham Klyne
<GK@NineByNine.org>
PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E



