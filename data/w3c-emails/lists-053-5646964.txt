docno="lists-053-5646964"
received="Wed May  7 06:40:19 2003"
isoreceived="20030507104019"
sent="Wed, 07 May 2003 11:40:42 +0100"
isosent="20030507104042"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="RE: timbl-03 collection clutter"
id="5.1.0.14.0.20030507105315.03177740@localhost"
charset="us-ascii"
inreplyto="5.1.0.14.2.20030506220625.03057e60&#64;127.0.0.1"
expires="-1"


To: Graham Klyne<gk@ninebynine.org>, Dan Connolly<connolly@w3.org>, Jeremy Carroll<jjc@hplb.hpl.hp.com>, pat hayes<phayes@ai.uwf.edu>
Cc: Pat Hayes<phayes@ai.uwf.edu>,w3c-rdfcore-wg@w3.org


At 22:26 06/05/2003 +0100, Graham Klyne wrote:

[...]

>>Jeremy and Peter discussed the cost of relaxing that constraint,
>>and it seems, to me, to be considerable: the details of the
>>mapping of owl-dl-abstract-syntax to RDF graphs are somewhat
>>subtle and impact many parts of the S&AS spec, especially
>>the semantic layering bits.
>>http://www.w3.org/2001/sw/WebOnt/webont-issues.html#I5.3-Semantic-Layering
>
>I'm a bit puzzled by this comment.  The mapping in AS&S 4.1 describes how 
>to convert OWL abstract syntax into triples.  What we are discussing is 
>whether an RDF parser needs to generate these additional triples (which 
>are in any case entailed in any RDFS-interpretation).  I don't see how the 
>semantics of OWL abstract syntax can reasonably be dependent on the 
>behaviour of an RDF parser.

I would very much like to get this comment put to bed.

Summarizing:

DanC:

   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0040.html

[[
Jeremy and Peter discussed the cost of relaxing that constraint,
and it seems, to me, to be considerable: the details of the
mapping of owl-dl-abstract-syntax to RDF graphs are somewhat
subtle and impact many parts of the S&AS spec, especially
the semantic layering bits.
]]

[[
In sum, the rdf:List triples do serve a purpose in the graph
syntax of OWL; a purpose which rdfs:domain/rdfs:range won't
help with.
]]

PatH:

  http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0027.html

[[
I personally agree
with Tim that these (type List) triples are redundant, and I would
bet that the OWL stuff, even if it does need them, could be trivially
rewritten so that it did not.
]]

   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0041.html

[[
Seems to me that timbl-03 is a reasonable request which it would be
trivial for us to comply with and which identifies an error we made,
or maybe copied from DAML. The only reason to reject it was because,
we were told, Webont needed us to reject it; and apparently Webont
does not need us to reject it. So I think we should accept it.
]]

jjc:

   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0032.html

[[
    It is easy to automatically add them; or for that matter, automatically
remove them.
]]

jos:

   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003May/0043.html

[[
I believe you and Tim are right and I tested with my
http://lists.w3.org/Archives/Public/www-webont-wg/2003May/0025.html
[[
An experience that we implemented is that we create a
_:x rdf:type rdf:List.
triple when we load a
_:x rdf:rest _:y.
triple.
]]
dropped and it all worked out quite well
]]

So I'm confused.

Are we all agreed that the only reason to keep the rdf:type rdf:List 
triples would be if webont needed them?

DanC: the cost of updating the Owl specs to not require the extra type 
triples is 'considerable'.

PatH: It bet its not.

Jos: we can easily add/remove them as needed, so add them when needed.

Jeremy: we can easily add/remove them as needed. Its more aesthetic to 
remove them when not.

So:------------

PatH - you bet its trivial to change Owl not to need them - can you propose 
specific text for the change?

Question:  Which Owl needs them?

The purpose of a specification is to enable the development of maximally 
interoperable implementations.  Personally, I don't understand why we have 
to be so dogmatic about whether these triples are generated by a parser or 
not.  Can't we just encourage developers to offer control over whether or 
not they are produced?  Tim gets what he needs - no generation of 
unnecessary triples.  Pfps gets what he wants - no change.

Brian






   



