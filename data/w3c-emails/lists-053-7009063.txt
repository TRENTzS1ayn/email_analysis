docno="lists-053-7009063"
received="Fri May 16 08:02:54 2003"
isoreceived="20030516120254"
sent="Fri, 16 May 2003 13:02:23 +0100"
isosent="20030516120223"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: Semantics Spanner"
id="3EC4D34F.3080900@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="5.1.0.14.2.20030516110119.02ea8328&#64;127.0.0.1"
expires="-1"


To: Graham Klyne<gk@ninebynine.org>
CC: Jeremy Carroll<jjc@hpl.hp.com>,w3c-rdfcore-wg@w3.org, pat hayes<phayes@ai.uwf.edu>



Of the issues this afternoon only pfps-09 seems related; the fix for 
pfps-09 seems to have introduced this new problem.

I suspect changes like the following might work:

define a datatype interpretation with any partial function from the URIs in 
the vocabulary to the set of all L2V mappings;
a datatype interpretation that supports a URI uu as datatype dd is one that 
always maps uu to dd;
(essentially have an existential quantifcation over the datatypes)
this would then be monotonic.

Jeremy



Graham Klyne wrote:

> Hmm, yes, it seems problematic.  In particular, it seems to violate:
> 
> [[
> General monotonicity lemma. Suppose that S, S' are sets of RDF graphs 
> with every member of S a subset of some member of S'. Suppose that Y 
> indicates a semantic extension of  X, S X-entails E, and S and E satisfy 
> any syntactic restrictions of Y. Then S' Y-entails E.
> 
> In particular, if D' is a datatype map and D a subset of D' then if S 
> D-entails E it also S D'-entails E, provided that S and E both recognize 
> all the datatype urirefs in the domain of D'.
> ]]
> -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#dtype_interp
> 
> There is also some wording nearby about entailments of inconsistent
> 
> Imposing a syntactic constraint on a D-interpretation allowing
>   x rdf:type rdfs:Datatype .
> only if I(x) in D might help, since that would render the antcedent of 
> Peter's  first entailment syntactically invalid.
> 
> [[
> 1/      xsd:int rdf:type rdfs:Datatype .
>                 {<rdf:XMLLiteral,XMLLiteral>}-entails
>         rdf:XMLLiteral xsd:string rdf:type .
> 
> 2/      xsd:int rdf:type rdfs:Datatype .
>                 DOES NOT {<rdf:XMLLiteral,XMLLiteral>,
>                 <rdf:int,int>}-entail
>         xsd:string rdf:XMLLiteral rdf:type .
> ]]
> -- http://lists.w3.org/Archives/Public/www-webont-wg/2003May/0276.html
> 
> 
> But there's still a question of such statements in non datatyped 
> interpretations.  I think that's not a problem because there's no 
> constraint there that:
>   x rdf:type rdfs:Datatype .
> is false in all such interpretations, so the first entailment would not 
> hold.
> 
> #g
> -- 
> 
> At 11:19 16/05/03 +0300, Jeremy Carroll wrote:
> 
> 
>> On another list, it has been claimed that the current RDF MT editors 
>> draft has
>> non-monotonic datatyping.
>> If this is the case then it should be fixed.
>>
>> I will try and review this claim before the telecon today, I suggest 
>> others
>> might like to as well.
>>
>> The claim is that when foo is not a supported datatype then
>>
>> foo rdf:type rdfs:Datatype .
>>
>> is inconsistent, and hence entails everything.
>>
>> Thus, supporting an additional datatype foo, negates previously valid
>> entailments, and hence causes a datatyped system to layer 
>> non-monotonically
>> on top of a datatyped system.
>>
>> I personally find this a credible critique that should be taken 
>> seriously.
>> We may need to leave open any semantics issues affected :(
>>
>> The (cryptic) examples given in
>> http://lists.w3.org/Archives/Public/www-webont-wg/2003May/0276.html
>>
>> concern the minimal datatype system consisting of only rdf:XMLLiteral, 
>> and so
>> xsd:int plays the role of foo above.
>>
>> I note that this comment is based on the shadow space draft rather 
>> than Pat's
>> master copy - we may hope that magic has happened.
>>
>> Jeremy
> 
> 
> -------------------
> Graham Klyne
> <GK@NineByNine.org>
> PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E
> 



