docno="lists-053-7020708"
received="Fri May 16 08:21:30 2003"
isoreceived="20030516122130"
sent="Fri, 16 May 2003 13:21:10 +0100"
isosent="20030516122110"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="Re: Semantics Spanner"
id="3EC4D7B6.8080809@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="5.1.0.14.0.20030516125552.04f8a710&#64;localhost"
expires="-1"


To: Brian McBride<bwm@hplb.hpl.hp.com>
CC: Graham Klyne<gk@ninebynine.org>, Jeremy Carroll<jjc@hpl.hp.com>,w3c-rdfcore-wg@w3.org, pat hayes<phayes@ai.uwf.edu>


Here's the problem text:

[[
A D-interpretation which also satisfies the following condition is called 
an interpretation which is datatyped with respect to D:

if I(aaa) is in ICEXT(I(rdfs:Datatype)) then <aaa, I(aaa)> is in D

This condition recognizes membership in the class rdfs:Datatype as a 
sufficient condition for being a datatype, providing a simple form of 
'declaration' for a datatype in RDFS. Thus, a graph which entails a triple 
of the form

<ex:somedatatype> rdf:type rdfs:Datatype .

can be understood as asserting that "ex:somedatatype" denotes a datatype 
which is mapped from this URIref by the datatype map of any satisfying 
interpretation. Such an assertion does not in itself provide the 
information necessary to check that a graph actually satisfies the other 
semantic conditions, however. We will say that such a datatype URIref is 
recognized by the graph. The semantic conditions for rdfs-interpretations 
require the built-in datatype URIref 'rdf:XMLLiteral' to be recognized.
]]

I suspect occams razor can be applied liberally.


Here is the entailment proof:

xsd:int rdf:type rdf:Datatype .

is true in no { <rdf:XMLLiteral, XMLLiteral> } interpretations

thus

by reduction ad absurdum

xsd:int rdf:type rdf:Datatype .
{ <rdf:XMLLiteral, XMLLiteral> }-entails
nonsense nonsense nonsense .

Jeremy


Brian McBride wrote:

> At 11:10 16/05/2003 +0100, Graham Klyne wrote:
> 
>> Hmm, yes, it seems problematic.
> 
> 
> Can someone decode the cryptic problem statement and show where the dumb 
> entailment comes from.  I haven't spotted it yet, but looking through 
> the semantics spec I noticed:
> 
> 
> rdfD 4
> 
>   ddd rdf:type rdfs:Datatype .
>   eee rdf:type rdfs:Datatype .
> entails
>   ddd rdfs:subClassOf eee .
> 
> Seems to me that implies that the values spaces of xsd:string and 
> xsd:decimal are identical.
> 
> I presume I'm missing something.
> 
> Brian
> 
>>  In particular, it seems to violate:
>>
>> [[
>> General monotonicity lemma. Suppose that S, S' are sets of RDF graphs 
>> with every member of S a subset of some member of S'. Suppose that Y 
>> indicates a semantic extension of  X, S X-entails E, and S and E 
>> satisfy any syntactic restrictions of Y. Then S' Y-entails E.
>>
>> In particular, if D' is a datatype map and D a subset of D' then if S 
>> D-entails E it also S D'-entails E, provided that S and E both 
>> recognize all the datatype urirefs in the domain of D'.
>> ]]
>> -- http://www.w3.org/2001/sw/RDFCore/TR/WD-rdf-mt-20030117/#dtype_interp
>>
>> There is also some wording nearby about entailments of inconsistent
>>
>> Imposing a syntactic constraint on a D-interpretation allowing
>>   x rdf:type rdfs:Datatype .
>> only if I(x) in D might help, since that would render the antcedent of 
>> Peter's  first entailment syntactically invalid.
>>
>> [[
>> 1/      xsd:int rdf:type rdfs:Datatype .
>>                 {<rdf:XMLLiteral,XMLLiteral>}-entails
>>         rdf:XMLLiteral xsd:string rdf:type .
>>
>> 2/      xsd:int rdf:type rdfs:Datatype .
>>                 DOES NOT {<rdf:XMLLiteral,XMLLiteral>,
>>                 <rdf:int,int>}-entail
>>         xsd:string rdf:XMLLiteral rdf:type .
>> ]]
>> -- http://lists.w3.org/Archives/Public/www-webont-wg/2003May/0276.html
>>
>>
>> But there's still a question of such statements in non datatyped 
>> interpretations.  I think that's not a problem because there's no 
>> constraint there that:
>>   x rdf:type rdfs:Datatype .
>> is false in all such interpretations, so the first entailment would 
>> not hold.
>>
>> #g
>> -- 
>>
>> At 11:19 16/05/03 +0300, Jeremy Carroll wrote:
>>
>>
>>> On another list, it has been claimed that the current RDF MT editors 
>>> draft has
>>> non-monotonic datatyping.
>>> If this is the case then it should be fixed.
>>>
>>> I will try and review this claim before the telecon today, I suggest 
>>> others
>>> might like to as well.
>>>
>>> The claim is that when foo is not a supported datatype then
>>>
>>> foo rdf:type rdfs:Datatype .
>>>
>>> is inconsistent, and hence entails everything.
>>>
>>> Thus, supporting an additional datatype foo, negates previously valid
>>> entailments, and hence causes a datatyped system to layer 
>>> non-monotonically
>>> on top of a datatyped system.
>>>
>>> I personally find this a credible critique that should be taken 
>>> seriously.
>>> We may need to leave open any semantics issues affected :(
>>>
>>> The (cryptic) examples given in
>>> http://lists.w3.org/Archives/Public/www-webont-wg/2003May/0276.html
>>>
>>> concern the minimal datatype system consisting of only 
>>> rdf:XMLLiteral, and so
>>> xsd:int plays the role of foo above.
>>>
>>> I note that this comment is based on the shadow space draft rather 
>>> than Pat's
>>> master copy - we may hope that magic has happened.
>>>
>>> Jeremy
>>
>>
>> -------------------
>> Graham Klyne
>> <GK@NineByNine.org>
>> PGP: 0FAA 69FF C083 000B A2E9  A131 01B9 1C7A DBCA CB5E
> 
> 



