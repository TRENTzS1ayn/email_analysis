docno="lists-053-7663864"
received="Wed May 28 14:01:45 2003"
isoreceived="20030528180145"
sent="Wed, 28 May 2003 11:01:25 +0100"
isosent="20030528100125"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="Re: vass-01 flat layering"
id="5.1.0.14.0.20030528104542.02db0990@localhost"
charset="us-ascii"
inreplyto="p05210607baf9857cfe53&#64;[10.0.100.24]"
expires="-1"


To: pat hayes<phayes@ai.uwf.edu>
Cc:w3c-rdfcore-wg@w3.org


At 16:19 27/05/2003 -0500, pat hayes wrote:
>>Danbri and I have been discussing issue:
>>
>>   http://www.w3.org/2001/sw/RDFCore/20030123-issues/#vass-01
>>
>>Its quite hard to get a crisp quote of the problem from the email thread 
>>but I think the issue is that schema does not layer the same way as, say 
>>UML, in that classes can be members of themselves and one can take a 
>>subproperty of subPropertyOf or rdf:type.
>>
>>I think we need to clearly articulate the advantages of the design choice 
>>that has been made.
>
>I disagree. first, we did not make it, it was imposed by our charter. 
>Second, the only objection to it from this comment can be succinctly 
>phrased as "I don't like that way of doing it" which does't really need to 
>be dignified with a careful answer, particularly in view of the fact that 
>when asked for clarification, the commentor's response was somewhere 
>between unhelpful and downright rude.

The question of layering has been made many times by many people.  The RDF 
schema approach is unusual and it is not uncommon for folks, e.g. those 
familiar with UML, to ask "why did you do it differently".  I was kinda 
hoping there was a relatively simple answer to that question.  And if there 
is, I see no reason for not offering it in response to this comment.

I personally find the example in the webont docs quite convincing.  It 
seems to be that in general I want to be able to treat Cabernet Sauvignon 
as both an instance of the class of species of grape and a class of grape 
instances.  Maybe a response might include something of that nature.  The 
world just ain't layered.



>>I suggest the following reason for the design choice and why we should 
>>not change.  I welcome comments and other suggestions:
>>
>>1) RDFS is designed to be a lower layer for the semantic web stack that 
>>is extended by restriction.  All structure at this layer is imposed on 
>>all higher layers.  A layered structure is not necessary and the 
>>principle of minimal restriction suggests it should be omitted.
>>
>>2) A further consideration is the cost of change at this point.  To 
>>switch to a layered approach would require a massive rethink and would 
>>affect not only the RDFCore specs but also OWL.  Only a show stopping 
>>problem with the current design could justify the cost of such a change.
>>
>>We note that it is possible to build more strictly layered languages on 
>>top of RDF(S), Owl DL/Lite being examples.
>
>That might be well worth articulating in more detail. I think we could do 
>a fairly exact job on this which a lot of people would find 
>helpful.  Since Jeremy has already done the donkey work for this in 
>defining how to tell if an OWL-RDf graph is in OWL-DL ( which is precisely 
>the 'layered' subset of OWL in this sense), we should be able to easily 
>adapt his algorithm to define a 'layered style' of writing RDF and put it 
>in an appendix somewhere. I am willing to tackle writing a draft of 
>this.  It would be relevant to vass-01, pan-01 and Qu-03.

I'm not looking for doing new work at this point.  Is this work *necessary* 
to resolve these comments.  I would like to see simple responses to the 
comments.  I'm not at all keen on new appendices.  There is not just the 
work of writing them, they need to be reviewed etc.  Please lets focus on 
getting the current tasks completed.  We are supposed to be done by end of 
June after all.

Pat, will you be able to propose resolutions for outstanding semantics 
issues for this weeks telecon?

Brian



