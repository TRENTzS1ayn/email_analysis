docno="lists-053-9893555"
received="Thu Oct  2 16:47:37 2003"
isoreceived="20031002204737"
sent="Thu, 2 Oct 2003 16:47:20 -0400 "
isosent="20031002204720"
name="Francois Yergeau"
email="FYergeau@alis.com"
subject="RE: Fwd &quot;a comment on NFC&quot;"
id="F7D4BDA0E5A1D14B99D32C022AEB73660EB3AC@alis-2k.alis.domain"
charset="iso-8859-1"
inreplyto="Fwd &quot;a comment on NFC&quot;"
expires="-1"


To:"'Brian McBride'"<bwm@hplb.hpl.hp.com>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>,w3c-i18n-ig@w3.org,w3c-rdfcore-wg@w3.org


Brian McBride wrote:
> I wonder if we might look at it this way.  Lets be careful who we are 
> talking to with these two statements.  I suggest they are 
> targetted at different audiences, and are compatible.

There's a more abstract notion behind the statements: un-normalized data is
evil.  It has serious interop and security implications.

Analogy: stealing is evil.

> When we say literal strings SHOULD be in NFC we are speaking 
> to creators 
> of RDF data saying you SHOULD create RDF literal strings that 
> are in NFC 
> (but MAY NOT, if "the full implications must be understood 
> and carefully weighed).

We tell visitors to a store: "Thou shalt not steal".

> When we say that implementations SHOULD accept literal 
> strings that are 
> not in NFC we are talking to implementors who can rely on the 
> creators 
> of the RDF that is not in NFC to have made a sensible choice, but who 
> MAY refuse to process it if they think they know better.

Does the store owner tell his employees to trust all visitors, even those
who appear to go out with stuff they haven't paid.  I think not.

> Does that fly?

I'm afraid not.  Early-normalization cannot work without verification.
Therefore SHOULD check and SHOULD NOT accept un-normalized text.  You may
have valid reasons to trust the sender, OK, we have SHOULDs and we even have
specific language about "certified text" in Charmod.  But the basic idea is
it's evil, don't do it and catch it when you can.

-- 
Fran?ois



