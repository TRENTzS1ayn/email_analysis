docno="lists-054-0293368"
received="Thu Mar 18 05:15:22 2004"
isoreceived="20040318101522"
sent="Thu, 18 Mar 2004 10:09:36 +0000"
isosent="20040318100936"
name="Graham Klyne"
email="gk@ninebynine.org"
subject="Re: comments on Web Architecture First Edition"
id="5.1.0.14.2.20040318093749.02d0ec70@127.0.0.1"
charset="us-ascii"
inreplyto="p06001f10bc779f2e9ec4&#64;[10.0.100.76]"
expires="-1"


To: Pat Hayes<phayes@ihmc.us>
Cc:w3c-rdfcore-wg@w3.org


Pat,

With reference to:
   http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2004Mar/0016.html

At 16:38 17/03/04 -0600, Pat Hayes wrote:
>The following are some personal comments on 
>http://www.w3.org/TR/2003/WD-webarch-20031209/

[...]

It's difficult not to be overwhelmed by your missive.  I think it raises 
many important points, but I'd be concerned that an attempt to follow the 
detailed recommendations proposed without some broader-level initiative 
could lead to a document that fails to educate any of its intended audience.

I found the explicit distinction between the terminology surrounding 
Computational (C) and Descriptive (D) languages was very helpful in drawing 
out the problem areas.  I'd like to pursue this line a little.

Historically, the World Wide Web has been a computational system 
(notwithstanding the semantic aspects that were apparently part of TimBL's 
early vision), and the language with which it has been described draws upon 
computational terminology, and did not cause any obvious conflicts.  But 
with emergence of the Semantic Web comes a need to also use descriptive 
terminology.  It seems that the confusion we face is needing language to 
describe a system that is both computational and descriptive.

Further, it seems to me that the vast majority of people who build software 
for the WWW have a distinctly computational bias.  It seems it is a very 
small minority who have any real understanding of the implications of the 
descriptive approach (I think the model theory document goes a long way to 
explain these issues, but it still takes a great effort of understanding 
for someone steeped in computation to "get it").

It now seems to me that this combination of computation and description is 
somehow right at the heart of Web architecture, and needs to be 
elucidated.  Especially for the armies of software developers, steeped in 
computational understandings, who write the software that makes the Web a 
reality.  This is, I think, a non-trivial challenge of education.

I find myself wondering if Roy Fielding's REST architecture can be seen as 
an early attempt to bridge this gap, at least for computational artifacts 
that have a concept of state.  But there remain holes, especially in the 
articulation of resources.  How well would REST fare if Resources were cast 
as those things (anything) that can have a formal description (ala RDF, or 
KIF), and some mediating abstraction used to be the computational thing 
that has a state whose data-representation can be presented on the 
web?   (Hmmm... This starts to sound like TimBL on 
http://www.w3.org/2001/tag/issues.html#httpRange-14 and fragments, I think.)

Maybe the biggest challenge is to find appropriately distinguished 
terminology that allows us to talk about computational and descriptive 
matters in the same sentence?

Is there anything here that could be summarized in a couple of pages, and 
which might provide a skeleton around which to arrange the remaining 
aspects of the Web architecture descriptions?

#g


------------
Graham Klyne
For email:
http://www.ninebynine.org/#Contact



