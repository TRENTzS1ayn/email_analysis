docno="lists-054-10255086"
received="Tue Oct 15 20:51:04 1996"
isoreceived="19961016005104"
sent="Tue, 15 Oct 1996 20:49:05 -0400"
isosent="19961016004905"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: B.9 Formal system, public identifiers?"
id="199610160049.UAA12041@nathaniel.ebt"
inreplyto="9610152317.AA20594&#64;sqrex.sq.com"
expires="-1"


To:lee@sq.com
CC:w3c-sgml-wg@w3.org

>> I think the figures depend largely on how much code reuse is in effect.
>> Most people dealing with XML probably already have code to use. For those
>> that don't, I don't see 5000 lines of code as a major overhead, because
>> the code is very straightforward.
>
>No-one in the world has any XML code today.

True, but they do have URL and/or name resolution code.

>For me, if something takes James 5,000 lines, it is probably complex enough
>that I would leave it out of the XML implementation I was thinking of
>writing in my spare time when it settles down.  If FSIs end up being
>required by XML, I won't use XML for my purpose.

Well, that's you. I would use them.

>Although I can write about 500 lines of working C in a day, I am very
>tired on the next day :-), and it takes several days of debugging.  So I
>can get between 100 and 300 working, tested, debugged lines of code done
>in a day, averaged out over a week.

Well, one of my strengths is prototyping, and the best I've ever
managed was 40,000+ lines of C++ in a month (working, reasonably well
tested, but not production level code), and recently 27,000 lines of
JAVA in 3 weeks, but that says little about the *type* of code. FSI's
and whatnot are simple enough to make them a SMOP, especially if they
are constrained by a "minimum" level of functionality. I would also
expect free code to be made available over time. 

>A possible compromise might be to allow a url: prefix to a URL, and
>say that.  This is forwards compatible -- you can add URNs later when
>they are working, and any other mechanism you want.

Or constrain the possible set of FSI's...

>Note that one very very useful feature in Panorama is support for partial
>URLs. 

Relative URLs? They are very useful, and a standard feature in most
browsers now.



