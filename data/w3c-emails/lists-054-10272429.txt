docno="lists-054-10272429"
received="Tue Oct 15 23:54:07 1996"
isoreceived="19961016035407"
sent="Tue, 15 Oct 1996 22:51:51 -0500"
isosent="19961016035151"
name="Len Bullard"
email="cbullard@HiWAAY.net"
subject="Re: B.9 Formal system, public identifiers?"
id="32645BD7.1D2F@HiWAAY.net"
charset="us-ascii"
inreplyto="2.2.32.19961015224053.0095e0e0&#64;jclark.iserver.com"
expires="-1"


To: James Clark<jjc@jclark.com>
CC: David Durand<dgd@cs.bu.edu>,w3c-sgml-wg@w3.org

James Clark wrote:
> 
> At 16:27 15/10/96 -0400, David Durand wrote:
> 
> > If we specify FSI syntax, and
> >then restrict the FSIs to be URLs, there is a nice path to more-robust
> >identifiers at no more cost than we incur by implementing URLs to
> >begin with.
> 
> There is a cost to the user: instead of entering a kind of thing they are
> familiar with, namely a URL, they have to enter something that they are not
> familiar with, namely an FSI.
> 
> If we stick to URLs now, we can still support FSIs in the future: any FSI
> must include < and > but these two characters are not allowed in URLs.  It's
> ridiculous to force users to type <url> at the beginning of all their URLs
> when it's completely unnecessary to do so.
> 
> >    But making it impossible to ever do the right thing and use
> >location independent naming seems a high price to bear.
> 
> URL syntax is extensible: why can't it be used to do location-independent
> naming? Something like fpi://W3C/DTD/HTML_3.2 is a perfectly good URL.  I
> can't resolve it, but then I can't resolve FPIs either.
> 
> Location-independent naming is not a problem specific to XML.  We should use
> whatever general solution gets adopted for the WWW, rather than trying to
> come up with a solution specifically for XML.
> 
> James

The question:  are the WWW protocols the responsibility 
of any notation or any language for defining a notation?
In a framework, protocols can always be added, but for 
system integration and stability, redoing existing ones 
is expensive.

After so many years of work in HyTime, I do not wish to 
see the strong concepts of HyTime location and address types 
disappear.  

But at this time, the established WWW protocols are
in place and they work.   XML has the power to return to us the 
capability to design our own structures and use them 
as see fit in operations on the data.  To me, there
is the evolution of XML.  Version 1.0 
should be be a perfect fit to existing frameworks.
Else, it will not be adopted. 

VRML used this strategy successfully.  If we adopt 
this strategy, our interoperability problems and 
many of our portability problems are reduced significantly.

I think James is right.  2.0 is a new day.

len



