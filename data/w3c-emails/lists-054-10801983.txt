docno="lists-054-10801983"
received="Fri Oct 18 01:04:18 1996"
isoreceived="19961018050418"
sent="Fri, 18 Oct 1996 01:02:01 -0400"
isosent="19961018050201"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: C.7 inclusions and exclusions?"
id="199610180502.BAA13221@nathaniel.ebt"
inreplyto="9610180347.AA25783&#64;sqrex.sq.com"
expires="-1"


To:lee@sq.com
CC:dgd@cs.bu.edu,w3c-sgml-wg@w3.org

>Yeah, it would be too useful :-)  But the way things are going, XML isn't
>going to be used very widely anyway.  It's accumulating too many of the
>things that, in practice, have made SGML unpopular with those people whose
>favour we now seek to curry.  Or so it seems to me.

Hmm. I tend to agree...

>Imagine if the Unix C compiler output its parse tree in SGML, and so did
>the Pascal compiler, sharing the same code generation algorithm.  Imagine
>if they output SGML to the assembler, so that you could insert an
>SGML-based code optimiser.  Imagine if you could use the SGML-awk to write
>a little peephole optimiser (in the sense of Thomson & Ritchie).
>Or monitor the stream going through the compiler to generate a
>cross-reference code listing.
>
>What if database schemas were written in SGML?  Spreadsheets?

I imagined, and I saw LISP.... but you are right, these are all things
that SGML *could* be useful for, or perhaps *should* be useful for,
and it shouldn't take 40,000+ lines of code to write a validating
parser for it.



