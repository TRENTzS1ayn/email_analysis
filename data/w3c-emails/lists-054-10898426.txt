docno="lists-054-10898426"
received="Fri Oct 18 08:32:29 1996"
isoreceived="19961018123229"
sent="Fri, 18 Oct 1996 12:32:43 GMT"
isosent="19961018123243"
name="Charles F. Goldfarb"
email="Charles@SGMLsource.com"
subject="Re: C.16  Behavior when DTD is incomplete?"
id="327677b1.13778751@mail.alink.net"
charset="us-ascii"
inreplyto="199610171836.OAA07195&#64;www10.w3.org"
expires="-1"

To: Michael Sperberg-McQueen<U35395@UICVM.CC.UIC.EDU>
Cc: W3C SGML Working Group<w3c-sgml-wg@w3.org>


On Thu, 17 Oct 96 13:35:11 CDT, Michael Sperberg-McQueen
<U35395@UICVM.CC.UIC.EDU> wrote:

>On 23 October 1996, the ERB will vote to decide the following
>question.  A straw poll indicates the ERB is leaning to not
>prescribing any particular behavior.
>
>C.16 When given an incomplete DTD, should XML parsers assume all
>attributes are implicity declared CDATA, or should some attribute
>names cause other assumptions (e.g. attributes with the same name as
>some type of declared value might be assumed to have that declared
>value)?

In every document processing system, SGML or not, there is always a full DTD. If
the user isn't allowed to specify it (as he can in SGML), the implementors
create it for him (usually without documenting it).

XML should always have a full DTD, even though it should not be necessary to
specify it completely for an individual document. Otherwise you have tag salad
(with attribute dressing), and you lose SGML tool compatibility as well. It
should be a straightforward job to define the omitted element types and
attributes. I've made some suggestions in other postings as a starting point for
discussion. "Incomplete DTD" should only mean "Incompletely-specified DTD".
--
Charles F. Goldfarb * Information Management Consulting * +1(408)867-5553
           13075 Paramount Drive * Saratoga CA 95070 * USA
  International Standards Editor * ISO 8879 SGML * ISO/IEC 10744 HyTime
 Prentice-Hall Series Editor * CFG Series on Open Information Management
--



