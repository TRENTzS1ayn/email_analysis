docno="lists-054-10924749"
received="Fri Oct 18 10:57:18 1996"
isoreceived="19961018145718"
sent="Fri, 18 Oct 1996 10:59:46 -0400"
isosent="19961018145946"
name="Eve L. Maler"
email="elm@arbortext.com"
subject="Re: C.12 types of declared values for attributes?"
id="2.2.16.19961018145946.1d178d82@village.doctools.com"
charset="us-ascii"
inreplyto="C.12 types of declared values for attributes?"
expires="-1"


To:Charles@sgmlsource.com, Michael Sperberg-McQueen<U35395@UICVM.CC.UIC.EDU>
Cc: W3C SGML Working Group<w3c-sgml-wg@w3.org>

At 12:09 PM 10/18/96 GMT, Charles F. Goldfarb wrote:
>On Thu, 17 Oct 96 13:23:55 CDT, Michael Sperberg-McQueen
><U35395@UICVM.CC.UIC.EDU> wrote:
>
>>On 23 October 1996, the ERB will vote to decide the following
>>question.  A straw poll indicates the ERB is leaning to keeping
>>NAME(S) and NMTOKEN(S) but losing NUMBER(S) and NUTOKEN(S).
>>
>>C.12 Should XML change the set of types available for attributes?
>>E.g.  by suppressing NAME(S), NUMBER(S), NMTOKEN(S), NUTOKEN(S) and
>>adding constraints in the form of regular expressions, ISO dates,
>>language-code, external-id, type IDREF, ... (7.9.4, 11.3.3)
>
>I agree with David and Arjun. We only need CDATA and ID (which should always be
>named ID). With a DTD, IDREF(S), ENTITY(S), and NOTATION can be useful as well.

With NMTOKEN(S), you not only retain case insensitivity, but have an
up-front way to delimit multiple values.  So I think we should at least
consider keeping it, too.

It's not too hard to come up with reasons to have multiple ID attributes
on one element.  I'd like to see SGML97 remove this restriction, and
until then, retain the restriction.  Making "id" the canonical name
for XML ID attributes, while intuitive in the framework of SGML86 and
very attractive all around, unfortunately wouldn't provide an easy path 
for allowing multiple IDs.

        Eve



