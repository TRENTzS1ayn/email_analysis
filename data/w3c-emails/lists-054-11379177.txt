docno="lists-054-11379177"
received="Sun Oct 20 10:04:12 1996"
isoreceived="19961020140412"
sent="Sun, 20 Oct 96 08:25:01 CDT"
isosent="19961020132501"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="199610201404.KAA22489@www10.w3.org"
inreplyto="lee&#64;sq.com"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

Both David Durand and Lee Quin seem to be interpreting SDATA
entities as things which provide a system-independent specification
of characters or glyphs, in particular full names of the character or
glyph, in the style familiar from ISO character-set standards.

Since I had understood SDATA to be intended to hold system-*de*pendent
specifications (such as the elaborate escape sequence needed to
produce a given glyph on some particular device or system -- say, an
IBM ProPrinter or an HP LaserJet III, or ...), this notion confuses
me.

Can you point to any passages in 8879 that prescribe, or even allow,
the usage you are foreseeing?

Can you explain how the use of the SDATA keyword helps build a
framework superior to what can be built without it?  So far, the
argument appears to be that providing the name of a character,
without any information about its position in 10646 if any, or any
information about an appropriate glyph in the AFII glyph registry if
any, is superior to providing its position in 10646, with name etc.
in a comment.

In what way does the SDATA keyword affect this tradeoff?

Lee provides a useful list of the kinds of information it's good to
have about characters not known to the application a priori and says

>If only we had a language for representing such short documents.

We do have such a language, namely the TEI's Writing System
Declaration, though it doesn't now include all of Lee's information
items.  (Sorting behavior is not a function of the glyph or
character but of the language and application.  So the TEI Writing
System Declaration doesn't have an element for describing sorting
behavior:  it's not part of the writing system.)

When we return to this topic in preparing future revisions, perhaps
the TEI WSD can be considered as a mechanism for documenting and
making out-of-band agreements for the private use area of 10646.
For now, XML leaves this problem where we found it:  private use
areas, and privately created character sets or glyph sets, require
private agreement out of band.  If SDATA provided a readymade
method of handling this problem, then I'd be happy to keep it.  But
it doesn't seem to me that it does.

-C. M. Sperberg-McQueen



