docno="lists-054-11405704"
received="Sun Oct 20 14:03:50 1996"
isoreceived="19961020180350"
sent="Sun, 20 Oct 96 14:03:41 EDT"
isosent="19961020180341"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="9610201803.AA24787@sqrex.sq.com"
inreplyto="ERB decisions on A.17, B.9, and other questions"
expires="-1"


To:U35395@UICVM.UIC.EDU,w3c-sgml-wg@w3.org

> Both David Durand and Lee Quin seem to be interpreting SDATA
> entities as things which provide a system-independent specification
> of characters or glyphs, in particular full names of the character or
> glyph, in the style familiar from ISO character-set standards.
> 
> Since I had understood SDATA to be intended to hold system-*de*pendent

I am actually not so interpreting SDATA entities, which is why I pointed
to TEI WSDs and Harry Gaylord's article in my message.

I care not one whit about SDATA, as I have said.

What I do care about is retaining the ability to give a
human-readable description of a character or glyph in such
a way that an application can be expected to present it to the user,
rather like the ALT attribute to an image in HTML.

SDATA entities give you a way of doing that today -- if you like,
you can do
    <!Entity x SDATA "the latin letter small x">
The ISO 10646 user space alone does not do that.

James' suggestion of the form
<!Entity Klingon.W '<char alt="Klongon letter W">W</char>'>
is a good one and I could live with it, but would like it explicitly
mentioned somewhere in the Famous Twenty Pages.

James mentioned the use of DSSSL, but I have not been assuming that
every XML implementation would be required to support DSSSL.
If they are, I'm out of here right now.

> When we return to this topic in preparing future revisions, perhaps
> the TEI WSD can be considered as a mechanism for documenting and
> making out-of-band agreements for the private use area of 10646.
> For now, XML leaves this problem where we found it:  private use
> areas, and privately created character sets or glyph sets, require
> private agreement out of band.  If SDATA provided a readymade
> method of handling this problem, then I'd be happy to keep it.  But
> it doesn't seem to me that it does.

Again, I'm not arguing for keeping SDATA, but only for having a
mnemonic string.  The WSD would be a good way to do it, but I
can live with James' hack if necessary.  I gree with you that
SDATA doesn't handle all of te problem either.

Lee



