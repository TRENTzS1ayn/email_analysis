docno="lists-054-11474482"
received="Sun Oct 20 18:38:58 1996"
isoreceived="19961020223858"
sent="Sun, 20 Oct 1996 18:43:27 -0400"
isosent="19961020224327"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="v02130500ae905276ab42@[128.148.157.46]"
charset="us-ascii"
inreplyto="ERB decisions on A.17, B.9, and other questions"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

At 8:25 AM 10/20/96, Michael Sperberg-McQueen wrote:
>Both David Durand and Lee Quin seem to be interpreting SDATA
>entities as things which provide a system-independent specification
>of characters or glyphs, in particular full names of the character or
>glyph, in the style familiar from ISO character-set standards.
>
>Since I had understood SDATA to be intended to hold system-*de*pendent
>specifications (such as the elaborate escape sequence needed to
>produce a given glyph on some particular device or system -- say, an
>IBM ProPrinter or an HP LaserJet III, or ...), this notion confuses
>me.
>
>Can you point to any passages in 8879 that prescribe, or even allow,
>the usage you are foreseeing.

John Lavagino has already pointed out that it _is_ allowed. That's all I
care about. Actually, I don't even care that much about that. What I _do_
care about is that this usage is _already implemented_, and is widely
understood in the SGML community. I don't care about the original intent of
the standard. This feature was used to meet a key need. That's good!
There's no other way to do it in ESIS-based applications. Currently there
is _no_ implementation of WSDs. They are a thing of beauty, but they solve
too much for the Web audience. We should follow in the ways of our
ancestors, and use strings.

   And the usage is sufficient for future expansion. If a miracle happens
and people use XML, then we have at least an easy hook for referencing
undefined characters. We could reserve all braketed SDATA sequences for
future expansion, and later have then encode IDREFS into WSDs.

    James' method (as quoted by Lee; I don't remember seeing it), is rather
heavyweight. Only someone committed to 8879 as a bible would see the point
in defining an entity, to include a tag, to bracket a letter, just to
include a reference to the XEROX logo. If we just want to create an empty
undefined-glyph tag, and put the SDATA equivalent into an attribute, and
then redefine #PCDATA to always include the glyph tag as part of the SGML
content model, that is acceptable, though inventing something new seems
irrational to me, when a serviceable, well-understood tool already exists.

   I am not a number, I am an non-standard character!

>Can you explain how the use of the SDATA keyword helps build a
>framework superior to what can be built without it?  So far, the
>argument appears to be that providing the name of a character,
>without any information about its position in 10646 if any, or any
>information about an appropriate glyph in the AFII glyph registry if
>any, is superior to providing its position in 10646, with name etc.
>in a comment.

   I am not a number, I am an non-standard character!

>In what way does the SDATA keyword affect this tradeoff?

   I am not a number, I am an non-standard character!

_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________
http://www.dynamicdiagrams.com/services_map_main.html



