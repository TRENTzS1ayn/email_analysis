docno="lists-054-11682569"
received="Mon Oct 21 13:11:21 1996"
isoreceived="19961021171121"
sent="Mon, 21 Oct 1996 12:11:18 -0500"
isosent="19961021171118"
name="Len Bullard"
email="cbullard@HiWAAY.net"
subject="Re: C.4  Undeclared entities?"
id="326BAEB6.61B8@HiWAAY.net"
charset="us-ascii"
inreplyto="199610210309.UAA28964&#64;boethius.eng.sun.com"
expires="-1"


To: Jon Bosak<bosak@atlantic-83.Eng.Sun.COM>
CC:w3c-sgml-wg@w3.org

Jon Bosak wrote:

> Beyond the formal problems, however, I cannot see any reason to
> introduce this concept into XML.  The whole idea of XML is that any CS
> graduate can construct a parser for it from the BNF grammar set forth
> in the specification without knowing anything at all about SGML.  This
> notion of a maximally precise DTD does not appear to me to aid such a
> person in performing this task.

I am missing the point of this debate.  I understand the need for 
the mythical undergrad to construct a parser in a week with the 
Dragon book in one hand and the BNF grammar in the other (typing 
with his nose, I guess).

1.  What exactly will the XML parser do?  What is it's output?

2.  Does this preclude the use of the DTD?  Even in IADS and 
IDE/AS where we do not use the DTD anywhere in the rendering
pipeline because we simplified the SGML requirements first, and 
the application parser is using stylesheet declarations, we still
found in production, we needed SGMLS and a DTD for validation.

As long as a DTD is not precluded and one can be required based 
on the user's needs and decisions by the user, XML can safely say it is 
"SGML without DTDs".  I can tell you from real experience, 
experienced SGML users will snicker while the HTML users 
will go on using HTML oblivious to the whole debate.

So DeadGreekPoets aside, what feature cannot be provided with
XML and No DTD?

len



