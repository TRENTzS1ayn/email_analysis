docno="lists-054-11823446"
received="Tue Oct 22 08:30:10 1996"
isoreceived="19961022123010"
sent="Tue, 22 Oct 1996 07:30:34 -0500"
isosent="19961022123034"
name="Len Bullard"
email="cbullard@HiWAAY.net"
subject="Re: C.4  Undeclared entities?"
id="326CBE6A.7940@HiWAAY.net"
charset="us-ascii"
inreplyto="libSDtMail.9610211733.23528.bsmith&#64;providence"
expires="-1"


To: Bill Smith<bill.smith@Eng.Sun.COM>
CC:w3c-sgml-wg@w3.org

Bill Smith wrote:

> It seems there is disagreement over whether a DTD (real or imagined) is required
> in order to process XML documents. From my perspective, we can not require DTDs
> in XML 1.0 and have any chance of acceptance.

I agree that we should not require them, but not because of acceptance.
It is an issue of existing code and the goal of simplifying the
processing 
requirements of SGML.  We know it can be done because it has been done.
We seem to be horsetrading features at the moment.

> > 1.  What exactly will the XML parser do?  What is it's output?
> 
> I'm more concerned with applications and how they are used - either by a machine
> or a human.

Fine.  I think this working group should do a better job of 
defining the mythical parser and output as well as who is 
building it.  Is an XML parser SP minus n lines of code?

> > 2.  Does this preclude the use of the DTD?  Even in IADS and
> > IDE/AS where we do not use the DTD anywhere in the rendering
> > pipeline because we simplified the SGML requirements first, and
> > the application parser is using stylesheet declarations, we still
> > found in production, we needed SGMLS and a DTD for validation.
> 
> Let the application (user) dictate whether a DTD is required.

Laissez faire communications.  How do database users feel about 
non-normalized databases without a schema?  I agree, they should
decide, but they should also be aware of the consequences of 
the decisions.  That IEEE article Michael Leventhal quoted makes
me aware that the lack of such knowledge goes high in the 
hierarchy of users.
 
> > As long as a DTD is not precluded and one can be required based
> > on the user's needs and decisions by the user, XML can safely say it is
> > "SGML without DTDs".  I can tell you from real experience,
> > experienced SGML users will snicker while the HTML users
> > will go on using HTML oblivious to the whole debate.
> 
> What occurs between consenting users is not my concern. However, requiring DTDs,
> especially from the void, is of concern to me. Let (some) "experienced SGML
> users" snicker. I for one will not because document structure and tag
> extensibility, whether enforced or not, are powerful concepts that will be
> understood if properly presented.

I think it was the experience of the HTML users that HTML plus DOCTYPE 
was a better document.

> HTML users may in fact be oblivious to this debate - that is their gain.

Come again?  When HTML moves to the server, relational schema are simply 
replacing the DTD.  Dr. Goldfarb is right though, in some form, one 
is always there.

> However, they won't ignore the issue that HTML is not sufficient for their
> needs. Solutions to their problems will be found, and they will look far more
> like VisualBasic or JavaScript than any markup language we have devised.

It just pushes the work back to the mythical programmer writing the
exception handlers for badXML.  It seems the theory here is, one
can't write bad XML.

> > So DeadGreekPoets aside, what feature cannot be provided with
> > XML and No DTD?
> 
> Validation.

Agreed.

Len Bullard



