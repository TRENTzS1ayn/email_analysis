docno="lists-054-12296675"
received="Wed Oct 23 15:29:47 1996"
isoreceived="19961023192947"
sent="Wed, 23 Oct 1996 20:23:38 +0000"
isosent="19961023202338"
name="James Clark"
email="jjc@jclark.com"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="2.2.32.19961023202338.00fc8c60@jclark.iserver.com"
charset="us-ascii"
inreplyto="ERB decisions on A.17, B.9, and other questions"
expires="-1"


To: Michael Sperberg-McQueen<U35395@UICVM.UIC.EDU>
Cc: John Lavagnino<John_Lavagnino@brown.edu>, W3C SGML Working Group<w3c-sgml-wg@w3.org>

At 10:14 23/10/96 CDT, Michael Sperberg-McQueen wrote:

> Applications which display text must maintain a
>Unicode-to-local mapping table, unless they have Unicode display
>drivers (which effectively embody such tables).

I think it's worth noting that both Windows 95 and Windows NT have such a
driver (ie you can feed Unicode characters to TextOut).

>2.  An ISO 10646 character unknown to the application:

>Text-entity applications must either provide less informative error
>(or I-can't-display-this) messages, or else maintain a table mapping
>Unicode code points to names.  SDATA applications can use the entity
>text to provide an error message referring to "auml" or "latin small
>letter a with diaeresis", which is at least as informative as
>"character U+00E4".  mapping table.

An XML parser could report to an application the starts and ends of entities
together with the entity name.  When an application encounters an unknown
character occuring in a text entity whose content is a single character, it
could use the name of that entity in the error message.  In other words given

<!entity auml "&#228;">

an intelligent XML-based application could give an error message referring
to character entity "auml".

James



