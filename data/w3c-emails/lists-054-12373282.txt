docno="lists-054-12373282"
received="Wed Oct 23 16:51:58 1996"
isoreceived="19961023205158"
sent="Wed, 23 Oct 1996 16:50:23 -0400"
isosent="19961023205023"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="199610232050.QAA03283@nathaniel.ebt"
inreplyto="199610231829.OAA11454&#64;www10.w3.org"
expires="-1"


To:U35395@UICVM.UIC.EDU
CC:John_Lavagnino@brown.edu,w3c-sgml-wg@w3.org

>It should be noted, however, that this is not quite the same as what
>has been described to me in private mail by other proponents of
>SDATA, who say when you encounter an SDATA entity you:
>
> --- inform the application that an SDATA entity is beginning
> --- pass the application the entity text (and perhaps its name)
> --- inform the application that the SDATA entity is ending
>
>I.e. you perform *no* lookup, you merely provide the application
>with the power to perform lookup.

This is closer to my model of SDATA processing. It just allows the
processor to do something based on the content of the entity based
on it's type.

As I said earlier, SDATA, or some form of entity typing mechanism,
seems to me to be crucial to building a good distributed 
character/glyph/font registry/resolution mechnism. I wish to be
able to do something like:

    <!ENTITY foo SDATA "[unicode=XXX glyphid=XXXX charid=XXXX]" >

and to be able to resolve/process that on my local system.



