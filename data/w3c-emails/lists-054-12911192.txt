docno="lists-054-12911192"
received="Fri Oct 25 10:11:55 1996"
isoreceived="19961025141155"
sent="Wed, 23 Oct 96 23:21:30 EDT"
isosent="19961024032130"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: ERB decisions on A.17, B.9, and other questions"
id="9610240321.AA05952@sqrex.sq.com"
inreplyto="ERB decisions on A.17, B.9, and other questions"
expires="-1"


To:gtn@ebt.com,jjc@jclark.com
Cc:w3c-sgml-wg@w3.org

There's a little proposal at the end of this message, don't blink!

> >Why can't you build your mechanism using normal elements
> ><!ENTITY foo '<glyph unicode="XXX" glyphid="XXXX" charid="XXXX"/>'>

Before doing that, I'd much rather see XML use WSDs, with very little
extra complexity.

Once you have WSDs, you can do away with entities altogether, and use
the (is it refloc?) idea of reusable parts of a document --
    <chunk id.reuse="r101">The hangars at Cardington are <emph>very</emph>
    large!</chunk>

    <P>Later in our document, the intrepid hero says
    <quote><reuse ref.reuse="r101"/></quote>

Now entities are subsumed in a more general mechanism that is no harder
to implement -- anything with an id.reuse attribute gets squirreled
away for later, and not shown.  Then later you can reuse them all,
just like entities.  However, we now have entities with an obvious
way to include < > & % " and ' all at the same time :-), and can
edit the markup inside them.

(assuming that's the right /> syntax -- it's going to be a little
confusing for URLs in attributes:
    <img src="http://www.w3c.org/images/logo/small/"/>
so I'll use <@image> instead for my examples, for now)

In this case, you could have something like
    <wsd>
      <character id.glyph="aacute">
<desc>latin small letter a with acute accent</desc>
<!--* It's at position 0xE1, which is 225 in decimal; *-->
<form std="iso10646">&#225;</form>
      </character>
    </wsd>

    Here is an <f><@reuse ref.reuse="aacute" child="form"> priori</f> example!

I have gone one teensy step further and allowed a single child to be
specified on the @reuse element; the idea is that you look for the id.reuse
and then descend to the child.  The ID could be on the <form> instead.

(I've mangled the TEI WSD slightly for this example; you can ask me about
that privately if you like!)

So this is a two-part proposal:
(1) build element reuse into XML.  This is powerful & flexible, but
    no harder to implement (if I am not mistaken) than the entity syntax.

(2) use this mechanism to provide textual descriptions for
    (the equivalent of) entities, in a manner similr to the TEI WSD.

Note that this approach is compatible with existing SGML implementations;
although not all SGML systems support  element reuse, they do all support
putting elements in your document and parsing them!

Lee

   



