docno="lists-054-14509366"
received="Wed Sep 11 19:09:48 1996"
isoreceived="19960911230948"
sent="Wed, 11 Sep 1996 18:26:12 -0500"
isosent="19960911232612"
name="Robin Cover"
email="robin@ACADCOMP.SIL.ORG"
subject="Role of a DTD in XML"
id="199609112326.SAA27739@ACADCOMP.SIL.ORG"
expires="-1"


To:w3c-sgml-wg@w3.org

I'm sure I should know know the answer to the following question, but
I don't.  Since knowledge is the only cure for ignorance, I'll ask.
I'm having difficulty understanding the precise meaning and rationale
for the principle articulated as list item #4 in "Draft DD-1996-0001 -
Design Principles for XML," where the first explanatory sentence
reads:

       In particular, it shall be straightforwardly possible to
       construct useful XML applications which do not read,
       or need to read, the DTD of the XML document.

Question #1: Is "useful" the operative term here?  Or is the meaning
"useful *browser* (XML) applications"?  It seems to me that authoring
tools and search interfaces ought to be responsive to a grammar (DTD)
[and/or a stylesheet] to be "useful."  For example, with reference to
"validating authoring tools" as candidate XML applications (see item #2
in "Design Principles for XML"): a system receiving an XML instance
without a DTD could transduce some kind of XML grammar for the
document, but (e.g., in terms of SGML's current 'declared content'
data types) would not necessarily be able to enforce the "proper"
constraints on attribute values.  If it saw "<p n=a1>...</p>" and
"<q n=a2>...</q>" in the instance, it (the validating editor) would not
know whether to require that the value of 'n' for a new 'p' element
should be unique (an ID), or a NAME, or CDATA, or what.  Similarly, a
user interface for a generic XML searching tool isn't going to be able
to offer much assistance in the creation of meaningful queries (and in
interpreting null results as meaningful or fortuitious) without a DTD.

Question #2: If the first sentence in item #4 (quoted above) were to
read, contrary to its current wording, something like "In all cases it
should be possible for an XML application to process an XML instance
without having to read a DTD..."  -- then which clauses (sub-clauses)
in the SGML Standard would need to dropped or revised in order to support
the design and development of *great* (not merely "useful") XML
applications?  Does someone have a list?

Thanks in advance for your forbearance and clarifications.










Robin

-------------------------------------------------------------------------
Robin Cover                Email: robin@acadcomp.sil.org  (or)
6634 Sarah Drive           Email: robin@utafll.uta.edu  ("uta-ef-el-el")
Dallas, TX  75236  USA     
Tel: (1 214) 296-1783 (h)  >>>>>>>>> The SGML Web Page <<<<<<<<<  
Tel: (1 214) 709-3346 (w)    http://www.sil.org/sgml/sgml.html  
FAX: (1 214) 709-3380      
=========================================================================



