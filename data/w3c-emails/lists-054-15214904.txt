docno="lists-054-15214904"
received="Sat Sep 14 06:19:12 1996"
isoreceived="19960914101912"
sent="Sat, 14 Sep 1996 06:18:55 -0400 (EDT)"
isosent="19960914101855"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: XML and required DTDs"
id="199609141018.GAA00142@undergrad.math.uwaterloo.ca"
charset="us-ascii"
inreplyto="XML and required DTDs"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

At 02:12 PM 9/13/96 CDT, Michael Sperberg-McQueen wrote:
>c DTDs Optional
>
>Declarations are always allowed, but not always required; the system
>makes certain default assumptions if no declarations are provided.  This
>is the approach taken by PSGML.  (Or C, if a programming-language
>analogy is useful.  In programming, I don't find this helpful at all,
>but Tim and others have suggested plausibly that it may be useful in
>XML.)

>...

>Myself, I lean toward (c), because it makes startup for light-weight
>applications or experimentation a bit easier.  Applications which need
>declarations will always be able to use them -- and XML processors (like
>good C compilers) can provide an option to warn, or treat as errors, any
>use of undeclared element types.  Note that choosing (c) is not the same
>as saying validating editors are impossible, as Paul Grosso seems to
>suggest -- any more than C compilers can't do syntax checking, just
>because variables can be declared implicitly.

Won't it be a Lot of Work to define something which is SGML-Like but does
not require a DTD? I had presumed that XML would be defined like this:

"An XML document is a valid SGML document which..."

But if DTD's are not required, we cannot do that. Since XML documents would
not necessarily be SGML documents, we could not define them in those terms.
Do we have time to start from scratch? This is a serious question, I have no
experience designing extensible markup languages.

 Paul Prescod



