docno="lists-054-15380809"
received="Sun Sep 15 05:24:52 1996"
isoreceived="19960915092452"
sent="Sun, 15 Sep 1996 10:14:51 +0100"
isosent="19960915091451"
name="Martin Bryan"
email="mtbryan@sgml.u-net.com"
subject="Re: XML and required DTDs"
id="96Sep15.101451bst.45601(2)@u-net.net"
charset="us-ascii"
inreplyto="XML and required DTDs"
expires="-1"

To:w3c-sgml-wg@w3.org


Re Paul's suggestion:

>> c DTDs Optional
>> 
>> Declarations are always allowed, but not always required; the system
>> makes certain default assumptions if no declarations are provided.
>
>Are you including editing systems when you say "the system?"  From your
>later comment (the last para of your message I include below), I assume
>so.  More on that below.

and Tim's clarification:

>Let's see:
>
> o I believe that a useful XML editor will require access to FULL MARKUP 
>   DECLARATION - i.e. the functional equivalent of an SGML Decl & DTD.  This 
>   point is open to argument, particularly given that commercial SGML editors 
>   will let you edit with validation off, but I still believe it.
>
> o I expect that XML will come with a well-defined way to provide a
>   Full Markup Declaration.
>
> o I believe that there are many things you can do with structured
>   text that do not require Full Markup Declaration (search, display, 
>   analyze).  We want you to be able to do those things in XML without
>   having a Full Markup Declaration at hand.
>
>I think that's all... does that address (at least part of) your issue, Paul?

I can also envisage a third option:

- a known set of elements, with a DTD that is defined but not referenced,
that can be extended in a DOCTYPE subset, e.g.

<!DOCTYPE my-dtd [<ATTLIST #ALL style NAME #FIXED "normal">]>

My idea here is to adopt an HTML approach of saying that there are a certain
set of elements that are useful in a wide range of situations (the basic
text elements) which all browsers would have default presentation
characteristics for, and for which there is an agreed set of model
relationships, which the user can modify by:

a) putting  an alternative entry for any existing markup declaration in the
subset
(including element redeclarations)
b) change the characteristics of one or more of the existing attributes
specifications
c) add a new attribute to existing attribute definitions for an existing element
d) define a completly new element/attlist
e) specifying that one or more of the existing elements is excluded from the
default DTD.

OK this would not be compatible with existing SGML systems without a DTD
that described the resulting DTD, but it should be consistent with some of
the proposals being made to improve SGML by WG8, and I can envisage it
working as it will always be possible for an XML-compatible editor to write
a 'derived DTD' that could be used by an SGML system.
----
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK 
Phone/Fax: +44 1452 714029   WWW home page: http://www.u-net.com/~sgml/



