docno="lists-054-16001984"
received="Tue Sep 17 10:11:49 1996"
isoreceived="19960917141149"
sent="Tue, 17 Sep 96 09:09:43 CDT"
isosent="19960917140943"
name="Robert Streich"
email="streich@slb.com"
subject="Re: XML and required DTDs"
id="9609171409.AA24930@austin.asc.slb.com"
charset="us-ascii"
inreplyto="XML and required DTDs"
expires="-1"


To:w3c-sgml-wg@w3.org

At 09:45 AM 9/17/96 GMT, Charles F. Goldfarb wrote:
>On Tue, 17 Sep 96 03:51:27 BST, "Henry S. Thompson" <ht@cogsci.ed.ac.uk> wrote:
>><p><vc>The</vc><ship>Gretel</ship><vc>lost to</vc><ship>Constitution
>></ship><vc>in</vc><date>1966</date><vc>.</vc></p>
>>
>>[vc for 'vanilla content']
>>
>This markup is not obfuscatory, just verbose. My understanding is that for XML,
>verbosity is preferable to complexity.

This is one of those cases where the "simple" solution only pushes the
complexity into someone else's lap. Sure, you make things easier for
the parser-writer, but how many users are going to tolerate this?

I can't think of a single word processor/publishing system that doesn't
allow mixed content. Some (like FrameMaker) don't allow it in their markup
language, but they hide that very effectively behind the covers.

And you can't just push this onto the application and claim that a "good
application will take care of this markup for you. By trimming a day's
worth of effort from the parser-writers time budget you can effectively
add a month to the interface-writer's budget.

There are some issues that don't have an easy solution. By focusing solely
on what it means to the parser-writer, you can effectively kill the
acceptance of the language by users and vendors. A simple-to-write parser
doesn't do much good without an interface and some data to process.


Robert Streichstreich@slb.com
Schlumbergervoice: 1 512 331 3318
Austin Researchfax:   1 512 331 3760



