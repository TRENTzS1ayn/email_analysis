docno="lists-054-2410000"
received="Thu Dec 12 13:46:00 1996"
isoreceived="19961212184600"
sent="Thu, 12 Dec 96 13:46:10 EST"
isosent="19961212184610"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: RS/RE, again (sorry)"
id="9612121846.AA17455@sqrex.sq.com"
inreplyto="RS/RE, again (sorry)"
expires="-1"


To:w3c-sgml-wg@w3.org

> From: gtn@ebt.com (Gavin Nicol)
> I am trying to distinguish between *parser* proper, and validator. A
> validation processor does not need to be *in* the parser proper, but
> instead can work on the output from it. 
> 
> This would lead to a model in which all *parsers* would return the
> same results, making it easier to validate/prove that the parsers are
> correct. 


I think this is more formal than is needed for XML.
I'd like to see databases offer save as XML, load XML, without having to
buy an XML parser or worry about parser conformance to that extent.
It's much easier to write an ad-hoc parser than to use someone else's
for a language this small in many cases, and I don't want to forbid that.

By parser, I mean "code that reads XML and does something with it".
Nothing more formal than that.

Conformance tests would be interesting, but they should be at the input
level, not internal to applications, I think.

I agree with you that validation can be handled separately from parsing,
and should be, and in fact generally is: an "SGML parser" is not a parser
in the normal sense of the word...

Lee



