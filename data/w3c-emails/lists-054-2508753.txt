docno="lists-054-2508753"
received="Thu Dec 12 17:07:28 1996"
isoreceived="19961212220728"
sent="Thu, 12 Dec 1996 17:09:48 -0500"
isosent="19961212220948"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: RS/RE, again (sorry)"
id="1.5.4.32.19961212220948.00a89eb4@csclub.uwaterloo.ca"
charset="us-ascii"
inreplyto="RS/RE, again (sorry)"
expires="-1"


To:dgd@cs.bu.edu(David Durand),w3c-sgml-wg@w3.org

At 04:30 PM 12/12/96 -0500, David Durand wrote:
>   Or you will just write stylesheets that don't assume some whitespace
>will be automatically deleted. (and leave your users alone...). The
>problem remains that there is no way to tell element content from mixed
>content given only an instance.

I can't presume that I will always use applications where I have control
over "extraneous nodes" as I may in a stylesheet language.

>   The problem with your delimiter proposal is the same as the problem
>with Charles' explicit quoting proposal -- too ugly. Worse, it's not
>even easy to explain: "all tags look like this, except that if they
>can't contain data, they instead this other way". 

It is easy to explain. 

There are structural tags, that can contain only other structural tags. And
there are content tags, that hold text -- simple. I think that this
*simplifies* SGML by making it clear where text can and can't go. "Why do I
get an error message when I put text between my table tag and my first row?
I just wanted a caption."

Furthermore, there is no "all tags look like this except these", there is "

>And if you change a
>DTD to turn element content into mixed content (or, God forbid, have a
>parameter entity controlling this), you will have to change a giant mass of
>delimiters in all your instances -- very unfriendly...

As in "regular" SGML (or two phase XML processing to emulate SGML), changing
an element's content model to mixed content changes all whitespace into
content. Therefore, if you make that change you should go looking at your
instances anyways. They now mean something different than they did before
you changed the DTD. That kind of subtle change is, in my opinion, the most
dangerous to document maintainability.

 Paul Prescod



