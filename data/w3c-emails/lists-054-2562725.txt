docno="lists-054-2562725"
received="Fri Dec 13 09:10:43 1996"
isoreceived="19961213141043"
sent="Fri, 13 Dec 1996 09:13:28 -0500"
isosent="19961213141328"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: RS/RE, again (sorry)"
id="1.5.4.32.19961213141328.00a76e54@csclub.uwaterloo.ca"
charset="us-ascii"
inreplyto="RS/RE, again (sorry)"
expires="-1"


To:gtn@ebt.com(Gavin Nicol),papresco@calum.csclub.uwaterloo.ca
Cc:dgd@cs.bu.edu,w3c-sgml-wg@w3.org

At 08:57 AM 12/13/96 -0500, Gavin Nicol wrote:
>>As in "regular" SGML (or two phase XML processing to emulate SGML), changing
>>an element's content model to mixed content changes all whitespace into
>>content. Therefore, if you make that change you should go looking at your
>>instances anyways. They now mean something different than they did before
>>you changed the DTD. That kind of subtle change is, in my opinion, the most
>>dangerous to document maintainability.
>
>Sounds like a good reason for finding some way of making such changes
>easier on users to me.... 
>
>Call me a fool, but I think an overriding goal for software design
>is to make is as easy for people to do the things they want as
>possible. This generally means making the processing model as 
>intuitive as possible... so people don't get surprised.

But the parsing model is only one part of the processing model. Your plan
would simplify the whitespace parsing model (which users don't really know
or care about) and complicate the whitespace processing model by leaving the
choice of what to do with whitespace in the hands of vendors. SGML is
*explicit* about what happens when you make this change...the content
changes, for every application. According to your plan, it would depend on
what "filter" the application used internally.

Why not just standardize two filters: SGML style, and no filter at all (as
XML does). Though this seems suboptimal to me, it is better than an open
ended, vendor-controlled choice.

 Paul Prescod



