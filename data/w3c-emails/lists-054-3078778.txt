docno="lists-054-3078778"
received="Mon Dec 16 11:49:30 1996"
isoreceived="19961216164930"
sent="Mon, 16 Dec 1996 11:48:44 -0500 (EST)"
isosent="19961216164844"
name="David Durand"
email="dgd@cs.bu.edu"
subject="Re: simplifying comments in SGML '97"
id="199612161648.LAA17563@csb.bu.edu"
inreplyto="simplifying comments in SGML '97"
expires="-1"


To:w3c-sgml-wg@w3.org

   I will remind people that the argument for changing comments is not
simply that "ASCII em-dash" is a useful punctuation mark -- though that
is certainly true -- but that the restriction has no justification in
terms of XML. The only good thing about the current definition is that
I expect most XML implementors won't care about SGML compatibility and
will skip implementing this "feature", or at least make it
optional. The issue is whether it is good user design to explicitly
forbid something for no reason that makes sense within the
system. Some of us feel strongly that users are should only get
errors when they try to do something logically impossible or logically
possible, but beyond the designed purpose of the system.

In SGML syntax, the -- restriction in comments, while annoying, is
rational.  in XML, it is a meaningless restriction, a small wart on
the language. Since we hope for XML to spread the gospel and practice
of content-markup beyond our already-committed little community of
SGML-folx, I think we will be served by making XML as inviting and
wart-free as possible. This is (Tim Bray's?) stoopid test.

    I think we have spent so long worrying about SGML syntax details,
that we sometimes reflexively assign them value that they do not
have. We also underestimate the annoyance value of restrictions
because we understand the real value of properly marked-up texts --
for those not yet as convinced as we are, small details can reinforce
a pre-existing negative impression, and by strengthening rather than
weakening a prejudice, hurt the case for decent markup. And let's not
kid ourselves, the view of SGML in the Internet world is quite
negative. In my experience, this is usually caused by a mixture of
ignorance as the the point of SGML, and technical repugnance at the
clarity, consistency, and implementation difficulty of the language
definition.



