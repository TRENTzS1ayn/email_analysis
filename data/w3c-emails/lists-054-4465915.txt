docno="lists-054-4465915"
received="Fri Dec 27 10:56:22 1996"
isoreceived="19961227155622"
sent="Fri, 27 Dec 1996 10:54:31 -0500"
isosent="19961227155431"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: Anchors Aweigh"
id="199612271554.KAA17840@nathaniel.ebt"
inreplyto="32C21AE1.30E5&#64;hiwaay.net"
expires="-1"


To:cbullard@hiwaay.net
CC:bosak@atlantic-83.Eng.Sun.COM,w3c-sgml-wg@www10.w3.org

>What would really help this discussion more than 
>abstractions on linking would be set of IDLs for an XML handler.
>Define the XML handler public services.

Actually, this would be a *very* interesting approach to the
problem. We could model the entire web in IDL. Great for compatibiliy
(objects addressable as CORBA objects seems like a real win to me).

The problem with this approach is that you *will* model the entire web
(ie. you'll have to model documents, protocols, etc. etc.) unless you
wish for "undefined" behaviour to creep in.

>For object oriented programmers to build what we say we want, we have
>to tell them how much the XML spec defines the behavior of the system
>that handles it? What services do we want from that .dll?  What is
>the XML handler interface to the framework? 

Yes. Once we start defining behaviour, there is no end to it until
you've defined the application. I think a *very* important decision is
whether we wish to head down that path or not. 

As Len rightly notes, link resolution is a seperate problem to link
specification. I believe that link resolution mechanism definition is
not part of the charter for this group (unless I am quite wrong). If
we start defining resolution mechnism behaviour/semantics, we'll end
up reinventing the Internet.

The beauty of a URL is it's opaqueness.



