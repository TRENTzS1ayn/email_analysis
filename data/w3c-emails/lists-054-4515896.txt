docno="lists-054-4515896"
received="Fri Dec 27 17:09:36 1996"
isoreceived="19961227220936"
sent="Fri, 27 Dec 1996 17:16:04 -0500"
isosent="19961227221604"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: Anchors Aweigh"
id="v02130501aee9f6876674@[165.90.139.104]"
charset="us-ascii"
inreplyto="Anchors Aweigh"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

At 1:15 PM 12/27/96, Gavin Nicol wrote:
>>> Actually, this would be a *very* interesting approach to the
>>> problem. We could model the entire web in IDL. Great for compatibiliy
>>> (objects addressable as CORBA objects seems like a real win to me).
>>
>>True, but there is also the Active X model.  MS or no, it is clear
>>that a stripped down COM model has a lot to offer and has a lot of
>>support both in existing objects and in knowledgeable users.
>
>COM doesn't scale well to distributed systems. CORBA/OpenDoc is a
>better model.
>
>>What I would like to see from the object-designers on the list is a
>>rational comparison of XML hyperlinking goals and how these
>>fit inside Active-X or Corba, what is apples/oranges, etc.  It
>>is likely I am conflating layers here.
>
>I don't think so. In many ways, defining links as objects is a good
>way to start, because then you can work back to the representation
>required at the protocol and definition ends of the system.

Actually, this seems a terrible way to start (or finish). Object models are
fundamentally oriented to the definition of _behaviours_. I am firmly
committed to the notion that we should think of links as delcarative
information about relations between documents and document portions. We
will probably require operational semantics for some techniques of locating
document portions, but we should not assume that there is any single
_right_ thing to do with a link and its endpoints, once located.

Unsing HyTime as a mental model actually confuses things at this level,
because HyTime defines not only a set of linking semantics (for describing
abstract relationships), but also a set of generic multimedia presentation
semantics. Just as we need to specify style sheets to make XML useful out
of the box, we may need to specify presentation and user-interaction
semantics for links -- but we should remember that these are radically
different things. I would be tempted to put link behavior into our XML
style sheets, but maybe a separate link style sheet will work better. In
any case we should not conflate the presentation and interaction aspects of
linking with the declarative, and "semantic relationship" aspect of
linking.

Even if you disagree with this philosophy (which is merely generic markup
applied to links, after all), there are practical reasons to avoid this
kind of semantic definition: For one thing no such definition has been
widely accepted. Creating such an OO information archiotecture seems an
interesting research problem to me; reason enough to shun it in a standards
activity.


>>What I was aiming at was the link semantics of the XML handler.
>>We more or less know what the current crop of desktops are doing
>>and we have listed those.
>
>Sure, this is a good *starting* point.

For an interaction and linking style language: not for a link-definition
language.

  -- David

I am not a number. I am an undefined character.
_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



