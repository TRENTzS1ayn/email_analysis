docno="lists-054-4671088"
received="Sat Dec 28 12:52:09 1996"
isoreceived="19961228175209"
sent="Sat, 28 Dec 1996 12:51:13 -0500"
isosent="19961228175113"
name="Steven R. Newcomb"
email="srn@techno.com"
subject="unmarked linkend awareness by XML engines"
id="199612281751.MAA09141@bruno.techno.com"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

(Jon Bosak:)

>> | "Does an anchor know that it is an anchor?"

> My first conclusion is that this is an unfortunate way to phrase the
> question (sorry, Steve).  If I understand correctly, no HyTime anchor
> can be assumed to be self-aware even in the metaphorical sense because
> in the general case there may be nothing attached to the anchor to
> identify it as such.  If a link addresses an unmarked span of
> characters somewhere in hyperspace then *something* is aware that the
> span is a HyTime anchor, but that something is surely not the unmarked
> character string but rather a HyTime application.  

Exactly right.  I wish I had said it that clearly.

> So I suggest that we drop the whole
> self-awareness trope; it just gets in the way.

This discussion has indeed shown that "anchor awareness" was a
confusing way for me to characterize the phenomenon I was ineptly
trying to give a convenient, intuitive name.  I disagree that the
underlying question gets in the way of our discussion.  I still see it
as absolutely fundamental:

  "Will XML engines will be responsible for `knowing' that a linkend
   is a linkend when such a linkend is *not* marked up as a linkend?"

I still haven't yet seen consensus explicitly emerge on this question,
although there has been plenty of good and relevant discussion.


(Dave Durand:)

> But semantically, an ilink is no more complicated than a record in a
> database that contains external keys. 

Right.

>  ...there is an open set of reasonable
> ways to find documents to process together: the choice of which documents
> will be processed together is an application matter. 

Right.

> But we _do_ need to
> say what an ilink means, and deal with the fact XML linking engines must be
> prepared to process multiple entities (whether serially or simultaneously
> does not matter) in order to correctly handle ilinks. 

Right.

> Which documents are
> processed is not necessarily our concern.

I disagree with this assertion.  If XML supports ilinks, there must
certainly be a way of establishing a finite list of links for which
the XML engine is responsible for knowing the anchors (er,
"linkends").  (Otherwise, the XML engine must be responsible for all
the XML links on the entire Web, which I think we all agree is an
insupportable scenario.)  This means establishing, somehow, a finite
list of documents that contain such links.  HyTime calls such a finite
list a "Bounded Object Set" (BOS).  In HyTime, the BOS is always
application-definable, but it is also expressible interchangeably, as
a suggestion, in terms of an arbitrarily pruned entity tree.  If XML
supports ilinks, or n-directional linking, or, therefore, what I have
been imprecisely terming "anchor awareness," I think it's necessary to
have a way of expressing this pruned entity tree (BOS) notion in XML,
too.


Best regards,

--Steve

             Steven R. Newcomb   President
         voice +1 716 271 0796   TechnoTeacher, Inc.
           fax +1 716 271 0129   (courier: 23-2 Clover Park,
      Internet: srn@techno.com    Rochester NY 14618)
           FTP: ftp.techno.com   P.O. Box 23795
    WWW: http://www.techno.com   Rochester, NY 14692-3795 USA



