docno="lists-054-4809086"
received="Sat Dec 28 21:54:02 1996"
isoreceived="19961229025402"
sent="Sat, 28 Dec 1996 22:00:32 -0500"
isosent="19961229030032"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: unmarked linkend awareness by XML engines"
id="v02130506aeeb7d1cd8da@[165.90.139.114]"
charset="us-ascii"
inreplyto="unmarked linkend awareness by XML engines"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

At 4:18 PM 12/28/96, Terry Allen wrote:
>David Durand writes in response to Steve Newcomb:
>| No, we simply have to face the fact that end users are the only ones who
>| can decide what documents need to be in their processing set. We can't
>
>No.  As an author and publisher I must be able to indicate *my*
>view of what that set of documents is, and, of the links in the set,
>what are relevant to my author-primary view of my own intellectual
>property.  I must also be able to assert (not enforce) via my
>markup that this view is mandatory (if it is).  Consider the case
>of nuclear reactor documentation in XML governed by an effectivity
>policy before you assert that the end user must be king.  Mechanisms
>of policy enforcement need not be specified (because enforcement
>is a function of applications), but the assertion that there is a
>policy must be supported (because linked metadata is the obvious
>way to support it).

   "Indicating" is one thing, but enforcement is another. I suggested that
such indications would be useful, but that is different from requiring that
those indications must be followed by anyone. Enforcement is pointless,
because intentionally non-conformant clients can violate any such
restriction anyway. I also don't think that nuclear reactor documentation
with contractual display format requirements is primary in "SGML on the
Web". Users of XML for such applications will be perfectly capable of
creating appropriate application conventions and DTDs to accomodate this
without our help.

    I'm not opposed to being able to suggest to an application what it
should do, just the pretense that it can be required. Most particularly, I
want to keep the ability to annotate -- regardless of the author's wishes,
and it should also be possible to publish those annotations, for those
readers who wish to view them. The author should neither be able to prevent
the creation or processing of such ilinks, nor a user, force others to see
them.

>
>| check the whole world, and we can't just leave it to the author (without
>| damaging the ability to create external annotations), so we have to leave
>
>XML should not have as a design goal the ability to enable promiscuous
>external annotations unauthorized by the document's owner.  The owner
>may wish to enforce a policy that he does not permit the work to be
>viewed with annotations (e.g., by not serving to clients that do not
>guarantee to respect his policy).  We are under no obligation to
>enable grafitti.  We may be powerless to prevent it, too.

   Grafitti is what you cannot avoid seeing -- but if you don't read my
ilinks, then you don't see my annotations. No problem, but the power is at
the reader's end anyway, we might as well admit it. This no-annotation
stuff strikes at the heart of what gives hypertext its great potential, in
my view.

   Philosophy aside, we should pass no laws we cannot enforce, so
no-annotation policies are in the wastebasket, I think. And annotations are
so usefun and fundamental, that we cannot create any credible linking
system that does not enable their creation.

>| it to the user (via their application). In other words, XML as a standard
>| cannot enforce this kind of scoping for the user. All that we need to
>| specify is how ilinks behave in documents where they are _parsed_ by an XML
>| processor. In HyTime terms, the BOS will always be the entire web (one of
>| the reasons I always thought the notion was limited in usefulness).
>| However, the set of documents an XML processor will be required to
>| processes is an application (user) decision. As an example we could not
>| force a browser to pre-fetch linked documents in case they might reference
>| ilinks that _might_ be of interest.
>
>But we must have some mechanism to indicate to the user agent what the
>bounds of a single work are, something lacking on the Web today.  This,
>too, may lie without the scope of XML linking, but we still need it.

   This is already done today, as it should be, by authoring and display
convention. The fact that most people don't bother to distinguish internal
from external links may be evidence that they don't care, but it's not very
hard to do.

>An example directly contrary to your point about prefetching: there must
>be a way in which I can specify that an XML application *must* fetch
>the linked copyright notice and display it before the main text of
>my fine literary work.  It may be that XML's linking mechanism is
>not the place to do this, but if not, where do you think *is* the
>right place?

   If you want a copyright notice for a document delivered over the web,
you had better put it in the document, as the first text, because the
network infrastructure is to frail for you to ensure that your readers will
see it if it's anywhere else.

   I'm being rather harsh and flip with some very serious issues, but I
don't see that the philospophical discussions will be solved here, nor do I
think there are any technical solutions that we can offer to the problems
you raise.

   -- David

I am not a number. I am an undefined character.
_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



