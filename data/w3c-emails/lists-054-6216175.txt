docno="lists-054-6216175"
received="Mon Nov  4 11:59:35 1996"
isoreceived="19961104165935"
sent="Mon, 4 Nov 96 10:29:31 CST"
isosent="19961104162931"
name="Paul Grosso"
email="paul@arbortext.com"
subject="Re: Case sensitivity in markup"
id="9611041629.AA03208@atiaus.arbortext.com"
inreplyto="Case sensitivity in markup"
expires="-1"


To:w3c-sgml-wg@w3.org

I'm not so worried about case sensitivity from an implementors point
of view--though I do think this, along with disallowing the omitted
tag minimization field, are the two biggest stumbling blocks that
current SGML tools and applications will have wrt XML--but I'm more
worried about the end user here.  And it's not just a legacy issue.

I looked at the HTML file Tim sent out for the draft XML spec.  It
mixes case in the tag names, for example 
<A HREF='#ref-ISO8879'>[ISO 8879]</a>
I just think so many users will be surprised by names/tokens not
matching because of case.  Things like "yes" not being equal to "YES"
and </a> not closing <A>.  And all the 8879 keywords having to be in
uppercase.  And users will have to be more careful when creating style
sheets, since they will have to have the element names, attribute
names, and attribute values match exactly.  To do things like testing
if the attribute name is "yes" or "black" or "ID45017" will require the
use of "anycase()" sorts of functions or explicit comparisons for all
possible combinations of lettercase mixing.

I'm quite sensitive to the I18N issues, but let's remember that the
whole point of case folding is to make life easier for the end users in
general, and there are a lot of them out there for whom losing case
folding will make their lives a lot harder.  No, it's not hard to
"explain" case sensitivity, that's not the point.  Every time a user
trips over </a> not closing <A>, they'll say, "oh yes, I understand why,
it's that @&%$*# rule about case sensitivity in XML--they fixed some
of the problems with SGML, so in exchange, they invented some new ones
of their own."



