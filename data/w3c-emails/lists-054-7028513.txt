docno="lists-054-7028513"
received="Mon Nov 11 13:40:59 1996"
isoreceived="19961111184059"
sent="Mon, 11 Nov 1996 13:41:53 -0500"
isosent="19961111184153"
name="Murray Altheim"
email="murray@spyglass.com"
subject="Re: ICADD support in XML [Was: SGML declaration for XML]"
id="v02140b04aead1f86a077@[208.203.149.85]"
charset="us-ascii"
inreplyto="ICADD support in XML [Was: SGML declaration for XML]"
expires="-1"


To:"W. Eliot Kimber"<eliot@isogen.com>
Cc:w3c-sgml-wg@w3.org

"W. Eliot Kimber" <eliot@isogen.com> writes:
>I'm not sure it's strictly necessary to include LINK in the XML spec as any
>valid XML document can be processed by an SGML parser that supports LINK in
>order to generate a new XML instance with the link attributes integrated.

My experience with SP is that nsgmls requires that one modify the SGML
declaration to include LINK IMLICIT YES in order to process LPDs. Am I
wrong or misinterpreting your response? This sounds like a workaround
rather than a change to the advocated specification.

>Note also that the "multiple attribute lists" facility used in
>architectural meta-DTDs and almost certainly to be included in SGML97 (and,
>I would presume, immediately adopted by XML), will provide almost the same
>facility for adding attributes to elements unilaterally that LINK provides
>today.
[...]
>Note that would you would *NOT* get would be the ability to apply different
>attributes to the same element type based on hierarchy, which you can do
>quite effectively with LINK.

I agree that adding an LPD-like document in the declaration subset is a
potential solution, but not as effective as an LPD, particularly as the
HTML/ICADD LPD will get increasingly complex in attempting to resolve the
thornier aspects of HTML 3.2, 3.5, 4.x, and I assume an XML/ICADD LPD would
be similar in scope and complexity.

Perhaps allowing LINK but placing specific restrictions on its use? I'm
certainly not trying to open an enormous door here, just enough of a crack
to provide an ICADD solution.

Murray

```````````````````````````````````````````````````````````````````````````````
    Murray Altheim, Program Manager
    Spyglass, Inc., Cambridge, Massachusetts
    email: <mailto:murray@spyglass.com>
    http:  <http://www.cm.spyglass.com/murray/murray.html>
           "Give a monkey the tools and he'll eventually build a typewriter."



