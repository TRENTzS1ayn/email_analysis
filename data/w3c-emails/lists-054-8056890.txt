docno="lists-054-8056890"
received="Sun Nov 17 21:33:39 1996"
isoreceived="19961118023339"
sent="Sun, 17 Nov 1996 21:35:29 -0500"
isosent="19961118023529"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re:  Feedback on the spec"
id="1.5.4.32.19961118023529.00ea521c@csclub.uwaterloo.ca"
charset="us-ascii"
inreplyto=" Feedback on the spec"
expires="-1"


To: Tim Bray<tbray@textuality.com>,w3c-sgml-wg@w3.org

At 01:49 PM 11/17/96 -0800, Tim Bray wrote:
>Three things.  (a) The principle we voted on sounded reasonable.  The
>language that was generated in the spec (after a *whole lot* of
>work) is messy, inelegant, and I think prone to misinterpretation.
>Much like 8879.  Note the excellent and difficult question raised by
>Paul Grosso in respect of white space at text entity boundaries.  I
>predict that things like this will keep coming up us a result of 
>us having opened the Pandora's box of interfering with users' data.

We need to keep the concepts of "source" and "destination" separate. I would
be annoyed if my text editor changed the source of my SGML (or C++ or Java)
documents. But in none of those languages am I surprised or annoyed when the
language parser strips out token-delimiting whitespace:

^ indicates token separator
! indicates meaningful space

C++:  cout << "Foo Bar" << endl ;
          ^  ^    !    ^  ^    ^

SGML/XML: <statement> <cout> <lshift> Foo Bar <lshift> <endl> </statement>
                     ^      ^        ^   !   ^        ^      ^

These rules are not bizarre inventions from outer space. They follow common
encoding/programming language conventions. There is no "interfering with
users' data".

I haven't yet seen Paul's post that questioned entity/record end handling.

>(b) having made the decision to reserve some attribute/element
>namespace, we only had to use it once.  I think this is a signal
>that we're doing something wrong.
>
>(c) Because of our decision on unified attribute name space, no
>element to which you might want to apply -xml-space can take an
>enumerated-value attribute where the enumeration includes either
>"keep" or "collapse".  The only solution is to change the
>attribute values to "-xml-keep" and "-xml-collapse". 

I agree that the attribute thing seems suboptimal to me. Couldn't it be
replaced with a marked-section mechanism? By restricting the content of
those marked sections we could probably eliminate *all* occurances of
SGML-incompatibility until SGML is fixed.

 Paul Prescod
---
Boycott Shell Oil worldwide!  http://www.web.apc.org/embargo/shell.htm    

"Shell is here on trial and it is as well that it is represented by counsel
said to be holding a watching brief."..."The ecological war that the Company
has waged in the Delta will be called to question sooner than later." -Ken
Saro-Wiwa to the tribunal that later executed him.
http://www.goldmanprize.org/goldman/ken.html



