docno="lists-054-9877117"
received="Mon Oct 14 23:43:07 1996"
isoreceived="19961015034307"
sent="Mon, 14 Oct 1996 23:44:33 -0400"
isosent="19961015034433"
name="Arjun Ray"
email="aray@nmds.com"
subject="Re:  B.11 Empty end-tags?"
id="1.5.4.32.19961015034433.00383a24@www.nmds.com"
charset="us-ascii"
inreplyto=" B.11 Empty end-tags?"
expires="-1"


To:w3c-sgml-wg@w3.org

At 10:33 AM 10/14/96 -0700, Bill Smith wrote:
>Liam Quinn wrote:
>
>> I have no objection to </> in XML as long as there is no OMITTAG,
>> although it does slightly reduce robustness in the face of transmission
>> error or user error.
>
>This is an important point. The form </TAG> permits graceful error recovery by 
>an intelligent application.

Unless the XML spec will have normative statements regarding error recovery,
anything better than a coredump is graceful enough, IMHO. I'd like to repeat
my earlier comments:

  - A popular language *will* have untutored/unsophisticated users.

  - It will take just one implementation modeled on Mosaic 2.4 to
    make tag salad an ugly reality, *especially* if "graceful
    recovery" becomes an *expected* feature.  

>Also, Jon Bosak's comments on ease of processing are compelling.

The more general question is how much can the DPH expect to accomplish
with regular expressions alone? 

1. In general, stacks (or at a pinch, counters) will always be necessary:
SGML/XML markup is essentially a Dyck language, which is homomorphic to the
"hardest" CF language. Besides, one of the goals of XML is easy
implementations of parsers. To the extent this becomes a reality, the DPH
will have that much less work to do anyway -- somebody will have written a
parser package:-)

2. Maximizing the reach of regular expressions involves a tradeoff between
ease of use for the author (relatively freeform input) and ease of parsing.
For example, parsing nroff files is basically trivial, but the format isn't
very user-friendly. There's nothing to stop the DPH's talents being applied
to an intermediate (or canonical) form with such properties instead of the
"source".


Regards,
Arjun






 



