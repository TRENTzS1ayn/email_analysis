docno="lists-055-0372431"
received="Mon Sep 23 12:13:09 1996"
isoreceived="19960923161309"
sent="Mon, 23 Sep 1996 10:12:28 -0600"
isosent="19960923161228"
name="William D. Lindsey"
email="blindsey@bdmtech.com"
subject="Re: RS/RE: basic questions"
id="199609231612.KAA01115@blindsey.bdmtech.com"
inreplyto="199609231445.KAA25449&#64;www10.w3.org"
expires="-1"


To:w3c-sgml-wg@w3.org


All of the alternatives to the quoted pseudo element proposal for
dealing with the problem of REs in mixed content seem to have one or
more of the following problems:

a) Restrictive of what can go in mixed-content elements.
b) Subtly different from 8879.
c) Places a burden on a typist to learn and enforce rules.

If any of the proposals have none of these problems,  I apologize
for not having paid close enough attention.

I'm wary of breaking 8879 conformance, however subtly, without a
compelling reason.  It says that SGML isn't up to the job.  So, how
compelling are the disadvantages of the quoted pseudo element
proposal?  I tried, once again, to list them.  What have I missed?

Disadvantages:

1) Typists must quote data.
2) Many of today's SGML editing tools have difficulties with
   shortrefs.

Advantages:

1) Extremely simple, regular rules for RE/RS handling.
2) Completely 8879 conformant.
3) Inclusion exceptions less problematic.
4) PIs less problematic.

I'll add another of my own --

5) Precisely what the tool builders, whose support is fundamental to
   XML's success, are used to seeing in computer languages.

With this proposal, all we're doing is using SGML to create some
syntactical sugar which makes more apparent what SGML really does:
Provides for the linearized representation of hierarchically
structured data through a fully bracketed form and a prefix syntax.
In other words, we use SGML to make an SGML that looks more like SGML.

 
-Bill

-- 
William D. Lindsey
blindsey@bdmtech.com
+1 (303) 672-8954



