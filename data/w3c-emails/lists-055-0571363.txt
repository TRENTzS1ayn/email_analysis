docno="lists-055-0571363"
received="Mon Sep 23 23:51:54 1996"
isoreceived="19960924035154"
sent="Mon, 23 Sep 1996 21:51:10 -0900"
isosent="19960924065110"
name="W. Eliot Kimber"
email="kimber@passage.com"
subject="Re: some topics we haven't yet discussed"
id="3.0b24.32.19960923212041.00734e60@uu10.psi.com"
charset="us-ascii"
inreplyto="some topics we haven't yet discussed"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

At 07:15 PM 9/23/96 CDT, Michael Sperberg-McQueen wrote:

>* Should XML use the markup-declaration syntax described by ISO 8879
>clauses 10-11, or should XML define a specialized document type and let
>its markup declarations use the document-instance syntax, as proposed by
>MGML?

No.

I see no reason to try to define a new notation for declarations at this
time. It is a *non trivial* exercise to define a document type or
architecture for declarations, partly because the additional expressive
power of SGML gives you a lot more options.  Having spent quite a few hours
putting together a DTD for DTDs that attempts to provide some useful
features beyond simply reflecting the productions, I know that such an
effort will either be unsatisfactory or take a long time (or both): it will
either be a brain-dead transliteration of the productions (not useful, in
my opinion) or it will be a time-consuming document type
design-by-committee effort of the sort many of us have been involved with
(and about which Eve has written an excellent book).

I say no. The declaration syntax is understood and easy to teach. It's not
hard to parse and it's compact.

>(Using the same syntax for declarations and instances cuts the size of
>the grammar approximately in half.  It also reflects a firm belief that
>structured information belongs in SGML documents.)

While I certainly agree with the last sentence, in principle, I think the
counter arguments are compelling in this case.  If such a thing is to be
developed as a standard, it needs to be developed with careful
consideration of the implications the design will have.  It's not something
we can do quickly.
 
>* Should XML change the delimiter-in-context rules to require the STAGO
>and ERO strings to be escaped whenever they are not to be recognized as
>delimiters (9.6)?

This seems like a good idea.  It is easy to use short references to define
escape sequences for these, e.g.:  "~<", "~&", "~~" where "~" is the
"escape" character (but is really just the first character of a
two-character short reference delimiter).  I think a shortref approach is
better than MSO, for the reasons given below.  This doesn't break SGML,
only requires quoting where it might not otherwise be required (but where
people usually do it anyway). 

>* Should XML use MSOCHAR, MSSCHAR, and MSICHAR strings (9.7)?

No--escaping is easier and safer using shortrefs.

>* Should XML require system and public identifiers to be FORMAL (13.5)?

I think the better questions are:

A. Should public identifiers be FORMAL?
B. Should XML support formal system identifiers? Formal system identifiers
   are defined in the forthcoming TC to the HyTime standard and would be
   very useful in a Web context because of the additional information they
   can provide for storage managers.

I see no reason not to use FORMAL public identifiers. An informal public
identifier is no better than a system identifier really. Formal public
identifiers are functionally equivalent to URNs (to the degree I correctly
understand URNs). In fact, URNs and FPIs could be identical were it not for
an unfortunate syntax clash (both use "//" in different and unreconcilable
ways).

Note that the formal system identifier spec includes "URL" as one of the
starter set of storage managers, so it already anticipates interoperation
with the Web.

>* Should XML restrict comment declarations to a single comment (10.3)?

Or should we pretend that comment open is "<!--" and comment close is "-->"? 

While SGML *should* have different delimiter roles for comment open and
comment close (and probably will after the revision), it doesn't today and
this is an area where anticipating the standard would make XML documents
incompatible with existing SGML processors.  Thus, we *can't* do something
like make "/*" COMO and "*/" COMC, because those delimiter roles don't
exist in SGML.

Cheers,

E.
--
W. Eliot Kimber (kimber@passage.com) 
Senior SGML Consultant and HyTime Specialist
Passage Systems, Inc., (512)339-1400
10596 N. Tantau Ave., Cupertino, CA 95014-3535 (408) 366-0300, (408)
366-0320 (fax)
2608 Pinewood Terrace, Austin, TX 78757 (512) 339-1400 (fone/fax)
http://www.passage.com (work) http://www.drmacro.com (home)
"If I never had existed, would you still remember me?..."
                                   --Austin Lounge Lizards, "1984 Blues"



