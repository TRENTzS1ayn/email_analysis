docno="lists-055-0946261"
received="Tue Sep 24 19:43:36 1996"
isoreceived="19960924234336"
sent="Tue, 24 Sep 96 19:43:07 EDT"
isosent="19960924234307"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: questions about entities and entity declarations"
id="9609242343.AA20190@sqrex.sq.com"
inreplyto="questions about entities and entity declarations"
expires="-1"


To:kimber@passage.com,w3c-sgml-wg@w3.org

> At 11:41 AM 9/24/96 CDT, Michael Sperberg-McQueen wrote:
> I think describing EE behavior in terms of an EE character is
> likely to be significantly simpler than describing it in terms of
> a non-character signal, particularly to programmers weaned on C's
> treatment of newline and EOF.  It may also simplify implementation.

Actually, for what it's worth, C does not have a end of file character.
The standard library (part of C now with ANSI C) makes the various I/O
functions return an out-of-band signal when tehre's no more data.
read() returns 0 bytes, getchar() returns 0xFFFFFFFF or -1 (doesn't fit
in a char, although ISO10646 might cause problems) and so on.  This is
exactly like End of Entity, as I understand the latter to be.


Eliot wrote:
> I see that I misunderstood the proposal. I thought you meant allowing
> hexidecimal numeric character references, not defining an entity set where
> the names happen to be hexadecimal equivalents. I think the latter is a
> darn good idea.  

Of course, without a #DEFAULT entity, you'd need an awful lot of entity
declarations.  In practice in XML, you'd create them on the fly.  But
what would an SGML system do?  I suppose an XML to SGML converter, if
such existed, could write an entities.sgml file containing declarations
for them all, or coudl convert them to decimal char refs.

Lee



