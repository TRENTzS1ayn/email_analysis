docno="lists-055-10267970"
received="Sun Jan  5 06:08:44 1997"
isoreceived="19970105110844"
sent="Sun, 05 Jan 1997 11:48:11 +0000"
isosent="19970105114811"
name="Digitome Ltd."
email="digitome@iol.ie"
subject="Re:Link Indirection"
id="199701051108.LAA03124@GPO.iol.ie"
charset="us-ascii"
inreplyto="Link Indirection"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

[Peter Flynn]
>That's the very problem...I would not expect all browsers to adhere to
>HyTime, whether it is prescribed/recommended/whatever in the XML spec
>or not; and in any event, our discussion seems to turn on the precise
>aspect of this which causes the difficulty -- what to do with DTD-less
>`instances' 

[Eliot Kimber]
DTD-less instances is a good point and a strong argument for using
attributes only when you expect your data to be used in such an environment.
                         ^^^^^^
During the Genesis of XML authors might say to themselves:-

"Some XML browsers support DTDs. Some do not. For widest possible coverage
with my XML docs I should aim at the lowest common denominator XML
implementation.
Therefore I will do Hypertext entirely via attributes. Therefore I have to do
a ton of extra markup in my docs:-(

After the promised land is reached, and all XML browsers support DTDs this will
result in a "legacy XML" situation where Hypertext etc. has been hard-wired
via attributes and thus that much more difficult to maintain :-((("

Is this the case?

If so, the only way of circumventing this that I can see is getting the
browser and
the server to hand-shake to agree on the browsers capabilities.

DTD-Challenged XML Client gets a "SPAMmed" version of the XML document.
DTD-Aware XML CLient gets Instance + DTD.

This preserves the XML doc is a maintainable state (easy to change AF stuff
in DTD 
and have the changes refelected immediately in the instances) whilst avoiding
creating hard-wired instances.

 
Regards,
Sean Mc Grath
digitome@iol.ie



