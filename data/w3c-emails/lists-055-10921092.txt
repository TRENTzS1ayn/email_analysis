docno="lists-055-10921092"
received="Thu Jan  9 11:50:10 1997"
isoreceived="19970109165010"
sent="Thu, 9 Jan 1997 11:57:11 -0500"
isosent="19970109165711"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: Can we be more concrete? (3 cc's deleted from two headers)"
id="v02130502aefad1b7bee2@[128.148.19.115]"
charset="us-ascii"
inreplyto="Can we be more concrete? (3 cc's deleted from two headers)"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@www10.w3.org>

At 5:35 PM 1/8/97, Derek Denny-Brown wrote:
>At 07:13 PM 1/7/97 CST, Michael Sperberg-McQueen wrote:
>>This sounds suspiciously as if it would be impossible to point at
>>a link (or perhaps I mean to point at *an address*) in order to talk
>>about it, without slipping past it and landing at what it's pointing
>>at.  How on earth will I ever be able to write the definitive
>>cultural critique of hypertext with extensive discussions of the
>>linking practices of Kimber, Durand, and Allen, if every time I point
>>at Eliot's links I get an Altavista query for basset hounds?
>>
>>Surely there's a HyTime way around this problem?
>
>HyTime considers links and locators to be seperate constructs.  locators are
>pass-through in that if you point at it, you are effectively pointing at
>what it points at (ad infinitum).  hyperlinks are normal SGML elements in
>terms of pointing at them.  If you point at a link you are pointing at the
>element which defines that link.  (whether the element "knows" it is the
>definition of a link is another question....)

This is not strictly correct, as in HyTime you can set a limit on the
length of the ladder (was reflevel, in TC is ???). So If you really need to
point at a location element you can.

My original suggestion of 1 level of indirection was intended to support
this, as well as to simplify indirection. However, if we go to full
indirection, we should probably just live without the ability to point to
location addressing elements. Since such elements are included purely to
enable addressing, and not as content on their own, we can probably afford
to wait until the textual critics of addressing mechanisms come knocking on
our doors. After all, we don't intend to provide custom XML methods to link
to sub-parts of elements (like attribute values, etc.). I don't think even
HyTime can do this easily for parsed data, though maybe the new grove stuff
enables it. It's certainly neither high-demand (like direct addressing) or
high-payoff (like n-ary and independent links).

  -- David

I am not a number. I am an undefined character.
_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



