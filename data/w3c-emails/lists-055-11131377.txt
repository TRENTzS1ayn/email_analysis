docno="lists-055-11131377"
received="Fri Jan 10 06:21:49 1997"
isoreceived="19970110112149"
sent="Fri, 10 Jan 1997 12:01:10 +0000"
isosent="19970110120110"
name="Digitome Ltd."
email="digitome@iol.ie"
subject="Re: Radical cure for BOS confusion"
id="199701101121.LAA25568@GPO.iol.ie"
charset="us-ascii"
inreplyto="Radical cure for BOS confusion"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

>At 4:26 PM 1/9/97, papresco wrote:
>>At 01:05 PM 1/9/97 -0500, David G. Durand wrote:
>>>   If you want to _analyse_ link relationships, then I think a requirement
>>>to fetch the DTD is reasonable.
>>
>>Does this mean that the documents to be analyzed must adhere to a DTD? Note
>>that there is a large commercial market (and robust freeware "market") for
>>spiders, link checkers, web site downloaders, etc. DTD-less XML documents
>>should not be less workable in this regard than HTML documents.
>
>Ss far as I can tell, all architectural form proposals will require adding
>attributes to elements. If we don't want to put them on every single
>element we will have to put them in the DTD. If we let the first occurrence
>set a default, we have introduced a serial dependency of the sort we
>intentionally avoided in the definition of the XML language.

Are there not serial dependencies in XML already concerning, say, the
location of 
XML PI's relative to the constructs they talk about? Are serial dependencies
not 
a "good thing" in the sense that they will allow XML browsers to do 
incremental rendering/processing etc.

For elements though, "first-ness" is kinda fluid. XML->XML transformations
for instance. It could be quite easy to forget that prior to serialisation
after a tree transformation, an XML processing app. will have to re-establish
"first-ness" and add the necessary attribute decls.

It would sure be nice if XML processors could locate all the required
AF stuff in one easily locatable spot. As Eliot said recently, ot can be
done with the declaration subset but that requires extra DTD declaration
parsing software:-(

At the risk of sounding like a broken record. every new construct added 
to XML that is required for well-formed XML processing will make uptake
in the s/w dev. community that much more difficult. Playing devils advocate
for a moment a developer mentality might say:-
"Look, I have written the code to handle PI's. If you add extra semantic
stuff to XML, allow it do be done with PI's. My code reads/writes PI's already."

Sean Mc Grath
digitome@iol.ie



