docno="lists-055-11140503"
received="Fri Jan 10 09:32:46 1997"
isoreceived="19970110143246"
sent="Fri, 10 Jan 97 09:32:31 EST"
isosent="19970110143231"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: Radical cure for BOS confusion"
id="9701101432.AA27373@sqrex.sq.com"
inreplyto="Radical cure for BOS confusion"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

I've been away and am still catching up.  To be honest, I am still not
sure whether BOS is Bert Bos or some HyTime acronym or what...

However...

Paul Prescod:
> [...]  all architectural form proposals will require adding
> attributes to elements. If we don't want to put them on every single
> element we will have to put them in the DTD. If we let the first occurrence
> set a default, we have introduced a serial dependency of the sort we
> intentionally avoided in the definition of the XML language.

Sean Mc Grath:

> [...] Are serial dependencies not 
> a "good thing" in the sense that they will allow XML browsers to do 
> incremental rendering/processing etc.

No.  Write a server that serves up fragments of a 100 MByte document
by seeking to the appropriate byte offset, getting some information
out of a precomputed table, and appending the document fragment.
The more serial dependencies you have, the more complex that precomputed
table becomes.

Split up an XML instnce into fragments and store them in a database
and you have the same problem.

In either case, you'd probably want in practice to copy attributes
rather than using #CURRENT (the only way to represent uch defaulting
in SGML that I am aware of).

[...]

> It would sure be nice if XML processors could locate all the required
> AF stuff in one easily locatable spot. As Eliot said recently, ot can be
> done with the declaration subset but that requires extra DTD declaration
> parsing software:-(

All XML applicatihons are required to parse the subset already.
It's unfortunate that it uses a different syntax, so a more complex
parser is needed (or two parsers), but that is a legacy of SGML.

> At the risk of sounding like a broken record. every new construct added 
> to XML that is required for well-formed XML processing will make uptake
> in the s/w dev. community that much more difficult.

I couldn't agree more.

I argued against PIs and comments and marked sections, since element
syntax suffices for all of them, and is actually better for the purpose
in most cases!

If it had been possible to have multiple attribute declarations for
an element, you could add #FIXED attributes in the declaration
subset, or refer to an external file that did so.
Consider:

<!Entity % -XML-Anchors "XRef|SeeAlso|Compare">
<!Entity % -XML-url-attribute "href">
<!Entity % -XML-linkset-URL SYSTEM "xxx">
%-XML-linkset-URL;

where the linkset-URL file contains something like:
<!AttList (%-XML-Anchors;)
    %-XML-url-atribute; #FIXED "-XML-URL"
>

Well, this isn't allowed as it stands because you probably have attlists
for those elements elsewhere.  But an XML program could recognise the
fixed keywords I have used for entity names and enable the corresponding
processing automatically.

I'll go back and read the archives (I have all the messages) over the
next few days -- sorry if this has all been gone over before, but
judging from the comments in progress, I assuime it hasn't.

Lee



