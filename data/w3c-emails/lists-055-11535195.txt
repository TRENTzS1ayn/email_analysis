docno="lists-055-11535195"
received="Tue Jan 14 03:30:38 1997"
isoreceived="19970114083038"
sent="Tue, 14 Jan 1997 08:28:27 +0000"
isosent="19970114082827"
name="Martin Bryan"
email="mtbryan@sgml.u-net.com"
subject="Re: Permitting non-indirect links (2 ccs deleted)"
id="1.5.4.32.19970114082827.006a9588@mail.u-net.com"
charset="us-ascii"
inreplyto="Permitting non-indirect links (2 ccs deleted)"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

At 11:56 13/1/97 -0500, David G. Durand wrote:

>This is the first time that this point has been clear. Managing "bits of
>URLs" has not been clearly espoused before. The potential utility is high,
>for those willing to abide with the overhead.
>
>Can't this be done with general entity references?
>
><a href="http://&base-server;/&rootpath;/&this-subject-path;/&this-doc">

There are two problems with this appoach. One is the need to define entities
for each part of each URL in the BOS or document, and the second is that
each link has to look different so my second link has to read:

<a href="http://&base-server2;/&rootpath2;/&that-subject-path;/&that-doc">

A more user friendly approach is:

<a URL-method="http" URL-DNS="www.echo.lu" URL-path="oii/en"
URL-file="alpha.html" URL-fragment="X">

This is the same as the capture on HoTMetaL, but instead of resolving the
whole URL into a single string at capture stage it leaves the resolution to
the point at which calling of the file is needed. 

With indirection of the strings to XML location address IDREFS (beginning
xla for clarity) this would become:

<a URL-method=http XML-DNS=xla12345 XML-path=xla34567 XML-file=xla98765
XML-fragment=xla76345>

Note the use of different attributes to hold the two forms of information.
For overkill you could do:

<a href="http://www.echo.lu//oii/en/alpha.html#X" alt="pointer to XML"
URL-method=http URL-DNS="www.echo.lu" XML-DNS=xla12345 URL-path="oii/en"
XML-path=xla34567 URL-file="alpha.html" XML-file=xla98765 URL-fragment="#X"
XML-fragment=xla76345>

This way all browsers will be able to find the information they need to
either get teh entry from the up-to-date database it is available, build the
URL if they have the facilities, or use plain old HTML if they are
XML-dumb!! (I'm not really advocating this, just trying to show how they
could be compatible:-))


>HyTime location ladders can specify this, and I think that the use of
>relative URLs, along with the location facilities we have been talking
>about, would actually let you do the equivalent with links.

The problem is that HyTime location ladders don't seem to allow you to point
to subsections of location sources. For example, can I do a location address
just to a DNS, and then another just to a directory path at the DNS. I don't
think I can using pure HyTime, but I would sure like to for XML link management.

Similarly the SOIBase concept of formal system identifiers does not allow
for segmentation of the base, which is what I am asking for.
----
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK 
Phone/Fax: +44 1452 714029   WWW home page: http://www.u-net.com/~sgml/



