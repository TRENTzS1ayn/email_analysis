docno="lists-055-11786284"
received="Wed Jan 15 10:53:01 1997"
isoreceived="19970115155301"
sent="Wed, 15 Jan 1997 11:00:06 -0500"
isosent="19970115160006"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: Using HyTime Arcform stuff (was Re: Ephemeral XML?)"
id="v02130501af02aa72104b@[205.181.197.81]"
charset="us-ascii"
inreplyto="Using HyTime Arcform stuff (was Re: Ephemeral XML?)"
expires="-1"


To:digitome@iol.ie(Digitome Ltd.),w3c-sgml-wg@www10.w3.org

At 4:20 PM 1/14/97, Digitome Ltd. wrote:
>[David G. Durand]
>>   At any rate, I am still anxious that we see if we can do without a
>>declaration, and without namespace pollution either, but I suspect that if
>>we want to avoid the latter, we will need the former.
>
>I wonder if the effort involved in removing namespace pollution is worth
>the effort? I mean, the world is full of structured document formats
>(e.g. programming languages, data files of all descriptions) with polluted
>namespaces. I have been bitten by a fair few in my time:-
>
>  ... horrible examples deleted...
>
>My point is that the world is *used* to it.

Just because 90% of all software is crappy hell for the non-technical user
is no reason to intentionally add to the problem.

>Apart from the "<?XML" and ">" bits, this has the downside of being a
>brand new
>syntax requiring its own BNF, its own lexical and semantic analysis.
>Would it not be more in keeping with the "XML-mother of all data structures"
>philosophy to encode this as an XML snippit:-
><XML-ARCHS>
>   <XML-LINK>
>      <ILINKS>
>        <ELEMENT name = "ILINK">
>      </ILINKS>
>      <CLINKS>
>        <ELEMENT name = "a">
>        <ELEMENT name = "footnote">
>      </CLINKS>
></XML-ARCHS>

Once the DSD died (*see bottom for a historical note on what a DSD was*),
we lost the simple opportunity to do this. Now the user would have to
include declarations for the XML-elements in their document, or we have to
add a whole new bunch of odd conditions on where these elements can occur.
Thay have to be within the root element, but where? If they weren't in the
root element, we would not have SGML compatibility -- this doesn't bother
me in theory, but after all the improvements we have given up to ensure it,
we can't stop now.

>Obviously this pollutes the namespace but I am not convinced that this is a
>major
>disadvantage.

>By prefixing all "reserved" element names with "XML-" we would
>have a readily understood rule for developers/authors to get their heads
>around.

This helps a lot, but the syntax bloat is significant. We also lose the
nice feature of using AFs where we can have several GIs with the same
function -- anyone who has tried to manage footnotes in HTML can appreciate
the value of this feature!

>Moreover,
>non-XML-LINK aware but validating XML tools can catch structural problems in
>these areas rather that simply waving the contents of a PI through
>obsequiously:-)

I am not sure that there will be any non-XML-LINK aware tools, but this is
an advantage (probably offset by the user's need to declare the built-in
features).

>David, what am I missing????

If we had DSDs, you would be on target.

***** DSD

This was Tim Bray's name for his proposed method of replacing the SGML DTD
syntax with XML element syntax. Despite strong support for some variation
of the DSD, the notion was scotched in favor of SGML compatibility. If we
had adopted element structure for declarations it would be easy to extend
them now, but since we did not, we would have to figure out how to put the
declarations into the document itself. PIs in the subsets, sad to say, are
the current best solution for that.

   Personally, I am very inclined towards using the PI declaration (either
Eliot's proposal or mine) and putting the attribute declarations in the
internal subset.

   -- David

I am not a number. I am an undefined character.
_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



