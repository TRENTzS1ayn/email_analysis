docno="lists-055-11897179"
received="Wed Jan 15 19:21:09 1997"
isoreceived="19970116002109"
sent="Wed, 15 Jan 1997 18:20:59 -0600"
isosent="19970116002059"
name="len bullard"
email="cbullard@hiwaay.net"
subject="Re: Using HyTime Arcform stuff (was Re: Ephemeral XML?)"
id="32DD746B.AB6@hiwaay.net"
charset="us-ascii"
inreplyto="v02130500af02a7f17990&#64;[205.181.197.81]"
expires="-1"


To:"David G. Durand"<dgd@cs.bu.edu>
CC:w3c-sgml-wg@www10.w3.org

David G. Durand wrote:
> 
> At 2:32 PM 1/14/97, Len Bullard wrote:
> >>    DSSSL is the only processing standard that this group is comitted to
> >> produce. I stringly believe that we need to address CSS, and a way to pass
> >> markup structures to Java applets via some kind of CSS and DSSSL bindings.
> >> But that is not an argument for the moment, I think.
> >
> >Ok.  I am not sure many people understood the implication of a
> >commitment by the group to DSSSL bindings to Java applets.
> >
> >1.  Getting DSSSL support will be as hard or harder to get
> >than HyTime support.
> 
> I tend to agree, and that's why I hope for CSS support as well... I
> actually hate CSS, but the momentum should probably be redirected, rather
> than ignored.

Since I use a different style system altogether, I have to get used 
to both of these.  My point is, there can be applications of 
XML that do not need DSSSL or CSS.  Peter Murray-Rust has 
the perfect example of the application-centric software.  It 
doesn't need to play any XML, like HTML, it plays CML/XML.

We all like *generalized* systems, but in the age of cheap 
object libraries, I am happy to get one optimized for one 
job.  Many tasks don't require *generalized* data but 
do require easy interoperation with the other notations 
used in their aggregate representation.  An information 
kiosk, for example.  Only some of the information is 
updated or moved.  True, we can build that with RTF but 
why have more tools for the same job?

> >2.  Java is a very slow object system.  Active X controls are more
> >efficient if
> >less secure.
> 
>    Active-X is a vendor-dependent, platform-dependent closed system. I
> certainly hope it will die. I also think (and hope) that
> architecture-dependent software interfaces are doomed to slow death.

It's current rate of replication is high, ecologically speaking.
 
>    One another front, I will only use an "operating system" from MS when
> hell freezes over. So I'm perhaps a bit biased, since I expect Active-X to
> do nothing for me.

Ok, but that's a choice some customers choose for us.
 
>    But the vendor-neutrality issue is a better reason than personal onus
> (and sufficient, too).

Heavens! I don't want to settle on Active-X, I want to be sure XML 
has property in that framework too.  It's a big neighborhood.
 
> Maybe we should use a new term like "processing specification"? If we are
> generalizing the term stylesheet to the point that people at large will not
> understand the concept, we should find a new term.

Yes.

len



