docno="lists-055-12069539"
received="Fri Jan 17 16:30:49 1997"
isoreceived="19970117213049"
sent="Fri, 17 Jan 1997 21:28:05 +0000"
isosent="19970117212805"
name="Martin Bryan"
email="mtbryan@SGML.U-NET.COM"
subject="Re: Permitting non-indirect links"
id="1.5.4.32.19970117212805.006ab6a0@mail.u-net.com"
charset="us-ascii"
inreplyto="Permitting non-indirect links"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

Eliot Kimber wrote:
>>For those that don't want to use entities is there any way we can do this by
>>stringing together attribute values?
>
>I'm not sure what you mean by "stringing together attribute values".  Do
>you mean the values of attributes specified on different location address
>elements (as in David's example) or attributes specified on the same
>element.  If the latter, I'm having a hard time seeing the management
>benefit, although I could see the benefit in separating out the different
>semantic components of a URL string (except that, as has been pointed out
>in the "URL editing dialog" subthread, it may or may not be useful to
>provide that for a syntax as simple as URLs).

It was the latter. I was wondering that if we chose, for ease of
creation/management reasons, to split up the URL definition so that we
allowed separate attributes for the component parts we would then stab
ourselves in the foot by not being able to use the component parts for
addressing. For example, if we then need to address using queries as you
suggest the loss in addressing would offset any gain in being able to manage
the component parts more simply.

What would be nice is there was a clever trick that would allow us to use
IDs/entity names/xml-pointers for each of the component parts of a split-up
URL, as I suggested earlier with something like:

<alink URL-method=http URL-DNS=xml1234 URL-path=xml12345 URL-file=xml12346
URL-fragment=xml123457>

In this case the names point to the location source components strings in
the entities/catalog/database without having to create the location ladder
in HyTime directly - the location ladder is implicit in the XML attribute
sequencing. Its not HyTime, but it is a possible shortcut to building
location ladders that might help overcome the reluctance of the XML
community to using the full power of HyTime's location source and location
ladders.

(Eliot: Having written this I came across the new rflocsrc attribute, which
means that I may be able to do this and be HyTime compliant after all!
Brilliant! Am I right in thinking that rflocsrc can be made to stack so that
it handles the chain given above where URL-fragment references URL-file
which references URL-path which references URL-DNS. It would really be cool
if the URL-file name was the content of the element using the #CONTENT
option you have allowed for!!)
----
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK 
Phone/Fax: +44 1452 714029   WWW home page: http://www.u-net.com/~sgml/



