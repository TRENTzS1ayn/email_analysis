docno="lists-055-12104909"
received="Sat Jan 18 18:33:42 1997"
isoreceived="19970118233342"
sent="Sat, 18 Jan 97 18:33:24 EST"
isosent="19970118233324"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: Permitting non-indirect links"
id="9701182333.AA10789@sqrex.sq.com"
inreplyto="Permitting non-indirect links"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

> Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK 
> What is at question is whether pre-decomposition
> would offer any advantages. I'm not certain it does, but I want these points
> to be seriously thought about [...]


It doesn't.

Note that a URL is actually a scheme identifier and then an opaque string.
Some schemes are names of network protocols (e.g. http, ftp) and some are
not (e.g. mailto).

How are you going to break down
    http://www.somesite.xxx.yyy.zz:8086/cgi-bin/pcdocs/introduction.html
(there's actually an implied query being run there)

    ftp://ftp.somewhere:liam:mypssword/~lee/.profile

    mailto:BITNET:U002097 AT EARC26%gateway5.earn.ac.uk

    smell:192,304,61,01,97,201
(this is for the perfume industry)

when the meaning of *everything* to the right of the colon is
determined by the handler for the given URL scheme?

The only valid breakdown is
    type: URL
    scheme: http
    opaque string: //www.sq.cm/cgi-bin/pcdocs/introduction.html

but this isn't useful.  HoTMetaL cheats, and has (or used to have) a
config file giving templates for the various schemes.

Unless you want to keep a list of several hundred possible schemes
and how they break down, with differing attribute sets, I would
say that it is a bad idea to try this.

Yes, people like the HoTMetaL approach -- but that isn't standardised;
we have to update the code every now and again, too, to cope with new
kinds of URL.

Leave opaque strings as opaque.

Lee



