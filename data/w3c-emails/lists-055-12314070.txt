docno="lists-055-12314070"
received="Tue Jan 21 11:08:30 1997"
isoreceived="19970121160830"
sent="Tue, 21 Jan 1997 11:12:36 -0400"
isosent="19970121151236"
name="Murray Altheim"
email="murray@spyglass.com"
subject="Re: Multi-headed indirect links"
id="v02140b03af0a814f21e8@[208.203.149.72]"
charset="us-ascii"
inreplyto="Multi-headed indirect links"
expires="-1"


To:"W. Eliot Kimber"<eliot@isogen.com>
Cc:w3c-sgml-wg@www10.w3.org

"W. Eliot Kimber" <eliot@isogen.com> writes:
>At 07:26 AM 1/21/97 -0600, len bullard wrote:
>>Martin Bryan wrote:
>>>
>>> Given that nobody other than myself seems to be interested in indirect
>>> links, and that for direct links the only form that is getting any support
>>> is that of an opaque string, I ask myself whether the XML community has any
>>> interest in having multiheaded links?
>>
>>I thought everyone was interested in multiheaded links (if I understand
>>that correctly).  What I notice is that no design has emerged from
>>the discussion.  I see the same standoff that has existed between
>>HyTime and TEI proponents for a number of years now.
>
>This is simply not in any way true.  The ERB is well under way in adapting
>my stickman proposal into a formal first draft of the XML Link discussion.
>This proposal (the only complete one provided by anyone in this discussion)
>includes the use of both URLs and TEI extended pointers.  I trust Tim and
>Steve to do an excellent job of creating a short, readable, and complete
>design that satisfies the requirements expressed in these discussions,
>including the needs for both simplicity and convenience and sophistication
>and flexibility.  At least within the ERB, the general design approach
>appears to be remarkably uncontroversial.

Why can't this design be part of the general discussion (such as your
stickman proposal) rather than a ERB proposal. This discussion has gone on
a long time to now have the ERB make a draft proposal. Do we really have
two groups operating independently here?

>As I have tried to make clear on any number of occasions, *there is no
>inherent conflict between HyTime and the TEI specification*.  The two are
>quite synergistic: HyTime provides a general framework for structuring
>hypermedia and TEI provides additional structuring and descriptive
>semantics, as well as a very useful addressing notation that is well suited
>to the intended XML audience. [...]

I'd almost responded to Len's message when yours came in, and I was about
to remark that after reading through the materials I've either been able to
gather or have been sent to me by you and others, I found that much of the
documentation on HyTime to be frankly beyond me, while the TEI pointer
specification seemed to make almost immediate sense. This may be one of
those left-brain/right-brain things, but whatever conflict has been
occurring in the dozens of messages, it's been damnedly difficult to
follow, as I'm sure many of us will agree.

Hearing that there is no essential conflict between HyTime and TEI makes me
feel quite a bit better, but I don't understand why there has been such a
longstanding conflict over this issue if the solution can be written by Tim
and Steve so readily. From my standpoint the solution as you describe it
sounds great but the process by which we get to a draft proposal seems
rather opaque.

>With the HyTime TC, it will, in all likelihood, be possible to define the
>*current* TEI design, in its entirety, as a conforming HyTime application
>without the need to modify anything about the design itself.

Does this mean the XML ERB is planning to encompass the entire TEI link
guidelines, with all of the P3 features? Isn't that much more than a
minimal specification? It seems that XML ought to specify those parts of
the HyTime and TEI grammars that are required of a minimal (or at least
typical) XML application, not necessarily the extended pointer syntax,
regex matching, etc.

Can you give us an indication of how far into the more 'arcane' parts of
HyTime and TEI will the proposed XML link specification go? I certainly
like much of features I see, but it seems like a complete implementation
would be overkill for XML. This of course goes back to the argument over
XML being SGML-- or HTML++.

Murray

```````````````````````````````````````````````````````````````````````````````
    Murray Altheim, Program Manager
    Spyglass, Inc., Cambridge, Massachusetts
    email: <mailto:murray@spyglass.com>
    http:  <http://www.cm.spyglass.com/murray/murray.html>
           "Give a monkey the tools and he'll eventually build a typewriter."



