docno="lists-055-12962830"
received="Thu Jan 23 13:21:08 1997"
isoreceived="19970123182108"
sent="Thu, 23 Jan 97 13:20:44 EST"
isosent="19970123182044"
name="lee@sq.com"
email="lee@sq.com"
subject="Re:  Relationship types"
id="9701231820.AA08306@sqrex.sq.com"
inreplyto=" Relationship types"
expires="-1"


To:w3c-sgml-wg@www10.w3.org

Jon raised the quastion:

> Assume that some syntax has been specified for labeling the
> relationship between link ends.  Consider the following incomplete
> list of relationship types, lifted directly from existing proposals
> for HTML standardization:
> 
>    PARENT, CHILD, PREVIOUS, NEXT, IMPLIES
> 
> Is it possible to agree on a basic list of such types?
> Is it useful to agree on a basic list of such types?

Yes, it's useful.  Note that NCSA Mosaic and Lynx both have special
actions based on a number of such link type labels.

> If such a list were defined, would it be better to restrict the labels
> that could be applied to a relationship to the choices on the list, or
> would it be better to allow additional labels not on the list to be
> applied on an ad hoc basis?

I strongly believe it's best to have a prefix that indicates use of a
non-standard or private name space.  Otherwise you can never add to
the list without bereaking existing documents.
The other approach (equally OK, I think) is to use -XML-NEXT and so on.
(or we could drop the leading hyphen, as was done for PIs)

The paper on rel-rev that Murray and I (mostly Murray) wrote is online as

http://www.softquad.com/papers/draft-ietf-html-relrev-00.txt

Note that this is an interenet draft that has expired.  There was interest
in taking it forward, but neither Murray nor I has had the time, and
the lack of interest in the IETF by the two biggest browser vendors
means that there's probably not much point.

But it is worth reading, as is Tim Berners-Lee's writing on this subject in
1989, to gain a better understanding of how the web works.  It's very tiring
to hear how the web was designed to use untyped links from people who
have obviously not bothered to read up on the design.  It's also unfortunate
that typed links don't have enough glitz to attract early implementation.
Now that tools like FrontPage are becoming more common, people are beginning
to understand the usefulness of distinguished links.

Lee



