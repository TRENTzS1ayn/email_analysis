docno="lists-055-1303096"
received="Thu Sep 26 16:09:27 1996"
isoreceived="19960926200927"
sent="Thu, 26 Sep 1996 20:00:01 GMT"
isosent="19960926200001"
name="Christopher R. Maden"
email="crm@ebt.com"
subject="Re: Current Status of Discussion on RE/RS Handling"
id="199609262000.UAA04990@phaser.EBT.COM"
inreplyto="3.0b24.32.19960926131556.00c1eff4&#64;uu10.psi.com"
expires="-1"


To:w3c-sgml-wg@w3.org

[Eliot Kimber]

> I'll let other members of the ERB correct me if I'm wrong, but I
> believe our assumption, in fact the whole purpose of this exercise,
> is to enable the creation of *XML parsers* that are much simpler
> than SGML parsers but define XML in such a way that it also be
> processed as SGML without change (to the instance at least, it may
> be necessary to create a DTD or modify the XML DTD).

Absolutely.  An XML parser, implemented without reference to SGML, can
follow these rules simply.

However, by putting the rules in terms of the parser, it seems that
it's difficult for an SGML-based XML application to be compliant with
both XML and SGML.  Just by changing the rules from a parser rule to
an application convention, it becomes possible for an application to
be compliant with both SGML and XML.

> We want this to be done by an XML parser for the same reason SGML
> has the record end handling rules--so applications don't have the
> opportunity to do it wrong.

Definitely.  The rules are very clear; I'm just worried about *where*
the rules live.  It's slightly picayune, but now is the time to change
it if it's to be changed.

-Chris
-- 
<!NOTATION SGML.Geek PUBLIC "-//GCA//NOTATION SGML Geek//EN">
<!ENTITY crism PUBLIC "-//EBT//NONSGML Christopher R. Maden//EN" SYSTEM
"<URL>http://www.ebt.com <TEL>+1.401.421.9550 <FAX>+1.401.521.2030
<USMAIL>One Richmond Square, Providence, RI 02906 USA" NDATA SGML.Geek>



