docno="lists-055-13086668"
received="Thu Jan 23 15:46:05 1997"
isoreceived="19970123204605"
sent="Thu, 23 Jan 1997 14:34:52 -0600"
isosent="19970123203452"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: Relationship Taxonomy Questions"
id="32E7CB6C.50F7@hiwaay.net"
charset="us-ascii"
inreplyto="199701232023.AA23444&#64;mail.crl.com"
expires="-1"


To: Joe English<jenglish@crl.com>
CC:w3c-sgml-wg@www10.w3.org

Joe English wrote:
> 
> Len Bullard <cbullard@hiwaay.net> wrote:
> 
> > Joe English wrote:
> > > Another category of link behaviour is "transclusion" or
> > > "simultaneous presentation" linking.
> >
> > it can also be thought of and practically implemented
> > as a "get" and avoid a lot of garbage description.
> 
> Ding!  Thank you!  I've been hunting for a good
> word to describe this sort of link, and "get"
> is just right: short, Anglo-Saxon, and to the point.
> Much better than the polysllabic obfuscatory Latinate
> terminology I've been using up to now.
> 
> > > [Jon Bosak]
> > > > 2'. In particular, I think that it is of the utmost importance to
> > > > distinguish meaning (relationship typing) from behavior (which
> > > > includes presentation).  I think that the analogy between semantic
> > > > tagging vs. style information in SGML and relationship typing vs. link
> > > > behavior is an apt and powerful one.
> >
> > And one not embraced by the majority of web applications.  They
> > may know something.
> 
> Wait a minute... I thought the whole premise of the XML
> effort was that the architectural foundation of the
> majority of Web applications -- HTML -- is not powerful
> enough to enable the kinds of applications the SGML community
> would like to see.  Or does that premise only apply to
> HTML's fixed tag-set and not to its (admittedly primitive)
> hyperlink mechanism?

It is.  However, with server-side HTML or server-side SGML 
and a good hybrid object-relational database, the database
handles most of that.  Relationships as described by Eliot 
are old link database records, a la 1970.  Useful, but 
not earth shaking technology.  They have problems with 
metamorphosis in the name space (typically solved in 
hybrid DBs with unique ID maintenance of object instances)
but that is a different problem.

The problem is to figure out if hyperlink means:

o data object

o record

o structure

By all means put a non-normative set of relationship types 
in the spec.  But these are domain-specific relationships.
They are application conventions.  Topics, if you will.

Once you try to specify a class relationship (supertypes, subtypes) 
and expect inheritance and interoperation, you have to specify  
standard operations.  As Eliot says, a hyperlink is just another 
element type instance.  They belong in a DTD.  Should those
opeations be defined in the stylesheet/processing specification 
or as class methods?  That is for the market to work out.
However, if you expect these XML processors to interoperate, 
the easiest approach is to use some "pernicious" concepts 
from real world systems.  Your sponsors are already doing that.

len



