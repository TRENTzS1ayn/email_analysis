docno="lists-055-13106462"
received="Thu Jan 23 16:31:01 1997"
isoreceived="19970123213101"
sent="Thu, 23 Jan 1997 15:19:30 -0600"
isosent="19970123211930"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: Relationship Taxonomy Questions"
id="32E7D5E2.B45@hiwaay.net"
charset="us-ascii"
inreplyto="v02140b05af0d72e69144&#64;[208.203.149.72]"
expires="-1"


To: Murray Altheim<murray@spyglass.com>
CC:w3c-sgml-wg@www10.w3.org

Murray Altheim wrote:
> 
> Len Bullard <cbullard@hiwaay.net> writes:

> >And one not embraced by the majority of web applications.  They
> >may know something.
> 
> I believe a more accurate answer here is that the majority of Web
> applications only lex the documents, and therefore don't build parse trees
> that would enable more complex link relationships. 

I accept that as a fundamental.  The question is why not and since 
Spyglass was the company responsible for Enhanced Mosaic, you should 
be able to tell me.  On the other hand, ActiveCGM objects have an 
application layer which they use.  VRML has a very powerful link 
type and script nodes with parameters.  

Only the SGML community believes it can do without these things and
build interoperable 
software, and so far, it has blown away a decade long lead 
trying to do so.  Fundamentally, the SGML community has 
talked much and built little with regards to WAN-capable 
hypermedia.  I believe the inability to come to grips with 
the flaw in data-declaration-only specifications is part 
of the reason for that.  Perhaps that is why in DSSSL there 
is little of SGML and a lot of Lisp.

> This design decision may
> have been the result of the assumption of broken HTML markup and/or the
> inability of the programmers to create something as complex as nsgmls for
> WWW that could also provide error recovery. A whole lotta error recovery.

That is good.  Historically, Marc Andreesen is also on record as 
saying, and his company saying, "we don't believe in SGML".  Berners-Lee 
is on record as saying he didn't believe people would type in all 
those tags, and I believe, the original model target was RTF.

That said, it is irrelevant.  I think we all agree that XML will 
not be targeted to the HTML user.  The problem is in defining 
the requirements of the user it is targeted at, and getting 
those requirements written in a clear language that can be 
used as a basis for implementation.
 
> Spyglass, Microsoft, Netscape and I'm sure most other Web browsers couldn't
> respond to a request to jump "within element with ID 'a25', to third child
> of type 'P' within the second child of type 'LI'" if you held a sharpened
> potato to their heads. And this ability is precisely (for me) one of the
> exciting promises of XML links.

Yes.  On the other hand, getting a server to generate that for you 
isn't difficult, so they tell us in their literature.  It's done 
by a process, of course.

My point is simple:  no normative linktypes.  A way to express a 
linktype is already available.  It is an element type.  Will these 
interoperate?  Only if the application programmer understands 
the behavior implied or noted.  But those are application conventions 
and do not belong in the normative parts of the XML specification.

If they are there, and they are not procedurally defined (that is, 
the operations for the data structure are not defined by function  
or axiomatically), then their originators deserve the good horse laugh 
the implementors will give them, and return to writing server-side 
scripts for LiveWire.

len bullard



