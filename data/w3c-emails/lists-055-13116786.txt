docno="lists-055-13116786"
received="Thu Jan 23 16:31:14 1997"
isoreceived="19970123213114"
sent="Thu, 23 Jan 1997 16:35:20 -0400"
isosent="19970123203520"
name="Murray Altheim"
email="murray@spyglass.com"
subject="Re: Relationship types"
id="v02140b04af0d6f05a802@[208.203.149.72]"
charset="us-ascii"
inreplyto="Relationship types"
expires="-1"


To:lee@sq.com
Cc:w3c-sgml-wg@www10.w3.org

Liam Quin <lee@sq.com> writes:
>murray@spyglass.com (Murray Altheim) wrote:
>> bosak@atlantic-83.Eng.Sun.COM (Jon Bosak) writes:
>> >Is it possible to agree on a basic list of such types?
>>
>> In English, possibly. Not much use for the rest of the world unless you as
>> a non-English speaker don't mind learning the meanings of some rather
>> complicated relationships in a foreign language.
>
>User agents are free to use local translations in an interface, just
>as some user agents choose not to display the pointy brackets that
>surround a BR element in HTML... :-)

I'm speaking particularly of document authors. If one is creating a new XML
application (ie., DTD) and a source document in Japanese, it's a somewhat
straightforward process to create a <B>-like element called something
appropriate in Japanese and link it to a <B>-like behavior in a stylesheet.
But the inclusion of link types would have to be in English if added as
part of the core XML specification, unless we create some type of
generalized binding, which is what I thought arcforms may be able to
provide.

>The alternative is to use numbers, as per the MARC library cataloguing
>scheme, but in fact arbitrary sequences of letters are probably no harder
>to use than arbitrary sequences of numbers...

Agreed. But the idea of establishing only the binding between an open
namespace of elements/attributes and an open namespace of
behaviors/relationships/
presentational directives in a document which we may call a stylesheet, and
not the specific GI names, etc. is what I thought a meta-language was
about. Once we begin to specify specific, named relationships, we are into
the realm of DTDs and application conventions, ala RFC 1866.

Murray

```````````````````````````````````````````````````````````````````````````````
    Murray Altheim, Program Manager
    Spyglass, Inc., Cambridge, Massachusetts
    email: <mailto:murray@spyglass.com>
    http:  <http://www.cm.spyglass.com/murray/murray.html>
           "Give a monkey the tools and he'll eventually build a typewriter."



