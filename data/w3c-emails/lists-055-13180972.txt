docno="lists-055-13180972"
received="Thu Jan 23 17:48:22 1997"
isoreceived="19970123224822"
sent="Thu, 23 Jan 1997 16:37:04 -0600"
isosent="19970123223704"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: Relationship Taxonomy Questions"
id="32E7E810.5302@hiwaay.net"
charset="us-ascii"
inreplyto="v02140b06af0d7c1fbc15&#64;[208.203.149.72]"
expires="-1"


To: Murray Altheim<murray@spyglass.com>
CC:w3c-sgml-wg@www10.w3.org

Murray Altheim wrote:
> 
> Well, I can't speak for that development team, as I wasn't with the company
> at that time, nor even in the same location. I can say that for the
> Stonehand HTML Browser (which was based on nsgmls), we'd never gotten as
> far as creating a generalized error handler: sometimes errors would
> literally blow out the application. Then again, it wasn't a finished app.
> But ironically, such an error handler would basically be Mosaic. IOW, build
> a parse tree until an error and then dump the tree and do the Mosaic thing.
> Behavior had to match the rest of the market, so that was also an important
> design decision. Our responses to broken markup had to be the same as
> MSIE/Netscape, or we weren't competitive.

Understood.  When we built IADS and IDE/AS, we had a smart customer 
who understood where SGML began and stopped.  We used the DTD for 
validation and the stylesheet for everything else.  We fixed the 
linktypes and configured target types.  We got beat up very badly 
by some members of the SGML community and went on about our business.
Then along came HTML, there was money to be made, and the "SGMLWay" 
whatever the hell that means was abandoned after the gold rush.

So yep, go with the market.
 
> So, there wasn't much use for the nsgmls parser on the open Web, given the
> miniscule number of valid documents. The market for the product was
> corporate intranets and the SGML community (where validity is assumed).

That was the web then and now.  We can change that, but that will 
be an SGML product market.
 
> Point being that there's no point in building a complex product that seldom
> gets used, particularly given the catch-22 of document authors not even
> being able to assume any real UA ability to handle any of that content. I
> think Spyglass' original interest in Stonehand's SGML browser was somewhat
> quelled when they figured out that they'd still need Mosaic. Pretty damned
> big footprint, too.

Can be.  We stripped SGML first.  sgmls wasn't available then, a 
good parser cost a fortune, and writing one wasn't reasonable.
Once sgmls became available, we added it as a validation tool 
for authors.
 
> I think Spyglass' (or at least Stonehand's) view is more accurately stated
> as a pragmatic assessment of the HTML world as we knew it. Although
> sometimes I must admit feeling like one of the few in the company that does
> believe in SGML, especially now that we've moved into the 'device space'.

We have your code here.  We know.
 
> >That said, it is irrelevant.  I think we all agree that XML will
> >not be targeted to the HTML user.
> 
> I don't know why you make that statement. 

Because of the commitment of the principals in the web wars to HTML and 
all of the technology they have developed to support it.  They may 
change, but I don't expect it soon unless there is good money to be
made.

> The current "HTML user" is an
> enormously varied market, and I can think of enormous possibilities for XML
> where HTML just isn't cutting it. 

No disagreement here.  That is why I am at this dance.

> My belief is that authoring tools, REAL
> authoring tools will be required. Not PageMill-XML Lite.

The HTML author will have to see an advantage.  Other than the ones 
we know about archival, management, easy queries, etc., it is a hard 
case to make.  Selling SGML to the inexperienced is where most of us
got these ulcers we have.  No, what I mean is that the immediate 
flesh and blood, has a few bucks, market for 
XML is in the SGML community that already knows what to do with 
these tools.   Yes, I know:  intranets are where the money is.
Netscape has it written all over their homepage and I have the 
seventy pages of documents explaining how to do it with HTML.
 
> I don't think we can assume a target user, just as Tim BL couldn't possibly
> know where the Web was headed in the beginning.

Then he is not a very forward looking man.  Some of the rest of us 
knew immediately what it was and where it was heading. It wasn't 
that hard to figure out as it is a design we all tried a few 
times.  We usually got beaten up for "gencoding".  No, the 
brilliance of the web is the URL.  That solved a lot of problems 
that no one could get the SGML community to agree on.
 
> I wonder how much ends up in the spec. I still kinda like the idea of having
> a core spec and then adding recommendations as a separate layer, with some
> type of conformance mechanism for UAs to negotiate. In this way,
> alternative models could be developed and used, the whole idea behind
> meta-languages.

That is my preference as well.  I've been on record for some months 
now as favoring a spec with different layers of conformance.

> When we see Microsoft thumb their nose, we'll know. 

Microsoft is on record as saying "HTML is the backbone of the Internet".
However, marketing pronouncements don't mean that much to me.  Sales do.
As the joke goes, "when they scream hoedown, i hit the floor."

> I must admit my
> ignorance of arcforms (it's on the reading list), but I thought we could
> define links more abstractly rather than a set of normative ones.

So do I.  In fact, that is the only kind that interests me because 
I can pretty well see what we will have if we don't, and have a 
good idea of what we can do if we do.

len



