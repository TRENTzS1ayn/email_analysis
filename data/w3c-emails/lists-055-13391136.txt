docno="lists-055-13391136"
received="Fri Jan 24 14:44:19 1997"
isoreceived="19970124194419"
sent="Fri, 24 Jan 1997 13:32:36 -0600"
isosent="19970124193236"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: Relationship Taxonomy Questions"
id="32E90E54.3055@hiwaay.net"
charset="us-ascii"
inreplyto="v02130503af0ea3f4839b&#64;[205.181.197.81]"
expires="-1"


To:"David G. Durand"<dgd@cs.bu.edu>
CC:w3c-sgml-wg@www10.w3.org

David G. Durand wrote:
> 
> The XML charter has mentioned styleshets from day one. You may not want to
> use them, but that is not a constraint on those of us who accept the intent
> of the charter.

Nor a constraint on those who do not.  The competition will move 
from markup to stylesheet specifications.  And so it goes, but 
IMO, the easiest system will win.  Jean Paoli made that point 
very clear in Seattle to me, and I think he is right.

> >>    XML linking should also be about representation. This is not deep, just
> >> tacking labels on, and co-indexing executable functions to the labels later
> >> on. It's a good idea for links for the same reason that it is a good idea
> >> for texts.
> >
> >Goto(label).  Considered pretty weak even in C.
> 
> No, I was talking about naming elements. That's the core of the semantics
> of SGML. providing a facility to name link types is all we need to do here,
> just as a facility to name elements was all we needed to do in core XML.
> 
> It is weak, but it is also powerful, since you can idirect to _any_
> process, as opposed to being stuck with one analysis of what you want to
> do.

Good.  True.  Now, you are talking about a record.  I am claiming the 
right of authorship to tell you precisely what will be done.  I 
am doing that because if you(user) elect to skip step, and 
step has warning(KillerMiceInside), then I won't be liable to 
your widow.  We agree, applications do this.  We seem only 
to disagree, (maybe we don't) that an XML app designer can 
build this into the markup (data structure).

> So, if we are using XML and generic markup instead of RTF (even though it
> is in fact _more work_ in the short run), there might just be a reason.
> That same reason happens to apply to link behavior just as well as to
> formatting behavior.

Not always.
 
> >No doubt about it.  The trick will be to get a user who never had
> >to write a stylesheet before to do <font></> to do it now:  for the
> >cause.
> 
> We have already signed up for that task by using XML. If they've got to use
> a stylesheet for font, they might as well do it for everything. We might as
> well be hanged for a sheep as a lamb!

Ok.  We will hang together then.

> >>     In linking as with document structure, XML will have much more under
> >> the hood for the long term.
> >
> >Two blank eyes stare back from under the hood of the robe of
> >academic theory.  They see... a 1970 database where a millenium
> >object-oriented system should be.  The poverty...ahh, the poverty.
> 
> Give me a break. You're the one who is proposing that we settle on a list
> of hypertext behaviors, rather than leaving behavior open.

No. I'm saying don't settle on a list of linktypes.  The reason is 
because some people WILL need to specify behaviors and will and
have done so in markup.  Reality check:  just don't put the 
list in a normative section.  Allow for other appendices to be 
developed which show how to do other kinds of relationship 
linking.  Let the market hash it out.
 
> The crazed hacker says takes a slurp of coke, and says
>   "Hey it's real easy, see. The link behavior is just in this little macro.
> we can make goto do whatever we want."
>    His fingers tremble as he pages through the listing until he finds the
> right spot.  Then he stops, and listens, and says:
>   "No, no, we can't make those links different now. They're goto links. If
> you wanted footnotes to be different from cross-references you should have
> told me before we sent that data to be keyboarded. If you want to do that,
> we're going to have to look at every goto link in the whole 5 GB to see
> which are footnotes and which are xrefs"
> 
>     Ah, the horror... the horror...

hmm.  you must not be writing LiveWire server scripts.  the boredom...
the boredom.

len



