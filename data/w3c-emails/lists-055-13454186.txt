docno="lists-055-13454186"
received="Fri Jan 24 17:59:24 1997"
isoreceived="19970124225924"
sent="Fri, 24 Jan 1997 16:48:16 -0600"
isosent="19970124224816"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: Relationship types"
id="32E93C30.7F4E@hiwaay.net"
charset="us-ascii"
inreplyto="199701242108.AA01244&#64;mail.crl.com"
expires="-1"


To: Joe English<jenglish@crl.com>
CC:w3c-sgml-wg@www10.w3.org

Joe English wrote:

[snip] 

No disagreements.

> [***] My understanding of "the MID model" is based on the
>       November 1994 draft spec; I've not yet read up on
>       the current version, but it appears to have some
>       new functionality, including a multi-anchor, general-purpose
>       "relationship" link that would probably work as
>       an architecural base for "CLASSLINK".

Right.  The gosub/goto/spawn/other stuff is there in case
the author thinks they need it.  It is necessary to look 
at the original MID requirements in some detail to understand 
what the sponsor was after.  I'm not sure those are available.
I was quite surprised when I went to the navycals site to 
discover how much of the original MID documentation is missing 
or altered.  That is very disappointing because without that 
documentation, it is difficult to understand the reasoning 
behind what we did.  I may have some of that still in my 
possession, and may at some point in the future put it up 
on a site so it can be read.  It is important to understand 
that the sponsor wanted *behavioral specs* and *look and feel* 
in the document type.  We almost ended up with a CGM approach.

I have been studying the TEI extended pointers.  It includes 
a type attribute which appears to be used when the author 
wants to declare something (e.g, type=navigator).  It 
also appears this could be used should the author decides 
to include state management hints.  Lou's document is 
quite clear and easy to grasp.   This is BabyHyTime and 
something like that is a very good place to start with XML 1.0.  
I think it should be expressed as an architecture, but it might be just 
as easy to make a parameter entity and get the same effect.

So which chicken or egg came first:  reftype or targtype?
Just reading this, it looks like the authors went out 
of their way to use HyTime concepts but change the 
names to protect something or another.  Reftype has 
been around since Caps asked for it to use in 87269.

I'm still not sure how one would specify chained traversal 
to prevent goto/label where not safe, but I've not had 
the document for very long.  What I wanted in MID was a
sequence of locations one could point to using a nameloc 
and implying that identifier order was strict, but I 
was overruled on that one.  I thought it easier to 
say, "here is a list of id/locations.  Traverse in 
sequence".  So we used the chain element type and 
containment instead of indirection.

Regardless of how folks like it, scripts in declarative 
markup are now a way of life and will not go away.  As long 
as something like a script node can be declared by XML 
applications who wish to use the approach, fine.  I do 
not subscribe to the SGML Way on this issue.  Too hard 
on performance, and frankly, silly.  Nothing in SGML
except Charles' promise says it can't be used to 
create a scripting language, and in fact, it has 
been done several times.  Slow ones, to be sure.

In any event, a normative list is not needed.  Examples 
will do just fine.

len



