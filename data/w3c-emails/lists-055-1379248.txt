docno="lists-055-1379248"
received="Fri Sep 27 10:39:47 1996"
isoreceived="19960927143947"
sent="Fri, 27 Sep 1996 10:43:26 -0400"
isosent="19960927144326"
name="David G. Durand"
email="dgd@cs.bu.edu"
subject="Re: More on RE/RS"
id="v02130502ae707df4c5aa@[128.148.157.46]"
charset="us-ascii"
inreplyto="More on RE/RS"
expires="-1"


To:"Christopher R. Maden"<crm@ebt.com>,w3c-sgml-wg@w3.org

At 4:57 PM 9/25/96, Christopher R. Maden wrote:
>That certainly seems a reasonable interpretation, but I can't find
>anything to that effect in 8879.  Clause 7.6.1, "Record Boundaries",
>defines the rules for RE ignorance or preservation, but doesn't say
>anything about when the parser generates an RS or RE signal.  Charles
>Goldfarb's commentary thereto (pp. 321+322 of the SGML Handbook)
>discuss translating lines into records, but that's not normative.
>
>The best normative thing I can find is 4.140, "function character
>identification parameter: A parameter of an SGML declaration that
>identifies the characters assigned to the RE, RS, and SPACE functions,
>and allows additional functions to be defined."
>
>This suggests that, since characters are assigned to functions, that
>the characters in the document should assume the roles of these
>functions; ergo, if non-ocurring characters are the ones assigned to
>those roles, the function characters never occur.  Is that not the
>intended meaning?  If not, what is?

It's even easier. If the entity manager does not recognize the functions,
then the characters need never be generated. Nothing in the standard
_requires_ recognizing the RE/RS functions at all. Defining RS/RE out of
the code space is just to avoid wasting code points (which are valuable in
8-bit code-spaces) on something that will never occur. Within a 10646
framework we could even choose a particular code in the private-use area,
given the improved number of codepoints available.

  -- David

--------------------------------------------+--------------------------
David Durand                  dgd@cs.bu.edu | david@dynamicDiagrams.com
Boston University Computer Science          | Dynamic Diagrams
http://www.cs.bu.edu/students/grads/dgd/    | http://dynamicDiagrams.com/



