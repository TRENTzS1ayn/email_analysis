docno="lists-055-13991378"
received="Wed Jan 29 11:36:14 1997"
isoreceived="19970129163614"
sent="Wed, 29 Jan 1997 11:34:22 -0500"
isosent="19970129163422"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: Entity and Element Addressing"
id="199701291634.LAA00586@nathaniel.ebt"
inreplyto="3.0.32.19970129071943.00a76410&#64;pop.intergate.bc.ca"
expires="-1"


To:tbray@textuality.com
CC:w3c-sgml-wg@www10.w3.org

>My conception of Well-Formedness has always been along the lines of
>"you can build the right parse tree".  Now, we have partially ducked
>that by saying that you don't have to fetch & parse external text entities;
>but you do have to know what the reference is pointing at.

Fine. My point is that even if entities are "missing", the result of a
parse should be "well-formed" (ie. the tree is correct except for the
missing nodes).

>What are the advantages to relaxing this restriction?  And if there
>are lots of others who agree with Gavin on this, speak up. - Tim

  1) It allows you to use entities, even when you don't have a
     declaration subset or DTD.
  2) It can help to reduce packet sizes in a realtime environment.
  3) It can make it easier to generate content dynamically.

My ideas for entity resolution were posted long ago to this
list. Basically, if all else fails (ie. no catalog, no declarations),
then I would like to see clients looking for "foo" or "foo.xml"
relative to the URL of the referring entity. A little extra robustness
and flexibility.



