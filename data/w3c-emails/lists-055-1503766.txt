docno="lists-055-1503766"
received="Fri Sep 27 17:04:56 1996"
isoreceived="19960927210456"
sent="Fri, 27 Sep 1996 16:03:55 -0500 (CDT)"
isosent="19960927210355"
name="R A Milowski"
email="milor001@gold.tc.umn.edu"
subject="Re: questions about element declarations"
id="324c413b2dc6002@gold.tc.umn.edu"
charset="US-ASCII"
inreplyto="v02130503ae707f1208d0&#64;[128.148.157.46]"
expires="-1"


To:w3c-sgml-wg@w3.org

 David Durand  writes:

> I disagree with this, though. I think that there is a good case to be made
> for requiring (or at least encouraging) XML processors to generate a DTD
> when applied to a file lacking one. I think that for a certain sort of
> "word-processing" DTD for one-off documents, this could be very useful. And
> for those unwilling to create DTDs, the automatic DTD would at least keep
> the issue open, and perhaps even make the process less arcane-seeming.
> Perhaps this should only be a suggestion rather than a requirement. Some
> software, like a browser,  is most frequently run on documents where the
> user is _not_ an author, and could care less about having a DTD.
> 
>     I changed my mind on this after heariong about how some users use
> OCLC's Fred to assist the process of DTD development (rather than to patch
> a DTD onto any old crap).
> 
>    In other words, I expect the kind of DTD-less processing Paul fears
> (users will indeed do anything they are allowed to do), but I think it may
> be an opportunity to educate people.
> 
>    I do agree that grammar induction is a hard problem, and would
> discourage any specification of _what DTD_ a tool should create, except
> that it should validate the one instance in question. This will allow
> implementations to compete on the qulaity of grammar induction (if people
> care about it), and not be too inconvenient for lazy parsers: "create an
> ANY delcaration for every element you see".
> 

This is a good lead in to a big issue I have with "DTD-less" parsing.

It seems to me that we are taking a big step backwards by not using and
requiring DTDs.  I would rather see us push forward with the SGML standards
process and allow more data modeling features in SGML.  Right now, SGML's
definitions allow sufficient modeling, but I would like to see it go
further.

If we don't require DTDs we are going to get some rather useless information
from most authors.  They won't take the time to figure out what they
should do.

My company, among many things, is using SGML technology to help people
develop web applications.  I hear all the time: "There's something
wrong with the DTD, it won't let me do X."  Usually, there is nothing
wrong with the DTD, the author just didn't understand the structures
necessary to do what they wanted to do.  The DTD kept them from
producing invalid and bad HTML.

It would seem that it is a requirement that DTDs be used in the
authoring process.  If DTDs are used in the authoring process, they
they should be available for interchange.  If they are available for
interchange, they should be used in some way be the receiving application.

It is not necessary that a receiving application have a validating SGML
parser, only that it extracts the necessary information from the
complete DTD to properly interpret the document.

Am I alone in this position?

Correct me if I am wrong, but it does not seem that DTDs are the problems
in parsing SGML--especially after the long involved conversations over
RE/RS.

==============================================================================
R. Alexander Milowski     http://www.copsol.com/   alex@copsol.com
Copernican Solutions Incorporated                  (612) 379 - 3608



