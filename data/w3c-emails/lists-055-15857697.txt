docno="lists-055-15857697"
received="Mon Jun  9 11:03:06 1997"
isoreceived="19970609150306"
sent="Mon, 9 Jun 1997 10:41:45 -0400"
isosent="19970609144145"
name="Gavin Nicol"
email="gtn@eps.inso.com"
subject="Re: PI-&gt;MIME-&gt;PI (was Re: Comments on Part 1: Encoding declaration)"
id="199706091441.KAA12054@nathaniel.ebt"
inreplyto="199706071829.EAA08092&#64;jawa.chilli.net.au"
expires="-1"


To:ricko@allette.com.au
CC:w3c-sgml-wg@w3.org

>I have previously made the comment that XML generators should be
>quick to stick in BOM and encoding PIs, but that transmitters and
>clients should err on the side of caution and remove them if there is 
>any doubt (or duplication).
>
>The best place for this to occur may well be at the server, to use and
>strip the charset pseudo-attribute in the encoding PIs into the charset
>parameter of the MIME header (and then reintroduced if the file is saved
>to disk at the client end).   PI -> MIME -> PI

This is kind of like the proposal for the <meta> tag in HTML, which no
servers that I am aware of actually respect. The reasons generally
given are that a) it would cost too much (I think this is a lie
personally) in time, and b) you can't reliably parse it, c) we have a
better way (Apache ASIS).

>The reason for the encoding PI was that XML documents will have a life
>before and after transmission: not all of them will be generated on the 
>fly.   I think Gavin has provided a good argument why MIME charset 
>may be preferable to encoding PI's charset for transmission. 

Sure, and would dearly love to have some standard way of packaging
up an object, and the meta-data associated with it (which is what
we're really talking about here anyway). 

>The chain of detection should be for servers and when the MIME header 
>is incomplete.  

Yes, though I would say "for servers in the absence of anything more
reliable". For example, if I had Apache, or a server supporting *.mim,
I'd use that in preference to the detection chain.

>But lets not complicate things. Lets just make the 1.0 draft 
>just have the chain of detection for a local file, and leave it up to 
>implementers of servers and clients to figure out a policy for
>making use of this information w.r.t. http.  XML is a markup 
>language, not a high-level networking protocol.

Quite right. This is one reason why I didn't want any of this in the
spec. anyway. This is a metadata issue, and has nothing to do with
XML.



