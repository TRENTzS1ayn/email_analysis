docno="lists-055-15970173"
received="Tue Jun 10 15:08:48 1997"
isoreceived="19970610190848"
sent="Tue, 10 Jun 1997 14:08:03 -0500"
isosent="19970610190803"
name="Paul Grosso"
email="paul@arbortext.com"
subject="Re: Update on namespaces"
id="3.0.32.19970610140658.0069bd3c@pophost.arbortext.com"
charset="us-ascii"
inreplyto="Update on namespaces"
expires="-1"


To:w3c-sgml-wg@w3.org

I've read Martin's and Andrew's replies, but I'm using Jon's
message as the base for my comments.

I'm not sure I see the need to discuss behavior or even "meaning"
at all with respect to namespaces.  While a DTD (or namespace)
can include (usually non-machine-readable) semantic information,
that isn't standardized and doesn't need to be part of the
standardized solution to XML namespaces at least for the first
pass as far as I see it.  For me, the namespace issue is more
just how to indicate for any (element or maybe attribute) name
from what DTD/namespace it comes.

At 23:06 1997 06 09 -0700, Jon Bosak wrote:
>In order to better understand the requirements for namespaces, several
>members of the SGML ERB met in phone conference with key participants
>in the PICS-NG effort last Friday.  We didn't get through all the
>issues in the time available, but we did arrive at some important
>preliminary understandings.  There seemed to be general agreement on
>the following:
>
>1. One workable way to universally disambiguate the names of elements
>is to associate them somehow with specific URIs.  Not everyone agrees
>that this is the best way -- some of us would prefer a mechanism like
>the SGML formal public identifier -- but there seems to be a general
>acknowledgement that it will work.

I like to think of the "namespaceid" that (per some syntactic suggestions)
might precede the gi name (with a colon separator) as a sort of notation
name.  Then, a declaration such as:
<!NOTATION namespaceid SYSTEM "...{URI or FSI}..."
or
<!NOTATION namespaceid PUBLIC "...{FPI}..."
(to show it using 8879 syntax, though the same thing could be accomplished
using other syntaxes) would map the namespaceid into the namespace. Given
that FSIs can point to an or group of storage identifiers, that would seem
to give us the "pointing to multiple namespaces" capability.


>
>4. As indicated in the example just given, it is necessary to be able
>to get more than one category of "meaning" about a given element.
>These different semantic axes may have to come from different places.
>For example, in <birthday>19850527</birthday> it may be necessary to
>point to one specification in order to indicate that the content
>refers to someone's date of birth and to a different specification to
>indicate that content happens in this case to be in ISO format.  This
>is multiple inheritance, but of a kind that can apparently be dealt
>with simply by providing the ability to attach multiple namespace
>identifiers to a given element.

I see no need to semantic axes to the namespace issue.  I don't see
why semantics can't be orthogonal to the "from which DTD(s) or other-specified
set(s) of declarations did this name come" question.

paul



