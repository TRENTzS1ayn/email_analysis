docno="lists-055-16106153"
received="Wed Jun 11 04:26:19 1997"
isoreceived="19970611082619"
sent="Wed, 11 Jun 1997 09:25:33 +0100"
isosent="19970611082533"
name="Martin Bryan"
email="mtbryan@sgml.u-net.com"
subject="RE: Update on namespaces"
id="1.5.4.32.19970611082533.006a7cd4@mail.u-net.com"
charset="us-ascii"
inreplyto="Update on namespaces"
expires="-1"


To:w3c-sgml-wg@w3.org

At 16:08 10/6/97 -0700, Andrew Layman wrote:

>notations do specify data types, and within the
>limits of XML public identifiers, notations are universally unique. 
>
>Notations suffer from a few problems from our point of view, and that is
>that they apply only to external entities, and types useful for routine
>data processing as types such as INTEGER or DATE are not standardized.
>The concepts are very similar, and maybe we can extend the idea of
>notation to cover element contents.

One of the reasons for not allowing NOTATION attributes for XML elements
(and therefore only for external entities) was to do with processing
simplicity. (Our 1 man-week myth.) 

If we use the notation concept for lexical typing of element contents (which
I would like) how could we ensure portability of the specifications? If the
rules are defined in something identified by a URL must that object return a
Java applet that can be used to validate the contents of the element? If so,
how can users control the applet? (For example, how can I say that I want
the applet I just retrieved from the US to display the date in UK
day/month/year format rather than its default month/day/year format?)

>However, notations are not the same as namespaces. Namespaces are not
>data types. Namespaces are a general mechanism that allows any element
>name (or by extension, any name) to be associated with a particular kind
>of system literal, a URI, and thereby namespaces allow any name to be
>made universally unique. Notations contain a mechanism by which
>notations can be universally disambiguated; but it only works for
>notations, it isn't general. Namespaces is a general mechanism that
>universally disambiguates any name.

This I agree with strongly, but have one question I would like to raise. The
notation of any element is strongly dependent on the DTD it comes from,
which must be determinable from its name space. Say I incorporate a date
element from data prepared by someone in Israel. It could be defined
according to the Hebrew or Arabic calendars. How would this optionality be
communicable via XML - as part of the referenced DTD, as part of the Java
code or as an attribute of the XML element?
----
Martin Bryan, The SGML Centre, Churchdown, Glos. GL3 2PU, UK 
Phone/Fax: +44 1452 714029   WWW home page: http://www.sgml.u-net.com/



