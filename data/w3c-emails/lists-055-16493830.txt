docno="lists-055-16493830"
received="Thu Jun 12 01:41:40 1997"
isoreceived="19970612054140"
sent="Thu, 12 Jun 1997 12:23:47 +0700"
isosent="19970612052347"
name="James Clark"
email="jjc@jclark.com"
subject="Re: rationales for TEI extended-pointer keywords"
id="2.2.32.19970612052347.017a51e8@jclark.com"
charset="us-ascii"
inreplyto="rationales for TEI extended-pointer keywords"
expires="-1"


To:w3c-sgml-wg@w3.org

At 18:18 11/06/97 EDT, lee@sq.com wrote:

>> It makes my life harder as an implementor to have to support both
>> typed and untyped counts: making typed and untyped counting efficient
>> requires different data structures.
>I don't see that -- if you have typed data structures, can't you use
>those for untyped links too and ignore the type?

For example, if I was doing only typed counting I might store in the
document for each element type an array of pointers to elements of that type
in the order they occur in the document.  Then in each element I might store
the index of that element amongst all elements of is type and the index
amongst all elements in the document.  That would allow be to do typed
preceding and following efficiently.  But it wouldn't help me with doing
untyped preceding and following efficiently.  For that I would also need an
array of pointers to all elements in the order they occur in the document.

>* for an attribute name is just as useful as * for an element type.

You didn't provide any argument for this.  I'm not saying you're wrong, but
I don't think it's obvious.

It's easy to implement any of these uses of * slowly, but implementing each
of them efficiently on large documents requires that additional information
be stored.  One can dream up cases where one might use any of these, but
this has to be balanced against the implementation cost.  Are these uses of
* really part of the "minimum required to declare victory"?  Maybe for
element type names they are.  But for attribute names?

James



