docno="lists-055-1806213"
received="Mon Sep 30 09:56:11 1996"
isoreceived="19960930135611"
sent="Mon, 30 Sep 1996 09:51:09 -0400"
isosent="19960930135109"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Combine RE/RS proposals?"
id="1.5.4.32.19960930135109.00723e64@csclub.uwaterloo.ca"
charset="us-ascii"
expires="-1"


To:w3c-sgml-wg@w3.org

At 01:03 AM 9/30/96 CDT, Robert Streich wrote:
>At first, I was going to say that this was a poor example and suggest
>that you considered most of the programming reference books on your
>shelves, but then I realized that it isn't so bad. The only difference
>is that I think you're assuming that someone typed your example. We have
>hundreds (thousands?) of tabular ASCII report options in various
>software products. The documentation for that software naturally contains
>samples of those reports. I just can't picture myself promoting a
>language that requires people to go in and add markup to these examples.
>I don't think I could even convince myself to use such a language.

I feel your pain.

Could we combine proposals? Could we (in XML) define characters to begin a
section of text guaranteed not to have markup within, where spaces and
newlines should be passed to the application unmolested? In other words, a
verbatim delimiter? (not full CDATA or RCDATA marked sections unless we are
willing to simplify the rules for those constructs). The contents of the
delimeters would be restricted to disallow comments, PIs, sub-elements or
anything else that would break SGML compatibility. Whether processed by an
XML or SGML tool, the REs inside the delimeters would be significant.

Then there would be the existing-SGML-tool compatible way of doing things
(which would require you to escape your newlines) and the verbatim-optimized
XML way of doing things (which wouldn't).

<XMP>
<TITLE>Here is some sample output</TITLE>
<"
  ABCD 1234 
  EFGH 5678
  IJKL 9012
">
</XMP>

I know that duplication of features makes the parser writer's job harder,
but Robert has a reasonable point about usability.

Comments?

 Paul Prescod



