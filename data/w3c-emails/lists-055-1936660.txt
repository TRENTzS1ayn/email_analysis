docno="lists-055-1936660"
received="Mon Sep 30 15:15:58 1996"
isoreceived="19960930191558"
sent="Mon, 30 Sep 1996 14:23:48 -0500"
isosent="19960930192348"
name="Len Bullard"
email="cbullard@HiWAAY.net"
subject="Re: Make DTDs optional?"
id="32501E44.29B7@HiWAAY.net"
charset="us-ascii"
inreplyto="Pine.ULT.3.90.961001012003.6796B-100000&#64;chuckd.allette.com.au"
expires="-1"


To: Rick Jelliffe<ricko@allette.com.au>
CC:"Charles F. Goldfarb"<Charles@sgmlsource.com>,w3c-sgml-wg@w3.org

Rick Jelliffe wrote:
> 
> On Mon, 30 Sep 1996, Charles F. Goldfarb wrote:
>  
> But I think there may be a different potential user base than existing
> SGML applications.  The plug-in/compound-document market may be large
> (VBX, Java applets, Netscape plugins, OpenDoc, OLE {whatever it is called
> this week}, etc) and could do with some standard text formats for the
> small input documents these use.

YES!  This is exactly where the small apps market is going.  We have 
to be able to snap applications together that are cheap and very 
focused on limited tasks.  They can also be reconfigured to loosen 
or tighten them.  That is precisely what the VB market is.

> For example, a Java CALS table popup renderer needs to read in the CALS
> data: this should be XML not SGML. This Java CALS table renderer shouldn't
> need to be any kind of full SGML system, or even RCS. With no explicit
> DTD, we have to have the assumption that the XML data's implicit DTD is
> coded directly in the XML application (or that some other language or
> stylesheet supplied with the document furnishes the mappings into the the
> things the application knows about).

Yes.  If we can verify that the type matches the type required by the 
process protocol (loose but accurate term), then I should be able 
to shunt the instance to a handler optimized for that type.  To 
paraphrase Tip o'Neill, "all notations are local".
 
> Is this really more what XML should be about: a markup language for
> presenting documents in the form required by the application?  (Which
> would correspond to the normalised form of an SGML document when parsed
> against archetectural forms that model the XML application.) In other
> words, a  temporary/application/closed-system format rather than a
> archiving/modelling/manipulation/open-system format like SGML.  (no flames
> about 'format' please)

Yes.  For the most part, I think this is what is needed.  It just has 
to be cheap to write handlers so we can afford to cheat a bit on the 
reuse/rehosting requirements, and with Java, that problem is mostly 
solved.

len bullard (burglar at large)



