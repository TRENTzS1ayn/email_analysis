docno="lists-055-3379135"
received="Thu Apr 10 09:28:20 1997"
isoreceived="19970410132820"
sent="Thu, 10 Apr 1997 09:26:54 -0400"
isosent="19970410132654"
name="Gavin Nicol"
email="gtn@eps.inso.com"
subject="Re: Encoding PIs recap. (Re: Comments on 31 March spec)"
id="199704101326.JAA00789@nathaniel.ebt"
inreplyto="334CC512.3E60&#64;allette.com.au"
expires="-1"


To:ricko@allette.com.au
CC:w3c-sgml-wg@w3.org

>The PI rationale has been discussed before: if you require a 
>particular encoding for the PI, you are creating a non-text header.
>You need special applications. Gavin's .MIM format would be far 
>superior than the Encoding PI for this.  (I hope that people 
>writing storage/entity managers and file systems look at the 
>.MIM format.)

I will be re-submitting this to the IETF, and to the W3C as a 
technical note within the next week or so. At the recent Unicode
conference, there was a lot of discussion about this...

I should note that one implementation problem that arises from
the encoding PI is that once you start parsing the file to get
the PI, you have to assume an encoding. If it turns out that
the encoding you assumed is not correct, then you have to seek
back to the beginnings of the input stream and restart using 
the encoding that the PI told you to use. This is generally not
a large problem if you use a ring buffer, or some other form
of buffered input, but this can force implementation choices that
would otherwise not have been made.



