docno="lists-055-3980610"
received="Sat Apr 19 13:30:44 1997"
isoreceived="19970419173044"
sent="Sat, 19 Apr 97 12:12:56 CDT"
isosent="19970419171256"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: A serious detail point"
id="199704191730.NAA15027@www10.w3.org"
inreplyto="Fri, 18 Apr 1997 11:48:39 +0100"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

On Fri, 18 Apr 1997 11:48:39 +0100 Martin Bryan said:
>Incidentally I have just had to recommend dropping the use of XML
>from a project simply because I could not manage multiple references
>to a single document efficiently. Without the concept of allowing

I think anecdotes like this are completely out of order as arguments in
this discussion.

For any project which needs to freeze its choice of technology now,
XML-link should not come into consideration for the simple reason
that it is not finished and still volatile enough that the printed
draft reads, on every page, DO NOT IMPLEMENT.  If you are recommending
that the project DROP a plan to implement XML-LINK, you are doing
the only correct thing.  It would be an irresponsibility bordering on
malpractice to recommend that a project
COMMIT itself, NOW, to using XML-link, in the form it WILL eventually
take.

On the substantive question of link management, I am still waiting
for some coherent explanation of why you can't use general entities.

>references to a single document to point to the current address of
>the file via a short-name, and without having to update every
>reference each time the file is moved, it makes no sense to try to
>manage link sets using XML.

The concept you say is missing sounds exactly like what is already
possible using general entities.

>>The update and maintenance problem is handled nicely by the general
>>entity mechanism you illustrate.  The caching problem can be handled
>>with affinity groups / BOS / whatchamacallits that say "Cache this
>>one, I'm going to need it often".
>
>The problem is that XML has no concept of BOS, ...

Then caching is an argument in favor of having one.  It is not, in
my view, an argument for messing up XML addressing with locsrc.

-C. M. Sperberg-McQueen



