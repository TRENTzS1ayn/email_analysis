docno="lists-055-4000292"
received="Sat Apr 19 16:51:53 1997"
isoreceived="19970419205153"
sent="Sat, 19 Apr 97 16:51:48 EDT"
isosent="19970419205148"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: Linking to stylesheets in XML"
id="9704192051.AA06678@sqrex.sq.com"
inreplyto="Linking to stylesheets in XML"
expires="-1"


To:w3c-sgml-wg@w3.org

Terry Allen <tallen@sonic.net> wrote:
> you need to step back and define an overall architecture for pointing
> at everything you might want to point at, packaging it together, and
> delivering it without ambiguity (avoiding the Panorama disease).

We prefer not to refer to Panorama as a disease, actually.
I think this is a little excessive.

> http://www.wco.com/~books/draft.5feb97.txt

If that proposal were used for HTML, browsers like Netscape and Opera would
be noticably slower.  I don't think anything that is demonstrably worse
than current practice should be adopted, although it may be considered
where it has merit.

The SGML Open multipart-related draft was done so that SGML could be
exchanged by e-mail.  It doesn't work well for the web because it
precludes (or considerably conplicates) parallel fetching.

For example, once I have seen the start of an XML document, up to the
end of the DOCTYPE section, I know whether I have to fetch a DTD, and,
if so, how.  So I might as well start fetching it immediately without
waiting for the rest of the document.  Same for style sheets (I hope).

Since XML now has PUBLIC Identifiers, I will want to do my DNS queries
on those (the resolution method I've chosen [1]) as soon as possible, since
it can take several seconds.  So I want to get references to all included 
files as soon as possible.

Hence, I want to get, in this order:
* the start of the document
* all external DTD fragments
* URLs of any included images, so I can start fetching them
* the text of the document

With HTTP NG, this can all be done over a single HTTP connection, if
everything comes from the same server.  With HTTP 1.1, I can fetch
multiple things in sequence cheaply, so I can keep just a few connections
and multiplex over them myself if I want in my client.

None of this is to say that Terry's Unoptimized SGML-Bundle Relations Schema
does not have merit for other uses, by the way, than for interactive Internet
delivery of SGML.

Lee



