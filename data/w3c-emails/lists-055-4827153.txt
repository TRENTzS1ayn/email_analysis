docno="lists-055-4827153"
received="Mon Apr 28 20:22:29 1997"
isoreceived="19970429002229"
sent="Mon, 28 Apr 97 19:10:36 CDT"
isosent="19970429001036"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: Sudden death: request for missing input"
id="199704290022.UAA29421@www10.w3.org"
inreplyto="Mon, 28 Apr 1997 16:41:16 -0400"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

On Mon, 28 Apr 1997 16:41:16 -0400 Murray Altheim said:
>I've been trying to follow this thread, and it brings up a simple
>question: if error handling/recovery is entirely up to a vendor, what's
>stopping someone from making some minor changes to an existing HTML
>browser and calling it an XML browser?

The only thing preventing it is the definition of conformance.  All
conforming processors are required to report all reportable errors
under control of a user-settable option (i.e. the user may choose to
suppress error reporting, and the implementation may choose to make
that the default, but it must always be possible to run the processor
with error reporting enabled).

>Requiring conforming processors to notify applications, and requiring
>conforming applications to notify their users seems hardly draconian.

I think that's true; that's what is in the spec now (modulo the
ability to turn messages off), and that's what I support.  Tim is
proposing a change that goes beyond this:  the processor must not
only notify the user and/or application, but must also stop
performing any work other than error reporting.

>After notification, I think you are correct: it is then up to the
>developer to decide what is appropriate in the specific XML
>application. But the notification must be mandatory, otherwise we're
>back to the Web's current broken error handling behaviour.

Yes.  The notification must be mandatory.  In the current spec, it
already is mandatory.

Tim's proposal is *not* a proposal to make the error report mandatory;
it's a proposal to prohibit any attempt to recover from the error.

As I understand it, the goal is (a) to ensure that document authors find
out about the errors in the document, quickly and unequivocally, and (b)
to motivate authors to make sure their documents are correct, or at
least well formed, by the simple expedient of decreeing that XML
processors are not allowed to perform any useful work with broken
documents (with perhaps a special dispensation for editors and
validators).

I'm in favor of notifying authors when their documents are
ill-formed, and of providing motivation to fix them.  But I
think requiring that a processor die when confronted with
<foo bar=baz>...</foo> or with <a><b><c> ... </a>, instead of
allowing the user and the application together to decide whether
these might be typos for <foo bar='baz'> and <a><b><c> ...
</c></b></a> seems a more moralistic attitude than is strictly
necessary.

-C. M. Sperberg-McQueen

"Quote your attributes!  It's good for you!"  -Not Tim Bray



