docno="lists-055-4853063"
received="Mon Apr 28 22:52:50 1997"
isoreceived="19970429025250"
sent="Tue, 29 Apr 1997 09:38:27 +0700"
isosent="19970429023827"
name="James Clark"
email="jjc@jclark.com"
subject="Re: Another pseudo-element gotcha"
id="2.2.32.19970429023827.00f84300@jclark.com"
charset="us-ascii"
inreplyto="Another pseudo-element gotcha"
expires="-1"


To:w3c-sgml-wg@w3.org

At 16:47 28/04/97 GMT, Peter Murray-Rust wrote:

>If you think of a scientific publication, you can think of it having 
>components (graphs, tables, molecules, figures, citations, etc) and all
>of these will vary from publisher to publisher in order and amount.
>It's quite meaningful and possible to ask:
>'please extract all molecules from this paper'
>'extract all molecules which contain spectra'
>(notice the word 'all').  In general we shall not know how many molecules
>there are in the paper or what order they come in.

I can easily imagine this as part of processing.  What I am still having a
hard time seeing is why this sort of thing needs to go in an extended link
or a simple link in an XML document.

If you want to do this sort of thing, what you need is a fully-fledged query
language.  If you try to use xpointers for this, you will continually be
finding things you want to express, but can't.

>This assumes that you know that you need to count 17 along.  When you
>have no idea of the structure of the document, other than the components
>it may contain (but not the level they may occur at or their order), the
>tools that are currently suggested are ideal.

I think this is the heart of the issue.  There seem to me to be two kinds of
problem:

a) I have a collection of specific documents, and I want to create links
between those specific documents.

b) I have an open-ended class of documents, and I want to describe
processing that works on any document in the class.

For (a), I think a cut-down version of xpointers does what's needed.  For
(b), which seems to be what you're doing, a cut-down version of xpointers
won't be adequate, but neither, I would suggest, would an enhanced version
be adequate: (b) is what DSSSL is mainly about, and for that you need a full
query language.

James



