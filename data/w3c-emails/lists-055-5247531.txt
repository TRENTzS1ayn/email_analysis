docno="lists-055-5247531"
received="Mon Aug 25 05:17:53 1997"
isoreceived="19970825091753"
sent="Mon, 25 Aug 1997 11:59:57 +1000"
isosent="19970825015957"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="XML Namespaces: Terminology"
id="199708250925.TAA02181@jawa.chilli.net.au"
charset="ISO-8859-1"
expires="-1"


To:<w3c-sgml-wg@w3.org>

Here is a stab at some terminology, since I have been 
regularly confused. 

----------------------------------------------------------
Document: a collection of information that is processed as a unit.
[ISO 8879:1986 4.96]

Document type: a class of documents having similar charactersistics;
for example, journal, article, technical manual, or memo.
[ISO 8879:1986 4.102]

(document) type declaration: A markup declaration that
formally sepcifies a portion of a document type definition.
Note - A document type declaration does not specify all
of a document type definition because part of the definition,
such as the semantics of elements and attributes, cannot
be expressed in SGML. In addition, the application designer
might choose not to use SGML in every instnace-for example by
using a data content notation to delineate the structure of
an element in preference to defining subelements.
[ISO 8879:1986 4.103]
 
(document) application requirements: ... notations that specify 
application-specific requirements for the document, including 
requirements unrelated to the SGML language.
[Refer SEEALSO proposal in ISO WebSGML TC to ISO 8879:1986]


NOTE: So the DTD = type declarations + application requirements
Also, the DTD = schemas + glue.

--------------------------------------------------------------------
Information Unit: a collection of information, part of a document,
that is processed as a unit.  (Information units may contain
other information units, just as documents may contain subdocuments.
"Processing as a unit" does not have to mean "specified in the same 
place in the document instance".)
[See Maler and el Andoloussi, p158]

Schema: a partial document type that defines an information unit.

Schema declarations: element sets and other application requirements
for a schema.

Element set: A set of element, attribute definition list,
and notation declarations that are used together. 
[ISO 8879:1986 4.112]

(Schema) application requirements: notations that specify
application-specific requirements for the information unit,
including requirements unrelated to the SGML language.
[Refer 

NOTE: So schema = element set + application requirements

NOTE: Schemas can be instantiated 
* as a pattern (e.g. architectural forms, refer HyTime Annex A, 
"Architectural Forms Definition Requirements")
* in self-contained information units
* interleaved (e.g. the RDF proposals)


-------------------------------------------------------------------

(Document) namespace: All the names that can be used within a document 
type. A controlled set of names. [Layman, XML Namespaces, Aug 7, 1997]

(Schema) namespace: All the names that can be used within a particular 
schema. A controlled set of names.

Namespace pollution: When a document is composed from a set of independent
schema, there may be overlap between the schema namespaces, and hence
ambiguity. 

NOTE: ADFR has a name remapping mechanism to cope with this for 
schemas instantiated using architectural forms.  The XML Namespaces
proposal uses predefine Processing Instructions and attributes for
interleaved declarations.  The SEEALSO parameter collects all schema
definitions at the head of the document, and treats the question of
namespace resolution as one of schema interaction and data management,
rather than an in issue it should resolve one way or another.  

NOTE: The SEEALSO parameter applies to the document. So it can be
used, for example, to set which schema system is in use for the
document. For example, to say "this is an XML document, and it
uses W3C RDF schemas and Netscape's namespace resolution
system and GCF colors":

<!DOCTYPE #IMPLIED SYSTEM
SEEALSO 
PUBLIC "ISO 8879//NOTATION Application Requirements for XML//EN"
SYSTEM "http://www.w3.org/XML/rdf"
SYSTEM "http://www.netscape.com/XML/namespace"
SYSTEM "http://www.gcf.org/v2.5"
[]>

This could be used to allow a system of declarations and specifications,
like entities, rather than conflate the two, as the proposals now do.
(I am not saying this is what should happen, I am only saying it is
possible, and should be considered.)

-------------------------------------------------------------------

Does this terminology seem about right to describe the current state of
play?



Rick Jelliffe



