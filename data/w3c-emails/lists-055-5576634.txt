docno="lists-055-5576634"
received="Fri Feb  7 09:40:40 1997"
isoreceived="19970207144040"
sent="Fri, 07 Feb 1997 09:38:13 -0500"
isosent="19970207143813"
name="Eve L. Maler"
email="elm@arbortext.com"
subject="Re: elm alternate linking proposal"
id="3.0.16.19970207093813.3327c586@village.doctools.com"
charset="us-ascii"
inreplyto="elm alternate linking proposal"
expires="-1"


To:w3c-sgml-wg@w3.org

Comments by Martin and replies by me...

>X-Sender: eve@village.doctools.com
>Date: Thu, 06 Feb 1997 10:29:59 -0500
>To: Martin Bryan <mtbryan@sgml.u-net.com>
>From: "Eve L. Maler" <elm@arbortext.com>
>Subject: Re: elm alternate linking proposal
>Cc: "Eve L. Maler" <elm@arbortext.com>
...
>At 10:47 AM 2/6/97 +0000, Martin Bryan wrote:
>>Eve
>>
>>I like linkto and associate - these are good names, but I hate termini, for
>>the reasons your write-up makes obvious - it just does not read smoothly.
>
>I actually agree that terminus is a bad name for an element.  I originally
>called it "loc" (while keeping terminus for the prose description), but
>didn't want to confuse people even further.
>
>>Why is xmlnames set to #FIXED ""? This means users can never change it - yet
>>you would want to allow xmlnames="ptr href" for HTML users. (It may be
>>advisable to use #FIXED in the final DTD, but not in the architectural form
>>definition.)
>
>I (thought I) was copying the HyTime AFs I found on the Web.  I guess in
>the AF itself it should just be CDATA "".
>
>>Your -xml=tlink definition does not make sense. I would make it
>>
>><!attlist -xml-tlink
>>  xhl-          CDATA     #FIXED "-xml-tlink"
>>  xml          CDATA     #FIXED "linkto"
>>  xmlnames CDATA     #FIXED "ptr href scheme hrtype"
>>  href          CDATA     #REQUIRED
>>  hrtype       CDATA     #IMPLIED
>
>The tlink version is just to show what my proposal would look like, using
>the markup names in Tim's and Steve's proposal; I wasn't trying to map one
>to the other, just show where they are conceptually similar.
>
>> Your A example is wrong because the HREF is always required. It should be:
>>
>><!ELEMENT A - - ANY>
>><!ATTLIST A
>>  xml          CDATA     #FIXED "linkto"
>>  xmlnames CDATA     #FIXED "ptr href"
>>  scheme     CDATA     #FIXED "url"
>>  href          CDATA     #REQUIRED
>>  name        CDATA     #IMPLIED
>
>When A is used *as a linking mechanism*, the HREF is required.  But if you
>look at the DTD, HREF is optional, because NAME might be supplied instead!
>This is a fact of life with the HTML DTD (and with DocBook and many others).
>
>>Here we find another problem. Scheme means something different for someone
>>from the WWW arena. Scheme is the name of the HTTP/FTP/... part of the URL
>>so to say scheme=url rather than scheme=HTTP will present a name conflict to
>>them.
>
>I'm happy to use another name besides scheme.  I just thought HRTYPE was
>unnecessarily cryptic.  If you've got suggestions, fire away!
>
>>I suggest we steer clear of roles in place of type because this will cause
>>confusion with those used to anchrole in HyTime. The XML type attribute is
>>not the same as an anchrole.
>
>That's fine with me too.
>
>>Re:Titles, explainers, or descriptions 
>>
>>>      I didn't provide any title/explainer/description attribute because: 
>>>            This information is related to behavior.
>>>            It is "content" and may need markup inside it (which design
>>decision the AF should not
>>>           dictate).
>>
>>This is why the explainer should just be an IDREF to the element that
>>contains the content, and why you need a separate attribute to define the
>>notation of the behaviour. Both are necessary, both must be separate.
>>Without these two items you just will not get interoperability.
>
>I don't agree that the explainer should be an IDREF.  This dictates a
>particular mehod of associating the link stuff and the explanation stuff,
>and for many users, association by element containment (or by attribute
>value) is much preferable.
>
>        Eve



