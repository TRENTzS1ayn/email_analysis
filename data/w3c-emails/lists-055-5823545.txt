docno="lists-055-5823545"
received="Sat Feb  8 07:47:23 1997"
isoreceived="19970208124723"
sent="Sat, 08 Feb 1997 11:39:58 GMT"
isosent="19970208113958"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Is XML-Link Rocket Science?"
id="3257@ursus.demon.co.uk"
expires="-1"


To:w3c-sgml-wg@w3.org

I have been following the discussion of XML-link but as I am not an
expert in hypermedia, have not contributed.  I have a fundamental concern
about the outcome, which I believe is being addressed implicitly but I'd
like that confirmed :-).

I am assuming that the 10 articles of faith for XML also apply to XML-link
- if this is not true, please delete this message :-).  I pick:

1. XML shall be straightforwardly usable over the Internet
2. XML shall support a wide variety of applications
4. ****It shall be easy to write programs which process XML documents****
5. XML documents should be human-legible and reasonably clear
9. XML documents shall be easy to create.

Let me suggest a spectrum of people who may potentially develop XML 
applications and who may create documents 
(** without using turnkey systems **).  At one end are the rocket 
scientists (RS) - and I fully support the need for XML to be able to support
RS.  At the other end are webhackers like myself (WH).  

My concern at present is that XML-link will *only* be usable by RS.  I 
believe that this isn't the intention, but I'm worried that it might turn
out that way without the WG realising.  My ideal would be to have a 
solution that had a spectrum of potential applications ranging from WH to
RS, and this could be an evolutionary path for WHs, rather
than all-or-nothing

Let me draw analogies with the following: SGML, HTML, HyTime and DSSSL, and give 
my position in each.  (Remember also that in the scientific/technical 
community there are a huge number of WH's , mainly self-taught, but 
capable of creating very valuable applications and information resources.
There are very few RS and this is recognised as a serious problem - I 
sit on a funding body which is trying to bring computer scientists and
biologists together).

SGML.  SGML (pre-XML) started as RS.  There was no simple way in for WH's.
It relied on the assumption that either you bought a (very expensive)
customised system for a particular job, or that you had a specifically-funded
academic project (like TEI).  To write an SGML parser was RS.  (The only
reason that I am part of this WG today was that sgmls was developed
and I'd like to go on record for my gratitude to James Clark for this.  IMO
it was a crucial step in bringing SGML to the ordinary person).  The
next stage , NSGLMS and SP, is even more rocket science.  I have looked
at the source and can't understand what it does :-), but I'm absolutely
sure that it's addressing key issues.)  However, even so, full-SGML remains 
out of reach of most WH's.

HTML.  The *basis* of HTML (hypermedia and SGML) is also RS, but it was 
immediately available as a creative tool for the WH as well.  To a first
approximation WH could ignore SGML - I didn't read the DTDs until 2 years 
later - and hypertext theory (you just put in HREFs where it seemed 
sensible).  The result is all around us, a vast explosion of creative 
activity and information interchange, with a complete neglect of formal
validity.  I see XML as (at least in part) addressing this tradition
and bringing it gently to a more formal position.

HyTime.  HyTime is RS. I tried to get to grips with it, but as far as I
could see it required a large investment in time and money and probably
a specialised person before I could even tell whether it was worthwhile.
Even if it was, none of my colleagues would take it up because there was 
no easy path.  I also looked at Hyper-G (and my colleagues are running it
as a server) but it was not trivial.  The only other hypermedia system
that I am acquainted with is Microcosm.  A feature of both Hyper-G and
Microcosm is that you have to have special browsers and I assume that
will be true for HyTime applications as well. 

DSSSL.  This is RS.  I downloaded the spec a few months ago, and after a
few minutes discarded it.  No-one in our community has heard of Scheme
and no-one would know where to get it/implement it, etc. quite apart from
learning it.  OTOH DSSSL is clearly _a_ right way to manage things but is
available to about 0.001% of the WWW community.  
In a single sentence, I'm very worried that the XML-Link spec
will have the same psychological effect on someone as DSSSL did on me.
(And I knew a fair amount about structured documents when I first read DSSSL 
- my community doesn't know what a structured document _is_ :-).

[NOTE.  I've since read the spec again.  It makes a bit more sense.  And I'm
delighted to see that Alex Milowski has made Kawa (a Java-based Scheme/DSSSL
tool) available.  Nonetheless it will take at least a week for me to 
understand how to use it.]

XML spans the spectrum between WH and RS perfectly.  A WH can hack a
_useful_ WF document from a very simple set of rules.  Many people can
write a WF-parser from scratch (I've done this myself in an amateurish way).
However, it is RS to write a validating parser for XML (as evidenced by
the fact that there aren't any written yet :-).  A validating parser is
required before an XML editor can be constructed (though document creation
tools do not necessarily require RS).  Areas such as entity management and
catalogs can be omitted by the WH at the start of their exploration of XML.

Question:  Do you have to be a Rocket Scientist to create XML-link 
applications, and to create documents which use XML-Link?

If yes, then you will lose the WH community (including myself :-) immediately.
The outcome will be that XML-link is only used by commercial publishers
(in the most general sense of the term) to create hypermedia systems for 
which the customers are passive consumers.  A partial solution will be
to create the tools which are required for the various parts of the 
process, but if they cost significant amounts of money, or are difficult
to learn and use, again we are disenfranchised.  

My own requirements for XML-Link are:
0. It must be done rigorously.  (I am sure that this will happen :-)
1. I should be able to understand the document.  (I am not sure of this).
2. It must not be an all-or-nothing solution (i.e. either you are a HyTime
expert or you can't use XML-link).  (I am not sure of this).
3. If 2., then it should provide useful constructs for solutions 'halfway
between HTML and RS'.  In this case I am hoping that the experts 'know what
I need' even though I cannt formulate that need :-)

Some of this may be an educational and presentational problem.  Personally
I (and many other WH's) learn by doing; i.e. they try it out and see what 
happens.  Very few HTML authors read formal specs.  I am also
delighted to see the various freely avaliable tools that are already
available to help, but there is nothing, as yet, in the XML-Link area.
(For example, is a 'link processor' something that is problem-independent
and can be produced as a software tool, or does it have to be written for 
each application?)

I appreciate that this is a very challenging task, but I think it will have
to be undertaken before XML-Link takes off

P.

-- 
Peter Murray-Rust, (domestic net connection)
Virtual School of Molecular Sciences, Nottingham University, UK
http://www.ccc.nottingham.ac.uk/~pazpmr/



