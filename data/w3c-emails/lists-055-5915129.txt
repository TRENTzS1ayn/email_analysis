docno="lists-055-5915129"
received="Sun Feb  9 08:29:22 1997"
isoreceived="19970209132922"
sent="Sun, 09 Feb 1997 10:09:56 GMT"
isosent="19970209100956"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Re: Is XML-Link Rocket Science?"
id="3271@ursus.demon.co.uk"
inreplyto="Is XML-Link Rocket Science?"
expires="-1"


To:w3c-sgml-wg@w3.org

Thanks for the reassurances that are starting to appear :-)

In message <32FD332C.4599@hiwaay.net> len bullard writes:
> Jon Bosak wrote:
> > 
> > I'm not sure that it's realistic to expect the mlinks ever to be easy
> > to understand right off the bat, because what they are expressing are
> > relational structures that are difficult to fathom regardless of the
> > syntax.  If mlinks are to do their job, it will always be possible to

I am glad to see a distinction here between various levels of XML-link.
I am not sure what a tlink is - I assume that alink in the spec falls into 
that category?  [BTW as a hypermedia non-expert I favour the use of monosemes
which are new to me (mlink, ilink, clink, etc.) rather than polysemes
which I would probably misinterpret (e.g. 'pointer').]

It is the *usage* of these things that is the problem for people like me.
I read the spec for mlink and I can get a feel for how it might be used,
but I'm not clear whether it has a fairly limited use or whether it can,
in practice, be combined in many different ways.  It seems clear that it can
be used for transmitting complex networks of links (a Good Thing), but can
it be used in a one-off manner?  (For example, would an mlink be useful in
defining the connections between components on a circuit board?  Would there
be just one mlink, or lots of them?  If there are lots, does it need another 
level of hierarchy to manage the first lot?)

To draw an analogy with HTML.  The A Element has attributes REL, REV and
METHODS.  AFAIK they are virtually never used.  (I know that Murray Maloney 
and other wrote a proposal on their use, but I don't know where it got to.)
In simple terms, when the first version of HTML was introduced, 
virtually noone knew what the semantics of REL and REV were.  (There is a 
sentence or two for each, but it doesn't go as far as telling someone
how to create a document which uses them or a browser which processes them.)
I assume that REL and REV suffer from limited power (though HTML-hackers have been
very good at adding implied semantics where necessary).  If REL/REV had really
been seen to fill a need then I suspect that people would have built systems
to fill that need by hacking them.  I assume that they could be used
to *describe* bidirectional links in a primitive way, even though the 
maintenance of the system might be hairy.

My worry is that if people read the spec for MLINK and ALINK and see a list 
of attributes that is 3-4 times larger than for A, they will switch off
unless the point is very clearly presented in non-abstract terms.  The other
(probably worse) danger is that because there is no general understanding,
non-communicating groups will start adding incompatible semantics to these 
attributes.  Once added (in the 'market-place') they can't be disassembled.

 
> > create structures that only a rocket scientist will understand.  But
> > in the area of the tlinks I feel confident that we will be able to
> > produce something not much harder to understand than the HTML <A>
> > link, and we ought to be able to create an mlink syntax that ordinary
> > people can use to express simple associations.  

I'm heartened by this :-) 

> 
> I second Jon on this issue.  Again, from watching the VRML experience, 
> it was very rough sledding to master the complexities of 3D animation 
> given only the specification.  I have been a reviewer for the 
> annotated 2.0 version and was already proficient with the 1.0 
> version.  It was still tough.  However, as soon (and even before) 
> the actual specification was published, books were hitting the shelves 
> that made it possible to master by example.  So, I think while 

Yes!

> XML will be straightforward for those who are SGML literate and 
  ^^^
  XML+XML-LINK??

> understand hypermedia, for many, these concepts will require 
> hands-on experience.  We can work as hard as we can to make 
> it clear in the spec, but the spec should err on the side of 
> being unambiguous particularly for implementors.  The *average user* 
> (whoever that is) will master XML through the tools.

Yes! 

> > Implementing mlinks is
> > another matter, but that's something that will probably have to be
> > left to the rocket scientists anyway.

I don't disagree with this.  Building semantic networks, dynamic topic maps,
etc. is not trivial and there is no point in trying to make it less rigorous
than it should be.  But I would still strongly argue for philanthropists to
make generic tools available in this area, because most of the commercial
systems will probably hide the mlink-ing deep under the surface.  Nothing
wrong with that, but it doesn't help people develop by example.

P.

-- 
Peter Murray-Rust, (domestic net connection)
Virtual School of Molecular Sciences, Nottingham University, UK
http://www.ccc.nottingham.ac.uk/~pazpmr/



