docno="lists-055-6003641"
received="Sun Feb  9 14:54:25 1997"
isoreceived="19970209195425"
sent="Sun, 9 Feb 1997 11:54:25 -0800"
isosent="19970209195425"
name="Jon Bosak"
email="bosak@atlantic-83.Eng.Sun.COM"
subject="Re: Section 0: Naming"
id="199702091954.LAA07422@boethius.eng.sun.com"
inreplyto="2.2.32.19970207005521.0072b0a4&#64;sover.net"
expires="-1"


To:w3c-sgml-wg@w3.org
CC:bosak@atlantic-83.Eng.Sun.COM

[Liora Alschuler:]

| I have to side with XML Link or XML Linking (is a hyphen
| necessary?). The XML-Hyper-X suggestions expand to something like:
| hypertext enhanced extensible markup language.
| 
| This is not only a mouthful but reads like a superset of XML, (if you
| want the whole shebang you've got to have this stuff which is the
| *enhanced* XML) where I believe we want to convey that the linking
| spec is a module of the larger concept which is XML. XML Linking keeps
| the proper relationship between XML and the XML linking spec (I don't
| think the hyphen is necessary.)

Yes, exactly.  XML-link (or whatever) is the name for a modular piece
of the XML specification, and what it specifies is part of XML, not
some other language.  The fact that we're trying to engineer this in a
way that could make it usable with other markup languages (which is
just a nice-to-have feature, not something essential to our goal)
doesn't change this at all.

There is a very close parallel between XML-link and the part of the
TEI guidelines that describes extended pointers.  When the link draft
refers to this part of TEI, it uses phrases like "features of TEI
extended pointers" and "a subset of the syntax defined for TEI
extended pointers".  It doesn't need to invent some fabulous creature
like "the TEI Extended Pointer Language (TEIEPL)" to refer to a piece
of the TEI specification.  Similarly, a future application that uses
the linking features of XML can simply refer to them as "the linking
features of XML".  We don't need to invent a special term for this
purpose.

As far as I can tell, the term "XML-link" (or whatever) is needed in
exactly one place: the title page for the part of the spec that, for
editorial reasons, we decided to put under a separate cover.  I cannot
find a single place in the spec itself where the term "XHL" or "XHA"
cannot simply be replaced with "XML" except in the couple of spots
where the current draft tries to set it up as a separate language.

Jon



