docno="lists-055-6864594"
received="Tue Feb 11 14:31:55 1997"
isoreceived="19970211193155"
sent="Tue, 11 Feb 1997 14:30:10 -0500"
isosent="19970211193010"
name="Gavin Nicol"
email="gtn@ebt.com"
subject="Re: There Are No Metadocuments"
id="199702111930.OAA11577@nathaniel.ebt"
inreplyto="v02130505af266cbc7ae1&#64;[205.181.197.74]"
expires="-1"


To:dgd@cs.bu.edu
CC:w3c-sgml-wg@w3.org

>>As soon as you start defining objects that have some behavioural
>>semantics associated with them, you also open up the possibility
>>of people interpreting the semantics.
>True, but essentially false:
>
>Once the interpretation of the data is a turing-complete problem, the
>possibility of _useful_ interpretation goes way, way down.

No disagreement here... I was just noting that data and behaviour are
largely separated only in the way you interpret things.

>This is why I mistrust jumping to code _too soon_. To push the interaction
>envelope you need code, but you also lose reusability, because your
>environment sneaks into your data... We definitely will need to attach code
>to documents though.

Yep. I tend to look at it as defining interfaces vs defining
implementations. You reuse interfaces and throw away implementations
in most systems I've seen.

The problem we face is that it's hard to decide upon an interface
until you are aware of the implementation constraints... and that
interfaces often need to evolve over time. 



