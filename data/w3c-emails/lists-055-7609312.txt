docno="lists-055-7609312"
received="Fri Feb 14 10:28:43 1997"
isoreceived="19970214152843"
sent="Fri, 14 Feb 1997 10:33:55 -0400"
isosent="19970214143355"
name="Murray Altheim"
email="murray@spyglass.com"
subject="Re: 2.1 a-d: Link Recognition by Reserved Attribute?"
id="v02140b00af2a2661252c@[208.203.149.85]"
charset="us-ascii"
inreplyto="2.1 a-d: Link Recognition by Reserved Attribute?"
expires="-1"


To:bosak@atlantic-83.Eng.Sun.COM(Jon Bosak)
Cc:w3c-sgml-wg@w3.org

bosak@atlantic-83.Eng.Sun.COM (Jon Bosak) writes:
>[Murray Altheim:]
>
>| The two methods described perorm the same function, but are used for
>| different purposes. The first example allows a designer to create an
>| new SGML application. The second allows legacy applications like
>| DocBook or HTML to be retrofitted with architectural form attributes
>| to be used within an XML processing system.
>
>Now I'm hearing arguments in favor of using the attribute method.  I'm
>not hearing anything about why we need both methods.  Either the
>attribute method works or it doesn't; if it does, why do we need both?

Well, I'm certainly an advocate for attributes, but I can imagine a family
of SGML applications that conform to XML, ok, a family of XML applications.
Within each, the hypertext mechanism could certainly be handled by AF
attribute, but my little imagination is thinking of users whose
understanding is that the base functionality of an element comes by way of
its GI, not via its attributes. It's a bit of a stretch for some people to
think you could transform

    <B>important text</B>

to hypertext by adding something akin to

    <B XML-LINK="alink" HREF="http://www.foo.com">important text</B>

It's an appealing idea (on cursory examination at least), but probably
confusing to the unwashed masses(tm).

We certainly don't want AF understanding to be a requirement for XML use,
and while a simple explanation might suffice, it seems that simply stating
that *one* method of providing hypertext markup would be to use the
<XML-LINKTO> or <XML-ASSOCIATE> elements (or whatever they end up being
named).

Murray

```````````````````````````````````````````````````````````````````````````````
    Murray Altheim, Program Manager
    Spyglass, Inc., Cambridge, Massachusetts
    email: <mailto:murray@spyglass.com>
    http:  <http://www.cm.spyglass.com/murray/murray.html>
           "Give a monkey the tools and he'll eventually build a typewriter."



