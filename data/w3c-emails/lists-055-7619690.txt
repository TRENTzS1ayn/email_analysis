docno="lists-055-7619690"
received="Fri Feb 14 10:41:35 1997"
isoreceived="19970214154135"
sent="Fri, 14 Feb 1997 09:41:34 -0600"
isosent="19970214154134"
name="len bullard"
email="cbullard@hiwaay.net"
subject="Re: 2.1 a-d: Link Recognition by Reserved Attribute?"
id="330487AE.2BB8@hiwaay.net"
charset="us-ascii"
inreplyto="v02140b00af2a2661252c&#64;[208.203.149.85]"
expires="-1"


To: Murray Altheim<murray@spyglass.com>
CC:w3c-sgml-wg@w3.org

Murray Altheim wrote:
> 
> bosak@atlantic-83.Eng.Sun.COM (Jon Bosak) writes:
> >[Murray Altheim:]
> >
> >| The two methods described perorm the same function, but are used for
> >| different purposes. The first example allows a designer to create an
> >| new SGML application. The second allows legacy applications like
> >| DocBook or HTML to be retrofitted with architectural form attributes
> >| to be used within an XML processing system.
> >
> >Now I'm hearing arguments in favor of using the attribute method.  I'm
> >not hearing anything about why we need both methods.  Either the
> >attribute method works or it doesn't; if it does, why do we need both?
> 
> Well, I'm certainly an advocate for attributes, but I can imagine a family
> of SGML applications that conform to XML, ok, a family of XML applications.
> Within each, the hypertext mechanism could certainly be handled by AF
> attribute, but my little imagination is thinking of users whose
> understanding is that the base functionality of an element comes by way of
> its GI, not via its attributes. It's a bit of a stretch for some people to
> think you could transform
> 
>     <B>important text</B>
> 
> to hypertext by adding something akin to
> 
>     <B XML-LINK="alink" HREF="http://www.foo.com">important text</B>
> 
> It's an appealing idea (on cursory examination at least), but probably
> confusing to the unwashed masses(tm).
> 
> We certainly don't want AF understanding to be a requirement for XML use,
> and while a simple explanation might suffice, it seems that simply stating
> that *one* method of providing hypertext markup would be to use the
> <XML-LINKTO> or <XML-ASSOCIATE> elements (or whatever they end up being
> named).

It's logical, but my experience is the great unwashed masses don't 
design DTDs or use arch forms.  That argument is overrated.  If 
I have to live with one and only one way of doing it, I prefer 
to have the GI left to my discretion, and the superclass assignment 
in the attribute as a silent but helpful partner.  After all 
this talk of extensibility and something more powerful than 
HTML, I hate to see us return to precisely the same design by 
giving them a non-extensible set of link types.

They don't get the power without the responsbility to learn 
the technique.

len



