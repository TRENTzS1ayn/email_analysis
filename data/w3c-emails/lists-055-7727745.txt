docno="lists-055-7727745"
received="Mon Feb 17 03:29:50 1997"
isoreceived="19970217082950"
sent="Sat, 15 Feb 97 13:30:28 EST"
isosent="19970215183028"
name="lee@sq.com"
email="lee@sq.com"
subject="Re:  What to do given both SYSTEM and PUBLIC?"
id="9702151830.AA07638@sqrex.sq.com"
inreplyto=" What to do given both SYSTEM and PUBLIC?"
expires="-1"


To:tbray@textuality.com,w3c-sgml-wg@w3.org

> Hmm, seems I was right - we do *not* have a consensus on this one.

I think this is inevitable.

There is no consensus on how PUBLIC should be interpreted.
Different peole want it as a hook for different things.

It's a recipe for disaster.

If we open the can of PUBLIC worms, we have to say:
* what to do if you are givena PUBLIC Id and no SYSTEM Id
* what to do if you are given both
* what to do if you are given both and the resulting files are different
* give at least one way in which I can put an XML file on the web and
  someone else 6 months in the future with some new application can
  use that file, whether or not it has a PUBLIC Identifier.

Otherwise...

Some people will implement systms that ignore the PUBLIC ID, as
David Durand and Paul Prescod suggest, and always require a SYSTEM Id.

Some people will implement systems in which the SYSTEM Id is ignored,
as Paul Grosso suggests, when both are given.

Some people will implement systems in which the SYSTEM ID is used for
some things and the PUBLIC for others, as per Panorama today.

Some people will implement systems that require end users to edit local
configuration files before they can use documents containing PUBLIC Ids,
as per Author/Editor today.

No document will work on all systems.

If we give a set of rules for which to prefer, as I have several times
said, we will end up with interoperability, and you will then be safe
to use XML in systems where you have no control over the recipient,
rather like HTML today.

If we don't have PUBLIC at all, this problem goes away.
I would rather wait six to twelve months before adding PUBLIC.

Lee



