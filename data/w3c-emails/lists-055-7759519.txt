docno="lists-055-7759519"
received="Mon Feb 17 03:43:07 1997"
isoreceived="19970217084307"
sent="16 Feb 1997 21:24:30 +0000 (GMT)"
isosent="19970216212430"
name="Peter Flynn"
email="pflynn@curia.ucc.ie"
subject="Re: XML catalog draft"
id="199702162124.VAA12842@curia.ucc.ie"
charset="us-ascii"
inreplyto="XML catalog draft"
expires="-1"

To:w3c-sgml-wg@w3.org


At 17:23 07/02/97 -0500, Liam Quinn wrote:
[...]
>What is the catalog _for_?  It is for turning a PUBLIC ID into a SYSTEM ID.
>That is _all_ it is for.   You now have to solve the problem of finding
>the CATALOG in the first place, or you have not solved the required
>problem.

This is where the algorithmic method scores, and I have always been
surprised that catalogs are apparently preferred.
 
>If I say, I'd like a SYSTEM ID, telling me I can get one in a CATALOG file
>that I don't have is similar, except I need a SYSTEM ID to get the CATALOG,
>whereas I need money to get the brandy (usually -- anyone willing to swap
>brandy for PUBLIC identifiers??)

I'd swap some for a browser that could be configured to obey a user-
specified preference for SYS vs PUB and local vs URL.

>If SGML users are keeping files around called catalog.soc that are not
>SGML OPEN catalogs, that's their problem.

This will get you flamed by the Gureaux of Indirection :-)

>There are no files on the web -- a URL is not a filename.  Now, they
>usually map into filenames, but given the following URL to an XML file,
>how do I get to the catalog?
>http://some.where.com/cgi-bin/documentation/bk12/ch3;level=novice

What I said. If it returns a valid XML instance, then it has a DOCTYPE
declaration (doesn't it? or subset, in which case a DTD may not arise)
with an FPI or a SYSTEM id which is (we hope) a URL. If it's a URL,
go get it; if it's a filename, blame the author; if it's an FPI, I
still maintain we need a network-accessible {resolver|repository},
a "persistent location in cyberspace" that people can (usually :-)
rely on to do the job. LIke you go to rtfm.mit.edu for FAQs...

>> > It's still not perfect, but we have backward compatibility issues.
>> > Let's do it right for XML.
>> 
>> What is "right"? Your experience with this issue will be useful to us.

Panorama is (IMHO) excellent but lacks the ability to recover gracefully 
from failed resolution. If it can't find the DTD by catalog or mapping, it 
should be able to have the user say "It's over here --->{URL}". It also 
needs a way for the user to say "obey me: fetch the catalog file and fetch 
the DTDs you resolve from it, and don't try to use cached copies or 
pretend you can't resolve it: just DO it". 

I'll (probably unfairly) take this opportunity to {beg|plead} with SQ
to bring out a revised Panorama Free which will work with Netscape and
MSIE, and has the few resolving buglets fixed. This could be (a) the 
biggest lead they have to selling the full copy, and (b) would be a 
great way for us to start showing what XML (under the guise of some 
other SGML for the moment) can do. 

>    them.  This means that if you open
>    /users/liam/docs/barefoot/ankle1.xml
>    and it refers to
>        SYSTEM "walking.dtd"
>    then an XML application ought tolook for
>        /users/liam/docs/barefoot/walking.dtd
>    but if exactly the same unchanged bytestream had been downloaded as
>        http://www.sq.com/people/liam/ankle1.xml (this is a fake URL)
>    then the same XML application should resolve "walking.dtd" as
>        http:://www.sq.com/people/liam/walking.dtd

I would have thought this too obvious to need mentioning, but maybe
we do need to provide this level of hint.

///Peter
-- 
> to discover 1000s of internal "homepages" that grew overnight
> like magic mushrooms on a rich motherlode of corporate horseshit.
                          Copyright 1996, IBM.  All Rights Reserved



