docno="lists-055-8354725"
received="Thu Feb 20 12:14:41 1997"
isoreceived="19970220171441"
sent="Thu, 20 Feb 1997 11:03:31 -0600"
isosent="19970220170331"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: SERIOUS concerns about implementation"
id="330C83E3.3D0F@hiwaay.net"
charset="us-ascii"
inreplyto="199702201642.LAA01649&#64;www10.w3.org"
expires="-1"


To: Michael Sperberg-McQueen<U35395@UICVM.UIC.EDU>
CC: W3C SGML Working Group<w3c-sgml-wg@w3.org>

Michael Sperberg-McQueen wrote:
> 
> On Thu, 20 Feb 1997 06:35:10 -0500 Peter Murray-Rust said:
> ><EXAMPLE>
> >If you install Panorama there is a directory called catalog, with about
> >35 files which are a mixture of popular *.dtd and *.ent.
> >EVERY SINGLE FILE WILL BREAK XML UNLESS THE SYNTAX IS CHANGED.
> 
> I'm sorry to see members of the WG taken by surprise on this topic.
> 
> The preparation of XML-compatible versions of these files is (a) not
> hard, and (b) something that need be done only once.  It seems to me a
> very small price indeed to pay for the simplifications we get in
> declaration syntax and entity handling.

Those will have to be explained to an existing user base who 
possess some rather expensive tools and substantial SGML legacy.
All they actually want is an SGML browser and database tools 
for the Internet.

> Is there a reason to revisit the decisions?

It is a sideways compatibility issue.  Moving to XML is not an upgrade
to SGML.  It is a crab walk into a different standard, language and
system.  
So, deciding to do it raises serious issue of maintenance and tools.  
These 
changes, unless explained with hefty benefits, will result in the
rejection 
of XML by some users.  The problem is that the early adopters of XML 
will likely come from the SGML community who have an immediate need.

Typically, I've seen this problem met by freeware for conversion.
From VRML 1.0 to 2.0, many syntax changes occurred that looked 
gratuitous.  SGI, Sony, and some editor vendors responded with 
automatic conversion routines.  Mileage varies.  The difference 
in this situation is the size of the legacy to be considered, and the 
impact on the existing base of tools.

I am not surprised.  But, unless met with explanations that 
are the changes are practical and beneficial, there will be some serious
questions 
raised by the SGML user community.  Newbies won't care.  This will 
be hard where the nature of the changes or the accruing benefits 
are either esoteric or so technical the audience gives up and looks 
for alternatives.

len bullard



