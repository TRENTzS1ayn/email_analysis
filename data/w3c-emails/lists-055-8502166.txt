docno="lists-055-8502166"
received="Thu Feb 20 23:20:13 1997"
isoreceived="19970221042013"
sent="Thu, 20 Feb 1997 22:20:11 -0600"
isosent="19970221042011"
name="len bullard"
email="cbullard@hiwaay.net"
subject="Re: SERIOUS concerns about implementation"
id="330D227B.7E7D@hiwaay.net"
charset="us-ascii"
inreplyto="v03007803af32b097fb81&#64;[128.148.19.149]"
expires="-1"


To: David Durand<dgd@cs.bu.edu>
CC:w3c-sgml-wg@w3.org

David Durand wrote:
> 
> At 8:20 PM +0000 2/20/97, Digitome Ltd. wrote:
> >I aggree. But I *do* wish we could stop referring to SGML files as "legacy".
> >Surely SGML->XML is a "down-translation" not an "up-translation".
> 
> Afraid not. You lose no information in going from SGML to XML, unless you
> have somehow managed to come up with a way to use SHORTREF that could not
> be equivalently expressed with tags. It is a cross-translation, since any
> SGML DTD and any XML DTD should be able to operate at the same level of
> abstraction.

That is right.  SGML and XML conversions/translations don't lose 
information except where application restrictions (e.g, linktypes) 
put restrictions on the developer.  Those restrictions are necessary 
to the interoperability of the tools.  XML is a subset of SGML.  
In fact, it would be a matter of interest to know how the SGML 
grove plan compares to a grove plan derived for XML.

I spent some part of the day reading Dan Connoly's architecture 
papers.  XML definitions for hyperlinks should be documented in 
the terms of that glossary if they are not already.  

The current uri.bunyip discussions between TimBL, Dan, Larry 
Masinter, Martin Duerst, et al are most illuminating.  This 
is a quote from Larry Masinter:

"This all got better for me when I just admitted that the
definitions were circular, and decided that it was OK.

What's a resource?
   Something that has a URI.

What's a URL?
   Something that locates a resource.

What's a URN?
    Something that names a resource.

If you can name it, it's a resource. Different resources
have different names. A single resource might have
multiple names. You can't "get" a resource, you can
only interact with it. One way to interact with 
a resource is to obtain an entity that is a representation
of the resource at a given point in time.

This isn't smalltalk, it's webtalk. "Web" for me is
defined not by HTTP and HTML, but by this fundamental
architectural point, that some entities contain URIs
that locate/name other entities."

That's a clear as it gets.

len



