docno="lists-055-8922878"
received="Fri Feb 21 16:28:40 1997"
isoreceived="19970221212840"
sent="Fri, 21 Feb 1997 15:17:27 -0600"
isosent="19970221211727"
name="Len Bullard"
email="cbullard@hiwaay.net"
subject="Re: 2.1 a-d: Link Recognition by Reserved Attribute?"
id="330E10E7.7AE0@hiwaay.net"
charset="us-ascii"
inreplyto="v03007804af33a4db980e&#64;[128.148.19.149]"
expires="-1"


To: David Durand<dgd@cs.bu.edu>
CC:w3c-sgml-wg@w3.org

David Durand wrote:

> I meant that if we are taking a significantly shrunken subset of HyTime
> Architectural Forms [for instance, I think we can and should avoid any
> restrictions on content models], then it may be simpler to explain what we
> are doing directly, rather than pointing at HyTime, and explaining the
> differences.

Then what am I to make of Eliot's assertion that XML Linking is 
conforming HyTime.  I admit that I don't have the time to work
out the details of that.  I also don't like restrictions on 
content models.  It is a lot less ugly as deRose has shown 
to use them for linking information.  
 
>    If you are defining a scripting language containing only the commands
> "if-then-else", expressions, variable assignment and "while" loops,
> pointing to C++ and saying what to ignore is not a productive explanatory
> strategy. You might mention that C++ compaitibility is a goal, but that
> would be additional information for the intersted, not part of the core
> explanation.
> 
>    "Drag in" was intended to say that making normative reference to
> irrelevant information is bad.

That is the sticking point.  Is it irrelevant?

> I do want to make XML, and XML linking stand on
> their own, without normative references to ISO standards.

I'm not sure if that goal has any utility.  Whereas, 
gratuitous references are not useful, normative references 
establish a chain of authoritative information.  That 
does have utility.  WG8 is very likely to build the 
SGML Lite over XML and that is a win-win for all of us.

> No personal animosity intended, nor religious argument either. I'm
> religious about separating declaration and processing (though if we don't
> define sufficiently powerful processing, I agree with you, we are SOL). I'm
> certainly not religious about HyTime either way. In fact, I'm aggressively
> agnostic. I think you may mistrust me because I'm so ready to question
> HyTime's specific solutions, but I don't regret having spent the time on it
> that I have, nor do I think it should be supressed.

Oh, I don't distrust the questions at all.  I wish we had all been 
doing this some years ago online and in this fevered way.  But 
that is past.  What I want to see now is a clear authoritative 
chain of standards expressed as running code and embraced as 
COTS applications.  Then we can all go watch deRose ice skate.

len



