docno="lists-055-9000753"
received="Fri Feb 21 17:59:36 1997"
isoreceived="19970221225936"
sent="Fri, 21 Feb 97 16:18:38 CST"
isosent="19970221221838"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: 2.1 a-d: Link Recognition by Reserved Attribute?"
id="199702212259.RAA11009@www10.w3.org"
inreplyto="Fri, 21 Feb 1997 16:46:31 -0500"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

On Fri, 21 Feb 1997 16:46:31 -0500 Sam Hunting said:
><david>
>I do want to make XML, and XML linking stand on
>their own, without normative references to ISO standards.
></david>
> ...
>David: If that is your goal, then what am I to make of Design Goal (3)
>"XML shall be compatibble with SGML"? What's more normative than
>"shall"?
>More ISO than SGML?

I think this discussion is beginning to show signs that the participants
are missing some of each other's basic assumptions, though those
assumptions seem clear enough to some of the rest of us.

If I understand Len and others aright, they worry that some people would
like to conceal any relationship between XML Link and HyTime.  This
would be problematic for several reasons, among them the fact that some
potential users will be worried if HyTime is *not* invoked, and (in some
ways more important) it seems more honest to acknowledge our
intellectual debts where we can.

I believe there are certainly potential users for whom the mention of
HyTime will cause fear, trembling, and a mad rush for the exit -- rightly
or wrongly, HyTime has a fierce reputation as being very hard to
understand and as making simple things so infernally complicated that
it could not possibly be worth the trouble to understand it.  This is
a hard reputation to fight against (as I know to my sorrow, the TEI
having a similar reputation in some circles).  So it wouldn't surprise
me if some of us did entertain the thought, from time to time, of
completing an XML Link spec that never even mentioned HyTime.

It won't happen, though.  If Len is not stark raving mad (I try to keep
an open mind), then noting the relation of XML Link to HyTime will help
us with some potential adopters more than it will hurt us with others.


At the risk of putting words in David's mouth, I think he is arguing a
rather different point, namely whether the XML Link spec is to be a
free-standing document which can be reliably understood on its own
terms, or a document which refers to another document in such a way as
to require that other document to be understood, before XML Link can be
understood.  A document that makes *normative* references to other
documents cannot be understood without understanding those documents.

In drafting the original XML language spec, we worked very hard to
ensure that no *normative* reference to 8879 was necessary.  There is
(or should be) no point at which the XML language spec says "This works
the way it does in 8879; see 8879 clause 42.42.42 for details."  On
the contrary, we did our best to make good on the claim that "This
specification ... provides all the information necessary to
understand XML version 1.0 and construct computer programs to
process it."  I claim that there *is* no normative reference to 8879
in the XML spec.  The conformance of XML documents to 8879 follows as
a logical consequence of the constraints given in the spec; it does not
rely on a rule formulated as "You have to do whatever 8879 says you do."

I believe David and some others are mostly arguing that we need to
take the same approach with XML Link.  It will *not* be a good idea
to say something like

  "XML Link uses HyTime-style architectural forms as defined in
  the Extended Facilities Annex.  See that document for notation
  and meaning of architectural forms."

There are two reasons this would be a bad idea.  (1) We want people to
be able to understand XML Link by reading just the XML Link spec;
any requirements, notation, and semantics we take over from HyTime
should be documented fully in the XML Link doc.  (2) HyTime AFs
have a lot of machinery XML Link will probably not use.  There is no
need to refer your visitors to a map of the U.S. when all they want to
know is where the guest bedroom is.

We know from experience that if you define a simple subset of a
complex standard by saying "Well, use this standard, but turn off the
following features," the simple subset might as well not exist.
For example:  minimal SGML and basic SGML.  No one can understand
either one without understanding pretty much all of 8879.

It is considerations like these, I think, that David has in mind when
he wants to avoid normative references.  I agree:  normative references
are for cases where you don't want to have to explain everything the
reader needs to know.  That should be avoided as far as humanly possible
in all three of the XML-family specs.

My two cents.

-C. M. Sperberg-McQueen



