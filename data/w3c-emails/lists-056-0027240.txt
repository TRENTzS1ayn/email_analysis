docno="lists-056-0027240"
received="Fri Jun 13 12:02:56 1997"
isoreceived="19970613160256"
sent="Fri, 13 Jun 1997 09:59:01 -0900"
isosent="19970613185901"
name="W. Eliot Kimber"
email="eliot@isogen.com"
subject="Re: fragment exchange (was Re: rationales for TEI extended-pointer keywords)"
id="3.0.32.19970613095726.00f28690@mail.swbell.net"
charset="us-ascii"
inreplyto="fragment exchange (was Re: rationales for TEI extended-pointer keywords)"
expires="-1"


To:<w3c-sgml-wg@w3.org>

At 01:54 PM 6/13/97 +1000, Rick Jelliffe wrote:
>They asked about how what gets returned by a ID(x1)..ID(x2) when these ids
of  element in 
>different branches of the element tree: does just the text get returned or
does a clipped tree 
>get returned or what. If text is returned, is it XML.. I didn't know.  Any
ideas yet?

>One thing to do (I guess Elliot "Dr Fragment" Kimber is more on top of the
issues) would be:
>
><?xml rmd="all" ?>
><!doctype document system [...]>
><document id="d1">
><foo>blah blah blah<bar id="x1"/> blah</foo>
><foo>blah blah blah<bar id="x2"/> blah</foo>
><document>
>
>traversing a link with pointer ID(x1)..ID(x2) to would get a document like
this:

Nothing is "returned"; you don't "get to a document".  Pointers address
data structures in memory, not literal documents.  Thus, the wellformedness
of what's addressed isn't an issue.  Remember that editors and browsers
operate on an abstract representation of the parsed document, not the
document itself.  Communication among tightly-integrated processors must be
in terms of these abstractions, not literal syntax.  This is why DSSSL and
HyTime had to have groves: they needed a common way to talk about the
result of parsing, which is what groves are.  It's the same reason the DOM
group exists.  SGML is complicated enough that there are many possible
equally valid and equally useful abstract representations of parsed
results.  Therefore, you either need to agree on one or define a
meta-mechanism by which such abstractions can be defined (which is what
property sets and grove plans are for DSSSL and HyTime).

In all of these discussions, it's critical to keep separate the source,
which is what XML lang (like SGML) defines the rules for, and the parsed
result of processing that source, which is what XML Link (like HyTime)
operates on.  Once the documents have been put into memory, issues like
well-formedness and even validity go away, because those are syntax issues,
and syntax is transcended once the document is parsed (and only resurface
when you want to create a new source document).

Cheers,

Eliot
--
<Address HyTime=bibloc>
W. Eliot Kimber, Senior Consulting SGML Engineer
Highland Consulting, a division of ISOGEN International Corp.
2200 N. Lamar St., Suite 230, Dallas, TX 95202.  214.953.0004
www.isogen.com
</Address>



