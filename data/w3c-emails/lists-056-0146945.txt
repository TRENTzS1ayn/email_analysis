docno="lists-056-0146945"
received="Sat Jun 14 04:17:12 1997"
isoreceived="19970614081712"
sent="Sat, 14 Jun 1997 09:17:53 +0100"
isosent="19970614081753"
name="Rivers-Moore, Daniel"
email="daniel.rivers-moore@rivcom.com"
subject="RE: fragment exchange (was Re: rationales for TEI extended-pointe r keywords)"
id="317CDDD87D9CD011958100609712EB6B055D61@FLPS-NTSERVER1"
charset="iso-8859-1"
inreplyto="fragment exchange (was Re: rationales for TEI extended-pointe r keywords)"
expires="-1"


To:"XML Working Group (E-mail)"<w3c-sgml-wg@w3.org>

<rickjeliffe>
I just conducted the technical half of a day-seminar on XML. They gave
an ovation at the end (because of excitement about XML, not my
fascinating teaching postures :-)

They were most impressed with SHOW and ACTUATE.  I think their view was
that these are simple enough to do lots of wonderful things.  It would
make sense, I guess, if XML 2.0 had a link behaviour specification
language, I think SHOW and ACTUATE provide nice, generic defaults and
they should *definitely* be kept in XML 1.0.
</rickjeliffe>

I am delighted (and not surprised) that Rick's public was impressed by
SHOW and ACTUATE. They are indeed impressive. This is why it is
_so_important_ that they not be tied to the link element but be able to
be applied through an indirection mechanism.

In my original submission, I did not argue for SHOW and ACTUATE to be
left out of XML 1.0. Only that they should be left out of XML_LINK. They
(or something at least as good) should certainly be in XML 1.0, but they
should not be tied to the link element as attributes.

To make my position quite clear, I take the liberty of reproducing below
what I originally said. I think you will see from this that I want us to
be able to give demos at least as sexy as the ones which impressed
Rick's users.

To have a syntax which allows the degree of richness implied by my
examples may have to wait for XML 2.0. But to move ACTUATE and SHOW, in
their current simple forms, out of XML-LINK and into XML-STYLE should be
easy enough to do in XML 1.0. This would give Rick the features he wants
and me the indirection I need.

<danielriversmoore>
The link is about structure, not about behaviour.

Consider the following:

<person ID="drm">
  <name>Daniel Rivers-Moore</name>
  <nationality>British</nationality>
</person>
<person ID="ts">
  <name>Tony Stewart</name>
  <nationality>American</nationality>
</person>
<organisation ID="rivcom">
  <name>RivCom</name>
  <business>publishing structured information</business>
</organisation>
<employment XML-LINK="EXTENDED"> 
  <employer XML-LINK="LOCATOR" HREF="#rivcom" ROLE="employer"/>
  <employee XML-LINK="LOCATOR" HREF="#drm" ROLE="employee"/>
</employment>
<employment XML-LINK="EXTENDED"> 
  <employer XML-LINK="LOCATOR" HREF="#rivcom" ROLE="employer"/>
  <employee XML-LINK="LOCATOR" HREF="#ts" ROLE="employee"/>
</employment>

There is no SHOW, no ACTUATE and no BEHAVIOR attribute on the link
elements or their locator subelements. To have any of these attributes
would be to say _in_the_document_itself_  how the information should be
presented. But the document should just say what the information _is_.
The place for presentational instructions is in the stylesheet.

Having said this, I think it has been extremely useful for the SHOW,
ACTUATE and BEHAVIOR attributes to have been placed in XML-LINK
_in_this_early_draft_. Given that XML-STYLE has not yet been produced,
and given that in order to start implementing XML-LINK, there has to be
some way to specify how linked information should be presented to the
user, putting it in XML-LINK is a valid _temporary_ solution.

But when XML-STYLE is written, it should include ways of specifying not
only typographic, spatial etc. information about presentation of element
content, but also behavioural information, both about element content
and about links. At that time, the SHOW, ACTUATE and BEHAVIOR attributes
should be migrated from XML-LINK to XML-STYLE.

It will then be possible to have stylesheets with the following kinds of
result:

Under stylesheet 1:
The employer's name and business are displayed in the browser window.
The employer's name is a hotspot which, when clicked, spawns a popup
window showing a list of the employees with their names and
nationalities

Under stylesheet 2:
The employer's and employees' names are displayed in the browser window.
The employer's name is a hotspot which, when clicked, spawns a popup
window showing the employer's line of business. The employees' names are
hotspots which, when clicked, spawn a popup window showing the relevant
employee's nationality.

Under stylesheet 3:
The employer's name is displayed in bold type in the top row of a table,
spanning two columns. The employer's line of business is not displayed
at all. Subsequent rows of the table show the employees' names in the
first column, and their nationalities in the second.

. and so on
</danielriversmoore>



