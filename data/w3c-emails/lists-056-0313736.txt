docno="lists-056-0313736"
received="Sun Jun 15 01:36:18 1997"
isoreceived="19970615053618"
sent="Sun, 15 Jun 1997 01:36:05 -0400"
isosent="19970615053605"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: Associating stylesheets with documents"
id="33A37F45.EAD365A5@calum.csclub.uwaterloo.ca"
charset="us-ascii"
inreplyto="199706150214.TAA09868&#64;boethius.eng.sun.com"
expires="-1"


To:w3c-sgml-wg@w3.org

Jon Bosak wrote:
>  (No
> cascading rules have been defined for DSSSL, but there seems to be
> nothing preventing this at some time in the future.)

I have to disagree with half of the above statement. Which half depends
on your definition of "cascade". If you define "cascade" to mean "grab
characteristics from construction rules from various places and merge
them into a single construction rule" (as in CSS) then I would disagree
that DSSSL could ever have such a thing without doing violence to its
fundamental concepts. How do you merge the characteristics from a
"table" flow object and a "literal" flow object into something
reasonable? 

If you define "cascade" more broadly to mean "allow definitions to
conflict, and have a specified mechanism for resolving conflicts" then
DSSSL already has a cascading mechanism: 

"A process specification shall be processed by first processing the
declarations of all of the parts, and then processing the bodies of all
of the parts in order. Within a single part, there shall not be
conflicting declarations; when two declarations in different parts
conflict, the declaration in the earlier part shall take precedence.
Similarly, within the body of a single part, there shall not be
conflicting specifications, but when two specifications in the bodies of
different parts conflict, the specification in the earlier part shall
take precedence."

 Paul Prescod



