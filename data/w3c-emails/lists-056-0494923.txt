docno="lists-056-0494923"
received="Mon Jun 16 13:04:46 1997"
isoreceived="19970616170446"
sent="Mon, 16 Jun 1997 13:00:46 -0400"
isosent="19970616170046"
name="Steven J. DeRose"
email="sjd@eps.inso.com"
subject="Re: fragment exchange (was Re: rationales for TEIextended-pointer keywords)"
id="2.2.32.19970616170046.00ae8fd4@pop"
charset="us-ascii"
inreplyto="fragment exchange (was Re: rationales for TEIextended-pointer keywords)"
expires="-1"


To:Peter@ursus.demon.co.uk,w3c-sgml-wg@w3.org

At 10:33 AM 06/14/97 GMT, Peter Murray-Rust wrote:

>Recent postings have mirrored some of my early misconceptions about XML-LINK -
>that it was concerned with presentation, with documents, etc.  The TEI 
>heredity is valuable, but may suggest that XML-LINK is primarily linked to
>text documents - it need not be and I certainly intend to use it in other ways.

That may be in part because XML deleted the parts of TEI EPN that are used
for pointers to other kinds of data. :)


>I suspect that 'span' arises out of textual applications with the document
>viewed as an event stream.  There are many applications where span is a
>meaningless concept, or when it is extremely likely that a given span would be
>illegal.  

Perhaps, though probably not so much "text" as "sequential" or "ordered".
There are kinds of ordered data other than text, and for many of them span
would also be meaningful. But certainly there is data for which spans (or
trees) are not meaningful, or not very useful. Note that your examples are
ones of that form: where serial order is not an inherent part of the data's
meaning. This is true by definition in some kinds if useful data, such as
relational databases; it is false by definition in SGML[1]. Nevertheless,
both systems are powerful enough to represent each others' data somehow, but
it gets real awkward real fast.

[1] I say this because SGML's model depends heavily on ordering -- just look
at content models, tag omission, etc. Of course you can create specific
content model that happen not to impose orders or types; but that is
comparable to adding serial-number fields to RDB records: possible, even
meaningful and highly useful in some particular application contexts; yet
not natural in the model, and hence likely to really bollix up
implementations, particularly in terms of what they thought were optimizations.


Steven J. DeRose, Ph.D., Chief Scientist
Inso Electronic Publishing Solutions
   (formerly EBT)



