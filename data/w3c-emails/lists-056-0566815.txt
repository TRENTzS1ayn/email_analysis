docno="lists-056-0566815"
received="Tue Jun 17 19:54:08 1997"
isoreceived="19970617235408"
sent="Tue, 17 Jun 1997 16:52:14 -0700"
isosent="19970617235214"
name="Tim Bray"
email="tbray@textuality.com"
subject="Re: Update on namespaces"
id="3.0.32.19970617165211.00a4f4d0@pop.intergate.bc.ca"
charset="us-ascii"
inreplyto="Update on namespaces"
expires="-1"


To:w3c-sgml-wg@w3.org

The namespace discussion has been bubbling away very usefully.  Perhaps
I can summarize a bit.

I apologize in advance for incorrect association of peoples' names with
arguments... the volume has been just too overwhelmingly high.  Email
fatigue is definitely setting in.

The original statement of the requirement by Andrew Layman seems to have
stood up pretty well under pressure of discussion here, and external talk 
with various interested groups here and there in the W3C and engineering 
groups around the web.

The solutions proposed fall into three categories:

1. Extend DTD declaration syntax 

(I forget the names, there's been so much traffic, but the WG8 proposal 
from the Japanese did this, and at least Henry Thompson and Martin Bryan
had ideas).  I think: sorry, a non-starter.  I don't think this group 
should undertake wholesale re-engineering of SGML markup declarations, 
and we need this stuff *now*, so we can't wait for the SGML revision.

2. Use Architectural Forms (maybe just calling them reserved attributes)

This was argued by quite a few people, most eloquently by James Clark.
This has the appealing characteristic that no changes whatsoever are
required, and you can do everything with an XML parser.  It has the
downside that if you want to avoid huge masses of attributes on everything,
you have to start parsing DTD syntax to get the defaults.  We are 
encountering HUGE, MASSIVE resistance to this in web-land.  When we explain 
that it's not that hard, we are told to go away, you've given us elements 
and attributes, we like elements and attributes, why can't we do everything 
with elements and attributes?  I've also heard claims that the AF technique 
falls apart in certain examples, but I haven't seen those examples yet.

This a semi-upside that if we need multiple inheritance (I think we
don't, and would prefer to avoid it if we can) it's easy to express if
not to understand.

3. Use an all-instance syntax

This is something along the lines of the the colon-prefixing that
was proposed by both Microsoft and the Japanese WG8 submission, e.g.
<book:price>11.99</book:price>.  This has two downsides: it requires
a change in XML-lang (albeit not much, just allow ':' in namechar), and
you can't get all the information you need from a normal SGML parser
without some postprocessing.  It has a big upside in that all the
information you need is right there in the document and lightweight
processors get at it easily.  It's more in the XML style in that
all the info is right there in the instance and you don't need
any help to figure out what's going on.

For now, I lean to #3, with AF's a fallback position if there's a really
good reason for not doing #3.  Andrew Layman and have agreed to cook
up a formal proposal along these lines, which will be forthcoming.



