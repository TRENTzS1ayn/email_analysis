docno="lists-056-0607983"
received="Wed Jun 18 08:37:06 1997"
isoreceived="19970618123706"
sent="Wed, 18 Jun 1997 08:36:24 -0400"
isosent="19970618123624"
name="Gavin Nicol"
email="gtn@eps.inso.com"
subject="Re: Subelement addressing"
id="199706181236.IAA28838@nathaniel.eps.inso.com"
inreplyto="3.0.32.19970617161009.00a4f3c0&#64;pop.intergate.bc.ca"
expires="-1"


To:w3c-sgml-wg@w3.org

>The idea is to introduce a new XML-link locator keyword STRING
>that would work as follows:
>
>STRING(7, 8, "LITERAL")
>
>which would denote a location at the 8th character following the beginning
>of the 7th match to the literal LITERAL.  This would be an exact 
>byte-for-byte matching - no case-folding, record-end magic, regexp magic,
>or combiner normalization.  Which means it would still have the potential
>to fail puzzlingly in some (particuarly combining character) situations.

What would happen if the encoding of the document being linked to, and
the encoding of the link were different? Also, the note about
combining characters is an important one: one could write a link to a
document with a literal that *appears* to be exactly the same, but is,
in fact not, causing the link to fail.

The two major issue with sub-element addressing are:

  1) Whitespace normalisation
  2) Character normalisation (i.e. what is a character).

I think we have almost got (1) taken care of, and (2) is mostly taken
care of by the fact that we use ISO 10646. Additional rules for
normalisation will be required for (2) to work well, but I think we
can formulate them reasonably well by taking the Unicode normalisation
recommendations as a starting point. 



