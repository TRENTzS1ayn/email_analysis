docno="lists-056-0963815"
received="Thu Jun 19 10:34:48 1997"
isoreceived="19970619143448"
sent="Thu, 19 Jun 1997 22:36:34 -0700"
isosent="19970620053634"
name="Michael Leventhal"
email="michael@textscience.com"
subject="Re: namespace viz validation"
id="3.0.1.32.19970619223634.007b91f0@aimnet.com"
charset="us-ascii"
inreplyto="Pine.GSO.3.94.970618203726.13790C-100000&#64;Ocean.CAM.ORG"
expires="-1"


To:w3c-sgml-wg@w3.org

At 08:51 PM 6/18/97 -0400, Sam Hunting wrote:
>Given the potential downside of going with option #3 and getting it wrong
>-- however "vociferous" the demand (*not* need, as David points out) for
>it might be -- the maximum action to take for 1.0 should be to allow ":" 
>in names, if need be, and "reserve it for future use" as for as the XML
>application profile goes. 

I've felt for a very long time that SGML needed a "class" mechanism (to
me, oddly called here namespaces, but no matter) and that 1. HyTime did not
do 
that properly and 2. that it should not be associated with HyTime but
rather be a 
syntatically smooth part of the element definition syntax.

I'm a techie who has tried his hand at teaching SGML and I've picked up
some things.  You can't teach marked sections because they use a
parameter entity and people don't get at all what entities are about.
So the conditional markup proposal Tim put out interested me greatly.
You can't teach people to class elements with HyTime syntax.  Just can't.
But oddly, they can easily understand the class/namespace syntax.

So I have every reason to like the ':' proposal but I find myself
agreeing with the statement above.  Is there really real interest to
do something with this even before we have fundamental things done
like styles?

However, although we have an XML tool coming out which does not read
the DTD we do not object to having to read the DTD in a future version
to pick up attribute definitions which, among other things, might give us
namespace
associations.  But we feel strongly that it should also be a choice - if you
don't read the DTD you may lose information but that is the application's
and the user of that application's choice.  We think that the market will
rapidly set the level of interoperability needed and, very likely, we will
quickly arrive at the point where most applications will process the DTD
in some form or fashion.  (Writing DTDs in XML _would_ help.)

Michael Leventhal
______________________________________________________________________
  Michael Leventhal           Internet  : http://www.grif.fr
  G R I F , S. A.             Email     : Michael.Leventhal@grif.fr
  VP, Technology              Telephone : 510-444-2962
  1800 Lake Shore Ave Ste 14  Fax       : 510-444-1672
  Oakland, California  94606  France    : (011) 33 1 30121430 (fr US)
______________________________________________________________________



