docno="lists-056-10597472"
received="Tue May 20 14:45:16 1997"
isoreceived="19970520184516"
sent="Tue, 20 May 1997 11:44:40 -0700 (PDT)"
isosent="19970520184440"
name="altheim"
email="altheim@mehitabel.Eng.Sun.COM"
subject="Re: SD1 - Short End Tags [fmt]"
id="libSDtMail.9705201144.23094.altheim@mehitabel"
charset="us-ascii"
inreplyto="SD1 - Short End Tags [fmt]"
expires="-1"

To:matt@wdi.disney.com
Cc:w3c-sgml-wg@w3.org


"Matthew Fuchs" <matt@wdi.disney.com> writes:
[responding to the notion of shortening GIs...]
> I have to disagree with this.  It is true that if I am sending a database
> extract to myself (i.e., my java server app to the java applet I sent to the
> client), then I can do this.  However, if it is your server app to _my_ client
> app which is receiving answers from 8 other servers simultaneously, I would
> much rather have 8 versions of:
> 
> > <author>
> > <firstname>foo</firstname>
> > <lastname>bar</lastname>
> > </author>
> 
> than have each server alpha-rename the tags to different incomprehensible tags,
> especially when some might switch lastname and firstname.

Even if there's 10000000 records?

It seems like time to build into the top structure of your document a
header format mapping from simple alphanumeric to desired field label,
which is what you'd want to do anyway given the limitations of GIs (no
spaces, etc.). You could also add data type, length, whatever suits your
needs. And adding this type of architectural form meta-information would
also provide the cross-application data required for transformations, etc. 

Adding this meta-information *once* to the top of each document seems
preferable to adding 40% to the length of your transmitted document, which
any decent systems analyst would say is simply poor design, especially
when given numerous options. And you wouldn't even have to include it in
the document -- you could reference it as an external entity, saving even
more space and bringing some standardization to your process.

If one has 10000000 records and is spending 40% of space on markup, 
then possibly XML is simply not the best storage method.

Murray

...........................................................................
Murray Altheim, SGML Grease Monkey                  <altheim[@]eng.sun.com>
Member of Technical Staff, Tools Development & Support
Sun Microsystems, 2550 Garcia Ave., MS UMPK17-102, Menlo Park, CA 94043 USA
         "Give a monkey the tools and he'll build a typewriter."



