docno="lists-056-1069327"
received="Thu Jun 19 14:39:01 1997"
isoreceived="19970619183901"
sent="Thu, 19 Jun 1997 14:38:58 -0400 (EDT)"
isosent="19970619183858"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: Namespaces, the universe, and everything"
id="199706191838.OAA14668@calum.csclub.uwaterloo.ca"
charset="US-ASCII"
inreplyto="3.0.32.19970619095106.00a5b620&#64;pop.intergate.bc.ca"
expires="-1"


To:w3c-sgml-wg@w3.org

> It seems pretty clear that it's probably not realistic at this
> point to extend the 8879 syntax in 8 different directions at once
> to meet the needs of all the meta-content group requirements - so
> for now we're preaching that they should at least use XML, not 
> S-expressions or tab-delimited files or whatever other proprietary
> weirdness they may have been considering.

The presumption here is that SGML's concept of validation is not really
applicable to these other fields (too strong or too weak) but that its
instance syntax is fine. But we already know that that isn't the case from
the arguments about empty end tags. I could go into dozens of other things I
would like changed about SGML instance syntax to handle non-document data 
(some involving minimization, some involving semantics). Even SGML's DTD
concept becomes horrifically verbose and difficult to read when it uses 
SGML's instance syntax.

What is the point (technically) of foisting this inferior database-describing 
format on the database world? Is this all political? About unifying the whole
world under our banner? About keeping SGML consultants employed advising 
database consultants about how to use SGML instead of comma delimited files?
I'm not accusing anybody of cynically trying to misdirect the industry, but 
of committing the "I know alot about hammers..." mistake. We may achieve
industry success -- "the only data modelling format you need", as HTML did as 
the "only DTD you need", but we will have failed in the sense of Doing the 
Right Thing in the way that HTML has failed. I, personally, would rather
not make another HTML.

If we want XML/SGML to be used across all fields, then we should rethink it 
from scratch. It should have an abstract syntax that can adapt to the job at
hand (more abstract than SGML), a reorganization of concepts around more
fundamental data-modelling principles and either a more general, powerful 
concept of validation or none at all.

 Paul Prescod



