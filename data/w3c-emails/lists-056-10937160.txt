docno="lists-056-10937160"
received="Wed May 21 10:31:26 1997"
isoreceived="19970521143126"
sent="Wed, 21 May 1997 10:31:53 +0100"
isosent="19970521093153"
name="Eric Johnson"
email="ericj@nev.com"
subject="Two Cents on the Potential Cost of Short End Tags"
id="199705211432.KAA25249@ids2.idsonline.com"
charset="ISO-8859-1"
expires="-1"


To:"W3C SGML WG"<w3c-sgml-wg@w3.org>

First of all, end tags are required.  My work with electronic documents
makes that very clear to me.  I see from the traffic that I'm not alone in
that view.

Second, the argument to use short end tags to save space strikes me as
being very much like the argument used that created the millenium problem,
that is saving two columns on an 80-column card by not using the first two
digits of the year.  Someone way back surely said, "We'll never get to the
year 2000 and anyway by that time, if it's a problem, it'll be resolved." 
Little did anyone realize.  We aren't constrained by 80 columns any longer,
but the problem remains as a vengeance.  I predict that the use of short
end tags will eventually come back to haunt us in a similar way.  In that
we can't anticipate all the uses tagged content will be put to in the
future (especially permanent data) better to have the full information
embedded in both the start and end tags than not.  It may well turn out to
be too expensive a problem to go back and fix later, to add full tags later
as documents and data bases become increasingly complex.  Either important
content may in essence be lost or companies will be forced to ante up
retrofits.   My guess is that data will be lost at some not insignificant,
bottom-line cost.  Let's do it right the first time.  Else: "Pay me now or
pay me later," as the motor oil commercial says.

While there does appear to be a genuine conflict between the requirements
for the tagging of textual content and the incorporation of structured data
(i.e., from data bases) in documents, it would seem that there must be ways
of handling the problem that won't exacerbate the tagging of text by
relaxing standards without very carefully working out the implications and
not opting for current (say, immediate) and easier design solutions on the
processing level.

Eric



