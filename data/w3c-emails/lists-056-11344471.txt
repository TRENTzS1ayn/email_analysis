docno="lists-056-11344471"
received="Thu May 22 13:12:07 1997"
isoreceived="19970522171207"
sent="Thu, 22 May 1997 12:08:20 -0500"
isosent="19970522170820"
name="Paul Grosso"
email="paul@arbortext.com"
subject="Re: Thoughts on namespaces"
id="3.0.32.19970522120724.006da860@pophost.arbortext.com"
charset="us-ascii"
inreplyto="Thoughts on namespaces"
expires="-1"


To:w3c-sgml-wg@w3.org

At 16:30 1997 05 22 GMT, Christopher R. Maden wrote:
>I think that the namespaces can be accomplished with one change to the
>assumed XML as SGML declaration and an application convention.

>
><!DOCTYPE mymess [
><!ELEMENT mymess    (html::p | faq::q | faq::a)*>
><!ELEMENT html::p   (#PCDATA | html::a | tei::xref)*>
><!ELEMENT faq::q    (#PCDATA | html::a | tei::xref)*>
><!ELEMENT faq::a    (#PCDATA | html::a | tei::xref)*>
><!ELEMENT html::a   (#PCDATA)>
><!ELEMENT tei::xref (#PCDATA)>
>]>

But why would the mymess DTD want to have an element declaration for,
say, HTML's p element and how does such a declaration interact with
the HTML's declaration?

I would think that html:p (I prefer one colon) would have--at least
by initial default--the content model from the HTML DTD.  In fact,
I expect a given instance of an html:p very likely came from an
existing HTML document and may well have other elements from the
HTML DTD embedded in it.  If you have a declaration for html:p
at all in mymess, I would expect it would be to allow html:p to
contain elements--from the tei, faq, and mymess DTDs--in addition
to those the HTML DTD already allows.

I think I understand the multiple-namespaces-in-an-instance idea
(though with lots of outstanding questions remaining), but I don't
understand your "combined DTD" idea.  Can you elaborate on what
requirements it addresses and how it's supposed to work given some
of my questions above?

paul



