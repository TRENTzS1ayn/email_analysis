docno="lists-056-11405420"
received="Thu May 22 16:17:16 1997"
isoreceived="19970522201716"
sent="Thu, 22 May 1997 13:14:25 -0700"
isosent="19970522201425"
name="Joe English"
email="jenglish@crl.com"
subject="Re: On constraining/validating datatypes"
id="199705222014.AA16242@mail.crl.com"
inreplyto="2.2.32.19970522174226.0076d4f4&#64;pop"
expires="-1"


To:w3c-sgml-wg@w3.org


"Steven J. DeRose" <sjd@eps.inso.com> wrote:

> ----------------------------------
> Along the first axis, there are several obvious points we can choose:
>
> a) Do nothing: [...]
> b) Define a small, fixed number of atomic types.
> c) Define a language for defining datatypes: regex (say, per POSIX), or
> perhaps HyLex.
> d) Define a way to access *any* programming, scripting, or other language at
> all.


I vote for (c) and (d), using HyLex for (c) and NOTATIONs
to declare (but not necessarily define) support for (d).

HyLex is not as familiar to most people as Perl or POSIX regexps,
but it's equally powerful.  It's also more verbose, but is
less cryptic to the uninitiated.

> Along the second axis, possible approaches are shown below. [...]
>
> a) Associate datatypes with data via attributes. [...]
> b) State the relationships between datatypes and attributes or content right
> with the definitions, for example in header elements [...]
> c) In the DTD itself, via an amendment.


Or (d), in the DTD itself via (GASP!) processing instructions.
Something like:


    <!-- <?LEXMODEL ... > PI defines a lexical model: -->

    <?LEXMODEL scheme("http" | "ftp" | "gopher")>
    <?LEXMODEL host   (([a-zA-Z][a-zA-Z0-9]*, ".")+>
<!-- or   ((NMSTART, NMCHAR*), ".")+    -->
    <?LEXMODEL port (DIGIT+) >
    <?LEXMODEL path ((URLCHAR*, "/")+)>
    <?LEXMODEL fragment ([a-zA-Z0-9]+)>
    <?LEXMODEL query (URLCHAR*)>
    <?LEXMODEL url( (scheme, "://", host, (":", port)?, "/")?,
  path,
  ("#", fragment)?,
  ("?", query)? )>

    <!-- <?LEXTYPE ... > PI associates a lexical model
 with an attribute or content:  -->

    <?LEXTYPE url (IMG/SRC | WEBADDRESS/#CONTENT | #ANY/HREF)>

    <!-- Possibility: defining a NOTATION with the same name
 as a lexical model declares semantics for that type: -->

    <!NOTATION url PUBLIC
"-//IETF//NOTATION RFC 1738 Uniform Resource Locators">


All this stuff can go in the DTD, or possibly at the front of 
the document (except for <!NOTATION...> decls).


--Joe English

  jenglish@crl.com



