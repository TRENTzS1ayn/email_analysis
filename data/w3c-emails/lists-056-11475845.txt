docno="lists-056-11475845"
received="Thu May 22 18:34:02 1997"
isoreceived="19970522223402"
sent="Thu, 22 May 97 17:00:59 CDT"
isosent="19970522220059"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: Link-3: Sets, Singletons, and Determinism"
id="199705222234.SAA24052@www10.w3.org"
inreplyto="Sun, 18 May 1997 05:38:53 -0400 (EDT)"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

On Sun, 18 May 1997 05:38:53 -0400 (EDT) Tim Bray said:
>Although XML-link currently doesn't address this at all, the spec probably
>follows the TEI principal of determinism; that is to say, you always get
>exactly one location as the result of an xpointer (or in the case of spans,
>two).
>
>If we are going to allow spans, and thus an xpointer to return N
>locations, where N>1, should we consider saying that all xpointers
>return sets of objects, and sometimes the size of the set is 1?  This
>would open up a whole bunch of interesting apps.

>On the other hand, it would make xpointers smell even more like queries
>and less like addresses, which makes me at least nervous.  We also

I agree both with the observation that pointers-as-queries is appealing
and with the slight nervousness.  The TEI is explicit about its
determinism in part because we decided we didn't have enough time
to work out all the details of allowing an xptr to return (er. refer
to -- sorry, David!) arbitrary numbers of objects.

>have to be careful if we are going to (see a later message) allow
>sub-element addressing; then we'd have to say that either that is
>a set of one pseudo-element, or that xpointers can return either
>sets of elements or spans of characters.  Tricky either way... but
>returning sets of elements is a seductive idea.

I'm seduced.  I think it would be very useful, and not too horrifyingly
complex, to say an xpointer returns either (a) a set of elements
or (b) a pair of locations which bound some section of the document.
The only interpretation I've ever been able to find for what a span
is actually pointing at is 'the frontier of the tree'--which for most
purposes just means 'the string of characters', but which also leaves
open the possibility that the process can do something useful with
information about the part of the tree attached to /adjacent to
that part of the frontier.


-C. M. Sperberg-McQueen



