docno="lists-056-11493463"
received="Thu May 22 18:58:41 1997"
isoreceived="19970522225841"
sent="Thu, 22 May 1997 23:34:36 GMT"
isosent="19970522233436"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Re: On constraining/validating datatypes"
id="7112@ursus.demon.co.uk"
inreplyto="On constraining/validating datatypes"
expires="-1"


To:w3c-sgml-wg@w3.org

In message <3.0.32.19970522144934.00a4e2c0@village.doctools.com> "Eve L. Maler" writes:
[...]
> 
> There's a fourth axis: Which software module should be in charge of data
> type validation, the XML processor or an application?  A number of people
> were pointing out the work involved in implementing some such validation
> schemes, and it may put us far outside XML-Lang's "development budget."  If
> we make XML-Type a separate spec, the existence of a type-validation
> application would be implied, the way XML-Link implies the existence of a
> link-processing application.

I support this.  I know it's dangerous to start specifying how software
should behave, but there are now so many different axes to XML that it's
critical that we modularise them into components.  It may not be a universal
view, but I find software helps to define the spec.  As far as I can see
a type-validation processor would only validate - not transform - and would
be required to pass error indications to the next component (perhaps a link
processor).  Apart from different platforms I don't see the need for a 
large number of these validators, and it would be valuable to have an
XML library where one could be picked off the shelf.

P.



-- 
Peter Murray-Rust, domestic net connection
Virtual School of Molecular Sciences
http://www.vsms.nottingham.ac.uk/



