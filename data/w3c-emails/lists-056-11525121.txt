docno="lists-056-11525121"
received="Thu May 22 19:09:24 1997"
isoreceived="19970522230924"
sent="Thu, 22 May 1997 18:05:36 -0500"
isosent="19970522230536"
name="Paul Grosso"
email="paul@arbortext.com"
subject="Re: Thoughts on namespaces"
id="3.0.32.19970522175340.00709ec8@pophost.arbortext.com"
charset="us-ascii"
inreplyto="Thoughts on namespaces"
expires="-1"


To:w3c-sgml-wg@w3.org

At 15:15 1997 05 22 -0500, W. Eliot Kimber wrote:

>In the discussions I've seen (both here and elsewhere), there seem to be
>several distinct and largely independent problems:
>
>1. Connecting instance element types to known semantics ("architectures")
>2. Managing "DTD modules" in some semi-automatic way ("schema import")
>3. Enabling the literal inclusion of document fragments with different
>   schemas in the same document ("inline subdocs")

I do not think we are talking about #1, and I'm not even sure what #2 is.

I understand the problem to be mostly #3, and I do not see how subdocs
solves the problem.

For example, I have an ISO 12083 Article document except I want to embed
an SGML Open Exchange Table in it.  So I'm rolling along in my article
and, in between two paragraphs, I want to insert an SO table.  Of course,
inside one of my table cells, I want to have some paragraphs and lists
and text with inlines, all of which are elements in my 12083 DTD.  I
don't believe "just reference the table" will be acceptable, and I don't
see how subdoc works to allow 12083 elements within my table entries.

I am imagining something parallel to scoping in programming languages
where, when I hit the beginning of my table, I effectively say "start
SO table scope" which conceptually "pushes" my SO table DTD "on top of"
the stack of element declarations.  Until the end of this scope, any
element is first attempted to be resolved against the declarations for
the most local scope (the SO table declarations), but if the element
name does not resolve within that scope, it keeps looking outward through
the scopes, so that a <p> or <list> element within a table entry will
end up being resolved by the declarations associated with the 12083 DTD.

Only if I want to refer to other than the most local declaration of an
element (e.g., if I want to refer to the declaration of <row> in the
12083 DTD from within the scope of the SO table DTD) would I have to
qualify the element with something like "(article)row" or "row:article".

paul



