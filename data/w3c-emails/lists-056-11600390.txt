docno="lists-056-11600390"
received="Thu May 22 20:40:37 1997"
isoreceived="19970523004037"
sent="Thu, 22 May 1997 19:40:13 -0500"
isosent="19970523004013"
name="len bullard"
email="cbullard@hiwaay.net"
subject="Re: SD1 - Proposal: allow in valid XML-Documents only"
id="3384E76D.426C@hiwaay.net"
charset="us-ascii"
inreplyto="199705220852.JAA22579&#64;curia.ucc.ie"
expires="-1"


To: Peter Flynn<pflynn@curia.ucc.ie>
CC:w3c-sgml-wg@w3.org

Peter Flynn wrote:
> 
> Len Bullard writes:
> [shipping bulk data]
> > This gives me pause.  I now wonder precisely which applications
> > it will be good for. If all you are doing is sending XML to the
> > display, HTML works pretty well for that.  So what I get from
> > XML then, is a display format with more complex hyperlinking?
> 
> No, I don't see that conclusion follows at all. You can build into the
> applet whatever smarts you want: all I'm saying is that shipping bulk
> data premarked in plain XML (or SGML) is inefficient. 

Right.  Like VRML, even when compressed, at some point, a binary 
has become necessary.  But an applet?  I can see that approach 
working in the way a self-contained compress/decompress works.

> Having a
> dynamically-generated chunk of JavaScript unwrap and rejig a
> dynamically-composed chunk of data in some highly compact (?binary)
> format might overcomes the transmission problem. The XML which hits
> the browser should be the same as if it has been composed and
> transmitted _en clair_.

Umm... the browser?  Just what is that?  I know what a framework is, 
and a framework + plugin = browser.  I'm unclear about the dynamically 
generated chunk of JavaScript is needed.  The XML hitting the 
browser is still data to some process, right?  What is that process? 
What is it's application?

Probably we should take this over to xml-dev.  I'm in the weeds 
and folks are too busy for that here.

len



