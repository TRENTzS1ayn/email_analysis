docno="lists-056-11908737"
received="Fri May 23 14:44:53 1997"
isoreceived="19970523184453"
sent="Fri, 23 May 1997 11:44:47 -0700"
isosent="19970523184447"
name="Andrew Layman"
email="andrewl@microsoft.com"
subject="RE: Namespaces"
id="7BB61B44F197D011892800805FD4F792A4BFE7@RED-03-MSG.dns.microsoft.com"
inreplyto="Namespaces"
expires="-1"


To:"'Paul Prescod'"<papresco@calum.csclub.uwaterloo.ca>,w3c-sgml-wg@w3.org

Good point about the hacker.  We need a simple style guide for when
something is and is not qualified.  However, this rule could be
friendlier than Paul suggests.  I could be: If your namespace is the
same as your containing element's do not use qualification.  If it is
different, you must use qualification.

By the way, given the existence of entities, and the proposals to use
architectures, how do PERL hackers ever actually get reliable results?

--Andrew Layman
   AndrewL@microsoft.com

> -----Original Message-----
> From:Paul Prescod [SMTP:papresco@calum.csclub.uwaterloo.ca]
> Sent:Friday, May 23, 1997 4:58 AM
> To:w3c-sgml-wg@w3.org
> Subject:Re: Namespaces
> 
> Martin Bryan wrote:
> > Therefore what is needed is a way of saying that from this element
> till you
> > find the matching end-tag, consider that a separate name space has
> been set
> > up whereby all tags within this scope can be considered to have
> > automagically been qualified by a specified name space qualifier.
> 
> This would seem to make things much harder for the Perl Hacker. At
> this
> point I think that there should be a single default scope and
> everything
> else should be explicitly "called in" from another scope. I believe
> that
> SGML architectures allow this.
> 
>  Paul Prescod



