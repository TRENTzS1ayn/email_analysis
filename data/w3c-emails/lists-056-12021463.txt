docno="lists-056-12021463"
received="Fri May 23 19:11:50 1997"
isoreceived="19970523231150"
sent="Fri, 23 May 97 18:02:27 CDT"
isosent="19970523230227"
name="Michael Sperberg-McQueen"
email="U35395@UICVM.UIC.EDU"
subject="Re: Link-3: Sets, Singletons, and Determinism"
id="199705232311.TAA00004@www10.w3.org"
inreplyto="Fri, 23 May 1997 04:59:08 -0400 (EDT)"
expires="-1"


To: W3C SGML Working Group<w3c-sgml-wg@w3.org>

On Fri, 23 May 1997 04:59:08 -0400 (EDT) Henry S. Thompson said:
>[Discussions about sets of elements, and what xpointers 'return', etc. deleted]
>
>I'm with David on this one:  links connect resources, those resources
>are identified by locators.  Vanilla locators identify a single point
>in a document.  Span locators identify a pair of points in a document.
>End of story.  Nothing is returned.  What applications do with a span
>is up to the semantics they implement for their link types.
>
>See how easy things are if we eliminate processing language [hint, hint :-]

With respect, I think the problem here has nothing *at all* to do with
whether we use the verb "return" or not.

In the document

  <a id='a'>
  <b/><c id='c'>stuff</c><d/>
  </a>

what is the pair of 'point's identified by the span "ID(A)..ID(C)"?

How we answer that question determines whether the span makes any
sense or not, and needs to be forbidden or not.

Processing doesn't seem to me to have anything to do with it:  if I
say

    Each term in the location ladder returns a result, which may or
    may not depend on the results returned by previous terms in the
    location ladder"

in what way is that more 'processing oriented' than if I say

    Each term in the location ladder identifies a point, which may
    or may not depend on the points identified by previous terms in
    the location ladder"

I'm not talking about returning a byte string to the application;
I'm talking about returning an intermediate or final result to
whatever process is controlling the stepwise progressing through
the rungs of the location ladder.  I.e. neither when I talk about
identifying points nor when I talk about returning results am I
talking about processing.

Sheesh.

-C. M. Sperberg-McQueen



