docno="lists-056-12067368"
received="Fri May 23 19:48:11 1997"
isoreceived="19970523234811"
sent="Sat, 24 May 1997 01:48:08 +0200"
isosent="19970523234808"
name="Bert Bos"
email="bert@w3.org"
subject="Re: On constraining/validating datatypes"
id="33862CB8.4227@w3.org"
charset="us-ascii"
inreplyto="DSTMay22.194730.5314&#64;sophia.inria.fr"
expires="-1"

To:w3c-sgml-wg@w3.org


Steven J. DeRose wrote:

> a) Do nothing: have no types for #PCDATA, and only the existing attribute
> declared values.
> 
> b) Define a small, fixed number of atomic types.

This is my favourite. It is in the spirit of XML (the 95% solution with
5% of the effort). C and d add a lot of complexity and I can see very
little gain.

As programming languages and SQL show, you don't need more than half a
dozen types. Something close to this set is enough: boolean, integer,
real, character, string, and date/time. XML already has ways to make
arrays, records and pointers.

> 
> c) Define a language for defining datatypes: regex (say, per POSIX), or
> perhaps HyLex.
> 
> d) Define a way to access *any* programming, scripting, or other language at
> all.



Bert



