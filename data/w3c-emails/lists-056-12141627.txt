docno="lists-056-12141627"
received="Fri May 23 20:20:44 1997"
isoreceived="19970524002044"
sent="Fri, 23 May 1997 17:22:34 -0700"
isosent="19970524002234"
name="Matthew Fuchs"
email="matt@wdi.disney.com"
subject="Re: Semi-transparent Syntax Extensions (was Re: SD5 - Namespaces)"
id="9705231722.ZM25233@scrumpox.rd.wdi.disney.com"
charset="us-ascii"
inreplyto="eliot&#64;isogen.com"
expires="-1"


To:"W. Eliot Kimber"<eliot@isogen.com>,w3c-sgml-wg@w3.org

After much discussion, I think namespaces and architectural forms address
different, but related problems.  I would say the namespace issue is almost
purely syntactic, and the architecture issue is more semantic.  The namespace
problem is this:

there are people out in the world using ascii strings to describe things.
 sometime they use the same names.  if we want to borrow them into a document,
we need to make sure the names don't clash.

Architectures don't deal with this because nothing prevents two people using
the same name for different architectures.  Namespaces just gives a way for all
these ascii strings to be renamed in a consistent way so these clashes don't
occur.  In the lambda calculus we call this alpha renaming, and it's just a way
to keep things clean.

matthew fuchs
matt@wdi.disney.com

On May 23,  9:22am, W. Eliot Kimber wrote:
> Subject: Re: Semi-transparent Syntax Extensions (was Re: SD5 - Namespaces)
> At 01:17 AM 5/23/97 -0400, Arjun Ray wrote:
> >FWIW, I would prefer a way to indicate namespaces via attribute trickery,
> >because down the road I can see somebody discovering the need to
> >accomodate name-sharing across name-spaces and thus a way to specify more
> >than one name-space as "simultaneously active". The CONCUR syntax allows
> >this, as does Eliot's suggestion to use architectures (if I've understood
> >that correctly), but a construction like 'name-space:gi' doesn't.
>
> You understand it correctly.  Each architecture provides it's own attribute
> for naming the form from which the element is derived.  Thus an element can
> be derived from multiple forms at once.  In addition, any architecture may
> itself be derived from other architectures, giving you a derivation
hierarchy.
>
> Cheers,
>
> Eliot
>
>-- End of excerpt from W. Eliot Kimber



-- 



