docno="lists-056-12151685"
received="Fri May 23 21:02:08 1997"
isoreceived="19970524010208"
sent="Fri, 23 May 1997 18:02:05 -0700"
isosent="19970524010205"
name="Andrew Layman"
email="andrewl@microsoft.com"
subject="RE: Semi-transparent Syntax Extensions (was Re: SD5 - Namespaces)"
id="7BB61B44F197D011892800805FD4F792A4BFFF@RED-03-MSG.dns.microsoft.com"
inreplyto="Semi-transparent Syntax Extensions (was Re: SD5 - Namespaces)"
expires="-1"


To:"'Matthew Fuchs'"<matt@wdi.disney.com>,"W. Eliot Kimber"<eliot@isogen.com>,w3c-sgml-wg@w3.org

Yes!

--Andrew Layman
   AndrewL@microsoft.com

> -----Original Message-----
> From:Matthew Fuchs [SMTP:matt@wdi.disney.com]
> Sent:Friday, May 23, 1997 5:23 PM
> To:W. Eliot Kimber; w3c-sgml-wg@w3.org
> Subject:Re: Semi-transparent Syntax Extensions (was Re: SD5 -
> Namespaces)
> 
> After much discussion, I think namespaces and architectural forms
> address
> different, but related problems.  I would say the namespace issue is
> almost
> purely syntactic, and the architecture issue is more semantic.  The
> namespace
> problem is this:
> 
> there are people out in the world using ascii strings to describe
> things.
>  sometime they use the same names.  if we want to borrow them into a
> document,
> we need to make sure the names don't clash.
> 
> Architectures don't deal with this because nothing prevents two people
> using
> the same name for different architectures.  Namespaces just gives a
> way for all
> these ascii strings to be renamed in a consistent way so these clashes
> don't
> occur.  In the lambda calculus we call this alpha renaming, and it's
> just a way
> to keep things clean.
> 
> matthew fuchs
> matt@wdi.disney.com
> 
> On May 23,  9:22am, W. Eliot Kimber wrote:
> > Subject: Re: Semi-transparent Syntax Extensions (was Re: SD5 -
> Namespaces)
> > At 01:17 AM 5/23/97 -0400, Arjun Ray wrote:
> > >FWIW, I would prefer a way to indicate namespaces via attribute
> trickery,
> > >because down the road I can see somebody discovering the need to
> > >accomodate name-sharing across name-spaces and thus a way to
> specify more
> > >than one name-space as "simultaneously active". The CONCUR syntax
> allows
> > >this, as does Eliot's suggestion to use architectures (if I've
> understood
> > >that correctly), but a construction like 'name-space:gi' doesn't.
> >
> > You understand it correctly.  Each architecture provides it's own
> attribute
> > for naming the form from which the element is derived.  Thus an
> element can
> > be derived from multiple forms at once.  In addition, any
> architecture may
> > itself be derived from other architectures, giving you a derivation
> hierarchy.
> >
> > Cheers,
> >
> > Eliot
> >
> >-- End of excerpt from W. Eliot Kimber
> 
> 
> 
> -- 



