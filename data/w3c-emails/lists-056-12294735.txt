docno="lists-056-12294735"
received="Sat May 24 07:10:45 1997"
isoreceived="19970524111045"
sent="Sat, 24 May 1997 13:10:06 -0700"
isosent="19970524201006"
name="Tim Bray"
email="tbray@textuality.com"
subject="Re: On constraining/validating datatypes"
id="3.0.32.19970523185748.00c71da8@pop.intergate.bc.ca"
charset="us-ascii"
inreplyto="On constraining/validating datatypes"
expires="-1"


To:w3c-sgml-wg@w3.org

Steve's analysis is sensible and I agree with most of it.

It is totally undeniable that a general typing mechanism, whether
based on regex or hylex or whatever, gives a degree of flexibility
and fine control that is unbeatable.

My SQL proposal offers only two bits of added functionality:
 - the MIN and MAX values that can be used to constrain data ranges, and
 - the fact that the DATE and TIME values carry validation
   semantics that cannot reasonably be expressed in regexps, yet
   are not that hard to implement and are generally implemented by 
   library functions all over the place.

My analysis based only on personal experience is that what people
really de facto want out there in the MIS world is those few basic
SQL types; thus if we got a general-purpose regexp-based facility, I
would go ahead and package up a set of pre-cooked forumlations that
would give people those SQL types.  I expect that's what people would
use mostly... which makes me wonder where the regexp solution sits
on the cost-benefit curve.

There is one other problem, I have no idea how serious it is, but
it needs to be addressed: the implementation of general pattern-based
typing in the wide-character environment.  Naive implementations of
automata for regexps become nonviable when the table has to have
64k columns.  Doable, of course, but...

From my point of view, I *know* that there are some people who 
need those SQL types, and I know validators for them are no sweat -
from here they look like another one of the 80/20 points we seem
to have had some success in hitting.

On the other hand, it seems pretty obvious that if there was
a general pattern-based typing facility, it would find lots of
uses - I know I'd use it.   Don't know if I'd be able to
build it, though. 

One point - count me as one vote *against* wiring this into either
XML-lang or WG8, and *for* doing it in a separate doc, using
vanilla attribute/notation mechanisms, for now.  That way everybody
gets to use it now, and people who don't care don't have to
build the machinery into the parser... let's try and defend
that grad-student-week, it's one of our proudest achievements. -Tim



