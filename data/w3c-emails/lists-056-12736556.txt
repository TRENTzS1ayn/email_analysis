docno="lists-056-12736556"
received="Wed May 28 19:12:31 1997"
isoreceived="19970528231231"
sent="Wed, 28 May 1997 23:52:54 GMT"
isosent="19970528235254"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Re: Parameter entity references in WF docs"
id="7329@ursus.demon.co.uk"
inreplyto="Parameter entity references in WF docs"
expires="-1"


To:w3c-sgml-wg@w3.org

In message <3.0.32.19970528122303.00687acc@pophost.arbortext.com> Paul Grosso writes:
> At 09:19 1997 05 28 -0700, Tim Bray wrote:
> >I'm now putting PE reference handling in Lark, and it's turning into
> >quite a lot of code - since these things are just for DTD's, and Lark
> >is nonvalidating anyhow, I'm wondering if the extra processing and code

I agree with these aspects of PEs, and also question the effort involved
in getting the spec right - so that it can be implemented by someone
who has never seen SGML.   Recursively expanded PEs seem to be a major
potential source of pitfalls, especially some of the tricky examples
that we have seen.  

> >size required are in the spirit of XML, particularly for lightweight
> >standalone processing.  It seems like PE's are largely in the spec to
> >support authoring-end activities.

As a DTD author I am prepared to give up PEs within them :-)  After all,
for a simple DTD it is not a lot of trouble to do without them and for
a complex DTD it can be developed with full SGML tools and expanded.

> >
> >Would it be reasonable to think about saying either that
> >(a) PErefs should not be used in the internal DTD subset, or
> >(b) PErefs should not be used in WF docs?
or
   (c) Should not be used at all.  Too difficult and error-prone.

These half way houses may cause confusion and give the impression that
there are multiple conformance levels.  In practice we have validating
and non-validating parsers at present and perhaps that's the only level
we should choose.  [We shall continue to throw up new questions about WF docs
at regular intervals anyway.]


> 
> I, for one, am getting the uneasy feeling that XML is starting to
> suffer from "over-indulging":  it's putting on too much weight.

Well, the discussion over namespaces, links, etc has gone into rocket
science territory again, and I for one wish to emphasise recursively
that all the XML-* modules should be MythicalCSG-implementable.  Given
good APIs, however, it would seem that some of this is parallelisable -
person X writes a parser, Y writes XML-TYPE processor, Z writes XML-LINK
and so on.

P.

-- 
Peter Murray-Rust, domestic net connection
Virtual School of Molecular Sciences
http://www.vsms.nottingham.ac.uk/



