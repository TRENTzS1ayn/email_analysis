docno="lists-056-12959950"
received="Sat May 31 07:49:06 1997"
isoreceived="19970531114906"
sent="Sat, 31 May 1997 13:50:48 +0200"
isosent="19970531115048"
name="Norbert H. MIKULA"
email="e_nmiku@utila.ifi.uni-klu.ac.at"
subject="Re: Parameter entity references in WF docs"
id="33901097.226346A5@utila.ifi.uni-klu.ac.at"
charset="us-ascii"
inreplyto="3.0.32.19970528091809.00a2fd50&#64;pop.intergate.bc.ca"
expires="-1"


To:w3c-sgml-wg@w3.org
CC: Tim Bray<tbray@textuality.com>

Tim Bray wrote:
> I'm now putting PE reference handling in Lark, and it's turning into
> quite a lot of code - since these things are just for DTD's, and Lark
> is nonvalidating anyhow, I'm wondering if the extra processing and code
> size required are in the spirit of XML, particularly for lightweight
> standalone processing.  It seems like PE's are largely in the spec to
> support authoring-end activities.
> 
> Would it be reasonable to think about saying either that
> (a) PErefs should not be used in the internal DTD subset, or
> (b) PErefs should not be used in WF docs?

As the author of NXP, or in general from the perspective
of a software developer, I must say : I write software 
after a spec. * give me a spec. * PEReferences or not,
let's make a decision and stick to it. I can only warn 
everybody. I believe, if after the next draft, this issue
pops up again people will become angry. This issue seems to 
reappear every once in a while, but I see no progress in making
decisions. How many applications of XML as per the draft do we have ?
The reason, I believe, is that  there is a resistance to 
approach full conformance because there is not enough 
certainty. The market is waiting, question is how long it will 
wait until we end up with one XML interpretation per company. 

But since I am not only software developer I want 
to contribute my share to the overall confusion. I would 
say : PEReferences will be needed for certain applications.
Please let's specify how to use them *if* people need it.
If they don't need it, fine. If they need it, for instance
for maintaining complex DTDs etc., then their users will need 
more complex software (e.g. a validating XML parsers).

Most of the users of NXP, that I have been talking to 
so far, don't need validation, for instance. Some of them 
do however. The same goes for PEReferences. (Otherwise
I wouldn't have invested the time for implementing them.)
 
Maybe it is a question if we want a "one size fits all" solution
or having layers of complexity and conformance. Since we have
a distinction between WF and valid, we have already layers, I believe.
Thus we could use only the basics for WF and add more complexity
for validty. For many (most) XML applications WF will probably be
enough.
However, I wouldn't like it if I have to move to (costly) SGML just
because I want to keep my DTD reasonably maintainable (I am saying
this because, I believe, somebody suggested dropping them at all).

I personally would say, that we could rule that a parser that
needs/wants to check for WF only, doesn't need to process PEReferences.
It doesn't really need to process the DTD anyway.

-- 
Best regards,
Norbert H. Mikula

=====================================================
= SGML, DSSSL, Intra- & Internet, AI, Java 
=====================================================
= mailto:nmikula@edu.uni-klu.ac.at 
= http://www.edu.uni-klu.ac.at/~nmikula
=====================================================



