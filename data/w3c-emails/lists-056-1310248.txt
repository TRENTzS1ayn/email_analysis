docno="lists-056-1310248"
received="Thu Jun 19 22:36:37 1997"
isoreceived="19970620023637"
sent="Thu, 19 Jun 1997 22:37:30 -0400"
isosent="19970620023730"
name="Eve L. Maler"
email="elm@arbortext.com"
subject="Re: Parameter entities vs. GI name groups"
id="3.0.32.19970619223729.00affe80@village.doctools.com"
charset="us-ascii"
inreplyto="Parameter entities vs. GI name groups"
expires="-1"


To:w3c-sgml-wg@w3.org

I'm getting one of those "Only Nixon could go to China" feelings: Me?
Defending the removal of parameter entities?

You're right; GI name groups in ELEMENT declarations only accomplish making
the content identical.  And, actually, for some of the namespace-like DTD
munging that I can imagine, what you'll really want is a parameter entity
for the name group, so that you can easily extend the set of elements that
act like some stock element that has stock Java (or whatever) support:

<!ELEMENT (%lists;) ...>

But until we get experience with how people are going to use DTDs and
partial DTDs with real XML delivery, I'm willing to give up the possibility
of complex DTDs that are 100% XML-compliant, especially since (as I
outlined in my recent posting) you need to adhere to a much a smaller set
of constraints if you're willing to send only partial DTDs with your
instances.

I'm not generally in favor of having to add a transformation step.  But
since you *need* full XML or SGML DTDs if you're doing validation, and you
probably *need* full SGML DTDs if you're working with existing SGML, and
you probably want to *avoid* sending irrelevant bits over the wire, I think
many DTDs will have to be "trimmed" anyway.  (There was already a c.t.s
posting asking for this kind of tool, though the trimming requested was
slightly different.)  The XML language for DTDs is already light-years
ahead of what the web already has, so I can see a reason for going slowly
and getting some experience first.

Eve

At 10:16 PM 6/19/97 -0400, Deborah Aleyne Lapeyre wrote:
>Eve wrote (numbers added):
>> Many of the uses of parameter entities that new DTD writers and simple
>> DTDs are likely to want can be replaced by GI name groups:
>         1) synchronizingthe content models
>         2) attribute lists of elements
>
>No argument on "2", given multiple attlists for one element.
>
>However, "synchronizing content models" rarely means something a simple as
>"the content model is the same as".  In my experience, it more usually
>means,"a part of this model that is the same as a part of that model will
>be the same, e.g. all the paragraph-level objects will be the same for
>sections, chapters, and sidebars".  This is true even for very very simple
>DTDs.  GI name groups do not help.
>
>-dal



