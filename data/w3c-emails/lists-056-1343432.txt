docno="lists-056-1343432"
received="Fri Jun 20 00:42:08 1997"
isoreceived="19970620044208"
sent="Thu, 19 Jun 1997 21:25:09 -0700"
isosent="19970620042509"
name="Terry Allen"
email="tallen@sonic.net"
subject="Re: Parameter entities vs. GI name groups"
id="199706200425.VAA05180@bolt.sonic.net"
inreplyto="Parameter entities vs. GI name groups"
expires="-1"


To:elm@arbortext.com,w3c-sgml-wg@w3.org

Eve writes:
>But until we get experience with how people are going to use DTDs and
partial DTDs with real XML delivery, I'm willing to give up the possibility
of complex DTDs that are 100% XML-compliant, especially since (as I
outlined in my recent posting) you need to adhere to a much a smaller set
of constraints if you're willing to send only partial DTDs with your
instances.

I class "until we get experience with" along with "most XML documents
will be small/large" and "there will be many processors".  These
are appeals to the future to justify judgements that could be made
on the basis of past experience.

But the only reason I dispute this point with Eve (with whom I
am jointly responsible for a DTD now highly parameterized due
to her efforts) is that I doubt that we understand what it might
mean to deal with partial DTDs.  ISO 8879 doesn't envision the
case where the infernal subset is parsed but not the external
subset; yet that seems to be contemplated in XML.
                                                        
How d'you'all figure this is gonna work?  Does the SGML ERB
have a shared view of this?  if so, would you share it with the WG?

Also, if XML can't handle complexity, doesn't scale, how can we
recommend it as a solution to clients?  I have recently contemplated
requirements for several commercial applications more complex than
Docbook or TEI; these are utterly impracticable without parameter
entities.

So far, in this forum, we have been told variously (in response
to various statements of requirements) that we should use PDF
or Postscript or HTML.  Now we're being told that instead of 
XML we should use SGML.  I thought that was the point to begin
with.  

Executive summary:  parameter entities are a dividing line,
watershed, shibboleth.  Dump them and you go one way, retain
them and you go another.  Whatever gets deployed we will cope
with; that's our business; if you want to make XML cheap you
need to make it capable of standing on its own without an
SGML shop behind the curtain.

Regards,
  Terry Allen    Electronic Publishing Consultant    tallen[at]sonic.net
                   http://www.sonic.net/~tallen/
    Davenport and DocBook:  http://www.ora.com/davenport/index.html
          T.A. at Passage Systems:  terry.allen[at]passage.com 



