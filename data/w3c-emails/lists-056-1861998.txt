docno="lists-056-1861998"
received="Fri Jun 20 22:11:31 1997"
isoreceived="19970621021131"
sent="Fri, 20 Jun 1997 21:11:07 -0500"
isosent="19970621021107"
name="len bullard"
email="cbullard@hiwaay.net"
subject="Re: Parameter entities vs. GI name gro"
id="33AB383B.75D0@hiwaay.net"
charset="us-ascii"
inreplyto="33AA2927.526AAA76&#64;calum.csclub.uwaterloo.ca"
expires="-1"


To:w3c-sgml-wg@w3.org

Paul Prescod wrote:
> 
> David Durand wrote:
> >    I think losing PEs is losing a very great deal, but simplifying them might
> > be a practical necessity. I can't address the politics of this, but consider
> > that wihtout PEs some very important DTDs are going to be _very_ hard to wedge
> > into XML.
> 
> I think that in a real sense, killing parameter entities would be
> killing DTDs in XML. Even a DTD as  (relatively) simple as HTML uses
> parameter entities for:
> 
> * "element classes" (e.g. %lists; , %headings; )

They are not that.  That is what some (including me) have 
wished them to be.  They are macro string substitution.

> * data types

How so? 

> * content models

Yes.  But only to minimize the length of a string.  I agree, 
to the human eye they look like a content model, but they 
are not.  What they do is hide structures that are very long 
and might be better broken with different roots, eg. separate 
doctypes or even OR groups.  The OR group solution works but it is 
messy (switch elements are ugly; OTH, they sometimes are 
a place to hide a space separator). 

> * marked sections

The one place they make the most sense.  I try to avoid 
marked sections.
 
> I have never written a DTD that did not use them. I believe that when
> they are used well they help readability as much as reusability.

Readability?  Well, Paul, this is the number one complaint I get 
about the DTDs that use them:  unreadable to begin with, and to 
many, scary.  Now, I come from the school that was defending SGML 
when the only thing one heard (about 12 years ago) was that "oooh, 
that's too hard".  So I am not beyond a little complexity.  All 
I say is, wait.

> Now we are proposing to cripple them to the point of near uselessness.

You are a smart man, but you are overstating the case.  DTDs are very 
useful with or without parameter entities.  Any DTD you write with them, 
you can write without them.  It is a matter of convenience to have them, 
not necessity.
 
> Aa David says, we can simplify them if necessary, but lets not throw the
> baby out with the bathwater.

The baby is the DTD not the PE.  The DTD won't die without them.  OTH,
I've 
no objection to having them (they aren't hard to use, just aggravating
when one 
has to figure out what the heck is reaalllly in the content model).  I 
look at them as a feature we can live without in XML 1.0.  Between that 
and the next phase of development, we hammer out an explanation that 
is not too hard to read, and people get a taste of building DTDs Suzuki
style.

len



