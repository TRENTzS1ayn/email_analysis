docno="lists-056-1895772"
received="Sat Jun 21 01:19:06 1997"
isoreceived="19970621051906"
sent="Sat, 21 Jun 1997 01:19:15 -0400"
isosent="19970621051915"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: Parameter entities vs. GI name gro"
id="33AB6453.3CD2AB5D@calum.csclub.uwaterloo.ca"
charset="us-ascii"
inreplyto="33AB383B.75D0&#64;hiwaay.net"
expires="-1"


To:w3c-sgml-wg@w3.org

len bullard wrote:
> > * "element classes" (e.g. %lists; , %headings; )
> 
> They are not that.  That is what some (including me) have
> wished them to be.  They are macro string substitution.

If thinking of them as element classes helps you (an application
community) to organize your thoughts, I say "great." That is typically
what macro replacement is *for* -- organizing your (collective)
thoughts. 
 
> > * data types
> 
> How so?

%URL;
%boolean;

Once again this is organizational, not semantic at an interoperable
level.
 
> The baby is the DTD not the PE.  The DTD won't die without them.  OTH,
> I've
> no objection to having them (they aren't hard to use, just aggravating
> when one
> has to figure out what the heck is reaalllly in the content model).  

I feel quite the opposite. When I see something like the content model
below, I ask: "what is reaalllly the content model?" And I go to the
version with parameter entities:

<!ELEMENT sic - - ((((l | lg | p | sp), (((bibl | biblFull | l | lg |
p | sp | cit | q | label | list | listBibl | note | stage))*)) |
((#PCDATA | ident | code | kw | abbr | address | date | name | num |
rs | time | add | corr | del | gap | orig | reg | sic | unclear | emph
| foreign | gloss | hi | mentioned | soCalled | term | title | ptr |
ref | xptr | xref | anchor | s | seg | gi | formula | eg | bibl |
biblFull | cit | q | label | list | listBibl | note | figure | stage |
table | text)*)))>

Now maybe this content model would have been designed differently for a
language without parameter entities, but without minimization you can't
introduce many "wrapper" elements without inducing carpal tunnel
syndrome.

> I
> look at them as a feature we can live without in XML 1.0.  Between that
> and the next phase of development, we hammer out an explanation that
> is not too hard to read, and people get a taste of building DTDs Suzuki
> style.

Who is "people"? What about us? Why should DocBook, TEI users (and
everyone else in the SGML community....) have to sit out the first
season of XML development and use it as a "dumb down-translation" target
when they could be building these "cheaper", "simpler", "web-enabled"
systems that XML is supposed to bring about. I'm also not confident that
SGML people will still have control next season. There is no guarantee
that common sense or market requests will drive future developments of
XML. Cripes, HTML didn't get around to adding any kind of reliable text
transclusion or text reuse mechanism despite years of begging.

 Paul Prescod



