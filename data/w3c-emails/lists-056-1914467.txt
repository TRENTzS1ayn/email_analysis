docno="lists-056-1914467"
received="Sat Jun 21 01:26:09 1997"
isoreceived="19970621052609"
sent="Sat, 21 Jun 1997 13:57:41 +1000"
isosent="19970621035741"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="Re: Namespaces, the universe, and everything"
id="199706210456.OAA27248@jawa.chilli.net.au"
charset="ISO-8859-1"
inreplyto="Namespaces, the universe, and everything"
expires="-1"


To:<w3c-sgml-wg@w3.org>

> From: Arjun Ray <aray@q2.net>

> > * tagged using "formal marked sections".
> 
> I like that name:-) Perhaps this can be argued as a natural direction in
> which to extend MS syntax. CDATA/RCDATA MSs basically warn the parser that
> normal parsing rules don't apply, in particular that what may look like
> tags really aren't. OK, so extend that notion to offer some form of
> lexical scoping: what look like tags aren't tags for the "current"
> validation/parsing context -- refer to some NOTATION declaration instead,
> etc. etc. That is, generalize "status keyword specification" to something
> like "context treatment specification".

WG8 is ahead of you!  (Why is W3C so slow??? :-) Both "formal marked sections" and "formal processing  instructions" were in the
drafts for the WebSGML TC.  The idea is just what you say: that they both should start with NOTATION identifiers.  

They were taken out at the last minute, I think because  WG8 did not sense any groundswell of understanding or support for them at
that stage, and did not want the WebSGML TC to be  derailed.    If you want some details, see 
   http://www.ornl.gov/sgml/wg8/document/1925.htm
under "Extension to FORMAL".

I hope that they may be considered as part of the Namespace TC that we are working on now.  And I hope that XML will adopt the
formal PI proposal anyway. All XML needs to say is "The first token in a processing instruction is a notation identifier, which
should be unique to avoid name clashes".

Everything must be labelled with its type/notation.  If a thing cannot self-label, the things that link to it must be able to
label. And this includes external entities/resources, prolog entities/resources, and inline entities/resources.  


Rick Jelliffe



