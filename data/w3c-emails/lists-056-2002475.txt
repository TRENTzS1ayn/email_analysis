docno="lists-056-2002475"
received="Sat Jun 21 20:09:25 1997"
isoreceived="19970622000925"
sent="Sat, 21 Jun 1997 17:08:52 -0700"
isosent="19970622000852"
name="Jon Bosak"
email="Jon.Bosak@Eng.Sun.COM"
subject="Fwd: HDML DTD"
id="199706220008.RAA02703@boethius.eng.sun.com"
expires="-1"


To:w3c-sgml-wg@w3.org

The following message from Tim Hyland contains a proposed DTD for the
Handheld Device Markup Language.  I offered to copy it to this group
to give the DTD gurus among you a chance to comment on it.  Please
send any comments or suggestions regarding this to Peter King
(king@uplanet.com).  DO NOT SEND YOUR COMMENTS OR SUGGESTIONS ABOUT
HDML TO THE W3C-SGML-WG LIST.

Jon

========================================================================

[Tim Hyland:]

This DTD was written as an experiment of one of engineers wanting to
familiarize himself with SGML.  Beyond that, there have been no
attempts to make it consistent with XML or HDML.  It is a rough, first
pass.  Two areas of questions we have are:

 * HDML's use of variables.  HDML has a model where the user agent
   can dynamically perform in-line variable substitution in both 
   the content (formatted text) as well as the markup (option-values).
   Is there a way to express this that is consistent with XML?

 * XML linking.  Is it possible to describe HDML's linking syntax/
   semantics given the XML linking specification? 

Please copy Peter King (king@uplanet.com) on any replies, questions,
comments.  Peter is responsible for architecture at Unwired Planet.
Thank you again.

-- Tim

Tim Hyland
Product Manager              E-mail:  hyland@uplanet.com
Unwired Planet               Phone:   +1.415.596.5289


--Attached preliminary DTD for HDML--

<!DOCTYPE hdml [

<!ELEMENT hdml- - (action*, (nodisplay | display | choice | entry)+)>
<!ATTLIST hdml
        versionNMTOKEN#IMPLIED -- HDML version --
        ttlNUMBER#IMPLIED -- time to live in seconds --
        deckseqNUMBER#IMPLIED
        accessdomainCDATA#IMPLIED
        accesspathCDATA#IMPLIED
        public(true | false)false
        markable(true | false)false
>

<!ELEMENT nodisplay- - (action*)>
<!ATTLIST nodisplay
        nameNMTOKEN#IMPLIED -- card name --
        markable(true | false)false
>

<!ELEMENT display- - (action*, text*)>
<!ATTLIST display
        nameNMTOKEN#IMPLIED -- card name --
        markable(true | false)false
>

<!ELEMENT choice- - (action*, text*, ce*)>
<!ATTLIST choice
        nameNMTOKEN#IMPLIED -- card name --
        markable(true | false)false
keyNMTOKEN #IMPLIED
defaultNMTOKEN #IMPLIED
ikeyNMTOKEN #IMPLIED
idefaultNUMBER#IMPLIED
>

<!ELEMENT entry- - (action*, text*)>
<!ATTLIST entry
        nameNMTOKEN#IMPLIED -- card name --
        markable(true | false)false
keyNMTOKEN #IMPLIED
defaultNMTOKEN #IMPLIED
methodNMTOKEN #IMPLIED
noecho(true | false ) false
>

<!ELEMENT action- O (#PCDATA)>
<!ATTLIST action
        typeNMTOKEN#REQUIRED -- action type --
        taskNMTOKENgo
        destCDATA   #IMPLIED -- destination URL --
        varsCDATA   #IMPLIED
        receiveCDATA   #IMPLIED
        retvalsCDATA   #IMPLIED
        labelCDATA   #IMPLIED -- label --
        nextCDATA   #IMPLIED
imageCDATA#IMPLIED
        sendrefererCDATA   #IMPLIED -- destination URL --
        goCDATA#IMPLIED -- depreciated --
>

<!ELEMENT ce- O (#PCDATA)>
<!ATTLIST ce
valueCDATA #IMPLIED
        taskNMTOKENgo
        destCDATA   #IMPLIED -- destination URL --
        varsCDATA   #IMPLIED
        receiveCDATA   #IMPLIED
        retvalsCDATA   #IMPLIED
        nextCDATA   #IMPLIED
        labelCDATA   #IMPLIED -- label --
        sendrefererCDATA   #IMPLIED -- destination URL --
        goCDATA#IMPLIED -- depreciated --
>

<!ELEMENT textO O (#PCDATA | BR | WRAP | LINE | TAB | IMG)*>
<!ELEMENT BRO O EMPTY>
<!ELEMENT WRAPO O EMPTY>
<!ELEMENT LINEO O EMPTY>
<!ELEMENT TABO O EMPTY>
<!ELEMENT imgO - EMPTY>
<!ATTLIST img
altCDATA #IMPLIED
srcCDATA #IMPLIED
>
]>



