docno="lists-056-2768887"
received="Fri Jun 27 15:29:20 1997"
isoreceived="19970627192920"
sent="Sat, 28 Jun 1997 05:29:59 +1000"
isosent="19970627192959"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="Re: IDs - make them case sensitive"
id="199706271928.FAA11863@jawa.chilli.net.au"
charset="ISO-8859-1"
inreplyto="IDs - make them case sensitive"
expires="-1"


To:<w3c-sgml-wg@w3.org>


 
> From: Tim Bray <tbray@textuality.com>
 
> No, we don't want a lexical model.  We want CDATA, but unique.  Which
> is not too much for XML.  But it's violently non-8879-conformant. 

Only if you call it an ID or IDREF.  An HREF has XML defined
properties, 
and there is nothing non-8879-esque about it.  You can define 
a pair of AFs called "XML-ID" and "XML-IDREF" for example, and scrap
ID and IDREF from XML DTDs.  There is nothing anti-8879-ish in doing
that
(though SGML Open people may get peturbed).

Would you allow spaces?  Would a newline be converted to a space like
a minimum literal?  If you have space you couldn't have lists of 
IDS and IDREFS unless you build in some kind of markup to cope, I
guess.  Do you want an xml-link specification to be able to be used
as an id?   That would be grotesque! 

An ID is currently an internal nickname for elements or entities.  
To me it seems sensible that it should have the same rule as 
a type identifier or an attribute value list value.  To me it is
a token, not a string, if you get my drift, and I have never had
any reason to wish for something else.  Not to say that others
mightn't have splendid tricks to play with CDATA-IDs, nor that
XML mightn't have more value with CDATA-IDs. 


Rick Jelliffe



