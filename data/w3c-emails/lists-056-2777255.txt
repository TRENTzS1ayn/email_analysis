docno="lists-056-2777255"
received="Fri Jun 27 15:33:15 1997"
isoreceived="19970627193315"
sent="Sat, 28 Jun 1997 05:33:51 +1000"
isosent="19970627193351"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="Re: Update on namespaces"
id="199706271932.FAA11913@jawa.chilli.net.au"
charset="ISO-8859-1"
inreplyto="Update on namespaces"
expires="-1"


To:<w3c-sgml-wg@w3.org>


> From: Matthew Fuchs <matt@wdi.disney.com>

> After thinking about it a bit, I thought that something like #OTHER
was also
> generally too loose, which is why my proposal on validation and
namespaces
> allowed you to specify which namespace to use.  After all, CML might
import
> several different namespaces, but at some particular point you want
to specify
> there should be an equation here.  If you can designate the namespace
(i.e.,
> <!ELEMENT html ( head, (body | frameset | layer | MATH:: ), tail )
>), you can
> ensure that.

I had been thinking of that too, however it seems to me that if you
already know that you want to allow some element types from NAME::, you
already have a good idea of which ones you want to allow, so you are
not in fact getting in extra functionality, just some sugar.  After
all, you probably just want:

<!ELEMENT html (head (body|frameset|layer|MATH::eqn|MATH::inlinef),
tail)>

which is why MATH:: or  MATH::#ANY  (my preferred syntax for that) does
not serve as much use as it first seems. As Eve Maler's book suggests,
you get "information units" with element that do not serve much purpose
if take separately.  I think XML/SGML should seek to support arbitrary
inclusions of the top level elements of information units in
particular, which is what I think AndrewL might concur with.  

> However this looks reasonable as a simplification for the first
round.  The
> more general question of namespace architecture will take a lot more
> discussion, especially if it must also fit SGML.

If people like #OTHER, then I'll go ahead and propose it to WG8 as part
of their consideration for modules. 


Rick Jelliffe



