docno="lists-056-2927005"
received="Sat Jun 28 03:26:32 1997"
isoreceived="19970628072632"
sent="Sat, 28 Jun 1997 17:25:07 +1000"
isosent="19970628072507"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="Re: IDs - make them case sensitive"
id="199706280723.RAA27854@jawa.chilli.net.au"
charset="ISO-8859-1"
inreplyto="IDs - make them case sensitive"
expires="-1"


To:<w3c-sgml-wg@w3.org>,"W. Eliot Kimber"<eliot@isogen.com>


 
> From: W. Eliot Kimber <eliot@isogen.com>
 
> 
> <!DOCTYPE MyDoc [
>  <!ENTITY Clause6.2 SYSTEM
"http://www.drmacro.com/hythtml/clause6.2.html"
>    CDATA SGML >
> ]>
> <mydoc>
> <para>See <link refid="Clause6.2::clause-6.2.1">this clause</link>
for more
> about object representation in HyTime.
> </para>
> </mydoc>

I think  "entity::idref"  is a different type of thing to  
"namespace::name", and I'd prefer to see  "entity+idref", 
which I think was Martin's original delimiter.   

I think we can use "::" to mean a document-level namespace 
delimiter. In other words, FOO::BAR means that I have, 
notionally, imported an element set from somewhere and given 
it the prefix FOO for unique-izing names. The document has 
several namespaces, FOO is one of them.
 
The "+" is an inter-document namespace delimiter. So JANES+SUBS
would mean in the document with entity name JANES, the ID SUBS. 

If we make these type of conventions now (in particular the "::"
namespace::name delimiter) it will give people a lot to go with.  

I don't think we need the "+" form in XML because
<link  refid="xxx+zzz"  />
we can already do with
<link   href="&xxx;#zzz" />

> Note that in HyTime (and DSSSL), name-space addressing is generalized
such
> that you can do indirect addressing of names in any name space in any
> grove. To address db-name names indirectly in HyTime I would use the
> "name-space location address"
> (www.drmacro.com/hythtml/clause-7.3.html#clause-7.9.3) element form
like so:
> 
> <nmsploc id=part-102345-ABC namespace="db-names">102345-ABC</>
 
Nice.  


Rick Jelliffe



