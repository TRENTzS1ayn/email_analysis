docno="lists-056-4476193"
received="Mon Mar 10 12:46:57 1997"
isoreceived="19970310174657"
sent="Mon, 10 Mar 1997 12:48:02 -0500"
isosent="19970310174802"
name="David Durand"
email="dgd@cs.bu.edu"
subject="Re: 3.1 b-h: BEHAVIOR"
id="v03007806af49f79fdb4d@[128.148.19.149]"
charset="us-ascii"
inreplyto="331DCDE4.2389&#64;hiwaay.net"
expires="-1"


To:w3c-sgml-wg@w3.org

At 1:47 PM -0600 3/5/97, Len Bullard wrote:
>Christopher R. Maden wrote:
>> I prefer to think of XML as the language for the database itself.  XML
>> is a markup language - that which is being marked up is data.  An
>> application could certainly use XML to mark up its specifications, but
>> just because the same language can be used does not mean information
>> should be stored in the same place.
>
>Ok, and understood.  I consider that position a religious one.
>
>Markup of data vs markup of text that an interpreter treats
>as instructions are still just markup.  XML should neither prefer
>not prevent either.  Too many designers find it useful or
>convenient to markup processes (e.g, action=) and include
>behavioral specifications for it to be disregarded by the
>WG for purely religious orientations.  Separate church and *state*.

And they can always mark that. Should we provide special support for
non-reusable documents? I don't think so. people will do (what they
believe) they have to do without our help. We know some things about good
practice, so we should support that, while not encouraging bad practice.

>> The data - textual content, metadata, and relationships between
>> infoquanta - should be contained in the XML document.
>
>Yes.  But relationships are either passive records or active
>structures.  They have a clickable interface or they don't.
NO. My web mapper has no "clickable interface elements" that correcpond to
links, but it does treat many things as "passive structures". This false
dichotomy is what we need not encourage. Call it religion if you want. I
think we are all aware that good design has aspects of art as well as
engineering craft. Given the many concrete advantages however, I think it's
much less religious an issue than you make out.

>If the stylesheet is used to tell the system that an <a is
>a hotspot, why bother with XML Link at all?  When does the
>division bell ring on that debate?  As soon as the context
>link is added, process is added to a document.

What does this mean? You declare it's a link so you can do something
_other_ than render it. If you just need to render you don't need a linking
syntax at all, just a goto operation in your stylesheet. We can reinvent
hypercard any time -- but we don't _need_ to. People can reinvent it on
their own if they want to throw their data away in a few years.

>> Suggested (or required) behavior should be stored separately.

>If there were a technical reason for that other than someone
>might prefer curly brackets over pointy brackets, it might
>be a good point.  But when I open an HTML file and see function
>calls in attributes values, a script tag full of curly brackets,
>etc., I think this religion is out of style, out of date,
>and out of time.  XML should be agnostic about that.

REUSE REUSE REUSE.

Not religion.



>> I should be able to
>> open the document in SoftQuad XenoMetaL Style Editor and turn off the
>> d*mn flashing bullets in front of every item in the Luddite Manifesto.
>
>Yes, well, depending on where you fall on the "author intention vs
>reader privilege" debates.

If we don't have reader privilege we also abandon handicapped access. I go
for reader privilege -- as if we could prevent it anyway.

>> If the transclusion of those bullets is hardcoded in the XML source, I
>> can't do that - unless I can override the suggested behavior in the
>> stylesheet, and if that's true, why not just use the stylesheet
>> always, since browsing will be sort of useless without it?
>
>Because there are times when to repurpose data, or simply to make it
>smaller, no stylesheet will exist.  Any tightly focused app such
>as CML, MID, etc. may not offer many style options, and even these,
>as with IADS, may be in a proprietary stylesheet format with a
>point and click interface because the application designer or the
>requirements
>specify that only the document is portable, archivable, etc.

And thus such data is (to the extent that it has such processing semantics)
not reusable. People can create that with raw XML; I see no reason to
encourage bad decisions in our linking spec.

>For these cases, as in HTML, it is convenient to indicate the
>behavior for active links.  A static relationship link is
>only a record of a relationship.  An active link (e.g, a
>hypertext link as common practice sees it) is a record and a
>control interface (clickable).  This is probably the piece
>that keeps bothering everyone.  While this can be achieved
>by indirection, it isn't the only way and in many cases,
>by empirical observation of existing systems, not always
>the best way.  Again, XML should be agnostic about that.

By saying nothing, we are agnostic -- but we don't have to encourage such
bad designs.

   -- David

_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



