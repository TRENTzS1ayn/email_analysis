docno="lists-056-5001068"
received="Fri Mar 14 12:12:33 1997"
isoreceived="19970314171233"
sent="Fri, 14 Mar 1997 09:13:30 -0800"
isosent="19970314171330"
name="Terry Allen"
email="tallen@sonic.net"
subject="Re Stylesheet association"
id="199703141713.JAA20390@bolt.sonic.net"
expires="-1"


To:w3c-sgml-wg@w3.org


Len Bullard wrote:
| > My point is exactly that an XML instance
| > without a style sheet, an applet that interprets the semantics of
| > the GIs, a DTD, or some other document that collects that and
| > similiar information is uninterpretable.  
| 
| I missed something here:  uninterpretable by what or whom, 
| summarized where, which packaging implications?  Are you saying 
| that because the stylesheet isn't used, that one can't know
| what the semantics are?   That will be the case.  If 

Yes.  I'm not thinking about simply constructing a grove, but
actually being able to use it (or even know what to do with it).

| object encapsulation, virtual interfaces, etc. are used, 
| you can't and that is exactly why some will prefer to do 
| this.  Inheriting the interface, not the implementation, 
| and hiding the implementation is key to distributing 
| objects without giving away code.  I guess what I am 

So far as I understand what you're saying, such an arrangement
would rely on the user already possessing some sofware that
encapsulates the semantics of the XML.  Is that right?  If so,
that software already has the information about what tags are
EMPTY.

| saying is, some people think the way to maintain 
| proprietary code is to encapsulate and deliver only 
| exposed information.  I think we shall see a lot 
| of applications where XML is just initialization 
| data and the stylesheets are irrelevant.

 [ ... ]

| > I am more concerned about packaging and delivery in general than
| > with <empty/>; I brought it up only to show that packaging and
| > delivery have implications for aspects of XML that have already
| > been decided - but could be reconsidered before everyone's feet
| > are set in concrete.  Now's the time.
| 
| Ok.  What implications?  I must be missing the point of this 
| in the mail avalanche.

It has been argued that XML instances must stand on their own,
hence the need for reserved attribute names; but when I look
at how XML will have to be packaged and delivered in all but
the simplest cases, it seems to me that there is always going
to be something else, be it a catalog, a style sheet, etc.
So design decisions made on the basis that XML instances must
stand on their own may have been ill considered.

Now one can argue that the simple case must be accomodated,
and that complexity is unwanted, hence complex cases must use
the syntax invented for the simple cases (which is where we're
at today).  If that point of view survives a serious consideration
of packaging and delivery, okay; but let's consider.

[To throw another log on the fire:  if XML is delivered as
MIME type "XML-version-number", or whatever the magic string
will be, is there any need for a PI that says the same thing
(XMLDecl, production 29)?  What's the need?]

case, 

Regards,
  Terry Allen    Electronic Publishing Consultant    tallen[at]sonic.net
       specializing in Web publishing, SGML, and the DocBook DTD 
                   http://www.sonic.net/~tallen/
  A Davenport Group Sponsor:  http://www.ora.com/davenport/index.html



