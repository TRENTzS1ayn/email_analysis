docno="lists-056-6300966"
received="Mon Mar 24 21:36:12 1997"
isoreceived="19970325023612"
sent="Tue, 25 Mar 1997 02:34:26 GMT"
isosent="19970325023426"
name="Gavin Nicol"
email="gtn@eps.inso.com"
subject="Re: ERB call on addressing"
id="199703250234.CAA16041@wiley.EBT.COM"
inreplyto="3.0.32.19970324173308.009d2af0&#64;pop.intergate.bc.ca"
expires="-1"


To:tbray@textuality.com
CC:w3c-sgml-wg@w3.org

>>Gavin says:
>>>    http://foo.com/foo.sgml;XML-PTR=ID(A27)?keyword=foo
>>And he's right: don't use # or ? to mean something special in URLS
>>when they already have meanings...
>
>Huh?  Read the RFC.  To be precise:
>
> ftp://ds.internic.net/internet-drafts/draft-fielding-url-syntax-03.txt
>
>In our proposal, we are using an interpretation of '#' and '?' that 
>is 100% consistent with it.

Sure, but tht doesn't mean that the RFC is entirely correct either.
One problem with RFC's is that they codify existing practise, which
is often not "the right thing". Also, RFC's are often vague because
they must encompass so much behaviour. 

>I think we ought to buy into the web dogma and treat the URL part
>of the URL as opaque; including whatever-they-are parameters.

It really boils down to whether you think the Xptr is addressing
something or not.

>What we're saying is that we provide *one* semantic, namely here's a URL
>and here's an Xptr, a resource and a subresource.  Whether or not we
>like it, the web has already laid down the law on the process model
>mechanics of '?' and '#' - see above.  We want the linkage semantics
>without the process model mechanics.  Since there's nothing like this
>now on the Web, new syntax seems the only way to go.

I have no problems with # and ?. I do not see how a query can name
a sub-resource though, or how you can query a resource addressed
using queries.

Using ";" is accepted practise, and provides the right semantics
for XML (addressing), is no harder, or very little harder for CGI
programmers to support, allows combined use with fragment specs
and queries. It also works in all browsers I've tested (we use
parameters in DynaWeb).

Neither proposal is inconsistent with the RFC, but your proposal 
is inconsistent with the semantics of Xptrs as addresses. So if we 
go with my proposal (which is still within the letter of the RFC)
we get clean semantic separation at no cost.



