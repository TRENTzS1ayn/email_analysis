docno="lists-056-6448425"
received="Tue Mar 25 17:09:10 1997"
isoreceived="19970325220910"
sent="Tue, 25 Mar 1997 16:53:21 -0500"
isosent="19970325215321"
name="David Durand"
email="dgd@cs.bu.edu"
subject="Re: ERB call on addressing"
id="v03007800af5df7fac9dc@[128.148.19.149]"
charset="us-ascii"
inreplyto="199703250234.CAA16041&#64;wiley.EBT.COM"
expires="-1"


To:w3c-sgml-wg@w3.org

At 2:34 AM +0000 3/25/97, Gavin Nicol wrote:
>>>Gavin says:
>>>>    http://foo.com/foo.sgml;XML-PTR=ID(A27)?keyword=foo
>>>And he's right: don't use # or ? to mean something special in URLS
>>>when they already have meanings...
>>
>>Huh?  Read the RFC.  To be precise:
>>
>> ftp://ds.internic.net/internet-drafts/draft-fielding-url-syntax-03.txt
>>
>>In our proposal, we are using an interpretation of '#' and '?' that
>>is 100% consistent with it.
>
>Sure, but tht doesn't mean that the RFC is entirely correct either.
>One problem with RFC's is that they codify existing practise, which
>is often not "the right thing". Also, RFC's are often vague because
>they must encompass so much behaviour.

This is a standards-track RFC. Assuming that it goes through, and that
looks quite likely, it will become definitional and will enshrine existing
practice. If you don't like existing practice, that is unfortunate, but
I've seen too muhc of the URL discussions already and do not believe that
anything much is going to change.

>>I think we ought to buy into the web dogma and treat the URL part
>>of the URL as opaque; including whatever-they-are parameters.
>
>It really boils down to whether you think the Xptr is addressing
>something or not.

If you can define the difference between adressing and querying you get a
prize! The prize is: 10 followup posts disagreeing with your definitions of
the terminology. A query string is just a separated part of the URL for the
benefit of the server, no more and no less. The server interprets it as it
sees fit. So this is a non-problem, from a client-side perspective a query
and a server-interpreted address are the same thing.

>>What we're saying is that we provide *one* semantic, namely here's a URL
>>and here's an Xptr, a resource and a subresource.  Whether or not we
>>like it, the web has already laid down the law on the process model
>>mechanics of '?' and '#' - see above.  We want the linkage semantics
>>without the process model mechanics.  Since there's nothing like this
>>now on the Web, new syntax seems the only way to go.
>
>I have no problems with # and ?. I do not see how a query can name
>a sub-resource though, or how you can query a resource addressed
>using queries.
>
>Using ";" is accepted practise, and provides the right semantics
>for XML (addressing), is no harder, or very little harder for CGI
>programmers to support, allows combined use with fragment specs
>and queries. It also works in all browsers I've tested (we use
>parameters in DynaWeb).

It works with almost no servers. The browser is not the problem here, the
server is. CGI provides no special support for parameters, and they are
_not_ widespread practice. And, as Tim pointed out, they are not special
anymore, according the the RFC.

>Neither proposal is inconsistent with the RFC, but your proposal
>is inconsistent with the semantics of Xptrs as addresses. So if we
>go with my proposal (which is still within the letter of the RFC)
>we get clean semantic separation at no cost.

The semantic separation you advocate is not well-formed. I doubt you would
get any agreement on what the difference between "query" and "address" are
in most subsets of this group. Some would even deny that there is a
distinction.

  -- David

PS. For example, HyTime is founded on ignoring this distinction (if it is a
distinction, which I don't believe).

_________________________________________
David Durand              dgd@cs.bu.edu  \  david@dynamicDiagrams.com
Boston University Computer Science        \  Sr. Analyst
http://www.cs.bu.edu/students/grads/dgd/   \  Dynamic Diagrams
--------------------------------------------\  http://dynamicDiagrams.com/
MAPA: mapping for the WWW                    \__________________________



