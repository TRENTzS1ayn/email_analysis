docno="lists-056-6836721"
received="Wed Mar 26 20:21:34 1997"
isoreceived="19970327012134"
sent="Wed, 26 Mar 1997 17:21:06 -0800 (PST)"
isosent="19970327012106"
name="altheim"
email="Murray.Altheim@Eng.Sun.COM"
subject="Re: XML Conformance Levels [Was: ERB Decisions of March 26th]"
id="libSDtMail.9703261721.8854.altheim@mehitabel/jurassic"
charset="us-ascii"
inreplyto="XML Conformance Levels [Was: ERB Decisions of March 26th]"
expires="-1"

To:bosak@atlantic-83.Eng.Sun.COM
Cc:w3c-sgml-wg@w3.org


Jon writes:
> [Murray Altheim:]
> 
> | BTW, on talking with Bill Smith about the variance in needs between people
> | like Tim and Eliot's needs, what's the likelihood of defining conformance
> | levels for XML? This would allow a lightwight app to have, for example:
> | 
> |    XML-CORE:  Level 1 (core of XML)
> |    XML-LINK:  Level 1 (basic linking ala HTML)
> |    XML-STYLE: Level 0 (no stylesheets)
> [etc.]
> 
> One of the most basic design principles for this whole effort has
> been: Thou Shalt Have No Optional Features.  We're implicitly allowing
> for very large-scale optionality by dividing the spec into three parts
> (xml-lang, xml-link, and xml-style), because it's obvious that there
> will be database exchange applications that only need xml-lang, for
> example, and Java-based approaches like CML that will use xml-lang and
> xml-link but not xml-style.  I would powerfully resist any effort to
> get more granular than that.  The lack of options in XML is one of the
> very best things about it.

I agree in principle, but not necessarily in practice.

It's kinda the point I was making: that the difference in needs/desires
within the working group is what's causing some of its fractionalization,
and a lot of down-the-middle splits on decisions in the ERB, at least
from what I can see.

IOW, the ol' SGML-- vs. HTML++ split.

On the one hand are people like Tim and Bill, who want XML to be as
lightweight as possible and don't particularly care that XML is an
SGML application, to others (we could just look at the ERB voting)
who would like XML to have much of the functionality of SGML minus
the dross and arcanity, and Web-enabled. TEI-level links, PUBLIC,
AFs, etc.

There will be both college students and Microsoft teams developing
XML tools, and both have the traditional advantages: I would hope
that the Big Corporate XML tools would be full-featured and support
*everything*, while the college student freeware versions come out
first and are cheap (or free). Conformance levels allow diversity 
in levels of effort for development.

XML is either a little spec or a big spec. We can't have grand 
functionality without the little spec becoming the big spec. Having
conformance levels allows developers to enter the market at the level
they are capable of developing for/supporting. For example, I can 
imagine my little HyperCard editor becoming an XML editor, but not
at the TEI linking level. So are my options to have no linking at all?

Minus conformance levels, the only option is to either have linking
or no linking at all, entity declarations or none at all, stylesheets
or none at all, etc. and I feel this is a barrier to both development of 
the spec and probably applications as well.

Murray

...........................................................................
Murray Altheim, SGML Grease Monkey                    <altheim@eng.sun.com>
Member of Technical Staff, Tools Development & Support
Sun Microsystems, 2550 Garcia Ave., MS UMPK17-102, Menlo Park, CA 94043 USA
         "Give a monkey the tools and he'll build a typewriter."



