docno="lists-056-6933273"
received="Thu Mar 27 04:32:11 1997"
isoreceived="19970327093211"
sent="27 Mar 1997 09:33:08 +0000 (GMT)"
isosent="19970327093308"
name="Peter Flynn"
email="pflynn@curia.ucc.ie"
subject="Re: XML Conformance Levels [Was: ERB Decisions of March 26th]"
id="199703270933.JAA25814@curia.ucc.ie"
inreplyto="XML Conformance Levels [Was: ERB Decisions of March 26th]"
expires="-1"

To:w3c-sgml-wg@w3.org


> > O goddess, please not. This is in jest, right?

Murray writes:

> Nope. But what's the alternative?
> 
>       XML-CORE:    fully supported or no support at all
>       XML-LINK:    fully supported or no support at all
>       XML-STYLE:   fully supported or no support at all
>       
> Now really sit back and let that sink in a minute. If you want to develop
> an XML processor/application, you either support CORE or not. Fine so far.
> But if you want *any* linking or stylesheets (and you can't approach HTML's
> functionality at all without both) then you must implement both *completely*.

Yep. I think any attempt at XML implementation without both of those is 
entirely wasted. I can already get all of that with Panorama or Multidoc 
Pro.

> Now again sit back and let that sink in a minute. Tim's already choking
> on all the things we've decided to do, much less what some of us would
> desire. If the market perceives XML as a lesser cousin of HTML, then we 
> all hurt and XML dies. If it's so complex that the only developers are
> companies (as opposed to our favorite college student developer scenario),
> then only companies can play, but that works better than nobody *but* the
> college students. Conformance levels would allow both.

Specifying levels of conformance is a pointless exercise, though, as we
showed with HTML. Developers, whether students or companies, will simply
support what they wish and ignore the rest (with the exception of an
honorable few).

But you've persuaded me that it might be worth specifying, if only to
provide other with a yardstick with which to measure implementations
against each other, rather than against the spec.

///Peter



