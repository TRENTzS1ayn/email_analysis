docno="lists-056-8524158"
received="Thu May 15 04:13:02 1997"
isoreceived="19970515081302"
sent="Thu, 15 May 1997 18:13:35 +1000"
isosent="19970515081335"
name="Rick Jelliffe"
email="ricko@allette.com.au"
subject="Re: PIFLE (was Re: Are PIs useful?)"
id="199705150813.SAA27159@jawa.chilli.net.au"
charset="ISO-8859-1"
inreplyto="PIFLE (was Re: Are PIs useful?)"
expires="-1"


To:"Paul Prescod"<papresco@calum.csclub.uwaterloo.ca>,<w3c-sgml-wg@w3.org>

> From: Paul Prescod <papresco@calum.csclub.uwaterloo.ca>

> Rick Jelliffe wrote:
> > If we make PIs hygenic, we needn't encourage people to avoid anything.
> > They can stick PIs in for every specific target, without stuffing up their
> > document's portability, as they see fit.
 
> But the "sticking in PIs for every specific target" is exactly what they
> are using SGML to get away from. That's why PIs should be discouraged.

Is it? I thought we use SGML to make sure that valuable information is
rigorously marked-up with useful, generic labels.  After this primary goal
is met, what a user wants to do with comments or PIs is up to them.

Whether they use an external high-level formatting language like
DSSSL, or internal style sheet hinting, or inline PIs is something that
depends on their expertise, their technology and the tradeoffs as they 
see it.  

I think it is better to neutralise PIs by making them hygenic; you fear doing
so may encourage them.  Especially as the world crosses over from HTML, 
it may prevent tag abuse. For example, that guy who started using the 1 pixel
IMG elements for alignment is abusing element tags; but it is a legitimate need
he has: in the absense of any high-level solution, if he had a minimal set
of formatting PIs he could have kept element-structure integrity.

In any case, I think PIs should be used for more than just simple formatting.
For example, centerpoint PIs embedded in text to allow smarter page-up/down
scrolling. Or timeout and caching policy for external entities.
Or to trigger external entity prefetching when in the locality of some link. These kind
of things would allow much smoother operation to the user, rather than just 
the extremes of pull and push.


Rick Jelliffe
  



