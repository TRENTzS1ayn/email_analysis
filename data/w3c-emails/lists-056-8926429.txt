docno="lists-056-8926429"
received="Fri May 16 01:47:47 1997"
isoreceived="19970516054747"
sent="Fri, 16 May 1997 12:32:04 +0700"
isosent="19970516053204"
name="James Clark"
email="jjc@jclark.com"
subject="Re: SD2 - Structured Attributes"
id="2.2.32.19970516053204.0152a298@jclark.com"
charset="us-ascii"
inreplyto="SD2 - Structured Attributes"
expires="-1"


To:"'w3c-sgml-wg@w3.org'"<w3c-sgml-wg@w3.org>

I have difficulty in accepting structured attributes as a requirement.  To
me they seem more like one possible *solution* than a requirement.  Any
information that could be expressed as as an attribute could be expressed as
a sub-element.  There may be problems when certain kinds of information is
expressed as sub-elements.  The requirements should be stated in terms of
these problems, then we can examine with an open mind whether introducing
structured attributes is the best way to solve them.

> The
>distinction 
>between contents and attributes is important when tools (particularly
>down-level 
>versions of products) need to process data without fully understanding
>its 
>meaning: unknown attributes are completely ignored, while the contents
>of 
>unknown elements are retained.

This is the sort of way I would like to see the requirement expressed: how
can XML be enhanced so that tools can do various kinds of processing without
fully understanding the meaning of elements? Structured attributes would be
one way.  Another way might be a xml- attribute that allows elements to be
categorized in various ways.  Or maybe element types whose names start with
some special character could be reserved for certain kinds of semantic.

Structured attributes may be the right solution, but until we know what the
underlying problems that we are trying to solve are, I don't think we can
make a judgement.

James



