docno="lists-056-9020905"
received="Fri May 16 09:39:04 1997"
isoreceived="19970516133904"
sent="Fri, 16 May 1997 20:22:36 +0700"
isosent="19970516132236"
name="James Clark"
email="jjc@jclark.com"
subject="RE: SD2 - Structured Attributes"
id="2.2.32.19970516132236.0151c4f4@jclark.com"
charset="us-ascii"
inreplyto="SD2 - Structured Attributes"
expires="-1"


To:"'w3c-sgml-wg@w3.org'"<w3c-sgml-wg@w3.org>

At 23:45 15/05/97 -0700, Andrew Layman wrote:

>Regarding the question of whether any problem the could be solved via
>attributes could also be expressed as subelements: I believed that once.
>But the following sort of example convinced me otherwise:
>
>Suppose I have a program the processes author tags such as:
>
><author>William Shakespeare</author>
>
>Now somebody updates the document to a newer version, say like:
>
><author><first>William</first>
><last>Shakespeare</last><DSIG>12345</DSIG><author>
>
>What is the value of author?

What do you mean by value?  Do you mean "how will it be displayed?" or
something else?

>If the policy is to ignore all unknown tags, the author is "William
>Shakespeare12345". If the policy is to ignore all unknown elements, the
>author is " ". 

The conclusion I would draw from that is that neither policy will be
adequate, but it's a big leap to infer from this that structured attributes
are necessary.

What if the new markup were

<author><first>William</first><last>Shakespeare</last></author>

(with no space between first and last)?  Structured attributes wouldn't help
you there.  They don't seem to me to be a very good solution to this sort of
problem.

James



