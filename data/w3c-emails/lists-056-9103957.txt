docno="lists-056-9103957"
received="Fri May 16 12:54:34 1997"
isoreceived="19970516165434"
sent="Fri, 16 May 1997 12:54:12 -0400 (EDT)"
isosent="19970516165412"
name="Paul Prescod"
email="papresco@calum.csclub.uwaterloo.ca"
subject="Re: SD4 - Schema format"
id="199705161654.MAA29347@calum.csclub.uwaterloo.ca"
charset="US-ASCII"
inreplyto="3.0.1.32.19970516124054.00b8a184&#64;austin.apc.slb.com"
expires="-1"


To:streich@slb.com(Robert Streich)
Cc:w3c-sgml-wg@w3.org

> And I don't think that the argument that many of us already use instance
> syntax for describing DTDs is valid either. The reason that we use
> instance syntax for DTDs is because we want to keep marked up
> documentation with the declarations. If SGML DTDs did use instance
> syntax, we'd still have a "DTD for DTDs" of our own, for example.

This is massively important. I am also working on a DTD for DTDs. But it 
has very special needs: it models an object inheritance tree and generates
C++ code and SGML DTDs for describing 3D scenes. If DTDs were in instance
format I would just be generating instances rather than traditional DTDs.
A DTD *architecture* might be useful. DTDs as SGML documents are not 
really.

> In fact, proposals SD3-4 make me convinced that the only way to stay
> on track is to simply create an XML application that describes schemata,
> i.e., an XML DTD (current syntax) for creating schemata of all types,
> one of which could be XML DTDs. 

Can we do this properly in the time we have? I mean the programming languages
people are still arguing about type systems. The database people are just
beginning their arguing as they try to figure out object databases. And we
markup language people have hardly thought about the issue in any structured
way.

 Paul Prescod



