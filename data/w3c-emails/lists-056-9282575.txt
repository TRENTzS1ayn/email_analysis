docno="lists-056-9282575"
received="Fri May 16 16:52:39 1997"
isoreceived="19970516205239"
sent="Fri, 16 May 1997 13:52:04 -0700"
isosent="19970516205204"
name="Jon Bosak"
email="bosak@atlantic-83.Eng.Sun.COM"
subject="SD4 - Schema Format [fmt]"
id="199705162052.NAA15726@boethius.eng.sun.com"
expires="-1"


To:w3c-sgml-wg@w3.org

 From: Jean Paoli <jeanpa@microsoft.com>
 To: "'w3c-sgml-wg@w3.org'" <w3c-sgml-wg@w3.org>
 Subject: SD4 - Schema Format
 Date: Thu, 15 May 1997 21:14:19 -0700

 SD4 - Schema Format
 ---------------------------------

 Schemas are structured data, yet their current representation (DTD)
 does not leverage work invested in the XML document instance. Tools
 and solutions will be developed for XML in the following categories,
 and more besides: digital signatures, structured attributes,
 specialized editors, indexing services, repositories, version control
 systems, database representation, etc.  These XML tools will be mass
 market, and so will be ubiquitous, high-quality, and expected by all
 users.

 Further, in all our discussions with groups such as DSIG and
 W3C-Labels, we found it artificial and difficult to make a clear
 distinction between the requirements of schemata and the requirements
 of structured data generally.

 An example of this problem is the following: we want a mechanism to
 digitally sign a page on the Web by embedding a signature string in
 the page. Well, we also need a mechanism to digitally sign a schema on
 the Web. If we keep the instance syntax and the schema (DTD) syntax
 differents, we have to invent 2 different mechanisms to sign them.
 And you can think about a thousand of similar problems.

 Proposal: All machine-readable schemata, whatever their other
 characteristics, are structured data, and so XML itself is a good
 carrier syntax for schema expression. We should design a general
 structure for writing schemata in XML.

 In other worlds, we propose to keep the existing DTD syntax for
 compatibility reasons and to define another syntax which will
 grand-father the current DTD features but will be using the current
 instance syntax (i.e. well formed tags and attributes)

 ----------------------------------



