docno="lists-056-9336066"
received="Fri May 16 18:42:26 1997"
isoreceived="19970516224226"
sent="Fri, 16 May 1997 23:29:33 GMT"
isosent="19970516232933"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Re: SD3 - Data Types"
id="6695@ursus.demon.co.uk"
inreplyto="SD3 - Data Types"
expires="-1"


To:w3c-sgml-wg@w3.org

In message <9705161243.ZM18370@scrumpox.rd.wdi.disney.com> "Matthew Fuchs" writes:
[...]
> 
> The question is not if it's important (which it is, and therefore worth
> discussing), but how to support it.  Should these datatypes be part of the base
> language, so that all XML processors need to know how to handle them and it
> goes in the language definition; or does XML provide other facilities so that
> applications know when they're getting one of these new types, in which case it
> goes in an ancillary document.

I have found that implementing types (in CML) was a significant effort, and 
I'd argue against it being part of the parser.  This could mean that the
parser would accrete conversion code, validation code, re-formatting code,
etc.  Type management might, however, be a part of a separate post-parser 
module.

I like the idea of a standard library, partly because it limits the number of
implementations and therefore the possibility of divergent results.  
Managing numeric data is not always trivial and precision could be lost.  
Since the proposal is to introduce these types as attributes, it's possible
that Elements could inherit the methods associated with a particular data
type.

In case it's relevant, I introduce two other attributes in CML: UNITS
(e.g. pounds, meters, etc.) and FUZZY, which allows a range of values
such as RANGE, SDEV, '>', etc.  These may be too bloated, and I haven't fully
implemented the second yet (it is, however, extremely common in scientific
publcations).

P.

-- 
Peter Murray-Rust, domestic net connection
Virtual School of Molecular Sciences
http://www.vsms.nottingham.ac.uk/



