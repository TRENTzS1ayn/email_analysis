docno="lists-056-9364590"
received="Fri May 16 19:03:16 1997"
isoreceived="19970516230316"
sent="Fri, 16 May 1997 16:04:57 -0700"
isosent="19970516230457"
name="Matthew Fuchs"
email="matt@wdi.disney.com"
subject="Re: SD1 - Short End Tags [fmt]"
id="9705161605.ZM18532@scrumpox.rd.wdi.disney.com"
charset="us-ascii"
inreplyto="altheim&#64;mehitabel.eng.sun.com"
expires="-1"


To: altheim<altheim@mehitabel.eng.sun.com>,w3c-sgml-wg@w3.org

Murray,

I think you've demonstrated short end tags are like closing parens in Lisp.
 They work in Lisp because of indentation and Emacs pretty-printing.  We can't
use indentation here because whitespace counts.  In addition (and espcially for
hand editors), if end tags get lost, figuring out what happened could be a
major job.

My sense would be to go in the opposite direction, and use the end tags as a
means of placing redundant info into the doc for error correction.  If tags
were of the form <tagname-n>...</tagname-n>, where n is incremented for each
tag, it would enable a lot of error correction people wanted for badly
transmitted documents.  This kind of info, of course, could be added/deleted
automatically by editors and processors.

Matthew Fuchs
matt@wdi.disney.com

On May 16,  3:42pm, altheim wrote:
> Subject: Re: SD1 - Short End Tags [fmt]
>
> This seems somewhat Orwellian. For "readability and convenience", the XML
spec
> has made end tag GIs *required*. You're turning that idea upside-down.
>
> This proposal also diminishes its own impact by showing short end tags
> only applied to leaf nodes. Let's be more realistic. It gets a whole lot
> more complicated and difficult to parse if this proposal is accepted as
> stated, which allows short end tags everywhere. A typical example from my
desk:
>
>     <informaltable frame="none" pgwide="1">
>     <tgroup cols="2" colsep="0" rowsep="0">
>     <colspec colname="COLUMN2" colwidth="165*">
>     <colspec colname="COLUMN3" colwidth="231*">
>     <thead><row><entry align="left" valign="bottom">
>     <para>Problem</para></entry>
>     <entry align="left" valign="bottom">
>     <para>How to Fix the Problem</para></entry></row></thead>
>     <tbody><row><entry align="left" valign="top">
>     <para>The system is not connected to the network.</para></entry>
>     <entry align="left" valign="top">
>     <para>If this is a non-networked system, ignore this message.
>     If this is a networked system, make sure the Ethernet cabling
>     is attached securely.
>     </para></entry></row></tbody></tgroup></informaltable>
>
> becomes
>
>     <informaltable frame="none" pgwide="1">
>     <tgroup cols="2" colsep="0" rowsep="0">
>     <colspec colname="COLUMN2" colwidth="165*">
>     <colspec colname="COLUMN3" colwidth="231*">
>     <thead><row><entry align="left" valign="bottom">
>     <para>Problem</></>
>     <entry align="left" valign="bottom">
>     <para>How to Fix the Problem</></></></>
>     <tbody><row><entry align="left" valign="top">
>     <para>The system is not connected to the network.</></>
>     <entry align="left" valign="top">
>     <para>If this is a non-networked system, ignore this message.
>     If this is a networked system, make sure the Ethernet cabling
>     is attached securely.
>     </></></></></></>
>
> and we save how many characters? About 70 out of 680. Allowing only
> leaf node minimization saves only 16 chars. And if the database (or
> more generally, any XML content) contains a higher ratio of content to
> markup, the savings are even less. In a typical book or article, the
> difference would be neglible. It would be the same in a database whose
> field contents were of any length.
>
> We also pay a very high price in losing the simplicity of matching
> start and end tags, particularly for the grassroots-type application
> and content developers. CGI and perl script writers dealing with
> transactions now would have to keep track of level, and humans would
> probably just give up after about three or four levels. Heck, that's the
> reason I don't like chess.
>

-- 



