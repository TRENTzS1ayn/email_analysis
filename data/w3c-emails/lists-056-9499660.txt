docno="lists-056-9499660"
received="Sat May 17 00:00:50 1997"
isoreceived="19970517040050"
sent="Sat, 17 May 1997 10:45:06 +0700"
isosent="19970517034506"
name="James Clark"
email="jjc@jclark.com"
subject="Re: SD4 - Schema Format [fmt]"
id="2.2.32.19970517034506.01569bac@jclark.com"
charset="us-ascii"
inreplyto="SD4 - Schema Format [fmt]"
expires="-1"


To:w3c-sgml-wg@w3.org

> Proposal: All machine-readable schemata, whatever their other
> characteristics, are structured data, and so XML itself is a good
> carrier syntax for schema expression. We should design a general
> structure for writing schemata in XML.

This was discussed *very* fully when we decided to stick with SGML's syntax
for DTDs.  Calling it a schema rather than a DTD doesn't change the basic
issue.  Reaching agreement on an instance syntax would require a lot of
time, which I don't think we can afford at the moment, given the enormous
amount we have still to do.

The biggest problem I have with instance syntax for DTDs is how to allow
internal DTD subsets.  I haven't seen any solution proposed for this.
There are some things I think you really need to be able to put in an
internal subset, mainly information that is needed to get the right grove:

- general entity declarations (especially for entities specific to the document)

- which element types have element content v mixed content

- default values for attributes

- which attributes are ID attributes.

> In other worlds, we propose to keep the existing DTD syntax for
> compatibility reasons and to define another syntax which will
> grand-father the current DTD features but will be using the current
> instance syntax (i.e. well formed tags and attributes)

Will all conforming XML parsers be required to support both syntaxes?

If yes, then you've just substantially increased the amount of work required
to implement an XML parser.

If no, then you've just thrown away interoperability.

Neither option looks very attractive to me.

James



