docno="lists-056-9623582"
received="Sat May 17 17:59:53 1997"
isoreceived="19970517215953"
sent="Sat, 17 May 97 17:59:48 EDT"
isosent="19970517215948"
name="lee@sq.com"
email="lee@sq.com"
subject="Re: SD1 - Short End Tags [fmt]"
id="9705172159.AA03335@sqrex.sq.com"
inreplyto="SD1 - Short End Tags [fmt]"
expires="-1"


To:w3c-sgml-wg@w3.org

Murray Altheim <altheim@mehitabel.Eng.Sun.COM> wrote:

> We also pay a very high price in losing the simplicity of matching
> start and end tags, particularly for the grassroots-type application
> and content developers. CGI and perl script writers dealing with
> transactions now would have to keep track of level, and humans would
> probably just give up after about three or four levels.  [...]

I agree with Jon's earlier message, and Murray's comment here.

> Is this really worth all the headache?
No.

If you want minimistion, you can go and use a fuller subset of
SGML if you like, and not call it XML.

If we were to abandon the goal of SGML compatibility, and
make instead a markup definition language that is SGML as it
might have been, we would come up with something very different.
But that is not why we are here.

Was it Dave Hollander who asked why there had been so few responses?
In my case, I didn't think that anyone would take these proposals
seriously enough to make it worth responding!  I was mistaken, and
it seems not to be April 1st, when CONCUR was added :-)

Yes, as more user communities find XML, they will want to change
it to make it more convenient for themselves, probably without
being in the slightest bit concerned about the other user communities
or about compatibility with some decade-old standard or other :-)

We have to be strong enough to resist this.

Instead, we have to learn from the requirements, understand what
minimal set of changes may be needed, if any, and move on.

The LISP community would like perhaps to allow data structures such
as 
((person) (age 30) (height ((feet 6) (inches 2)))
  ((name) (pcdata (David Pilgrim))))

instead of
    <person age="30" height="6 feet 2 inches">
      <name>David Pilgrim</name>
    </person>

The financial community would like currency as a built-in
attribute type.

The engineering community needs floating point as well as integer.

The database community needs omitted tags (??)

But none of this is actually _needed_.

The only part that I have heard so far that seems to me to make
any real amount of sense is concerning namespaces and explicit
scoping rules.

Please let's not waste time going back over tag minimisation!

Lee



