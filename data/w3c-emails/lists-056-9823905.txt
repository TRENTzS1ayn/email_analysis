docno="lists-056-9823905"
received="Sun May 18 12:22:23 1997"
isoreceived="19970518162223"
sent="Sun, 18 May 1997 14:12:50 GMT"
isosent="19970518141250"
name="Peter Murray-Rust"
email="Peter@ursus.demon.co.uk"
subject="Re: SD5 - Namespaces (Implementation questions)"
id="6800@ursus.demon.co.uk"
inreplyto="SD5 - Namespaces (Implementation questions)"
expires="-1"


To:jjc@jclark.com
Cc:w3c-sgml-wg@w3.org

In message <2.2.32.19970518124204.00ab7550@jclark.com> James Clark writes:

Thanks very much for the reply James,

> At 10:03 18/05/97 GMT, Peter Murray-Rust wrote:
[...]
> 
> I don't think SUBDOC solves the problem: people want multiple namespaces in
> the same entity.  It also doesn't help with creating DTDs that combine
> element types from multiple namespaces.

Good.  That's one less thing to consider :-)

> 
> ><SOLUTION>
> >AFs and/or HyTime.  I am repeatedly assured by the evangelists - and I believe
> >them - that AFs and HyTime will solve all our problems.
> 
> The only thing from HyTime that you need for namespaces is AFs, which are
> completely independent of the rest of HyTime.

Thanks.  That was my understanding.
> 
> >  This is clearly a 
> >millenium solution for SGML, but not for July 1, 1997.
                          ^^^^
> 
> Why not?  It's implemented and people are using it already in the SGML world.

My apologies - I meant XML.  XML has decided against the use of AFs at this
stage.  To retrofit it as a solution to the namespace problem by July 1 would
be too tight.

> 
> >  Currently it ('it' 
> >refers to the universal solution) has the following drawbacks.
> >(a) It's not easy to understand, and I don't. [Several people have both 
> >talked to me and posted explanations for which many thanks, but I'm a slow 
> >learner.]
> 
> If you gave some detail about what it is you don't understand, maybe
> somebody could try to explain.

I think the problem is really one of introductory material and examples.

[...]
> >(d) I am frightened that the *output* of a HyTime engine (or whatever) is
> >sufficiently complex that the post-parsing/application engines must take on a
> >further level of sophistication.
> 
> You don't need a HyTime engine to do AFs.  The output of an AF engine isn't
> much different from an output of a parser.

This sounds promising.  Is it compatible with ESIS?

P.

BTW I never meant to imply that SP would not - at any stage - manage 
anything that came out of the XML-spec.  I'm addressing the requirement
that XML tools should be easy to write and I hope that it's a compliment
to say that SP isn't in this category:-)

-- 
Peter Murray-Rust, domestic net connection
Virtual School of Molecular Sciences
http://www.vsms.nottingham.ac.uk/



