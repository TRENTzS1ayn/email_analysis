docno="lists-056-9879065"
received="Sun May 18 13:09:02 1997"
isoreceived="19970518170902"
sent="Sun, 18 May 1997 10:08:56 -0700"
isosent="19970518170856"
name="Andrew Layman"
email="andrewl@microsoft.com"
subject="RE: SD3 - Data Types"
id="7BB61B44F197D011892800805FD4F7927DD990@RED-03-MSG.dns.microsoft.com"
inreplyto="SD3 - Data Types"
expires="-1"


To:"'Paul Prescod'"<papresco@calum.csclub.uwaterloo.ca>,w3c-sgml-wg@w3.org

I agree that we need to address the issue of validation (how one
verifies that the contents match some set of criterea making it a valid
element of the claimed type).  However, I've surveyed a number of groups
that are interested in using XML for their data processing (e.g. the
digital signatures iniative), and validation was not as important to
them as getting a simple solution for multiple namespaces, and for
having unlimitedly structured attributes. The solutions we adopt to
these problems will also likely affect our thinking about how we express
validations. So, you are right to suggest that we prioritize validation
a bit behind the other issues.

> -----Original Message-----
> From:Paul Prescod [SMTP:papresco@calum.csclub.uwaterloo.ca]
> Sent:Saturday, May 17, 1997 6:05 PM
> To:w3c-sgml-wg@w3.org
> Subject:Re: SD3 - Data Types
> 
> Andrew Layman wrote:
> > For example, if an element's contents are ANY or MIXED, an xml-type
> > attribute might identify it as actually being a date, in a standard
> > format such as ISO 8061. This separates the semantics (e.g. "Due
> Date")
> > from its representation ("ISO 8061 date").
> 
> This is essentially SGML's NOTATION. 
> 
> There is a related issue that is, in my mind, more important (but
> should
> wait until XML 2.0). Shouldn't there be a way for editors and parsers
> to
> syntactically validate these constructs without looking up the
> semantics
> or incorporating an IETF RFC or ISO spec? For database people, I'm
> talking about the simple regular expressions that database front ends
> use to restrict incoming data to phone numbers, dates, etc. For SGML
> people I am talking about something like HyTime's Lextype (I
> think...).
> Allowing these specifications would not complicate the implementation
> of
> simple parsers or perl scripts, but it would (obviously) complicate
> the
> implementation of validating parsers.
> 
> Questions about restricting element and attribute syntax are the most
> common I get in teaching SGML and I never know what to say: "Well,
> SGML
> isn't really about syntax, but rather about semantics." Huh? That's
> not
> right!!!
> 
>  Paul Prescod
> 



