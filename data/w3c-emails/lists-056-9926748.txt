docno="lists-056-9926748"
received="Mon May 19 02:59:33 1997"
isoreceived="19970519065933"
sent="Mon, 19 May 1997 08:58:59 -0700"
isosent="19970519155859"
name="Tim Bray"
email="tbray@textuality.com"
subject="Re: SD2 - Structured Attributes [fmt]"
id="3.0.32.19970519085259.006919fc@pop.intergate.bc.ca"
charset="us-ascii"
inreplyto="SD2 - Structured Attributes [fmt]"
expires="-1"


To:w3c-sgml-wg@w3.org

> From: Jean Paoli <jeanpa@microsoft.com>
> Proposal: I'm going to say something radical here: We should invent a
> way to add structure and attributes to attributes. A special character
> sequence "<*" in an opening tag (the exact characters used are
> to-be-determined) signals that the contents are an attribute, not a
> subdivision.

<request-for-info>
I am having a lot of trouble figuring out what is meant by "an attribute,
not a subdivision".  In the XML spec, the definition of attribute is
syntactic only.  There is no such thing as subdivision; I assume that
"child element" is meant - this definition is also syntactic-only.

I just don't get it.  I believe that what we need is for whoever wants
this to post what they mean; by that I mean to provide some proposed
language for the XML spec that would explain the meaning of this syntax.
</request-for-info>

<editorial>
I also used to be troubled by the very fuzzy and non-formal lines,
in SGML, between what's an element and what's an attribute.  In fact,
one of the early academic groups looking at SGML (led by Mamrak at
Ohio/Columbus) proposed that there was no reason ever to use attributes
for anything; I found that sensible, and still do.  Which is to say 
that if I'd been designing SGML, I wouldn't have put attributes in.

But they did get put in, and I have observed empirically that document
designers like them, and use them in a productive way, and that 
document users also find them friendly.  There are a few formal 
differentiators (no substructure for attributes, no data typing 
however weak for elements) but nothing remotely resembling a 
decision procedure.

Conclusion: Human document desginers should decide what's an element
and what's an attribute.  And computer software that needs to pull
a named chunk of data out of a document should be prepared to use
either.
</editorial>

 - Tim



