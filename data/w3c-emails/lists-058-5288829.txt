docno="lists-058-5288829"
received="Fri Nov  6 02:27:42 1998"
isoreceived="19981106072742"
sent="Thu, 5 Nov 1998 23:27:35 -0800 "
isosent="19981106072735"
name="Charles (Chuck) Oppermann"
email="chuckop@MICROSOFT.com"
subject="RE: Conference call Minutes"
id="BB61526CDE70D2119D0F00805FBECA2F01E76DD6@RED-MSG-55"
inreplyto="Conference call Minutes"
expires="-1"


To: Jutta Treviranus<jutta.treviranus@utoronto.ca>,w3c-wai-au@w3.org

<<
1. As suggested by Daniel it was decided that this document would only
address supporting the creation of accessible documents, that the section 4
refering to making the authoring tool itself accessible would be dropped.
This was to decrease the size of the document. Subsequently at the end of
the call (Daniel was no longer present) several members strongly objected
to this decision. This will be discussed further on the list.
>>

I agree that it should be dropped.  There are plenty of excellent references
on producing accessible applications.  Sun, IBM, Trace and Microsoft all
have guidelines for Universal Design and software applications.

However, I disagree with the focus on *documents*.  Okay, FrontPage 98 maybe
document-centric, but Microsoft Visual InterDev produces HTML
*appilcations*.  It's easy to create accessible documents, but not so much
so with creating HTML applications.

At the User Agent Face to Face, I demonstrated the "Organize" feature of
Outlook 98.  This feature displays a pane in the message list area that has
several and user interface controls that allow the user to filter incoming
messages.  This is done entirely using HTML and scripting.  It's very cool
because it has full keyboard support and uses fonts and colors specified by
the operating system.  This magic courtesy of HTML 4.0, CSS1 and Internet
Explorer's rendering engine.

It is possible to create accessible HTML applications, but unlike Outlook 98
developers, most folks won't spend the effort needed to hand-craft HTML.
Products like Visual InterDev 6.0 allow a developer to create a complete
on-line retail store easily.  HTML applications, generated by authoring
tools should be of primary importance to this group.

<<
2. It was decided that a text only view be recommended.
>>

You mean, allow the authoring tool to render the current page in text view?
How practical is that?  I know that FrontPage simply calls out to Internet
Explorer to do it's rendering.  Seems like a big work item to ask authoring
tool developer to build in a text view.  Each authoring tool might have a
different concept of what "text view" means.  Does it mean what LYNX does,
or does it mean the raw HTML without all the markup and no formatting?

<<
8. All members will review the document before next Tuesday and send in
comments.
>>

As stated previously, I will not be able to do so until later next week.

Charles Oppermann 
Program Manager, Accessibility and Disabilities Group,
Microsoft Corporation
mailto:chuckop@microsoft.com http://microsoft.com/enable/
"A computer on every desk and in every home, usable by everyone!" 

-----Original Message-----
From: Jutta Treviranus [mailto:jutta.treviranus@utoronto.ca]
Sent: Thursday, November 05, 1998 3:16 PM
To: w3c-wai-au@w3.org
Subject: Conference call Minutes


Here are the minutes of the November 5 Conference Call:
Present:
Jutta T., Jan Richards, Karen McCall, Daniel D., Ian Jacobs, William L.,
Jim Allen, Mickey Q., Charles Mc.

1. As suggested by Daniel it was decided that this document would only
address supporting the creation of accessible documents, that the section 4
refering to making the authoring tool itself accessible would be dropped.
This was to decrease the size of the document. Subsequently at the end of
the call (Daniel was no longer present) several members strongly objected
to this decision. This will be discussed further on the list.
2. It was decided that a text only view be recommended.
3. The various approaches to seperating techniques from guidelines were
discussed. It was decided that more specific guidance was needed but that
the authoring tool differed significantly from the UA and Page Author
guidelines. Specific examples will be generated for each of the section
three guidelines. These will either be within the document, in an example
section at the end  with links or as a seperate document with links.
4. Section 5 will be expanded to bring back in the other mechanisms that
can be used to support accessible authoring.
5. Further rationale text will be added. We will insure that this is
international and not US biased.
6. It was suggested that we should check with an authoring tool developer
to see if the language and examples addressed their needs- as this is a
document for developers not the general public.
7. It was decided that there should be a guideline that states that the
authoring tool should not generate default alt- text or create place-holder
alt text.
8. All members will review the document before next Tuesday and send in
comments.



