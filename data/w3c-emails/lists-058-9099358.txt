docno="lists-058-9099358"
received="Fri Jun  4 15:52:57 1999"
isoreceived="19990604195257"
sent="Fri, 4 Jun 1999 15:52:22 -0400 (EDT)"
isosent="19990604195222"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: Wording of second goal"
id="Pine.LNX.4.10.9906041543400.22019-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="4.1.19990604121542.0161e0f0&#64;mail.idyllmtn.com"
expires="-1"

To: Kynn Bartlett<kynn-hwg@idyllmtn.com>
cc: Bruce_Roberts/CAM/Lotus@lotus.com,w3c-wai-au@w3.org


I don't have a problem with it being difficult to use a tool to create
inaccessible pages as a result of that tool complying with the guidelines. If
I want to create inaccessible pages now I just get one of the existing
products that does it (I can give a few good recommendations if you are
really keen *grin*). I have a problem with requiring that it is impossible,
since that would be a restriction that also served to stifle innovation for
the better.

Besides, the goal is to put your accessible design classes into a new league,
where you don't have to deal with code examples and can spend the time on the
more complex aspects of equivalent alternatives, choices of accessible and
more accessible techniques. (And eventually to put us out of jobs, because
accessibility is simply part of everyday design. One day...)

So I think the goal is that authors will create accessible content. There are
things that are critical to meeting that goal. But even with all the pieces
in place, it is possible to create inaccessible content if you want to.

cheers

Charles McCN


  At 08:41 AM 6/3/1999 , Charles McCathieNevile wrote:
  >I would be happy with "The authoring tool creates accesible content". The
  >goal is that all content produced by authoring tools is accessible.

And On Fri, 4 Jun 1999, Kynn Bartlett wrote:
  
  This makes it hard for me to create an example of a page which
  is inaccessible as a demonstration to my students.  I can think
  of many cases in which the advanced user would want to be able
  to turn off certain features, such as accessibility checking,
  and so it should be configurable (but not necessarily easily
  configurable), right?
  
  As far as the goal goes, I think "allows" is the word you are
  searching for, perhaps?



