docno="lists-059-11261815"
received="Thu Jun  7 16:38:12 2001"
isoreceived="20010607203812"
sent="Thu, 07 Jun 2001 16:37:21 -0400"
isosent="20010607203721"
name="Jan Richards"
email="jan.richards@utoronto.ca"
subject="Wombat Subtext 5.1, 5.2"
id="3B1FE601.B7963CF0@utoronto.ca"
charset="us-ascii"
expires="-1"


To:"w3c-wai-au@w3.org"<w3c-wai-au@w3.org>

Hello all,

Here are some ideas for subtext:

5.1 Ensure that all functionality (prompts, checkers, information icons,
etc.) related to accessible authoring practices is naturally integrated
into the overall look and feel of the tool. [Priority 2] 

This checkpoint requires developers to integrate accessibility-related
functionality as seamlessly as possible. At minimum, the accessibility
features should not stand in contrast to the normal operation of the
tool. Accessibility features should operate with approximately the same
number of mouse clicks or keystrokes, the same amount of reading, and
the same degree of flexibility as the other features of the product. For
example, if the tool includes a floating element properties toolbar that
is always visible, the accessibility-related prompts should be added to
this toolbar, rather than implemented as intrusive pop-up boxes. More
advanced implementations might see more complex accessibility-related
features, such as checking, integrated to the same level as analogous
feature that are not related to accessibility. For example, if
underlining or color changes are used to notify the author, while they
work, of syntax and spelling errors, accessibility problems should be
similarly flagged.

5.2 Ensure that accessible authoring practices supporting Web Content
Accessibility Guidelines 1.0 [WCAG10] Priority 1 checkpoints are among
the most obvious and easily initiated by the author. [Priority 2] 

This checkpoint requires authoring tools to have user interfaces that
increase the probability that authors will use accessible authoring
practices, even when less accessible alternatives are provided by the
tool for reasons of completeness. At minimum, when there is an
accessible and a less accessible means for performing an action, the
user interface of the tool should be organized so that the accessible
means is more visible in the user interface and easier to activate in
terms of mouse clicks and keystrokes than the less accessible means.
More advanced solutions might purposefully impede the visibility and use
of the less accessible means.





-- 
Cheers,
Jan

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

Jan Richards
Adaptive Technology Resource Centre (ATRC)
University of Toronto

jan.richards@utoronto.ca
Tel: (416) 946-7060  Fax: (416) 971-2896

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\



