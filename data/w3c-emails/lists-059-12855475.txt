docno="lists-059-12855475"
received="Thu Feb 22 14:43:43 2001"
isoreceived="20010222194343"
sent="Thu, 22 Feb 2001 14:43:12 -0500"
isosent="20010222194312"
name="Jan Richards"
email="jan.richards@utoronto.ca"
subject="Improving the Techniques Document"
id="3A956BD0.2B3DF0EA@utoronto.ca"
charset="us-ascii"
expires="-1"


To:"w3c-wai-au@w3.org"<w3c-wai-au@w3.org>

Hello all,

The ATAG techniques document is currently 88 printed pages long (40 of
which are the AERT), compared to 24 for WCAG's content techniques and
that's before we put an introduction and table of contents on ours. And
this is before we make another big push to write more techniques.  It's
pretty daunting.

What to do?

As a first pass, I think...

1. We should place the AERT in a separate linked document. It is a 40
page subsection and it deals with the nitty gritty of repair while the
other techniques for checkpoint 4.1 are phrased more generally.

2. We should attempt to leave markup language specific techniques to
WCAG and instead focus on techniques common to authoring tools within
several wider domains.  I suggest considering the following four
domains:

- Markup Editing Tools (includes text and WYSIWYG editors for HTML, XML,
etc.)
- Content Management Tools (includes higher level editors that focus on
content organization, such as courseware, e-business packages, etc.)
- Multimedia Creation Tools (includes tools for creating SMIL, images
(incluing SVG), video, sounds, etc.)
- Programming Tools (includes tools for producing Web applications in
Java, Javascript, etc.)

Note: Some tools are positionned across multiple domains.

Thoughts?

Cheers,
Jan

-- 
Jan Richards
Software Designer
jan.richards@utoronto.ca
Tel: (416) 946-7060
Fax: (416) 971-2896
Adaptive Technology Resource Centre
University of Toronto



