docno="lists-059-14295806"
received="Wed Sep  5 14:05:31 2001"
isoreceived="20010905180531"
sent="Wed, 05 Sep 2001 14:05:07 -0400"
isosent="20010905180507"
name="Jan Richards"
email="jan.richards@utoronto.ca"
subject="Wombat Guideline 5"
id="3B966953.3EFA35F2@utoronto.ca"
charset="us-ascii"
expires="-1"


To:"w3c-wai-au@w3.org"<w3c-wai-au@w3.org>

Hi all,

As a result of a couple of courseware reviews I'm doing using ATAG, I
have done some new thinking about WOMBAT Guideline 5 in (which I want to
move to 6). Notice I have not included 5.1. I'm not convinced that it
needs to go here.

---

Guideline 5 (although I suggest we make this 6).
Integrate accessibility solutions into the overall "look and feel".

In order to meet the checkpoints for the first five guidelines in this
document, authoring tools will need to include a certain amount of
specialized functionality, ranging from minor functions such as
additional dialog fields for accessibility-related properties to major
functions such as accessibility checkers. For the purposes of this
guideline, these will be referred to as accessibility-related authoring
functions.

The checkpoints in this guideline set out requirements for how these
functions are to be added into the authoring tool user interface. In
general, the accessibility-related authoring functions should be
implemented in a manner that gives them a degree of precedence in the
user interface without causing obvious discontinuities with the other
functionality of the tool.

---

5.A Ensure interface precedence for accessibility-related authoring
functions that support WCAG 1.0 - Priority 1 checkpoints. [Priority 1]

Rationale: The precedence with which functions are positioned within a
user interface can increase the probability with which they are used,
compared to alternatives given less precedence.

Required basic functionality: When a WCAG 1.0 Priority 1 checkpoint
recommends one technique for accomplishing an authoring task over
another, the recommended technique is given user interface precedence.
This means that the technique is as least as visible and easy to
activate, in terms of mouse clicks and keystrokes, as the less
accessible means.

Optional advanced functionality: The visibility and ease of use of the
WCAG 1.0 Priority 1 recommended technique exceed that of the alternative
non-recommended techniques.

See also: Techniques for checkpoint 5.A.

---

5.B Ensure accessibility-related authoring functions (i.e. prompts,
checkers, etc.) are integrated to the same degree as other comparable
functions of the tool. [Priority 2] 

Rationale: Accessibility-related authoring functionality must be
integrated as seamlessly as possible in order to prevent user confusion
and annoyance. For this checkpoint, tool functions are considered
comparable when they perform operations of similar scope and complexity.
For example, an accessibility checker is comparable to a spell checker
and attribute editors are comparable, whether accessibility-related or
not. 

Required basic functionality: The accessibility-related authoring
functions are implemented in such a way that, compared to comparable
functions:
(a) they are operable with approximately the same number of mouse clicks
or keystrokes. For example, if a tool displays element properties on a
floating toolbar, then accessibility-related prompts are added to this
toolbar, not implemented as intrusive pop-up boxes.
(b) they are similar in appearance. For example, the
accessibility-related authoring functions will be implemented with the
same window styles, text fonts, icon styles, etc. as other functions, so
that a clear discontinuity between the functions is not evident.

Optional advanced functionality: In addition to (a) and (b), above:
(c) the accessibility-related authoring functions are implemented in
such a way that, compared to comparable functions, they are customizable
in the same way and to the same degree. For example, if a tool allows
the user to turn the spell checker on and off, specify errors to ignore,
and choose by what means notification is provided, an equal level of
customizability will be implemented for the accessibility checker.

See also: Techniques for checkpoint 5.B.

---

5.C Ensure the techniques for accessible content creation are integrated
into documentation examples. [Relative Priority] 

Rationale: Authors are more likely to make effective use of
accessibility-related authoring functions if they have had frequent
experience with the proper use of those functions.

Required basic functionality: All markup examples in the documentation
conform to WCAG 1.0 Level Single-A. Similarly, all user interface
screenshot examples in the documentation show authoring situations that
conform to WCAG Level Single-A. For example, a screenshot of an "Image
Properties" dialog will include a proper text label in the "alt" field,
even if the purpose of the example is to demonstrate how to set the
"height" and "width" attribute fields.

Optional advanced functionality: This Relative Priority checkpoint may
be met to level 2 (required for ATAG double-A) or level 3 (required for
ATAG triple-A) by ensuring all examples in the documentation conform to
WCAG double-A or WCAG triple-A, respectively.

See also: Techniques for checkpoint 5.C.


-- 
Cheers,
Jan

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

Jan Richards
Adaptive Technology Resource Centre (ATRC)
University of Toronto

jan.richards@utoronto.ca
Fax: (416) 971-2896

==> TEMPORARY TELEPHONE: (416) 946-5358 <=======

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\



