docno="lists-059-14480996"
received="Wed Sep 12 14:14:38 2001"
isoreceived="20010912181438"
sent="Wed, 12 Sep 2001 14:14:13 -0400"
isosent="20010912181413"
name="Jutta Treviranus"
email="jutta.treviranus@utoronto.ca"
subject="Fwd: Eval Template"
id="a05100307b7c5563a0cbf@[142.150.64.191]"
charset="us-ascii"
expires="-1"


To:w3c-wai-au@w3.org

>Date: Wed, 12 Sep 2001 11:57:28 -0400
>From:Jan Richards <jan.richards@utoronto.ca>
>X-Accept-Language: en
>To:Jutta Treviranus <jutta.treviranus@utoronto.ca>
>Subject: Eval Template
>Status:  
>
>
>--
>Cheers,
>Jan
>
>/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
>
>Jan Richards
>Adaptive Technology Resource Centre (ATRC)
>University of Toronto
>
>jan.richards@utoronto.ca
>Fax: (416) 971-2896
>
>==> TEMPORARY TELEPHONE: (416) 946-5358 <=======
>
>/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
>Conformance of ??? v.???
>to W3C's Authoring Tool Accessibility Guidelines 1.0
>
>
>VERSION: ???
>DATE COMPLETED: ???
>LAST REVISED: ???
>EVALUATOR: ??? (e-mail: ???)
>ATAG DRAFT EVALUATED AGAINST: 
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/>http://www.w3.org/TR/2000/REC-ATAG10-20000203/
>
>
>Introductory Comments and Notes
>
>This evaluation was performed on ??? v??? by ???.
>
>??? is a ??? tool that is intended for use by ??? to create ???.
>
>This evaluation may be somewhat limited in some areas. Future 
>revisions may incorporate feedback provided by the general public, 
>members of the <http://www.w3.org/WAI/AU/>Authoring Tool Guidelines 
>Working Group, and the manufacturer of the tool evaluated.
>
>
>Conformance Summary
>
>This assessment concludes that ??? v.??? has:
>
>achieved Level-A compliance with ATAG 1.0.
>achieved Level-AA compliance with ATAG 1.0.
>achieved Level-AAA compliance with ATAG 1.0.
>has not achieved any of the levels of compliance with ATAG 1.0.
>
>[Comment on what has been done well]
>
>[Comments on what remains to be implemented by the tool to reach the 
>next level of compliance]
>
>Legend
>
>- : The Priority of the checkpoint is too low to be required for 
>this ATAG compliance level.
>Yes: This checkpoint has been met.
>Yes (Qualified): This checkpoint has been met, for the most part.
>No: This checkpoint has not been met.
>N/A: This checkpoint is not relevant to the tool (counts as a Yes 
>when determining compliance).
>
>ATAG Checkpoints
>Level-A Status
>Level-AA Status
>Level-AAA Status
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-support-access-features>1.1 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-leave-access-content>1.2 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-generate-access-markup>1.3 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-use-accessible-templates>1.4 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-prefer-w3c>2.1 (P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-ensure-published-DTD>2.2 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-declare-extended-DTD>2.3 
>(P3)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-provide-missing-alt>3.1 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-help-provide-structure>3.2 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-include-pro-descs>3.3 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-no-default-alt>3.4 (P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-have-alt-registry>3.5 
>(P3)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-notify-on-schedule>4.1 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-dont-require-knowledge>4.2 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-notify-changes>4.3 (P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-progress-feedback>4.4 
>(P3)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-allow-transformation>4.5 
>(P3)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-integrate-features>5.1 
>(P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-visible-means>5.2 (P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-document-features>6.1 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-accessibility-everywhere>6.2 
>(P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-emphasize-universal-benefit>6.3 
>(P3)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-use-system-conventions>7.1 
>(RP)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-independent-styles>7.2 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-edit-elements>7.3 (P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-navigation-access>7.4 
>(P1)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-edit-structure>7.5 (P2)
>
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/#check-have-search>7.6 (P2)
>     
>
>
>
>
>Conformance Details
>
>Guideline 1: Support accessible authoring practices
>
>1.1 Ensure that the author can produce accessible content in the 
>markup languages supported by the tool [Priority 1]
>
>Yes. [Tool gives author freedom to control which markup is produced, 
>even if by a code view.]
>No. [Tool does not meet the above condition.]
>Not Applicable. [Tool does not support any markup languages - it is 
>a programming tool or media editor.]
>
>Details:
>
>1.2 Ensure that the tool preserves all accessibility content during 
>authoring, transformation, and conversions [Priority 1]
>
>Yes. [Tool preserves representative set of accessible markup 
>(spot-test until automated tools available)]
>No. [Tool does not meet the above condition]
>
>Details:
>
>1.3 Ensure that when the tool automatically generates markup it 
>conforms to the W3C's Web Content Accessibility Guidelines 1.0 
>[Relative Priority]
>
>Yes(Level-A). [Generated markup meets all WCAG Priority 1 checkpoints below]
>Yes(Level-AA). [Generated markup meets all WCAG Priority 1 and 2 
>checkpoints below]
>Yes(Level-AAA). [Generated markup meets all WCAG Priority 1, 2 and 3 
>checkpoints below]
>No (Does not meet Level-A).
>
>[this section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints still remain to be met by all 
>generated markup in order for the tool to meet the compliance levels 
>listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ....
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>WCAG 7.1 Until user agents allow users to control flickering, avoid 
>causing the screen to flicker.
>WCAG 9.1 Provide client-side image maps instead of server-side image 
>maps except where the regions cannot be defined with an available 
>geometric shape.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>WCAG 14.1 Use the clearest and simplest language appropriate for a 
>site's content.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 2.2 Ensure that foreground and background color combinations 
>provide sufficient contrast when viewed by someone having color 
>deficits or when viewed on a black and white screen. [Priority 2 for 
>images, Priority 3 for text].
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.2 Create documents that validate to published formal grammars.
>WCAG 3.3 Use style sheets to control layout and presentation.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 6.4 For scripts and applets, ensure that event handlers are 
>input device-independent.
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>WCAG 7.2 Until user agents allow users to control blinking, avoid 
>causing content to blink (i.e., change presentation at a regular 
>rate, such as turning on and off).
>WCAG 7.3 Until user agents allow users to freeze moving content, 
>avoid movement in pages.
>WCAG 7.4 Until user agents provide the ability to stop the refresh, 
>do not create periodically auto-refreshing pages.
>WCAG 7.5 Until user agents provide the ability to stop 
>auto-redirect, do not use markup to redirect pages automatically. 
>Instead, configure the server to perform redirects.
>WCAG 8.1 Make programmatic elements such as scripts and applets 
>directly accessible or compatible with assistive technologies 
>[Priority 1 if functionality is important and not presented 
>elsewhere, otherwise Priority 2.]
>WCAG 9.2 Ensure that any element that has its own interface can be 
>operated in a device-independent manner.
>WCAG 9.3 For scripts, specify logical event handlers rather than 
>device-dependent event handlers.
>WCAG 10.1 Until user agents allow users to turn off spawned windows, 
>do not cause pop-ups or other windows to appear and do not change 
>the current window without informing the user.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 11.1 Use W3C technologies when they are available and 
>appropriate for a task and use the latest versions when supported.
>WCAG 11.2 Avoid deprecated features of W3C technologies.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.1 Clearly identify the target of each link.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 5.6 Provide abbreviations for header labels.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 10.3 Until user agents (including assistive technologies) 
>render side-by-side text correctly, provide a linear text 
>alternative (on the current page or some other) for all tables that 
>lay out text in parallel, word-wrapped columns.
>WCAG 10.4 Until user agents handle empty controls correctly, include 
>default, place-holding characters in edit boxes and text areas.
>WCAG 10.5 Until user agents (including assistive technologies) 
>render adjacent links distinctly, include non-link, printable 
>characters (surrounded by spaces) between adjacent links.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.7 If search functions are provided, enable different types 
>of searches for different skill levels and preferences.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>WCAG 13.10 Provide a means to skip over multi-line ASCII art.
>WCAG 14.2 Supplement text with graphic or auditory presentations 
>where they will facilitate comprehension of the page.
>WCAG 14.3 Create a style of presentation that is consistent across pages.
>
>Details:
>
>1.4 Ensure that templates provided by the tool conform to the Web 
>Content Accessibility Guidelines 1.0 [Relative Priority]
>
>Yes(Level-A). [Templates meets all WCAG Priority 1 checkpoints below]
>Yes(Level-AA). [Templates meets all WCAG Priority 1 and 2 checkpoints below]
>Yes(Level-AAA). [Templates meets all WCAG Priority 1, 2 and 3 
>checkpoints below]
>Not Applicable. [Tool does not include any templates]
>No (Does not meet Level-A).
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints still remain to be met by all the 
>templates in order for the tool to meet the compliance levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ....
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>WCAG 7.1 Until user agents allow users to control flickering, avoid 
>causing the screen to flicker.
>WCAG 9.1 Provide client-side image maps instead of server-side image 
>maps except where the regions cannot be defined with an available 
>geometric shape.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>WCAG 14.1 Use the clearest and simplest language appropriate for a 
>site's content.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 2.2 Ensure that foreground and background color combinations 
>provide sufficient contrast when viewed by someone having color 
>deficits or when viewed on a black and white screen. [Priority 2 for 
>images, Priority 3 for text].
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.2 Create documents that validate to published formal grammars.
>WCAG 3.3 Use style sheets to control layout and presentation.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 6.4 For scripts and applets, ensure that event handlers are 
>input device-independent.
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>WCAG 7.2 Until user agents allow users to control blinking, avoid 
>causing content to blink (i.e., change presentation at a regular 
>rate, such as turning on and off).
>WCAG 7.3 Until user agents allow users to freeze moving content, 
>avoid movement in pages.
>WCAG 7.4 Until user agents provide the ability to stop the refresh, 
>do not create periodically auto-refreshing pages.
>WCAG 7.5 Until user agents provide the ability to stop 
>auto-redirect, do not use markup to redirect pages automatically. 
>Instead, configure the server to perform redirects.
>WCAG 8.1 Make programmatic elements such as scripts and applets 
>directly accessible or compatible with assistive technologies 
>[Priority 1 if functionality is important and not presented 
>elsewhere, otherwise Priority 2.]
>WCAG 9.2 Ensure that any element that has its own interface can be 
>operated in a device-independent manner.
>WCAG 9.3 For scripts, specify logical event handlers rather than 
>device-dependent event handlers.
>WCAG 10.1 Until user agents allow users to turn off spawned windows, 
>do not cause pop-ups or other windows to appear and do not change 
>the current window without informing the user.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 11.1 Use W3C technologies when they are available and 
>appropriate for a task and use the latest versions when supported.
>WCAG 11.2 Avoid deprecated features of W3C technologies.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.1 Clearly identify the target of each link.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 5.6 Provide abbreviations for header labels.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 10.3 Until user agents (including assistive technologies) 
>render side-by-side text correctly, provide a linear text 
>alternative (on the current page or some other) for all tables that 
>lay out text in parallel, word-wrapped columns.
>WCAG 10.4 Until user agents handle empty controls correctly, include 
>default, place-holding characters in edit boxes and text areas.
>WCAG 10.5 Until user agents (including assistive technologies) 
>render adjacent links distinctly, include non-link, printable 
>characters (surrounded by spaces) between adjacent links.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.7 If search functions are provided, enable different types 
>of searches for different skill levels and preferences.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>WCAG 13.10 Provide a means to skip over multi-line ASCII art.
>WCAG 14.2 Supplement text with graphic or auditory presentations 
>where they will facilitate comprehension of the page.
>WCAG 14.3 Create a style of presentation that is consistent across pages.
>
>Details:
>
>
>Guideline 2: Generate Standard Markup
>
>2.1 Use the latest versions of W3C Recommendations when they are 
>available and appropriate for a task [Priority 2]
>
>Yes. [Tool supports the most up to date version of its markup 
>languages (as of 2 years prior to release]
>No. [Tool either does not meet the above condition or does not 
>produces content in a non-W3C format for which a comparable W3C 
>alternative existed (as of 2 years prior to release).]
>
>Details:
>
>2.2: Ensure that the tool automatically generates valid markup [Priority 1]
>
>Yes. [Tool produces valid markup - automated validation for some 
>languages available at http://validator.w3.org]
>No. [Tool does not meet the above condition]
>
>Details:
>
>2.3 If markup produced by the tool does not conform to W3C 
>specifications, inform the author [Priority 3]
>
>Yes. [Tool displays some kind of warning that some given markup does 
>not conform to W3C specifications.]
>No. [Tool does not meet the above condition]
>Not Applicable. [Tool always produces conformant markup, so no 
>warning is required.]
>
>Details:
>
>
>Guideline 3: Support the creation of accessible content
>
>3.1 Prompt for the author to provide equivalent alternative 
>information (e.g., captions, auditory descriptions, and collated 
>text transcripts for video) [Relative Priority]
>
>Yes(Level-A). [Tool prompts for all WCAG Priority 1 checkpoints below]
>Yes(Level-AA). [Tool prompts for all WCAG Priority 1 and 2 checkpoints below]
>Yes(Level-AAA). [Tool prompts for all WCAG Priority 1, 2 and 3 
>checkpoints below]
>No (Does not meet Level-A).
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints related to equivalent alternatives 
>still remain to be prompted for within the tool interface in order 
>to meet the compliance levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ...
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 5.5 Provide summaries for tables.
>
>Details:
>
>3.2 Help the author create structured content and separate 
>information from its presentation [Relative Priority]
>
>Yes(Level-A). [Tool helps to create content that meets all WCAG 
>Priority 1 checkpoints below]
>Yes(Level-AA). [Tool helps to create content that meets all WCAG 
>Priority 1 and 2 checkpoints below]
>Yes(Level-AAA). [Tool helps to create content that meets all WCAG 
>Priority 1, 2 and 3 checkpoints below]
>No (Does not meet Level-A).
>
>[this section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints related to this separation still 
>remain to be addressed within the tool interface in order to meet 
>the compliance levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>
>Details:
>
>3.3 Ensure that prepackaged content conforms to the Web Content 
>Accessibility Guidelines 1.0 
><http://www.w3.org/WAI/AU/reviews/Dreamweaver3#ref-WCAG10>[WCAG10] 
>[Relative Priority]
>
>Yes(Level-A). [Prepackaged content meets all WCAG Priority 1 
>checkpoints below]
>Yes(Level-AA). [Prepackaged content meets all WCAG Priority 1 and 2 
>checkpoints below]
>Yes(Level-AAA). [Prepackaged content meets all WCAG Priority 1, 2 
>and 3 checkpoints below]
>Not Applicable. [Tool does not include any prepackaged content]
>No (Does not meet Level-A).
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints still remain to be met by all 
>prepackaged content in order for the tool to meet the compliance 
>levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ....
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>WCAG 7.1 Until user agents allow users to control flickering, avoid 
>causing the screen to flicker.
>WCAG 9.1 Provide client-side image maps instead of server-side image 
>maps except where the regions cannot be defined with an available 
>geometric shape.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>WCAG 14.1 Use the clearest and simplest language appropriate for a 
>site's content.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 2.2 Ensure that foreground and background color combinations 
>provide sufficient contrast when viewed by someone having color 
>deficits or when viewed on a black and white screen. [Priority 2 for 
>images, Priority 3 for text].
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.2 Create documents that validate to published formal grammars.
>WCAG 3.3 Use style sheets to control layout and presentation.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 6.4 For scripts and applets, ensure that event handlers are 
>input device-independent.
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>WCAG 7.2 Until user agents allow users to control blinking, avoid 
>causing content to blink (i.e., change presentation at a regular 
>rate, such as turning on and off).
>WCAG 7.3 Until user agents allow users to freeze moving content, 
>avoid movement in pages.
>WCAG 7.4 Until user agents provide the ability to stop the refresh, 
>do not create periodically auto-refreshing pages.
>WCAG 7.5 Until user agents provide the ability to stop 
>auto-redirect, do not use markup to redirect pages automatically. 
>Instead, configure the server to perform redirects.
>WCAG 8.1 Make programmatic elements such as scripts and applets 
>directly accessible or compatible with assistive technologies 
>[Priority 1 if functionality is important and not presented 
>elsewhere, otherwise Priority 2.]
>WCAG 9.2 Ensure that any element that has its own interface can be 
>operated in a device-independent manner.
>WCAG 9.3 For scripts, specify logical event handlers rather than 
>device-dependent event handlers.
>WCAG 10.1 Until user agents allow users to turn off spawned windows, 
>do not cause pop-ups or other windows to appear and do not change 
>the current window without informing the user.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 11.1 Use W3C technologies when they are available and 
>appropriate for a task and use the latest versions when supported.
>WCAG 11.2 Avoid deprecated features of W3C technologies.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.1 Clearly identify the target of each link.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 5.6 Provide abbreviations for header labels.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 10.3 Until user agents (including assistive technologies) 
>render side-by-side text correctly, provide a linear text 
>alternative (on the current page or some other) for all tables that 
>lay out text in parallel, word-wrapped columns.
>WCAG 10.4 Until user agents handle empty controls correctly, include 
>default, place-holding characters in edit boxes and text areas.
>WCAG 10.5 Until user agents (including assistive technologies) 
>render adjacent links distinctly, include non-link, printable 
>characters (surrounded by spaces) between adjacent links.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.7 If search functions are provided, enable different types 
>of searches for different skill levels and preferences.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>WCAG 13.10 Provide a means to skip over multi-line ASCII art.
>WCAG 14.2 Supplement text with graphic or auditory presentations 
>where they will facilitate comprehension of the page.
>WCAG 14.3 Create a style of presentation that is consistent across pages.
>
>Details:
>
>3.4 Do not automatically generate 
><http://www.w3.org/TR/2000/REC-ATAG10-20000203/atag10.html#def-alt-eq>equivalent 
>alternatives. Do not reuse previously authored alternatives without 
>author confirmation, except when the function is known with 
>certainty[Priority 1]
>
>Yes. [Tool does creat "alt" text or other equivalent alternatives 
>from the file name, etc.]
>No. [Tool does not meet the above condition.]
>Not Applicable. [Tool does not allow non-text elements to be produced.]
>
>Details:
>
>3.5 Provide functionality for managing, editing, and reusing 
>alternative equivalents for multimedia objects [Priority 3]
>
>Yes. [Tool manages alternative equivalents - may include suggesting 
>text previously written for an object.]
>No. [Tool does not meet the above condition]
>Not Applicable. [Tool does not allow non-text elements to be produced.]
>
>Details:
>
>
>Guideline 4: Provide ways of checking and correcting inaccessible content
>
>4.1 Check for and inform the author of accessibility problems 
>[Relative Priority]
>
>No Checker (Does not meet Level-A). [No checking function.]
>Yes(Level-A). [Templates meets all WCAG Priority 1 checkpoints below]
>Yes(Level-AA). [Templates meets all WCAG Priority 1 and 2 checkpoints below]
>Yes(Level-AAA). [Templates meets all WCAG Priority 1, 2 and 3 
>checkpoints below]
>No (Does not meet Level-A).
>Not Applicable. [Tool does not include any templates]
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints still remain to be checked in order 
>for the tool to meet the compliance levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ....
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>WCAG 7.1 Until user agents allow users to control flickering, avoid 
>causing the screen to flicker.
>WCAG 9.1 Provide client-side image maps instead of server-side image 
>maps except where the regions cannot be defined with an available 
>geometric shape.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>WCAG 14.1 Use the clearest and simplest language appropriate for a 
>site's content.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 2.2 Ensure that foreground and background color combinations 
>provide sufficient contrast when viewed by someone having color 
>deficits or when viewed on a black and white screen. [Priority 2 for 
>images, Priority 3 for text].
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.2 Create documents that validate to published formal grammars.
>WCAG 3.3 Use style sheets to control layout and presentation.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 6.4 For scripts and applets, ensure that event handlers are 
>input device-independent.
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>WCAG 7.2 Until user agents allow users to control blinking, avoid 
>causing content to blink (i.e., change presentation at a regular 
>rate, such as turning on and off).
>WCAG 7.3 Until user agents allow users to freeze moving content, 
>avoid movement in pages.
>WCAG 7.4 Until user agents provide the ability to stop the refresh, 
>do not create periodically auto-refreshing pages.
>WCAG 7.5 Until user agents provide the ability to stop 
>auto-redirect, do not use markup to redirect pages automatically. 
>Instead, configure the server to perform redirects.
>WCAG 8.1 Make programmatic elements such as scripts and applets 
>directly accessible or compatible with assistive technologies 
>[Priority 1 if functionality is important and not presented 
>elsewhere, otherwise Priority 2.]
>WCAG 9.2 Ensure that any element that has its own interface can be 
>operated in a device-independent manner.
>WCAG 9.3 For scripts, specify logical event handlers rather than 
>device-dependent event handlers.
>WCAG 10.1 Until user agents allow users to turn off spawned windows, 
>do not cause pop-ups or other windows to appear and do not change 
>the current window without informing the user.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 11.1 Use W3C technologies when they are available and 
>appropriate for a task and use the latest versions when supported.
>WCAG 11.2 Avoid deprecated features of W3C technologies.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.1 Clearly identify the target of each link.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 5.6 Provide abbreviations for header labels.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 10.3 Until user agents (including assistive technologies) 
>render side-by-side text correctly, provide a linear text 
>alternative (on the current page or some other) for all tables that 
>lay out text in parallel, word-wrapped columns.
>WCAG 10.4 Until user agents handle empty controls correctly, include 
>default, place-holding characters in edit boxes and text areas.
>WCAG 10.5 Until user agents (including assistive technologies) 
>render adjacent links distinctly, include non-link, printable 
>characters (surrounded by spaces) between adjacent links.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.7 If search functions are provided, enable different types 
>of searches for different skill levels and preferences.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>WCAG 13.10 Provide a means to skip over multi-line ASCII art.
>WCAG 14.2 Supplement text with graphic or auditory presentations 
>where they will facilitate comprehension of the page.
>WCAG 14.3 Create a style of presentation that is consistent across pages.
>
>Details:
>
>4.2 Assist authors in correcting accessibility problems [Relative Priority]
>
>No Correcting (Does not meet Level-A). [No correcting function.]
>Yes(Level-A). [Templates meets all WCAG Priority 1 checkpoints below.]
>Yes(Level-AA). [Templates meets all WCAG Priority 1 and 2 checkpoints below.]
>Yes(Level-AAA). [Templates meets all WCAG Priority 1, 2 and 3 
>checkpoints below.]
>No (Does not meet Level-A).
>Not Applicable. [Tool does not include any templates.]
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following WCAG 1.0 checkpoints still remain to be implemented in a 
>correction assistance system in order for the tool to meet the 
>compliance levels listed:
>
>Outstanding WCAG Priority 1 checkpoints
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>WCAG 1.1 Provide a text equivalent for every non-text element ....
>WCAG 1.2 Provide redundant text links for each active region of a 
>server-side image map.
>WCAG 1.3 Until user agents can automatically read aloud the text 
>equivalent of a visual track, provide an auditory description of the 
>important information of the visual track of a multimedia 
>presentation.
>WCAG 1.4 For any time-based multimedia presentation (e.g., a movie 
>or animation), synchronize equivalent alternatives (e.g., captions 
>or auditory descriptions of the visual track) with the presentation.
>WCAG 2.1 Ensure that all information conveyed with color is also 
>available without color, for example from context or markup.
>WCAG 4.1 Clearly identify changes in the natural language of a 
>document's text and any text equivalents (e.g., captions).
>WCAG 5.1 For data tables, identify row and column headers.
>WCAG 5.2 For data tables that have two or more logical levels of row 
>or column headers, use markup to associate data cells and header 
>cells.
>WCAG 6.1 Organize documents so they may be read without style 
>sheets. For example, when an HTML document is rendered without 
>associated style sheets, it must still be possible to read the 
>document.
>WCAG 6.2 Ensure that equivalents for dynamic content are updated 
>when the dynamic content changes.
>WCAG 6.3 Ensure that pages are usable when scripts, applets, or 
>other programmatic objects are turned off or not supported. If this 
>is not possible, provide equivalent information on an alternative 
>accessible page.
>WCAG 7.1 Until user agents allow users to control flickering, avoid 
>causing the screen to flicker.
>WCAG 9.1 Provide client-side image maps instead of server-side image 
>maps except where the regions cannot be defined with an available 
>geometric shape.
>WCAG 12.1 Title each frame to facilitate frame identification and navigation.
>WCAG 14.1 Use the clearest and simplest language appropriate for a 
>site's content.
>
>Details:
>
>Outstanding WCAG Priority 2 checkpoints
>(Required to meet Relative Priority Levels AA and AAA)
>
>WCAG 2.2 Ensure that foreground and background color combinations 
>provide sufficient contrast when viewed by someone having color 
>deficits or when viewed on a black and white screen. [Priority 2 for 
>images, Priority 3 for text].
>WCAG 3.1 When an appropriate markup language exists, use markup 
>rather than images to convey information.
>WCAG 3.2 Create documents that validate to published formal grammars.
>WCAG 3.3 Use style sheets to control layout and presentation.
>WCAG 3.4 Use relative rather than absolute units in markup language 
>attribute values and style sheet property values.
>WCAG 3.5 Use header elements to convey document structure and use 
>them according to specification.
>WCAG 3.6 Mark up lists and list items properly.
>WCAG 3.7 Mark up quotations. Do not use quotation markup for 
>formatting effects such as indentation.
>WCAG 5.3 Do not use tables for layout unless the table makes sense 
>when linearized. Otherwise, if the table does not make sense, 
>provide an alternative equivalent (which may be a linearized 
>version).
>WCAG 5.4 If a table is used for layout, do not use any structural 
>markup for the purpose of visual formatting.
>WCAG 6.4 For scripts and applets, ensure that event handlers are 
>input device-independent.
>WCAG 6.5 Ensure that dynamic content is accessible or provide an 
>alternative presentation or page.
>WCAG 7.2 Until user agents allow users to control blinking, avoid 
>causing content to blink (i.e., change presentation at a regular 
>rate, such as turning on and off).
>WCAG 7.3 Until user agents allow users to freeze moving content, 
>avoid movement in pages.
>WCAG 7.4 Until user agents provide the ability to stop the refresh, 
>do not create periodically auto-refreshing pages.
>WCAG 7.5 Until user agents provide the ability to stop 
>auto-redirect, do not use markup to redirect pages automatically. 
>Instead, configure the server to perform redirects.
>WCAG 8.1 Make programmatic elements such as scripts and applets 
>directly accessible or compatible with assistive technologies 
>[Priority 1 if functionality is important and not presented 
>elsewhere, otherwise Priority 2.]
>WCAG 9.2 Ensure that any element that has its own interface can be 
>operated in a device-independent manner.
>WCAG 9.3 For scripts, specify logical event handlers rather than 
>device-dependent event handlers.
>WCAG 10.1 Until user agents allow users to turn off spawned windows, 
>do not cause pop-ups or other windows to appear and do not change 
>the current window without informing the user.
>WCAG 10.2 Until user agents support explicit associations between 
>labels and form controls, for all form controls with implicitly 
>associated labels, ensure that the label is properly positioned.
>WCAG 11.1 Use W3C technologies when they are available and 
>appropriate for a task and use the latest versions when supported.
>WCAG 11.2 Avoid deprecated features of W3C technologies.
>WCAG 12.2 Describe the purpose of frames and how frames relate to 
>each other if it is not obvious by frame titles alone.
>WCAG 12.3 Divide large blocks of information into more manageable 
>groups where natural and appropriate.
>WCAG 12.4 Associate labels explicitly with their controls.
>WCAG 13.1 Clearly identify the target of each link.
>WCAG 13.2 Provide metadata to add semantic information to pages and sites.
>WCAG 13.3 Provide information about the general layout of a site 
>(e.g., a site map or table of contents).
>WCAG 13.4 Use navigation mechanisms in a consistent manner.
>
>Details:
>
>Outstanding WCAG Priority 3 checkpoints
>(Required to meet Relative Priority Level AAA)
>
>WCAG 1.5 Until user agents render text equivalents for client-side 
>image map links, provide redundant text links for each active region 
>of a client-side image map.
>WCAG 4.2 Specify the expansion of each abbreviation or acronym in a 
>document where it first occurs.
>WCAG 4.3 Identify the primary natural language of a document.
>WCAG 5.5 Provide summaries for tables.
>WCAG 5.6 Provide abbreviations for header labels.
>WCAG 9.4 Create a logical tab order through links, form controls, and objects.
>WCAG 9.5 Provide keyboard shortcuts to important links (including 
>those in client-side image maps), form controls, and groups of form 
>controls.
>WCAG 10.3 Until user agents (including assistive technologies) 
>render side-by-side text correctly, provide a linear text 
>alternative (on the current page or some other) for all tables that 
>lay out text in parallel, word-wrapped columns.
>WCAG 10.4 Until user agents handle empty controls correctly, include 
>default, place-holding characters in edit boxes and text areas.
>WCAG 10.5 Until user agents (including assistive technologies) 
>render adjacent links distinctly, include non-link, printable 
>characters (surrounded by spaces) between adjacent links.
>WCAG 11.3 Provide information so that users may receive documents 
>according to their preferences (e.g., language, content type, etc.)
>WCAG 13.5 Provide navigation bars to highlight and give access to 
>the navigation mechanism.
>WCAG 13.6 Group related links, identify the group (for user agents), 
>and, until user agents do so, provide a way to bypass the group.
>WCAG 13.7 If search functions are provided, enable different types 
>of searches for different skill levels and preferences.
>WCAG 13.8 Place distinguishing information at the beginning of 
>headings, paragraphs, lists, etc.
>WCAG 13.9 Provide information about document collections (i.e., 
>documents comprising multiple pages.).
>WCAG 13.10 Provide a means to skip over multi-line ASCII art.
>WCAG 14.2 Supplement text with graphic or auditory presentations 
>where they will facilitate comprehension of the page.
>WCAG 14.3 Create a style of presentation that is consistent across pages.
>
>Details:
>
>4.3 Allow the author to preserve markup not recognized by the tool 
>[Priority 2]
>
>Yes. [Tool does not remove novel elements and attributes - may 
>refuse to open file]
>No. [Tool does not meet the above condition]
>Not Applicable. [Tool does allow author to import or directly author 
>markup - so tool recognizes all markup.]
>
>Details:
>
>4.4 Provide the author with a summary of the document's 
>accessibility status [Priority 3]
>
>Yes. [Tool provides a summary - ex. checker results]
>No. [Tool does not meet the above condition]
>
>Details:
>
>4.5 Allow the author to transform presentation markup that is 
>misused to convey structure into structural markup and to transform 
>presentation markup for style into style sheets [Priority 3]
>
>Yes. [Tool supports style sheets.]
>No. [Tool does not meet the above condition]
>Not Applicable. [Tool does not support structured language where 
>this is possible.]
>
>Details:
>
>
>Guideline 5: Integrate accessibility solutions into the overall 
>"look and feel"
>
>5.1 Ensure that functionality related to accessible authoring 
>practices is naturally integrated into the overall look and feel of 
>the tool [Priority 2]
>
>Yes. [Tool integrates has accessibility-related functions such as 
>checkers and prompts to the point that they look and act like all 
>the other parts of the program - they do not appear separate.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>5.2 Ensure that accessible authoring practices supporting WCAG 1.0 
>Priority 1 checkpoints are among the most obvious and easily 
>initiated by the author [Priority 2]
>
>Yes. [Tool ensures that accessible markup practices are used for all 
>one click functionality - including formatting tool bar buttons, 
>menus, etc.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>
>Guideline 6: Promote accessibility in help and documentation
>
>6.1 Document all features that promote the production of accessible 
>content [Priority 1]
>
>Yes. [Tool documents the features of the tool (prompts, checker, 
>etc.) that are involved with the production of accessible content.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>6.2 Ensure that creating accessible content is a naturally 
>integrated part of the documentation, including examples [Priority 2]
>
>Yes. [Tool does not include examples of inaccessible markup (except 
>to show inaccessible markup).]
>No. [Tool does not meet the above condition]
>
>Details:
>
>6.3 In a dedicated section, document all features of the tool that 
>promote the production of accessible content [Priority 3]
>
>Yes. [Tool has the documentation from 6.1 set aside in a single 
>section of the Help documentation.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>
>Guideline 7: Ensure that the Authoring Tool is Accessible to Authors 
>with Disabilities
>
>7.1 Use all applicable operating system and accessibility standards 
>and conventions [Relative Priority]
>
>Yes(Level-A). [Tool UI meets applicable Priority 1 Cbelow]
>Yes(Level-AA). [Tool UI meets applicable Priority 1 and 2 operating 
>system and accessibility standards and conventions below]
>Yes(Level-AAA). [Tool UI meets applicable Priority 1, 2 and 3 
>operating system and accessibility standards and conventions below]
>No (Does not meet Level-A).
>
>[This section only for Yes(Level-A), Yes(Level-AA), No] The 
>following operating system and accessibility standards and 
>conventions below related to accessible software still remain to be 
>met in order to meet the compliance levels listed:
>
>Outstanding Priority 1 Operating System and Accessibility Standards 
>and Conventions
>(Required to meet Relative Priority Levels A, AA, and AAA)
>
>Following Standards: Draw text and objects using system conventions.
>Following Standards: Make mouse, keyboard, and API activation of 
>events consistent.
>Following Standards: Provide a user interface that is "familiar" (to 
>system standards, or across platform).
>Following Standards: Use system standard indirections and APIs 
>wherever possible.
>Following Standards: Ensure all dialogs, subwindows, etc., satisfy 
>all same requirements as the main program.
>Following Standards: Avoid blocking assistive technology functions 
>(sticky/mouse keys, screenreader controls, etc.) where possible.
>Configurability: Allow control of timing, colors, sizes, 
>input/output devices and media.
>Input Device Independence: Provide Keyboard access to all functions.
>Input Device Independence: Document all keyboard bindings.
>Icons, Graphics, Sounds: Provide graphical (text) equivalents for 
>sound warnings.
>Icons, Graphics, Sounds: Provide text equivalents for images/icons.
>Icons, Graphics, Sounds: Use customizable (or removable) colors/patterns.
>Icons, Graphics, Sounds: Ensure high contrast is available (as 
>default setting).
>Icons, Graphics, Sounds: Provide text equivalents for all audio.
>Layout: Do not rely on color alone for meaning. Use color for 
>differentiation, in combination with accessible cues (text 
>equivalents, natural language, etc.).
>Layout: Position related text labels and objects consistently, and 
>in an obvious manner (labels before objects is recommended).
>Layout: Ensure default window sizes fit in screen.
>User Focus: Clearly identify the user focus (and expose it via API).
>User Focus: Unexpected events should not be caused by viewing 
>content (for example by moving the focus to a new point).
>User Focus: Allow user control of timing - delays, time-dependent 
>response, etc.
>User Focus: Allow for navigation between as well as within windows.
>Documentation: Ensure that help functions are accessible.
>Other:
>
>Details:
>
>Outstanding Priority 2 Operating System and Accessibility Standards 
>and Conventions
>(Required to meet Relative Priority Levels AA and AAA)
>
>Input Device Independence: Provide logical navigation order for the 
>keyboard interface.
>Input Device Independence: Avoid repetitive keying wherever possible.
>Icons, Graphics, Sounds: Use icons that are resizeable or available 
>in multiple sizes.
>Layout: Group related controls.
>Layout: Allow for window resizing (very small to very large).
>Documentation: Provide documentation for all features of the tool.
>Other:
>
>Details:
>
>Outstanding Priority 3 Operating System and Accessibility Standards 
>and Conventions
>(Required to meet Relative Priority Level AAA)
>
>Configurability: Allow users to create profiles.
>Configurability: Allow users to reshape the user interface - 
>customize toolbars, keyboard commands, etc.
>Input Device Independence: Provide customizable keyboard shortcuts 
>for common functions.
>Input Device Independence: Provide mouse access to functions where possible.
>Icons, Graphics, Sounds: Allow sounds to be turned off.
>Other:
>
>Details:
>
>7.2 Allow the author to change the presentation of editing views 
>without affecting the document markup [Priority 1]
>
>Yes. [Tool has some means of changing the size and colours in the 
>authoring view - this may simply be support for system wide display 
>settings.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>7.3 Allow the author to edit all properties of each element and 
>object in an accessible fashion [Priority 1]
>
>Yes. [Tool has property editing functions that have proper (not just 
>iconic) labels and relatively straightforward keyboard navigation.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>7.4 Ensure that the editing view allows navigation via the structure 
>of the document in an accessible fashion [Priority 1]
>
>Yes. [Tool has a some ability to move editing focus directly from 
>element to element - "next element" or "next element of type", etc.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>7.5 Enable editing of the structure of the document [Priority 2]
>
>Yes. [Tool allows author access to all the properties of the 
>structural markup - headers, frames, etc.]
>No. [Tool does not meet the above condition]
>
>Details:
>
>7.6 Allow the author to search within editing views [Priority 2]
>
>Yes. [Tool has a "search" or "find" function in the editing views]
>No. [Tool does not meet the above condition]
>
>Details:



