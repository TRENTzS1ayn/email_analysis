docno="lists-059-3743373"
received="Tue May  2 14:19:17 2000"
isoreceived="20000502181917"
sent="Tue, 2 May 2000 11:18:35 -0700 "
isosent="20000502181835"
name="Heather Swayne"
email="hswayne@microsoft.com"
subject="WAI 4/25/00 authoring tools group conference call meeting notes"
id="3C3175FCC945D211B65100805F1580890D3D21BE@RED-MSG-07"
charset="ISO-8859-1"
expires="-1"


To:"'w3c-wai-au@w3.org'"<w3c-wai-au@w3.org>

******Please note I'm writing these meeting notes without having read any
traffic on this list server since last week's conference call *****
Because Charles' computer crashed, last week's conference call participants
were each asked to write up a meeting summary.
 
Main discussion was over authoring tools guideline 3.1, and the definition
of prompting.
 
I believe everyone shares the objective to get users to input ALTtext for
images, however there was definite disagreement over how this objective
should be accomplished.  I remember Charles' opinions and most clearly ---
~"at some point during the authoring process (from when an image is
inserted, to when the page is published to the Web) the author must be
presented with the dialog that will allow the user to directly input the
alternative textual information."  To give authoring tools some leeway, and
allow them to comply with authoring tools guideline 5, the suggestion for an
accessibility option was introduced.  This option could be off by default,
and would allow the author to define how intrusive they want the application
to be (i.e. no accessibility related warnings, warnings / alerts about
potential accessibility problems, and forced prompts).  Any tools that
followed this suggestion would not be single-A compliance "out-of-the-box",
unless the accessibility option was set to force prompts.
 
A second voice of opinions indicated that warning or alerting the user of
these types of accessibility problems would be sufficient.  Authoring tools
have a history of supporting their users in easily correct problems that
they have reported.  The example given here was accessibility error
reporting tool.
 
I still strongly believe that small modifications of users behavior are the
only way that a majority of users learn new features or methods, and that is
best understood by the individual authoring tools development teams.
Prompting the user will only frustrate them, and cause them to turn off all
related features (moving from forced prompts to no warnings - and is not a
win).  
 
I personally feel that forcing the user to go through an accessibility
checker (that warns/alerts the user to all accessibility related issues) is
more beneficial to the WAIs overall goal of producing accessible HTML.
 
Heather Swayne
Program Manager
Microsoft Accessibility and Disabilities Group
Microsoft Office Liaison
 



