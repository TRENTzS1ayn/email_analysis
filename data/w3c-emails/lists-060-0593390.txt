docno="lists-060-0593390"
received="Fri Jan 25 15:02:35 2002"
isoreceived="20020125200235"
sent="Fri, 25 Jan 2002 15:02:06 -0500"
isosent="20020125200206"
name="Jan Richards"
email="jan.richards@utoronto.ca"
subject="Re: Functionality Categories"
id="3C51B9BE.5B5EC24B@utoronto.ca"
charset="us-ascii"
inreplyto="Functionality Categories"
expires="-1"


To:"w3c-wai-au@w3.org"<w3c-wai-au@w3.org>

Hi all,

I think that part of the problem that we are having with the authoring
functionality categories is that we are trying to stretch them over two
sets of guidelines: ATAG and WCAG which are barely concealed as ATAG
"quasi-techniques" for Relative Priority ATAG checkpoints.
Quasi-techniques are just WCAG checkpoint with "Generate markup that" or
"Ensure template have" tacked on the front. There are several problems
with this:

1. The original WCAG checkpoints are modified.
2. Nothing by the modification that is not in the original ATAG
checkpoint (i.e. "Generate markup that complies with WCAG" or "Ensure
template comply with WCAG").
3. Although we may categorize these quasi-techniques as relevant to
programming tools, etc. they often do not quite fit. For example, when
applied to prog. tools T0023 ("Generate documents that validate to
published formal grammars") should read "Generate code that *generates*
documents that validate to published formal grammars". The difference is
small on the surface but the implications are very different.

Therefore, I think we should:

1. Replace the ATAG quasi-techniques with the *relevant* subset of WCAG
checkpoints.
2. Move the categorizations from the WCAG checkpoints to higher level
techniques that address the specifics of the different types of tools.
Afterall, what techniques are we really going to write to tell authoring
tools how to generate documents that validate to published formal
grammars? It's really up to them.
3. Where we really do have techniques (i.e. as we do for many of the
WCAG checkpoints) under 3.2, we should categorize the technique, not the
WCAG checkpoint.
4. Where techniques will apply in different ways to our different
authoring functionality categories, we should write multiple versions of
the technique (each applicable to one or two categories). 

Perhaps this should allow us to keep the 5 category system that we have
now.

Looking down the road, I would like to see more "break-out" technique
modules (such as the one we have now on prompting at
http://www.w3.org/WAI/AU/WD-ATAG10-TECHS-20011124/appa). Other modules
might include: "Checking and Repairing", "Building in Structure", etc.
These could be sub-divided into text-based, WYSIWYG and object-based
sections in order to take into account those important distinctions.


Cheers,
Jan

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

Jan Richards
UI Design Specialist
Adaptive Technology Resource Centre (ATRC)
University of Toronto

jan.richards@utoronto.ca
Phone: (416) 946-7060
Fax: (416) 971-2896

/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\



