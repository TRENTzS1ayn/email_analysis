docno="lists-060-15795303"
received="Fri Nov  6 14:34:14 1998"
isoreceived="19981106193414"
sent="Fri, 06 Nov 1998 14:34:09 -0500"
isosent="19981106193409"
name="Leonard R. Kasday"
email="kasday@acm.org"
subject="Accessible HTML slideshows"
id="3.0.32.19981106143401.0085cd60@pop3.concentric.net"
charset="us-ascii"
expires="-1"


To:w3c-wai-eo@w3.org

FYI this is the very simple slidemaker tool that Raman created. Requires
that you run on a machine with perl installed.

Len

 

Return-Path: <raman@Adobe.COM>
Errors-To: <raman@Adobe.COM>
Date: Fri, 10 Jul 1998 08:33:17 -0700 (PDT)
To: "Leonard R. Kasday" <kasday@acm.org>
Cc: w3c-wai-ig@w3.org
Subject: Accessible HTML slideshows
References: <3.0.5.32.19980701212133.0084f5d0@pop3.concentric.net>
Reply-To: raman@Adobe.COM
From: "T. V. Raman" <raman@Adobe.COM>
X-Phone: 1 (408) 536-3945
X-Fax: 1(408) 537-4042

Hi Len--

Here is a perl script that does what you want.
--I created it a while ago to author my own slideshows in
HTML--

Simply author your separate html pages, create a file called
toc in which you list the files (one per line) in the order
you want them linked, and let perl do the rest of the work
for you.
I'm posting this so you 
  dont inflict powerpoint excreted HTML on us!)
-------------------------------------------------------
#!/usr/local/bin/perl #$Id: navigation.pl,v 1.3 1998/06/23
23:30:59 raman Exp $ #Create navigation panel for linked
documents #Usage: perl navigation-panel.pl < toc sub
getNavigationPanel { my ( $next, $prev, $contents) =@_;
$previous = $contents unless defined ($previous); $next =
$contents unless defined ($next); my $n = "<A
HREF=\"$next\">Next</A> "; my $p = "<A
HREF=\"$prev\">Previous</A> "; my $c = "<A
HREF=\"$contents\">Contents</A> "; return $n.$p.$c; }

#Read in the ordered list of files 
#and update each file to have a navigation panel at top and
#bottom.

my @toc = <>;
chomp (@toc);
my $contents = $toc[0];
my $i;
foreach $i (0..$#toc){
    my $this = $toc[$i];
    my $next =$toc[$i+1];
    my $prev = $toc[$i-1] if ($i > 0);
    my $panel = getNavigationPanel ( $next, $prev, $contents);
    rename ($this,  $this.".bak");
    open (INPUT, "$this.bak") or die "Could not read
$this.bak $!";
open (OUTPUT, ">$this") or die "Could not open $this for writing $!";
    while (<INPUT>) {
        s@<body>.*$@<body>$panel@;
        s@^.*</body>$@<P>$panel</body>@;
        print OUTPUT $_;
    }
    close (INPUT);
    close (OUTPUT);
}

-- 
Best Regards,
--raman

      Adobe Systems                 Tel: 1 (408) 536 3945   (W14-612)
      Advanced Technology Group     Fax: 1 (408) 537 4042 
      (W14 129) 345 Park Avenue     Email: raman@adobe.com 
      San Jose , CA 95110 -2704     Email:  raman@cs.cornell.edu
      http://labrador.corp.adobe.com/~raman/        (Adobe Intranet)
      http://cs.cornell.edu/home/raman/raman.html    (Cornell)
----------------------------------------------------------------------
    Disclaimer: The opinions expressed are my own and in no way should be
taken
as representative of my employer, Adobe Systems Inc.
____________________________________________________________

-- 

-------
Leonard R. Kasday
Institute on Disabilities/UAP at Temple University, Philadelphia PA
email:     kasday@acm.org
telephone: (215} 204 2247



