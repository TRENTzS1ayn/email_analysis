docno="lists-060-3014068"
received="Thu May  8 17:27:39 2003"
isoreceived="20030508212739"
sent="Thu, 8 May 2003 14:31:44 -0700"
isosent="20030508213144"
name="Kynn Bartlett"
email="kynn-edapta@idyllmtn.com"
subject="Review of ATAG 2.0 Public Draft (3/14/03)"
id="774A7BEA-819C-11D7-B154-000393D9E692@idyllmtn.com"
charset="US-ASCII"
expires="-1"

To:w3c-wai-au@w3.org




This is a review of ATAG 2.0 (Working draft 14 March 2003,
http://www.w3.org/TR/2003/WD-ATAG20-20030314/ ) based on attempting
to apply the draft version in an analysis of the Kung-Log authoring
tool, a shareware software program on Mac OS X for Web log authoring.
(See http://www.maccessibility.com/archive/000544.php for the full
analysis and recommendations.)

Several issues came up with regards to the guidelines draft during this
analysis process, and those will be addressed in the order that they
appear in the document.  (Point on document structure:  The use of
outline numbers such as 1.1, 1.4, etc may cause confusion with 
checkpoints
which are similarly numbered.)

Table of Contents:

There are no links in the TOC to document 1.4, 1.5, 1.6.


Introduction (document 1.1):

It should be noted here that the definition of an authoring tool _does_
cover the case of Kung-Log.

Priorities (document 1.4) and Conformance (document 1.5):

These priorities are defined by single words and are hard to understand.
It would be better to adopt something structured like WCAG 2.0's
levels for compliance.

Accessible Authoring Practices (document 1.6):

These practices are not well-defined within the W3C.  When we say
"support accessible authoring practices" there is little sense of what
that means.

Audience and Use:

The audience for these guidelines should be addressed, as well as what
knowledge is assumed by the reader.  Suggest the following:

      The primary audience for this document is the software developer
      involved in creating authoring tools.  Familiarity with applicable
      accessibility specifications for the appropriate platform is
      assumed, as is familiarity with the Web Content Accessibility
      Guidelines.

      In addition to serving as a guide and checklist during the software
      development process, the Authoring Tool Accessibility Guidelines
      are also designed to be used by third parties to evaluate the
      accessibility of existing tools.

Is this what we want to say?


On to the Guidelines and Checkpoints themselves:

Checkpoint 1.1:

Apple's Mac OS X developer guidelines for accessibility do not include 
the
distinctions required in order to break this down into priorities one,
two, and three.  This makes the checkpoint very hard to evaluate, as
a software developer would not only be required to know the Apple
guidelines but also apply an arbitrary checkpoint level -- something 
which
is a matter for discussion even among working groups.

The priority assignments here need re-examination.

Checkpoint 1.2:

Does an authoring tool, such as Kung-Log, which only provides text level
editing meet this requirement for the content?

If this is a special case, should it be a separate checkpoint from 1.1?
If so why?

Checkpoint 1.3:

Some documents may not have structure, if they are virtual documents
within an authoring system, as with Kung-Log.

Checkpoint 1.4:

Kung-Log is a source editor, and thus the editing environment is always
different from the appearance of that content.  Does this mean that this
checkpoint does not apply?

Am I correct in assuming that the "Preview" function qualifies as well?

Checkpoint 1.5:

This is a confusing checkpoint.  It seems to assume a certain kind of
editing which has no meaning in certain contexts, as with Kung-Log.

Checkpoint 1.6:

Does the tool fail automatically if it does not allow a match against
text-only vs. markup?


Checkpoint 2.1:

What does this mean?

I'm serious.  I have no idea what "use" means in this context.  I don't
know how someone knows whether or not they have satisfied this 
checkpoint.
The success criteria -- including "inform the author" -- seem unrelated
and random, making it even harder to know when "use" has been satisfied.

As currently written, this checkpoint seems to have no specific meaning.
It should be rewritten into several checkpoints or incorporated into
existing checkpoints; as it is now, it is too vague to be useful.

Checkpoint 2.2:

See, this is a better checkpoint.  Perhaps 2.1 simply needs to be 
success
criteria for this checkpoint rather than a separate checkbox.


Checkpoint 3.1:

Dependence on WCAG (at the relative priority level especially) raises 
the
question of those checkpoints in WCAG which cannot be measured by
machine tests, such as "clear and simple language" or the legitimacy
of alt text on images.

Does ATAG 3.1 require that an authoring tool prompt the user to meet
the "clear and simple language" requirement of WCAG?  If so, how should
this be accomplished?  If not, then which WCAG checkpoints are covered
by ATAG 3.1?

Does ATAG 3.1 require that an authoring tool assist the user in 
providing
an appropriate alt text attribute?  If so, how should this be 
accomplished?
If not...?

Checkpoint 3.2:

Is it required that the authoring tool must also function as an 
evaluation
and repair tool?  Or is it sufficient, as I suggested with Kung-Log, to
provide a hook into an existing analysis tool?

Checkpoint 3.4:

This was particularly confusing to the developer of Kung-Log; he 
suggested
that the point of his checkpoint was lost on him.

As a priority 1 checkpoint, this must always be done -- but it is 
dependent
on the idea that bogus alt text will be created.  Not all software 
creates
these alternatives, especially as the requirement to provide such
functionality is only a priority 3 checkpoint (see ATAG 3.5).  
Therefore,
perhaps this simply needs to be a success criteria for 3.5 instead of
a separate, priority 1 checkpoint.

Checkpoint 3.8:

I don't understand the "relative priority" here.  WCAG checkpoints are 
not
"process" and so there is no equivalency of checkpoints which can be
imported for this rule.


Checkpoint 4.1:

This seems like a success criteria for checkpoints 3.1, 3.2, 3.5, and 
3.6.
This is a priority one checkpoint, but those checkpoints are, 
respectively,
relative priority, relative priority, priority 3, and priority 3.  This
is confusing.

Checkpoint 4.2:

I'm not sure how well the phrasing of this checkpoint's dependency 
meshes
with either WCAG 1.0 or WCAG 2.0.  It seems hard to understand -- is it
a priority 2 ATAG checkpoint to meet the minimum requirements for _all_
WCAG checkpoints and make them easy to use?

Confusing.


Glossary:

Where's the definition of the following terms referring to people?

* Author
* Developer
* User



--
Kynn Bartlett <kynn@idyllmtn.com>                     http://kynn.com
Chief Technologist, Idyll Mountain                http://idyllmtn.com
Author, CSS in 24 Hours                       http://cssin24hours.com
Inland Anti-Empire Blog                      http://blog.kynn.com/iae
Shock & Awe Blog                           http://blog.kynn.com/shock



