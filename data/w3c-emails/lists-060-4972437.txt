docno="lists-060-4972437"
received="Fri Dec 26 14:11:59 2003"
isoreceived="20031226191159"
sent="Fri, 26 Dec 2003 13:11:55 -0600"
isosent="20031226191155"
name="Phill Jenkins"
email="pjenkins@us.ibm.com"
subject="Re: Classification of AT in ATAG2"
id="OFCCA0E469.2CF9B8F6-ON86256E08.0066EA0E-86256E08.00699C32@us.ibm.com"
charset="US-ASCII"
inreplyto="Classification of AT in ATAG2"
expires="-1"

To:w3c-wai-au@w3.org







Jason wrote:
>It is better to make guidelines conditional on the characteristics of
>software or content, rather than to design them around a
>classification thereof. The main reason for this preference is that
>such classifications tend to become artificial and problematic as
>technologies and practices evolve. Further, the purposes of guidelines
>are better served not by trying to categorize, but by clearly stating
>and documenting the preconditions under which individual guidelines or
>success criteria apply. This way, the guidelines continue to work when
>conventional categories break down.

I understand your explanation to not try to create categories or to use
classification that eventually breakdown.  However, I think there is also a
problem in creating the "preconditions under which individual guidelines or
success criteria apply."  I think the problem, or need, is to better define
the boundary between the tool, the content, and the browser and the overlap
between the guideline documents.  WCAG applies to the content, and ATAG
applies to the tool, but who is responsible when the content is the tool or
is affected by the tool?  For example, when pseudo content is entered by
the developer for the purpose of giving instructions to the tool regarding
the eventual content that is created and delivered to the browser - is that
pseudo content part of WCAG's guidelines, or ATAG, or both?  Think of a Web
services scenario where the traditional roles of author, tool, and content
changes several times throughout out the life cycle.  A software developer
creates a tool called a portal server that facilitates the delivery of web
services (content and tools) to application developers who create portal
applications that are used by end users that also have the option (or
responsibility) to edit and customize the tool and content independent of
the browser and/or AT customization.  We have been very diligent in
defining the guidelines for content, authoring tool, and browser, but
sometimes there are gray areas, or preconditions, that have yet to be
clarified across all three guidelines.  ATAG was designed primarily as
guidance to the developers of the tool or software.  And WCAG is inherently
part of ATAG because the resulting content produced by the tool needs to
comply, it's just *when* does the content need to comply? - at each stage
in it's life cycle, only when real people come in contact with the content
or tool's user interface, or only when it is finally delivered to the end
user?  Since many of us consider the full life cycle in WAI guidelines, the
UAAG guidelines come into the equation because some of the responsibility
relies on the browser (and also implied is the end user).

I think more guidance may be needed to direct developers (especially in
complex situations) to use and understand the guidelines in all three
documents.  We as WAI members need to also review all three sets of
guidelines to insure they in fact do not conflict and do in fact provide
all the preconditions needed to understand them correctly.  The developers
of tools and content need to understand all three when determining if they
comply or if they need to comply.

Regards,
Phill Jenkins,  IBM Accessibility Services
11501 Burnet Rd,  Austin TX  78758    http://www.ibm.com/able



