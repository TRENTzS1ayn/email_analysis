docno="lists-060-6748018"
received="Fri Mar 26 08:40:16 2004"
isoreceived="20040326134016"
sent="Fri, 26 Mar 2004 14:32:01 +0100"
isosent="20040326133201"
name="Roberto Scano - IWA/HWG"
email="rscano@iwa-italy.org"
subject="Re: The Problem of Web Based Authoring (revisited)"
id="018401c41337$d13b25e0$0200a8c0@iwars"
charset="iso-8859-1"
inreplyto="NBBBJPNFCLNLAADCLFJBKEMHFPAA.gdeering&#64;acslink.net.au"
expires="-1"


To:<gdeering@acslink.net.au>,"W3C WAI AU"<w3c-wai-au@w3.org>



----- Original Message ----- 
From: "Geoff Deering" <gdeering@acslink.net.au>
To: "W3C WAI AU" <w3c-wai-au@w3.org>
Sent: Monday, March 08, 2004 4:42 AM
Subject: The Problem of Web Based Authoring (revisited)


I am also afraid to say that I feel there is a need for a third type of
category (1. Software Accessibility 2. Web Content Accessibility
Guidelines
3. Web Application Accessibility), the problem is that *every" "Web
Based
Application Tool/ CMS Interface" I have seen does not comply with WCAG1
Priority 1.  All of them rely on scripts (Java, JavaScript), many rely
on
popups for certain functions of the user interface, etc.  I just cannot
see
any of them seeing the benefits of transferring all scripting to the
server
side and trying to become ATAG compliant.  They are all script
dependant.

Roberto:
This is true, checkpoint 6.3 said this.
http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-scripts

but WCAG can also ask, in checkpoint 8.1, that in this case sets as
Priority 1:
"Make programmatic elements such as scripts and applets directly
accessible or compatible with assistive technologies"
So, at this point, the best solution is to use <object> element with
objects that are itself accessible.

I think that we don't need a third type of category because at now we
have:

1) User Agent Accessibility Guidelines for accessible application that
let to render web contents
2) Authoring Tools Accessibility Guidelines for accessible application
that let to create accessible contents
3) Web Contents Accessibility Guidelines for accessible contents

I think that at this point, for CMS solutions and for "web application"
the WCAG checkpoint 8.1 could refer to ATAG guidelines...



Geoff:
I did 2 days of Interwoven Teamsite training a few weeks back, and I
just
could not see any reason why they would try and comply to the letter of
these guidelines.  What is the benefit to any of the CMS developers to
follow ATAG, because it will surely kill their product in the general
market, it will put them so far behind their competitors.

Roberto:
I think that this is a commercial problem for the plugin/cms developers
that must be resolved inside these companies. For eg. I'm personally
following the new characteristics of XStandard.com plugin (that needs to
have the implementation for grant access independently from the input
interface) and I'm seeing that the developing of a good CMS based with
plug-ins could be really done.



