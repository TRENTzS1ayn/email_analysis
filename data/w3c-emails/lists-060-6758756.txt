docno="lists-060-6758756"
received="Mon Mar 29 01:49:10 2004"
isoreceived="20040329064910"
sent="Mon, 29 Mar 2004 16:50:55 +1000"
isosent="20040329065055"
name="Geoff Deering"
email="gdeering@acslink.net.au"
subject="RE: The Problem of Web Based Authoring (revisited)"
id="NBBBJPNFCLNLAADCLFJBKELBGBAA.gdeering@acslink.net.au"
charset="iso-8859-1"
inreplyto="018401c41337$d13b25e0$0200a8c0&#64;iwars"
expires="-1"

To:"Roberto Scano - IWA/HWG"<rscano@iwa-italy.org>
Cc:"W3C WAI AU"<w3c-wai-au@w3.org>



Hi Roberto,

I'm sorry I have been to preoccupied with other things to give true time to
this and WAIGL at present, although I did print off the latest docs hoping
to find time to read them (will endeavour again at the end of this week).

I did start a reply to you and Jan's original reply, but it ended up too
verbose, and I have been meaning to re-edit it, complete it and send it.

But I have also found that the more I delve into "all" the ATAG docs, I find
that this issues is not as poorly address as my original impression first
was (and I think this is an important point, we have to do our best to bring
these issues to prominence in the main document).  I do think that somehow
this issue does need some address and bought forward into the main document,
but I'd have to have time to go through it to suggest how.

I think for the majority of developers, client side scripting is a real
pain, because even when implemented according to standards, there are always
user agent issues, bugs, poor implementation, etc.  I am not an expert in
using assistive technologies, but from what I can gather, many of them don't
follow and implement standards either.

As a developer, I have done a lot of work in the past on very advanced
client side scripting, but when given the choice I leave it out completely
because it causes too many issues.  But this is not the road most people
want to follow, even those who want to build usable and accessible
interfaces, but the issues with user agents just makes this area a headache.
You can see that a lot projects just don't bother because this area is a
mess (my opinion).

There really needs to be an exceptional reference on the net for the ins and
outs of client-side scripting.  I'll be getting my own dedicated server
running soon, so maybe a wiki in that area may be the way to go to develop a
real resource.

It also seems to me that some of the better CMS Frameworks are trying to use
good editors and tidy on the server side to address these problems.

Hope to add more early next week.

Apologies, as last few weeks I have not had the time to read the discussion.

Geoff

> -----Original Message-----
> From: w3c-wai-au-request@w3.org [mailto:w3c-wai-au-request@w3.org]On
> Behalf Of Roberto Scano - IWA/HWG
> Sent: Saturday, 27 March 2004 12:32 AM
> To: gdeering@acslink.net.au; W3C WAI AU
> Subject: Re: The Problem of Web Based Authoring (revisited)
>
> ----- Original Message -----
> From: "Geoff Deering" <gdeering@acslink.net.au>
> To: "W3C WAI AU" <w3c-wai-au@w3.org>
> Sent: Monday, March 08, 2004 4:42 AM
> Subject: The Problem of Web Based Authoring (revisited)
>
>
> I am also afraid to say that I feel there is a need for a third type of
> category (1. Software Accessibility 2. Web Content Accessibility
> Guidelines
> 3. Web Application Accessibility), the problem is that *every" "Web
> Based
> Application Tool/ CMS Interface" I have seen does not comply with WCAG1
> Priority 1.  All of them rely on scripts (Java, JavaScript), many rely
> on
> popups for certain functions of the user interface, etc.  I just cannot
> see
> any of them seeing the benefits of transferring all scripting to the
> server
> side and trying to become ATAG compliant.  They are all script
> dependant.
>
> Roberto:
> This is true, checkpoint 6.3 said this.
> http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-scripts
>
> but WCAG can also ask, in checkpoint 8.1, that in this case sets as
> Priority 1:
> "Make programmatic elements such as scripts and applets directly
> accessible or compatible with assistive technologies"
> So, at this point, the best solution is to use <object> element with
> objects that are itself accessible.
>
> I think that we don't need a third type of category because at now we
> have:
>
> 1) User Agent Accessibility Guidelines for accessible application that
> let to render web contents
> 2) Authoring Tools Accessibility Guidelines for accessible application
> that let to create accessible contents
> 3) Web Contents Accessibility Guidelines for accessible contents
>
> I think that at this point, for CMS solutions and for "web application"
> the WCAG checkpoint 8.1 could refer to ATAG guidelines...
>
>
>
> Geoff:
> I did 2 days of Interwoven Teamsite training a few weeks back, and I
> just
> could not see any reason why they would try and comply to the letter of
> these guidelines.  What is the benefit to any of the CMS developers to
> follow ATAG, because it will surely kill their product in the general
> market, it will put them so far behind their competitors.
>
> Roberto:
> I think that this is a commercial problem for the plugin/cms developers
> that must be resolved inside these companies. For eg. I'm personally
> following the new characteristics of XStandard.com plugin (that needs to
> have the implementation for grant access independently from the input
> interface) and I'm seeing that the developing of a good CMS based with
> plug-ins could be really done.
>
>
>
>



