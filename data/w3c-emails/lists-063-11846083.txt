docno="lists-063-11846083"
received="Thu Dec 14 15:47:10 2000"
isoreceived="20001214204710"
sent="Thu, 14 Dec 2000 15:47:34 -0500"
isosent="20001214204734"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="Re: Mini Market Survey for Evaluation Description Language"
id="200012142053.PAA736079@smtp1.mail.iamworld.net"
charset="us-ascii"
inreplyto="4.3.2.7.2.20001214102145.00b40f00&#64;pop3.concentric.net"
expires="-1"


To:"Leonard R. Kasday"<kasday@acm.org>,w3c-wai-er-ig@w3.org

[slightly off topic warning]  What I offer here is not a user perspective.  I
have pinged some of my ranking user friends for input on that.  But we need to
have some bottom-up [technoPush] clarification on EDL vs. EARL, too.

What we need, on order to share and merge evaluation results, is a language
that the results all can speak in.  The critical resource for repair is a
library.  These have to be interoperable but they should not be treated the
same.  And we don't need to be investing in the more heavyweight task of a
language to fully specify repairs.  We do want an interoperable medium for
expressing repair resources that populate a growing library.

My translation of what Tim Springer said in the F2F is that "accessibility
repair doesn't call for a standard _repair language_."  The repairs take place
in the context of the content developer's infrastructure and this is not
standardized nor should we invest the effort to try to make it so.  The repair
session wants to be able to import evaluation results and repair templates or
patch kits for transforming the content under repair.  

The units in the repair library are analogous to the individual patch objects
in an innertube repair kit.  How many of you remember these?  The library,
like
the tube patch kit, contains a collection of chunks each of which is a
combination of resources that go into the repaired system, and possibly
process
infrastructure (e.g. the shield over the glue side of the patch) needed to
support the clinical application of the [patch].

Al 



