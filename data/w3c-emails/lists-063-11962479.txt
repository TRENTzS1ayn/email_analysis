docno="lists-063-11962479"
received="Sun Dec 17 12:02:12 2000"
isoreceived="20001217170212"
sent="Sun, 17 Dec 2000 17:00:37 -0000"
isosent="20001217170037"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="EARL User Scenarios / The Future"
id="004701c0684a$e45de040$71ac89d4@z5n9x1"
charset="iso-8859-1"
expires="-1"


To:<w3c-wai-er-ig@w3.org>
Cc:"Leonard R. Kasday"<kasday@acm.org>

> (@@combine these scenarios with Overview?
> Or reference from overview?)
>  - http://www.w3.org/WAI/ER/IG/earl.html

I think it's a good idea that Len started to create a list (read: database)
of the User Scenarios, especially because these will create the scope for
EDL. However, it is also important to note it's extensibility. Len noted:-

> EARL would initially be a means for expressing in a machine
> readable form (almost certainly XML, and very probably RDF):
> results of evaluating web pages and web sites against the Web
> Accessibility Content Guidelines

Although on the surface it would appear to be O.K. to firstly define the
language as a framework for producing ADL, I think that the short term
benefits would lead to long term defecits, i.e. if EDL is scoped firstly on
creating ADL, any extensions that we have to add to make it "the all
encompassing evaluation description language" would be ad hoc in nature,
and may make EDL less usable.
In other words, if we start with a more general abstract scope for EDL,
"evaluation description framework", and *then* add in the finer details
such as points for ADL, then I think that would benefit the language in the
long run. In the short term that would make the process slower and a bit
too "abstract", but in the long run it will improve the foundations of the
language itself. That was the problem with HTML: they thought "what do we
want it to do now?", rather than "what will everyone want to use it for in
the future?". Hopefully in our case both methods will produce the same
results, but there is always an element of uncertainty...proceed with
caution!

EARL? Extending the framework to include repair details would be no problem
at all. We just write anything new into the EDL Schema (ugh, big @@ create
a namespace and schema for EDL!!! I'm using http://infomesh.net/edl/1.0/ as
a namespace in the examples...), and it will automatically be added to the
RDF data model (if RDF is the way to go).

As to documenting EDL, we have Len's User Scenarios, the EDL Overview, and
the ERT IG discussions. Somehow we need to coordinate these because things
seem to be flying off at tangents (i.e. we seem to be creating about 5
different versions of EDL at the same time with no definitives as of yet).
I'm not saying that we need to set EDL/EARL in stone *right  now*, I just
mean we need to agree on the few basic things so we can move onto the next
step:-

   1. What are we calling it (!)
   2. What will it do?
   3. What will it be?

Once we have those issues resolved, we can all push in the same direction,
and achieve great things :-)

Kindest Regards,
Sean B. Palmer
http://www.mysterylights.com/sbp/
"Perhaps, but let's not get bogged down in semantics."
   - Homer J. Simpson, BABF07.



