docno="lists-063-2252352"
received="Tue Oct  6 10:28:33 1998"
isoreceived="19981006142833"
sent="Tue, 6 Oct 1998 10:28:31 -0400 (EDT)"
isosent="19981006142831"
name="Al Gilman"
email="asgilman@access.digex.net"
subject="Re: repair option: scripted static information"
id="199810061428.KAA22080@access1.digex.net"
charset="US-ASCII"
inreplyto="199810060723.JAA05505&#64;www47.inria.fr"
expires="-1"


To:dd@w3.org
Cc:w3c-wai-er-ig@w3.org

to follow up on what Daniel Dardailler said:
>  
> > The repair tool concept is a tool that would interpret scripts
> > and move static information into the HTML from the script.
> 
> To me, a "repair" tool is one that is used by the page author (or
> maintainer), so what you describe is a possible repair tool, although
> I'm not sure it is feasible (i.e. how does it determine the "onload"
> leads to idempotent/unvariable bits)

I was thinking more from a data-flow perspective.  Not that the script
as a unit would be determined to be input-free, but that each output
would be inspected by data-flow traceback, and in that way input-free
information written to the HTML by the script could be isolated and
just written to the script.

> What's certainly feasible is a "proxy" tool, doing the "onload" (and
> all other non-interactive events) dynamically on behalf of the final
> user-agent.

Now your're talking.

Al



