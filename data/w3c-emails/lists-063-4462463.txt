docno="lists-063-4462463"
received="Tue Feb  9 11:02:52 1999"
isoreceived="19990209160252"
sent="Tue, 09 Feb 1999 11:03:50 -0500"
isosent="19990209160350"
name="Leonard R. Kasday"
email="kasday@acm.org"
subject="making applets accessible"
id="3.0.32.19990209110345.007061b0@pop3.concentric.net"
charset="us-ascii"
expires="-1"


To:w3c-wai-er-ig@w3.org

There are a lot of applets on the web that could be made more accessible.
For example, scrolling tickers on the web, where text goes scrolling by.
You can sometimes click on items to take you to an appropriate place.

Speaking as a sighted user, I really dislike these and hardly ever bother
reading them.  For blind users they can get even worse... impossible to
read... may even monopolize attention of screenreader.

A typical ticker is an applet with params like

<param name=msg0
value="Editor sought for Faculty Herald ***
\\http://www.temple.edu/news/FHeditor.html">

Rather than do a custom parser for this particular variety of a ticker, how
about an algorithm that simply

1. Lists all names and params of applet
2. any values which "look like" urls, or any portions of applets that "look
like" urls, would be converted to links
What does "look like" mean?  In this case, it's easy...  anything that
starts with http, and/or ends with .html.   For links that go to
directories, so there's no syntactical clue, may not be possible.


Another example is the ticker at http:www.att.com.  It has params like

 <!--ITEM-1--> 
<PARAM name="TitleText1" value="Today's News">
<PARAM name="TitleBg1" value="CC0000">
<PARAM name="MsgText1" value="New AT&amp;T offer breaks down boundaries
between wireless and wireline">
<PARAM name="MsgFg1" value="000000">
<PARAM name="TURL1" value="http://www.att.com/press/item/0,1193,323,00.html ">
<PARAM name="URL1" value="http://www.att.com/press/item/0,1193,323,00.html ">
<!--/ITEM-1--> 
<!--ITEM-2--> <PARAM name="TitleText2" value="Today's News">
<PARAM name="TitleBg2" value="CC0000">
<PARAM name="MsgText2" value="AT&amp;T unveils sweeping array of business
data, IP services">
<PARAM name="MsgFg2" value="000000">
<PARAM name="TURL2" value="http://www.att.com/press/item/0,1193,319,00.html">
<PARAM name="URL2" value="http://www.att.com/press/item/0,1193,319,00.html">

Now in this case the params for a particular item are all grouped together
but that doesn't have to be the case.  The key is a naming convention where
tag names get repeated, except for the last character, which is a number. I
see this convention a lot.

 So the next rule is:

3. Look for this pattern: groups of names which are all the same except for
last character which is a number.  read parameters in that order.

A simpler version of this is to simply sort according to the terminating
number, being sure that e.g. 10 cames *after* 1

Other rules

4. If a value looks like a color and colors are same for all, ignore it
5. If value is different for each, so it may be significant, translate to
english, e.g. CC0000 is red


These sorts of rules could I think be added to tools like the ALT text
tools, since the parsing and use is in the same spirit.

Of course, another approach to these applets is to write them with
accessible java.  
But tools would still be needed till all screenreaders or standalong
browsers could handle correctly, and all web page authors used
accessibility hooks.

Len
-------
Leonard R. Kasday, Ph.D.
Universal Design Engineer, Institute on Disabilities/UAP, and
Adjunct Professor, Electrical Engineering
Temple University

Ritter Hall Annex, Room 423, Philadelphia, PA 19122
kasday@acm.org        
(215} 204-2247 (voice)
(800) 750-7428 (TTY)



