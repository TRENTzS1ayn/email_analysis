docno="lists-063-5249951"
received="Wed Jun  2 13:11:44 1999"
isoreceived="19990602171144"
sent="Wed, 2 Jun 1999 10:11:26 -0700 (PDT)"
isosent="19990602171126"
name="T. V. Raman"
email="raman@Adobe.COM"
subject="RE: Handling Javascript [was Re: New(ish) Test Version Of Betsie"
id="14165.26046.676674.440446@adobe.com"
charset="us-ascii"
inreplyto="41ED4776F432D211ACBD0000F8EF7D7A01287C4E&#64;w12wcedxu01.wc.bbc.co.uk"
expires="-1"


To: Wayne Myers-Education<wayne.myers@bbc.co.uk>
Cc: WAI ER IG List<w3c-wai-er-ig@w3.org>, dave ragget<dsr@w3.org>

(I'm copying Dave Ragget on this --since he is currently
looking at Javascript standardization.)
Wayne and Len--

Many of the issues with Javascript that Wayne is running
into are not Betsy specific --they are a generic access
problem resulting from the use of imperative constructs to
achieve what would be better realized via declarative HTML
markup.

Rather than kluging Betsy to have a JS interpreter built in
--a conceptually Turing complete problem--
here is what I suggest to be a more productive route going
forward:
0) Use the Betsy experience productively as follows--
1) Identify instances of JavaScript usage that cause problems
and could be better implemented as standard HTML constructs.

2) Realise  that many of the Javascript based hacks
   prevelant on the WWW are short-term patches to achieve
   specific effects that are hard to achieve with today's
   HTML constructs and their corresponding implementation
   within the User Agents

3) For each such usage, identify what user agents should be
   doing to alleviate the pain that results from using
   vanila HTML constructs;
this will be the precursor to fixing the user agents so that
   page authors can reliably use standard HTML declarative
   constructs as opposed to imperative Javascript kluges.


4) Doing this will mean that access plays a key role in
   driving forward WWW practice while at the same time
   cleaning up some of the mess that is being created in the
   name of "but the only way I can get my page to look right
   is to adopt this kluge"

5) Finally, doing the above clean-up will automatically
result in use of JavaScript 
for only those things that require client-side programming
e.g., form-field validation;
it will then become significantly easier for an access tool
to cope with those usages.

What we have at present is a mish-mash that defies any kind
logic.

I'm copying Dave Ragget on this --since he is currently
looking at Javascript standardization.

-- 
Best Regards,
--raman

      Adobe Systems                 Tel: 1 408 536 3945   (W14-128)
      Advanced Technology Group     Fax: 1 408 537 4042 
      W14-128 345 Park Avenue     Email: raman@adobe.com 
      San Jose , CA 95110 -2704     Email:  raman@cs.cornell.edu
      http://labrador.corp.adobe.com/~raman/        (Adobe Intranet)
      http://cs.cornell.edu/home/raman/    (Cornell)
----------------------------------------------------------------------
    Disclaimer: The opinions expressed are my own and in no way should be taken
as representative of my employer, Adobe Systems Inc.
____________________________________________________________



