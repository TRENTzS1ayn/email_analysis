docno="lists-063-5272732"
received="Wed Jun  2 14:07:16 1999"
isoreceived="19990602180716"
sent="Wed, 02 Jun 1999 14:09:19 -0400"
isosent="19990602180919"
name="Leonard R. Kasday"
email="kasday@acm.org"
subject="RE: Handling Javascript [was Re: New(ish) Test Version Of   Betsie"
id="3.0.32.19990602140913.0068668c@pop3.concentric.net"
charset="us-ascii"
inreplyto="Handling Javascript [was Re: New(ish) Test Version Of   Betsie"
expires="-1"


To: Wayne Myers-Education<wayne.myers@bbc.co.uk>, WAI ER IG List<w3c-wai-er-ig@w3.org>,raman@Adobe.COM

Thanks Raman, Thanks Wayne

Wayne points out the difficulty, of handling cases where javascript
actually changes things on the page, e.g. image rollovers.

And Raman points out (among other things) that that most of the things now
in Javascript should be put into HTML declarative functionality.

However, even after that happens, Javascript would still be used, Raman
continues,  for

>things that require client-side programming e.g., form-field validation;

That's the situation we're faced with on the page that Bruce bought up, and
that I've seen elsewhere as well.  It's what prevents users from submitting
a form.  I suspect there a lot of it out there.  It's not just any old
idiom like "click here"... it's a useful idiom.  So it's a critical need I
think.

So how about a more limited goal:

Simulate javascript only for what I'll call "Stable" pages, defined as
pages where the javascript does only one or more of the following: 

- invokes the SUBMIT method.
- pops up alert boxes 
- pops up separate  HTML windows, not containing javascript
- pops up another "Stable" page


Such javascript doesn't change the current page.  It just brings up an
information box or window.  

A repair cgi script would provide an ordinary SUBMIT button.  When the user
presses the submit button, the cgi either invokes the submit method of the
original (i.e. unrepaired) page, if that is what the javascript would have
done, or sends back, as a new page, the information that would otherwise
have appeared in the popup box or window, together with means for returning
to the originating page.  

This is a highly simplified subset of javascript: It omits anything that
changes what's on the page, i.e. it doesn't change the DOM.

Does this seem feasible? From what Raman says, we'll need it even if we
reform javascript and HTML.

Of course, I'm not insisting for this in Betsie, especially not this week
<grin>. 

Len


-------
Leonard R. Kasday, Ph.D.
Universal Design Engineer, Institute on Disabilities/UAP, and
Adjunct Professor, Electrical Engineering
Temple University

Ritter Hall Annex, Room 423, Philadelphia, PA 19122
kasday@acm.org        
(215} 204-2247 (voice)
(800) 750-7428 (TTY)



