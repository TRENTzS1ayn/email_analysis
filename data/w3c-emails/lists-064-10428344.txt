docno="lists-064-10428344"
received="Sat Jul 14 06:46:52 2001"
isoreceived="20010714104652"
sent="Sat, 14 Jul 2001 06:46:51 -0400 (EDT)"
isosent="20010714104651"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: EARL In RDFS(FA)"
id="Pine.LNX.4.30.0107140633340.31729-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="045301c10bfb$94661760$dde693c3&#64;z5n9x1"
expires="-1"

To:"Sean B. Palmer"<sean@mysterylights.com>
cc:<w3c-wai-er-ig@w3.org>



Sean,

I think you're spreading a little FUD here. Lots of researchers have
looked at RDFS and found it OK, some others looked at it and didn't like
it. That's the way of the world. As RDF Core WG moves into work on RDF
Schema (I just opened the domain/range issue but haven't yet done the
issue summary)  we'll of course take a look at published reviews of the
spec.

On Sat, 14 Jul 2001, Sean B. Palmer wrote:

> > What I got out of it is that there is a "layer problem" which
> > I'm not exactly sure what that means but that it originates
> > with RDFS and is therefore carried on in DAML+OIL (since
> > it builds on RDFS).
>
> Yep. The layer problem is just that properties are being used for
> several different functions in RDFS, and are therefore ambiguous.

You're overusing the word 'therefore' a bit here; not all of the
(now documented) faults of  RDFS are carried through to DAML+OIL (eg. they
cleaned up range/domain stuff nicely), and it doesn't follow from the
fact that properties have multiple uses that they're ambiguous.

> Because logical systems require strict semantics, this ambiguity makes
> it difficult for people to build stuff on top of RDFS. We even had
> this problem a little bit in EARL - we use multiple ranges for
> restrictions and so forth, and these are still being debated on RDF
> Logic.

domain and range is a known problem; the RDF Issue List includes this and
other issues that cropped up during the RDFS CR review,
http://www.w3.org/2000/03/rdf-tracking/  -- I'm glad to say we've (at
last) got a working group in place to fix this stuff.

> There are some cool philisophical reasonsing about this sort of thing
> at [1]. Just where is the design of EARL? Is it in the schema? In the
> tutorials? In the implementations? It doesn't really matter as long as
> it works, but it is an interesting debate.
>
> [...]
> > Do you  know if RDFS(FA) is being considered by the
> > RDF groups?
>
> I very much doubt it.

Ahem. It hasn't been submitted to the WG, but I'll link it from the issue
summary when we get to those topics. I can't read PDF files comfortably so
it hasn't worked its way to the top of my reading list yet.


> > Could you please explain the differences between the EARL
> > schema expressed in RDFS versus RDFS(FA)?
>
> The RDFS(FA) version is a refinement of the RDFS version. Or rather,
> it will be when they publish more examples for reification and DAML; I
> left that stuff out for now.
>
> > Where do MStatements, LStatements, LClass, etc come
> > from?  What does that mean?
>
> They're just classes that have very specific functions in RDFS(FA).
> Where we were previously using "ambiguous" classes, these are defined
> more carefully. It is a matter of contention just how much more
> "carefully" these classes are defined though.

Quite!

> > Also, I just realized that RDFS is a Candidate Recommendation - is
> > that true?
>
> Yep, that's true. It's been like that for some time now.

Yes, the Metadata Activity and old RDF Schema WG expired before
RDFS was entirely finalised; we've now got the Semantic Web Activity and
RDF Core WG (see charters at http://www.w3.org/2001/sw/) in place to
complete this work.

Dan



