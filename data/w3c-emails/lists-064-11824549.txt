docno="lists-064-11824549"
received="Mon May 14 09:02:02 2001"
isoreceived="20010514130202"
sent="Mon, 14 May 2001 09:02:01 -0400 (EDT)"
isosent="20010514130201"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="other namespaces Re: EARL 0.95 Architecture"
id="Pine.LNX.4.30.0105140858410.9680-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="028a01c0dc1e$26228520$0fdc93c3&#64;z5n9x1"
expires="-1"

To:"Sean B. Palmer"<sean@mysterylights.com>
cc:<w3c-wai-er-ig@w3.org>


(Cool note on the whole thing)

OK, so I can live with the using our namespaces and being explicit about
equivalences, so long as we are really explicit about ayng "we expect these
things to be equivalent to those..."

After all the other side of the argument goes:

With a DublinCore-aware tool it is possible to get the EARL statement and
even without understanding the EARL you know who said it, when, about what.

Chaals

On Mon, 14 May 2001, Sean B. Palmer wrote:

  A note about the use of dc:date, and the datatype as an object:
  dc:date is a very broad term with a wide-range of applications.
  However, in EARL, we probably want to be more specific about exactly
  the object of the property can be when it is used - in other words, we
  don't want people giving dates in strange formats that machines can't
  understand. We need to look very carefully at how this can be applied,
  particularly w.r.t. RDF, and then we might be able to enforce this in
  the schema. We need to look into the question, "should we set a
  standard for EARL dates, or should we leave this to be decided on a
  processor to processor basis?". If the latter, don't forget that this
  will make interoperability very difficult without some kind of
  conversion scheme.

  Apart from that, the only quibble about using other namespaces is that
  it requires a processor to recognize more primitive terms than
  otherwise, and it boosts the amount of data in EARL files (using
  current QName methods). Stuff like rdfs:comment and rdfs:seeAlso could
  quite easily be used in EARL, but wouldn't have any point if the EARL
  implementations support it. One thing about declaring equivalences in
  our own namespace, and then using those terms is that if the terms you
  are using change, you simply change the schema and not the millions of
  implementations! This is something that should seriously be considered
  by the group

[CMN emphasis]
   - my personal opinion is that all EARL terms should be
  declared in the EARL namespace, and equivalences and other ontologies
  declared from there. Those reasons again:-

  1) Shorter data. Less namespaces need to be declared as QNames, and so
  the files are shorter.
  2) Maintenance. We don't control terms in other namespaces, but we do
  in our own. If other people change their terms, we have no control
  over that, and we lose implementation stability.
  3) Maintenance again. As new terms come along, we can simply declare
  them in the schema too.
[end emphasis]



