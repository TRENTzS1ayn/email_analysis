docno="lists-064-12674712"
received="Wed May 30 12:36:40 2001"
isoreceived="20010530163640"
sent="Wed, 30 May 2001 17:37:13 +0100"
isosent="20010530163713"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Re: Selling the product"
id="018901c0e926$eea391a0$d2d993c3@z5n9x1"
charset="iso-8859-1"
inreplyto="4.2.0.58.20010530105122.00ad2cb0&#64;localhost"
expires="-1"


To:<w3c-wai-er-ig@w3.org>

> Will the "steep RDF learning curve" [...]

RDF itself isn't difficult at all to "learn", it's just that there is
a startling lack of tutorials, and a huge amount of assumed best
practices which are only encoded in streams of list archives.

> Therefore, the issue seems to be adoption of RDF over
> XML rather than EARL in general.

Ooh, time for a bit of RDF cheerleading.

Why RDF and not XML? Why reinvent the wheel? With RDF, there is a
single standard data model (triples), fully decentralized, and with
numerous implementations, APIs and parsers. If you invent your own
language in pure XML, you are in essence also developing a data model.
There are numerous problems with this:-

1) You are slowed down because you have to work out a data model -
just use RDFs (although you do have to learn it, but surely learning
is easier than creating).
2) Other people then have to learn your data model, and build tools to
process it. Again: why reinvent the wheel?
3) Interoperability with other languages is then next to impossible.
With RDF based languages, it is still difficult, but at least
possible.

There are many more hints in TimBL's missive:-

   http://www.w3.org/DesignIssues/RDF-XML

the best bit is:-

[[[
The expression you need for querying something in terms of the XML
tree is necessarily more complicated than the expression you need for
querying something in terms of the RDF tree.
]]]

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .



