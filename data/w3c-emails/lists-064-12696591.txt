docno="lists-064-12696591"
received="Wed May 30 19:29:57 2001"
isoreceived="20010530232957"
sent="Thu, 31 May 2001 00:31:06 +0100"
isosent="20010530233106"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Re: Selling the product"
id="044001c0e960$9c657180$d2d993c3@z5n9x1"
charset="iso-8859-1"
inreplyto="4.2.0.58.20010530140903.00aea160&#64;localhost"
expires="-1"


To:<w3c-wai-er-ig@w3.org>,"Wendy A Chisholm"<wendy@w3.org>
Cc:<dimitris.dimitriadis@improve.se>

[...]
> > RDF itself isn't difficult at all to "learn", it's just that there
> > is a startling lack of tutorials, and a huge amount of assumed
> > best practices which are only encoded in streams of list archives.
>
> which makes it time consuming to learn.  many people don't have
> time or patience.

Yes, but that's a temporary situation, not a permanent one. It depends
a lot on your background and means of introduction as well... some
people get it in an instant. Personally, it took a while to know who
to speak to, what to read, and so forth, but once done, it's quite
easy to get into. The basic level of information is no harder than
learning to write XHTML, and is certanly not as difficult as learning
XML Schema, in my opinion.

> [...] If someone has invented several XML languages, then
> they could  more easily do that than learn something new.
> Also, many people will continue using familiar tools rather
> than spending time learning the benefits of new tools.

Only for models which are pre-existing. What I'm saying is that when
you create an arbitrary data language using XML Schema or similar XML
schemata, you will almost invariably be creating your own data model,
and will have to document it, and provide tools to grok it. RDF
provides a data model which people from all over the globe took years
to write and agree upon, and so in using it you gain all of that
data-model experience for free.

> Our job is to help with the transition since we believe we
> have a better tool.

We have a "tool" which is based upon a widely implemented,
well-documented, data model developed by the W3C. We have a tool which
people are able to parse, manipulate, and make sense of with many
publically available and free implementations. No screen scraping
involved, and little interpretation required.

> [...] how many people do you know who still use an older
> version of a browser because they know it works [...]

Nostalgia? eBusinesses would be eaten alive if they had the, "oh, we
know about computerized stock quotes, be we like our old stock
ticker - we're used to it now" attitude. And anyhow, for many people,
we'll be saying "instead of creating your own evaluation model, look,
we've made one for you!". For those that have already made a model, we
can point out the benefits of data interoperability, and getting rid
of the screen scraping layer.

> > 3) Interoperability with other languages is then next to
> > impossible. With RDF based languages, it is still difficult,
> > but at least possible.
>
> Isn't that the point of XML and namespaces, tho?  e.g. embedding
> SVG into XHTML?

The old way of doing things: namespaces allow a processor to ignore a
fragment of code if it doesn't recognize the URI/URI-ref being used as
a namespace. The new way is to try to partially understand the new
content, by derferencing links to the schemata, or whatever. But
that's Semantic Web territory rather than RDF.

What I mean with interoperability is that there are plenty of
processors which understand the RDF data model, and can parse it.

> Looking at Tim's paper again, he is primarily discussing
> machine-readable info, right?  At this point, I'm assuming
> people are still the primary readers of the content in some
> of the applications we're talking about.

But is RDF any more difficult to read than any other particular XML
application? Also, it's very easy to scrape XHTML from RDF
information - DanC has done so on a number of occasions. Just because
something is machine readable, it doesn't exclude it from being human
readable. However, when something is human readable, it is rarely
machine readable. All RDF is machine readable, and Notation3 does a
pretty good job of being human readable too.

> Are there the same types of tools for RDF?  Where you can easily
> plug in a schema and author?

Try:-

   http://www.ilrt.bris.ac.uk/discovery/rdf-dev/rudolf/rdfviz/
   -RDFViz

   http://www.smi.stanford.edu/projects/protege/
   - Prot?g?

[...]
> Daniel raised an interesting question in his post:
> What about integrating EARL into an existing framework.

Into an existing framework? Not too difficult - although if the
implementation uses XSD or something, you'd need to draft up an XML
Schema version of EARL... hmm.

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .



