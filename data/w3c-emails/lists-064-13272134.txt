docno="lists-064-13272134"
received="Tue Oct  9 09:36:39 2001"
isoreceived="20011009133639"
sent="Tue, 9 Oct 2001 14:35:08 +0100"
isosent="20011009133508"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Re: EARL 1.0 Notebook"
id="012101c150c7$5b399960$ecd693c3@y0r1d9"
charset="iso-8859-1"
inreplyto="Pine.LNX.4.30.0110090218050.18182-100000&#64;tux.w3.org"
expires="-1"


To:"Charles McCathieNevile"<charles@w3.org>
Cc:<w3c-wai-er-ig@w3.org>

> 1. I still don't understand why we need the _:x thing in the
> first place - can you explain what we gain from this again
> in other words?

Sure: in order to make statements about statements, you have to reify them.
There's no real choice, you just have to: it's a "limitation" of RDF. If
RDF had quads, then it would at least be easier, but it doesn't, so tough
:-) It's cool anyway because it gives the evaluation an ID so that it can
be referred to (well... it can't be externally refered to if it's a bNode).

> 2. I would like to re-raise the issue that I think the canonical
> syntax for EARL should be a syntax that is a W3C
> Recommendation.

I don't think we make any recommendation at all as to the canonical syntax
for EARL, do we? Except to say that it has to be a serialization of RDF.
Anyway, NTriples is on the recommendation track (in the RDF test cases
Working Draft).

I think that it was a mistake to specify the model and syntax in one
recommendation, because it gets people thinking that the syntax specified
therein is the only possible serialization, or (perhaps even worse) the
best possible serialization. It is not. You can't label bNodes, use them as
predicates, or even end predicates with a non XML name character! It's not
even particularly extensible to include literals as subjects should RDF
Core decide that it's sensible to have that.

The only thing that I think should be canonical for EARL is the RDF model.
That's the only part of RDF that matters.

> ...I don't think we are ready for EARL 1.0 yet - if we are
> going to make that what we think is a final version we should
> have played with some more substantial and useful data.

I kinda agree with that, but what happens when loads of people start
implementing 0.95 - which we acknowledge is just a "draft" version - and
then we release 1.0? I think we've learned enough in the months since 0.95
was released to take a shot at 1.0, but that's just my opinion...

Cheers,

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .



