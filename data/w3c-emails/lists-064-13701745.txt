docno="lists-064-13701745"
received="Sun Oct 21 11:24:56 2001"
isoreceived="20011021152456"
sent="Sun, 21 Oct 2001 11:24:51 -0400 (EDT)"
isosent="20011021152451"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: [w3c-wai-er-ig] &lt;none&gt;"
id="Pine.LNX.4.30.0110211117430.27206-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="003f01c1599e$2dd31e80$763c70c2&#64;7020CT"
expires="-1"

To: Jim Ley<jim@jibbering.com>
cc:<w3c-wai-er-ig@w3.org>


My 2c worth on the answers to the questions...

On Sat, 20 Oct 2001, Jim Ley wrote:

  I'm going to ask some questions about how EARL is to be used, which will
  hopefully allow me to be more focused on what my concerns are and
  therefore be more constructive:

  Who/what is the audience for reports?
  What does this audience do with these reports?

The immediate audience is primarily tools which interpret the EARL.

  1. In authoring tools, to allow the appropriate repair functions to be run
(typically these will have some user interface component which will differ
from tool to tool) or to avoid asking a question which has already been
answered.

  2. In search tools, to find content meeting some set of requirements (as
with PICS ratings)

  3. In processing tools to relate different kinds of EARL report. For
example, conformance to some US "section 508" requirements is effectively the
same as conformance to analgous WCAG requirements. This information can be
fed to tools for use case 1 above.

  Does a query language need to be developed?

Because this is RDF, we can rely on the existing and developing techniques
for querying RDF rather than inventing a specialised interface. (For
optimisation, simple tools may only implement "enough for EARL")

  What happens if there's an alternative to EARL, also in RDF how do the
  users tools distinguish between the 2?

If there are alternatives then there are going to be two processes for
interpretation. If it is in RDF then the namespace declarations are the key
(there is an issue on this at the moment based on whether tools are more or
less likely to understand Dublin Core RDF elements already).

chaals



