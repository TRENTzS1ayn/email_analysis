docno="lists-064-15925132"
received="Fri Feb 15 07:49:55 2002"
isoreceived="20020215124955"
sent="Fri, 15 Feb 2002 13:50:26 +0100"
isosent="20020215125026"
name="Nadia Heninger"
email="nadia@barbwired.com"
subject="Re: EARL Semantics and Queryability [was: Re: EARL-producing   testing tool]"
id="3.0.32.20020215135024.00cc3b18@barbwired.com"
charset="us-ascii"
inreplyto="EARL Semantics and Queryability [was: Re: EARL-producing   testing tool]"
expires="-1"


To:"Sean B. Palmer"<sean@mysterylights.com>
Cc:<w3c-wai-er-ig@w3.org>

>The main thing we're after is consistent information that can be
>queried useful in future. The more consistent your information, the
>more useful it is. Imagine the following report:-
>
><http://www.w3.org/blargh> rdf:type earl:WebContent;
>   earl:date "2001-10-15" .
><http://www.w3.org/blargh> earl:fails :MyTest.
>
>and then a couple of days later, another report:-
>
><http://www.w3.org/blargh> rdf:type earl:WebContent;
>   earl:date "2001-10-17" .
><http://www.w3.org/blargh> earl:passes :MyTest.
>
>Now, how do you expect to query it to check whether the page has been
>fixed, given that the URIs representing the resources are the same?
>It's broken. The rule is: one URI, one resource. [People get votes,
>URIs get resources!]

I still don't think I understand.  What's supposed to be available in the
bit in my namespace?  The test report?  (Maybe the problem is that I'm
misunderstanding the purpose of the "resource" in question...)  

If two different people complete the same test suite and come up with
conflicting results that look like the example above, how is having
http://myns#(thing tested)+(date) labeled as the WebContent in question any
more helpful when the same information is stored elsewhere in the report?  

>So you're putting the "thing" in your own namespace for a few reasons:
>to separate it from other "things"; so that you can add data in the
>future; so that your data will be consistent; so that people can query
>it in the future; so that if you abandon or break it, you lessen the
>impact.

Is the "thing" the EARL report?  Or are we querying my namespace for
information on what produced the report? (Sorry, I feel like I'm being
really slow about this, but I still don't understand all the rules and
syntax of RDF yet so a lot of it feels arbitrary.)

>> You should make "Learning EARL by Example" public,
>> it's quite helpful.
>
>Thanks - I'm glad that it's useful. BTW, the document is already
>public:-

I meant linked to in some prominent place, like the EARL page, so that
people can reach it easily.  The existing examples there aren't as helpful.
 I was rather peeved when reading through the list archives and someone had
attached some document that looked really useful but the link from the
archives was broken.

>The W3C Quality Assurance group is chartered to investigate a test
>point definition language. As long as such a framework is scaled up to
>the Web, it should be possible to integrate it neatly with EARL.

Gosh, it would be helpful if that already existed. :)  So, if I were to go
about trying to define my own rdf language for test cases, is there
anything in EARL that needs to be considered?

>> Actually the script uses POST by default, but it accepts
>> either.
>
>Ah, that's alright then. Perhaps you could change the forms to GET, if
>you think it's suitable to do so?

Why do you want GET so much more than POST?  CGI.pm is neat about reading
both.  If you sense some reluctance on my part to change, it's because I
don't think it's really necessary to have the existing generated forms use
get (I think 500 char urls are ugly).  Or is it because you'd like to have
a unique URI for each result?  I'd rather save information in some kind of
EARL database (that can use pretty namespace references) that the script
can query than have people trying to retrieve things using GET links to the
script.

You can now view the source code: 
http://hkn.berkeley.edu/~nadiah/tester/test.cgi?script_print=1
There's a link from the index page too.

Nadia



