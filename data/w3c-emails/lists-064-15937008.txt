docno="lists-064-15937008"
received="Fri Feb 15 08:41:16 2002"
isoreceived="20020215134116"
sent="Fri, 15 Feb 2002 13:38:47 -0000"
isosent="20020215133847"
name="Jim Ley"
email="jim@jibbering.com"
subject="Re: EARL Semantics and Queryability [was: Re: EARL-producing   testing tool]"
id="032901c1b626$18f97a60$ca969dc3@emedia.co.uk"
charset="iso-8859-1"
inreplyto="3.0.32.20020215135024.00cc3b18&#64;barbwired.com"
expires="-1"


To:"Nadia Heninger"<nadia@barbwired.com>
Cc:<w3c-wai-er-ig@w3.org>

"Nadia Heninger"
> >Now, how do you expect to query it to check whether the page has been
> >fixed, given that the URIs representing the resources are the same?
> >It's broken. The rule is: one URI, one resource. [People get votes,
> >URIs get resources!]
>
> I still don't think I understand.  What's supposed to be available in
the
> bit in my namespace?  The test report?

I've never had this clear myself, but I think of it more as just a name,
or pointer that refers to the report, that's unique.  So it's nothing
more than a unique handle.

> If two different people complete the same test suite and come up with
> conflicting results that look like the example above, how is having
> http://myns#(thing tested)+(date) labeled as the WebContent in question
any
> more helpful when the same information is stored elsewhere in the
report?

If you put a combined report through the RDF-validator, you'll see the
problem I believe.

> Is the "thing" the EARL report?

I believe so.

>I'd rather save information in some kind of EARL database

Well now you can...

If you POST your earl to http://jibbering.com/earldb/v.1 it will store it
in a database (returns 500 status on error, or echos your RDF back to you
if no error.  You can then retrieve it with
http://jibbering.com/earldb/v.1?url=testSubjectURL - It accepts the earl
0.95 namespace, and the earl1.0 Sean users and Nicks 1.0-test (any others
by request.) When it combines two EARL reports, I've no idea if they make
sense or are useful, but they seem to validate as RDF.  It's very early
in development, but feel free to play with it, don't be surprised if
things break.

Jim.



