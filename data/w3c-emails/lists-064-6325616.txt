docno="lists-064-6325616"
received="Fri Apr 20 18:09:32 2001"
isoreceived="20010420220932"
sent="Fri, 20 Apr 2001 23:10:09 +0100"
isosent="20010420221009"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="EARL 0.9 RDF Schema Alpha Version"
id="00d601c0c9e6$ab088fe0$6ded89d4@z5n9x1"
charset="iso-8859-1"
expires="-1"


To:<w3c-wai-er-ig@w3.org>
Cc:"Leonard R. Kasday"<kasday@acm.org>,"Daniel Dardailler"<danield@w3.org>

Dear All,

This is an alpha version (i.e. hack attempt for comment, rather than a
working version) of an RDF Schema for EARL 0.9, attached as <0.9.n3>,
in Notation3 (also available on the Web at [1]). An RDF version is
also available online [2].

It seems that some people have trouble vizualizing Notation3... I hope
to be proving an SVG version of the EARL 0.9 model in due course, if I
have the time. Basically, I have cleared it up so that it becomes a
list of "Evaluations", which have three basic parts (i.e. a triple):-

   (stuff about the assertor) earl:Asserts (the test result) .

If you go through the schema, you should be able to work out all of
the relavent pieces fairly easily. For example, it is broken down into
pieces, so that where I have "(the test result)" above, that is
actually comprised of something like:-

   (the test result) =
   ((the result assertions) trueForDate (date)) .

There are a handful of contexts like this, which some people may find
uncomfortable, but it is easily overcome by saying that a certain URI
is equal to a context, and then using that URI instead. So for
example, instead of saying:-

   (my stuff) (my other stuff) (even more stuff) .

You could say:-

   :a = (my stuff) .
   :b = (my other stuff) .
   :c = (even more stuff) .
   :a :b :c .

You get the idea - it's a bit like (*shudder*) OOP. Unfortunately, out
of the RDF people that I have asked about this particular model, none
seem all that certain about how effective it might be, or whatever,
but I am confident that this is as close as one can possibly represent
Daniel's prose stuff in RDF.

One other thing: what particular format do people expect EARL to be
in: XML RDF, Notation3, or something else? I think that the schema
available at whatever namespace we decide to use should be in the
format that people are most likely to use. I asked on the #rdfig list
about just how stable the Notation3 specification is for our purposes,
and I got this dialogue going:-

[[[
<sbp> DanC, are you there? Is Notation3 stable enough to be used in
specifications? I mean, really? What advantages over XRDF at this
stage?
<sbp> Currently, some people seem to be put off by Notation3 because
it's not a recommendation. With EARL we have a choice of N3/XRDF...
and I'm not sure which way to develop. IF CWM could do N3 <=> XRDF
perfectly...
<DanC> "stable enough" is in the eye of the beholder. It's stable
enough for stuff I'm working on.
<sbp> Is it stable enough for global implementation?
<DanC> I dunno what "global implementation" is.
<sbp> If people use it in their little evaluation programs, it's not
going to be superceeded the next day by something else, is it?
<DanC> not superceded: no guarantees whatsoever.
<sbp> Bah, we'll probably have to use XML RDF then.
<DanC> RDF/n3 is not on the W3C Recommendation track; if you want to
use it in WAI REC-track stuff, you'll have to copy the RDF/n3 spec
into your spec.
<DanC> or not...
<sbp> Well, EARL isn't going to be a REC either, at least it doesn't
look so at this stage
<DanC> i.e. the cc/pp spec has an informal notation in its diagrams.
You could just use RDF/n3 without saying you're using n3.
<sbp> but it will have multiple implementations
<DanC> certainly RDF/n3 should be considered just short-hand for
RDF/xml.
]]] - http://ilrt.org/discovery/chatlogs/rdfig/2001-04-20.txt

But I still feel that Notation3 will be easier for programmers to
implement, because XML RDF is so unwieldy. Clearly we have had success
in sending each other Notation3/EARL examples on the list, and
discussion took off when we found out that it was suited for what we
are doing.

Anyway, I like the model for EARL as it currently stands, and I feel
that it has the advantages that it is:-

a) Easy to process
b) Extensible
c) Compatable with RDF systems
d) Fairly human-understandable
e) Performs its purpose well

In a separate email, I shall post the Notation3 examples that I did
for an previous action item in 0.9A code. Actually, I think I already
did one in the schema itself, commented out. I hope that it is farily
self-explanatory.

I've spent a good part of the day hacking on this; I hope it's O.K.
:-)

[1] http://infomesh.net/2001/03/earl/0.9.n3
[2] http://infomesh.net/2001/03/earl/0.9.rdf

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .




text/plain attachment: 0.9.n3




