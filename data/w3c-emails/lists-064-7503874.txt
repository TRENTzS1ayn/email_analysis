docno="lists-064-7503874"
received="Tue Dec 11 02:07:10 2001"
isoreceived="20011211070710"
sent="Tue, 11 Dec 2001 08:07:07 +0100"
isosent="20011211070707"
name="Danny Ayers"
email="danny666@virgilio.it"
subject="Re: Cool XPointers Do Change?"
id="200112110707.fBB777K27923@zidane.inria.fr"
inreplyto="Cool XPointers Do Change?"
expires="-1"


To:w3c-wai-er-ig@w3.org



Hi Sean & all,
I've been playing with XPointer a bit (trying to hack annotations a la
Annotea) and though some of the points you raise are exactly the things I've
had trouble with, I'm not sure about your reading of the spec. The way I
read it is that an XPointer expression simply adds a bit of fine detail to
what you'd get with XPath or DOM2 - presumably going back to the Infoset
(but those are murky waters that I find a bit scary). But if document a has
XPointer expression B, then it's tied to that document whether we like it or
not. Mechanical. The idea of the pointer being able to point to the same
entity when the document is transformed into text or whatever I think is a
non-starter. Transform the doc, the pointer moves. Though the predicates you
suggest look a really promising idea, I don't think it gels with XPointer as
proposed. As far as conflict with RDF is concerned, I would like to see an
example where things can't work - RDF can use an XPointer as a resource,
XPointer can refer to specific parts of a document. The identifier should
surely be as fine grained as you want it - a doc, a nodeset, a node, a
range, a point. (The definition of a fragment is another muddy pond for me
;-)

By the way, the bit of XPointer (carried from XPath) that makes me most
uncomfortable is the dichotomy between a series of DOM text nodes against an
XPointer expression from above - the string-value seems a very loose
approach.

Cheers,
Danny.

- ---

Danny Ayers
<stuff> http://www.isacat.net </stuff>

Alternate email (2001) :
danny666@virgilio.it
danny_ayers@yahoo.co.uk



