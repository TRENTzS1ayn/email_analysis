docno="lists-064-8358479"
received="Thu Feb  8 17:59:02 2001"
isoreceived="20010208225902"
sent="Thu, 8 Feb 2001 17:58:55 -0500 (EST)"
isosent="20010208225855"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: EARL Syntax and Vocabulary"
id="Pine.LNX.4.30.0102081757260.28006-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="00c101c0912e$88727720$c7d893c3&#64;z5n9x1"
expires="-1"

To:"Sean B. Palmer"<sean@mysterylights.com>
cc:<w3c-wai-er-ig@w3.org>,"Leonard R. Kasday"<kasday@acm.org>


Why can't we use the dublin core property dc:author instead of the
current earl:asserts - or should we just define an equivalence?

Cheers

Charles

On Wed, 7 Feb 2001, Sean B. Palmer wrote:

  [This is a fuller discussion of the syntax and vocabulary for EARL.]

  The actual base vocabulary for EARL can be fairly flat, as the model of the
  langauge will be dictated by the RDF Model and Syntax W3C Recommendation.
  However, I don't expect that all EARL processors will need to be "RDF
  complete", i.e. able to process all of the RDF functions. On the contrary,
  RDF syntax is not limited to XML RDF for it can take on plain text (e.g.
  Notation3) forms as well. It may be that an evaluation processor (EP) can
  only support a subset of EARL designed for its own particular task. This is
  fine as long as the EP does not introduce any features outside of RDF Model
  and Syntax, or the associated Schemas ontologies and logic, or anything
  outside of the EARL framework.

  EARL itself will probably consist of two parts: a vocabulary, and a
  framework. The vocabulary can be modularized so that there are some central
  core concepts on the EARL namespace, that can then be ontologically
  extended to include other namespaces. The framework will provide
  instructions for doing so.

  Here is an update on the vocabulary:-

  @prefix earl: <#> .
  @prefix daml: <http://www.daml.org/2000/10/daml-ont#>
  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

  # Properties

  earl:asserts a rdf:property;
    rdfs:comment "x asserts y" .
  earl:comment a rdf:property;
    rdfs:comment "x comments that y";
    daml:equivalentTo <http://www.w3.org/2000/08/comment#> .
  earl:confidence a rdf:property;
    rdfs:comment "x is asserted to a confidence level of y" .
  earl:conforms a rdf:property;
    rdfs:comment "x conforms to y" .
  earl:testobject a rdf:property;
    rdfs:comment "x has test object y - the thing being tested" .
  earl:langtype a rdf:property;
    rdfs:comment """x is of langtype y [e.g. x earl:langtype "XHTML"]""" .
  earl:mode a rdf:property;
    rdfs:comment "x has a test mode of y" .
  earl:result a rdf:property;
    rdfs:comment "x has the result y" .

  # Classes (for modularity)

  earl:Level a rdf:property;
    rdfs:comment "is a generic level of something" .
  earl:ValidityObject a rdf:property;
    rdfs:comment "is a checkpoint - the thing being tested against" .

  # Objects

  earl:person rdfs:comment "x is an earl:person" .
  earl:tool rdfs:comment "x is an earl:tool" .

  This should be called the core EARL module.

  I expect that many people will be wanting to use their own properties in an
  EARL tool. While this should be encouraged, we must be careful to ensure
  that people do so in structured ways. The EARL vocabulary is provided so
  that it may form the basis of further EARL modules.

  For example, AU may want to introduce their own terms for use in an AU
  conforming tool. An example of a module (RDF schema) for this is:-

  @prefix atag: <http://www.w3.org/2001/02/aertearl/> .
  @prefix earl: <http://infomesh.net/earl/schema/> .
  @prefix daml: <http://www.daml.org/2000/10/daml-ont#>
  @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
  @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

  atag:levelA a earl:Level;
    rdfs:comment "ATAG Level A conformance" .
  atag:checkpointN a earl:ValidityObject;
    rdfs:comment "ATAG checkpoint N" .

  atag:assertedBy a rdf:property;
    daml:inverseOf earl:asserts;
    rdfs:comment "x was asserted by y" .

  Here, two atag specific properties have been introduced, and another
  specified as being the inverse of another EARL property.

  I am currently working out some N3 rules that we can use to run through CWM
  to show the effectiveness of making EARL an RDF language.

  --
  Kindest Regards,
  Sean B. Palmer
  @prefix : <http://webns.net/roughterms/> .
  [ :name "Sean B. Palmer" ] :hasHomepage <http://infomesh.net/sbp/> .


-- 
Charles McCathieNevile    http://www.w3.org/People/Charles  phone: +61 409 134 136
W3C Web Accessibility Initiative     http://www.w3.org/WAI    fax: +1 617 258 5999
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)



