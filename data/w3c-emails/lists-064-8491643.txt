docno="lists-064-8491643"
received="Mon Feb 12 08:10:59 2001"
isoreceived="20010212131059"
sent="Mon, 12 Feb 2001 13:07:07 -0000"
isosent="20010212130707"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Re: A Crack at an EARL Vocabulary"
id="011501c094f4$d3f8c180$13d993c3@z5n9x1"
charset="iso-8859-1"
inreplyto="200102120258.VAA2703268&#64;smtp2.mail.iamworld.net"
expires="-1"


To:"Charles McCathieNevile"<charles@w3.org>,"Leonard R. Kasday"<kasday@acm.org>,"Al Gilman"<asgilman@iamdigex.net>
Cc:<w3c-wai-er-ig@w3.org>

> There is some initial work on RDF Query, is there?

The only kind of query stuff that I've worked with is CWM [1]. I thought it
might be nice to come with an example EARL file that could be processed
(based on Len's interpretation of assertions vs. Charles, converting one to
the other):-

     :c  a :comment;
     :author :len;
     :commentObject :apple;
     :commentString [ :color "green" ] .

Now, if we used a log rules file for that:-

     <> log:forAll :x , :y , :z , :c .
     { c: a :comment; :author :x; :commentObject :y; :commentString :z . }
     log:implies
     { :x :asserts { :y :comment :z . } . } .

It (should) give the following output on CWM, pending my inevitable
mistakes:-

     :len :asserts { :apple :comment [ :color "green" ] . } .

So you see that CWM is a kind of simple query engine, but note that it
can't yet make inferences. Still, this should be quite useful to give
examples with. Basically, given :x :y :z, you can make any sort of rule up
concerning those variables.

[1] http://www.w3.org/2000/10/swap/cwm.py

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
[ :name "Sean B. Palmer" ] :hasHomepage <http://infomesh.net/sbp/> .



