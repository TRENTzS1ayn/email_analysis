docno="lists-065-0475832"
received="Tue Jun 25 18:10:28 2002"
isoreceived="20020625221028"
sent="Tue, 25 Jun 2002 23:10:40 +0100"
isosent="20020625221040"
name="Nadia Heninger"
email="nadia@barbwired.com"
subject="Re: [Issue] Result Properties as... well, Properties"
id="3.0.32.20020625231032.00ae2720@barbwired.com"
charset="us-ascii"
inreplyto="[Issue] Result Properties as... well, Properties"
expires="-1"


To:"Sean B. Palmer"<sean@mysterylights.com>,<nmg@ecs.soton.ac.uk>
Cc:<w3c-wai-er-ig@w3.org>


>... so the result property was a subclass of type property which is
>problematic for lots of tools.
>]]] - http://www.w3.org/2002/06/25-erswad-irc#T16-07-00
>
>Why is this problematic? What tools does it break? Can you provide some
>test cases and examples of things that break, please?

I'm not the one qualified to answer this kind of question, but it had
something to do with most real-world rdf databases treating rdf properties
in a special way.  Subclassing rdf:Property would then cause them to act in
strange ways.

>The value of using the reification properties is that it is clear that
>Assertion bags are true statements, and can be factored down via a rule
>like:-
>
>{ [ a earl:Assertion; rdf:subject ?x; rdf:predicate ?y;
>   rdf:object ?z ] } => { ?x ?y ?z } .

But why is this necessary?  It looks cool in n3 (:someone :fails :wcag) but
in practice, nobody writes n3.  None of the existing earl implementations
make use of it, and the use of the rdf subject, predicate, object terms
just make the earl more opaque for beginners, and (as the rdf experts
pointed out) confusing for rdf database/query tools.

I think it was danbri that pointed out that while the kind of statement you
want to make is useful, does it really belong in the main spec?  We can
just as easily write a separate rules file with the renamed predicates that
does what you want, should someone want to explicitly use that kind of triple.

And lastly, what are the outcomes of de-reifying that particular triple?
Each of the objects is actually a collection of properties, and danbri and
nmg seemed to have worrisome observations about non-unique properties of
the implicit statement also getting de-reified and it turning into a mess.

Anyways, the basic proposal is just to change the names of the predicates.
This placates the people who are afraid of rdf as well as the experts who
object to the current names on a philosophical basis.  And as Chaals says,
using earl names makes the structure of earl much clearer from the spec.
Write all the daml properties you want separately should you want to use
that form internally.

Nadia



