docno="lists-065-0858586"
received="Wed Mar 13 10:40:30 2002"
isoreceived="20020313154030"
sent="Wed, 13 Mar 2002 16:40:36 +0100"
isosent="20020313154036"
name="Nadia Heninger"
email="nadia@barbwired.com"
subject="Thoughts on 1.0"
id="3.0.32.20020313164034.00cda078@barbwired.com"
charset="us-ascii"
expires="-1"


To:<w3c-wai-er-ig@w3.org>

Ok, this might be a little late, but I'd like to put out some thoughts on
the problems I see in .95 and the current 1.0 recommendation in
http://lists.w3.org/Archives/Public/w3c-wai-er-ig/2002Feb/0057.html

The current schema is not really machine-understandable.  I've been trying
to hard-code as little of EARL as possible into my script and instead try
to read in parameters from the EARL schema and test definition files, but
it's not really feasible.

* Properties in EARL seem to belong to either Assertor, TestSubject, or
TestCase items.  They should be declared in a more uniform way with a
domain of one of those three. (ex. earl:name, earl:email, earl:date... what
is supposed to be done with earl:date?  Other rdf date formats exist, maybe
we should use one of those?)

* earl:WebContent, earl:Tool, and earl:UserAgent as subclasses of
earl:TestSubject seems really odd.  Is there a good reason for this?  Why
can't we have a earl:isa (or something like rdf:type) property instead, and
have each of those be the object?  (I don't like the subclassing thing
because it's irregular and the other big EARL classes don't do it.)

* I would like EARL to be normalized so that there is a specific form for
an EARL report.  I already said this in my last message, but I think it's
important for queryability.  Other things can be tacked on, of course, but
the basic form needs to be standard.  This should be reflected in the schema.

* It seems to contain too many odd and specific properties at the moment.
Might it be more useful to leave a lot of random properties (earl:level,
earl:excludes, earl:EquivalenceRelation, earl:format, etc) out of the
schema entirely and just concentrate on providing general classes that
users can extend to satisfy their needs?  In other words, earl:TestSubject,
earl:Assertor, and earl:TestCase are all rich areas that people are just
going to end up defining to suit their own needs (as I ended up having to
do.)  EARL should just be the glue that binds them together.

Summary: standardize and clean the spec, we're not ready for 1.0 yet.
Perhaps we should clean it up and declare a .96?

Nadia



