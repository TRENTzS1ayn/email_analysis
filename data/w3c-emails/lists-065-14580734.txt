docno="lists-065-14580734"
received="Tue Sep 29 01:13:56 1998"
isoreceived="19980929051356"
sent="Tue, 29 Sep 1998 14:48:47 +1000 (EST)"
isosent="19980929044847"
name="Charles McCathieNevile"
email="charlesn@sunrise.srl.rmit.edu.au"
subject="pop-up windows and context changes"
id="Pine.SUN.3.91.980929141848.4770H-100000@sunrise.srl.rmit.edu.au"
charset="US-ASCII"
inreplyto="s608b78a.028&#64;ny.frb.org"
expires="-1"

To: Chris Kreussling<CHRIS.KREUSSLING@ny.frb.org>
cc:w3c-wai-gl@w3.org,w3c-wai-ua@w3.org


There are several related issues here - new browsers being spawned, 
frames, and pop-up windows all touch on the problem of changing contexts.

From a page authoring perspective, it should be made clear to people that 
an action is likely to send them into a new context. A user agent should 
make available information about how many seperate browser windows are 
running - much like the windows menu in MS Word, which I beleive Opera 
also has. 

Some common examples:
A frameset with an index frame and a content frame, where selecting a 
link in the index frame changes the content frame.

An index of links, which spawn a new browser window in which the link is 
opened.

GeoCities websites include a pop-up advertising window, which takes the 
focus.

The many alert windows that come up in various systems (this is getting 
into the whole Operating System and User Interface design, but it is 
relevant)

And the question of Help windows (see Chris' question at the end of this 
mesage - the gist is how to provide context-sensitive help)

For the present, the best way to resolve Chris' dilemma seems to be 
having a help link in each section of the form. Users could read the 
help and then (in most browsers) go BACK to the partially completed form. 
THis maintains the context, and is the normal web idiom. The disadvantage 
is that the help material cannot be read while the form is being filled 
out, so it could eventually get too hartd to remember everything.

An alternative would be to use an active server-sided process to expand 
and collapse the help sections on demand. Domino does something like this 
with its twisties, but they present a number of accessibility problems, 
as has been noted before, and they seem not to be sufficiently flexible. 
But programming the process correctly is perfectly possible, although it 
requires a lower-level environment than most people would like to use.

Other techniques would include 

Using IFRAME or OBJECT to include a help section (not widely supported)

Doing the whole thing within a frameset and having a help frame (this 
would work for most people, but requires good frames design, a property 
sorely lacking at the moment)

(not very good) using ALT-text and a help image, providing a tool-tip to
IE/Netscape users, a lot of extra words to lynx users, and a messy coding. 

Charles McCathieNevile

On Wed, 23 Sep 1998, Chris Kreussling wrote: 

A specific example I'm struggling with: I want to provide help for using a
form. Ideally, I'd like to provide context-sensitive help, specific to the
section of the form (<FIELDSET>) or field the which currently has focus.
In many windowing environments, help is provided in the form of a
separate, floating window which the user can resize or reposition. As a
visual user, I like to place the floating help window alongside the work
I'm trying to do, so I see both at once. 

This design problem is clearly not specific to Web-based documents or
applications. Are there non-visual equivalents or solutions to this? 
 
> Thanks
> 
> Chris Kreussling
> -----
> The views expressed are those of the 
> author and do not necessarily reflect the 
> position of the Federal Reserve Bank of 
> New York or the Federal Reserve System.
> 
> 
> 



