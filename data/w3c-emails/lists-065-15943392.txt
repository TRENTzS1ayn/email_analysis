docno="lists-065-15943392"
received="Fri Nov  6 05:33:58 1998"
isoreceived="19981106103358"
sent="Fri, 6 Nov 1998 11:29:31 +0100"
isosent="19981106102931"
name="nir.dagan@econ.upf.es"
email="nir.dagan@econ.upf.es"
subject="Correction was:Re: start-reading bookmark - another approach"
id="H0000e2200d34300@MHS"
charset="US-ASCII"
inreplyto="H0000e2200d30e30&#64;MHS"
expires="-1"


TO:w3c-wai-gl@w3.org
CC:asgilman@access.digex.net,charlesn@srl.rmit.EDU.AU

Sorry for the mess of my previous message.

I meant, if you want the browser/user 
have control where the navbar is, make all the navbar with LINK elements:
<LINK title="support" href="support.html">
<LINK title="FAQ" href="faq.html">
<LINK title="Pictures of my dog" href="ruff.html">
etc...

Or invent a new element NAVBAR that must be used at most once in BODY; 
this is more backward compatible with current browsers who don't support 
LINK at all although it is there since HTML2.0.)

More practical than both above would be to establish a rel=begining-of-meat
and use: 

<LINK rel="begining-of-meat" href="#foobar">

Thus establishing the rel value rather than the destination 
anchor's name/id. 

Browsers who recognize this Link and rel value 
should be able to send the user to the anchor, if configured to do so. 

Regards,
Nir Dagan

> > The idea is that UAs allow browsing by structural divisions. The common 
> > ones are headings, but HTML provides two elements to mark out otherwise 
> > unknown tyes of division - SPAN and DIV. If we group links together in a 
> > DIV (for example with CLASS="nav", TITLE="nav") then we would hope that 
> > people can either go deeper or skip that DIV.
> 
> I think that usually links that have something to do together are 
> already grouped in some element like P or UL or TABLE, so there is no 
> need for DIV here.
> 
> > 
> > if we standardise the CLASS then people can write a stylesheet to do what 
> > they really want with the DIV - shift it to the end, repeat it 
> > everywhere, etc. It means that UAs 'could' recognise it and do clever 
> > things as well, although most of those are likely to be the sort of 
> > things that properly implemented CSS would already provide.
> 
> The use of LINK elements should do that. They are in the HEAD 
> and the user agent/user should decide where and how to show them.
> 
> If there is no particular "rel" to use, use title with the link 
> description. Let:
> <LINK title="Skip navigation links" href="#start-reading-here">
> be your first LINK, and you are done.
> 
> Regards,
> Nir Dagan
> http://www.nirdagan.com



