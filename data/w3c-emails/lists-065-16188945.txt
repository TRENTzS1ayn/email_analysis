docno="lists-065-16188945"
received="Mon Nov  9 02:41:04 1998"
isoreceived="19981109074104"
sent="Mon, 09 Nov 1998 08:40:51 +0100"
isosent="19981109074051"
name="Daniel Dardailler"
email="danield@w3.org"
subject="Re: Old HTMLversions in guidelines"
id="199811090740.IAA21140@www47.inria.fr"
inreplyto="Old HTMLversions in guidelines"
expires="-1"


To:nir@nirdagan.com(Nir Dagan)
cc:w3c-wai-gl@w3.org


> Therefore I can't see 
> any reason to mention them that often. It just confuses 
> the reader, and makes the document longer.

I tend to agree.

> I made a list of the  HTML4.0 features that 
> do not degrade well to HTML3.2. Here it is the whole list.

Are you suggesting we should mention this list somewhere ?

In any case, it's an interesting exercise, and I'm asking our HTML
staff to check it for completeness.

On this one:

> * Attributes whose values are Length in HTML4.0 may interpreted
>    as Pixels or ignored by HTML3.2 browsers: 
>    height, width, border in IMG; cellspacing, cellpadding 
>    in TABLE.
> Solution: use Pixels.

I already investigated this one a while ago:

HTML 4 say for Lengths:
      Pixels: The value (%Pixels; in the DTD) is integer that represents the
      number of pixels of the canvas (screen, paper). Thus, the value "50"
      means fifty pixels. For normative information about the definition of a
      pixel, please consult [CSS1].
 
and in 6.1, CSS1 says: 
 
    The format of a length value is an optional sign character ('+' or
    '-', with '+' being the default) immediately followed by a number
    (with or without a decimal point) immediately followed by a unit
    identifier (a two-letter abbreviation).
 
and later on there is the arcane "nominal arm's length of 28 inches"
stuff.

But after asking the local experts, it seems that HTML only uses CSS's
definition of the size of a pixel, not CSS's definition of a length
unit. So values used in HTML markup can only be pixels (positive or
negative OK).



