docno="lists-065-1914601"
received="Tue Apr  8 02:48:16 2003"
isoreceived="20030408064816"
sent="Tue, 8 Apr 2003 02:48:12 -0400 (EDT)"
isosent="20030408064812"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="RE: on EARL"
id="Pine.LNX.4.30.0304080236510.2385-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="002201c2fd56$dcaaefc0$0d00a8c0&#64;Jaffar"
expires="-1"

To: Shadi Abou-zahra<shadi@abou-zahra.net>
cc:<w3c-wai-er-ig@w3.org>



On Tue, 8 Apr 2003, Shadi Abou-zahra wrote:

comments below
>
>> -----Chaals' Original Message-----
>>
>> Comments inline - quick summary: version is not necessary,
>> different location
>> specifiers are required but should be in RDF, not extra properties for
>> line/column, line/col is the least accurate reference over
>> time, test-case
>> nesting is critical but maybe doesn't belong in the EARL spec
>> itself, you can
>> already put complex annotations into an earl:note so priority isn't a
>> particular need.
>>
>> On Mon, 7 Apr 2003, Shadi Abou-zahra wrote:
>>
>> >ref: http://www.abou-zahra.net/shadi/w3c/wrapper/outline.html
>> >
>> >here are some comments i have about EARL:
>> >
>> >1. EARL versions
>
>i still disagree on this. why not have an assertion conducted by an
>assertor that speaks 0.95 and a second assertion by an assertor that
>speaks 1.0 within the same EARL file?

You can do this. Indeed, because the 0.95 and 1.0 specifications have
different namespaces it is simplicity itself to mix them without trying to
make sure that the version property is being applied to the right bits of
information (which can get messy over a merge).

>> >3. test case nesting
>will dig more around here. only i want to try to get away from analyzing
>the "who is making the claim" part and concentrate on the "based on
>what" part. does this make any sense at all?

Yep, I agree.

>> >4. multiple messages
>
>hmmm. ok, maybe "priority" is a bad concept but leaving the message
>definitions totally in the hand of the assertors requires you to know
>who the assertor is in order to interpret these messages.
>
>what about defining a minimal message scheme for subclasses such as
>'webcontent' for example? this way all assertors that conduct tests on
>webcontent provide a common set of messages about the results. was this
>the intention of the earl:message element at all?

It is as I understand it. Defining some obvious message types would be
helpful, but I am not sure that they belong in the message namespace - more
likely they should be defined along with a set of tests (e.g. WCAG defines
some checkpoints, we make an RDF version that also defines some basic
properties of failure that live in that namespace).

You can't get away from the problem of needing to know who the assertor is
without using ontology mapping, which on a webscale is probably only feasible
using OWL (or its predecessors DAML, OIL, or the imaginatively named
DAML+OIL). Providing a couple of sample ontologies would be helpful - Ian
Hickson talked about one in Bristol which included such properties as
catastrophic failure, failure consequential on another failure, failure due
to minor bug, etc.

It is also possible to envisage many of these things as being subClasses of
earl:Fail - this can be done just using the RDF Vocabulary (formerly called
RDF Schema) definitions, which would also allow attaching a human-readable
explanation of the failure type.

I think earl:message is most likely to be helpful for the cases where there
is no obvious re-usability - just a catch-all place to put extra info. Best
use of the fact that EARL is RDF is to find smarter ways of doing things...
IMHO a text string is always a last resort unless it is an rdfs:label or an
explicitly labelled description :)

cheers

Chaals



