docno="lists-065-3211129"
received="Fri Sep 12 10:47:39 2003"
isoreceived="20030912144739"
sent="Fri, 12 Sep 2003 10:47:39 -0400 (EDT)"
isosent="20030912144739"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: [Fwd: browsable test results]"
id="Pine.LNX.4.55.0309121028040.25313@homer.w3.org"
charset="us-ascii"
inreplyto="1063374202.9839.53.camel&#64;dirk.dm93.org"
expires="-1"

To: Dan Connolly<connolly@w3.org>
Cc:www-qa@w3.org, WAI ER group<w3c-wai-er-ig@w3.org>, Frank van Harmelen<Frank.van.Harmelen@cs.vu.nl>, Eric Miller<em@w3.org>, Sandro Hawke<sandro@w3.org>


Well, you've reinvented the axle it goes on...

Your RDF models a lot less than EARL [1], and not much more (it does include
a specific property for the test duration, whereas EARL includes a general
comment property...)

Other simple differences are not as many types of result, the fact that there
is no RDF description of things being tested (earl defines webContent and I
think userAgent), or the way that they were tested (automatically, manually,
or heurisitically - i.e. deriving a conformance result from other conformance
results).

The important difference is that you have no notion of provenance in your
model. Provenance is built into the EARL model as a protection against
conflicting claims (which would cause your stuff to just have a
contradiction) or to enable choosing how to deal with conflicting claims
(trust management). This aspect made EARL very much more complex (but a
typical earl statement is still short - a dummy sample is reproduced at the
end of this message, and there is an example of a complete (non-) assessment
against the 65 WCAG checkpoints (and some information about the checkpoints,
since this was meant to work nicely with an Xform [2]) at
http://www.w3.org/2001/sw/Europe/200305/axforms/earlinst

cheers

Chaals

[1] http://www.w3.org/TR/EARL10
[2] http://www.w3.org/2001/sw/Europe/200305/axforms/readme

The content of http://www.w3.org/2001/sw/Europe/200305/axforms/earlBase

<?xml version='1.0' ?>
<rdf:RDF xmlns:earl="http://www.w3.org/WAI/ER/EARL/nmg-strawman#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:foaf="http://xmlns.com/foaf/0.1/"
    xmlns:wcag="http://www.w3.org/TR/WCAG10/#">

  <earl:WebContent rdf:about="#subject">
    <earl:reprOf rdf:resource="http://example.org/" />
    <earl:date>yyyy-mm-dd</earl:date>
  </earl:WebContent>

  <earl:Assertor rdf:about="#assertor">
      <rdf:type><foaf:Person/></rdf:type>
      <earl:name>Your Name</earl:name>
      <earl:email rdf:resource="mailto:you@your.email.address"/>
  </earl:Assertor>

  <earl:Assertion rdf:about="#test1">
   <earl:subject rdf:resource="#subject" />
   <earl:message>No Comment</earl:message>
    <earl:result
rdf:resource="http://www.w3.org/WAI/ER/EARL/nmg-strawman#notTested"/>
    <earl:mode
rdf:resource="http://www.w3.org/WAI/ER/EARL/nmg-strawman#manual"/>
    <earl:testcase>
      <earl:TestCase rdf:about="http://example.com/test1">
        <dc:title>Test 1: Some requirement</dc:title>
      </earl:TestCase>
    </earl:testcase>
    <earl:assertedBy rdf:resource="#assertor" />
  </earl:Assertion>

</rdf:RDF>




On Fri, 12 Sep 2003, Dan Connolly wrote:

>The WebOnt WG is in CR, and we're using RDF
>to manage our test results.
>  http://www.w3.org/2003/08/owl-systems/test-results-out
>
>  and http://www.w3.org/2002/03owlt/resultsOntology
>
>Attached find an example of some of the benefits.
>
>I'm only vaguely familar with EARL; I'd appreciate review
>from somebody who knows more about it. How much of the
>wheel have we reinvented?
>
>
>--
>Dan Connolly, W3C http://www.w3.org/People/Connolly/
>
>

Charles McCathieNevile  http://www.w3.org/People/Charles  tel: +61 409 134 136
SWAD-E http://www.w3.org/2001/sw/Europe         fax(france): +33 4 92 38 78 22
 Post:   21 Mitchell street, FOOTSCRAY Vic 3011, Australia    or
 W3C, 2004 Route des Lucioles, 06902 Sophia Antipolis Cedex, France

attached mail follows:

The folk at AIdministrator have used their software (Sesame RDF engine + 
Spectacle portal generation software) to create an easily accessible version 
of the OWL test-suite.

They're uploading the RDF representation of the test-data into Sesame, then 
Spectacle fires SeRQL queries on that RDF to generate the portal at 
<http://spectacle.aidministrator.nl/spectacle/channel/owltestcases>

The portal allows the test-cases to be browsed along various dimensions 
(status, OWL species, creator, topic).
The portal will be auto-refreshed, so it can be used for inspecting the most 
recent status. Can someone advise on the required refresh-frequency? Is once 
a day enough?

They have done the same for RDF at
<http://spectacle.aidministrator.nl/spectacle/channel/rdftestcases>

It's a nice illustration of the added value there is in generating the 
test-date in RDF form.

For more detail, see their message on rdf-interest, at
<http://lists.w3.org/Archives/Public/www-rdf-interest/2003Sep/0072.html>

Frank.
   ----



