docno="lists-066-14839179"
received="Fri Nov 19 21:23:01 1999"
isoreceived="19991120022301"
sent="Fri, 19 Nov 1999 18:22:52 -0800 (PST)"
isosent="19991120022252"
name="Scott Luebking"
email="phoenixl@netcom.com"
subject="Re: A brief analysis of dynamically generated web pages and"
id="199911200222.SAA00900@netcom.com"
inreplyto="A brief analysis of dynamically generated web pages and"
expires="-1"


To:phoenixl@netcom.com,w3c-wai-gl@w3.org,wendy@w3.org

Hi, Wendy

I think we may not be talking about the same problem.  I'm looking at
the situation where there is a need for pages to be generated
dynamically.  There is some aspect of the application which prevents the
web page from being stored.  Perhaps, the page content in some way is not
static.  For example, information from two sources being merged together
by user request.  A search engine responding to queries.  The data from
a datasource may not be marked up or the data coming from multiple
sources using different mark up formats.  As a result, the data has to
be massaged and converted to a format for presentation.  My proposal is
that there be an ability for the software doing the massaging to produce
the information in multiple formats.

I guess what I'd like to recommend is that if web pages are being
generated dynamically for some reason, e.g some aspect of the content is
not static from presentation to presentation, I'd like to see that there
would be a choice of an accessible version being generated.

I hope I'm being clearer in my intent.

Scott


>
>Scott,
>
>In your previous post you suggested that a programmer who had created a 
>dynamic page could more easily write a new subroutine than "dealing with 
>postprocessors."  Your main concern was that if the data changed, then 
>someone would have to go change the postprocessor.
>
>If the data and structure of the page is appropriately separated from the 
>presentation, then changes to data can happen independently from changes in 
>presentation.
>
>In your second post you used the example of a Table as a reason for why 
>someone would want to use dynamically generated pages. There are quite a 
>few ways to address this issue either on the client- or the 
>server-side.  It will depend on how the data or content of the page is 
>marked up, but a client-side tool could more effectively allow the user to 
>interact with the data than a static presentation generated then served 
>(i.e., querying a cell for information about its header(s) or table for a 
>collection of cells).
>
>There are also several client-side generated schemes that work well.  I 
>have been working on a client-side script that uses style sheets to show 
>and hide information in a dynamic way that also works when scripts or style 
>sheets are not loaded.  It is dynamic presentation of content, but because 
>of style sheets and scripting, it can either linearize into a table of 
>contents and text, or be displayed with a "visual imperative."  I have 
>chosen a blue horizontal menu bar, with orange submenus that pop up, and 
>other text that is shown depending on which submenu is selected.  in other 
>words, it transforms gracefully because content is separate from presentation.
>
>I am anxious to investigate how I might use a combination of XML, RDF, and 
>scripting.  Especially with data tables.
>
>
>You are advocating server-side scripting.  As long as the content is 
>separate from the structure, and the nature of the content is static, I 
>don't think it depends where the generation (or transformation) happens - 
>on the client, the server, or some gateway. Until user agents all support 
>scripting consistently and adopt a common object model, some of that 
>generation will more reliably happen on a server, but in the future it's 
>really not going to matter where the presentation comes from: a subroutine, 
>a style sheet, it happens on the fly as the user agent interprets meta 
>information, etc.  It will depend on what you are doing and what is most 
>effective.
>
>therefore, your suggestion (if I understand it correctly) follows along 
>quite nicely with the themes of WCAG: graceful transformation and 
>separation of content from structure.  You are more than welcome to develop 
>server-side strategies for inclusion in the techniques document.  We are in 
>the process of restructuring it and adding new techniques before the end of 
>the charter (30 Nov), so now is a good time to get something 
>included.  Particularly, if you have examples for the checkpoints that 
>specifically mention scripting.
>
>thanks,
>--wendy



