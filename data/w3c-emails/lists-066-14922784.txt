docno="lists-066-14922784"
received="Sat Nov 20 21:16:37 1999"
isoreceived="19991121021637"
sent="Sat, 20 Nov 1999 21:18:26 -0500"
isosent="19991121021826"
name="Nir Dagan"
email="nir@nirdagan.com"
subject="Re: A brief analysis of dynamically generated web pages and"
id="199911210216.VAA09030@vega.brown.edu"
charset="us-ascii"
inreplyto="199911210057.QAA22416&#64;netcom.com"
expires="-1"


To: Scott Luebking<phoenixl@netcom.com>,charles@w3.org
Cc:phoenixl@netcom.com,w3c-wai-gl@w3.org

At 04:57 PM 11/20/99 -0800, Scott Luebking wrote:

>Is there a reason why selection of the format has to be via detection?

I prefer the term content negotioation rather than detection. The current 
state of content negotiation (both the standard and even more so the
implementations)
is indeed some sort of detection or guessing.

In the ideal form of content negotiation users configure their browsers to
provide the 
necessary and sufficient information about their preferences over 
the form of content, and the server serves them as needed. If the server
doesn't figure out what is best it gives the client a list of options. If
the client
knows enough it chooses automatically, if it doesn't it asks the user.

The reasons why content negotiation is preferred than giving the 
user a list of choices via links or drop down menus are:

1. With content negotiation the user configures its browser once and gets
the right 
form of document. With lists of choices the user has to manually tell its
preference 
to every website. Automation helps the user and saves him nags.

2. Puting a list of 35 alternatives on every page in a website confuses the 
users and reduces usability for all users including those who are in their
more or less preferred format. 

You should note that alternatives are not only accessibility related but 
also language and charset (there are many languages less lucky than English
where a unique 
common encoding does not exist.) So if you start multiplying the numbers
you'll see that 35
is a rather modest number of alternatives.

>If detection were available, the better design would be for the
>server to take a guess via detection, but allow for the user to over-ride
>any way.

True. But on should strive for automation, and only when the server and
client 
can't figure out what to do, ask the user. 

===================================
Nir Dagan
Assistant Professor of Economics
Brown University 
Providence, RI
USA

http://www.nirdagan.com
mailto:nir@nirdagan.com
tel:+1-401-863-2145



