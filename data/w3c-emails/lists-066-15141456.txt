docno="lists-066-15141456"
received="Tue Nov 23 06:30:40 1999"
isoreceived="19991123113040"
sent="Tue, 23 Nov 1999 06:30:36 -0500 (EST)"
isosent="19991123113036"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: A summary of key points on dynamically generated web pages"
id="Pine.LNX.4.20.9911230626310.31356-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="199911230354.TAA29394&#64;netcom.com"
expires="-1"

To: Scott Luebking<phoenixl@netcom.com>
cc:w3c-wai-gl@w3.org


Hi Scott,

What I mean by template and database design is probably what you mean by
dynamically generated - typicaly there is some kind of template (created as a
page in systems like cold fusion or php/mySQL scripting, created in code on
the fly by older-style CGI applications) or set of templates that are
populated on the fly by the server.

With regard to the user deciding what is relevant, I am assuming that a given
page would contain the same information regardless of who it is being
presented to. However the information might be available in graphic format,
as well as in a movie and in plain text. If the user cannot see, they may
choose to take the text, the descritions and audio from teh movie, and skip
the rest because it is not relevant (to them). I am also assuming that the
mechanism for navigating the site works in essentially the same way for all
users - that is, that the same set of choices will lead to the same content.

cheers

Charles

On Mon, 22 Nov 1999, Scott Luebking wrote:

  Hi, Charles
  
  The template database approach works with limited templates and context.
  However, for example, a web site lets each user set up a profile
  describing how each web page should be configured for him.  If the web site
  works with hundres and pages and thousands of users, the template
  and database approach is not reasonable.
  
  Actually, the appropriate design does not necessarily significantly
  increase the complexity.  Give me an example and I probably have a way
  for it not to be that complex.  (I hope <smile>.)
  
  I don't understand your statement "that in general creating different
  versions of a page sometimes overcome some implementation-specific
  limitations".  How would a user decide what is relevant?  (This goes back to the
  concept-barrier issues.)  
  
  Scott



