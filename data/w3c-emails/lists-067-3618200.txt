docno="lists-067-3618200"
received="Mon May  8 11:40:50 2000"
isoreceived="20000508154050"
sent="Mon, 8 May 2000 08:39:51 -0700 "
isosent="20000508153951"
name="Cynthia Shelly"
email="cyns@microsoft.com"
subject="RE: demo of grouping with divs and accesskey"
id="71EFB697F464184990DF0AC5B050E9EE0306FA32@red-msg-17.redmond.corp.microsoft.com"
inreplyto="demo of grouping with divs and accesskey"
expires="-1"


To:"'w3c-wai-gl@w3.org'"<w3c-wai-gl@w3.org>

question from Gregg with my comments....

From: Cynthia Shelly [mailto:cyns@microsoft.com]
Sent: Monday, May 08, 2000 3:56 AM
To: 'gv@trace.wisc.edu'
Subject: RE: demo of grouping with divs and accesskey

 

An excellent question.  In this demo I was just trying out the tech, and
ignoring the UI issues (bad dev, no cookie ;). When we label form elements
on our site, we underline the hotkey (following the windows style), but
since these areas don't have text labels, that doesn't work.  

Some options I can think of off the top of my head: 

add a text label with an underlined letter 
define a standard set of shortcuts (n for nav etc) either for a site or in
general. 
add explanatory text as I did in this example 
add explanatory text that is hidden from visual user agents and read by
auditory user agents.   I don't know of any markup that would do this, but
there may be a way I'm not aware of.  I'm also not sure if this is a good
idea, since power-users could also benefit from this feature if they knew
about it. 
have user agents expose all the "accesskey" attributes in a document listed
with the title of the tag.  
This brings up another interesting issue.  I'm not aware of any way to mark
a character as a hotkey in a structural way.  A quick cruise through the
HTML 4 spec didn't yield anything obvious.  We use underlines (either <u> or
<span style>) to mark them, which makes sense in a windows world, but
doesn't make sense in an auditory UI.  It would be interesting to have tag
similar to the label tag that allowed an author to tie a hotkey to an area.
something like

 

<div tabindex=1 accesskey=x id=foobar>

<h1>Area <hotkey for=foobar>X</hotkey></h1>

</div>

 

This would allow user agents to choose a meaningful way to mark the x as a
hotkey.

 

--Cynthia

 


 -----Original Message-----
From: Gregg Vanderheiden [mailto:gv@trace.wisc.edu]
Sent: Monday, May 08, 2000 4:43 AM
To: Cynthia Shelly
Subject: RE: demo of grouping with divs and accesskey


Interesting

 

I'm sure I'm missing something here but how would a person know what the
access keys were?

 

gregg

 


-- ------------------------------

Gregg C Vanderheiden Ph.D.

Professor - Human Factors

Dept of Ind. Engr. - U of Wis.

Director - Trace R & D Center

Gv@trace.wisc.edu, http://trace.wisc.edu/

FAX 608/262-8848  

For a list of our listserves send "lists" to listproc@trace.wisc.edu

 


-----Original Message-----
From: Cynthia Shelly [mailto:cyns@microsoft.com]
Sent: Friday, May 05, 2000 12:12 AM
To: 'w3c-wai-gl@w3.org'
Subject: demo of grouping with divs and accesskey


During today's conference call, we were discussing grouping sections of the
page so they could be skipped or gone back to without having to tab through
a lot of links.  During the conference call, I said that I couldn't get
accesskey to work, but I was able to after we hung up.  This file allows the
user to use accesskeys, tabs, or a combination of the two to easily navigate
a typical 3-cell table-based page layout.  

In IE5 with Narrator, this works quite well.  The only oddness I encountered
was that if the div had a title attribute, Narrator read the title instead
of the contained text (or both).  I also tried this with IE5 and Jaws.  Jaws
seemed to be trapping the tab keystrokes so IE was not getting them.  I'm
not a very proficient Jaws user, so I'd be interested in hearing from people
who are whether they were able to get this to work.  I'm also interested to
hear if this works on other platforms.

Here's the file as an attachment.

 <<divs.html>> 



