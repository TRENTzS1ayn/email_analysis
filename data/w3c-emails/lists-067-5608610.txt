docno="lists-067-5608610"
received="Sat Jun 24 12:21:34 2000"
isoreceived="20000624162134"
sent="Sat, 24 Jun 2000 12:40:09 -0500"
isosent="20000624174009"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="Re: 23 June WCAG10 Techniques documents available"
id="200006241624.MAA1653082@smtp1.mail.iamworld.net"
charset="us-ascii"
inreplyto="3954354B.3BD6EDB5&#64;w3.org"
expires="-1"


To:w3c-wai-gl@w3.org

Typical webmaster question:

"I've been told I need to make all my text at least 14 point.  But the
Professor says users can control font size in the browser, so we don't need
to do this.  What's the real story?"

I am probably too close to the problem.  I don't have a simple one-line
answer for this question.  So I decided to do some research.

I just spent an hour or two so trying to look up control of text size using 
 a) the Techniques docs from WAI-GL
 b) the WAI curriculum
 c) web-savvy resources at Toronto (and their site tactics as an example)
 d) the AWARE center resources
 e) the Trace website as an example

and I came away empty-handed.

I am left questioning whether presenting the techniques organized around
guideline and technology as the top-level categories will ever work.  Will
it ever give us something that our customers can use independently?  Can
our real customers use what we wrote without a working group member or
trained trainer to guide them?  Can they find their question in our Table
of Contents?  If we _haven't_ answered it yet, can they know this and go
away knowing that the answer wasn't there, not that they just didn't find it?

The techniques could alternatively be organized by design topic, with
technology options compared in close proximity (as an inner loop) showing
how to do a particular effect in one or another way.  What our customers
for the techniques want to know is "how do I do _this_ accessibly?" where
_this_ is a screen appearance and/or interactive behavior.

Text effects is a topic.
HTML 3.2 attributes is a technique and CSS (implemented consensus core) is
a technique and CSS (with browser sniffing to swap stylesheets) is a
technique.  Deriving all size by relative scaling from one page-wide base
definition is a strategy that applies across techniques.  Facts concerning
the variability in terms of how browsers let users take control of text
effects is another subtopic that customers will want to know.  This can be
done by a link to the browser compliance survey if that will be maintained.

Layout and page organization is a topic.
HTML Tables for layout is a technique.
FRAMESETs for layout and graded context stability is a technique.
DIV and MAP to balance the interest shares in the parse tree is a
technique.  See Amazon rewrite example for development of this issue and
technique.  [Develop SVG example for yet another example in another base
technology of the same strategy.]

What are the most popular texts or sites used as "the course text" in
teaching web design?  Is there such an animal?  Is all web design mostly
learned by On the Job Training, i.e. grab a tool as start playing?


If there is a leading text or even a shortlist of what people do use as
they learn, we should import the outline of design topics from there and
use that as the outline to write the techniques to.  We could even offer to
implement named anchors keyed to the popular reference sites such as
htmlhelp.com where they, from their discussion of a given design topic,
could have a link "accessibility angles" and on following the link the
reader _would find that they were not lost in the paragraph they got to_.
This last is a writing constraint on our end.

More examples of design topics (just my rought draft, we need to ask active
and student designers):

Rollover highlights and other scripted response to pointer position
(onMouseOver, hover) is a subtopic of 'lightweight activity' i.e. stuff
that does not change the whole context the way following a link does.

Need to discuss actions in terms of lightweight to heavyweight.

Some examples in rough order from lightweight to heavyweight:

1) onMouseOver
2) onHover
3) open list box
4) select element in list box
5) follow intrapage link
6) follow off-page link
7) follow off-site link
8) submit form
9) submit form with monetary consequences

There is one aspect of the design problem setup where I particularly
agonize over how to reach our audience.  This is about "Grouping vs.
classification: how to show things are similar when they are not together."
 This relates to how one uses parallel font, color etc. to align content
fragments that play similar roles but they are separated in the layout.
It's one thing group links in a Navbar.  But then you have several Navbars,
and there are links outside Navbars, as well.  How do you communicate
"here, near, anywhere" distinctions about links?  Do you care?  After the
site design motivation has been reviewed, on can get into how to apply the
technology; how to rationalize this into class names and class-driven
styles as a direct implementation of the mental discipline of design.
First you have to build the rules of the mental discipline as a solution to
the design problem.


The trick is to get the student thinking in terms of Grady Booch's "generic
-to- specific" relationships as outside the "part -to- whole" relationship
flow without first introducing the jargon.  Then the implementation in
classes and styles (with the ability to review the results working in a
browser) and then maybe a footnote to Booch for those who find the concepts
intriguing.

Another key lecture deals with how verbalizing your house rules -- spell it
out, write it down -- actually helps you make your designs flow when you
come to write replacement pages.  This is one of those lesssons learned
from software engineering that still has to be taught to each generation
coming up, and here it has to be re-told in Web language so people can see
the relevance to them.

Al



