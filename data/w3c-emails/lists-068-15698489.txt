docno="lists-068-15698489"
received="Thu Mar 15 08:43:07 2001"
isoreceived="20010315134307"
sent="Thu, 15 Mar 2001 08:42:48 -0500"
isosent="20010315134248"
name="Bailey, Bruce"
email="Bruce_Bailey@ed.gov"
subject="RE: imagemaps"
id="5DCA49BDD2B0D41186CE00508B6BEBD0022DADFF@wdcrobexc01.ed.gov"
inreplyto="imagemaps"
expires="-1"


To:"'Charles McCathieNevile'"<charles@w3.org>
Cc:w3c-wai-gl@w3.org

Dear Charles,
Thanks for thinking of this common counter example.
Services like MapBlast and the like can be quite accessible.  The text
directions are, for example, quite good.
But what about the maps themselves -- where EVERY pixel is different hot
spot?
Can such a service achieve Single-A compliance or better?  (Without
resorting to SVG as Charles suggests.)  Where does WCAG 1.0 make allowances
for such things?  Is there not a way to eliminate all the extra verbiage
about server side images maps, but still allow these kind of tools?
Section 508, to my mind, gets around this problem with the allowances for
equivalent facilitation.  Also, in the software portion, it discusses how
keyboard access is only needed for textually oriented functions.  This
means, for example, that paint programs are not prohibited by 508 -- even
though such applications are not useful to a blind person.  Is there a
similar escape clause in the WCAG?
-- Bruce

> ----------
> From: Charles McCathieNevile
> Sent: Thursday, March 15, 2001 8:01 AM
> To: Bailey, Bruce
> Cc: w3c-wai-gl@w3.org; 'jim@jimthatcher.com'
> Subject: RE: imagemaps
> 
> Although a server side map is just a collection of points, so in theory
> could
> be broken into a big pile of 1x1 squares, there are practical reasons for
> having them in some cases.
> 
> For example, mapping applications will generate a map on the fly from a
> much
> larger store of information, send it down, and then when a point is
> selected
> on the map generate a new one based on that point. The practical value of
> a
> client-side image map is in part that it can have alternatives associated
> with the destination of each hotspot. But in fact is not always very easy
> to
> provide useful alternatives - for example in the mapping scenario.
> 
> An alternative technique for doing this might be as follows:
> 
> Use SVG to create the maps. Make each street a "hot" object, with the
> default
> activation behaviour to get a new map based on that point. The basic
> algorithm can be based on the client side on DOM changes or animations to
> a
> use element. On the server side you could implement the same algorithms,
> but
> you might choose to use a different processing language (or not...)
> 
> Charles McCN



