docno="lists-068-3477061"
received="Wed Dec 20 14:51:22 2000"
isoreceived="20001220195122"
sent="Wed, 20 Dec 2000 14:51:05 -0500"
isosent="20001220195105"
name="Bailey, Bruce"
email="Bruce_Bailey@ed.gov"
subject="RE: SVG Plugin from Adobe"
id="5DCA49BDD2B0D41186CE00508B6BEBD0300445@WDCROBEXC01"
charset="iso-8859-1"
inreplyto="SVG Plugin from Adobe"
expires="-1"


To:"'Kynn Bartlett'"<kynn-edapta@idyllmtn.com>
Cc:"'w3c-wai-gl@w3.org'"<w3c-wai-gl@w3.org>

Dear Kynn (et al.),

I am optimistic (or at least desperately hoping) that someone who knows SVG
better than I will chime in.  How does one increase the canvas size of an
SVG object?

The behavior of the SVG example in question, a map, actually has a fair
amount of screen real estate.  The "zoom in" effect I think is quite
reasonable -- for people with low vision or not.  I think your
disappointment is a little premature.

Magnifiers have two choices.  I am being a little pedantic here because I
assume there are folks on this list who are not that familiar with screen
magnification.

With ZoomText and Magic (etc.), the "virtual canvas" in increased.  If a
person is using 2x magnification, their screen behaves as if it extends past
the boundaries of the physical monitor bezel.  In effect, they are only
looking at one quarter of the normal screen.  This is usually the more
desirable behavior, but it is difficult to achieve.  I am probably not
describing this well enough for anyone who has not had the opportunity work
with screen enlargement software.

Now, think about how a word processor handles "magnification".  When you
increase the font size, say to 72 point, the canvas stays fixed at
eight-and-a-half by eleven inches (A1).  Your margins and everything else
stays the same.  The text gets wrapped, probably to the extent that large
print is not effective for someone with low vision.  Obviously, this kind of
"magnification" does nothing for menus, icon bars, etc.  If your document is
constrained to a certain specific size (and is filled), then growing the
text causes quite a bit of content to apparently disappear!

Adobe has chose to follow this second model.  Why?  I don't know, but I can
make a few reasonable guesses.  (1) They are not looking at SVG from a
disability perspective.  (2) It's easier to implement.  (3) As a "plug-in",
what choice do they have?  Graphics on web pages are specified to appear at
a specific pixel size.  They are stuck in a box, no doubt a hold over from
gif /jpeg/png raster images.  (The "big two" browsers take this command
quite literally -- to the point where they will deform bitmaps to fit the
size specified.)  It is quite reasonable to expect that a Java applet
constrain itself to the size specified.  Why would an SVG object be exempt
from this rule?  If individual SVG images on an HTML page with several
graphics were allowed to dynamically resize them selves, the page would have
to be re-flowed as each were examined (not necessarily a bad thing, but
certainly unconventional).  What you are asking, for the graphic to break
out of the box size that constrains it, sounds to me like someone who
expects screen magnification to make their physical monitor larger!

It is my hope that once browsers are released with integrated SVG support,
commands like "increase size" would be well supported in the fashion you
expect now.  I understand Opera does this already with raster graphics even
already.  Certainly, other implementations besides Adobe's viewer are
possible.

Even so, lets take a look at accessibility with SVG as it exists now via the
Adobe viewer:
Case 1, a largish graphic like the map, worked pretty well.
Case 2, an isolated "Netscape Now" logo button.  Original textual elements
too small, but Adobe SVG viewer zoom feature again adequate, even with the
tiny windows size -- for this isolated image.
Case 3, SVG implemented image map or series of "folder tab" buttons with
small text.  Kynn's right -- using the zoom feature when constrained to the
image's original canvas size is extremely frustrating -- too cumbersome for
navigational elements.  But try it with screen magnification software!
These programs know how to scale text really well, but they do a less
credible job with raster graphics.  Viola!  The pixelation / break-up that
happens to bitmap images doesn't occur with real text.

Things are far from perfect, but we've made things better for anyone who
already uses screen magnification.  And we've addressed some of the needs
for folks with low vision that don't use screen magnification.

Kynn, you are complaining about version 1.0 software!  Things will get
better!

-- Bruce

> -----Original Message-----
> From: Kynn Bartlett [  <mailto:kynn-edapta@idyllmtn.com>
mailto:kynn-edapta@idyllmtn.com]
> Sent: Wednesday, December 20, 2000 1:09 PM
> To: Bailey, Bruce
> Cc: 'w3c-wai-gl@w3.org'
> Subject: RE: SVG Plugin from Adobe
>
>
> At 05:55 AM 12/20/2000 , Bailey, Bruce wrote:
>> Kynn,
>> Assuming you're doing this on a windoze IE machine...
>> Right click on the image, select "zoom-in" from the pop-up
>> palette.  Repeat
>> as desired.  Pretty cool, no?
>> I am not sure how one would increase the canvas size.
>
> Wait, I'm confused.
>
> If someone uses SVG for navigation on their site -- say, as
> navigation buttons containing textual information -- they have
> to right-click on each image and choose "zoom in" to blow up
> the image, but it is still constrained by the size of the
> original graphic??
>
> That's not at _all_ what I was hoping for.  I was hoping for
> the benefits described by members of this list, which state that
> this is a boon to accessibility by people who have low vision.
>
> I have not seen anything to that effect, and in fact it's pretty
> useless for such a purpose!  I can't imagine why you'd have to
> right-click on every single graphic on a page in order to see
> it correctly (but in a tiny "window" space!) -- shouldn't it resize
> according to my browser text size preferences??
>
> I can only assume that I've done something very wrong in how I have
> installed SVG support in my browser, as none of the supposed
> benefits of SVG are evident to me.  I can't imagine anyone claiming
> _this_ as an accessibility benefit, so I guess I screwed up somewhere!
>
> --Kynn



