docno="lists-068-4184796"
received="Sat Dec 23 14:44:17 2000"
isoreceived="20001223194417"
sent="Sat, 23 Dec 2000 14:44:14 -0500 (EST)"
isosent="20001223194414"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="RE: SVG Plugin from Adobe"
id="Pine.LNX.4.30.0012231434560.26663-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="5DCA49BDD2B0D41186CE00508B6BEBD030044B&#64;WDCROBEXC01"
expires="-1"

To:"Bailey, Bruce"<Bruce_Bailey@ed.gov>
cc:"'w3c-wai-gl@w3.org'"<w3c-wai-gl@w3.org>,"'Kynn Bartlett'"<kynn-edapta@idyllmtn.com>,"'Leonard R. Kasday'"<kasday@acm.org>


Hmmm, I don't figure that I need to qualify as an SVG guru for this one, so
here goes <grin/>

If you read http://www.w3.org/2000/Talks/1116-oz/slide32-0 or
http://www.w3.org/2000/Talks/1116-oz/slide40-0 with something other than
Amaya, you will almost certainly get some text (the first one should also
include a link). If you read it with Amaya you will see an SVG embedded using
the XML namespaces mechanism.  (unless you are using a screenreader on the
text-only screen, and then you get the text-type stuff) That's one way to
make things work. For a variety of reasons I think it is long term the ost
promising one. But aside from Office 2000 the major areas where
namespace-based XML is being implemented is in XSLT processors (mostly
"behind the scenes magic, although they are available in browsers) and in RDF
tools (where it seems fairly commonplace).

Another approach is to tell your browser to use an XML browsing application
to handle SVG, and provide a user style sheet - an example one that you could
use is given in the Note "Accessibility Features of SVG" -
http://www.w3.org/TR/SVG-access - for this purpose. (If anyone wants to write
some neat XSLT for processing SVG into something even smarter, I would be
really glad...)

cheers

Charles McCN



On Thu, 21 Dec 2000, Bailey, Bruce wrote:

  Dear Group,
[snip]
  Kynn (and anyone else who can help me with my understanding), I am reluctant
  to mention it, but I do have a bone to throw you with regard to your
  apparent contempt for SVG.  I understood that one of the potential promises
  for SVG was its accessible to screen reader and text-only browsers.  I don't
  see that in practice.  Textual information is, of course, embedded in the
  SVG file.  This is, of course, in theory much better than relying on the
  good will of the author to provide a separate and stand-alone textual
  equivalent.  As it stands now, Lynx users just get <q>[EMBED]</q>.  I could
  not get JAWS to do anything with an SVG file from within IE 5.

  I did have one partial success.  I renamed an SVG file (from Adobe) from
  clock.svg to clock.htm.  Opening the local file in IE revealed text!
  Opening the local file in Lynx revealed text!  This was quite neat I
  thought.

  Can any SVG gurus on this list speak to how this aspect is suppose to work
  in theory and practice?

  Cheers,
  Bruce


-- 
Charles McCathieNevile    mailto:charles@w3.org    phone: +61 (0) 409 134 136
W3C Web Accessibility Initiative                      http://www.w3.org/WAI
Location: I-cubed, 110 Victoria Street, Carlton VIC 3053, Australia
until 6 January 2001 at:
W3C INRIA, 2004 Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France



