docno="lists-068-4559125"
received="Tue Dec 26 09:40:16 2000"
isoreceived="20001226144016"
sent="Tue, 26 Dec 2000 09:39:43 -0500"
isosent="20001226143943"
name="Bailey, Bruce"
email="Bruce_Bailey@ed.gov"
subject="RE: SVG Plugin from Adobe"
id="5DCA49BDD2B0D41186CE00508B6BEBD0300462@wdcrobexc01.ed.gov"
charset="iso-8859-1"
inreplyto="SVG Plugin from Adobe"
expires="-1"


To:"'Charles McCathieNevile'"<charles@w3.org>
Cc:"'w3c-wai-gl@w3.org'"<w3c-wai-gl@w3.org>

Dear Charles,
You're definitely a guru in my book.
I hope you don't mind experimenting with this a little more!
I am sure it's me, but please double check the URLs you gave.
I tried IE 5 / NN 4 (on the Mac, no Adobe SVG plugin) and Lynx, Amaya, IE 5,
NN 4 and 6 (on the PC, w/ Adobe SVG plugin).
On all platforms, slide32 brought up a PNG graphic.  There was ALT text, but
no other (non-trivial) text nor links (aside from the navigation buttons).
Slide40 was on RDF and only Amaya handled it correctly.
I was distressed to discover that Amaya could not handle the Adobe SVG
examples at URL <http://www.adobe.com/svg/demos/>

> -----Original Message-----
> From: Charles McCathieNevile [mailto:charles@w3.org]
> Sent: Saturday, December 23, 2000 2:44 PM
> To: Bailey, Bruce
> Cc: 'w3c-wai-gl@w3.org'; 'Kynn Bartlett'; 'Leonard R. Kasday'
> Subject: RE: SVG Plugin from Adobe
> 
> 
> Hmmm, I don't figure that I need to qualify as an SVG guru 
> for this one, so
> here goes <grin/>
> 
> If you read http://www.w3.org/2000/Talks/1116-oz/slide32-0 or
> http://www.w3.org/2000/Talks/1116-oz/slide40-0 with something 
> other than
> Amaya, you will almost certainly get some text (the first one 
> should also
> include a link). If you read it with Amaya you will see an 
> SVG embedded using
> the XML namespaces mechanism.  (unless you are using a 
> screenreader on the
> text-only screen, and then you get the text-type stuff) 
> That's one way to
> make things work. For a variety of reasons I think it is long 
> term the ost
> promising one. But aside from Office 2000 the major areas where
> namespace-based XML is being implemented is in XSLT processors (mostly
> "behind the scenes magic, although they are available in 
> browsers) and in RDF
> tools (where it seems fairly commonplace).
> 
> Another approach is to tell your browser to use an XML 
> browsing application
> to handle SVG, and provide a user style sheet - an example 
> one that you could
> use is given in the Note "Accessibility Features of SVG" -
> http://www.w3.org/TR/SVG-access - for this purpose. (If 
> anyone wants to write
> some neat XSLT for processing SVG into something even 
> smarter, I would be
> really glad...)
> 
> cheers
> 
> Charles McCN
> 
> 
> 
> On Thu, 21 Dec 2000, Bailey, Bruce wrote:
> 
>   Dear Group,
> [snip]
>   Kynn (and anyone else who can help me with my 
> understanding), I am reluctant
>   to mention it, but I do have a bone to throw you with regard to your
>   apparent contempt for SVG.  I understood that one of the 
> potential promises
>   for SVG was its accessible to screen reader and text-only 
> browsers.  I don't
>   see that in practice.  Textual information is, of course, 
> embedded in the
>   SVG file.  This is, of course, in theory much better than 
> relying on the
>   good will of the author to provide a separate and 
> stand-alone textual
>   equivalent.  As it stands now, Lynx users just get 
> <q>[EMBED]</q>.  I could
>   not get JAWS to do anything with an SVG file from within IE 5.
> 
>   I did have one partial success.  I renamed an SVG file 
> (from Adobe) from
>   clock.svg to clock.htm.  Opening the local file in IE revealed text!
>   Opening the local file in Lynx revealed text!  This was quite neat I
>   thought.
> 
>   Can any SVG gurus on this list speak to how this aspect is 
> suppose to work
>   in theory and practice?
> 
>   Cheers,
>   Bruce



