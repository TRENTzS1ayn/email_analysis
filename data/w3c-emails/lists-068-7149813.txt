docno="lists-068-7149813"
received="Sun May  6 20:35:18 2001"
isoreceived="20010507003518"
sent="Sun, 6 May 2001 17:32:52 -0700"
isosent="20010507003252"
name="Matt May"
email="mcmay@bestkungfu.com"
subject="Re: cross posted form IG"
id="009e01c0d68d$50680120$6601a8c0@sttln1.wa.home.com"
charset="iso-8859-1"
inreplyto="Pine.OSF.4.21-pb.0105061931270.10269-100000&#64;a5.ph.gla.ac.uk"
expires="-1"


To:<A.Flavell@physics.gla.ac.uk>
Cc:"W3c-Wai-Gl"<w3c-wai-gl@w3.org>

----- Original Message -----
From: "Alan J. Flavell" <flavell@a5.ph.gla.ac.uk>


> It isn't an "absolute length unit" in the CSS sense, however.

Per spec, perhaps not, but in implementation, where WCAG is meant to point
out accessibility problems, it is usually done in an absolute or
near-absolute fashion.

Worse, use of px is commonly symptomatic of a design team trying to generate
pixel-perfect designs, which is a much more far-reaching disease,
responsible for all manner of things we'd like to snuff out for
accessibility concerns, such as layout tables, large numbers of spacers,
authoring to browser idiosyncrasies rather than to spec, and so on.

All symptoms like these need to be addressed in WCAG; even issues that arose
as well-meaning additions to specs but caused problems of their own, such as
the <Q> tag, have to be covered. If there's a gap between the CSS spec and
its implementation, as there appears to be here, we've got to steer content
providers around it.

> > The major issue is that pixel-sized fonts can't be resized using the
font
> > tools in the browser.
>
> If the browser does what CSS asks of it, then clearly you have a
> problem; but any decent browser ought to have SOME ability for the
> user to take control when the author's presentation isn't accessible
> to them.

Ought to, yes, but again, oughtas belong in the User Agent Accessibility
Guidelines, not WCAG. As it is right now, the user controls for setting font
sizes in Netscape 4.x and IE 4-5.x don't change px-sized fonts, so that
needs to be addressed for content providers to make their pages more
accessible.

> > So if I have my browser's font set to "Largest", and
> > you have your fonts set to "8px", what I'll see is 8px no matter how I
try
> > to resize.
>
> This is so for NN4.* versions, for example. Turn off CSS and the
> problem is solved.

Then again, turning off CSS in NN 4 also turns off JavaScript. And while we
say pages should be able to work without certain technologies in use, that's
suggested so that people can choose not to use those technologies, not so
they can be forced by the content to turn them off.

> > A user's only theoretical way around this would be to use a
> > client-side style sheet, which is still unsupported in most browsers;
>
> Unfortunately, this cannot actually work in general, because the
> CSS-styled page is liable to use all kinds of specificities that will
> take priority over the more generic settings that a client stylesheet
> can set.  Only if the author has been a good guy and used relative
> sizing techniques (percent, em/ex, larger/smaller, inherit) is the
> cascade going to be susceptible to user influence in that way.
>
> To overrule authors who have created high-specificity absolute-sized
> font sizing, you need stronger medicine than just tossing a user
> stylesheet into the CSS cascade, if I'm not mistaken.

The !important declaration[1] in a client-side style sheet would take
precedence over a server-side style sheet in CSS2, even if the author
declares something "!important". This was done specifically for
accessibility. (In CSS1, author !important declarations overrode user
declarations.)

[1] http://www.w3.org/TR/CSS2/cascade.html#important-rules

-
m



