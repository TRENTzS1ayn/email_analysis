docno="lists-069-0657338"
received="Wed Aug 22 19:35:39 2001"
isoreceived="20010822233539"
sent="Thu, 23 Aug 2001 00:35:37 +0100"
isosent="20010822233537"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="Re: Modularization proposals"
id="007301c12b63$44063a20$b3da93c3@Palmer"
charset="iso-8859-1"
inreplyto="200108211634.MAA6190399&#64;smtp2.mail.iamworld.net"
expires="-1"


To:<w3c-wai-gl@w3.org>

Al, right on the ball as usual, wrote:-

> The virtue of a database approach to maintaining our
> knowledge of barriers and how to avoid them is that
> the information pertinent to a specific design decision
> can be isolated by algorithm and rich backups provided
> to the user of the knowledge.

A database system does appear to be the way to go, for Web Content
Accessibility guidelines, for all guidelines, for guidelines. If we had
some kind of location independant method for storing the information that
GL produces, that would be a significant first step towards achieving this
goal.

Chas. in particular has outlined some ideas on the list that deserve
attention. William has been telling us that we need user-orientated
presentations, and I'm always talking about Web-over-Hierarchy axioms. But
we've done very little in the way of real work, and beign a pragmatist, I'd
like to put forwards some concrete proposals.

Firstly, much of the stuff in WCAG is superfluous to the task of educating
people about accessibility, and the rest of the material is superfluous to
being an accessibility reference standard. WCAG can't fulfill that many
roles without getting overloaded, and hence my Haiku deeley. Chas.' idea of
separating out WCAG into three domains is at least a start, but of course
those domains can undergo further divisions. The idea is that a link
between files is very nearly as good as the file being there.

Al suggested something about a version of XHTML with XLink capabilities, or
XHTML marked up with many classes and extracted with XSLT. Chas. and I
often talk about RDF databases. With the XML Accessibility Guidelines, we
opted to go with XHTML + classes + XSLT, but I'm more adverse to
experimenting when it comes to WCAG 2.0.

I note that we still don't appear to have any techniques, even though we
have a DTD for the techniques. I would suggest RDF for this, but I have the
feeling that if I did, I'd be expected to carry out the implementation of
the damn system, and if it goes wrong, then I'll only have myself to blame
:-) So I'll cop out of that one

The simplest tool that we all have at our disposals, and is proven to work
reliably, is HyperText. William showed how customization through HyperText
works: we just come up with our own favourite views of a body of work, and
then publish it. The trick is to make sure that the body of work is
properly split up. If we have to use FradId's, then that's a failure :-)

So I agree with Joe that Chas.' idea to modularize WCAG is the best idea
that's been expressed all year. Now, can we start doing it?

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .



