docno="lists-069-10107184"
received="Wed Dec 19 05:51:23 2001"
isoreceived="20011219105123"
sent="Wed, 19 Dec 2001 10:49:57 -0000"
isosent="20011219104957"
name="Jim Ley"
email="jim@jibbering.com"
subject="Re: A single URI"
id="005701c1887a$ead99440$ca969dc3@emedia.co.uk"
charset="iso-8859-1"
inreplyto="200112190714.fBJ7EmH24095&#64;post.cnt.ru"
expires="-1"


To:<w3c-wai-gl@w3.org>

"Vadim Plessky"
> On Wednesday 19 December 2001 01:48, Scott Luebking wrote:
> |   will the web site technology handle a single URI for multiple
versions
> |   of a web page if the user doesn't allow cookies or has reached a
limit
> |   on cookies.  Did the GL committee come up with technology solutions
> |   for this situation?
>
> This is quite simple, but not widely used.
> Server can detect type of userAgent used (HTTP_USER_AGENT request) and
> generate "on-the-fly" HTML (or XHTML, or XML) which is rendered best by
this
> userAgent.

Absolutely not, this is an atrocious suggestion, HTTP_USER_AGENT is an
optional string, it's not defined as to what it should be, many browsers
deliberately "Spoof" it so as to gain access to sites that you're
describing as unless the developer knows the capabilities of the User
Agent (in javascript enabled browsers alone I know of 25 - I struggle to
keep up with the capabilites of 5) they serve up a page that isn't as
capable as it should be.  In IE simple registry changes can modify the UA
as well as proxies, in Opera there's simple menu changes, in Netscape
6/mozilla it's in the user preference file.

Equally it relies on you knowing the capabilities of the browsers in
question - what are the capabilities of IE6.5?  So even with future
mainstream browsers, you need to be ready to upgrade your detection
immediately it appears - the maintenance issues are huge - and will be
neglected.

In Freeserves (a large UK ISP) early days its proxy cache sent every
request with the same UA regardless of wat UA string was sent to it - and
again I've never seen a vary: header coming from such systems so again
proxy caches aren't able to handle it properly.

It's also a barrier to Assistive Technologies based on another browser -
such as Jaws being used in connection with IE5.5 - there's nothing sent
to identify that the IE5.5 is being used with Jaws despite radical
changes in usage - even less serious modifications like custom
stylesheets or scripting being disabled aren't detected by the technique.

CC/PP as described in all of the public drafts do nothing to solve any of
the problems described above - it's still talking about browsers and
platforms, rather than users, so you have the same problems.

Jim.



