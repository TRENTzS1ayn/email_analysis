docno="lists-069-15287725"
received="Thu Jun 20 02:21:37 2002"
isoreceived="20020620062137"
sent="Thu, 20 Jun 2002 12:21:24 -0500"
isosent="20020620172124"
name="Gregg Vanderheiden"
email="GV@TRACE.WISC.EDU"
subject="FW: New 2.1"
id="001501c2187e$e7e16710$066fa8c0@laptop600"
charset="us-ascii"
inreplyto="New 2.1"
expires="-1"

To:w3c-wai-gl@w3.org


Hi All,

 

Jason and I had an assignment to fix 2.1 to accommodate discussions at
previous meetings.   Here is what we came up with.  

 

Thank you Ben for your assistance on this.

 

Gregg

 

------------------------------------

Gregg Vanderheiden Ph.D.

Ind Engr - Biomed - Trace,  Univ of Wis

gv@trace.wisc.edu

 

 

 


Checkpoint 2.1 [2.5] All of the functionality of the content can be
operated through character input to the content or user agent.


 


Success criteria


 


You will have successfully met Checkpoint 2.1 at the Minimum Level if:


 

1.      content uses only event handlers that are designed to be
operable through character input. 

*        Note: see checkpoint 5.3 regarding user agent support.


You will have successfully met Checkpoint 2.1 at Level 2 if:


1.      wherever a choice between event handlers is available and
supported, the more abstract event is used.


You will have successfully met Checkpoint 2.1 at Level 3 if:


*        (Presently no additional criteria for this level.) 


The following are additional ideas for enhancing a site along this
particular dimension:


*        (Presently no additional criteria for this level.) 


Definitions (informative)


Character input is defined as those characters that can be mapped to the
character set of the W3C Character Model (which is based on Unicode).


Benefits (informative)


Individuals who are blind (and cannot use pointing devices) can have
access to the functionality of the Web content or site.  

 

Individuals with severe physical disabilities can use speech input
(which simulates keystrokes) to both enter data and operate the
interface elements on the page.


Examples (informative)


 Example 1: a submit button. 


A submit button can be activated by tabbing to it with the keyboard and
pressing the enter key or by using a keyboard shortcut (in addition to
the ability to directly "press" the button). 


Example 2


The content relies only on focus-in, focus-out and activation events;
these are defined in the API of the environment for which the content is
written, and are intended to be operable by a variety of input devices,
including pointing devices, keyboards and speech input systems.

 



