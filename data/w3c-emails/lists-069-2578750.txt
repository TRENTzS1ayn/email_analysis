docno="lists-069-2578750"
received="Wed Sep  5 13:06:58 2001"
isoreceived="20010905170658"
sent="Wed, 5 Sep 2001 17:00:00 -0000"
isosent="20010905170000"
name="Jim Ley"
email="jim@jibbering.com"
subject="Review of Script Techniques for Web Content Accessibility Guidelines 2.0 (part 2.)"
id="022f01c1362c$33743800$ca969dc3@emedia.co.uk"
charset="iso-8859-1"
expires="-1"


To:<w3c-wai-gl@w3.org>

Sorry Forgot the url last time:
http://www.learningdifficulty.org/develop/w3c-scripts.html

Section 2 Script Concepts - techniques and examples

"Be aware that not all browsers support javascript, and some users may
prefer to use their browser with javascript turned off. Many users will
not be aware of the functionality that your use of javascript brings. "

I think this needs to highlight more that even where javascript is
nominally supported your exact functionality may not be, whilst a fully
readable/accessible DOM is in theWAI User Agent conformance test, I don't
think it's reasonable or practical to always believe there's one going to
be available - Opera for example seem reluctant to provide one at this
time, yet are very active in accessibility in other areas.

2.2 Keyboard & mouse

I'm concerned with the confusion and incompatibility this could bring, in
the WAI User Agent guidelines, the onmouseover etc. events must be made
available to keyboard users, therefore, if you duplicate focus and
mouseover - you have the situation where users will see two actions,
which could confuse, or equally cause scripting problems.  I'm not sure
of the result, but since it must have accessbile content where script is
disabled see less of a problem with just choosing one of the event
handlers.

(there are also scripting quality issues with the example, this I'll
address directly to the author.)

3.1 "Hiding whilst loading"

I see no problems with the solution, whereby

You have your normal site, stylesheets and everything, then using script
you import another stylesheet/add a rule saying
body { visibility:hidden; }
then onload swap it.

It only fails in the currently unknown, (and not very conceivable)
situation where you can disable javascript between the page beginning to
render and the onload event firing or where the body element is not
available to script, yet you can import stylesheets.

7.1 - I don't see the censure over using document.write (which presumably
excludes other dynamic content.)  IE5.5 and JAWS AIUI certainly reads the
content although this is more with created rather than updated - although
updated content doesn't use document.write.  Certainly document.write
content is hidden from script disabled browsers, but that's often an
advantage as it means you can hide the script enhancement easier from the
browser than many other techniques.

 I think censure is over the top, "Do not use" is too explicit, even on
something like the javascript: pseudo-protocol which is definately very
often misused by a great many scripters and harms accessibility does
concievably have uses without accessibility suffering.

Well it's time for a run, so that's the end of Part 2...

Jim.



