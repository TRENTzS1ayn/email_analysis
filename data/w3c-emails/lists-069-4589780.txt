docno="lists-069-4589780"
received="Tue Sep 25 13:59:33 2001"
isoreceived="20010925175933"
sent="Tue, 25 Sep 2001 18:55:00 +0100"
isosent="20010925175500"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="WCAG 2.0 CP 4.4 Considered Harmful [was: Re: WCAG 1.0 CP 6.1...]"
id="018801c145eb$e79642a0$0bd993c3@y0r1d9"
charset="iso-8859-1"
inreplyto="4.2.0.58.20010925130848.00c76880&#64;localhost"
expires="-1"


To:<w3c-wai-gl@w3.org>,"Wendy A Chisholm"<wendy@w3.org>
Cc:"William Loughborough"<love26@gorge.net>

[...]
> Yes, this is an issue in WCAG 1.0 which is why in WCAG
> 2.0 we very carefully say,

Oops, I should have checked WCAG 2.0 first... :-)

> "Checkpoint 4.4 Ensure that content remains usable when
> technologies that modify default user agent processing or
> behavior are turned off or not supported. "

For a start, stylesheets do not modify the processing, they modify the
rendering. Perhaps WCAG 2.0 is taking the rendering to be a part of a
"process", but it would behove it to use standard terminology. Secondly, I
admit that it can almost be guaranteed that a UA has a mode of default
rendering at all for legacy text/html HTML, although in practise people
*always* do assume that, and it is admittedly necessary to do so. However,
this view is full of legacy idioms, and WCAG 2.0 is meant to be technology
neutral and contemporary. Checkpoint 4.4 in WCAG 2.0 would appear on the
surface to be a vagely useful guideline when applied to legacy HTML, but it
will not work at all when applied to XHTML 2.0 or any other generic XML
content language, and so the "harmful" comment still stands.

Up-to-date UAs treat XHTML served as text/xml in funny ways... some
preserve the behaviours for the controls (recognize hypertext, forms, etc.)
*and* give a default rendering, and yet others don't apply a default
behaviour or give any default rendering at all.

When CSS is not applied to XHTML 2.0, I wouldn't expect a UA to render
anything. Perhaps it will show the text by default, or perhaps it will show
the outline of the XML tree, but it does not have to make the page "usable"
by applying a default knowledge base to the document. Checkpoint 4.4 does
not necessarily (read: usually) stand for XHTML 2.0 or other generic XML
content languages. The thing about XML is that processors do not need to
have a default knowledge base, other than that of XML, namespaces, XML
related technologies, and CSS.

XML gives us the future on a plate in some ways, by admitting that HTML
architecture was less than sound. As WCAG 2.0 is meant to be technology
independent, it must acknowledge that lecagy technologies such as HTML
often have a default rendering such that the author does not need to
provide one, but mainly note that markup langauges do not necessarily have
a default rendering, and that in the case of generic XML content languages,
it is actually *good* not to. Checkpoint 4.4 still breaks all of that by
sticking with the legacy view, and hence it is still harmful.

But do not confuse the fact that "HTML often have a default rendering such
that the author does not need to provide one" with "because HTML has a
default rendering, that is the de_facto graceful transformation point". It
does not fit in with the contemporary view, and it does not send a good
message out to the world. The point still stands about class semantics
needing (yes, that's a MUST in the RFC sense of the word) to be preserved.
The default rendering that HTML UAs have is a sham, and we should prepare
people that it's something that won't be a necessity in the future.

> This is also why in my explanation I only called out HTML
> since it does have a default rendering.

But it shouldn't. In any case, adding semantics often increases the
usefulness of a document, makes it more accessible, and by defaulting back
to CP 4.4 as a method of begging out of the problem, you're eradicating any
chance at all of even *investigating* a method to make this happen. It may
well be (as I suspect is the case) that attaching semantics to classes is
just too far out... but it would be a technical irresponsibility on the
behalf of the WAI to just let it go.

> Issuing an erratum for 1.0 is a good idea.  Do you agree it
> can be based on the work we've done in 2.0?

Since I don't particularly agree with CP 4.4 in WCAG 2.0, no, I don't :-)
Now, I think that 1.0 and 2.0 both need fixing.

Cheers,

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://webns.net/roughterms/> .
:Sean :hasHomepage <http://purl.org/net/sbp/> .



