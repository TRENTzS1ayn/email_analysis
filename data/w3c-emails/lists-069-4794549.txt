docno="lists-069-4794549"
received="Wed Sep 26 11:21:04 2001"
isoreceived="20010926152104"
sent="Wed, 26 Sep 2001 08:21:01 -0700"
isosent="20010926152101"
name="Matt May"
email="mcmay@yahoo.com"
subject="Re: Browser and Technology Support [Was: Re: [w3c-wai-gl] &lt;none&gt;]"
id="00ae01c1469e$dac0f3a0$6501a8c0@vaio"
charset="iso-8859-1"
inreplyto="01fc01c14698$acabd440$ca969dc3&#64;emedia.co.uk"
expires="-1"


To:"Jim Ley"<jim@e-media.co.uk>,<w3c-wai-gl@w3.org>

old MM
> > The user experience without script is prone to error and, quite
> honestly,
> > abysmal, particularly in online grocery. It's not a viable approach for
> many
> > sites to design sites to function both with and without script and
> across
> > browser versions.

JL
> Why is it not a viable approach?  What is the specific reasons that makes
> it non-viable, the ability the site developers is pretty much all I can
> come up with.

MM
Again with the ability of the developer...

The HomeGrocer site, for example, was designed in 1998. It used frames to
encapsulate the cart for submits so the entire page didn't go away when a
user clicked the Buy button on an item. Users commonly clicked Buy buttons
in rapid succession such that, whether the Buy button was an INPUT
type=image or an A, UAs like IE4 would throw back errors when the button was
pressed again before the frame had returned. Also, when it was an A, users
who changed something in their carts (and they almost never submitted
changes) would lose the changes when they went to buy a new item. So I wrote
script (at the time, in both JavaScript and VBScript) to cache Buy button
clicks while the form was not ready. The site, as designed, would not
function otherwise, at least to the extent that people would bother to have
used it.

At a certain level, it no longer becomes an issue of the developer's
ability, but of the business decisions of the site, and that includes, among
other things, pixel-perfect designs in all major browsers, downlevel
compliance (which can cause many designers to mess around with things like
document.images for interactivity), and a decent user experience. That, too,
alters the course of the development cycle. To a large audience of novice
users (or, for example, those with cognitive disabilities), the best way to
reach good usability in cases like mine is to require script. Which isn't to
say that's not overdone fairly often, but there are logical cases to be made
for sites who say, "we have made accommodations for ATs that support
JavaScript and have it turned on."

-
m


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com



