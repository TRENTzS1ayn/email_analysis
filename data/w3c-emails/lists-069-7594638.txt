docno="lists-069-7594638"
received="Sat Nov 10 15:47:46 2001"
isoreceived="20011110204746"
sent="Sat, 10 Nov 2001 15:43:37 -0500 (EST)"
isosent="20011110204337"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: [CSS-TECHS] List of CSS Values cross referenced with Properties?"
id="Pine.LNX.4.30.0111101529020.3858-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="009101c16a1b$e5e47360$4ed993c3&#64;localhost"
expires="-1"

To:"Sean B. Palmer"<sean@mysterylights.com>
cc:<w3c-wai-gl@w3.org>, Al Gilman<asgilman@iamdigex.net>,<libby.miller@bristol.ac.uk>,<danbri-semanticweb-vapourware-for-the-masses@rdfweb.org>


On Sat, 10 Nov 2001, Sean B. Palmer wrote:

> The goal is "properties listed by what value types they take". To go
> this extra step further, you'll have to decide whether or not it's
> worth losing the structuring information on the value lists. At the
> moment, I have kept the structure intact:-
>
>    :counter-increment :values "[ <identifier> <integer>? ]+ | none |
> inherit" .
>
> However, it would be possible to modify the RegExp a bit further [1]
> to produce:-
>
>    :counter-increment :values v:identifier, v:integer, v:none,
> v:inherit .
>
> which would then be queryable, but would lose the structure
> altogether. The next step would be to model the CSS value list syntax
> in RDF... that would require quite a bit more work, but might be worth
> it if this were going to be used in a serious application.

Yes, that struck me as the next step too. Breaking out the regexp
looks useful, exploring the use of rdfs:range instead of 'values' as the
property is the harder bit. I suspect it'd throw up some interesting
issues (which may or not be interesting to this group ;-)

Similarly, appliesTo is currently rather prosy. In RDF I'd be tempted to
use rdfs:domain for this though that'd require defining classes for the
(HTML? XHTML? XML?) elements the styles can be applied to. At this point I
should admit to not having got my head around the application of CSS to
generic XML markup (as against using it with HTML, where we're in more
tightly defined territory).

The range/domain stuff probably isn't necessary for the immediate goal of
listing properties by the values they take, while breaking out the regex
probably is. I'd also make the RDF define each CSS property as an RDF
property explicitly, so other RDF/sw apps could re-use them.

A practical application of this might be extending the 'circle and
arrow diagrams using stylesheet rules' work by DanC, see:
http://www.w3.org/2001/02pd/ which currently uses its own set of
properties and classes for styling information (color etc). Why would a
WAI group be interested in this? Imagine if everyone modeled (as per
DanC's example) their organisational chart info in RDF, so it could be
queried, re-used etc., derrriving visual presentations of if using RDF rules
and the styling vocab. Right now, most of the org chart data I encounter
seems to be primarily available as PNG/JPEG or MS Powerpoint, with associated
accessibility difficulties...

Dan



-- 
mailto:danbri@w3.org
http://www.w3.org/People/DanBri/



