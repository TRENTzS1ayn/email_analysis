docno="lists-069-9349120"
received="Sat Dec  8 01:58:26 2001"
isoreceived="20011208065826"
sent="Sat, 8 Dec 2001 01:58:22 -0500 (EST)"
isosent="20011208065822"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: form controls: acesskey shortcuts."
id="Pine.LNX.4.30.0112080134180.20981-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="73388857A695D31197EF00508B08F298061E2F7D&#64;ntmsg0131.corpmail.telstra.com.au"
expires="-1"

To:"Mirabella, Mathew J"<Mathew.Mirabella@team.telstra.com>
cc:"'W3C WAI Web Content Accessibility Guidelines list'"<w3c-wai-gl@w3.org>


summmary: underline isn't bad, but this is something the browser should
really do. For an example of a browser that does, see iCab. For an example of
a page that does explain the keys used, see http://www.globalformats.com
although it suggests using Alt Z (for example) which isn't what works on a
lot of accesskey-capable browsers.

As a technique for doing this it is possible to use CSS2:

*[accesskey]:after { content: '<' attr(accesskey) '>' }

(This would give the same as the iCab default rendering)

details:

There are a couple of problems with the underline - as Mat mentioned, it
isn't very informative non-visually (although that could be changed). More
seriously, there is a problem that accesskeys specified by the author might
not be the ones used by the browser.

Different browsers have different reserved keys - there are some that Windows
reserves, there are keys that are used by Mac software, and there are keys
which are taken in almost any combination (alone, shift, shift-alt,
shift-ctrl-alt, ctrl, etc) by some programs.

Accesskeys are only starting to be well implemented, and there are a number
of different solutions used to this problem. As far ass I know the standard
solution in Windows is to ignore accesskeys that aren't available - although
it seems that this list  isn't easily found (I haven't looked, so I may be
wrong, but people I have asked who have looked haven't found it).

In other systems there is the opportunity to define a "pass-through"
function. For example, the 'X' key may be normally reserved by a program to
quit. But it is possible to use the 'I' key to specify that the program
itself should ignore the next key pressed, so if I use the combination "I X"
the X is passed through to the content (which has dynamic inteface features
such as links with accesskeys).

Another solution again is to provide the accesskeys via a seperate view. This
is especially useful for people who cannot easily scan the document and would
like to know in advance what accesskeys are available.

And another solution is simply to use different keys. It is legal to specify
any hebrew, arabic, korean or cyrillic character as an accesskey, but a user
may not ahve those on the keyboard. It is therefore sensible to allow the
user agent to assign a different key, and that is why it should be the user
agent that shows the key, rather than the page author. This is in fact what a
number of mobile-phone based browsers do.

for pages where it is going to be really easy to update the page, it might be
worth keeping the marker until browsers catch up (for example the global
formats page provides this information as part of a special option that can
easily be turned on or off). But this would be a short-term technique that is
a workaround, and is likely not to work in the medium to long term.

Cheers

Charles McCN

On Fri, 7 Dec 2001, Mirabella, Mathew J wrote:

  All.

  A further query and item for discussion.

  Excluding the provision of a separate page with a list of accesskeys, how do
  you highlight the fact that keyboard accesskey shortcuts are available
  without making dramatic changes to a page.

  An example:

  <label for="username">Username:</label> <input name="username"
  id="username" type="text" value="" size="30" tabindex="1" accesskey="u">

  I have seen one way to indicate to users that there is a keyboard shortcut
  combination.  Place some text on the page explaining the alt-combination
  shortcuts, and also underline the respective character in the text of the
  label.  What are your thoughts on the following example of underlining
  characters.

  ...<span style="text-decoration: underline;>U</span>sername...

  This is, of course, visual, and not descriptive to a screen reader user.  So
  there are problems with doing this without non-visual equivalents.  It would
  also be a problem with links, as link text is supposed to be underlined.
  Maybe you could use a bolded character instead of an underlined character?

  What do you all think?

  Cheers.

  mat.


  Mat Mirabella
  Telstra Research
  03 9253 6712


-- 
Charles McCathieNevile    http://www.w3.org/People/Charles  phone: +61 409 134 136
W3C Web Accessibility Initiative     http://www.w3.org/WAI    fax: +1 617 258 5999
Location: 21 Mitchell street FOOTSCRAY Vic 3011, Australia
(or W3C INRIA, Route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex, France)



