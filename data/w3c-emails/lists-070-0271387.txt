docno="lists-070-0271387"
received="Thu Jan 24 16:29:29 2002"
isoreceived="20020124212929"
sent="Thu, 24 Jan 2002 21:24:45 -0000"
isosent="20020124212445"
name="Jim Ley"
email="jim@jibbering.com"
subject="Review of WCAG 2.0 checkpoint 4.1, 4.2, 4.3"
id="012201c1a51d$f151f780$ca969dc3@emedia.co.uk"
charset="iso-8859-1"
expires="-1"


To:<w3c-wai-gl@w3.org>


Checkpoint 4.1

Scripting has some problems, there are holes which are standardised by
anyone - "DOM Level 0" - required for any scripting at all; exists
only in proprietary implementations, so 4.1 success criteria 4 isn't
possible for scripting, is it therefore the intention that scripting
isn't an appropriate choice, or is "widespread workable support" [1]
ok?

Checkpoint 4.2

By only using standard DOM methods in the real world, you limit your
browser audience, to those that have implemented those standards,
however due to the organic way that scripting and standardisation has
gone, you can have good browser support for your script by using slightly
different
methods without breaking any others. Scripting does increase
accessibility, and as a developer I'd like to support every browser I
can that doesn't harm others, limiting me to only standardised ones
will be prevent me supporting widely used platforms. (I won't convince
others if they can't support IE5 for example - which generally can be
done without danger.)

Checkpoint 4.3

Validity of CSS and of Scripting languages cause a problem, it means
you can not use any browser extension without breaking this
checkpoint, even if the extension is one that increases
accessibility without damaging it elsewhere.  ECMAScript allows
developers to extend
the language in pretty much any way they want, this is outlawed by
HTML [2] and CSS (as I understand it.) HTML I can understand much more
than CSS, but adding a proprietary CSS property like "border-radius",
will not harm
accessibility, yet the alternatives if that's not available will
certainly not be as clean, and may well harm things.

Jim.

[1] By workable support I mean the differences in implementations can be
hidden from the user by use of the scripting language

[2] XHTML may be different, but from my perspective that does not appear
to be an option for web publication until browsers actually support it,
rather than giving unpredictable results.



