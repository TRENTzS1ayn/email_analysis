docno="lists-071-0364508"
received="Fri Jun 20 17:08:26 2003"
isoreceived="20030620210826"
sent="Fri, 20 Jun 2003 11:08:19 -1000"
isosent="20030620210819"
name="Chris Brainerd"
email="Chris.Brainerd@cds.hawaii.edu"
subject="RE: [166] Organize documents so they may be read without style  sheets"
id="4394F66E688EBD418EFD4431FC3AECBD04D5A4@lahaina.cds.hawaii.edu"
charset="us-ascii"
inreplyto="[166] Organize documents so they may be read without style  sheets"
expires="-1"


To:"Joe Clark"<joeclark@joeclark.org>,"WAI-GL"<w3c-wai-gl@w3.org>


I agree with Joe wholeheartedly and restate my claim that some
checkpoints- this one in particular- appear designed to support users of
legacy browsers which is not, in my opinion, our charter. The strength
of the argument would suggest that this checkpoint be deleted.

To promote accessibility, it is more important, in my opinion, to write
CSS that allows the user to control font size and to substitute their
own style sheet without making the content unintelligible.

Chris Brainerd
Instructional Designer
Real Choices ACCESS
Center on Disability Studies
University of Hawaii
Chris.brainerd@cds.hawaii.edu
808-956-9356


-----Original Message-----
From: Joe Clark [mailto:joeclark@joeclark.org] 
Sent: Friday, June 20, 2003 8:49 AM
To: WAI-GL
Subject: RE: [166] Organize documents so they may be read without style
sheets



>There are a couple of reasons why this seems a worthwhile
>requirement to retain.
>
>One is that the techniques for doing it are remarkably simple in
>general - don't (as Microsoft Publisher certainly used to) use CSS 
>positioning to move the presentation of things which have a 
>nonsensical source order,

That's a question of valid HTML. It has little to do with CSS. And 
*yet again*, WCAG must not be fashioned around the quirks of a 
specific authoring tool.

>  don't include vital content through CSS (this is just accurately
>seperating content and presentation, although that is harder than 
>people sometimes claim, as Jonathan's examplle shows).

Either WCAG authorizes the use of CSS or it doesn't. CSS is a W3C 
recommendation. WAI must make up its mind about authorizing or 
disallowing the use of CSS. I would continue to suspect any effort to 
discourage CSS use as a covert effort to disparage the need for good 
visual design of Web sites. WAI would have to prove that was neither 
the intent nor the effect for me to support any such limitation.

>This might seem like saying "don't do really perverse things to your
>page", but that still needs saying - after all one person's 
>abominable perversion is another person's normal lifestyle.

This too is a question of valid HTML more than anything else.

In any event, WAI seems to miss a basic fact about CSS-enabled 
browsers: They're *always* using a stylesheet. Even when a page 
author does not declare a stylesheet, the browser's internal 
stylesheet, which you can usually find buried very deep within the 
browser's support files, is in use.

If we exclude search-engine bots, which could hardly be called user 
agents, the only browsers I know of with literally no CSS support are 
the almost-never-used text-only browsers Lynx, Links, and W3M. 
*Everything* else uses stylesheets-- generally quite well in 5.0 and 
later browsers.

It would make more sense to require that, if an author *chooses* not 
to specify a stylesheet, the author must test in a reasonable 
selection of user agents to assure that the document can be read. But 
that should only be a side-effect of a larger requirement *to* use 
stylesheets, which every professional Web designer is using anyway. 
WAI needs to get serious about the use of valid HTML with valid CSS.

The fact remains that the requirement, as written in WCAG 1.0, is 
outdated. Nobody has been able to document the requirement's 
real-world impact save for a single edge case, and nobody has shown 
that there is any accessibility deficit the requirement would fix. 
Charles's increasingly convoluted hypothetical scenarios are just the 
sort of thing WAI loves to use to justify murky, contradictory 
accessibility requirements, but they are also exactly the sort of 
thing that should no longer be used for that purpose.

>And the difference between floated and positioned elements, very
>roughly, is that floated elements are moved to one side or the other 
>but are the same vertical position as they would be if not floated, 
>whereas positioned elements can be placed more or less anywhere in 
>the page, and can stay in one place on the screen while the rest of 
>the page is scrolled.

In a word, no. _Eric Meyer on CSS_, p. 197: "So why did we go to all 
that effort to use positioning when we'd already used float to 
achieve the same effect and didn't have nearly as much to worry 
about? Because now we have much more flexibility in terms of where 
the sidebar markup can appear. With float, the sidebar had to come 
before the entry. Now its markup can be anywhere from before the h1 
to after the entry." Merely one example.


-- 

     Joe Clark | joeclark@joeclark.org
     Accessibility <http://joeclark.org/access/>
     Weblogs and articles <http://joeclark.org/weblogs/>
     <http://joeclark.org/writing/> | <http://fawny.org/>



