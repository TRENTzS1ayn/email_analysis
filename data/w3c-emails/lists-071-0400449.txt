docno="lists-071-0400449"
received="Sat Jun 21 10:12:46 2003"
isoreceived="20030621141246"
sent="Sat, 21 Jun 2003 10:12:44 -0400 (EDT)"
isosent="20030621141244"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="RE: [166] Organize documents so they may be read without style   sheets"
id="Pine.LNX.4.30.0306210942350.28111-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="a05200f14bb18fdce0220&#64;[192.168.1.101]"
expires="-1"

To: Joe Clark<joeclark@joeclark.org>
cc: WAI-GL<w3c-wai-gl@w3.org>



Summary:

Agree that we should recommendd CSS. Agree with Kynn that a better statement
is that pages should work with the default stylesheet (as Joe pointed out,
most browsers do this for HTML, and that is also true for SVG). Agree that we
should not devise requireemtns based on what specific software does, but on
what end users need to have and not have in documents. Agree (again) with
Eric Meyer that CSS positioning provides more control than float.

Disagree that this is relevant to whether the HTML is valid or not. Disagree
that this is a hypothetical problem (although it surprises me that it isn't).
Disagree that recommending against one use of CSS (or HTML for that matter)
is the same as saying "don't use CSS (or HTML)". Disagree with Eric Meyer
about float requiring a particular markup order (and provide proof of why he
is wrong).

I don't work for WAI, I don't speak for WAI, I don't represent WAI.

details below.

On Fri, 20 Jun 2003, Joe Clark wrote:

>
>>One is that the techniques for doing it are remarkably simple in
>>general - don't (as Microsoft Publisher certainly used to) use CSS
>>positioning to move the presentation of things which have a
>>nonsensical source order,
>
>That's a question of valid HTML. It has little to do with CSS. And
>*yet again*, WCAG must not be fashioned around the quirks of a
>specific authoring tool.

It is nothing to do with valid HTML - if Microsoft tools produced valid HTML
and used this positioning technique nothing would change.

I agree that the requirements should not be fashioned around any paarticular
authoring tool. The requirement is to avoid doing something which happens to
be stupid, but also happens to be perfectly valid according to all the
relevant specifications except WCAG, and was even done by a tool (not just a
coupe of perverse authors).

>>  don't include vital content through CSS (this is just accurately
>>seperating content and presentation, although that is harder than
>>people sometimes claim, as Jonathan's examplle shows).
>
>Either WCAG authorizes the use of CSS or it doesn't. CSS is a W3C
>recommendation. WAI must make up its mind about authorizing or
>disallowing the use of CSS. I would continue to suspect any effort to
>discourage CSS use as a covert effort to disparage the need for good
>visual design of Web sites. WAI would have to prove that was neither
>the intent nor the effect for me to support any such limitation.

Please, use CSS. Use CSS to make the design beautiful. Make the content
interesting enough, and sufficiently well presented to be read by people, and
not the few people who think W3C specifiactions are interesting reading.

I do not support disallowing CSS. (I don't support disallowing HTML either,
but I do support stating that the presentational HTML elements of HTML 3.2
should not be used as it happens, because in my opinion CSS should be used
instead).

I do support using it with another specification to seperate the semantics of
a document from its presentation (or as others say "content from
presentation"). If the semantics are available independently of the
presentation people might be able to reliably present the document in a way
that suits them better. A good designer, of course, will use style and
creative talent with an understanding of people to present it in such a way
that most people won't want to change the presentation.

>It would make more sense to require that, if an author *chooses* not
>to specify a stylesheet, the author must test in a reasonable
>selection of user agents to assure that the document can be read. But
>that should only be a side-effect of a larger requirement *to* use
>stylesheets, which every professional Web designer is using anyway.
>WAI needs to get serious about the use of valid HTML with valid CSS.

Agreed. I think Kynn most clearly stateed what I was trying to suggest as an
evolution of this checkpoint, which is that the document should work with the
default stylesheet. This is not perfect either - the default stylesheet for
SVG doesn't work for any useful images.

>The fact remains that the requirement, as written in WCAG 1.0, is
>outdated. Nobody has been able to document the requirement's
>real-world impact save for a single edge case, and nobody has shown
>that there is any accessibility deficit the requirement would fix.

I had to repair an entire commercial site generated with publisher, because
it did what I am claiming it did. I presume I am not alone (also in telling
the people who started the thing to delete Publisher and get something else).

>>And the difference between floated and positioned elements, very
>>roughly, is that floated elements are moved to one side or the other
>>but are the same vertical position as they would be if not floated,
>>whereas positioned elements can be placed more or less anywhere in
>>the page, and can stay in one place on the screen while the rest of
>>the page is scrolled.
>
>In a word, no. _Eric Meyer on CSS_, p. 197: "So why did we go to all
>that effort to use positioning when we'd already used float to
>achieve the same effect and didn't have nearly as much to worry
>about? Because now we have much more flexibility in terms of where
>the sidebar markup can appear. With float, the sidebar had to come
>before the entry. Now its markup can be anywhere from before the h1
>to after the entry." Merely one example.

Sorry, this statement by Eric Meyer turns out to be based on a limited view
of what can be done. Float allows two or more elements to exist side by side
in the presentation. Which one of these is considered a "sidebar" has nothing
to do with markup order.

Concretely, in order to put your menubar after the main content in markup
order, but still have it appear to the left of the main content and starting
at the same height, you simply put your main content in a div and float it
right. Quod Erat Demonstrandum (the thing that needed to be proven).

And just to remind Joe, who seems to identify me with WAI, I do not work for
WAI, I do not speak for WAI, I do not represent WAI. My participation in WAI
activities is exactly the same as Joe's - as somebody who participates in the
work and claims to have some knowledge about accessibility and techniques for
achieving it.



