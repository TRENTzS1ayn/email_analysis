docno="lists-071-15095417"
received="Fri Dec 12 04:35:57 2003"
isoreceived="20031212093557"
sent="Fri, 12 Dec 2003 04:35:57 -0500 (EST)"
isosent="20031212093557"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="extending CSS is unnecessary Re: Abbreviations and Acronyms:  [techs]  Latest HTML   Techniques Draft"
id="Pine.LNX.4.55.0312120421590.17211@homer.w3.org"
charset="iso-8859-1"
inreplyto="165001c3bff4$31eff240$3ef4ae8b&#64;heim4.tuclausthal.de"
expires="-1"

To: Christoph P?per<christoph.paeper@tu-clausthal.de>
Cc:www-html@w3.org,w3c-wai-gl@w3.org



Actually you can do this already, using XHTML 1.1 and CSS 2, as the
following example shows:

some XHTML:

...
<ruby class="acron">
<rb>NATO</rb><rt>North Atlantic Treaty Organisation</rt></ruby>'s
strategy for the
<ruby class="init"><rb>UN</rb><rt>United Nations</rt></ruby>
was yesterday spelled out by
<ruby class="abbr"><rb>Dr</rb><rt>Doctor</rt></ruby>
Strangelove...

with the following style:

@media screen {
ruby.init rb, ruby.abbr rt, ruby.acron rt { display: none }
}

@media aural {
ruby.init rt, ruby.abbr rb, ruby.acron rt { speak: none }
ruby.abbr rt, ruby.acron rb { speak: normal }
ruby.init rb { speak: spell }
}

which will present on screen:

NATO's strategy for the United Nations was yesterday spelled out by Dr
Strangelove

and will read in audio:

"Nato's strategy for the U N was yesterday spelled out by Doctor Strangelove"

Seems too easy - three classes to cover the required variations, the
information is there to allow people to give a different version, it's all
element content, ...

cheers

Chaals

On Thu, 11 Dec 2003, Christoph P?per wrote:

>  <link rel="stylesheet abbr" href="/abbreviations.css" type="text/css"
>media="aural"/>
>  ...
>  <p xml:lang="en"><abbr>e.g.</abbr>, <abbr>abbr.</abbr>,
>  <acronym>WWW</acronym>, <acronym>NATO</acronym>.</p>
>
>  /* /abbreviations.css */
>  abbr("abbr."):lang(en) {content: "abbreviation";}
>  abbr("WWW"):lang(en) {content: "World Wide Web"}
>  abbr("WWW"):lang(de) {content: "W W W";}
>  abbr("NATO") {content: "Nato";}
>
>Quite similar a glossary might work:
>
>  <link rel="glossary" href="/glossary"/>
>  ...
>  <term>foo</term>
>
>  ; /glossary.txt
>  foo: A generic placeholder.
>
>  <!-- /glossary.html -->
>  ...
>  <dl><dt id="foo">foo</dt><dd>A generic placeholder.</dd></dl>



