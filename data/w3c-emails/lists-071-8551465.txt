docno="lists-071-8551465"
received="Fri Aug 29 22:46:54 2003"
isoreceived="20030830024654"
sent="Sat, 30 Aug 2003 12:45:23 +1000"
isosent="20030830024523"
name="Geoff Deering"
email="gdeering@acslink.net.au"
subject="RE: The Disunity of W3C Specs"
id="NBBBJPNFCLNLAADCLFJBKEAGENAA.gdeering@acslink.net.au"
charset="US-ASCII"
inreplyto="5.2.0.9.2.20030829191259.01a0fb20&#64;localhost"
expires="-1"

To:"Wendy A Chisholm"<wendy@w3.org>,"WAI GL"<w3c-wai-gl@w3.org>



Hi Wendy,

I take your points, and I am familiar with these issues, but I am more
concerned with all these branches leading to disunity and web developers
giving up because it is too difficult to reconcile to one point and not one
good parser that is able to address validation of their code according to
DTD, Schema and Accessibility Guidelines.

Like, I have just gone back and read the specs on TH/TD to see what I
suggested is not related to the specs.  Fair enough.  But I don't have a
photographic memory and only have a basic framework of the W3C standards in
my mind, I have to consult them to resolve issues.  Most developers will not
do that, not cause they are lazy or don't care, but because every hour of
their work is time managed and their project manager is going to say; "What
the hell we you doing there?  Is it really necessary?  We are on a tight
budget."  But it if an accessibility analysis parser is a check option on
the official W3C validator page, that brings the whole issue into bearing
and focus, and developers will use it to get a status report on their page.
I know there are commercial products out there, but they do not have the
respect the W3C parsers have.

Regarding the <ACRONYM> and <ABBR> issue, if I know that XHTML2.0 is
dropping <ACRONYM>, why should I use it, when I know that the templates or
code I am going to use will require additional finances and time in the
future to come back and address this.  My project manager would not be happy
to find I am using an element that looks like being dropped, when I could
drop it and just use <ABBR> and save the company time and money.

Such minute details of project cost cutting do get addressed in places I
have worked, and the project managers are ruthless on anyone not using their
full knowledge to be absolutely efficient and economical.  This is where
such knowledge does pay off.  PM's then know the time you spend on this
knowledge is of some value.


>I think Mark Pilgrim's frustration
>(http://diveintomark.org/archives/2003/01/13/semantic_obsolescence) as
>representative of a lot of developers who are trying to do the right thing,
>but are caught in the fragmentation that happens, even though this whole
>process is about trying to readdress just that point.  There are a lot of
>them out there that are trying to do the right thing.

There are many pieces to the puzzle.  Why haven't user agent developers
implemented the standards that they helped develop?

Because of market forces.  But now they are doing a far better job.
Why don't users update their browsers each time a new one is released?
Why should they, and that's one of the benefits of following these
guidelines, that your content is more accessible.
Why don't authoring tools generate valid code?
First, why should they when generating HTML soup best addresses the market
needs.

And to be blunt, because their programmers aren't good enough... not because
I am better, but because I have worked with programmers who can build such
applications, some really good ones.

There are several answers to each of these questions.

>What is going to happen is that we are not going to end up with a formal
set
>of grammars, but just a better and improved HTML soup.
>
>Currently, I think the only developer who can get this type of thing right
>is one who has full access to configuring their web server, deploying
>transparent content negotiation, and transforming their documents using
>XSLT.  Otherwise there is just too many sets of variables.
>
>If there is fragmentation between the Markup standards and the
Accessibility
>standards, then web developers will ignore whatever is fragmented.  If
>possible they only want to deal with one validator, which represents a
>unification of standards.



Thanks for voicing your concerns and helping to make sure we contribute to
the W3C mission. I hope this calms your frustrations/fears. If not, let's
figure out what we need to do.


Thanks, but I'm not so much voicing my frustrations as those of a lot of
well intentioned developers I have worked with.  Often the W3C is seen as
evil incarnate, which I often have to explain is the wrong end of the stick,
where I explain if you really approach these recommendations, guidelines and
checkpoints properly they are very friendly advice on how to avoid possible
problems.

When they say it is just a bunch of academics trying to impose their view, I
often tell them to go and read the discussion lists, and you see a lot of
people trying to work together to make it both more accessible for everyone
and also more addressable to the developer, and fighting for the developers
rights equally.

From time to time I will play the devils advocate on this list, but it is
not meant to be malicious or counterproductive, just a voice from a part of
the community as a whole that needs their view expressed

Thanks for reply
Geoff



