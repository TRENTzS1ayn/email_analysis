docno="lists-071-8572805"
received="Sat Aug 30 00:24:56 2003"
isoreceived="20030830042456"
sent="Sat, 30 Aug 2003 14:24:12 +1000"
isosent="20030830042412"
name="Geoff Deering"
email="gdeering@acslink.net.au"
subject="RE: The Disunity of W3C Specs"
id="NBBBJPNFCLNLAADCLFJBOEAJENAA.gdeering@acslink.net.au"
charset="US-ASCII"
inreplyto="7F189A4C-DA94-11D7-9B28-000393D9E692&#64;idyllmtn.com"
expires="-1"

To:"Kynn Bartlett"<kynn@idyllmtn.com>
Cc:"WAI GL"<w3c-wai-gl@w3.org>



-----Original Message-----
From: On Behalf Of Kynn Bartlett
Sent: Saturday, 30 August 2003 12:49 PM

On Wednesday, August 20, 2003, at 06:40 AM, Geoff Deering wrote:
> What do developers use a TRANSITIONAL DTD for?  Mostly it is used when
> tables are required for layouts.

What huh?

The DTD choice has no effect -- zero, nada, none -- on whether you
can use tables for layouts.  It's _perfectly valid_ to use tables for
layout in XHTML 1.0 Strict, for example.


That's right, that's true.  But it also shows that the intention of
separating content from display markup as not being fully implemented in the
design of the document.  At least the content will still be more flexible
because some of the more fixed attributes in transitional are not available
in strict.  But that is why transitional is there isn't it, to support
layout in older or more no standard compliant browsers?

I use Transitional myself because it's a bit more secure for what I need
it to do, and because I may need to make inline changes in some of my
blog posts.  Quite honestly, there is little difference between
<div align="right"> and <div style="text-align: right;"> -- except that
the first is safer because it's more likely to work correctly.

The first becomes much more and an issue when trying to generate content out
of an XML repository.  It starts to make it a pain in the arse for
architecting large document repositories.  This is where you wish you could
kiss transitional goodbye and just use strict and keep content and display
separate.

If the working group is going to make assumptions based on why people
use specific DTDs, I would like to see that backed up with hard data,
e.g. a survey of Web developers asking them why they've chosen to use
a specific DTD, or not use one at all.


I may be able to contribute something towards this in the future.

Geoff Deering



