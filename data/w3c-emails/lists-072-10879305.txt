docno="lists-072-10879305"
received="Fri Sep 19 21:13:22 1997"
isoreceived="19970920011322"
sent="Sat, 20 Sep 1997 11:13:12 +1000 (AEST)"
isosent="19970920011312"
name="Jason White"
email="jasonw@ariel.ucs.unimelb.EDU.AU"
subject="Re: media characterization and formal types in HTML and CSS2"
id="Pine.SUN.3.95.970920104800.25304A-100000@ariel.ucs.unimelb.EDU.AU"
charset="US-ASCII"
inreplyto="199709191641.MAA23907&#64;access1.digex.net"
expires="-1"

To: WAI HC Working Group<w3c-wai-hc@w3.org>


If I understand Al's model correctly, it seems not to be considerably
different from that which has been adopted for HTML 4 and CSS 2. In the
original Cougar draft proposal on style sheets, it is stated that to allow
for more descriptive media type characterisations, the value of the media
type extends until it is delimited by a comma. Thus:

media="braille displayed 40, speech"
specifies that the associated style or style sheet is applicable to a
hypothetical media type of "braille displayed 40" (a 40-cell refreshable
braille display) and also to speech synthesizers. Within each of the two
media parameters in this example, a genus and species relationship is
maintained: the underlying class of medium is given first, followed by a
series of qualifiers which, in order of increasing specificity, define the
required characteristics of the output device.

In the case of a linked style sheet, the first task of the HTML user agent
is to decide, as Al has explained, on the basis of the media type, whether
to expend HTTP effort to retrieve the file. I agree with Al that the media
types could be defined by the style language itself, although I am not
sure whether this is possible in a language such as DSSSL (perhaps an
expert in this field could provide some enlightenment here). If the media
types were defined in the style language, then the algorithm would be
roughly as follows:

(1) Determine the applicable style language (based on the MIME type
specified in the LINK: (E.G. type="text/css").
(2) On the basis of the media types defined in the relevant style
language, determine whether the current output device satisfies the
criteria specified in the media type. If it does, then retrieve the style
sheet.

The main drawback of this solution is that it does not accommodate style
languages which make no provision for media types. Since HTML is supposed
to be independent of all style languages, this limitation could lead to
problems in practice.

I agree with Al that there is a need for flexibility in the definition of
media types and would like to know how an open data base of the kind that
he mentiones might work. With respect to CSS, it is clear that the
addition of a new media type would require corresponding changes to be
made in the style language to support the style properties which are
relevant to that medium. This makes it difficult to envisage how an open
data base of media types would operate independently of the evolution of
CSS itself. Each media type also requires support within conforming
applications so that user agents can decide whether the media type matches
the apabilities of the current output device.

I would appreciate clarification from Al as to whether these comments are
on point or whether I have misunderstood his approach completely.



