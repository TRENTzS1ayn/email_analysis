docno="lists-072-11693183"
received="Sat Oct  4 22:21:33 1997"
isoreceived="19971005022133"
sent="Sun, 5 Oct 1997 12:21:11 +1000 (AEST)"
isosent="19971005022111"
name="Jason White"
email="jasonw@ariel.ucs.unimelb.EDU.AU"
subject="ACSS support for the rendering of tables"
id="Pine.SUN.3.95.971005115942.19304A-100000@ariel.ucs.unimelb.EDU.AU"
charset="US-ASCII"
inreplyto="Pine.SUN.3.95.971005104827.15732B-100000&#64;ariel.ucs.unimelb.EDU.AU"
expires="-1"

To: WAI HC Working Group<w3c-wai-hc@w3.org>


It may be necessary to define additional ACSS properties to control the
reading of tables, which could be incorporated into CSS 2. These should
include the ability to specify the order in which the cells in each row
should be read, and any text which is to be announced before or after the
contents of each data cell. Thus, to expand T.V. Raman's example, one
might envisage a two-column table, with the first column designating the
year, and the second giving the corresponding human population growth (as
a number of persons).

A style property could then be defined which would take a value similar to
the following:

"Population growth in {col=1} was {col=2}"

The cell designation is thus embedded within the text, enclosed in braces
as shown. More complex cell coordinates should be expressable, and of
course it should also be possible just to specify a reading order without
any surrounding text, as in:
"{col=2,h} {col=1,h}"
where the "h" suffix indicates that the corresponding header cell is to be
read prior to each cell. The table would thus be read row by row, with an
announcement of each column header prior to the reading of the associated
data cell.

Note that the foregoing examples make use of a syntax which differs from
that offered by CSS 2. I have represented the reading order as a string
which may contain text as well as embedded commands that refer to cells in
the table. Perhaps it would be better to take advantage of a coordinate
system (with variables that stand for the "current row" or the "current
column"), than to employ commands of the type exemplified above. If a
coordinate system were used, how would one handle cells which span rows
and/or columns, and still retain some degree of generality in the style
that specifies the reading order, so that it need not be rewritten for
each particular table?

The style property which I am proposing would take the form:

reading: STRING
where STRING may contain text and/or embedded commands as previously
described. The user agent would interpret any text enclosed in braces as a
command that refers to one or more elements of the table, according to a
command syntax that would need to be defined.



