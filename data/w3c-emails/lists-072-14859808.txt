docno="lists-072-14859808"
received="Wed Nov 26 03:26:19 1997"
isoreceived="19971126082619"
sent="Wed, 26 Nov 1997 08:30:26 -0000"
isosent="19971126083026"
name="Pawson, David"
email="DPawson@rnib.org.uk"
subject="RE: XSL and document transformations for XML accessibility"
id="81B329C63AEFD0119929006097AB82E40A3151@priory.rnib.org.uk"
inreplyto="XSL and document transformations for XML accessibility"
expires="-1"


To: WAI HC Working Group<w3c-wai-hc@w3.org>

Responding to Chris Lilleys comments:

> On Nov 21,  8:05am, Pawson, David wrote:
> 
> > > From:Jason White [SMTP:jasonw@ariel.ucs.unimelb.EDU.AU]
> 
> > Jason> Is XSL likely to include any of the tree transformation
> > capabilities
> > > offered by DSSSL?
> 
> > DP:Yes, most definately.
> 
> I would be interested to see evidence of this definite statement. The
> XSL submission appears to omit all mention of the tree transformation
> capabilities of DSSSL, and uses only rhe flow object construction
> (stylesheet) stage.
> 
DP: I'm presently using DSSSL to transform SGML documents into
multiple media. Part of this, for instance is to create a table
of contents
using the article titles. On meeting the toc, I traverse the
parent tree to
each 'article' then extract the text from the title element,
inserting into
the table of contents. 
The constructs which do this are parent (current-node),
descendent or children
to go down, or I can search with (select-elements (children
(current-node) "GI"))
which searches the children of the current node for elements
whose GI matches the 
given string. 
Not having used it, the XSL spec, derived from DSSSL o, I assume
not to have lost
these characteristics. I will check for the actual syntax if you
want. From memory
at last reading, such items were in the spec.



> Transformation from one DTD to another turns out to be hard, if there
> is
> a requirement to generate conforming document instances and to retain
> semantics. If the requirement is only to generate a document that is
> well formed (in the XML sense) as opposed to conformant to a
> particular
> DTD, the job becomes somewhat easier.
> 
> 
> > DP: Can be done with DSSSL, or other tools. Suggest SGMLC,
> > Omnimark and others
> > are fully capable of this sort of work.
> 
> Do either of these implement the tree transformation capabilities of
> DSSSL?
> 
> 
Reaching a bit of a grey area here.
Suggestions:
If you need DTD to DTD transform, any of the commercial tools
will do it
easily. DSSSL _can_ do it. Bit of a kludge ( I have done it on a
unity basis
simply to add the table of contents). The sgml output of Jade
(the tool I am
using, does not handle _properly_ the relevant part of the spec.
It does do
it, but by some clever James Clark'ism. 
We find SGMLC easy to use for DTD -DTD transforms.

Possibility that it may not be needed? A typical scenario would
be that an
intermediate transform is needed (e.g. to add the toc), then to
use standard
XSL techniques to do the tree transformation at the presentation
phase of the
job. How's that as a solution. 

Regards, DaveP

From: Dave Pawson. RNIB(UK)
e-mail dpawson@rnib.org.uk



