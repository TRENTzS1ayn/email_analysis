docno="lists-072-15292698"
received="Fri Dec 19 23:03:44 1997"
isoreceived="19971220040344"
sent="Fri, 19 Dec 1997 23:03:20 -0500 (EST)"
isosent="19971220040320"
name="Al Gilman"
email="asgilman@access.digex.net"
subject="Re: CSS 2: priorities in cascading order"
id="199712200403.XAA24906@access1.digex.net"
charset="US-ASCII"
inreplyto="199712192234.XAA22712&#64;stovner.a.sol.no"
expires="-1"


To:w3c-wai-hc@w3.org(HC team)

to follow up on what Hakon Lie said:
> Al Gilman writes:
> 
>  > > 'Option 1' I take to be that which changes the definition of
>  > > !important; so that it only has effect when used within a
>  > > reader's style sheet (any use of !important; in an author's
>  > > style sheet would thus be ignored, and the author's rules would
>  > > all have normal weight, thereby giving precedence to the
>  > > reader's explicitly important rules). This is the option which
>  > > I prefer.
>  > 
>  > Is it really necessary to nullify all use of !important by the author?
>  > Would it be sufficient if
>  > 
>  > a) a !important asserted by the user beats a !important
>  > asserted before the document got to the user.
> 
> and Hakon Lie responds:
> I don't see the difference. In both cases the cascade order will be:
>     
>     user important
>     author important
>     author normal
>     user normal
> 

ASG:: The way I was interpreting "only has effect when used
within a user's stylesheets" I think that you would rather get

    user important
    author important | author normal
    user normal

as opposed to the four-step priority scheme.  That is the
difference that I perceived.

On the other hand, if we add !required and give the user
the edge in resolving !required conflicts we get something
like:

    user required
    author required
    author important
    user important
    author normal
    user normal
    browser default

Is that the new-keyword option, give or take?

-- Al



