docno="lists-072-15301653"
received="Sat Dec 20 13:02:40 1997"
isoreceived="19971220180240"
sent="Sat, 20 Dec 1997 10:02:17 -0800"
isosent="19971220180217"
name="Chris Wilson"
email="cwilso@MICROSOFT.com"
subject="RE: CSS 2: priorities in cascading order"
id="C35556591D34D111BB5600805F1961B90229E77C@red-msg-47.dns.microsoft.com"
inreplyto="CSS 2: priorities in cascading order"
expires="-1"


To:"'Hakon Lie'"<howcome@w3.org>, Jon Gunderson<jongund@staff.uiuc.edu>
Cc:w3c-wai-hc@w3.org,w3c-css-wg@w3.org

Hakon Lie [mailto:howcome@w3.org] wrote:
>This is a critical part in the author/reader balance, but I've yet to
>see a UA which allows users to turn off style sheets on off on a per
>sheet basis. The closest they get is to turn the whole style sheet
>mechanism on/off in a hard-to-find menu.

Actually, the infrastructure is there to support this in IE4 - we expose a
rich stylesheet object model.  All it would require is a wrapper application
to our Web browser control that provided UI for these hooks.  (In essence,
I'm saying we implement the code necessary to do this, but not the UI.)

>Adding "!accessibility" will provide a hook which
>corresponds e.g. to the "Accessibility" dialog box of MS IE 4.

Not completely true - the semantics are ever-so-slightly-different (then the
user would be required to say "use this color always", not "ignore colors
set in the documents").  This also would not support another accessibility
feature or two we intended for IE4 but let slip.  It might be a step in the
right direction, but it wouldn't obviate our need for explicit accessibility
support - I think that would require an @accessibility block in the user
stylesheet, or some such, with some explicit properties.

The user may not want to have to define what they WANT to see, they may want
to define what they CAN'T see (or hear).

-Chris Wilson
 Internet Explorer Team
 cwilso@microsoft.com
 



