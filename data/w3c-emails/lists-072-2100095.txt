docno="lists-072-2100095"
received="Wed May 12 00:23:10 2004"
isoreceived="20040512042310"
sent="Wed, 12 May 2004 14:22:53 +1000 (EST)"
isosent="20040512042253"
name="Jason White"
email="jasonw@ariel.ucs.unimelb.edu.au"
subject="Re: Normative status of techniques checklists"
id="Pine.SOL.4.43.0405121404130.11849-100000@ariel.ucs.unimelb.edu.au"
charset="US-ASCII"
inreplyto="Pine.SOL.4.43.0405121031270.25332-100000&#64;ariel.ucs.unimelb.edu.au"
expires="-1"

To: Web Content Accessibility Guidelines<w3c-wai-gl@w3.org>



This is my attempt to compile a list of arguments for and against
normative checklists, while the topic is under discussion:

In favour:
1. Certainty for developers/implementors: meeting the checklist is
indefeasibly tantamount to satisfying the success criteria (at the
appropriate level). Thereby, concerns about the generality of the
guidelines are overcome - the technology-specifics in the checklist have
equal normative status with the guidelines and success criteria.

2. By proceeding to Recommendation, the checklists could receive a higher
degree of scrutiny and review than might otherwise occur. Is this really
true?

Any others benefits?

Disadvantages:

1. W3C notes are easier to modify than Recommendations; cf. item 2 in the
advantages above for the trade-off between ease of maintenance and degree
of review.

2. There could arise a temptation for checklists, as Recommendations in
their own right, to be out of line with the guidelines, i.e., creative
interpretations of the guidelines that should more properly be dealt with
as errata (this would apply to checklists issued after the guidelines
became a Recommendation). With non-normative checklists, the guidelines
would be normative and the checklists not; hence there would be no
ambiguity as to what was the requirement that had to be met.

3. How to deal with technologies for which checklists wouldn't be issued
by the W3C - see earlier discussion in this mailing list thread.

4. Normative checklists might encourage developers to apply the checklists
instead of looking at and applying the guidelines. This might not be an
issue if the checklists were good, that is, if meeting the checklist gave
true assurance of satisfying the success criteria, which is the essence of
the proposal anyway. With a good checklist, a developer shouldn't have to
refer to the guidelines except for clarification, examples etc., and
likewise for techniques.

Others?

Ultimately it is a question of whether one thinks item 1 in the advantages
list outweighs all of the disadvantages, if the latter were minimized by
designing the checklists appropriately.



