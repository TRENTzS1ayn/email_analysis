docno="lists-073-0931345"
received="Mon Nov  3 17:18:05 1997"
isoreceived="19971103221805"
sent="Mon, 3 Nov 1997 17:17:47 -0500 (EST)"
isosent="19971103221747"
name="Al Gilman"
email="asgilman@access.digex.net"
subject="Re: Are forms accessible"
id="199711032217.RAA12288@access2.digex.net"
charset="US-ASCII"
inreplyto="199711032133.NAA19616&#64;netcom14.netcom.com"
expires="-1"


To:w3c-wai-ig@w3.org
Cc:techwatch@trace.wisc.edu

to follow up on what Scott Luebking said:

> I tend to agree with you.  A very basic form, i.e. a single text field
> with only one send button, can probably be considered accessible.
> (Using a RETURN in the text field will activate the form.)  If the
> form uses buttons or other features, then probably currently it cannot be
> considered generally accessible since button control varies so much
> among browsers.

The "return" behavior you mention is not common practice in all
browsers.  But then, I seem to have a higher estimate of how much
form stuff is accessible.

Checkboxes can be usable if using Lynx with speech, if you
explain them before the checkbox occurs.  There are examples of
forms with checkboxes and radio buttons that are accessible.  
Lynx has an optional function which converts SELECT elements to
radio buttons.  This is there by request from blind users.  

Maybe you have to deprecate these features because of how other
browsers implement them.  Then there is also the possibility of
trying through the browser guidelines to address the behavior and
gradually resurrect their accessibility.

One of the CSS functions we may want to look at is to reach out
to a set of items such as a checkbox and its label, and force the
activation sensitivity to spread to include all of them as one
atom.  Is this at all clear?  I mean that in a GUI you could
place the mouse anywhere in the set of items gathered by the
style and a click would still change the state of the checkbox.
For audio, you could perhaps activate a control hotkey any time
any of the sensitive material was being spoken, and the state
change would result.  Or a query of the current clickable would
always read you the label.  The latter version has a reasonable
chance of CSS2 support and could be recommended browser behavior
anyway.

-- Al Gilman



