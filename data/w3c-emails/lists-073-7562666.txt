docno="lists-073-7562666"
received="Tue Feb 10 18:10:57 1998"
isoreceived="19980210231057"
sent="Tue, 10 Feb 1998 23:10:33 +0000 (GMT)"
isosent="19980210231033"
name="Alan J. Flavell"
email="flavell@a5.ph.gla.ac.uk"
subject="Re: ALT text survey"
id="Pine.OSF.3.96.980210225622.3087A-100000@a5.ph.gla.ac.uk"
charset="US-ASCII"
inreplyto="ALT text survey"
expires="-1"

To:w3c-wai-ig@w3.org



In <E3A3FFB80F5CD1119CED00805FBECA2F013BBD91@red-msg-55.dns.microsoft.com>
"Charles (Chuck) Oppermann" <chuckop@MICROSOFT.com> says:

> Once again, I must caution.  Do not think of ALT as how it's represented
> in
> LYNX or any other browser.  As we move to the W3C's Document Object
> Model,
> we need to be thinking of HTML elements as objects. As such, we need to
> think of how we use these attributes to property identify the object.

I don't primarily think of ALT _as_ it's represented in any particular
browser, but _for_ its stated purpose.  And its purpose is to serve as
alternative text, for presentation when the image is - for whatever 
reason - not being presented.

"Alternative text".  Let's concentrate on that.

Whatever you may say about what's going in behind the scenes, there's a
need for alternative text, and this is it.  If you want to "property
identify the object" for some other good reason, I'd respectfully suggest
you look for another attribute.  This one's assigned, in my opinion.  Just
occasionally, the appropriate alternative text might identify the object,
describe the object, explain the object, name the object, whatever.  Its
purpose is none of these things: its _purpose_ is to supply alternative
text, for use when the object is not being presented.

It's a compromise, for sure, but this is surely what we should be
aiming at, no?  TITLE and LONGDESC (for IMG) are other handles we may
turn, in their respective ways.

It would be a complete mistake to let our choice be dominated by what one
or other browser happens to be doing today.  Let's concentrate on the
functional requirement, in terms of user needs, and then we can evaluate
how well the browsers are fulfilling that requirement.  Not vice versa. 



