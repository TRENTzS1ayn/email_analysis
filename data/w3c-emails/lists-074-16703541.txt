docno="lists-074-16703541"
received="Thu Aug 19 23:50:24 1999"
isoreceived="19990820035024"
sent="Thu, 19 Aug 1999 23:49:33 -0400"
isosent="19990820034933"
name="by way of Harvey Bingham"
email="peter.korn@SUN.COM"
subject="JavaOne trip report: Accessibility goes mainstream"
id="4.1.19990819230102.009b87b0@pop.tiac.net"
charset="us-ascii"
expires="-1"



To:w3c-wai-ua@w3.org,w3c-wai-ig@w3.org
Cc: Peter Korn<peter.korn@SUN.COM>

[With Peter's permission, I forward this. I'm impressed at the
reception for accessibility at that conference.]

Regards/Harvey
--------------
Greetings,

Last week was the annual JavaOne conference in San Francisco.  Over 21,000
developers came to the conference to spend 4 days learning about the latest
technologies for the Java platform.  Java Accessibility was one of the
technologies highlighted at the conference, and was featured prominently in
5 sessions including one of the keynote sessions to an audience of 10,000 -
15,000 people.


As part of the "Java Foundation Classes Technology: Intro and Roadmap"
session, held on Tuesday and then repeated again on Thursday, we gave an
overview of the Java Accessibility API and how to write applications to be
accessible, followed by a demonstration of the Accessible ATM prototype.
Slides from that talk can be found at:

   http://industry.java.sun.com/javaone/99/event/0,1768,672,00.html


The Java Accessibility team held a Birds of a Feather (BOF) session on
Wednesday afternoon, where we went into depth on the new Java Accessibility
APIs we are introducing in the next release of the Java platform, JDK 1.3.
We also announced that in JDK 1.3 we will be implementing "lightweight"
support for the Java Accessibility API in the AWT.  While we will not be
able to fully implement the Java Accessibility API on every one of the AWT
components, it will be there for most of them in JDK 1.3, and in particular
this means that GUI components which are built on top of AWT will have a
very easy time of implementing the Java Accessibility API because most of
the work will already be done.  We hope to finish the AWT work in a
follow-on release to JDK 1.3 (e.g. it might be done in 1.3.1).
The new APIs we are adding to the Java Accessibility package are:

  AccessibleTable -       a way to interact with 2-dimensional objects such
                          as the Swing JTable component

  AccessibleIcon -        a way to get detailed information about Icons,
                          which will be implemented by the Swing Icon class

  AccessibleRelation &
  AccessibleRelationSet - a way to encode relationships between components,
                          such as a label and the object it is labeling,
                          or a spreadsheet cell title and the elements in
                          the row or column underneath that title, so that
                          assistive technologies can provide appropriate
                          context information in their feedback to users.

Sun will provide an Early Access release of JDK 1.3 for public review later
this year.


The IBM Special Needs Systems (SNS) team held a BOF session on Tuesday
evening, at which they demonstrated the features of their Self-Voicing-Kit
(SVK), and described in detail the architecture of the AccessEngine
technology which underlies the SVK.  Phill Jenkins of the IBM SNS team
demonstrated how the SVK could be configured to load additional code - Perks
- into itself to provide more specialized support of specific applications,
or simply to extend the functionality and user-interface provided by the
SVK.  In particular, he showed how a Perk could be used to read the output
of a two-dimensional graph in a simulation of plant photosynthesis written
for the Java platform.


Both the Thursday and Friday morning keynote sessions included a discussion
of Accessibility to the Java platform.  Probably somewhere between 10,000
and 15,000 people attended these keynote sessions.  On Thursday morning one
of the main keynote speakers was Patricia Sueltz, General Manager of Java
Software at IBM.  Patricia mentioned IBM's focus on Java Accessibility, and
the importance of designing software that everyone could use.  Then on
Friday morning John Gage and Peter Korn of Sun Microsystems demonstrated the
IBM Self-Voicing-Kit with the WGBH example application of a multimedia
educational application which teaches students about photosynthesis.  John
and Peter described step-by-step how the application, written using the
Java  Foundation Classes and thereby implementing the Java Accessibility
API, was accessible to blind students wanting to learn about photosynthesis
alongside their sighted colleagues using the SVK, the Java Speech API, and
the IBM ViaVoice OutLoud software speech package.


In addition to the talks and presentations mentioned above which focused on
Java Accessibility, there were a few other events and announcements of
interest to the Java Accessibility community.  Sun announced at JavaOne that
they would be providing a reference version of Personal Java - a slimmed
down version of the full desktop and server Java environment - for Windows
CE.  Also at the conference in the "JavaOne Pavilion" were quite a few
vendors providing hardware devices and prototype boards for running the Java
platform.  Some of these were based on Sun's JavaOS for Consumers (which is
the Sun Chorus real-time-OS with Personal Java sitting on top of it), others
based on other real-time OSes (e.g. EPOC, Simbian, etc.), each with a Java
Virtual Machine (Personal Java or the full enterprise JDK) running on top of
them.  Notable among this latter group was Psion, makers of a popular line
of hand-held computers, with full JDK 1.1.x support.  Finally, one of the
highlights of the show was 3Com, which sold 10,000 of their Palm V hand-held
computers at a steep discount, complete with version 0.2 of their Java
platform support.


For more information about JavaOne '99, visit the JavaOne web site:
http://java.sun.com/javaone


On behalf of the Sun Accessibility team,


Peter Korn <peter.korn@SUN.COM>

===========================================================================
To unsubscribe, send email to listserv@java.sun.com and include in the body
of the message "signoff JAVA-ACCESS".  For general help, send email to
listserv@java.sun.com and include in the body of the message "help".



