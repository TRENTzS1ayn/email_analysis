docno="lists-074-1928007"
received="Mon Dec  7 17:39:03 1998"
isoreceived="19981207223903"
sent="Tue, 8 Dec 1998 09:38:58 +1100 (AEDT)"
isosent="19981207223858"
name="Jason White"
email="jasonw@ariel.ucs.unimelb.EDU.AU"
subject="Re: plain text has its points"
id="Pine.SUN.3.95.981208092657.1808A-100000@ariel.ucs.unimelb.EDU.AU"
charset="US-ASCII"
inreplyto="Pine.LNX.3.95.981207171101.8274A-100000&#64;smarty.smart.net"
expires="-1"

To: WAI Interest Group<w3c-wai-ig@w3.org>


The solution is to provide a well marked up document which preserves all
of the semantic distinctions and structural aspects necessary to enable
conversion into a variety of formats, across a range of output devices.
HTML can achieve this objective in many cases (taking into account its
inability to represent mathematical content, for which MathML is
required).

It should be possible to construct a tool that would collect a series of
small but related HTML documents into a single file, especially if the
LINK element is used, as provided for in the HTML 4.0 specification, to
connect the components. Anyone who really wanted plain text could easily
render the document in a web browser and save it as a text file, or use a
search and replace utility to eliminate the markup (perhaps replacing
paragraph elements with blank lines, headings with tabs and performing
other rudimentary operations that hardly compensate for the loss of
structure which is involved in such a transformation).

My personal approach to reading HTML documents off-line is to use
Emacspeak with the W3 browser. By using the audio extensions to CSS, this
software can indicate such features as lists, emphasised text, links,
code, quotations, etc., using different voices. It is genuinely
astonishing to observe how much richer and more informative this rendering
is than that produced by a screen reader.

Certain braille translators can process HTML files, though not always with
a high degree of formatting accuracy. The ability to combine various
components of a document into a single file might be useful in this
context as well, although the user would presumably then have to split the
file again in order to divide the output into separate braille volumes.



