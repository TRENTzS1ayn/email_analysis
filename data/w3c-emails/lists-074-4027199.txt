docno="lists-074-4027199"
received="Fri May 21 12:52:22 1999"
isoreceived="19990521165222"
sent="Fri, 21 May 1999 12:52:18 -0400"
isosent="19990521165218"
name="Nick Traenkner"
email="nick@kentinfoworks.com"
subject="Re: Debunking the need for &quot;text-only&quot; parallel sites"
id="37458F42.5E1DA29C@kentinfoworks.com"
charset="us-ascii"
inreplyto="Pine.LNX.4.10.9905211017190.6865-100000&#64;tux.w3.org"
expires="-1"


To:w3c-wai-ig@w3.org

Two questions, one on the text-only issue and one about XML.

At the beginning of this thread it seemed the problem with "text-only" was
keeping them up to date. I understand this problem, and spent a considerable
effort at providing a text-only site that kept up to date, not by producing
copies, but by offering two seperate views of the same information. Now, I am
getting the feeling that the issue isn't maintainability- it seems to have
turned to some nebulous design issue.

I have tried my best (maybe it's not good enough eh?) to promote web
accessibility on all the projects I have worked on. I have studied the ins and
outs of HTML4, CSS, and WAI guidelines (again, probably not to the extent this
group would have one study) and fought to work with the new techniqies and
within the guidelines. The results have been clean, well organized sites that
stress accessibility to information beyond accessibility to blind, deaf and
mobility impaired users- the thing I stress to clients most often when
discussing accessibility is that accessibility comes down to the accessibility
of information, and that this includes all the ADA issues as well as information
architecture and general usability. Why isn't a text-only view of information
(not a text-only copy) which does not use visual or audio data as its core
elements now considered bad?

Second question regarding XML:

I remember there was something called XSL which I found very exciting especially
as related to web accessibility. The way I initially saw it, an XML document was
never "viewed" in a browser, but was a strictly formatted structured document
(probably written by a program) from which various things could be communicated
to either another program or a human user. But the human user would never "see"
the XML, would never come in contact with the structure of the document (unless
that was the purpose of the document (a table of contents as a poor example) or
the interface to the XML (a nested list view of the same table of contents whose
structure was defined in the XML- another poor example). I immediately realized
that an XML subset document (take SMIL for instance) could be presented in many
different ways with XSL- a series of paragraphs in a SMIL presentation could be
rendered one after the other down a page instead of being placed along a
timeline.

I guess when McCathieNevile wrote:

> A page created in XML is simply a page - it depends on how it was done. The
> same rules apply as with HTML - device independence, markup of structure
> explicitly rather than by presentation conventions, etc. XML allows these,
> but as with any technology sufficiently powerful to be useful it also allows
> completely inaccessible design. When writing XML applications follow the Web
> Content Accessibility Guidelines.

I was confused by "device independace, markup of structure explicity rather than
by presentation conventions" not seeing any presentation conventions belonging
in an XML document (except maybey presentation instructions kept in a
<presentation> element(s)). In this case, I would say the XML is not where the
accessibility is addressed but in the presentation of the data kept therein.
(accessible extensible stylesheets for example). A rhetorical question: Take the
vector graphics work- how would one present this information in a way accessible
to a blind user?

I hope I'm not overstating the obvious, I'm just concerened that I don't
understand "accessibility of XML documents", which seems like a very strange
concept.

-nick



