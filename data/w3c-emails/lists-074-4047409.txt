docno="lists-074-4047409"
received="Fri May 21 13:09:53 1999"
isoreceived="19990521170953"
sent="Fri, 21 May 1999 13:09:41 -0400 (EDT)"
isosent="19990521170941"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: Debunking the need for &quot;text-only&quot; parallel sites"
id="Pine.LNX.4.10.9905211259310.6865-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="37458F42.5E1DA29C&#64;kentinfoworks.com"
expires="-1"

To: Nick Traenkner<nick@kentinfoworks.com>
cc:w3c-wai-ig@w3.org


Text-only question:

A text-only view is not an intrinsically bad thing. For some users it is
crucial. It is just not, by itself, the best way to do accessibility. You
seem to have captured the essential point very nicely - the crux is access to
information, not accessibility for a given group of users. I am probably
making a mountain out of a molehill - the point I am trying to make is that
in general a text-only view and an "anything goes" view is insufficient,
because it fails to cater for a variety of other common sets of requirements.

XML Question:
Again, I think you have understood it correctly. It is possible to write XML
and XSL in such a way that information is only available in a device-specific
way (for example specifying colours to convey different meanings, without
providing any way of knowing what the colours mean). Or SMIL could have been
written in such a way that textual alterntives, or audio alternatives, could
not be included. In the SVG case, it is possible to build images from
described objects, and for a non-graphic rendering device to interpret the
layout of the various pieces of an image and explain them. This requires that
the graphic is built in a way which allows this - it is possible to do
everything with explicit declaration of vectors, which is the graphics
equivalent of using nothing but styled Span elements in HTML in that it makes
it very difficult to guess the structure of the document.

Charles McCathieNevile

On Fri, 21 May 1999, Nick Traenkner wrote:

  Two questions, one on the text-only issue and one about XML.
  
  At the beginning of this thread it seemed the problem with "text-only" was
  keeping them up to date. I understand this problem, and spent a considerable
  effort at providing a text-only site that kept up to date, not by producing
  copies, but by offering two seperate views of the same information. Now, I am
  getting the feeling that the issue isn't maintainability- it seems to have
  turned to some nebulous design issue.
  
  I have tried my best (maybe it's not good enough eh?) to promote web
  accessibility on all the projects I have worked on. I have studied the ins and
  outs of HTML4, CSS, and WAI guidelines (again, probably not to the extent this
  group would have one study) and fought to work with the new techniqies and
  within the guidelines. The results have been clean, well organized sites that
  stress accessibility to information beyond accessibility to blind, deaf and
  mobility impaired users- the thing I stress to clients most often when
  discussing accessibility is that accessibility comes down to the accessibility
  of information, and that this includes all the ADA issues as well as information
  architecture and general usability. Why isn't a text-only view of information
  (not a text-only copy) which does not use visual or audio data as its core
  elements now considered bad?
  
  Second question regarding XML:
  
  I remember there was something called XSL which I found very exciting especially
  as related to web accessibility. The way I initially saw it, an XML document was
  never "viewed" in a browser, but was a strictly formatted structured document
  (probably written by a program) from which various things could be communicated
  to either another program or a human user. But the human user would never "see"
  the XML, would never come in contact with the structure of the document (unless
  that was the purpose of the document (a table of contents as a poor example) or
  the interface to the XML (a nested list view of the same table of contents whose
  structure was defined in the XML- another poor example). I immediately realized
  that an XML subset document (take SMIL for instance) could be presented in many
  different ways with XSL- a series of paragraphs in a SMIL presentation could be
  rendered one after the other down a page instead of being placed along a
  timeline.
  
  I guess when McCathieNevile wrote:
  
  > A page created in XML is simply a page - it depends on how it was done. The
  > same rules apply as with HTML - device independence, markup of structure
  > explicitly rather than by presentation conventions, etc. XML allows these,
  > but as with any technology sufficiently powerful to be useful it also allows
  > completely inaccessible design. When writing XML applications follow the Web
  > Content Accessibility Guidelines.
  
  I was confused by "device independace, markup of structure explicity rather than
  by presentation conventions" not seeing any presentation conventions belonging
  in an XML document (except maybey presentation instructions kept in a
  <presentation> element(s)). In this case, I would say the XML is not where the
  accessibility is addressed but in the presentation of the data kept therein.
  (accessible extensible stylesheets for example). A rhetorical question: Take the
  vector graphics work- how would one present this information in a way accessible
  to a blind user?
  
  I hope I'm not overstating the obvious, I'm just concerened that I don't
  understand "accessibility of XML documents", which seems like a very strange
  concept.
  
  -nick
  

--Charles McCathieNevile            mailto:charles@w3.org
phone: +1 617 258 0992   http://www.w3.org/People/Charles
W3C Web Accessibility Initiative    http://www.w3.org/WAI
MIT/LCS  -  545 Technology sq., Cambridge MA, 02139,  USA



