docno="lists-074-5581449"
received="Wed Jun  9 19:55:58 1999"
isoreceived="19990609235558"
sent="Wed, 9 Jun 1999 19:55:54 -0400 (EDT)"
isosent="19990609235554"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: QED &amp; Marshall McLuhan"
id="Pine.LNX.4.10.9906091938310.21068-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="199906092143.RAA09218&#64;www10.w3.org"
expires="-1"

To: Ann Navarro<ann@webgeek.com>
cc:bbailey@clark.net,w3c-wai-ig@w3.org


I don't think it is quite so silly. I have spent a lot of time teaching
people to use "intuitive and easy to use" systems, because they could not
understand them without help. I think that there are features of the
graphical interface which need to be learned, in the same way as there are
features of a command line interface such as Unix or DOS which need to be
learned. The best systems are those which are most powerful and require the
smallest amount of learning in order to control that power.

The best minds have been unable to make it otherwise. That is, to produce a
system that allows a user significant amounts of power without having to do
some activity specifically designed to learn how to use them - reading a
manual, running a tutorial program with a series of educational exercises,
asking a friend who knows, etc.

Conventional wisdom is that a graphical user interface is a feature that
makes a system easier to use and that the most powerful interfaces are those
which enable commands to be given in a language - essentially a command line
interface, which includes the possibility of using signing gloves or voice to
issue the commands although a keyboard, or set of keyboard shortcuts are the
most common approach.

For some people or groups of people these are demonstrably not the best
system - for example a graphic user interface is remarkably difficult to use
for a person who cannot see, and considerable effort is expended to make sure
that the interface can be readily translated into some other format such as
sound, or braille. Similarly, a keyboard-based interface is often a very poor
method for a person with serious learning difficulties. The fact that many
people who have no apparanet learning disability never learn to use the power
of software they use everyday (I am thinking of word processors as the most
common example, although there are many examples and exceptions) should
remind us that we do not have all the answers yet, and prompt us to wonder if
we ever will, and at a more practical level to search for whatever new
answers we can, either in new technology or in the application of existing
technology or knowledge.

Hmmm. When a 2c worth goes on this long is it 3c worth, or 1c worth. Anyway,
enough of my personal reflections for now.
Charles McCN

On Wed, 9 Jun 1999, Ann Navarro wrote:

  
  >In a message dated 6/7/99 3:00:29 PM, bbailey@clark.net writes:
  
  >  Windows is hard to use (that is, it
  >requires literacy) because the best minds have not been able to figured out
  >how to make it otherwise! 
  
  This is silly. 
  
  Both the Mac and Windows interfaces use pretty little pictures to represent
  programs and you click on them to make them work. 
  
  There is nothing so inherently "hard" about Windows that could possibly
  support "the best minds have not been able to figure out how to make it
  otherwise!"   Platform zealousness doesn't have a place in reasonable
  discussion about the issue at hand. 
  ---
  Ann Navarro
  Author: Effective Web Design: Master the Essentials
  Buy it Online!    http://www.webgeek.com/about.html
  Owner, WebGeek Communications   http://www.webgeek.com
  Vice President, HTML Writers Guild   http://www.hwg.org
  



