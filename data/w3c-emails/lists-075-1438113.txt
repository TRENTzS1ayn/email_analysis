docno="lists-075-1438113"
received="Thu Sep 16 16:55:04 1999"
isoreceived="19990916205504"
sent="Thu, 16 Sep 1999 13:55:00 -0700 (PDT)"
isosent="19990916205500"
name="Scott Luebking"
email="phoenixl@netcom.com"
subject="Re: Which form item is more accessible?"
id="199909162055.NAA26712@netcom9.netcom.com"
inreplyto="Which form item is more accessible?"
expires="-1"


To:w3c-wai-ig@w3.org

Hi,

Thanks for the comments on whether radio buttins or a selection/list box
is more accessible.  An interesting aspect to the question is accessible
to which disability?  Interfaces which require a blind person to do
more reading or searching might be less accessible or efficient.
On the other hand, a quadriplegic might prefer a collection of radio
buttons since all the choices are presented and the quadriplegic
has to do little or nothing to see what choices are available.

As part of the project I'm working on, we're creating a developer's
environment with the goal of the developer's environment being as
easily used by blind people as by sighted people.  While a screen
reader may allow a blind person to work with the environment, he/she
may not be as effective at doing that as a sighted person.

In this environment, we are moving away from "accessible" design to
more "universal" design.  For example, if in a house a person in a wheelchair
has to go through two additional doors in order to reach light switches
which are at wheelchair height, is that a reasonable design even though
it might be considered accessible?

One primitive measure of efficiency being used is how many keystrokes
does a blind user have to press, including those for operating the
screen reader, in order to perform some function in the developer's
environment.  For example, would using a selection/list box
instead of a group of radio buttons reduce the number of keystrokes?

Because of the target audience of the project, we were able to limit
browser selection to those which support javascript.  (The project
does such things as using javascript to parse information stored
in xml format.)  The javascript allows us to create a more
universally designed developer's environment which reduces the number
of keystrokes needed by blind users performing the same functions
as done by sighted people.

Scott



