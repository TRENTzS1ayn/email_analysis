docno="lists-075-3189933"
received="Mon Nov  8 09:47:02 1999"
isoreceived="19991108144702"
sent="Mon, 08 Nov 1999 09:49:52 -0500"
isosent="19991108144952"
name="Leonard R. Kasday"
email="kasday@acm.org"
subject="RE: Stylesheet columnisation"
id="3.0.32.19991108094936.00e7c97c@pop3.concentric.net"
charset="us-ascii"
inreplyto="Stylesheet columnisation"
expires="-1"


To:"Steven McCaffrey"<smccaffr@MAIL.NYSED.GOV>,<paulb@cpd2.usu.edu>,<kynn-hwg@idyllmtn.com>,<Robert.Neff@usmint.treas.gov>
Cc:<298gpp@tay.ac.uk>,<W3c-wai-ig@w3.org>

Steven,

I think you're right that we were talking about different aspects of this
issue.

Getting to your point that allowing tables for layout "sends the wrong
message" that it's OK to mix presentation and content:

I agree that's a concern.  We can mitigate that problem by taking care to
point out that the guidelines allow it only as a temporary, practical
expedient, until browsers handle stylesheets (although "temporary" may be a
long time).

I think you're also suggesting that at least for now people should avoid
text layout altogether, regardless of whether they are implemented by
tables or CSS, since both methods are similar in terms of accessibilty:
e.g. neither one is a problem for lynx, pwWebspeak, w3/emacspeak, etc., but
both are a problem with screenreaders that read straight across the
physical screen.

One problem with this is that it sends another message: that webmasters
have to fundamentally change the appearance of their pages to be
accessible.  We don't want to send that message either.

Also, layout does serve a function in visual browsing.  For example, if a
page has several long sections, you can put them side by side with their
headings at the top.  This allows the user to visually scan the headings
and the first few lines of text of each without scrolling.  Similarly, if
you have a lot of short lists with short items, it's better for the items
to be lined up vertically for quick scanning by eye.  This in turns makes
it better to put the lists side by side to avoid having a large wasted
blank area on the right.  So layout speeds things up for sighted users in
general.  It is especially good for people with severe motor disabilities
for whom scrolling is a burden. 

Having said that, I should also point out that columnar layout can also
make it less convenient even for sighted users.  If a single section goes
across multiple columns each of which is higher than a screen you have to
go scrolling up and down just to read it.  This problems comes up a lot
when paper layout is simply pasted to the screen.

Still, that misuse of columns aside, banning layout would send an even
worse message: that you have to reduce functionality to achieve
accessibility.  We don't want to say that either.

So in balance, I think we need to allow side by side layout.  On the other
hand, we should encourage people to avoid it when they want maximum
accessibility and when it serves no purpose.  And of course avoid it when
it's a hassle fo everyone, blind and sighted alike.

As for your other comments:

I think we're in agreement that using tables to layout still gets a double
A provided it reads sensibly when linearized.  That leaves triple A up for
discussion.

You're right of course that you need to do "reformat page" with MSIE and
JAWS.  I should have pointed that out.

You also said that

>If layout is actually used for structure then a one dimensional
linearization of 
> a two dimensional layout is certainly not equivalent access.
>Do you agree?

Yes, I agree on that.  True two-dimensional navigation is needed, and a lot
of browser/screenreader combinations do not offer that.  So I like to
include a link to a spreadsheet format version of tables, so people who
have access to spreadsheet programs can navigate better.  I like to use
comma-separated variable (.csv) format so it reads sensibly as just plain
text also. See for example the HTML table at

http://www.temple.edu/inst_disabilities/piat/reep/wanted.html

and the linked csv version at

http://www.temple.edu/inst_disabilities/piat/reep/wanted.txt

The CSV version is a text version that can be read directly or loaded into
standard spreadsheet programs. 

Len


-------
Leonard R. Kasday, Ph.D.
Institute on Disabilities/UAP, and
Department of Electrical Engineering
Temple University

Ritter Hall Annex, Room 423, Philadelphia, PA 19122
kasday@acm.org        
(215) 204-2247 (voice)
(800) 750-7428 (TTY)



