docno="lists-076-10412534"
received="Fri Dec 15 10:21:27 2000"
isoreceived="20001215152127"
sent="Fri, 15 Dec 2000 10:11:15 -0500"
isosent="20001215151115"
name="Bailey, Bruce"
email="Bruce_Bailey@ed.gov"
subject="RE: javascript menus and accessibility"
id="5DCA49BDD2B0D41186CE00508B6BEBD030041F@WDCROBEXC01"
charset="iso-8859-1"
inreplyto="javascript menus and accessibility"
expires="-1"


To:"'Dey Alexander'"<dey.alexander@its.monash.edu.au>
Cc:"'w3c-wai-ig@w3.org'"<w3c-wai-ig@w3.org>

Dear Dey,
From the WCAG:
<blockquote>
6.3 Ensure that pages are usable when scripts, applets, or other
programmatic objects are turned off or not supported.  If this is not
possible, provide equivalent information on an alternative accessible page.
[Priority 1]
</blockquote>
The current problem with your page is that the high level links (Online
Help, Services, Faculty Standards, FAQ) contain sub-items that are available
only from the JavaScript pull-down menus.  For example, selecting "Online
Help" brings up a page
<http://www.buseco.monash.edu.au/oldTechServ/onlinehelp.html> with seven
primary links, while the drop down contains ten items.
Dave's advise is right on the money:
(1)  Get the site working, especially the navigation functionality, without
JavaScript.
(2)  After the design is complete, add JavaScript as desired to provide
short cuts from the home page.


> -----Original Message-----
> From: w3c-wai-ig-request@w3.org [mailto:w3c-wai-ig-request@w3.org] On
> Behalf Of David Woolley
> Sent: Thursday, December 14, 2000 6:37 PM
> To: w3c-wai-ig@w3.org
> Subject: Re: javascript menus and accessibility
> 
>> An example (an applet version) of what I'm concerned about 
>> can be found
>> at: http://www.buseco.monash.edu.au/oldTechServ/
> 
> There is no javascript on that page (as viewed with Lynx).
> 
> Javascript cannot be an applet.
> 
> The common idiom for creating popups causes accessibility 
> problems, but
> can be fixed by designing properly, i.e. write the page to 
> work without
> scripting then add the scripting whilst keeping the old function.
> Specifically, never use javascript: URLs, except where client side 
> scripting is of the essence of the page.  Instead, use a 
> normal link and
> override it with an onclick attribute.  Make sure the onclick returns
> false to prevent the href also working on an JS enabled browser.
> 
> Note the page is cache unfriendly (no last-modified-date) and uses a
> non-standard HTTP header (without an x- prefix) (window-target).



