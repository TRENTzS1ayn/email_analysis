docno="lists-077-12039164"
received="Tue Dec 18 17:13:39 2001"
isoreceived="20011218221339"
sent="Tue, 18 Dec 2001 21:20:44 +0000 (GMT)"
isosent="20011218212044"
name="David Woolley"
email="david@djwhome.demon.co.uk"
subject="Re: SVG - A thought"
id="200112182120.fBILKio15536@djwhome.demon.co.uk"
charset="us-ascii"
inreplyto="FA94B04D5981D211B86800A0C9EA2841A34938&#64;cames1.sema.co.uk"
expires="-1"


To:w3c-wai-ig@w3.org

> <process_flow_diagram>
> <entity_box>
> <text_in_box>Entity Name</text_in_box>
> <height>h</height>

SVG isn't that high a level graphics language, it's more like an enhanced
PDF; I'm sure Adobe see it as a PDF successor.  It's main concession to
accessibility is that, if you strip out all the tags, you are left with
the text part of the image, but that assumes that people will actually
use text for text and arrange it in a sensible order, and use spaces,
not positioning, for word spaces (e.g. PDF authoing guidelines say do this,
but it is rare in real life PDF).  There is a document that lists other
supposed accessibility design features, although my impression is that
accessibility is a token requirement, albeit one that has had an impact
on the structure.

The main current interest in SVG seems to be as a Flash replacement,
but I'm afraid it may become a replacement for HTML with the page 
pasted up in a fairly random order.

There is a need for a static vector drawing language, as GIFs are not
really the right format for line drawings, but very few questions on
the SVG mailing list seem to assume that usage.

> <width>w</width>

The SVG philosophy (and I believe the SGML one) is that w here is an
attribute, not text.

> Entity name comprises whatever entities, has these properties, data flows
> between entity name and whatever other entities and comes in from whatever
> entities...

There is an old (read unfashionable and not WYSIWYG) language for Unix, 
called PIC, which tries to do this sort of thing, although I've never
used it.



