docno="lists-077-3235978"
received="Thu Feb 15 18:06:34 2001"
isoreceived="20010215230634"
sent="Thu, 15 Feb 2001 22:15:10 +0000 (GMT)"
isosent="20010215221510"
name="David Woolley"
email="david@djwhome.demon.co.uk"
subject="Re: Section 508 Question on Javascript - Section 1194.22, Paragraph (l)"
id="200102152215.f1FMFAF07209@djwhome.demon.co.uk"
charset="us-ascii"
inreplyto="008801c096b4$32c07fd0$20117b81&#64;paul"
expires="-1"


To:w3c-wai-ig@w3.org

> A similar discussion on this same topic was held several months ago. From
> what I remember, the basic conclusion was that currently there are innate
> deficiencies in the javascript language that do not permit keyboard input

You mean the big 2 browser document object models, as core Javascript 
(all of ECMAScript) has no mouse support at all.

The basic problem with keyboard support is that, whilst you can look to
see exactly what button was used on the mouse and which shift modifiers 
were in use, most people don't.  Instead they use about two different
events, click and over.  This is a small enough number to give them 
indvidual events (these events are part of HTML, not the DOM or the
scripting language).

For a keyboard, you have around a 100 possible keys that could be pressed,
and the possibility of sequences; a keyboard is basically a much richer
control device (which is why command lines and keyboard shortcuts greatly
outperform point and click for experienced users).  Whilst you could,
maybe, define an on enter event, defining an event for each logical
keyboard operation gets messy.

Also, different machines have different keyboard layouts and conventions,
so a good interface would have to be in terms of logical keyboard
operations, which makes it difficult for the average web site designer
who doesn't think in abstract terms.



