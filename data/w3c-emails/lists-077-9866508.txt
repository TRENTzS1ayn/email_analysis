docno="lists-077-9866508"
received="Thu Sep 13 09:20:45 2001"
isoreceived="20010913132045"
sent="Thu, 13 Sep 2001 09:22:32 -0400"
isosent="20010913132232"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="RE: 'onmousewheel'"
id="200109131320.JAA10226648@smtp2.mail.iamworld.net"
charset="us-ascii"
inreplyto="NDBBLCBLIMDOPKMOPHLHOENADHAA.jon&#64;spinsol.com"
expires="-1"


To:"Jon Hanna"<jon@spinsol.com>,<w3c-wai-ig@w3.org>

You can call this Microsoft Unique if you wish, but the factual basis in
ergonomics for VR, for seeking to bind analog degrees of freedom in the user's
device complement to analog degrees of freedom in the [controllable slice
through the] virtual world their current scene is drawn from, is
overpowering. 
It is generic, powerful, and won't go away or be denied.

My colleagues in the ACE-grid are dealing with CAVEs and other VR spaces and
can't get by whithout such couplings.  Dragging with the mouse is just the
beginning.  We need to look ahead to 3D and 4D VR and have a systematic
modeling and binding approach that works for that scene so we are not
re-inventing a new bandaid at every increment of progress.

Al

http://www.gridforum.org/groups/WG.html#ACE

At 09:10 AM 2001-09-13 , Jon Hanna wrote:
>-----BEGIN PGP SIGNED MESSAGE-----
>Hash: SHA1
>
>> I was searching for information on how successful ie6 is with 
>> XML, and came
>> across this:
>>
<http://www.webreference.com/js/tips/010718.html>http://www.webreference.com
/js/tips/010718.html
>> I had written about something similar to ig at this very time....
>> 
>> I don't believe it is part of ecma262,
>
>It's the DOM Spec it's not in rather than ecma262, ecma262 just
>specifies the javascript language, not the events object models may
>expose.
>It would be interesting to find out whether it ends up in the DOM at
>a later stage given it's very MS-centric status.
>
>There is one slight inaccuracy in the article that may prove a
>bugbear later on. It states that "The length is given in a multiple
>of 120." This is currently true, and it is how the Windows API
>reports mouse wheel events to application windows (winuser.h defines
>WHEEL_DELTA as 120). However the choice of 120 rather than the more
>obvious value of 1 is future-proofing on Microsoft's part, and it may
>be advisable to future-proof along with them. The idea is that in the
>future hi-res mousewheels may be more sensitive; moving the wheel the
>same distance as one notch away from you would still return
>WHEEL_DELTA with the WM_MOUSEWHEEL message, but turning it half as
>much would return WHEEL_DELTA/2.
>
>As such it is best to either define the numbers that describe you
>actions in multiples of 120, so you can pass WHEEL_DELTA multiples
>directly and get expected results, or else to look for and capture
>wheelDelta values of less than WHEEL_DELTA (so if you design a page
>that moves something 1 pixel every time it gets a wheelDelta of 120
>you should also move the object if you get 4 wheelDelta values of 30
>in a row (store the wheelDelta in a variable and act when
>Math.abs(myDelta) > 120 then do your activity Math.floor(myDelta)
>times and then set myDelta = myDelta % 120.
>
>This isn't really needed ATM, but may be necessary in the future, and
>it wouldn't hurt to do it now.
>
>-----BEGIN PGP SIGNATURE-----
>Version: PGPfreeware 6.5.3 for non-commercial use
<<http://www.pgp.com/>http://www.pgp.com>
>
>iQA/AwUBO6CwNIFpv9f1Mr0YEQKVlgCfTktmmPlii5Lvh6GoE2ugooB4Ds8An36C
>8RjscYEtt/26rZFQUh/fDt/J
>=hW5c
>-----END PGP SIGNATURE-----
>  



