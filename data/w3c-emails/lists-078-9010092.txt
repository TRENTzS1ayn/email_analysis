docno="lists-078-9010092"
received="Tue Mar 19 05:45:55 2002"
isoreceived="20020319104555"
sent="Tue, 19 Mar 2002 11:40:45 +0100"
isosent="20020319104045"
name="Danny Ayers"
email="danny666@virgilio.it"
subject="RE: SVG to image maps?"
id="EBEPLGMHCDOJJJPCFHEFGEEFFEAA.danny666@virgilio.it"
charset="US-ASCII"
inreplyto="86adt4lxqo.fsf&#64;sophia.inria.fr"
expires="-1"

To:"Max Froumentin"<mf@w3.org>
Cc:"'Www-Svg"<www-svg@w3.org>,"W3c-Wai-Ig"<w3c-wai-ig@w3.org>


Thanks Max. I think the idea has now been soundly placed in the bin marked
'not worth the effort'.

Cheers,
Danny.

>-----Original Message-----
>From: Max Froumentin [mailto:mf@w3.org]
>Sent: 19 March 2002 10:21
>To: Danny Ayers
>Cc: 'Www-Svg; W3c-Wai-Ig; danbri@w3.org; maxf@w3.org
>Subject: Re: SVG to image maps?
>
>
>"Danny Ayers" <danny666@virgilio.it> writes:
>
>> Has anyone played with stylesheets to render SVG data down to
>good ol' html
>> image maps?
>
>Hi Danny,
>
>I assume that your question is specific to [1], where your SVG file
>would only consist of a set of transparent paths with links, in front
>of a background image (no filters, animation and other fancy stuff).
>
>Even this would be hard to do in (pure) XSLT, since it takes rather
>complex calculations to compute an approximation of closed paths using
>the rectangles. Or maybe you would simplify the approximation down to
>compute the bounding box of the SVG path. Even that wouldn't be
>trivial, since XSLT 1.0 is not so good at parsing strings or computing
>min/max over sets of values.
>
>> Whilst looking at some XSLT that went the other way around [1],
>it occurred
>> to me that this might be useful in situations where an SVG viewer wasn't
>> available and/or there was an assistive technology that could make some
>> sense of an image map but would baulk at SVG.
>
>Max.
>
>> [1] http://www.w3.org/2001/08/rdfweb/foafwho/imagemap/
>



