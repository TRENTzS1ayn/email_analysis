docno="lists-079-10726261"
received="Mon Feb 24 19:00:02 2003"
isoreceived="20030225000002"
sent="Tue, 25 Feb 2003 01:05:34 +0100"
isosent="20030225000534"
name="Jesper Tverskov"
email="jesper.tverskov@mail.tele.dk"
subject="SV: Use first letter as ACCESSKEY"
id="PMEDKJMNFKKCPMNLCCFIMEGMCCAA.jesper.tverskov@mail.tele.dk"
charset="us-ascii"
inreplyto="5.2.0.9.0.20030224012813.00cc3278&#64;accessibleinter.net"
expires="-1"

To:<w3c-wai-ig@w3.org>



At 24. February 2003 23:01 (Copenhagen Time!), Bill Mason wrote many
interesting things in response to my article:
Use first letter as ACCESSKEY
www.klapmusen.dk/artikel.aspx?xml=20021031&lg=en
(a new approach to the use of the ACCESSKEY)

Thanks for a great answer with many good ideas. Let me comment on some of
them.

Quote from my article:
"On the Internet we can have hundreds of links on each web page. We soon
run out of unique access key letters and the poor web designer or coder has
a hell of a time figuring out what letter to assign to each link."

Bill Mason writes:
Your solution is solving a problem that does not exist. There is no
rationale for requiring that every link have an accesskey. Even the
recommendations call for assigning accesskeys to "important links" as
opposed to every link.

My comment:
My argument is, that one of the problems with the traditional use of
ACCESSKEY is, that the author has to use his brain to figure out what access
keys to use, and soon runs out of logical letters for the link text. Using
first letter as access keys illiminates these problems. You can even have
hundreds of access keys on a page, if you want to.

Please consider, how easy it is to generate first letter as ACCESSKEY by
code. You just use a string function returning the first letter as
ACCESSKEY.

Please consider, that you do not have to mark the access key letter by
underscoring it or by using color or bold. It is always the first letter!


Bill Mason writes:

"In my opinion, the major problem with implementing accesskeys
is that the method of activation (using a modifier key such as ALT in
Windows) almost automatically causes conflicts with accesskeys of the
user's OS and applications, including the user agent itself."

My comment:
This is a problem. There will always be a prize to pay, if we want ACCESSKEY
to work on the Internet. It is more than a fair deal to get ACCESSKEYS
working on millions of web pages, if all we need is to learn one or two new
shortcut keys in the browser in order to make the shortcut keys in the
browser still working. Just think about it!


Bill Mason writes:
"To expect to tell users, whether to use accesskeys or not (especially if
not), that they have to relearn how to use ALT is not a realistic or
implementable solution.  Further, why should a user be forced to change how
he/she interacts with their OS/applications because of a web page's
markup?  What other HTML accessibility technique requires such an
intrusion?  Why do you think forcing people to change how they use their
user agent and their OS is going to be more popular than current accesskey
techniques?

My comment:
We should have no problems telling users to change their ways, if we are
ever going to promote accessibility that matters. If some people don't like
websites using access keys to the benefit of a lot of users including the
blind, they have the choice to boycott them!


Bill Mason writes:
"As someone already noted, Mozilla's "Find as you Type" is much closer to a
solution to the accesskey problem, without introducing all the new issues
that your solution does."

My comment:
I have not considered Mozilla's "Find as you Type". I will do it as fast as
I can. It is always great if some browsers come up with new ideas. But I am
talking about "First letter as ACCESSKEY" that already works today in more
than 90 pct. of the browsers in use. It can be implemented, as I have done,
right away. It does not interfere with the old way of doing it, it is just a
better way, and it works already in the great majority of browsers in use.
But if Mozilla has an interesting idea I will consider it, and if there are
any chances the browsers used by most people are going to use the idea, it
is even better. Five to ten years from now? Great, I can wait for the best
of all solutions, but "First letter as ACCESSKEY" works today in the
majority of browsers.


Bill Mason writes:
"The accesskey, in my view, should give immediate results for the object
being navigated to via
accesskey.  For form elements, the user should be able to immediately input
data/set the field value/submit/etc. with their next keystroke.  For links,
I would expect to follow the link -- not have to press another key to
activate the link I just asked for."

My comment:
Here we simply disagree. My opinion: It is like tabbing. First you get to
the link then you follow it. It is so hard for many weak users to navigate
web pages, that if access keys are ever going to be of any use, you need
first carefully to get to the link and then to follow it.


Bill Mason writes:
"The title will be read aloud by at least some screen readers.  The essay is
somewhat biased in not considering how accesskeys are used by other
disabled users besides those having physical/motor impediments to using a
mouse to the fullest extent.  It also considers the title attribute has
having no function beyond a visual tooltip."


My comment:
I agree that the homepage of the Danish Parliament is using tool tips in a
bad way forgetting that the tool tip becomes the link text in screen readers
like JAWS. But I am not forgetting blind users. But I most admit, that too
often accessibility is reduced to the problems of blind users. Accessibility
could make a much stronger case, if we talked more about the problems of
using the keyboard in general, since it is to the benefit of all users
including the blind.

Cheers,
Jesper Tverskov



