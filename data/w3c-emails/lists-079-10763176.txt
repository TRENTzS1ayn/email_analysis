docno="lists-079-10763176"
received="Tue Feb 25 05:59:30 2003"
isoreceived="20030225105930"
sent="Tue, 25 Feb 2003 02:58:48 -0800"
isosent="20030225105848"
name="Bill Mason"
email="w3c@accessibleinter.net"
subject="Re: SV: Use first letter as ACCESSKEY"
id="5.2.0.9.0.20030224222440.00c6c9c0@accessibleinter.net"
charset="us-ascii"
inreplyto="PMEDKJMNFKKCPMNLCCFIMEGMCCAA.jesper.tverskov&#64;mail.tele.dk"
expires="-1"


To:<w3c-wai-ig@w3.org>


At 04:05 PM 2/24/2003, Jesper Tverskov wrote:
>Bill Mason writes:
>Your solution is solving a problem that does not exist. There is no
>rationale for requiring that every link have an accesskey. Even the
>recommendations call for assigning accesskeys to "important links" as
>opposed to every link.
>
>My comment:
>My argument is, that one of the problems with the traditional use of
>ACCESSKEY is, that the author has to use his brain to figure out what access
>keys to use, and soon runs out of logical letters for the link text. Using
>first letter as access keys illiminates these problems. You can even have
>hundreds of access keys on a page, if you want to.
>
>Please consider, how easy it is to generate first letter as ACCESSKEY by
>code. You just use a string function returning the first letter as
>ACCESSKEY.
>
>Please consider, that you do not have to mark the access key letter by
>underscoring it or by using color or bold. It is always the first letter!

This fails to address my only point in the above citation: there is no 
reason for needing to have an accesskey on every last link in the first 
place.  This is clearly not what the accesskey attribute is designed for.

>Bill Mason writes:
>
>"In my opinion, the major problem with implementing accesskeys
>is that the method of activation (using a modifier key such as ALT in
>Windows) almost automatically causes conflicts with accesskeys of the
>user's OS and applications, including the user agent itself."
>
>My comment:
>This is a problem. There will always be a prize to pay, if we want ACCESSKEY
>to work on the Internet.

This begs the question of whether efforts should continue to make accesskey 
work in its current implementation (whether by traditional ways or by 
"first letter"), or is it time to step back and fix how accesskey functions 
before worrying about how to assign the actual accesskeys.

>It is more than a fair deal to get ACCESSKEYS
>working on millions of web pages, if all we need is to learn one or two new
>shortcut keys in the browser in order to make the shortcut keys in the
>browser still working. Just think about it!

Except that you are not proposing learning new shortcut keys.  You are 
proposing to retrain all users to use their system's modifier key in a 
different way, all to support an accessibility function that the vast 
majority of them are not using.  As I said before, this is unrealistic and 
impractical to be considered a genuine solution.

>Bill Mason writes:
>"To expect to tell users, whether to use accesskeys or not (especially if
>not), that they have to relearn how to use ALT is not a realistic or
>implementable solution.  Further, why should a user be forced to change how
>he/she interacts with their OS/applications because of a web page's
>markup?  What other HTML accessibility technique requires such an
>intrusion?  Why do you think forcing people to change how they use their
>user agent and their OS is going to be more popular than current accesskey
>techniques?
>
>My comment:
>We should have no problems telling users to change their ways, if we are
>ever going to promote accessibility that matters.

I would like to hear how you will tell a typical user that they have to 
change how they use their OS and user agent to support a Priority 3 
accessibility guideline that the majority of them will never use.  And why 
a simple marked-up document has to impose itself in that fashion.

>  If some people don't like
>websites using access keys to the benefit of a lot of users including the
>blind, they have the choice to boycott them!

You cannot simultaneously promote your proposed solution as one that "work 
reasonable [sic] on all existing web sites without any other changes to the 
layout or to the coding of the web pages" and then suggest that users who 
disapprove of the technique boycott sites that use it.  Since you say this 
is for all web sites, you are telling those who have issues with this to 
stop using the World Wide Web.

>Bill Mason writes:
>"As someone already noted, Mozilla's "Find as you Type" is much closer to a
>solution to the accesskey problem, without introducing all the new issues
>that your solution does."
>
>My comment:
>I have not considered Mozilla's "Find as you Type". I will do it as fast as
>I can. It is always great if some browsers come up with new ideas. But I am
>talking about "First letter as ACCESSKEY" that already works today in more
>than 90 pct. of the browsers in use.

Yes the browsers support it, but that does not automatically mean that 
accesskey is a good implementation.

>It can be implemented, as I have done,
>right away. It does not interfere with the old way of doing it,

Since it increases the number of defined accesskeys on a page, it increases 
the interference of those keys with the OS.

>it is just a
>better way,

Obviously this is debatable.

Bill Mason
Accessible Internet
w3c@accessibleinter.net
http://www.accessibleinter.net/ 



