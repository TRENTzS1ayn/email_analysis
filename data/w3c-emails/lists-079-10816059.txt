docno="lists-079-10816059"
received="Tue Feb 25 16:36:13 2003"
isoreceived="20030225213613"
sent="Tue, 25 Feb 2003 21:37:07 +0000"
isosent="20030225213707"
name="David Dorward"
email="david@us-lot.org"
subject="Re: SV: Use first letter as ACCESSKEY"
id="20030225213706.GA19012@us-lot.org"
charset="us-ascii"
inreplyto="PMEDKJMNFKKCPMNLCCFIMEHCCCAA.jesper.tverskov&#64;mail.tele.dk"
expires="-1"

To: Jesper Tverskov<jesper.tverskov@mail.tele.dk>
Cc:w3c-wai-ig@w3.org



On Tue, Feb 25, 2003 at 10:19:22 +0100, Jesper Tverskov wrote:

> We have to find a way to use the same access key letters to the user agents
> and to the web page without conflicts.
 
> The two different ways of pressing the ALT key (and a similar key in other
> systems) is an option that is working today in more than 90% of the user
> agents. It is not perfect, but it is working. A better solution could take
> 5-10 years or more before it is implemented in more than 90% of the user
> agents, if we could ever agree on a better solution!

So the way to avoid conflicts with browser controls is to force users
to retrain so they don't use those browser controls?

Pros of first letter as access key technique:

* Users of IE who do not hold down the alt key while they activate
menus with the keyboard can cycle through links faster then using the
tab key.

Cons of first letter as access key technique:

* Users of IE who hold the alt key down while the activate menus with
the keyboard must be informed why they don't get the expected
result

* Users of IE who hold the alt key down while they activate menus with
the keyboard must retrain.

* Users of Mozilla (and presumably related browsers) will (according
to a quick test I ran) will get the LAST link on the page starting
with the letter if they attempt to use access keys OR if they attempt
to use keyboard navigation for menus (on my non-Windows system,
tapping alt then the letter does not activate menus, they have to be
pressed together).

IMO the problems dramatically outweigh the advantages. Better
solutions might be:

* Users who need the functionality could switch to a user agent that
allows fast keyboard navigation to any link, such as Mozilla. Users
for whom such functionality is really useful are more likely to switch
to a different browser.

* JavaScript could be implemented to capture keystrokes and focus
links in a manner consistent with Mozilla Find As You Type. I suspect
the processing needed to deal with this JavaScript would make this
impractical.

-- 
David Dorward                                   http://david.us-lot.org/
"You cannot rewrite history, not one line."
                                      - The Doctor (Dr. Who: The Aztecs)



