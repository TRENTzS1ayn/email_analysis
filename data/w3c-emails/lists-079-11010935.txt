docno="lists-079-11010935"
received="Thu Feb 27 14:46:37 2003"
isoreceived="20030227194637"
sent="Thu, 27 Feb 2003 14:46:03 -0500"
isosent="20030227194603"
name="Larry G. Hull"
email="Larry.G.Hull@nasa.gov"
subject="Re: SV: SV: Use first letter as ACCESSKEY"
id="p0510030bba8416734813@[128.183.217.33]"
charset="us-ascii"
inreplyto="PMEDKJMNFKKCPMNLCCFIOEHJCCAA.jesper.tverskov&#64;mail.tele.dk"
expires="-1"


To:"Jesper Tverskov"<jesper.tverskov@mail.tele.dk>
Cc:<w3c-wai-ig@w3.org>


At 11:22 PM +0100 2/26/03, Jesper Tverskov wrote:
>>>Bill Mason wrote:
>>>  > This is a really annoying number of years that keeps getting 
>>>pulled out of
>>>  > thin air repeatedly.  There is nothing to substantiate it, or to make me
>>>  > believe it accurate.
>>>
>>>David Woolley wrote:
>>>CSS2 is over 5 years old; there is no browser that supports it fully
>>>and many with very broken support still in use.
>>
>>Bill Mason wrote:
>>5-10 years keeps getting thrown around as a timeframe to invent and
>>implement an alternative to accesskey.  You're citing how long since
>>implementation of CSS2 it's taken for browser support to ramp up.
>
>I would like to add:
>ACCESSKEY as far as I remember is from the HTML 4.0 spec from late 1997 more
>than 5 years ago. A great user agent like Opera does not support it yet.
>
>Cheers,
>Jesper Tverskov

To bring this discussion up to current time, one recent comment on 
the XHTML 2.0 Working Draft of 31 January 2003 was,

   ACCESSKEY attribute

    Users should be able to query a resource for current
    keyboard bindings supplied by the author

    Users should be able to remap bindings to meet their
    own requirements

If anyone is interested, the 31 January 2003 working draft is at
http://www.w3.org/TR/2003/WD-xhtml2-20030131/

The pertinent section currently says,

    accesskey = Character

     This attribute assigns an access key to an element.
     An access key is a single character from the document
     character set. Note. Authors should consider the input
     method of the expected reader when specifying an accesskey.

     Pressing an access key assigned to an element gives focus
     to the element. The action that occurs when an element
     receives focus depends on the element. For example, when a
     user activates a link defined by the a element, the user agent
     generally follows the link. When a user activates a radio
     button, the user agent changes the value of the radio button.
     When the user activates a text field, it allows input, etc.

     In this example, we assign the access key "C" to a link. Typing
     this access key takes the user to another document, in this case,
     a table of contents.

     <p accesskey="C"
        rel="contents"
        href="http://example.com/specification/contents.html">
      Table of Contents
     </p>

     The invocation of access keys depends on the underlying system.
     For instance, on machines running MS Windows, one generally has
     to press the "alt" key in addition to the access key. On Apple
     systems, one generally has to press the "cmd" key in addition
     to the access key.

     The rendering of access keys depends on the user agent. We
     recommend that authors include the access key in label text or
     wherever the access key is to apply. User agents should render
     the value of an access key in such a way as to emphasize its
     role and to distinguish it from other characters (e.g., by
     underlining it).

Regards,

Larry (who is NOT on the committee writing the draft)



