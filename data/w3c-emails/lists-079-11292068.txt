docno="lists-079-11292068"
received="Mon Mar  3 10:13:35 2003"
isoreceived="20030303151335"
sent="Mon, 03 Mar 2003 10:12:53 -0500"
isosent="20030303151253"
name="David Poehlman"
email="poehlman1@comcast.net"
subject="Re: 508 rule L and WCAG 6.3"
id="007d01c2e197$63222a90$6501a8c0@handsontech"
charset="Windows-1252"
inreplyto="OF5C8296AE.AA9CF395-ON86256CDE.00165AB9-86256CDE.00181B60&#64;pok.ibm.com"
expires="-1"

To: Phill Jenkins<pjenkins@us.ibm.com>,w3c-wai-ig@w3.org



I agree that removing the difference is important.  508 should harmonize
with wcag and 2.0 should continue to warn that hava script should not be
needed for accessibility.  Onder technologies and security are still a long
way from being resolved.

----- Original Message -----
From: "Phill Jenkins" <pjenkins@us.ibm.com>
To: <w3c-wai-ig@w3.org>
Sent: Sunday, March 02, 2003 11:23 PM
Subject: RE: 508 rule L and WCAG 6.3




I would also summarize by saying that WCAG 1.0 Checkpoint 8.1 (see note 1)
is more the same as 508 paragraph L, in fact I agree with Jim that 508 and
WCAG are more like exact opposites here. WCAG 1.0 is much older and focused
on removing the need for JavaScript while 508 is more forward thinking and
is focused on making JavaScript directly accessible.  WCAG 8 says:
"Guideline 8. Ensure direct accessibility of embedded user interfaces."
Ensure that the user interface follows principles of accessible design:
device-independent access to functionality, keyboard operability,
self-voicing, etc.
Checkpoint:
    8.1 Make programmatic elements such as scripts and applets directly
    accessible or compatible with assistive technologies [Priority 1 if
    functionality is important and not presented elsewhere, otherwise
    Priority 2.]

WCAG 1.0 is a little contradictory here, if the web site meets 6.3, i.e.,
runs with JavaScript turned off, then there would be no need to meet 8.1
and make the JavaScript directly accessible.  In my opinion, the need to be
able to run without JavaScript is not a pure accessibility requirement now
that assistive technologies have and can be made to directly support
JavaScript.  Use of JavaScript may still be of concern to some due to
security fears and older technology that doesn't support JavaScript, but
the important thing is to get it right in WCAG 2.0 by better defining what
directly accessible JavaScript is.

Removing this difference between 508 and WCAG 1.0 is a very important part
in harmonizing the standards.

Note 1 WCAG 8.1 checkpoint http://www.w3.org/TR/WCAG10/#gl-own-interface
Note 2 WCAG 8.1 techniques
http://www.w3.org/TR/WCAG10-TECHS/#tech-directly-accessible

Regards,
Phill Jenkins,
IBM Research Division - Accessibility Center
11501 Burnet Rd,  Austin TX  78758    http://www.ibm.com/able



