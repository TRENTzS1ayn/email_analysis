docno="lists-079-14408043"
received="Thu Mar 27 14:57:02 2003"
isoreceived="20030327195702"
sent="Thu, 27 Mar 2003 14:56:53 -0500"
isosent="20030327195653"
name="David Poehlman"
email="poehlman1@comcast.net"
subject="Fw: Fw: Web site accessibility"
id="005d01c2f49b$04654890$6501a8c0@handsontech"
charset="Windows-1252"
inreplyto="Fw: Web site accessibility"
expires="-1"

To: wai-ig list<w3c-wai-ig@w3.org>




----- Original Message ----- 
From: "Martin McCormick" <martin@DC.CIS.OKSTATE.EDU>
To: <EASI@MAELSTROM.STJOHNS.EDU>
Sent: Thursday, March 27, 2003 2:26 PM
Subject: Re: Fw: Web site accessibility


        I don't actually disagree with those who said that
javascript is neither accessible nor inaccessible.  Some used the
analogy of a two-year-old child.  I kind of think it is more like
a tourist who goes to another land and thinks that if he or she
shouts loudly enough and long enough, the natives will somehow
understand.

        Maybe I should have said that present-day web authoring
tools, when used as directed, encourage people to write
inaccessible web sites.  If it wasn't so, then we would only have
this problem when someone was pushing the envelope and trying to
produce unusual results.

        My real frustration with the whole situation is that
I wonder how much of what has happened over the last decade or so
is a true desire to advance the state of the art and how much is
simply various private entities trying to gain an advantage by
designing systems that are incompatible with accepted standards
and practices.

        The model of lynx being an engine to render ASCII text
out of html is an excellent Plan B for those who aren't using a
graphical interface.  As I have said before, people who are blind
don't really use a graphical interface but instead use software
that modifies the function of their graphical operating system so
as to make it work much like a text terminal.

        There are two or three browsers being developed that work
in a text environment which handle some of the common practices
of javascript, but I have yet to see one that really works
against most real-world sites which look like they should
otherwise work.

        Usually, what happens is that if it bombs under lynx, you
can get a little bit further under netrik or links as in L I N K S
before those also bite the dust when they either just stop
displaying anything useful or appear to get confused by whatever
the site is trying to make happen.

        There are those who think that accessibility and
usability are just one version of JAWS away, but I've been
hearing that for about a decade now and it hasn't happened yet.
There's always some reason why it doesn't quite work right now.

        If ever-increasing complexity isn't the answer, what is?
I am truly asking this to the list, and am also suggesting that
there is virtue in simplicity if for no other reason than simple
systems are easier to debug.

        In this day, straight html pages with linear text as
opposed to columns are apt to work for everybody.

        The more one adds scripting and or pluggins, the more
users fall off the train for one reason or other.

        If you really want to get the word out, keep it simple.

        To me, the coolest thing of all is something that works
like it should.  I haven't seen very much cool stuff lately.

        Just to clear up any confusion I may have caused, UNIX
users who work in the text environment have a small number of
choices for web browsing.

        Lynx doesn't do any scripting but handles html very well.
Links has some javascript support, but it has never gotten me out
of a bind by letting me use a site that wouldn't work under lynx.

        There is also netrik which like links, has some
javascript support, but which also tends to fold when faced with
the wrong kind of web page.

Martin McCormick WB5AGZ  Stillwater, OK
OSU Center for Computing and Information Services Network Operations Group



