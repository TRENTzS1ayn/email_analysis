docno="lists-079-15552986"
received="Tue Jul 15 09:24:18 2003"
isoreceived="20030715132418"
sent="Tue, 15 Jul 2003 08:24:16 -0500"
isosent="20030715132416"
name="Kevin A Sesock"
email="sesock@okstate.edu"
subject="Re: Menus, navigation, and simplicity (Perhaps slightly off-topic)"
id="OF306E127D.EC89B4C7-ON86256D64.00497A8E-86256D64.00499F59@okstate.edu"
charset="us-ascii"
inreplyto="Menus, navigation, and simplicity (Perhaps slightly off-topic)"
expires="-1"

To:w3c-wai-ig@w3.org


I misspoke, unfortunately. I knew that I could create a Perl script to 
mash two separate html documents into one. I do not have any form of Perl 
access available on this particular server (grumbles...)

Kevin A. Sesock, A+, NET+, CNA, MCSA
Deskside Computer Support Specialist
Student Disability Services
SLA Program
Information Technology Division
Oklahoma State University

"In theory there is no difference between theory and practice, but in 
practice there is." --Unknown




w3c-wai-ig@w3.org
Sent by: w3c-wai-ig-request@w3.org
07/14/2003 05:50 PM

 
        To:     w3c-wai-ig@w3.org
        cc:     (bcc: Kevin A Sesock/cis/evp/Okstate)
        Subject:        Re: Menus, navigation, and simplicity (Perhaps slightly off-topic)



Kevin A Sesock wrote:
> Of course, I am aware I could create a Perl script, or something to the 
> effect, and do this similar thing, but I have been unaware of anything 
> that's already available. Additionally, your average web dev. package 
> will allow the creation of such an item, but it's usually far less 
> automated, and usually more complex (again, I reference my lack of time 
> available for such a project).

You've got Perl but no Web server access?  No problem!  Consider this 
simple example script fragment:

my $q=new CGI;
open (MYFILE, ">index.html");
print MYFILE $q->start_html();
print MYFILE "<h1>My Page</h1><p>Hello, World</p>";
print MYFILE $q->end_html();
close MYFILE;

Rather than sending our code to standard output - normally directed to 
your Web server, you simply put the output into a file instead.  NOTE - 
Don't use the CGI.pm header() when doing it like this, otherwise you'll 
be putting things in your file best left to the Web server.

If you use validation tools, this technique can also be handy for 
checking code that normally lurks in password-protected areas of a site 
where validators fear to tread.  (The alternative is to navigate to the 
page in a browser, then save the page source, but that's getting away 
from the original point.)

Cheers

M

-- 
Matthew Smith
Kadina Business Consultancy
South Australia
http://www.kbc.net.au



