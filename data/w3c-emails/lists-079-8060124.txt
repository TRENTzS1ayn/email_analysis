docno="lists-079-8060124"
received="Wed Jun 25 18:08:53 2003"
isoreceived="20030625220853"
sent="Thu, 26 Jun 2003 00:08:34 +0200 (CEST)"
isosent="20030625220834"
name="tina@greytower.net"
email="tina@greytower.net"
subject="Re: why valid was Re: why XHTML"
id="200306252208.h5PM8Y408674@localhost.localdomain"
charset="us-ascii"
inreplyto="why valid was Re: why XHTML"
expires="-1"


To:w3c-wai-ig@w3.org


On 25 Jun, Matt May wrote:

>>   Should we interpret that to mean that a user-agent should
>>   "accommodate" users by ignoring parts of the XML specs when rendering
>>   XHTML ?
> 
> The only reason the browsers do any kind of repair at all is because a 
> user would reasonably believe that, if they went to look at a page and 
> saw nothing, it would be the fault of the browser. The browser serves 
> the user, not the author. That's why it's a "user agent".
> 
> When content is designed to a standard, the user agent is obligated to 
> adhere to that standard when rendering it (and most if not all now do 
> this). But poorly-designed content doesn't give you that kind of 


> contract. A problem, once the content is published, would harm the 
> user, and thus has to be handled by the user agent. The _fault_, 
> however, belongs to the author and/or his or her authoring tool.

  Of course. I'm getting abit sleepy, and can't follow the REST of the
  argument. You started out by saying that:

    "But the other browser makers (rightly) assume that it's
     better to accommodate the user by working around errors in authored
     content than to punish them."

  This was, as far as I can tell, in regard to HTML - but since we're
  discussing XHTML I still wonder: what should a user-agent do with
  broken XHTML ? Try to repair it ? Can't - we'd be into non-standards
  compliant stuff then.

  You don't seriously think all XHTML written will be perfect XHTML,
  just 'cause it's "stricter" ? You can't nest P's in HTML, but people
  still do - and they get away with it because UAs allow it. You can't
  nest P's in XHTML either, but they'll get away with it because UAs
  don't support XHTML - and if UAs start doing so BUT error corrects,
  then voila. Why write valid XHTML ?

  


>>   If so, any other parts we should have fun with ignoring whilst we're
>>   at it ?
> 
> Ha ha.

  Oh, I'm sorry. It wasn't meant as a joke.



> HTML without any more help. We have arrived at a point in time where 
> the way to get things to show up the way you want is not to hack around 
> the edges of each browsers, but to design valid code (thus staying in 

   Yes, well. I and many with me has been saying this since 1996 and
   even earlier. It doesn't seem to help, does it ?



> Standards". It is unacceptable and egregiously bad design practice (not 
> to mention the cause of myriad accessibility problems) to depend on the 
> browser to fix an author's broken content.

  So an XHTML-supporting browser SHOULD stop on encountering an error,
  then ?

-- 
 -    Tina Holmboe                    Greytower Technologies
   tina@greytower.net                http://www.greytower.net/
   [+46] 0708 557 905



