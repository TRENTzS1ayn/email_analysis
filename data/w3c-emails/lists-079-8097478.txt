docno="lists-079-8097478"
received="Wed Jun 25 19:13:42 2003"
isoreceived="20030625231342"
sent="Wed, 25 Jun 2003 16:13:37 -0700"
isosent="20030625231337"
name="Matt May"
email="mcmay@w3.org"
subject="Re: why valid was Re: why XHTML"
id="A6B19568-A762-11D7-9CD0-000393B628BC@w3.org"
charset="US-ASCII"
inreplyto="200306252208.h5PM8Y408674&#64;localhost.localdomain"
expires="-1"

Cc:w3c-wai-ig@w3.org
To:tina@greytower.net



On Wednesday, June 25, 2003, at 03:08  PM, tina@greytower.net wrote:
>   Of course. I'm getting abit sleepy, and can't follow the REST of the
>   argument. You started out by saying that:
>
>     "But the other browser makers (rightly) assume that it's
>      better to accommodate the user by working around errors in 
> authored
>      content than to punish them."
>
>   This was, as far as I can tell, in regard to HTML - but since we're
>   discussing XHTML I still wonder: what should a user-agent do with
>   broken XHTML ? Try to repair it ? Can't - we'd be into non-standards
>   compliant stuff then.

Which is the author's problem, not the user's. The User Agent 
Accessibility Guidelines sets out repair techniques, as do the language 
specifications themselves. But that is all in an effort to scavenge for 
whatever useful information is available when a browser can't retrieve 
a resource and render it in standards mode.

Valid content obviates this need. Therefore, valid is good for 
accessibility.

>> We have arrived at a point in time where
>> the way to get things to show up the way you want is not to hack 
>> around
>> the edges of each browsers, but to design valid code.
>
>    Yes, well. I and many with me has been saying this since 1996 and
>    even earlier. It doesn't seem to help, does it ?

 From what I've been seeing first-hand, it _is_ helping, though there's 
still a ways to go. The worst thing we can do right now is throw up our 
hands and declare it insoluble. Most of this problem goes away when 
authoring tools start conforming to the Authoring Tool Accessibility 
Guidelines.

>   So an XHTML-supporting browser SHOULD stop on encountering an error,
>   then ?

No. Why should the user be punished for the crimes of the author? In a 
perfect world, from this standpoint, authors attempting to publish 
invalid content would be refused at the server. But there is no benefit 
to the user, the person trying to retrieve content from a document, to 
fail to render that resource because of invalidity. That only makes the 
content more inaccessible. That's why this is such a sticky problem, 
and why the WAI guidelines all address content repair in one way or 
another: because it's not a perfect world.

-
m



