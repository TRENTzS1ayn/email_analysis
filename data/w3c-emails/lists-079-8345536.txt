docno="lists-079-8345536"
received="Thu Jun 26 16:03:55 2003"
isoreceived="20030626200355"
sent="Thu, 26 Jun 2003 13:09:23 -0700"
isosent="20030626200923"
name="Kynn Bartlett"
email="kynn@idyllmtn.com"
subject="What is the Robustness Principle?"
id="14898402-A812-11D7-9537-000393D9E692@idyllmtn.com"
charset="US-ASCII"
inreplyto="078FF71625E8D4118DCB009027513652028CF040&#64;tribmail1.aztribune.com"
expires="-1"

Cc:w3c-wai-ig@w3.org
To:"Hoffman, Geoffrey"<ghoffman@aztrib.com>




On Thursday, June 26, 2003, at 11:21 AM, Hoffman, Geoffrey wrote:
> Jon Hanna wrote:
>> Following the robustness principal is NOT sloppy. Depending on it is.
> Maybe I missed it - what's the robustness principal? (principle?)
> Geoff

Robustness Principle was defined (among other places) in RFC 793 [1]
with more discussion in e.g. RFC 1122 [2]:

"TCP implementations will follow a general principle of robustness:
  be conservative in what you do, be liberal in what you accept from
  others."

"Adaptability to change must be designed into all levels of Internet
  host software.  As a simple example, consider a protocol specification
  that contains an enumeration of values for a particular header field
  -- e.g., a type field, a port number, or an error code; this
   enumeration must be assumed to be incomplete.  Thus, if a protocol
   specification defines four possible error codes, the software must
   not break when a fifth code shows up.  An undefined code might be
   logged (see below), but it must not cause a failure."

There's some interesting discussion of it here:

      http://fishbowl.pastiche.org/archives/001205.html

More stuff via google:

       
http://www.google.com/search?hl=en&lr=&ie=UTF-8&oe=UTF- 
8&q=%22robustness+principle%22&btnG=Google+Search

Enjoy!

--Kynn

[1] http://deesse.univ-lemans.fr:8003/Connected/RFC/793/17.html
[2] http://deesse.univ-lemans.fr:8003/Connected/RFC/1122/9.html

--
Kynn Bartlett <kynn@idyllmtn.com>                     http://kynn.com
Chief Technologist, Idyll Mountain                http://idyllmtn.com
Author, CSS in 24 Hours                       http://cssin24hours.com
Inland Anti-Empire Blog                      http://blog.kynn.com/iae
Shock & Awe Blog                           http://blog.kynn.com/shock



