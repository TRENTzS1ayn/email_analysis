docno="lists-079-8366222"
received="Thu Jun 26 16:26:59 2003"
isoreceived="20030626202659"
sent="Thu, 26 Jun 2003 21:30:35 +0100"
isosent="20030626203035"
name="Jonathan Chetwynd"
email="j.chetwynd@btinternet.com"
subject="Re: Can Browsers Attempt to Render Broken XHTML?"
id="0A4F1318-A815-11D7-B431-0003939B5AD0@btinternet.com"
charset="US-ASCII"
inreplyto="p05100306bb20f77e7a43&#64;[128.183.217.33]"
expires="-1"

To:w3c-wai-ig@w3.org


People with any sort of typing/physical/cognitive disorder will have 
problems generating error free code.
to view their pages one may need an html browser

and

low spec'd embedded devices don't have the space for lots of error 
correction.
if your users are known to rely on these then xhtml may be the only way 
to provide content
with embedded systems, it may be appropriate, children don't play with 
matches.

however

there seems little reason to forbid attempted expressions of poor 
xhtml, given suitable kit.
The concept may itself be erroneous, as different UA display content 
differently, even though well formed.
validators are known to be imperfect, and graphical renditions may well 
point up errors as well, in given circumstances.
for instance, they very quickly tell one what was the last image 
rendered correctly in SVG.
I code SVG by hand, but still prefer "to error check code visually, 
only finally validating, when believed to be 'done'
one might not want to do this on a mobile phone though :-)
damn where is that missing quote?

Jonathan



> A general principle of robustness: be conservative in what you do, be 
> liberal in what you accept from others.
>
> Under this principle, validators and programs that produce code should 
> be as conservative as possible; user agents, since they accept code, 
> should be as liberal as possible.



