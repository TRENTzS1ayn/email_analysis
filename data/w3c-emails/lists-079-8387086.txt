docno="lists-079-8387086"
received="Thu Jun 26 17:29:39 2003"
isoreceived="20030626212939"
sent="Thu, 26 Jun 2003 14:20:57 -0700"
isosent="20030626212057"
name="Kynn Bartlett"
email="kynn@idyllmtn.com"
subject="Re: Can Browsers Attempt to Render Broken XHTML?"
id="1394DEBF-A81C-11D7-9537-000393D9E692@idyllmtn.com"
charset="US-ASCII"
inreplyto="3EFB5CE0.8010103&#64;wiseguysonly.com"
expires="-1"

Cc:w3c-wai-ig@w3.org
To: Tim Roberts<tim@wiseguysonly.com>




On Thursday, June 26, 2003, at 01:51 PM, Tim Roberts wrote:
> Kynn Bartlett wrote:
>> On Thursday, June 26, 2003, at 09:46 AM, Tim Roberts wrote:
>>> How can they be losing presumed accessibility benefits if the 
>>> document is:
>>> Well structured, with style seperated from content.
>> That's not an advantage of XHTML over HTML.  (An HTML 4.01 could very
>> well separate content from presentation.)
>
> OK, I didn't say anything about advantages over HTML.  Refer to what 
> you were replying to above to see this.

But Tim, that's what this discussion is about.  You need to refer
to what _you_ were referring to.

You questioned the loss of "presumed accessibility benefits" --
those benefits are the benefits of using an XML language (XHTML)
over an SGML language (HTML), which people keep claiming exist
even though there's no support for them.

If you're sending XHTML as text/html, then you might as well
be sending XHTML, and the claimed benefits of the XML language
over the SGML language vanish, because you're not really sending
XML anymore.

> Yes, agreed. You can easily reformat your valid XML (XHTML) document 
> into HTML and in many different ways, including
> a total overhaul of your content if you wish. And all without altering 
> the original document. Is this bad?

No, but that wasn't the point.  The point is if that if you're
accepting something called text/html, your browser has to accept
HTML.  You can then transform it into XHTML if you want to, _on
the browser_, which points out that it's not necessary for the
server to do this.

 > Why is it then that many HTML sites contain much less seperation
 > of content and style than XHTML?

Historical accident.  There are plenty of HTML 4.01 Strict sites,
by the way, with better separation of content from style than
some XHTML 1.0 Transitional sites.

I know, that's an unfair comparison -- but so is your question
above similarly unfair.

The truth is that there's no difference between using HTML 4.01
Strict plus CSS, and using XHTML 1.0 Strict plus CSS.  Why is it
that XHTML+CSS sites _appear_ to do better?

Simple:  It's a fad.  Influential Web developers such as Jeffrey
Zeldman convinced a bunch of folks that separating content from
style is a good thing, and when they did it, they used XHTML,
because XHTML was new then.  So the mantra became, for those who
never really thought about the issues, "XHTML + CSS equals
separation of content and style!", and therefore people presumed
that HTML is not suitable for that purpose.

But in truth, it is, as I said, just an accident of history.  If
XHTML had come along later, or good CSS support had come along
earlier, all those sites would have been using HTML + CSS for
years.  (Or, one, presumes, if the "hot designers" had gotten
on the bandwagon years earlier.)

>> 2.  There are a number of complications with using XHTML
>>     (such as the mimetype and the possibility of poorly formed
>>     documents breaking entirely) which are not well-known even
>>     to proponents of XHTML.
>
> Not really. How to present XHTML is well documented on the internet. 
> It is forward thinking. You don't need to serve the correct mimetype 
> at this time, but you can easily adjust that in the future.

Most Web developers who promote the use of XHTML are unaware that a
single misplaced tag _should_ result in their entire document not
being displayed.

Most Web developers who promote the use of XHTML are unaware that
sending it as text/html and not application/xhtml+xml is incorrect.

Why is it forward thinking?  You state this as if it's an assertion --
as if forward-thinking is necessarily proof that XHTML should be
considered more accessible than HTML.  But such a statement needs to
be proven, not simply asserted, and you have to state what the
benefits of "forward thinking" actually are.

Note, by the way, that when we're talking about accessibility, we're
not talking about other benefits of XML-based HTML, such as the
ability to manipulate it with XML tools on the server level.  XSL(T),
for example, allows output in either HTML or XML format, so that
particular distinction is unimportant.  (You can do everything on
the "back end" in XHTML/XML and then serve it up as XHTML, HTML,
or both.)

>> 3.  Thus, XHTML 1.0 may actually be a less reasonable choice than
>>     HTML 4.01 for general use on the Web.  It certainly is not
>>     a slam dunk that XHTML is superior.
>
> I don't think it is less reasonable. HTML and XHTML are very close in 
> what they do.

They're pretty much identical in what they do.

> It is *my opinion* that XHTML has a slight edge.

You keep saying it's "your opinion."  I keep asking you to justify
it.  How is XHTML a better choice, from an accessibility standpoint,
than HTML?

> More like a pleasent dribble to the hole and a gentle roll off the 
> palm into the net. (sorry I am english, I hope my basketball 
> terminology works). My argument was never about a gaping difference. 
> Just what I feel from experience has made development slightly easier 
> for me.

How?  (You haven't explained that.)

Note, by the way, the language you use in a development environment
is not necessarily the language you must provide to the end user.
I write my Web pages in PHP mostly, but the user agent receives
HTML.

In this discussion, I assume we are talking about the benefits of
sending XHTML to the user agent vs. sending HTML to the user agent.

If there are development benefits of using XHTML (vs. using HTML),
regardless of what the user agent receives, I would like to hear
them.

>> The notion that XHTML is boon to accessibility has to be carefully
>> considered.  Many will take it for granted because it's the
>> latest-and-greatest; it may be the latest, but when it comes to
>> accessibility considerations, it's not necessarily the "greatest.
>>
>> Does that make me "anti-XHTML for the sake of it?"  Gosh, I hope
>> not.
>
> Nor am I anti-HTML. I just prefer XHTML.

I'm glad you know what you prefer.  I'm simply asking you to explain
_why_.

> Is that hard to swallow. Gosh I guess so.

No, I can easily accept that you have irrational reasons for
preferring XHTML.  Such reasons might include, "all the cool
kids are using it," "it's got X in the title," "it seems so much
more futuristic," and "I prefer lowercase letters."  And you are
more than welcome to come to your _opinion_ by whatever means
you like.

The thing that's hard to swallow is the notion that you have
rational, well-thought out reasons for your preference.  From
what you've presented here, there doesn't seem to be a reason
beyond simple preference for XHTML.  Like I said, that's fine if
you feel that way -- but it doesn't help anyone else who is
struggling with the issue, "I'm concerned about accessibility
-- is there a difference if I use XHTML or HTML?"

--Kynn

PS:  Here's my answer:  "In general, no.  There are some
      technicalities in XHTML that might trip you up, so if
      you have to ask the question, you're better off just going
      with HTML and not worrying about XHTML."

--
Kynn Bartlett <kynn@idyllmtn.com>                     http://kynn.com
Chief Technologist, Idyll Mountain                http://idyllmtn.com
Author, CSS in 24 Hours                       http://cssin24hours.com
Inland Anti-Empire Blog                      http://blog.kynn.com/iae
Shock & Awe Blog                           http://blog.kynn.com/shock



