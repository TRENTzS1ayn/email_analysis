docno="lists-079-8669768"
received="Fri Jun 27 06:54:41 2003"
isoreceived="20030627105441"
sent="Fri, 27 Jun 2003 11:57:04 +0100"
isosent="20030627105704"
name="Isofarro"
email="w3evangelism@faqportal.uklinux.net"
subject="Re: WCAG Checkpoint 5.3"
id="009301c33c9a$d97ec5a0$8e33f7c2@laptop"
charset="iso-8859-1"
inreplyto="20030627102001.18199.qmail&#64;web41303.mail.yahoo.com"
expires="-1"


To: Pablo Enr?quez<lurgee92@yahoo.es>,<w3c-wai-ig@w3.org>


From: "Pablo Enr?quez" <lurgee92@yahoo.es>
Subject: Re: WCAG Checkpoint 5.3


> Those say that you must use StyleSheet to control the
> layout, this says you can use tables which make sense
> linearized. something sounds wrong.

Why? Tables are for the structure of tabular data (like a league table) -
not just for layout.

Nested tables are a good way of messing with the linearisation of tables.

Take for example a two column table:

row1col1    row1col2
row2col1    row2col2
row3col1    row3col2
row4col1    row4col2

When using proper table markup, it linearises to

row1col1 row1col2 row2col1 row2col2 row3col1 row3col2 row4col1 row4col2

Now sometimes some gung-ho webdesigner prefers a nice blue background around
the first column entries, and a nice green outline on the collection of col2
elements, and instead of using stylesheets, he decides to use nested table -
cos its easier.

So the outer table has two cols and one row, and inside each cell he creates
a four row one celled table.

That linearises to

row1col1 row2col1 row3col1 row4col1 row1col2 row2col2 row3col2 row4col2

Completely different to the first linearisation example - and its very hard
for a non-visual browser user to make the correct relationship between the
elements.

The real world analogy to this is when reading a book, the first example you
read starting from the first line and read all the words on that line, when
you reaches the end of a line, you go back to the left hand side and start
on the next line.

The second example you must start at the top left, but you must read the
first word on each line from top to bottom. When you reach the bottom of the
page, you must go back to the top of the page, then read the second word in
each line - as you can imagine, not an easy task to understand the content
of the page at all.



