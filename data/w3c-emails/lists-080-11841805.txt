docno="lists-080-11841805"
received="Mon May 31 16:10:37 2004"
isoreceived="20040531201037"
sent="Mon, 31 May 2004 13:10:35 -0700"
isosent="20040531201035"
name="Matt May"
email="mcmay@w3.org"
subject="Re: Accessible road maps"
id="937C8A12-B33E-11D8-B451-000393B628BC@w3.org"
charset="US-ASCII"
inreplyto="200405290852.i4T8qZj02756&#64;djwhome.demon.co.uk"
expires="-1"


Cc:w3c-wai-ig@w3.org
To: David Woolley<david@djwhome.demon.co.uk>


On May 29, 2004, at 1:52 AM, David Woolley wrote:
>> Just a quick sanity check - moving forward, the requirement to work
>> WITHOUT JAVASCRIPT is going away in 2.0, right?  And being replaced 
>> with
>
> I hope not, as an increasing number of people who wouldn't consider
> themselves disabled will refuse to run scripting, especially from
> sites run by people unfamiliar to them.

Please be careful with this approach: you're saying that we need to 
craft accessibility guidelines in order to satisfy needs that are 
orthogonal to disability. These things are out of our scope, and 
they're the kind of things that would cause the document to be ignored.

Scripting and binary objects are accessibility issues on the Web; they 
also exist on over 85% of sites currently in existence. We ignore this 
fact at our peril.

So, what do we do? Banish scripting from the Web? Certainly not. We may 
as well have banned tables and frames at the time they came out for all 
the damage they've done. But it wouldn't have made a bit of difference 
to developers who saw a tool that met their needs.

The approach to solving this is threefold: create techniques and 
scripts that do minimal harm; get developers to use them, and 
understand how they work; and develop specifications that eliminate the 
need for scripting by replacing its most common use cases with 
declarative code.

Which is what we're doing, actually. I'll be starting work on scripting 
techniques for WCAG 2. The end product will consist of techniques for 
keeping JavaScript from causing accessibility problems, and producing 
scripts that authors can take and use freely. I have several expert 
scripters who have expressed interest in working on this, and welcome 
more.

Today, I'm on my way to a W3C Workshop on Web Applications and Compound 
Documents[1]. The Protocols and Formats WG position paper[2] explains 
how we got into the mess we're in, and our ideas on a way out. Other 
papers[3], at least all of those that I've read, say the same thing: 
declarative code cancels out scripting, and we need declarative 
languages to build these user interfaces we've been building all these 
years with script. This is good news for us, because it could clear out 
a lot of the weeds associated with scripting. The PFWG is also working 
on using currently available technologies to ensure that ATs can all 
interact with modern Web documents and applications.

We have to take this on. There is no alternative. Script is here to 
stay, and if the WCAG document fails to recognize it, it will fail to 
be adopted.

[1] http://www.w3.org/2004/04/webapps-cdf-ws/index.html
[2] http://www.w3.org/2004/04/wa-access.html
[3] http://www.w3.org/2004/04/webapps-cdf-ws/papers/

-
m



