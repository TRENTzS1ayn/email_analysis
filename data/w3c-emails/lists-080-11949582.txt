docno="lists-080-11949582"
received="Tue Jun  1 16:26:03 2004"
isoreceived="20040601202603"
sent="Tue, 1 Jun 2004 13:25:54 -0700"
isosent="20040601202554"
name="Mike Barta"
email="mikba@microsoft.com"
subject="RE: Accessible road maps"
id="7DF35A0B5F67E84B9095C21C8A97641802492A5F@RED-MSG-33.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="Accessible road maps"
expires="-1"


To:"Kerstin Goldsmith"<kerstin.goldsmith@oracle.com>,<sdale@stevendale.com>
Cc:<pjenkins@us.ibm.com>,<david@djwhome.demon.co.uk>,<w3c-wai-ig@w3.org>

I'd concur with this.  if we say that one cannot use a technology, when
there are accessible ways to use it, we will weaken the guidelines. 
 
/m

________________________________

From: w3c-wai-ig-request@w3.org [mailto:w3c-wai-ig-request@w3.org] On
Behalf Of Kerstin Goldsmith
Sent: Tuesday, June 01, 2004 1:10 PM
To: sdale@stevendale.com
Cc: pjenkins@us.ibm.com; david@djwhome.demon.co.uk; w3c-wai-ig@w3.org
Subject: Re: Accessible road maps


I am not sure that this question is really relevant.  I think a more
important question is "should we be restricting people's choices of
different technologies in the name of accessibility when those
technologies can be used to create accessible interfaces."  It's not our
job to ask people to prove that they HAVE to do something one way over
another.  It's our job to realistically look at all technologies out
there that people WILL use, and come up with ways for them to use them
accessibly.  Pandora's box is open, we are not going to be able to put
scripting back and shut the lid - so we better help people understand
the choices they have in HOW they implement scripting.

My three cents.
-Kerstin

-Kerstin

Steven Dale wrote:


This is all a nice argument for the sake of debate.

But my question still has not been answered,
why do we NEED client side scripting.  Can someone give me an
example that
requires Client Side Scripting while remains accessible when the
scripting
is used?

-Steve

Phill Jenkins said:
  

Matt wrote:
    

So, what do we do? Banish scripting from the
Web? Certainly not. We
may
      

David responded:
<clip>
Remember that HTML and thus the web were created in
deliberate rejection
of more sophisticated tools...

Phill replies:
I view HTML's purpose a little differently and I believe
it has evolved.
 For example, events such as onClick, onKeyPress, etc
are actually part
of  the HTML spec [see note 1].  I had thought they were
part of the
JavaScript spec but they are not!

David continued with:
Most web sites nowadays are computer programs, not
documents, and
attempt to override the viewing tool's user interface.

Phill replies:
That is exactly Matt's point.  You seem to be supporting
his argument.
Many WAI individuals have focused on "banning"
interactivity of web
sites  created from events and scripting that now we are
late coming up
with  better techniques and specs to solve the problems.
Same thing
happened  over a decade ago when command line PC DOS
applications were
replaced with  Window GUI's.

Regards,
Phill Jenkins

[Note 1] HTML 4 spec on Events

http://www.w3.org/TR/REC-html40/interact/scripts.html#h-18.2.3
    




  



