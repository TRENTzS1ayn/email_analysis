docno="lists-080-12768912"
received="Thu Jun  3 14:13:24 2004"
isoreceived="20040603181324"
sent="Thu, 3 Jun 2004 13:12:50 -0500"
isosent="20040603181250"
name="Phill Jenkins"
email="pjenkins@us.ibm.com"
subject="RE: Scripting (was RE: Accessible road maps)"
id="OF346E9740.2878AF0A-ON86256EA8.006074F7-86256EA8.00640DAD@us.ibm.com"
charset="US-ASCII"
inreplyto="1040.129.174.36.240.1086213250.squirrel&#64;www.stevendale.com"
expires="-1"

To:sdale@stevendale.com
Cc:w3c-wai-ig@w3.org


> That is an excellent example of why I don't think we should ban 
scripting
> either.  But, it is an enhancement of speed in this case, not a 
necessity.
>
>-Steve

Depends who the audience is. 

If the response time is so slow going back to the server (instead of 
client side),  then cognitive and learning disabilities issues come into 
play.  In other words, if you click something, and nothing happens, how 
long can one wait without being confused?  Client-side scripting solves 
this necessity.  It is a disability issues that needed solving.  It is a 
usability issue that needed solving.  Client side scripting techniques 
need to be added so that developers know how to do it right.  A priority 
one checkpoint to "ban scripting" is not the best approach.  A priority 
one checkpoint to require that everything done with client side scripting 
degrade gracefully is not always feasible.  Some in the past were banning 
HTML documents in favor of plain text documents.  Most agree now that 
structured documents are better than plain text.  Most agree now that 
interactive documents (web based applications) are also better than just 
structured documents.  Jim Thatcher explains the argument of how NOSCRIPT 
does not provide the functionality of client side scripting. See 
http://www.jimthatcher.com/webcoursea.htm

Plus, can you imagine an accessible way of asking a user if they need more 
time to complete a secure transaction without using a client side 
scripting alert?  This is a situation where the transaction has a physical 
time limit with the server.  The server can't wait forever for the client 
to respond, so it sets a reasonable time limit, but requires the client to 
respond if more time is needed.  Just like in software application, a 
dialog box appears alerting the users that time is about to expire and how 
to request more time.  I only know how to do this with client side 
scripting.  Sure it would be nice, and in many cases one can "wait 
forever", but in many cases with secure financial and private data 
transaction one can't wait for ever. 

Phill Jenkins



