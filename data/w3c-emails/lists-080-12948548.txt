docno="lists-080-12948548"
received="Sat Jun  5 06:54:42 2004"
isoreceived="20040605105442"
sent="Sat, 5 Jun 2004 09:21:40 +0100 (BST)"
isosent="20040605082140"
name="David Woolley"
email="david@djwhome.demon.co.uk"
subject="Re: Accessible road maps"
id="200406050821.i558Le702644@djwhome.demon.co.uk"
charset="us-ascii"
inreplyto="B239BEDED044074C8E2CCC3A9162F2A90521D337&#64;swilnts804.wil.fusa.com"
expires="-1"


To:w3c-wai-ig@w3.org


> 
> 
> How accessible is .NET when it's compiler removes the title attribute
*** > from radio button and check box form controls?  Yes there are better
*** > ways to make these contols accessible, but when the occasion arises to
*** > use the title attribute as a last resort...

You are really refering to Web Forms/ ASP.NET here, where I was referring
to Common Language Runtime (CLR) code directly using the .NET framework.  That
Web Forms would produce code without concern for accessibility guidelines
was something that I raised on this list maybe two years ago.  It also
generates invalid HTML (disabled attributes on elements which are not
HTML controls).  The good thing for the scripting debate, is its own controls
and (less likely) user code conforming to the authoring guidelines, always
provides server side backup for functions that will be scripted on a
cooperating browser.

Web Forms is largely about producing an environment where the bulk of
programmers can write almost as though they were dealing with a local,
stateful, client - although people adding new controls are likely to
be exposed to the resulting complexity.

There is a likelihood that Web Forms may become common on public web sites,
but my guess is that true .NET thick client code will only commonly be used
for intranet applications.  Unfortunately, I think that Web Forms will
prevent any signficant adoption of W3C XML forms extensions.

> Behalf Of david poehlman
> 
> how backward compatible is .net?

CLR + .NET Framework is backwards compatible to Windows 98, but you will need
to install some fairly resource greedy code.  Microsoft's business model is
dependent on regular software upgrades, so you would expect a great deal of
backwards compatibility.

I expect the main adoption to be for intranets, where the environment is 
controlled and the main reason for quoting it was to discuss tools that 
were designed to meet the technical requirements of "web applications",
rather than kludges on top of a simple document language, and information
search submission language.



