docno="lists-080-7058571"
received="Tue Dec  9 22:17:29 2003"
isoreceived="20031210031729"
sent="Wed, 10 Dec 2003 14:15:03 +1100"
isosent="20031210031503"
name="Geoff Deering"
email="gdeering@acslink.net.au"
subject="The Cult of Pseudo Accessibility"
id="3FD68FB7.6060801@acslink.net.au"
charset="us-ascii"
expires="-1"


To: WAI Interest Group<w3c-wai-ig@w3.org>


Why is it with all these years in development Bobby does not detect 
basic problems in markup that a good parser should be able to detect. 
Why after all this time does it not detect a page full of empty elements

tabindex="" accesskey=""

Why doesn't it look for <NOSCRIPT> and alternatives when there are 
<SCRIPT> elements

Such things pass WAI AAA according to Bobby, but which the W3C validator 
shows to be full or pseudo accessibility (at least in the emtpy 
tabindex="" accesskey="" case).

This is what strikes me about a lot of compliance, its the art of 
throwing junk markup at a sub standard parser that is creating a Cult of 
Pseudo Accessibility.  The sub standard validators / accessibility 
parser are doing just as much to harm real accessibility as they are in 
trying to aid it.

As a developer with a programming background I just do not understand 
why these tools are so poor.  The W3C can produce good parsers, why 
can't Watchfire?  There are so many good parser out there, so why not? 
What is so hard about detecting the problems or checkpoints with the above?

How much is this type of thing supporting a culture of ignorance where 
sub standard accessibility validators encourage and perpetuate a Cult of 
Pseudo Accessibility Design whose designers follow the new version of 
the old school browser and parser tricks school of development.

Geoff Deering



