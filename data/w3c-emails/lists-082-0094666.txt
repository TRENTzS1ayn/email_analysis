docno="lists-082-0094666"
received="Thu Mar  5 12:23:55 1998"
isoreceived="19980305172355"
sent="Thu, 5 Mar 1998 09:23:40 -0800 (PST)"
isosent="19980305172340"
name="Scott Luebking"
email="phoenixl@netcom.com"
subject="Links in Lynx"
id="199803051723.JAA12069@netcom12.netcom.com"
expires="-1"


To:w3c-wai-ui@w3.org

Hi,
Sometimes, when designing a user interface, it is a good idea to look
at what people currently use and why they like it.  A number of blind
people have told me that they like how Lynx will let them select
links by number.  I thought I would analyze this a bit.

There are several advantages to selecting links by number for blind users.
A major benefit is that the blind user does not need to navigate
to a link to select it.  For example, suppose that the blind user
is reading a page list with 22 links, but isn't sure which he/she wants.
The blind user reads through the 22 links and then finds that it is the
eleventh link that is needed.  With Lynx, the user just types in 11.
In a graphical browser, the blind user has to navigate back up to the
eleventh link.  Since screen readers are not as efficient for navigating
graphical displays as reading text, navigating back to a link requires
much more effort by the blind user.

Lynx annotates the web page by adding a indicator with an id number for
each link.  This web page annotation has several advantages for blind users.
The first is that links are a little more clearly identified for blind
users in Lynx than in graphical browsers.  In graphical browser, the
blind user has to find a link by looking for color changes in text fonts.  
The blind user can run into several challenges with this.  One problem
is that the text color for links can change from web page to web page.
A second problem is that text links in a line can appear as just one long
link.  The third problem is that the blind user has to change operating
modes from just reading text to looking for text color changes which can be
awkward,  With Lynx's annotating web page approach, the blind user only
has to read text.


So, Lynx's handling of links has two key aspects;

    1.  each link is marked with an id

    2.  a link can be selected by id in addition to location


Assigning an id to each link can have some additional benefits.

For example, if you want to know the URL of a particular link, you can
type a command like :

    url 23

and the browser can tell you the url for link 23 without having to navigate
to the link.  (The 'url' command could probably be abbreviated to 'u'.)


Another way to look at link ids is as ids for 'landmarks' on a web
page.  Suppose you're at the bottom of the web page and you wanted
to scroll back to the neigborhood of link 12.  You could type:

    link 12

and the browser could scroll back to that link.


Scott



