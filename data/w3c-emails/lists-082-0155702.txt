docno="lists-082-0155702"
received="Sun Mar  8 11:33:33 1998"
isoreceived="19980308163333"
sent="Sun, 8 Mar 1998 08:33:30 -0800 (PST)"
isosent="19980308163330"
name="Scott Luebking"
email="phoenixl@netcom.com"
subject="A little more on landmarks"
id="199803081633.IAA20372@netcom20.netcom.com"
expires="-1"


To:w3c-wai-ui@w3.org

Hi,
Keyboard navigation uses the concept of focusing on some item and
highlighting it like in Lynx, etc.  If the item being highlighted
is a link or a headline, deciding what text to highlight is usually
straightforward.  The challenge comes with some of the other structures.
For example, if the object is a form, list, or table, what gets highlighted?  
The first thought would be to highlight the whole structure.  The
problem with that is how does the user "get into" the structure?
What would be the natural flow of navigation?

A solution I found useful was to focus on the navigation aspect instead
of the structure.  Thinking in terms of navigation, the approach that made
sense was for the browser to display text indicating the beginnings
and the ends of forms, etc.  The user then can navigate to the
landmark at the beginning of the form.  To "enter" the form, the
user just moves on from the landmark at the beginning of the form.

The beginning and end landmarks for forms, lists, etc had another
benefit.  Sighted users can usually determine from visual cues
where the end was.  Blind users had a harder time doing this.
A common mistake was to assume that a submit button on a form
indicated the end of the form.  The blind user might not realize such
things as more than one submit button on a form or additional
input fields after the submit button.


The beginning landmark for forms, lists, etc, could include a little
information about the structure.  The beginning landmark could tell number
of fields in a form or items in a list.  This information would help
the blind user guage the size of the structure.  Information about
a table could be especially useful.  Numbers of rows, columns, spanned cells,
incomplete rows along with border status could help the user guess the
purpose of the table.  In addition, having the information directly on the
page avoided the user having to go though menus.


Another navigation problem is how to handle navigating into nested lists
and table.


Scott



