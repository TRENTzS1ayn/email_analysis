docno="lists-082-0442649"
received="Thu Mar 12 12:07:37 1998"
isoreceived="19980312170737"
sent="Thu, 12 Mar 1998 09:07:30 -0800 (PST)"
isosent="19980312170730"
name="Scott Luebking"
email="phoenixl@netcom.com"
subject="Re:  A scenario"
id="199803121707.JAA10694@netcom4.netcom.com"
inreplyto=" A scenario"
expires="-1"


To:w3c-wai-ui@w3.org

Hi,

Here's a pass at analyzing this scenario.

Scenario:  A blind student has to register for a class via the web.
The registration web page has multiple forms.  In addition, two different
submit buttons are provided towards the beginning of each form for
different actions.  Also, each form has a link to a help web page for
that particular form.

There are actually a couple versions of this scenario.  The simpler version
is if the student has used the web page before.  Suppose he needs
to fill out the middle form on the web page.  The student could search
through the web page looking for the form which could be rather
inefficient.  The student's chore could be made much easier
if the browser provided a command or menu item which moved
the web page to the beginning of the middle form.


In the second version of the scenario, the blind student hasn't read
the web page before.  When a sighted person pulls up a new web, he/she can
scan through the web page to get a sense of its structure.  The blind
student can benefit from a browser command or menu item which pops up a
summary of the web page which includes such things as number of forms,
number of links, etc.  The blind student can then find out that there are
three forms on the page.  The blind student now has to read the
web page to find out which form he/she needs to fill out.  One problem
that can crop up is that the web page may be set up in such a way that
that the visual cues for separating the forms are missed.  The blind
student could benefit from the browser's including some annotation at the
beginning and end of each form including the number of the form.

After reading through the web page, the blind student decides that the
middle form needs to be filled out.  This is the same problem as the first
version of the scenario and the blind student in this case could benefit
from the same solution.

Before the blind student starts filling out the form, he/she might want to know
more about the form.  The student could benefit from a command or menu item
which describes the form.  The description could tell how many fields
there are, any links in the form, how many text fields and how many
submit buttons.  The student could then find out that this form has two submit
buttons to choose from instead of just one.

The student can fill out the fields in the form by using something like
the tab key to move to successive fields and buttons.  The form
may not be clear about how labels and buttons are associated.  In HTML
4.0, there is a label tag which associates labels and buttons.  The blind
student could benefit from a command or menu item which describes the button
including information about label, current setting, etc.  If the button
is a radio button in a group, the describe action for the button
could also tell which button is currently selected.

The blind student needs to know when the end of the form has been reached.
The tab action could stop at the annotation the browser has provided at that
the end of the form.  The student now has to activate the right submit button.
The student could go back through the fields looking for the submit
button.  However, if each button had an id, for example 2.3 which would mean
the third field/button on  second form, the student could use a
command or menu item to tell the browser to navigate to that button or
to activate that button.


What do people think of this scenario analysis?

Scott



