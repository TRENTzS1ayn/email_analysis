docno="lists-082-10091389"
received="Wed Jun 23 13:26:29 1999"
isoreceived="19990623172629"
sent="Wed, 23 Jun 1999 13:26:28 -0400 (EDT)"
isosent="19990623172628"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Use accessibility conventions..."
id="Pine.LNX.4.10.9906231322370.30073-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To: WAI UA group<w3c-wai-ua@w3.org>


This is the checkpoint and the techniques from the Authoring Tool
Accessibility Guidelines.

Just by the way, review of this is specifically requested by the authoring
tools group at the momemt, so copying comments to w3c-wai-au@w3.org would be
appreciated

charles McCN

This comes from
http://www.w3.org/WAI/AU/WAI-AUTOOLS-19990621/wai-autools-tech#gl-make-accessible

   1.1 Use all applicable operating system and accessibility standards and conventions. [Priority 1]
     
Techniques:

          + Guidelines for specific platforms include
              1. "IBM Guidelines for Writing Accessible Applications Using 100% Pure Java" [JAVA-ACCESS] R. Schwerdtfeger, IBM Special Needs Systems.
              2. "An ICE Rendezvous Mechanism for X Window System Clients" [ICE-RAP], W. Walker. A description of how to use the ICE and RAP protocols for X Window
                 clients.
              3. "Information for Developers About Microsoft Active Accessibility" [MS-ACCESS] Microsoft Corporation.
              4. "The Inter-Client communication conventions manual" [ICCCM]. A protocol for communication between clients in the X Window system.
              5. "Lotus Notes accessibility guidelines" [NOTES-ACCESS] IBM Special Needs Systems.
              6. "Java accessibility guidelines and checklist" [JAVA-CHECKLIST] IBM Special Needs Systems.
              7. "The Java Tutorial. Trail: Creating a GUI with JFC/Swing" [JAVA-TUT]. An online tutorial that describes how to use the Swing Java Foundation Class to
                 build an accessible User Interface.
              8. "Macintosh Human Interface Guidelines" [APPLE-HI] Apple Computer Inc.
              9. "The Microsoft Windows Guidelines for Accessible Software Design" [MS-SOFTWARE]. Warning! This is a "self-extracting archive", an application that
                 will probably only run on MS-Windows systems.
          + Guidelines for specific software types include
              1. "The Three-tions of Accessibility-Aware HTML Authoring Tools" [ACCESS-AWARE], J. Richards.
              2. "User Agent Accessibility Guidelines (Working Draft)" J. Gunderson, I. Jacobs eds. (This is a work in progress) [WAI-USERAGENT]
          + General guidelines for producing accessible software include:
              1. "Accessibility for applications designers" [MS-ENABLE] Microsoft Corporation.
              2. "Application Software Design Guidelines" [TRACE-REF] compiled by G. Vanderheiden. A thorough reference work.
              3. "Designing for Accessibility" [SUN-DESIGN] Eric Bergman and Earl Johnson. This paper discusses specific disabilities including those related to
                 hearing, vision, and cognitive function.
              4. "EITACC Desktop Software standards" [EITAAC] Electronic Information Technology Access Advisory (EITACC) Committee.
              5. "Requirements for Accessible Software Design" [ED-DEPT] US Department of Education, version 1.1 March 6, 1997.
              6. "Software Accessibility" [IBM-ACCESS] IBM Special Needs Systems
              7. "Towards Accessible Human-Computer Interaction" [SUN-HCI] Eric Bergman, Earl Johnson, Sun Microsytems 1995. A substantial paper, with a valuable print
                 bibliography.
              8. "What is Accessible Software" [WHAT-IS] James W. Thatcher, Ph.D., IBM, 1997. This paper gives a short example-based introduction to the difference
                 between software that is accessible, and software that can be used by some assistive technologies.
          + User Interfaces are sometimes built as web content, and as such should follow the Web Content Accessibility Guidelines [WAI-WEBCONTENT] (See also 3 Support
            accessible authoring practices )
          + The following are common requirements for producing accessible software. This list does not necessarily cover all requirements for all platforms, and items
            may not be applicable to some software.:

Following Standards
               o Draw text and objects using system conventions
               o Make mouse, keyboard, and API activation of events consistent
               o Provide a User Interface that is "familiar" (to system standards, or across platform)
               o Use system standard indirections wherever possible
               o Ensure all dialogs, subwindows, etc meet these requirements
               o Avoid blocking assistive technology functions (sticky/mouse keys, screenreader controls, etc) where possible
   
Configurability
               o Allow users to create profiles
               o Allow control of timing, colors, sizes, input/output devices and media
               o Allow users to reshape the user interface - customize toolbars, keyboard commands, etc
    
Input Device Independence
               o Provide Keyboard access to all functions
               o Document all keyboard bindings
               o Provide customizable keyboard shortcuts for common functions
               o Provide logical navigation order for the keyboard interface.
               o Avoid repetitive keying wherever possible
               o Provide mouse access to functions where possible
              
Icons, Graphics, Sounds
               o Provide visual (text) equivalents for sound warnings
               o Allow sounds to be turned off
               o Provide text equivalents for images/icons
               o Use customizable (or removable) colors/patterns
               o Ensure high contrast is available (as default setting)
               o Provide text equivalents for all audio
               o Use icons that are resizeable or available in multiple sizes
          
Layout
               o Do not rely on color alone for meaning. Use color for differentiation, in combination with accessible cues (text equivalents, natural language, etc)
               o Position related text labels and objects consistently, and in an obvious manner (labels before objects is recommended)
               o Group related controls
               o Ensure default window sizes fit in screen
               o Allow for window resizing (very small to very large)
                 
User Focus
               o Clearly identify the user focus (and expose it via API)
               o moving focus should not cause unexpected events
               o Allow user control of timing - delays, time-dependent response, etc
               o Allow for navigation between as well as within windows
  
References:

   [APPLE-HI]
          "Macintosh Human Interface Guidelines", Apple Computer Inc. Available at:
          
          http://developer.apple.com/techpubs/mac/HIGuidelines/HIGuidelines-2.html
          
   [CSS2-ACCESS]
          "WAI Resources: CSS2 Accessibility Improvements", I. Jacobs and J. Brewer, eds. This document, that describes accessibility features in CSS2, is available
          at:
          http://www.w3.org/WAI/References/CSS2-access
   
   [ED-DEPT]
          "Requirements for Accessible Software Design", US Department of Education, version 1.1 March 6, 1997. Available at:

          http://ocfo.ed.gov/coninfo/clibrary/software.htm.
   
   [EITAAC]
          "EITACC Desktop Software standards", Electronic Information Technology Access Advisory (EITACC) Committee. Available at:
          trace.wisc.edu/docs/eitacc_desktop_software_standards/desktop_software_standards.htm

   [HTML4-ACCESS]
          "WAI Resources: HTML 4.0 Accessibility Improvements", I. Jacobs, J. Brewer, and D. Dardailler, eds. This document, that describes accessibility features in
          HTML 4.0, is available at:
          http://www.w3.org/WAI/References/HTML4-access
   
   [IBM-ACCESS]
          "Software Accessibility" IBM Special Needs Systems. Available at:

          http://www.austin.ibm.com/sns/accesssoftware.html
       
   [ICCCM]
          "The Inter-Client communication conventions manual". A protocol for communication between clients in the X Window system. Available at:
          
          http://ftp.x.org/pub/R6.3/xc/doc/specs/ICCCM/

   [ICE-RAP]
          "An ICE Rendezvous Mechanism for X Window System Clients", W. Walker. A description of how to use the ICE and RAP protocols for X Window clients. Available
          at:
   
          http://trace.wisc.edu/docs/x_win_andice/x_andice.htm
          
   [JAVA-ACCESS]
          "IBM Guidelines for Writing Accessible Applications Using 100% Pure Java", R. Schwerdtfeger, IBM Special Needs Systems. Available at:
   
          http://www.austin.ibm.com/sns/snsjavag.htm
          
   [JAVA-CHECKLIST]
          "Java Accessibility Guidelines and Checklist" IBM Special Needs Systems. Available at:
          
          http://www.austin.ibm.com/sns/accessjava.html
          
   [JAVA-TUT]
          "The Java Tutorial. Trail: Creating a GUI with JFC/Swing". An online tutorial that describes how to use the Swing Java Foundation Class to build an
          accessible User Interface. Available at:
          
          http://java.sun.com/docs/books/tutorial/uiswing/
  
   [MS-ACCESS]
          "Information for Developers About Microsoft Active Accessibility" Microsoft Corporation. Available at:

          http://www.microsoft.com/enable/msaa/develop.htm

   [MS-ENABLE]
          "Accessibility for Applications Designers" Microsoft Corporation. Available at:

          http://www.microsoft.com/enable/dev/apps.htm
 
   [MS-SOFTWARE]
          "The Microsoft Windows Guidelines for Accessible Software Design". Warning! This is a "self-extracting archive", an application that will probably only run
          on MS-Windows systems.
          
          http://www.microsoft.com/enable/download/winapp23.exe
          
   [NOTES-ACCESS]
          "Lotus Notes Accessibility Guidelines" IBM Special Needs Systems. Available at:
          
          http://www.austin.ibm.com/sns/accessnotes.html.
          
   [SUN-DESIGN]
          "Designing for Accessibility" Eric Bergman and Earl Johnson. This paper discusses specific disabilities including those related to hearing, vision, and
          cognitive function. Available at:
          
          http://www.sun.com/tech/access/software.guides.html
   
   [SUN-HCI]
          "Towards Accessible Human-Computer Interaction" Eric Bergman, Earl Johnson, Sun Microsytems 1995. A substantial paper, with a valuable print bibliography.
          Available at:
  
          http://www.sun.com/tech/access/updt.HCI.advance.html.
          
   [TRACE-REF]
          "Application Software Design Guidelines" compiled by G. Vanderheiden. A thorough reference work. Available at:
          
          http://trace.wisc.edu/docs/software_guidelines/software.htm
   
   [W3C-RECS]
          "W3C Technical Reports and Publications" The latest versions of W3C Recomendations are available at:
          http://www.w3.org/TR
          

   [WAI-USERAGENT]
          "User Agent Accessibility Guidelines", J. Gunderson and I. Jacobs, eds. These guidelines for designing accessible user agents are available at:
          http://www.w3.org/TR/WAI-USERAGENT
   
   [WAI-WEBCONTENT]
          "Web Content Accessibility Guidelines 1.0", W. Chisholm, G. Vanderheiden, and I. Jacobs, eds. These guidelines for designing accessible documents are
          available at:
          http://www.w3.org/TR/WAI-WEBCONTENT
          
   [WHAT-IS]
          "What is Accessible Software" James W. Thatcher, Ph.D., IBM, 1997. This paper gives a short example-based introduction to the difference between software
          that is accessible, and software that can be used by some assistive technologies. Available at
          
          http://www.austin.ibm.com/sns/software.html.



