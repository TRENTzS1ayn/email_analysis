docno="lists-082-12407737"
received="Mon Feb  8 23:00:07 1999"
isoreceived="19990209040007"
sent="Mon, 8 Feb 1999 21:59:56 -0600"
isosent="19990209035956"
name="schwer@us.ibm.com"
email="schwer@us.ibm.com"
subject="RE: Discussion of DOM with Glen Gorden of Henter-Joyce (A) (A)"
id="85256713.0015F862.00@d54mta08.raleigh.ibm.com"
charset="us-ascii"
inreplyto="Discussion of DOM with Glen Gorden of Henter-Joyce (A) (A)"
expires="-1"

To: Charles Oppermann<chuckop@microsoft.com>
cc:w3c-wai-ua@w3.org





Chuck,

I fail to see why we can't represent a user interface using a DOM by
extending the current user interface. We keep extending the DOM to include
events, range models, iterators, and so on. It is becoming more and more
like an interface that could also be used to represent a GUI. Why not
create a DOM subclass extension for cross platform UIs that addresses the
issues you have wrt word processors and so on.  Incidentally for browser
menus and dialogs, you would need all the word features you suggest.

Rich

Rich Schwerdtfeger
Lead Architect, IBM Special Needs Systems
EMail/web: schwer@us.ibm.com http://www.austin.ibm.com/sns/rich.htm

"Two roads diverged in a wood, and I -
I took the one less traveled by, and that has made all the difference.",
Frost



Charles Oppermann <chuckop@microsoft.com> on 02/08/99 06:08:22 PM

To:   w3c-wai-ua@w3.org
cc:    (bcc: Richard Schwerdtfeger/Austin/IBM)
Subject:  RE: Discussion of DOM with Glen Gorden of Henter-Joyce (A) (A)





<<
I think that DOM holds the same promises. There is one
problem though. MSAA in my opinion is a repair strategy,
where DOM is potentially a real solution. What we need is a
globally standard way to build a DOM. Then from the DOM
we can start rendering for whatever user profile. What we do
not need is visual rendering with the side effect that it gives
you also a DOM-view. The ideal DOM is still far away.
>>

Remember what DOM means - Document Object Model.  It's not an assistive
technology interface, it's not even a user interface object model.  It's an
object model for documents - HTML documents to be specific.

Text object model developers find DOM inadequate to represent higher end
markup and layout.

I caution the group not to put too much stock into DOM.  While I feel it's
very useful to improve access to the web content - that is one small piece
of a users experience with a computer.



