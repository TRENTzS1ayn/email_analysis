docno="lists-082-16168777"
received="Mon Aug 16 17:19:11 1999"
isoreceived="19990816211911"
sent="Mon, 16 Aug 1999 17:19:11 -0400 (EDT)"
isosent="19990816211911"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Techniques: section 3.3 User control of style"
id="Pine.LNX.4.10.9908161646030.1580-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To: WAI UA group<w3c-wai-ua@w3.org>


Further to my action item from the last teleconference...

I have grouped the topics slightly differently, since there are techniques
which are applicable to all timed presentations from a user agent point of
view (the ability to control the rate of the presentation, and select among
multiple tracks), and because visual presentation of captions seems to be
more obviously related to video presentation (although it may also be done
through haptic media such as braille).

Charles McCN

Reference: http://www.w3.org/WAI/UA/WAI-USERAGENT-TECHS/#ua-style

For controlling text and colour:

Implement CSS [CSS1], [CSS2] including the CSS2 cascade order and local
(user) style sheets. this will enable users to control presentation while
allowing authors great flexibility. See also checkpoint 3.3 in WCAG. CSS
should be implemented by user agents which render HTML, XML, SVG, and SMIL
players which render text content directly. CSS includes properties for
audio, braille (fixed and refreshable), screen, and print rendering, and all
relevant properties for supported output media should be implemented.

The CSS specification includes a mechanism for including "presentational"
markup in the cascade order, which should be implemented to allow the correct
functioning of a user stylesheet.

A user stylesheet can be implemented using many kinds of interface, which may
or may not require the user to understand how CSS works. For example, a
simple set of font and colour selections can be used to generate appropriate
CSS. For an example of this, see the style sheets implementation of the W3C
testbed browser/editor Amaya, which provides a GUI-based interface to create
and apply internal style sheets. The same technique could be used to control
a user stylesheet.

For controlling images, applets and animations:

background images can be controlled by the use of local style sheets, and
more effectively if these can be dynamically updated. Animation rate depends
on the players used - where a user agent provides native rendering of
animation (for example a movie player, a driver for animated GIF images, or a
java machine) that player should enable the control of animation rates, or at
least allow the user to stop, and to play frame-by-frame, as well as normal
rendering. In the SMIL-boston working draft there is support for animation. A
SMIL player could provide control of the general timing of a presentation,
combined with the ability to select from available tracks manually. An issue
to bear in mind is that when animation is synchrnised with audio a user may
need the ability to play the animation seperately from the associated audio -
see controlling audio (below).

For controlling time-based presentations (audio, video, slide presentations):

implement user controls to start, atop, rewind and pause presentations, and
wher multiple tracks are supported, to choose which tracks should be
rendered. SMIL provides a number of these features. The implementation should
provide for direct user control, as well as activation of the controls
through a published API, for developers of assistive technologies.

For Controlling audio and speech:

CSS2 audio properties include speech rate, volume, and pitch. These can be
implemented by allowin the user to write and apply a local style sheet, or
can be automatically generated by means of (accessible) user controls, which 
should also be controllable through an API. (CNM- I vaguely recall seeing an
example of this implemented in Java through the Accessibility API. Has anyone
else seen this, or did I make it up?)

For controlling video (including captions):

Implement the CSS positioning and/or SMIL layout languages. Allow the user to
freeze a presentation, manually move and resize component video tracks
(including captions, subtitles and signed translations) and to apply
CSS stylesheets to text-based presentation and SVG.

For controlling user interface:

Allow the user to select large or small buttons and controls (and ensure that
these values are applied consistently across the user interface) (Opera does
this). Allow the user to control features such as menu font sizes, or speech
rates - this may be achieved through use of operating system standards. Allow
the user to regroup buttons and controls, and reorder menus (MS Word does
this). (CMN This is also related to reconfiguring commands, etc.)



