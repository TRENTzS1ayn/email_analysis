docno="lists-082-5946019"
received="Wed Nov 18 14:09:18 1998"
isoreceived="19981118190918"
sent="Wed, 18 Nov 1998 14:10:00 -0500 (EST)"
isosent="19981118191000"
name="Al Gilman"
email="asgilman@access.digex.net"
subject="Re: Table linearization (was: A table navigation technique)"
id="199811181910.OAA04247@access2.digex.net"
charset="US-ASCII"
inreplyto="199811181648.LAA25233&#64;access5.digex.net"
expires="-1"


To:asgilman@access.digex.net(Al Gilman)
Cc:jongund@staff.uiuc.edu,paul.adelson@citicorp.com,w3c-wai-ua@w3.org


> to follow up on what Jon Gunderson said:
> 
> > We have also been lacking any significant discussion of how
> > this may be implemented in browser other than it can be done
> > through third party assistive technology manipulating the DOM.

My last post on this subject started at the horizon and worked back.

Let's start from where we are today.

The most incremental technique I have thought of yet for how
browsers might implement orientation within a table is by adding
information fields into the context menu, making it more of a
"Where am I?" answer as well as "What can I do?"  This would
be useful under conditions of reduced visibility, regardless
of the cause.

As someone else stated well, one must be able to access each cell
by itself.  Somehow.  Making the minimum of assumptions about the
equipment environment as possible.  Once isolated, it needs to be
supported with context, but the context display could be
implemented by an "inspect" mode and not necessarily be part of
the same display supporting the "roam" mode [c.v. VRML, I am not
sure I have the modes named they way they call them.]

Al



