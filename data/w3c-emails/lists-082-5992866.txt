docno="lists-082-5992866"
received="Thu Nov 19 01:10:58 1998"
isoreceived="19981119061058"
sent="Wed, 18 Nov 1998 22:03:06 -0800"
isosent="19981119060306"
name="Charles (Chuck) Oppermann"
email="chuckop@MICROSOFT.com"
subject="RE: today's telecon"
id="BB61526CDE70D2119D0F00805FBECA2F02BB7332@RED-MSG-55"
inreplyto="today's telecon"
expires="-1"


To: WAI UA group<w3c-wai-ua@w3.org>

I'm not certain what you are asking for here.  All this information is
currently exposed and can be used by adaptive aids to understand the
structure of the document.  Screen readers currently use this structure
information to provide navigation and alternative rendering (speech,
Braille) to the user.

Table unrolling means that the browser not use the HTML 4.0 specified means
of visually rendering the table, but to use a simpler means.  Outside the
rendering code, you can use a script to manipulate the objects, but in the
rendering engine the code is much different.

-----Original Message-----
From: Charles McCathieNevile [mailto:charlesn@srl.rmit.EDU.AU]
Sent: Wednesday, November 18, 1998 9:54 PM
To: Charles (Chuck) Oppermann
Cc: WAI UA group
Subject: RE: today's telecon


Good. So here is the sort of low-hanging fruit we are looking for, right?
I suspect (and hope) that it is a fairly trivial extension of the approach
to test for attributes, in the same way as CSS2 requires What I am
thinking is that this approach can be applied to the very simplistic sort
of table navigation (cell by cell or row by row, without context) that I
discussed earlier. It could also solve (for example) the problem of the
PAGL group about skipping over links which are in blocks. 

The nature of the element, and such attributes as TITLE or ALT could be 
used to provide some meaningful feedback about the structure which is 
being walked. It does not solve the problem of where the heck am I - for 
tables you need a special beastie to run the algorithm that is used by 
people looking at a table to provide that information, which is (I think) 
also important to navigating a table.

Then I get into idler speculation - is this a technique for building 
configurable outlines, or does the process go the other way around? And 
so forth.

Charles McCathieNevile

On Wed, 18 Nov 1998, Charles (Chuck) Oppermann wrote:
> Extremely easy to do.  Here's a sample JavaScript to do display the name
of
> the HTML tag for each element:
> 
> for (var i = 0, i < document.all.length, i++)
> alert(document.all.item(i).tagName);
> 
> This is taken from page 169 of the book "Dynamic HTML" by Scott Issacs.
> 
> Charles Oppermann 
> Program Manager, Accessibility and Disabilities Group,
> Microsoft Corporation
> mailto:chuckop@microsoft.com http://microsoft.com/enable/
> "A computer on every desk and in every home, usable by everyone!" 
> 
> 



