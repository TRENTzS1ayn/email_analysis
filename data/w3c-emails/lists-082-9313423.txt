docno="lists-082-9313423"
received="Sun May 30 01:09:10 1999"
isoreceived="19990530050910"
sent="Sun, 30 May 1999 00:45:51 -0400"
isosent="19990530044551"
name="Harvey Bingham"
email="hbingham@acm.org"
subject="Re: RS: Write a proposal for the Techniques Document for   loading an  assistive technology for direct access to the browsers DOM"
id="4.1.19990412150408.0096c4d0@pop.tiac.net"
charset="us-ascii"
inreplyto="85256751.00638AAE.00&#64;d54mta08.raleigh.ibm.com"
expires="-1"





To: WAI UA group<w3c-wai-ua@w3.org>

At 1999-04-12 01:04 PM, Rich Schwerdtfeger wrote:
>
>
>
>Attached is a copy of the WAI User Agent techniques document with the
>subject proposal as section 6.1.
>
>Rich
>
>
>(See attached file: wai-useragent-tech.html)
>
---- from attached file ----
>Access to application specific data across process boundaries can be costly 
>in terms of performance. Also, access to the DOM through a specified 
>accessibility API inhibits the ability for assistive technologies to access 
>object model data not yet provided in that API. Therefore, user agents should 
>provide a mechanism to load an assistive technology (AT) into the process 
>space of the application, as a separate thread, with direct access to the 
>DOM. 

Suspicious but unknowing: Isn't this a way for a Trojan horse to get into 
the user agent? Does ..., as a separate thread, ... give enough protection? 
I worry that a user agent needs to give arbitrary AT (unknown in advance)
access to the UA innards.

>A technique for accomplishing this would be to store a reference to an 
>assistive technology in a system registry file or properties file in the case 
>of Java. Registry files are common among many operating system platforms

So who controls what can get into the Registry? It is my understanding that
a principal cause of Windows crashing is lack of control over what gets into
the registry, and who can break common information in it to change values
to whatever they desire, breaking what other programs need.

>In Java 2, the existence of an accessibility.properties causes the system 
>event queue to check the file for assistive technologies required for loading. 
>If the file contains a property called assistive_technologes, it will load 
>all registered assistive technologies and start them on there own thread in 
>the Java Virtual Machine which is a single process. An example entry for 
>Java is as follows:

I'm dense here:    an  accessibility.properties  
(is there such? is it a collection?)

typo: ...called assistive_technolog_i_es, ...

>Once the assistive technology is determined from the registry, any user agent 
>on the given operating system can now determine if an assistive technology 
>needs to be loaded with their application and load it.

Does this preclude more than one AT to be available? Are there times where
more than one are required: such as both braille and speech output?, or
voice command and special keyboard?

>Rich Schwerdtfeger
>Lead Architect, IBM Special Needs Systems
>EMail/web: schwer@us.ibm.com http://www.austin.ibm.com/sns/rich.htm
>
>"Two roads diverged in a wood, and I -
>I took the one less traveled by, and that has made all the difference.",
>Frost
>
What a joy to find that saying on a rock in the woods on a farm that Frost
once had [Now a Vermont state park, I believe], and having the choice he 
probably had in mind.

Regards/Harvey Bingham



