docno="lists-082-9430318"
received="Wed Jun  2 17:38:07 1999"
isoreceived="19990602213807"
sent="Wed, 2 Jun 1999 16:39:02 -0500"
isosent="19990602213902"
name="mark novak"
email="menovak@facstaff.wisc.edu"
subject="Re: TECHNIQUE: 7.2.1"
id="v01540b1fb37b517f3e26@[128.104.23.196]"
charset="us-ascii"
inreplyto="TECHNIQUE: 7.2.1"
expires="-1"


To: Jon Gunderson<jongund@staff.uiuc.edu>
Cc:w3c-wai-ua@w3.org

>Checkpoint 7.2.1
>Provide programatic access for dependent user agents to the user interface by
>using operating system and development language accessibility resources and
>conventions.
>
>Technique
>
>Most of the current assistive technology available to improve the access to
>computer based technologies for people with disabilities is designed to
>provide
>access to non-specific software applications with in an operating system.
>User
>agents rendering WWW content is just one type of application the assistive
>technology is providing access.  For software applications to be compatible
>with these types of assistive technologies they need to follow standard
>operating system conventions for accessibility and in the case of some
>types of
>operating systems use accessibility APIs to provide additional information to
>assistive technologies.  Operating systems with accessibility APIs include
>this
>functionality in standard controls and display rendering APIs.  User agents
>which use standard controls and rendering APIs will have a basic level of
>compatibility with existing assistive technologies.  The complexity of visual
>rendering of WWW content though often requires additional information about
>the
>content rendered which means making more information about the content
>available through the accessibility API.
>
>Current operating system accessible design guidelines:
>1.      Microsoft Windows (http://www.microsoft.com/enable/dev/)
>2.      Java (http://www.sun.com/access/ and
>http://www.austin.ibm.com/sns/snsjavag.htm)
>3.      Apple Macintosh (http://www.apple.com/education/k12/disability/)
>
>Current accessibility application programming interfaces:
>1. Active Accessibility  (http://www.microsoft.com/enable/msaa/)
>2. Java accessibility API (provide URL later)
>3. Java Swing Classes (provide URL later)

if this helps. from a previous post back in March


Windows applications
 http://www.microsoft.com/enable/dev/apps.htm

Microsoft includes things like a "Checklist of Accessibility Design
Guidelines" at this web site.  The checklist includes topics like providing
keyboard
access to all features, exposing keyboard focus within a control, and to
avoid conveying
important information by color alone.

- Macintosh applications
http://developer.apple.com/techpubs/mac/HIGuidelines/HIGuidelines-2.html

Apple includes information on topics like responses to user input via the
keyboard and mouse, clear and consistent use of language, and designing for an
international market.

- UNIX/ X Window System
http://www.opengroup.org/publications/catalog/mo.htm

The Open Group has various guides which explain the Motif and Common Desktop
Environment (CDE) with topics like how users interact with Motif/CDE
applications and how to customize these environments.



