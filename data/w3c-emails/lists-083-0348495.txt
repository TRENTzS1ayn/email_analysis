docno="lists-083-0348495"
received="Wed Aug 25 07:16:08 1999"
isoreceived="19990825111608"
sent="Wed, 25 Aug 1999 06:16:06 -0500 (CDT)"
isosent="19990825111606"
name="jon gunderson"
email="jongund@ux1.cso.uiuc.edu"
subject="Preliminary evaluation of checkpoints for IE windows version"
id="Pine.GSO.4.10.9908250612140.17333-100000@staff2.cso.uiuc.edu"
charset="US-ASCII"
expires="-1"

To:w3c-wai-ua@w3.org


The following are my preliminary comments on IE using the current
checkpoints.  In general it seemed like the guidelines fit.  I have some
additional comments about the guidelines in a following e-mail.

Test checkpoints for IE 5.0 on Windows 95/98
1.1 Ensure that all functionalities offered through the user interface may
be operated through standard input device APIs supported by the operating
system. [Priority 1] 
In general IE has very good keyboard and mouse support for current
functionality.  The notable keyboard deficiency is for selecting text with
the keyboard.

1.2 Ensure that the user can interact with all active elements of a
document in a device independent manner. [Priority 1] 
Provides keyboard and mouse support for access to active elements like
links and form controls.  Also supports access key.  One weak area is
support for pointer based scripting events defined by the authors of the
script.  In this case there is no way for the user to identify the
availability of a pointer based scripting event or to simulate the event
with the keyboard.

1.3 Ensure that the user can install the user agent software in a device
independent manner. [Priority 1] 
**** Will try this week

1.4 Ensure that the user can configure the user agent in a device
independent manner. [Priority 1] 
Yes

1.5 Ensure that the user can access user agent documentation in a device
independent manner. [Priority 1] 
Mostly yes, but there is no apparent way way to move the focus from the
content/index/search pane of the dialog box to the help explanation.  Not
sure how a screen reader user or somebody who could not use a mouse would
scroll through the help information

1.6 Ensure that all messages to the user (e.g., warnings, errors, etc.)
are available through standard output device APIs supported by the
operating system. [Priority 1] 
Yes, supports active accessibility for rendering OS information

2.1 By default and without additional customization, ensure that all
functionalities offered by the user agent are accessible using the
keyboard. [Priority 1] 
See comments for 1.1

2.2 Provide documentation on default keyboard commands and include with
user agent documentation and/or user help system. [Priority 1] 
Yes

2.3 Provide information to the user about the current keyboard
configuration. [Priority 1] 
Yes, since the keyboard short cuts currently cannot be modified in IE

2.4 Allow the user to configure the keystrokes used to activate user agent
functionalities. Wherever possible, allow single key activation of
functions. [Priority 2] 
No, the Windows OS through can change the layout of the keyboard and IE
will use that layout

2.5 Allow the user to turn on and off author-specified keyboard
configurations. [Priority 2] 
No

2.6 Use platform conventions to indicate which keys activate which user
agent functionalities. [Priority 2] 
Yes

2.7 Avoid default keyboard configurations that interfere with system
conventions. [Priority 2] 
Yes

2.8 Provide a default keyboard configuration for frequently performed
operations. [Priority 3] 
Yes

3.1 Ensure that all product documentation conforms to the Web Content
Accessibility Guidelines. [Priority 1] 
Yes, provides hierarchical access to help information.  It is mostly text
based information.  Provides dcoumentation in alternative formats.

3.2 Ensure that all user agent functionalities that promote accessibility
are documented. [Priority 1] 
Yes, very well documented

3.3 Describe product features known to promote accessibility in a section
of the product documentation. [Priority 2] 
Yes, search hits on many disability key words in help files

4.1 Allow the user to configure the user agent in named profiles that may
be shared (by other users or software). [Priority 2] 
No

4.2 Allow the user to configure the graphical arrangement of user
interface controls. [Priority 3] 
No

5.1 Allow the user to turn on and off rendering of images. [Priority 1] 
Yes

5.2 Allow the user to turn on and off rendering of background images.
[Priority 1] 
Yes

5.3 Allow the user to turn on and off rendering of video. [Priority 1] 
Yes

5.4 Allow the user to turn on and off rendering of sound. [Priority 1] 
Yes

5.5 Allow the user to turn on and off rendering of captions. [Priority 1] 
Does not apply since IE plays video through hel other programs or plug-ins

5.6 Allow the user to turn on and off animated or blinking text. [Priority
1] 
Allows the user to turn off scripts
Has a control for turning of the rendering of animations

5.7 Allow the user to turn on and off animations and blinking images.
[Priority 1] 
Allows the user to turn off scripts
Has a control for turning of the rendering of animations

5.8 Allow the user to turn on and off support for scripts and applets.
[Priority 1] 
yes

5.9 Allow the user to turn on and off support for user style sheets.
[Priority 1] 
No

5.10 Allow the user to turn on and off support for author style sheets.
[Priority 1] 
No, allows the user to specify their style sheet, but author style sheets
cannot be totally disabled.  Only color, font size, font face.

5.11 Allow the user to turn on and off support for spawned windows.
[Priority 1] 
No

5.12 Allow the user to turn on and off rendering of frames. [Priority 2] 
No

5.13 Allow the user to turn on and off author-specified page forwards that
occur after a time delay and without user intervention. [Priority 3] 
No

5.14 Allow the user to turn on and off automatic page refresh. [Priority
3] 
No

6.1 Allow the user to control font family. [Priority 1] 
Yes

6.2 Allow the user to control font size. [Priority 1] 
Yes

6.3 Allow the user to control foreground color. [Priority 1] 
Yes

6.4 Allow the user to control background color. [Priority 1] 
Yes

6.5 Allow the user to control selection highlighting (e.g., foreground and
background color). [Priority 1] 
No

6.6 Allow the user to control focus highlighting (e.g., foreground and
background color). [Priority 1] 
Yes, through OS display conventions

6.7 Allow the user to control animation rate. [Priority 2] 
No

6.8 Allow the user to control video frame rates. [Priority 1] 
N/A

6.9 Allow the user to control the position of captions. [Priority 1] 
N/A

6.10 Allow the user to start, stop, pause, and rewind video. [Priority 2] 
N/A

6.11 Allow the user to control audio playback rate. [Priority 1] 
N/A

6.12 Allow the user to control audio volume. [Priority 2] 
N/A

6.13 Allow the user to start, stop, pause, and rewind audio. [Priority 2] 
N/A

6.14 Allow the user to control speech playback rate. [Priority 1] 
N/A

6.15 Allow the user to control speech volume, pitch, gender and other
articulation characteristics. [Priority 2] 
N/A

6.16 When new windows or user interface components are spawned, allow the
user to control window size and position. [Priority 2] 
Yes

7.1 Ensure that the user has access to document content, including
alternative representations of content. [Priority 1] 
Yes, DOM and Active Accessibility

7.2 For dependent user agents. Ensure that the user has access to the
content of an element selected by the user. [Priority 1] 
N/A

7.3 For dependent user agents. Render content according to natural
language identification. For unsupported natural languages, notify the
user of language changes when configured to do so. [Priority 1] 
N/A

7.4 When no alternative text representation has been specified, indicate
what type of object is present. [Priority 2] 
I think yes, but need to check some types

7.5 When alternative text has been specified explicitly as empty (i.e., an
empty string), render nothing. [Priority 3] 
Not sure, need to test

7.6 If a technology allows for more than one caption or description track
(e.g., caption, auditory description, video of sign language, etc.), allow
the user to choose from among the tracks. [Priority 1] 
N/A

7.7 Allow the user to specify that description tracks (e.g., caption,
auditory description, video of sign language, etc.) be rendered at the
same time as audio and video tracks. [Priority 1] 
N/A

7.8 If a technology allows for more than one audio track, allow the user
to choose from among tracks. [Priority 1] 
N/A

7.9 Provide a mechanism (e.g., through style sheets) to distinguish
visited links from unvisited links. [Priority 3] 
Yes

7.10 Allow the user to specify (e.g., through style sheets) that images
used in links must have borders. [Priority 3] 
Yes

8.1 Allow the user to navigate views (notably those with frame viewports).
[Priority 1] 
Yes

8.2 Keep track of the user's point of regard in each view and restore it
when the user returns to the view. 
Yes when you move between documents, but not when you use targets within a
documents

8.3 For dependent user agents. Allow the user to navigate among table
cells of a table (notably left and right within a row and up and down
within a column). [Priority 1] 
N/A

8.4 Allow the user to navigate among all active elements in the document.
[Priority 2] 
Yes, but not scripting events

8.5 Allow the user to search for rendered text content, including
alternative text content. [Priority 2] 
Yes, not sure about alternative text

8.6 Allow the user to navigate the document structure. [Priority 2] 
no

8.7 Allow the user to configure structured navigation. [Priority 3] 
no

9.1 Provide a mechanism for highlighting and identifying (through a
standard interface where available) the current view, selection, and
focus. [Priority 1] 
yes, active accessibility, focus indicators on controls

9.2 For dependent user agents. Provide the user with information about the
number of viewports. [Priority 2] 
N/A

9.3 For dependent user agents. Allow the user to view a document outline
constructed from its structural elements (e.g., from header and list
elements). [Priority 2] 
N/A

9.4 Make available information about an element's context within a
document (e.g., numerical or relative position). [Priority 2] 
yes, right click of mouse for some types of elements or through DOM API

9.5 Make available whether following a link will involve a fee. [Priority
2] 
no

9.6 Make available information about a link that will enable the user to
decide whether to follow the link. [Priority 3] 
not sure

9.7 For dependent user agents. Provide access to header information for a
selected table cell. [Priority 1] 
N/A

9.8 Make available the dimensions of a selected table. [Priority 3] 
Yes, though DOM API and active accessibility

9.9 Provide the user with access to any label explicitly associated with a
form control. [Priority 2] 
Yes, though DOM API 


9.10 Maintain consistent user agent behavior and default configurations
between software releases. Consistency is less important than
accessibility and adoption of system conventions. [Priority 3] 
yes

10.1 Provide information about document and view changes (to the user and
through programming interfaces). [Priority 1] 
yes, active accessibility and DOM API

10.2 Ensure that when the selection or focus changes, it is in the
viewport after the change. [Priority 2] 
yes

10.3 Allow the user to configure the user agent for notification of
certain types of document changes only. [Priority 3] 
no

10.4 When loading a document, make available what portion of the document
has loaded, whether loading has stalled, and when the user may begin to
browse. [Priority 3] 
yes, status bar has a graphical bar indicating the amount of document
loaded, but is not device indepdent (text)

10.5 Make available what portion of the document the user has viewed.
[Priority 3] 
yes, through scoll bars

10.6 Allow the user to request to be prompted before a form is submitted.
[Priority 3] 
no, only prompts when there is not a secure connection

11.1 Implement the accessibility features defined for supported
technologies. [Priority 1] 
Supports many of the accessibility features of HTML, weak on CSS1 and CSS2

11.2 Support appropriate W3C Recommendations. [Priority 2] 
Supports many of the accessibility features of HTML, weak on CSS1 and CSS2

12.1 Use and provide accessible interfaces to other technologies.
[Priority 1] 
Supports accessibility features of Windows and uses active accessibility

12.2 Provide programmatic read and write access to user agent
functionalities and user interface controls (including selection and
focus) by using operating system and development language accessibility
resources and conventions. [Priority 1] 
yes DOM API

12.3 Notify dependent user agents of changes to the document and user
interface controls (including selection and focus) by using operating
system and development language accessibility resources and conventions.
[Priority 1] 
yes, DOM API and active accessibility

12.4 For graphical desktop browsers. Comply with W3C Document Object Model
specifications and export interfaces defined by those specifications.
[Priority 1] 
no, does not fully comply with DOM specification

12.5 For graphical desktop browsers. Provide programmatic exchange of
information in a timely manner. [Priority 2] 
no, currently does not provide timely access to AT to the DOM

12.6 Follow operating system conventions and accessibility settings. In
particular, follow conventions for user interface design, default keyboard
configuration, product installation, and documentation. [Priority 2] 
yes

End of message
Jon Gunderson



