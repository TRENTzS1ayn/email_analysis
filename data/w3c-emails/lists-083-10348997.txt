docno="lists-083-10348997"
received="Wed Apr 12 16:49:23 2000"
isoreceived="20000412204923"
sent="Wed, 12 Apr 2000 15:49:14 -0500"
isosent="20000412204914"
name="Jon Gunderson"
email="jongund@ux1.cso.uiuc.edu"
subject="Minimum requirements for conforming to guideline 5"
id="4.1.20000412154826.00a01740@staff.uiuc.edu"
charset="iso-8859-1"
expires="-1"


To:w3c-wai-ua@w3.org

Additional minimum requirements for Guidelines 5

Guideline 5. Observe system conventions and standard interfaces.

5.1 Provide programmatic read access to HTML and XML content by conforming
to the W3C Document Object Model  (DOM) Level 2 Core and HTML modules and
exporting the interfaces they define. [Priority 1] 

Minimum functionality required is self-explanatory.  Exporting the
interface should use platform conventions (i.e. COM for windows, Remote
procedure calls in UNIX,? )

==========================================================

5.2 If the user can modify HTML and XML content through the user interface,
provide the same functionality programmatically by conforming to the W3C
Document Object Model (DOM) Level 2 Core and HTML modules and exporting the
interfaces they define. [Priority 1] 

If the user can only interact with HTML form controls then the requirement
is to allow assistive technology to change the VALUE attribute of an INPUT
element or the content of a TEXTAREA element.

==========================================================

5.3 For markup languages other than HTML and XML, provide programmatic
access to content using standard APIs (e.g., platform-independent APIs and
standard APIs for the operating system). [Priority 1] 

See operating system accessibility API information for requirements.  If
not accessibility API is available assistive technologies will need to rely
on support from standard input and output APIs.

==========================================================

5.4 Provide programmatic access to Cascading Style Sheets (CSS) by
conforming to the W3C Document Object Model (DOM) Level 2 CSS module and
exporting the interfaces it defines. [Priority 3] 

Minimum functionality required is self-explanatory.  Exporting the
interface should use platform conventions (i.e. COM for windows, Remote
procedure calls in UNIX,? )

==========================================================

5.5 Provide programmatic read and write access to user agent user interface
controls using standard APIs (e.g., platform-independent APIs such as the
W3C DOM, standard APIs for the operating system, and conventions for
programming languages, plug-ins, virtual machine environments, etc.)
[Priority 1] 

See operating system accessibility API information for requirements.  If
accessibility API is not available assistive technologies will need to rely
on support from standard input and output APIs.

==========================================================

5.6 Implement selection, content focus, and user interface focus
mechanisms. [Priority 1] 

See operating system and accessibility APIs for selecting an object and
giving an object focus.  If accessibility API is not available assistive
technologies will need to rely on support from standard APIs for indicating
focus and selection.

==========================================================

5.7 Provide programmatic notification of changes to content and user
interface controls (including selection, content focus, and user interface
focus). [Priority 1] 

See operating system accessibility API information for requirements and
support DOM level 2 event notification APIs.  If accessibility API is not
available assistive technologies will need to rely on support from standard
input and output APIs.

==========================================================

5.8 Ensure that programmatic exchanges proceed in a timely manner.
[Priority 2] 

See techniques document for relevant techniques.

==========================================================

5.9 Follow operating system conventions and accessibility settings. In
particular, follow conventions for user interface design, default keyboard
configuration, product installation, and documentation. [Priority 2] 

If the operating system allows for configuration of some or all of the
style information specified in guideline 4 the user agent should inherit
the information for its default style sheet.  The user agent should also be
compatible with other accessibility features like sticky keys, mouse keys,
filter keys, serial keys and any other accessibility feature supported by
the operating system.  See operating system documentation for specific
information on a particular operating system.

==========================================================
Jon Gunderson, Ph.D., ATP
Coordinator of Assistive Communication and Information Technology
Chair, W3C WAI User Agent Working Group
Division of Rehabilitation - Education Services
College of Applied Life Studies
University of Illinois at Urbana/Champaign
1207 S. Oak Street, Champaign, IL  61820

Voice: (217) 244-5870
Fax: (217) 333-0248

E-mail: jongund@uiuc.edu

WWW: http://www.staff.uiuc.edu/~jongund
WWW: http://www.w3.org/wai/ua



