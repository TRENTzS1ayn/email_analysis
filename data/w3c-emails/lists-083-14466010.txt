docno="lists-083-14466010"
received="Fri Jun  9 14:55:08 2000"
isoreceived="20000609185508"
sent="Fri, 09 Jun 2000 13:56:30 -0500"
isosent="20000609185630"
name="Kitch Barnicle"
email="barnicle@trace.wisc.edu"
subject="minimum requirements for 10.5 - draft"
id="4.2.2.20000609134957.00baf980@trace.wisc.edu"
charset="us-ascii"
expires="-1"


To:w3c-wai-ua@w3.org

Hi Everyone,

This message is in response to my action item to propose a minimum 
requirement for checkpoint 10.5. I'm sorry about the long winded way I get 
there, but I tried to list all of the related issues that I could think 
of  so that we'd have some background for our final decision.  Of course, 
in some places I have had to make certain assumptions since, at the moment, 
I don't know of any usability data to back up my observations.


Checkpoint 10.5 from May 7: Allow the user to configure the user agent so 
that the user's preferred one-step operations may be activated with a 
single input command (e.g., key stroke, voice command, etc.). [Priority 2]

Note: User agents are not required to provide single command activation of 
all user agent functionalities at once, only some of them. Furthermore, in 
some modes of interaction (e.g., when the user is entering text), the 
number of single commands available will be significantly reduced. This 
checkpoint is an important special case of checkpoint 10.4.

Background - assumptions - issues

1. Keyboard access to browsers is essential for keyboard users, including 
users of screen readers, magnifiers and voice browsers as well as users 
with mobility impairments who are unable to use a pointing device.

2. Keystroke commands, beyond simple navigation, can improve a keyboard 
user's browsing efficiency.

3. Single keystroke commands are particularly useful for individuals with 
mobility impairments who cannot, or cannot without great difficulty, 
activate two keys at the same time. (single finger typers, head stick 
users, individuals with low range of motion etc)

4. While sticky keys would allow a single finger typer to use combination 
keystrokes sequentially, rather than simultaneously, it would require the 
use of more keystrokes, and as a result delay task completion.

5. There are certain things to keep in mind when deciding which operations 
should be single key actions and which keystrokes should be user configurable.

6. Single stroke commands should, at a  minimum, be assigned to those 
commands that are used most frequently.

7. Single stroke commands should also be assigned to actions that would 
otherwise require several keystrokes.  For example, let's say there is a 
single keystroke command that moved the focus up, say 10 links, or to the 
first link on the next screen's worth of  text, or as our guidelines 
recommend to the next structural element. Such a command could, in theory, 
greatly improve a user's efficiently.

8. I  suspect that in the case of browsers, navigation commands are used 
most often, followed by document management commands such as bookmarking, 
cutting and pasting, and saving, followed by configuration commands such as 
changing colors, setting the default home page etc.

9. It was also brought to my attention that it may not only be important to 
allow the user to configure shortcuts for frequently used commands. A user 
may need to configure shortcuts in a browser for commands that are 
particularly difficult to use, for whatever reason, but which may not be 
used frequently.

10. As David pointed out on our last call, each user may have a different 
set of "favorite" commands, although I suspect there is a common subset of 
"favorite" commands that many users share.

11. The number of operations that can be assigned to a single keystroke 
command is limited, as far as I know, by

a) the number of keys on the keyboard,
b) the need to avoid conflicting with operating system commands
c) the need to avoid conflicts with other browser operations, such form 
controls and accesskeys
d) the need to keep the interface simple, for example a user could get 
confused if he thinks he is in text entry mode and the browser seems to be 
doing strange things
e) the need to prevent the user from making mistakes - If there are a lot 
of single keystroke commands that use alphanumeric keys, users may end up 
accidently issuing commands.
f) the need to avoid conflicts with other applications, including assistive 
technology - Of course, making the keystroke commands configurable may help 
user avoid conflicts with AT.

12.Other implementation issues

a) choosing logical keys for single stroke operations
b) helping the user learn about the availability of default single 
keystroke commands
c) in the case of alphanumeric keys, letting the user know which mode he is 
in, if modal
e) what happens when you have a media player embedded in a web page, could 
the browser and media player have conflicting keystroke commands

13. Configuration issues

a) helping the user assign appropriate keystroke commands,
b) providing technical support for those configurable short cuts - How do 
you help the users who says "I hit  "Z" and nothing happened," when your 
browser doesn't have a "Z" command
c) some of the same functionality can be provided by programmable keyboards.
d) letting the user know the current keyboard configuration
e) saving configuration settings
f) letting users restore defaults.


14. After thinking about all these things,  I proposed that we require  a 
minimum set of single stroke commands but that we also include in the 
techniques other commands that may be useful as single stroke commands. I 
am not convinced that this is the best list but I figure that it is time to 
send it out for your input.  I know that I haven't fully addressed the 
issue of user configurability but I need a bit more time to phrase my 
recommendation for that. I will try to propose something ASAP.

I propose the following minimum set of commands be accessible with a single 
keystroke or that the user be able to configure those as single stroke 
commands those items on this list.

1. next link
2. previous link
3. next structural element(s) - (each structural element gets its own 
keystroke??)
4. back
5. forward
6. refresh
7. page up
8. page down
9. line up (arrows)
10 line down (arrows)
11. next active element

Other useful commands that may be candidates for single stroke assignment

12. stop loading
13. to address bar / open location
  14. next viewports
15. load/unload graphics
16. increase font size
17. decrease font size
18. page search
19. add to bookmark
20. go to bookmark list
21. go to history list
22. navigate among all Elements
23. turn on/off colors/style/sheets
24. help - for conventions sake, I think this should stay at F1


Another questions is whether we need a different set of single keystroke 
commands for media players?
(e.g. stop, start, pause, volume)


Additional Materials

With the help of a student, I gathered a list of the single keystroke 
commands available in Internet Explorer 5.0, Opera 4.5 and Netscape 4.5.



Kitch 



text/html attachment: single_key.htm




