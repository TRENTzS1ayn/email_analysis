docno="lists-083-15087879"
received="Fri Jun 16 16:27:21 2000"
isoreceived="20000616202721"
sent="Fri, 16 Jun 2000 16:14:45 -0400"
isosent="20000616201445"
name="Gregory J. Rosmaita"
email="unagi69@concentric.net"
subject="Re: Raw minutes of 15 June UA Guidelines"
id="4.3.1.2.20000616155913.00d3d9e0@127.0.0.1"
charset="us-ascii"
inreplyto="4.3.1.2.20000616084709.00bfd840&#64;staff.uiuc.edu"
expires="-1"


To: Jon Gunderson<jongund@uiuc.edu>
Cc: User Agent Guidelines Emailing List<w3c-wai-ua@w3.org>

aloha, jon!

you wrote:

quote
On control over speech rate and other characteristics all of our 
implementation experience is based not on CSS principles, but on 
enumeration of the ranges of speech technologies and providing controls 
that reflect the enumerated values.  I think this approach should be the 
first priority, since we can show that it can be implemented.  The 
secondary consideration if information can not be enumerated.
unquote

they should be considered in tandem, not ranked or prioritized...  the 
@media aural rules of CSS2 define base functionality for controlling and 
configuring a speech engine/self-voicing UA, and much of what is outlined 
in chapter 19 of the CSS2 recommendation (save for most of the positioning 
and spatial effects rules) is also applicable to conventional speech engines...

plus, the fact that emacspeak (which not only runs on a host of hardware 
synthizers, but which now provides software speech) supports the aural 
properties of CSS, provides us with an excellent implementation example...

the bottom line is that screen readers and self-voicing browsers also need 
to be CSS aware, so that they can recognize and apply @media aural rules, 
in order that an individual users can use a client side stylesheet that 
uses @media aural rules which could be applied to any web page that 
individual loads....

so, i don't think we should prioritize speech characteristics -- the 
differentiation between a CSS aware speech engine and a robust screen 
reader is a false dichotomy which the UAAG should not perpetuate

i also still think, as i have stated on list, during telecons, and at the 
princeton face2face, that the priority of UAAG 5.7

quote
    5.7 Provide programmatic access to Cascading Style Sheets (CSS) by
           conforming to the W3C Document Object Model (DOM) Level 2 CSS
           module and exporting the interfaces it defines. [Priority 3]

           Note: This module is defined in DOM Level 2 [DOM2], chapter 5.
           Please refer to that specification for information about which
           versions of CSS are supported. This checkpoint is an important
           special case of checkpoint 2.1.
unquote

should at least be a 2, although there is a convincing argument that it 
should be a P1, especially if it is the only means through which users will 
have recourse to CSS-generated text, without resorting to an Off Screen 
Model mode, in order to read what was actually rendered by the browser

gregory



