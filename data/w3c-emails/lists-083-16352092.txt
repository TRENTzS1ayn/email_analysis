docno="lists-083-16352092"
received="Fri Jan 14 08:36:29 2000"
isoreceived="20000114133629"
sent="Fri, 14 Jan 2000 08:38:38 -0500"
isosent="20000114133838"
name="Denis Anson"
email="danson@miseri.edu"
subject="FW: User Agent Guidelines"
id="GEEALOAPINMEBKLJPLPJIEMECAAA.danson@miseri.edu"
charset="iso-8859-1"
inreplyto="User Agent Guidelines"
expires="-1"

To:"WAI UA Group"<w3c-wai-ua@w3.org>




-----Original Message-----
From: Alan Cantor [mailto:acantor@interlog.com]
Sent: Thursday, January 13, 2000 4:13 PM
To: Denis Anson
Subject: RE: User Agent Guidelines


We are going over the open issues for the user agent guidelines, and
have
come to your request that graphical arrangement of controls be raised
to
priority 2.

We would like some more information as to which kinds of controls you
particularly would want to have configurable.  Do you think that this
should
apply to toolbars, toolbar items, menus and menu items, or all?  Are
there
some factors that are more important than others?  There is some
resistance
to making as much configurability as you have in Word.

Please send your response to the UA list at w3c-wai-ua@w3.org

Denis,

Please pass on my comments, or portions thereof,  to whoever might be
interested.

I can understand the resistance people sometimes voice about the
hyper-customization of software. Allowing "too many" degrees of
freedom cuts against the grain of dominant monopolistic-capitalistic
ideologies of standardization and homogenization. Customization has
vague associations with chaos and anarchy. It is hard to control. It
challenges the profit motive. It even challenges the authority of the
experts who design and produce these systems and tools.

Here's my take: There are many ways to craft a "look and feel."
Windows is but one possibility. And it's not a particularly good one
for people with sensory, mobility, learning and cognitive
disabilities. In my CSUN 1998 and WWW8 papers, I argued that the
Windows interface is problematic for keyboard-only access because
although the interface is basically accessible, it is not especially
usable: Once mastered, the interface boosts productivity; but on other
measures of usability, the design fails: it is hard to learn and
remember, produces unnecessary errors, and does not promote user
satisfaction. I know many "general users" who claim to "like" Windows.
Compared to what was available before (command.com), Windows does
represent a significant improvement. I argue, however, that users
WITHOUT disabilities are not particularly well-served by the Windows
model. If exposed to better interfaces, they would quickly realize
that there are much better ways to design a computer environment. The
"oohs" and "aahs" that I hear from audiences when I demonstrate my
homemade accessibility aids (which are really usability enhancements)
is evidence (to my mind anyways) that they recognize that THERE are
better ways to make a human-computer interface.

I give a lot of credit to the people at Microsoft for the progress
they have made in making Windows a more accessible system. The problem
is that they are forced to make end-runs around an interface that was
not designed to be accessible. And this, then, is the crux of the
problem: When I deal with Windows applications, I need every tool at
my disposal to improve access for the people with disabilities who I
work with. I don't believe that just because it is POSSIBLE to
accomplish a task using standard techniques, that we should settle for
these "solutions." It does not make sense for someone with an
upper-body mobility impairment to press 25 or 30 or 50 keystrokes to
perform a task that could be done with one or two keystrokes. Yet this
is exactly what happens. People I work with are being forced to work
in inefficient, awkward, and injurious ways because some software
designer did not consider the possibility that someone can't use a
mouse, is blind, is distracted by a mess of toolbars, is over 40 years
old and cannot decipher the spidery hardcoded text ... and on and on.

Until we have an interface that works better than the current crop of
Windows UIs, we need as much customization as possible: menus,
toolbars, icons, colours, EVERYTHING. In fact, to solve certain access
problems, I wish I could customize MORE than is possible now. The
chaos and anarchy of customization -- the lack of standards and the
refusal to accept homogeneity -- is a price we all pay for the
privilege of having standardized on an operating environment that was
never intended to be accessible to people with disabilities. To reduce
customization requirements is tantamount to a guarantee that people
with disabilities don't count and don't matter.

Alan

Alan Cantor
Cantor + Associates
Workplace Accommodation Consultants
acantor@interlog.com
www.interlog.com/~acantor



