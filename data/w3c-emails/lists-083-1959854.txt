docno="lists-083-1959854"
received="Fri Sep  3 15:41:47 1999"
isoreceived="19990903194147"
sent="Fri, 03 Sep 1999 15:49:02 -0400"
isosent="19990903194902"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="OnMouseOver and latent information hiding in scripts"
id="199909031943.PAA10823@smtp2.mail.iamworld.net"
charset="us-ascii"
inreplyto="C35556591D34D111BB5600805F1961B90C311A17&#64;RED-MSG-47"
expires="-1"


To: User Agent Guidelines Emailing List<w3c-wai-ua@w3.org>

At 10:28 AM 9/3/99 -0700, Chris Wilson wrote:
>My question was in the context of providing access for accessibility tools.
>For mechanisms like the CSS :hover pseudoclass, and onmouseover/onmouseout
>events in the object model, I don't see a clear solution for providing these
>mechanisms.  The OM is particularly difficult, because I've seen lots of
>pages developed that use onmouseover to switch the visible content of
>another area (a clickless frame-selection, sort of).  Horrendously bad
>content-design decision for accessibility, perhaps, but I'd been pondering
>whether there was some way we could expose that capability to ATs.

Frames is a good metaphor.  

Take for example the New Yorker readerlink page
<http://www.newyorkerreaderlink.com/index2.html>.  

Here there is a set of blurbs which occupy the central display space
depending on which subtitle arrayed around the main title one has the mouse
over.

Clearly this linearizes to a hierarchical tree structure with a major head,
a list of subhead, blurb modules, and then on to the rest of the page.  But
the bodies of the subsections are buried in the scripts.  This is where the
polyglot page-definition medium really bites us.

The key is that there is a simple information structure, but it takes
coordinated changes in display and behavior to map it into the audio
environment in a constructive fashion.

Without scavenging HTML-equivalent content out of the scripts and just
managing how they are run, one can still make this structure accessible by
making the subtitles readable and attaching to each subtitile a
"doOnMouseOver response" action opportunity and trap the mutation event
when the page content is changed by running the script.  Then the user
would automatically or on election hear what had changed on the page.  This
would provide a usable if not optimal way to navigate the information
contained in the HTML and script, both.

Al
>
>-----Original Message-----
>From: Gregory J. Rosmaita [mailto:unagi69@concentric.net]
>Sent: Friday, September 03, 1999 10:09 AM
>To: Chris Wilson
>Cc: User Agent Guidelines Emailing List
>Subject: RE: test suites
>
>
>aloha, chris!
>
>is it really necessary to simulate a mouse-over event in the case of
>exposing
>the TITLE attribute when used, for example, as an attribute in the
>definition
>of a horizontal rule?  wouldn't it be simpler to offer the user a choice --
>i.e. a "Display Horizontal Rules" and "Display Title (where present)"
>setting
>for horizontal rules?  
>
>and, while i suppose that this may be a suggestion more appropriately
>addressed
>to AT developers, who could substitute the content of the TITLE attribute
>for a
>horizontal rule --  provided, of course, that the AT is capable of making a
>DOM
>call to obtain the necessary information...
>
>which mousover events in particular are you attempting to make available to
>the
>mouseless user?  knowing that would greatly assist us in assisting you...
>
>gregory.
>--------------------------------------------------------
>He that lives on Hope, dies farting
>     -- Benjamin Franklin, Poor Richard's Almanack, 1763
>--------------------------------------------------------
>Gregory J. Rosmaita <unagi69@concentric.net>
>   President, WebMaster, & Minister of Propaganda, 
>        VICUG NYC <http://www.hicom.net/~oedipus/vicug/>
>--------------------------------------------------------
> 



