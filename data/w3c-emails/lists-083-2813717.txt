docno="lists-083-2813717"
received="Wed Sep 22 23:58:38 1999"
isoreceived="19990923035838"
sent="Wed, 22 Sep 1999 23:58:31 -0400 (EDT)"
isosent="19990923035831"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: DOM Accessibility Issues: bubbling"
id="Pine.LNX.4.10.9909222322030.989-100000@tux.w3.org"
charset="ISO-8859-1"
inreplyto="199909230308.XAA07412&#64;smtp1.mail.iamworld.net"
expires="-1"

To: Al Gilman<asgilman@iamdigex.net>
cc: Jon Gunderson<jongund@staff.uiuc.edu>,w3c-wai-pf@w3.org,w3c-wai-ua@w3.org


So I did a quick experiment of trying to work out whether it made sense to
try and build an expanding/contracting list using a single method that
applied to all of the list. And it turned out that unless every child was in
fact active,  would have to provide a case where I tested to see if something
should be told to do nothing. Which didn't make sense as a programmer.

It makes sense to code an image map by building a table, and assigning a
parameter to each element whic describes what should be done when it is
activated. In HTML that is a silly idea, since there is already a structure
for building an image-map. The question is whether it makes sense to reuse
that code in XML for something which appears to be different, and if the
answer is not obviously no then there is a scenario for finding out what the
target is.

Charles McCN

On Wed, 22 Sep 1999, Al Gilman wrote:

  This comment is concerning the third issue dealing with bubbling.
  
  This is not a consensus of PF, DOM or any working group, just some ideas.
  
  At 03:53 PM 9/21/99 -0700, Jon Gunderson wrote: 
  >
  > Three issues related to User Agent Accessibility Guidelines and the DOM 2
  > specification:
  >
  > 1. Exporting DOM to external applications: Can an external program in a
  > standard way have read and write access to the DOM of a user agent.
  >
  > Review Guideline 6 in trhe current guidelines:
  >
  > <http://www.w3.org/WAI/UA/WAI-USERAGENT-19990827/>http://www.w3.org/WAI/UA
  > /WAI-USERAGENT-19990827/
  >
  > 2. Timing of access by an external program to the DOM: It is critical
  than an
  > external assistive technology have high speed access to the DOM of a user
  > agent
  >
  > Review Guideline 6 in trhe current guidelines:
  >
  > <http://www.w3.org/WAI/UA/WAI-USERAGENT-19990827/>http://www.w3.org/WAI/UA
  > /WAI-USERAGENT-19990827/
  >
  >
  > 3. Event Bubbling: With event bubbling it is impossible for a user agent to
  > determine which child elements of a element with an event will or will not
  > respond to the parent event.? Elements with associated events are considered
  > active elements in the user agent guidelines.
  
  
  What would happen if only the element bearing the event-handler attribute were
  treated as active?? Treating all descendants of a script-bearing element as
  active elements defeats the purpose of navigating just the active elements
  already, it would seem to me.
  
  The fundamental requirement, so far as I know, is to be able to reach all
  interactive actions available in the document.? This is satisfied by treating
  the element that actually declares the event handler a member of the effective
  active-elements set.
  
  To me, the script which checks for what descendant the mouse was in when it is
  fired is a violation of the WCAG guideline to use structural markup properly.?
  I am afraid that viewing all descendants of a script-bearing element as active
  is an over-reaction to a potential abuse.
  
  Is the method (with heredity of 'active' status over subelements of an active
  element which handles an event that can bubble) in use in any browser or
  assistive technology or combination at present?? Is there any confirmation
  with
  user testing that it works?
  
  Al
  
  
  >
  > References in user agent guidelines:
  >
  > Checkpoint 1.2 Ensure that the user can interact with all active elements
  of a
  > document in a device independent manner. [Priority 1] 
  >
  > Checkpoint 3.4 Provide time-independent access to time-dependent active
  > elements or allow the user to control the timing of changes. [Priority 1] 
  >
  > Checkpoints 8.4 Allow the user to navigate just among all active elements in
  > the document. [Priority 2] 
  >
  > Checkpoint 9.7 Provide a mechanism for highlighting and identifying
  (through a
  > standard interface where available) active elements of a document. [Priority
  > 3] 
  >
  > Jon Gunderson, Ph.D., ATP
  > Coordinator of Assistive Communication and Information Technology
  > Chair, W3C WAI User Agent Working Group
  > Division of Rehabilitation - Education Services
  > University of Illinois at Urbana/Champaign
  > 1207 S. Oak Street
  > Champaign, IL 61820
  >
  > Voice: 217-244-5870
  > Fax: 217-333-0248
  > E-mail: jongund@uiuc.edu
  > WWW: <http://www.staff.uiuc.edu/~jongund>http://www.staff.uiuc.edu/~jongund
  > <http://www.w3.org/wai/ua>http://www.w3.org/wai/ua
  >
  <http://www.als.uiuc.edu/InfoTechAccess>http://www.als.uiuc.edu/InfoTechAccess
  
  
  

--Charles McCathieNevile            mailto:charles@w3.org
phone: +1 617 258 0992   http://www.w3.org/People/Charles
W3C Web Accessibility Initiative    http://www.w3.org/WAI
MIT/LCS  -  545 Technology sq., Cambridge MA, 02139,  USA



