docno="lists-083-6686593"
received="Wed Dec  1 18:04:21 1999"
isoreceived="19991201230421"
sent="Thu, 2 Dec 1999 00:01:56 +0100 (MET)"
isosent="19991201230156"
name="H?kon Wium Lie"
email="howcome@opera.com"
subject="WD-WAI-USERAGENT-19991105 review"
id="199912012301.AAA09313@stovner.sys.sol.no"
charset="iso-8859-1"
expires="-1"


To:w3c-wai-ua@w3.org

Enclosed are my notes from reviewing WD-WAI-USERAGENT-19991105

The document is important. Hopefully it will be able to turn a
negative trend -- the web is less accessible today than it was five
years ago. 

One general comment before proceeding to more specific issues: I think
the document puts too much emphasis on UAs supporting various APIs
relative to the UAs enhancing accessibility itself.

For example, section 5.3 states:

 > Provide programmatic read and write access to user agent
 > functionalities and user interface controls. [priority 1]

and section 10.3 states:

 > Allow the user to change and control the input configuration. Users
 > should be able to activate a functionality with a single-stroke (e.g.,
 > single-key, single voice command, etc.). [Priority?2]

I would suggest reversing the priorties here -- it's more important
that the UA supports (say) single-key functionality than that it
supports an API for changing the UI.

 > 5.6 Conform to W3C Document Object Model specifications and export
 > interfaces defined by those specifications. [Priority?1]

Adding support for DOM effectively turns a browser into an editor.
This is often beneficial, but in memory-constrained enviroments it is
often impossible. By making this Priority 1, a whole segment of UAs
will fail conformance and might therefore pay less attention to the
Guidelines in general. I suggest changing it to Priority 2 and limit
the requirement fo the read (i.e. not write) portions of the DOM.

I suggest changing all sections in Guidline 5 to reflect this.

 > 6.2 Conform to W3C specifications when they
 > are appropriate for a task. [Priority?2]
 > For instance, for markup, implement [HTML40] or [XML]. For style
 > sheets, implement [CSS1], [CSS2], or XSL.

XSL is not a W3C Recommendation and although it may turn into one some
day, it is bad practice to include forward references in a
specification. XSLT is a W3C Recommendation, but it's a transformation
language with no concept of style and therefore does not fall into the
category of style sheet languages.

Regards,

-h&kon

Chief Technology Officer                                Opera Software
H?kon Wium Lie                     http://www.opera.com/people/howcome
howcome@opera.com                                gets you there faster



