docno="lists-083-7392278"
received="Sat Dec  4 14:03:55 1999"
isoreceived="19991204190355"
sent="Sat, 04 Dec 1999 14:03:50 -0500"
isosent="19991204190350"
name="Ian Jacobs"
email="ij@w3.org"
subject="Re: Usability considered (last call review)"
id="38496596.39985DC6@w3.org"
charset="us-ascii"
inreplyto="2.2.32.19991201232754.006d2f74&#64;mail.pathcom.com"
expires="-1"


To: Bryan Campbell<bryany@pathcom.com>
CC:w3c-wai-ua@w3.org

Bryan Campbell wrote:
> 

Hi Bryan,

Thank you for the very interesting comments and references. It's
very tempting to put your email in wholesale in the Techniques
Document.

I have just a couple of comments on some editorial changes
I can make based on your comments. Please let me know if you
feel additional requirements would be appropriate.

[snip]

> To make it more useful the Guildline should state that Direct access
> must load a link & move the link highlight to that link (as an option), then
> when users return to the page they'll be in place to key to other links.

I propose stating this explicitly as a technique under checkpoint
7.5  (Navigation among active elements).

> For people with disabilities the ability to use one button repeatedly is much
> more efficient than repositioning over a 2nd button. I say repositioning
> because it gives a better sense of how people with reduced dexterity reach
> the next button or key with accuracy decreasing as the distance to
> subsequent keys goes up. The ease of Sequential access is underplayed in
> Guildline 10.3 in a manner that could lead developers not to pursue
> Sequential access enough to make it more effective! Direct access is
> appealing, but the point needn't be made at the expense of other methods.

I propose the following Technique for checkpoint 10.7
"Provide default input configurations for frequently performed
operations.":

  Allow users to accomplish tasks through
  through repeated keystrokes (e.g., tabbing
  navigation) since this means less physical repositioning for 
  all users.

> Perhaps the most words important I've read on the UA list are from Scott Luebking
> <phoenixl@netcom.com> 30 Nov 1999 in "A couple of comments" page
> http://lists.w3.org/Archives/Public/w3c-wai-ua/1999OctDec/0479.html
> Suggesting how the Guildline opens Mr. Luebking says, {Quote "It probably
> should say that the guidelines can help avoid pitfalls, but it is quite
> possible to follow the guidelines and still end up with an inaccessible user
> agent." Unquote} Accessibility doesn't often equal usability.

Your last statement deviates from mantra for the last couple of years
that more accessibiltiy means more usability. I am bewildered.

>  An example of
> that is mainstreams UA using Tab, Shift-Tab, & Enter as the primary
> navigation keys. That arrangement is very difficult to run because Tab is a
> vast distance away from Enter while Shift-Tab employs 2 key pushes (which
> often becomes 4 keystrokes for people who are unsteady) to move back one
> link. That contrasts the highly usable 4 year old standard for keystroke
> browsing set by NCSA Mosaic & Opera.

What standard is that?
 
> The hardware trend clearly endorses dedicated Web keys as have been
> available in software for many years so by making 1 key browsing commands a
> Priority 1 the UA Group will merely extend the trend to the folks that can
> most use it! 

This is our issue 129. I will add a link to your email there
so that your suggestion is considered at the same time.
http://cmos-eng.rehab.uiuc.edu/ua-issues/issues-linear.html#129


> Most importantly such tests would allow creation of input layouts so
> developers & users wouldn't have to continually reinvent the wheel.
> Guildline 10.3 says users should control input which would likely be a
> complex task for most folks. With the proper information to use Guildline
> 10.3 could say provide a selections users to choose from, that will likely
> be easier for programmers to do than for UAs to have what amounts to
> miniature keyboard macro programs.

Great technique.

>  Guildline 4 should do the same for CSS.

I think CSS should not be written, but generated from UI controls.

> Besides getting folks off to quick starts developers will receive less
> questions about how to configure UAs.

Nice addendum to motivate designers/support teams.
 
> As for Speech Recognition a new PC Magazine review says it succinctly on
> this page
> http://www.zdnet.com/pcmag/stories/reviews/0,6755,2385295,00.html Speech
> Recognition works well if you have the equipment {Quote "and the ability to
> speak clearly at all times" Unquote} which isn't promising for people with
> physical disabilities. In preparing for the future we mustn't overlook what
> now & for the mid-term.
> 
> On a specific Guildline 7 talks of *tabbing* in regard to Sequential access:
> that should be changed to keying through because using the word Tab implies
> uses of the Tab key itself which is too far away from other Page movement
> keys. Indeed, all browser commands should be near the Cursor-Pad area where
> Page Up & Down etc. are to reduce traverses across the keyboard.

I recommend:

1) Using the term "sequential navigation" instead fo "tabbing
navigation"
   throughout the document.

2) Noting existing practice and your concern about key placement in
  the techniques for sequential navigation of active elements.

Thanks Bryan,

 - Ian

-- 
Ian Jacobs (jacobs@w3.org)   http://www.w3.org/People/Jacobs
Tel/Fax:                     +1 212 684-1814
Cell:                        +1 917 450-8783



