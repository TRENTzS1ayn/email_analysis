docno="lists-083-7579743"
received="Sun Dec  5 15:40:54 1999"
isoreceived="19991205204054"
sent="Sun, 5 Dec 1999 14:43:23 -0600"
isosent="19991205204323"
name="mark novak"
email="menovak@facstaff.wisc.edu"
subject="Re:Re: System API checkpoint issue"
id="v01540b02b470735582cf@[128.104.23.196]"
charset="us-ascii"
inreplyto="Re: System API checkpoint issue"
expires="-1"


To:w3c-wai-ua@w3.org
Cc:schwer@us.ibm.com,ij@w3.org,jongund@ux1.cso.uiuc.edu

see comment at MN3 below:


At 10:28 AM 12/4/99, <schwer@us.ibm.com> wrote:
>>MN2:  my comment is correct at stated.  I felt your reply to Ian was
>misleading,
>>if Mozilla is truely using "standard" controls when on the windows
>platform,
>>that information is available thru MSAA, and *does not* require an
>>Off-Screen Model.   MSAA can also provide more information than just the
>>"text" for standard controls.  As for what is defined by "enough", I think
>>that depends entirely upon a user's needs.
>
>I am aware of the other features MSAA provides and from a purely academic
>sense your comments are justified. However having actually written and
>developed screen reader and screen magnifcation products I can safely say
>that it is not enough. An OSM *is* required for non-standard controls.
>Every screen reader out there today needs an OSM to provide access to
>Windows and Windows applications. These comments are not ment to disparage
>MSAA either, but they are to state facts. I would like to see MSAA be
>extended to address the needs. Your comment on using a DOM is well
>received. Microsoft's work on the DOM client access has come a long way.
>
>Regarding custom controls you need to remember that I am not just talking
>about simple file dialogs, menus, buttons, and list boxes, but I am also
>addressing the entire client area which could be anything from a complex
>doument to a spreadsheet.
>
>As for the encouragement of cross-platform application developers to use or
>not use custom contols, I think that from a developers perspective it is
>unrealistic to expect them to use MSAA on Windows if they could provide a
>cross-platform DOM-based solution designed to address common contols
>access. Furthermore, we need to be aware of the fact that developmment
>organizations are increasingly developing heterogeneous solutions. There
>are tremendous business opportunities on Linux, Solaris, AIX, the Mac, and
>pervasive devices that do not specify MSAA. As a result, groups like
>Mozilla are creating cross-platform infrastructures. This alone is a major
>development effort that to make extensive changes to their code base to
>support MSAA is unrealistic. We need to ensure that they can make
>cross-platform accessible solutions. If it is not there we need to build it
>like we did with Sun on Java.
>
>However, Java and Windows are not be-all and end-all solution. W3C WAI
>design specifications need to be created to accomodate this. Basic access
>system requirements like keyboard, mouse, and standard system API
>mechanisms for drawing text and generating audio can be supported much more
>easily.
>
>I hope at this point I am preaching to the choir, and I apologize for
>getting on my soap box, but in order for accessibility to successfully
>incoroporated into the devlopment fabric we need to accomadate developers
>business needs as well. Heterogeneous environments need to be addressed and
>after all this is really what the WAI group has to address anyways. I hope
>this clears up where I might have mislead people.
>
>Rich


MN3:   I was simply trying to inform people that MSAA *does not* require
an Off-Screen Model.

BTW, you might want to be a bit more careful when choosing words like
"purely academic"  in the future.  <smile>



>To:   w3c-wai-ua@w3.org
>cc:   ij@w3.org, jongund@ux1.cso.uiuc.edu, Richard
>      Schwerdtfeger/Austin/IBM@IBMUS
>Subject:  Re:Re: System API checkpoint issue
>
>
>
>
>see comment at MN2 below:
>
>>MSAA *does* rely on an offscreen model to provide access to text in
>>documents and many other custom contols. For simple buttons and menu items
>>it does allow you to get access to the text but that is not enough by a
>>long shot.
>
>MN2:  my comment is correct at stated.  I felt your reply to Ian was
>misleading,
>if Mozilla is truely using "standard" controls when on the windows
>platform,
>that information is available thru MSAA, and *does not* require an
>Off-Screen Model.   MSAA can also provide more information than just the
>"text" for standard controls.  As for what is defined by "enough", I think
>that depends
>entirely upon a user's needs.
>
>Now, If you want to change that to "custom" controls on the windows
>platform, I already
>stated in an earlier email, that is a more general accessibility problem,
>and
>one which I hope *someone* is encouraging Mozilla development team to
>avoid.  If the Mozilla development team is going to provide custom controls
>that are not accessible to MSAA on the windows platform, then by all means
>I
>think it is also their responsibility to make sure those controls are
>accessible.
>
>As for accessing the text in doc., I wasn't implying to use MSAA to do
>that.  I would
>continue to use the DOM, for UAs, as you've stated.
>
>
>> A miracle has not happened here yet.
>>
>>Rich
>
>>menovak@facstaff.wisc.edu (mark novak) on 12/03/99 12:54:24 PM
>>
>>To:   w3c-wai-ua@w3.org
>>cc:   Richard Schwerdtfeger/Austin/IBM@IBMUS, ij@w3.org,
>>      jongund@ux1.cso.uiuc.edu
>>Subject:  Re:Re: System API checkpoint issue
>>
>>
>>
>>
>>see one comment at MN below:
>>
>>
>>>I will check into this some more, but I am told that the DOM API
>>>implemented by the Mozilla group is the W3C DOM Specification (at least
>as
>>>much as the IE is and perhaps more).
>>>
>>>However, I would strongly disagree that if a company is working to
>develop
>>>a consistent cross-platform solution based on W3C specifications that
>they
>>>are not compliant. Especially if they can document how an assistive
>>>technology can connect with the user agent.
>>>
>>>If Mozilla is willing to create a cross-platform accessible solution
>based
>>>on W3C standards we should support them. The other problem you have is
>>that
>>>MSAA is still reliant on an offscreen model. A DOM-based solution should
>>>not be.
>>>Rich
>>
>>MN:    I need to do a lot of email reading to catch up to the root or
>>source of
>>this discussion, but one thing that caught my attention directly is the
>>comment
>>that "MSAA is still reliant on an offscreen model".
>>
>>Please note, MSAA *does not* require an Off-Screen Model for the
>>information
>>it provides.
>>
>>
>>
>>>Ian Jacobs <ij@w3.org> on 11/21/99 01:18:36 PM
>>>
>>>To:   Richard Schwerdtfeger/Austin/IBM@IBMUS
>>>cc:   Jon Gunderson <jongund@ux1.cso.uiuc.edu>, w3c-wai-ua@w3.org
>>>Subject:  Re: System API checkpoint issue
>>>
>>>
>>>
>>>
>>>schwer@us.ibm.com wrote:
>>>>
>>>> Jon,
>>>>
>>>> I had a brief meeting with the IBM web browser team and we discussed
>>>> Mozilla accessibility. Mozilla is designed as a cross-platform solution
>>>> even though it is compiled for each platform. It turns out that all
>>>> components including the application chrome can be accessed through
>>their
>>>> DOM. Our guidelines state that we need to use the system-provided
>>>> accessibility features like MSAA however they also require that we use
>>>the
>>>> DOM albeit for the actual document.
>>>
>>>"Their DOM" is not the same as "The DOM" (meaning the W3C DOM).
>>>Therefore,
>>>despite the good design idea of making the system platform independent,
>>>by not using system conventions or a recognized API, the design causes
>>>assistive technologies to lose. Consistency among the interfaces
>>>offered by the particular user agent across different platforms may
>>>be less important than consistency among different pieces of software
>>>on a given platform.
>>>
>>>Perhaps the checkpoints are flawed or behavior in the case of
>>>overlap is underspecified. Consider these three requirements:
>>>
>>>  1) Implement system conventions (checkpoint 5.2 of [1])
>>>  2) Implement the W3C DOM (checkpoint 5.6)
>>>  3) Implement your own, accessible and open API (checkpoint 5.1).
>>>      NOTE: I'd like to review what 5.1 means exactly.
>>>
>>>Mozilla seems to be doing 3 at the expense of 1. Is there a
>>>way to map Mozilla's API to MSAA on Windows?
>>>
>>>This seems like a real issue where developer and AT input would
>>>be very useful.
>>>
>>> - Ian
>>>
>>>
>>>[1] http://www.w3.org/TR/1999/WD-WAI-USERAGENT-19991105
>>>
>>>> The conclusion of the meeting was that the User Agent guidelines should
>>>> allow for cross-platform accessibility through DOM 2 as a minimum since
>>>> this will utimately be a W3C standard providing the solution provider
>>can
>>>> clearly define how an assistive technology would interact with the DOM
>>to
>>>> provide an accessible solution. I believe that cross-platform
>>>accessibility
>>>> is a more important issue given that it can enable assistive technology
>>>> solutions on other OS platforms and devices. Support for device
>>>> independence and standard I/O API and all other requirements would
>still
>>>> apply naturally.
>>>>
>>>> I would like to raise this issue for the next meeting.
>>>>
>>>> Rich
>>>>
>>>> Rich Schwerdtfeger
>>>> Lead Architect, IBM Special Needs Systems
>>>> EMail/web: schwer@us.ibm.com http://www.austin.ibm.com/sns/rich.htm
>>>>
>>>> "Two roads diverged in a wood, and I -
>>>> I took the one less traveled by, and that has made all the
>difference.",
>>>> Frost
>>>
>>>--
>>>Ian Jacobs (jacobs@w3.org)   http://www.w3.org/People/Jacobs
>>>Tel/Fax:                     +1 212 684-1814
>>>Cell:                        +1 917 450-8783
>>>



