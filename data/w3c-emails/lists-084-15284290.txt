docno="lists-084-15284290"
received="Tue Nov 14 00:00:09 2000"
isoreceived="20001114050009"
sent="Mon, 13 Nov 2000 23:55:08 -0500"
isosent="20001114045508"
name="Phill Jenkins/Austin/IBM"
email="pjenkins@us.ibm.com"
subject="Comment on 1.2 OS APIs for text"
id="OFC468FEDF.D06FC5C7-ON86256997.00199AFC@raleigh.ibm.com"
charset="iso-8859-1"
expires="-1"

To:w3c-wai-ua@w3.org
Cc:"Richard Schwerdtfeger/Austin/IBM"<schwer@us.ibm.com>,"Catherine Laws/Austin/IBM"<claws@us.ibm.com>


Checkpoint 1.2?Use the standard input and output APIs of the operating
system. Do not bypass the standard output APIs when rendering information.
P1.

Clarification is need on how this applies to "cross-platform" user agents
that may not rely on the operating system API for rendering text.  For
example:

1. User agents written in Java2, that do not use the operating systems'
API, but still provide an excellent accessibility API to assistive
technologies to access the information about the rendered text and other
information.  I would recommend that the phrase "of the operating system"
should be deleted from the wording of the checkpoint.

2.  Plug-ins, such as Adobe Acrobat and Macromedia Flash, that do or soon
will provide published APIs to their player controls and content may not be
using standard operating systems APIs, but provide efficient access for
assistive technologies.  The requirement is that they are published and
efficient.

3. The following technique wording needs to be adjusted, perhaps by adding
"published APIs" to where it mentions DOM:
"Do not render text in the form of a bitmap before transferring to the
screen, since some screen readers rely on the user agent's offscreen model.
An offscreen model is rendered content created by an assistive technology
that is based on the rendered content of another user agent. Assistive
technologies that rely on an offscreen model generally construct it by
intercepting standard system drawing calls. For example, in the case of
display drivers, some screen readers are designed to monitor what is drawn
on the screen by hooking drawing calls at different points in the drawing
process. While knowing about the user agent's formatting may provide some
useful information to assistive technologies, this document emphasizes
access to the document object model rather than a particular rendering. For
instance, instead of relying on system calls to draw text, assistive
technologies should access the text through the document object model. "


Regards,
Phill Jenkins
IBM Research Division - Accessibility Center



