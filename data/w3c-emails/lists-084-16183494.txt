docno="lists-084-16183494"
received="Wed Dec  6 09:19:31 2000"
isoreceived="20001206141931"
sent="Wed, 06 Dec 2000 09:55:51 -0500"
isosent="20001206145551"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="Re: OS _or_ language as context for &quot;follow standard practice&quot;"
id="200012061425.JAA485631@smtp1.mail.iamworld.net"
charset="iso-8859-1"
inreplyto="4.2.0.58.20001205222938.00b0f710&#64;localhost"
expires="-1"


To: Wendy A Chisholm<wendy@w3.org>, Ian Jacobs<ij@w3.org>, Jason White<jasonw@ariel.ucs.unimelb.edu.au>,gv@trace.wisc.edu
Cc:w3c-wai-ua@w3.org

At 11:01 PM 2000-12-05 -0500, Wendy A Chisholm wrote:
>
>> > 12. Several checkpoints refer to using operating system conventions.?
What
>> > about a user agent that is written in Java?
>> > In that case it is up to the
>> > virtual machine to use the system conventions.
>>
>>Is that entirely true? I thought that the virtual machine's
>>job was to interpret byte code, but that you could write
>>programs to do whatever you want. I am not a Java
>>programmer...
>
>The virtual machine interprets byte codes into something the OS can 
>understand.? The VM is operating system specific.
>

I believe that the UAAG as is should win out on this point.? That is to say, I
believe that the UAAG never says simply "follow OS conventions."

One conspicuous reason for this is the cross-OS capability offered in the Java
language environment.  The Java language provides OS-like functionality built
into the standard language environment which is cross-platform usable by
applications.? Java programs are supposed to be able to run in the Java
environment without taking into account what OS they are on, relying only on
the Java-standard cross-OS services.? The UAAG is careful to offer the
programmer the option of sticking to OS-based or language-based platforms of
standard practice as what to conform to.? In the present climate it would be
inadvisable for the WAI to do anything different from this.?? 

As an alternative, the UAAG could attempt to assert policies as to which
functionality is intrinsically OS functionality and should be localised to the
OS.? However, it appears that this would be a) a large new requirement in the
UAAG and b) very hard to do in a way that generated more light than heat.? In
other words, this is a quick way to wind up taking sides in battles that are
not our battle, and thereby making more enemies than we make contributions to
accessibility.

This has nothing to do with "Java being an interpreted language."  It has
everything to do with the licensing terms which Sun has had to go to a lot of
legal trouble to enforce that says "Implementing Java requires that you
implement the cross platform profile of services in a conforming way."

Al



