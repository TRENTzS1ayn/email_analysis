docno="lists-084-4779059"
received="Wed Mar 29 05:29:59 2000"
isoreceived="20000329102959"
sent="Wed, 29 Mar 2000 12:33:11 +0100"
isosent="20000329113311"
name="Hans Riesebos"
email="HRiesebos@alva-bv.nl"
subject="Re: Question about access to ALL content - UAAG 2.1 P1"
id="s8e1f80e.096@mail.alva-bv.nl"
charset="US-ASCII"
inreplyto="Question about access to ALL content - UAAG 2.1 P1"
expires="-1"


To:<charles@w3.org>,<ij@w3.org>
Cc:<pjenkins@us.ibm.com>,<w3c-wai-ua@w3.org>

Ian,

When showing the source would not solve a checkpoint, it does not say that it is a wrong thing to do. It also does not need to be changed into something else. The people that want to show the source will probably gain something from it. 
I also think that source and content are not synonym.

The minimum requirement could be that the "current content" be presented as HTML/XML code. This presentation could be radically different from what source was used in to begin with.

Hans Riesebos
ALVA BV, The Netherlands
HRiesebos@alva-bv.nl

First Charles McCathieNevile wrote:
> 
> I don't think that it is accesible - I think you are understimating the
> difficulty many people have in understanding a arkup language - both those
> with cognitive disabilities and many others. And in any case the solution
> will only really work for relatively simple markup languages - although it is
> possible to learn postscript or RF as well as HTML there are not many people
> who do it. Any reasonably complex XML language can become incomprehensible
> fairly quickly, and users should not be expected to read the language
> (otherwise why bother with a user agent that interprets it in the first
> place).

Then Ian Jacobs wrote
So what are our options?

1) Render the content by ignoring all markup. This may cause
   confusion as well since all structure is lost.

2) Render alternative content (or primary content for that matter)
   according to the rendering instructions of the markup language.
   This won't work for HTML or XML applications.

3) Require that the user agent implement a default style sheet
   for any markup language it supports. What should that style sheet
   be? We don't have a standard one for XML applications. One that comes
   to mind will present the content according to the structure of the
   document, which takes us back to the source view.

4) Require that the author supply a style sheet for all types of
content.
   I don't think this helps either the author or the user.

My fear is that we are going to try to define a line for what is
considered
accessible rendering. How do you determine that a user agent (even
a mainstream browser) has rendered content above that line? Where do you
draw that line?

I think it does make sense to say that the *minimal* requirement
is to make the document source available. (I can't think of anything
less than that, hence minimal). 

Where do you draw the line after the minimal requirement?

 - Ian



