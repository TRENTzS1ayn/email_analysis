docno="lists-084-9079054"
received="Tue Aug 29 11:31:11 2000"
isoreceived="20000829153111"
sent="Tue, 29 Aug 2000 11:29:34 -0400"
isosent="20000829152934"
name="Hansen, Eric"
email="ehansen@ets.org"
subject="RE: On Prompt/Notify/Advise/Alert"
id="B49B36B1086DD41187DC000077893CFB8B42D1@rosnt46.ets.org"
charset="windows-1252"
inreplyto="On Prompt/Notify/Advise/Alert"
expires="-1"

To:"'Ian Jacobs'"<ij@w3.org>,w3c-wai-ua@w3.org


Following are a few comments on Ian Jacob's (IJ) memo [2]. Other related
comments are in [1].

My comments are marked with "EH:".

[1] http://lists.w3.org/Archives/Public/w3c-wai-ua/2000JulSep/0314.html
[2] http://lists.w3.org/Archives/Public/w3c-wai-ua/2000JulSep/0309.html

IJ:
> I propose the following:
> 
> 1) That we only use the term "notify" in the checkpoints and
>    that we define it to mean "inform the user through the user
>    interface". Note that I do not talk about APIs here. That
>    is a separate requirement (that messages through the UI also
>    be available through an API).
> 
> 2) That "notify" be independent of a particular mechanism
>    in the user interface (but that any notification be
>    accessible).
> 
> 3) That the term "prompt" be reserved for a particular
>    UI approach, but that we don't attempt to define it!
>    I would note that the AU Guidelines [2] includes a definition 
>    of prompt, but since then, that WG has had a number of discussions
>    on the definition (refer to [3], [4], [5], and [6] at least).

EH: This seems to be a new concept, this idea of "prompt" being reserved for
a particular UI approach, but that we don't attempt to define it. I find
this problematic because not having agreed-upon definitions usually leads to
problems. For example, this approach begs the question as to what
constitutes a "UI approach". For example, do a picture and
visually-displayed text count a single UI approach (because they are both
"visual") or as two approaches (because they are useful for different
disability groups)? I really don't see why "prompt" should be treated
differently than any other unrendered (or pre-rendering) content: If it is a
non-text content (and it isn't secondary content) then it needs a text
equivalent and all checkpoints pertaining to text equivalents apply. Beyond
that, _if_ there are special classes of content (alerts, notifications,
prompts, indications (?), repair text, etc.), that need to be treated
differently, then we need to have checkpoints that provide that guidance.
See [1] for further discussion.



