docno="lists-085-12044372"
received="Wed Jul 11 21:50:28 2001"
isoreceived="20010712015028"
sent="Wed, 11 Jul 2001 22:00:42 -0400"
isosent="20010712020042"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="giving the user the last word"
id="200107120150.VAA2248451@smtp2.mail.iamworld.net"
charset="us-ascii"
expires="-1"


To:w3c-wai-ua@w3.org


I am not sure why we are straining at this.

I had the opportunity to attend the SIGCHI conference this past April, and
I was interested to realize that this is something that the HCI experts of
this community just take for granted.  It wasn't discussed.  Other things
were discussed in a way that made clear this was a premise.

What was discussed was the search for the holy grail of the "invisible
interface."  One where the virtual world you are doing your thing in is so
real that the interface melts into oblivion.  You don't achieve this by
putting rigid "no go" barriers anywhere the user could possibly perceive them.

One of the techniques that is being heavily used in trying to get the
computer to be smarter, to anticipate what the user wants, is systematic
checking with the [user] boss.  Take small risks, make it effortless for
the user to say 'no.'  That is the tack that the "add AI to the UI"
research is on.

The customer is always right.

Make her think it was her idea.

Those two strategies were never questioned; they were just part of the
woodwork.

There is plenty of room for suasion.  For the application to nudge the user
in the direction of patterns of use that are expected to be more fruitful
and away from those that are expected to be less fruitful.  But a hard
limit should be based on valid application semantics or not be there.  Not
where you decide to chop the tails on usability statistics.  We represent
the clients that get lost in the statistics.  But you don't have to go that
far.  Telling the user you know better than she does is just bad business,
no matter which user she is.

Don't want to get up on too high a soapbox, here.  But I need to add this
perception of the conventional wisdom at SIGCHI into the stewpot of what we
communicate to the Device Independence Working Group on precisely this
point.  So I thought I should run it by y'all while you are considering a
question that is related.  In the user session, it gets down to human user
and automation that author and tool implementer have programmed.  At that
point, the automation proposes and the user disposes.  That's just how it
should be.

Al



