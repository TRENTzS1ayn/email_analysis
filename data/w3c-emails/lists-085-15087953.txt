docno="lists-085-15087953"
received="Wed Dec 12 12:39:54 2001"
isoreceived="20011212173954"
sent="Wed, 12 Dec 2001 09:39:16 -0800"
isosent="20011212173916"
name="Ray Whitmer"
email="rayw@netscape.com"
subject="Re: Enumeration of EventListeners in DOM Level 3 Events"
id="3C179644.1050800@netscape.com"
charset="us-ascii"
inreplyto="OF2F6A9E36.1D620BD9-ON86256B1F.004A609E&#64;raleigh.ibm.com"
expires="-1"


To: Richard Schwerdtfeger<schwer@us.ibm.com>
CC:"Ian B. Jacobs"<ij@w3.org>, Philippe Le Hegaret<plh@w3.org>,w3c-wai-ua@w3.org,w3c-wai-ua-request@w3.org,www-dom@w3.org

Richard Schwerdtfeger wrote:

>Ian and Philippe,
>
>Fantastic!
>
>From an authoring tools perspective this is very useful. It allows a
>content developer to programmatically exercise the listeners individually
>so this has advantages to disabled as well as non-disabled users.
>
>From a disabled user perspective, the input device used to simulate the
>activate of each listener may be voice recogntion or some other specialized
>input device such as an onscreen keyboard combined with:
>
>   big switch
>   specialized keyboard (Don Johnston)
>
>Assistive technologies such as HPR could enumerate the listeners and allow
>the user to select which one to activate. This would aid with users
>creating web sites as well as accessing them. From a UI perspective a
>pop-up window showing the available functions to be executed in response to
>each event could be activated allowing the user to hear and speak which one
>to be activated ... and then of  couse activate the appropriate one.
>
How does the user select these, by binary address?

How does the application construct the proper event, by trial and error?

What if the user chooses to invoke functions that should never be user 
accessible, such as mutation events.

>If the WCAG group could do more with Script (require addition of function
>descriptions) it would be nice to have the ability to store the function
>description executed in response to a given event in which case a script
>developer could create a function description for those functions executed
>in response to an event that could be stored and access through the DOM.
>Currently DOM 3 is limited to providing the type definition. ... Perhaps
>for DOM 4 we could add this.
>
How does the DOM Level 3 script know which event type definition applies 
to the function, or which listeners must only be invoked in concert?

Ray Whitmer
rayw@netscape.com



