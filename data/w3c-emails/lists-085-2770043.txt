docno="lists-085-2770043"
received="Tue May 15 15:58:57 2001"
isoreceived="20010515195857"
sent="Tue, 15 May 2001 15:58:21 -0400"
isosent="20010515195821"
name="David Poehlman"
email="poehlman1@home.com"
subject="Re: My input on 6.6"
id="006501c0dd79$655192c0$2cf60141@mtgmry1.md.home.com"
charset="Windows-1252"
inreplyto="DE8C2EEE23641143A8C0CD7705C26AE734BAC8&#64;red-msg-03.redmond.corp.microsoft.com"
expires="-1"


To:"Tim Lacy"<timla@microsoft.com>,<w3c-wai-ua@w3.org>

the rsvp I got says the meeting is tomorrow?

----- Original Message -----
From: "Tim Lacy" <timla@microsoft.com>
To: <w3c-wai-ua@w3.org>
Sent: Tuesday, May 15, 2001 3:44 PM
Subject: My input on 6.6


First, my apologies for not being on the telecon today - I have several
tasks due tomorrow, and will be pleasantly surprised if I actually
complete them both.

Ian has asked me to comment on the topic of 'standard API' as it relates
to 6.6.

I am unable to add anything to Rich's comments on this, and agree with
him completely.  For all the reasons he gave, the implementation of
standard API's is critical to interoperability, which in turn is core to
creating an accessible web experience.

One thing I used to hear over and over again from AT vendors was that
they had to special-case everything in order to work with all the
different DOM's (not just www, but all application DOM's).  By going to
standard API's (and in our case, implementing API improvements based on
AT vendor feedback), this problem is finally starting to diminish.

The key is that the programmatic interface between the AT and the system
needs to be robust, full-featured, rigorously tested, and widely
adopted.  I am unaware of any 'custom' API's that even come close to
this.

My dos centavos, anyway.

-T



