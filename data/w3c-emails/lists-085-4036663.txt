docno="lists-085-4036663"
received="Fri Jun 22 06:24:59 2001"
isoreceived="20010622102459"
sent="Fri, 22 Jun 2001 06:24:59 -0400 (EDT)"
isosent="20010622102459"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: Raw minutes from 21 June UAWG teleconference"
id="Pine.LNX.4.30.0106220610350.20105-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="3B3256FB.11683B64&#64;w3.org"
expires="-1"

To:"Ian B. Jacobs"<ij@w3.org>
cc:<w3c-wai-ua@w3.org>


for freehand drawing keyboard access essentially amounts to mousekeys anyway.
I am not sure if thre is anything else that isn't amenable to keyboard
manipulation - moving graphics, resizing and transforming are often useful
things to do via the keyboard. In the olden days, this was even a commmon
thing to do.

Are there specific things that are considered too difficult?

Charles

On Thu, 21 Jun 2001, Ian B. Jacobs wrote:

  21 June 2001 UA Guidelines Teleconference
[snip]
  C.6: Don't require keyboard access for all functionalities (e.g., text
  selection, region positioning)

    IJ: I wonder whether there's some exception that can be carved out
    here. There's some tight binding between input and output modes in
    the case of drawing. Can we capture this? Do we want to?

    IJ: I have this sense that when a functionality is bound to a
    particular output mode (e.g., drawing is inherently visual), then
    our input mode requirements might be different. Why would we require
    input mode independence when a particular functionality depends
    on a single output mode?

    MQ: I want to be able to show people a set of slides, even though I
    may not be able to use the slides. There are blind people who can
    visual what they're doing (e.g., drawing).

    DP: I need to be able to teach my students how to use a drawing
    tool. I need to be able to say "This is how you change the brush
    width", even though I may not be able to see the results. Or I need
    to be able to document this functionality (if I work for a software
    company).

    DP: I may not be able to use a mouse, but I may not be blind. I may
    have a physical disability and be using a large keyboard.

    IJ: How do you answer the question: Some things, like drawing, are
    hard to do with the keyboard? I think the important distinction
    is between two-dimensional input and one-dimensional input.

  IJ: It would be useful to distinguish three cases:

    - Direct access (i.e., spatially-independent)
      required for some users, e.g., with blindness. In this case,
      keyboard shortcuts make the most sense.

    - Keyboard, not mouse, access required for other users (e.g.,
      using specialized input devices that make use of the keyboard
      API, or for whom moving arrow keys is easier than a mouse, for
      example). In this case, keyboard shortcuts are not as sensible.
      This is not to say that no drawing is easy to do with
      direct access; it's probably easy for well-known shapes, flipping
      them, enlarging them, etc. But for some other functionalities,
      such as free-hand drawing.

  IJ:  MouseKeys may be the best solution for some functionalities, but
  should not be relied on for all access (for those who cannot use
  spatially-dependent input mechanisms).

  DP: Another important issue is that APIs are important for alternative
  input devices.

  Action IJ: Clarify for 1.1. the difference between spatially-dependent
  and independent access through the keyboard. We don't require all
  functionalities be available in a spatially-independent manner. Where
  possible, provide at least a spatially-independent input
  mechanism. Access through the keyboard API will be useful to AT
  developers.



