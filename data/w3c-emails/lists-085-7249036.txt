docno="lists-085-7249036"
received="Thu Mar  1 15:12:53 2001"
isoreceived="20010301201253"
sent="Thu, 01 Mar 2001 17:27:18 +0100"
isosent="20010301162718"
name="Chris Lilley"
email="chris@w3.org"
subject="sections of SVG spec I was talking about"
id="3A9E7866.F3DB3EEF@w3.org"
charset="us-ascii"
expires="-1"


To:ij@w3.org
CC:w3c-wai-ua@w3.org

6.7 Styling with CSS

CSS2's dynamic pseudo-classes :hover, :active and :focus and pseudo-classes
:first-child, :visited, :link and :lang. The remaining CSS2 pseudo-classes,
including those having to do with generated content, are not part of the
SVG language definition. (Note: an SVG element gains focus when it is
selected. See Text selection.) 

http://www.w3.org/SVG/Group/2001/PR-SVG-20010224/styling.html#StylingWithCSS


10.16 Text selection and clipboard operations

A text selection operation starts when all of the following occur:

the user positions the pointing device over a glyph that has been rendered
as part of a 'text' element, initiates a select operation (e.g., pressing
the standard system mouse button for select operations) and then moves the
pointing device while continuing the select operation (e.g., continuing to
press the standard system mouse button for select operations) 
no other visible graphics element has been painted above the glyph at the
point at which the pointing device was clicked 
no links or events have been assigned to the 'text' , 'tspan' or 'textPath'
, element(s) (or their ancestors) associated with the given glyph. 

http://www.w3.org/SVG/Group/2001/PR-SVG-20010224/text.html#TextSelection

16.2 Complete list of supported events

See description of focusin, focusout and activate events

http://www.w3.org/SVG/Group/2001/PR-SVG-20010224/interact.html#SVGEvents

16.5 Processing order for user interface events
The processing order for user interface events is as follows:

* Event handlers assigned to the topmost graphics element under the pointer
(and the various ancestors of that graphics element via potential event
bubbling [DOM2-EVBUBBLE]) receive the event first. If none of the
activation event handlers take an explicit action to prevent further
processing of the given event (e.g., by invoking the preventDefault() DOM
method), then the event is passed on for: 
* Processing of any relevant dynamic pseudo-classes (i.e., :hover, :active
and :focus) [CSS2-DYNPSEUDO], after which the event is passed on for: 
* (For those user interface events which invoke hyperlinks, such as mouse
clicks in some user agents) Link processing. If a hyperlink is invoked in
response to a user interface event, the hyperlink typically will disable
further activation event processing (e.g., often, the link will define a
hyperlink to another Web page). If link processing does not disable further
processing of the given event, then the event is passed on for: 
* (For those user interface events which can select text, such as mouse
clicks and drags on 'text' elements) Text selection processing. When a text
selection operation occurs, typically it will disable further processing of
the given event; otherwise, the event is passed on for: 
* Document-wide event processing, such as user agent facilities to allow
zooming and panning of an SVG document fragment. 

http://www.w3.org/SVG/Group/2001/PR-SVG-20010224/interact.html#UIEventProcessing

-- 
Chris



