docno="lists-086-11852469"
received="Fri Aug 15 03:32:08 1997"
isoreceived="19970815073208"
sent="Fri, 15 Aug 1997 17:32:00 +1000 (AEST)"
isosent="19970815073200"
name="Jason White"
email="jasonw@ariel.ucs.unimelb.EDU.AU"
subject="Re: Scott Isensee: ANSI standard"
id="Pine.SUN.3.95.970815171110.24816C-100000@ariel.ucs.unimelb.EDU.AU"
charset="US-ASCII"
inreplyto="199708140745.JAA20322&#64;www47.inria.fr"
expires="-1"

To: WAI Working Group<w3c-wai-wg@w3.org>


This is an interesting standard which will undoubtedly be useful in the
preparation of browser design guidelines. Indeed, it would be beneficial
to maximize cooperation between WAI and ANSI in this area, in order to
minimize unnecessary duplication of effort.

One aspect of the standard which concerns me is its approach to the use of
"assistive technologies", particularly braille and speech output software.
The standard seems firmly committed to the conventional concept of a
screen reader. Although reference is sometimes made to the need for
assistive technologies to be able to identify the names and locations of
objects, the titles of windows and the locations of focus points, no
attempt is made to define a more comprehensive interface model by which
braille and speech output software, macro packages and other programmes
can interact with the application. In recent times, the development of the
Remote Access Protocol and Microsoft's Active Accessibility software have
demonstrated the usefulness of such a comprehensive solution, not only
as a means of satisfying the needs of certain classes of people with
disabilities, but also in the development of "user agents", debugging
tools and similar applications.

An effective audio interface, and likewise an effective braille interface,
should not be simply a description or analogue of a graphical interface.
Rather, it is better to design operating systems and applications in such
a way that the name of every user interface component, its relationships
with other objects and the type of value that it can accept, are all
available to external applications. Furthermore, external programmes such
as braille or audio output software, or macro systems, should be able to
supply a value to each such user interface component.

I do not claim to have any expertise in the field of user interface
design, but it seems clear that the approach outlined above has
considerable merit as demonstrated by recent developments in this field.
Indeed, some such requirement as that stated in the preceding paragraph
has also been expressed by Greg Vanderheiden in one of his papers, and
T.V. Raman has amply demonstrated the need for software which provides
audio interfaces to have access to the underlying data structures of the
application, rather than just a model, as it were, of the visual
interface. These issues could be more clearly addressed in the standard,
and also in the WAI browser guidelines, although the two projects may
overlap to a considerable degree as I have earlier suggested.



