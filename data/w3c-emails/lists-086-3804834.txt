docno="lists-086-3804834"
received="Fri Aug  2 06:39:27 2002"
isoreceived="20020802103927"
sent="Fri, 2 Aug 2002 10:35:58 -0000"
isosent="20020802103558"
name="Jim Ley"
email="jim@jibbering.com"
subject="Re: Proposed requirements for checkpoint 6.4 (Response Required)"
id="011401c23a10$63be5160$ca969dc3@emedia.co.uk"
charset="iso-8859-1"
inreplyto="3D4869B4.1060405&#64;w3.org"
expires="-1"


To:<w3c-wai-ua@w3.org>


"Ian B. Jacobs" <ij@w3.org>
> Jim Ley wrote:
> >
> > "Ian B. Jacobs" <ij@w3.org>
> >
> >>Charles McCathieNevile wrote:
> >>
> >>The goal of this checkpoint is to make available what's *actually*
> >>rendered.
> >
> > I agree with it, but I'm concerned it may be expensive to implement
in
> > current scenarios, and will also rely on the end renderer providing
the
> > information
>
> Thanks for taking the time to comment. Can you say more on what you
> think would be expensive to implement? Jon and I reviewed existing
> APIs and both MSAA and Java APIs (and probably others) cover the
> indicated requirements.

I'm surprised MSAA does, I thought it didn't currently (not the actual
rendered positions.) but great if we've already got implementations!

> In what way would the end user have
> to provide information? The user agent ultimately determines the
> choice of font families, for example, after taking into account
> author preferences, user preferences (in the UA and the Operating
> Environment), and available font families (and probably other
> factors as well).

I'm not thinking of the user, the scenario I was imagining is where I use
a number of other software components to create a more accessible
browser, so for example I may use Batik to render SVG elements in the
page, if Batik doesn't make exact locations available to my tool, I can't
meet the requirement.  So the fear I have is that we'll only be able to
use components which do provide the exact location information.  I guess
I think of a UA as a series of components tht plug together, and I often
think of the final renderer not necessarily doing exactly what it's told
(it may be a few pixels out, or substitute fonts itself.)

I'm also not sure what would happen where an element has text content
which is rendered in a number of fonts - if a font does not contain a
particular character, it's reasonable to substitute the font from that
character with a font which does, but you'd not substitute the others -
so we now have an element where 2 fonts are used - what would be returned
in this scenario?

Jim.



