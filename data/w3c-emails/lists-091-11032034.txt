docno="lists-091-11032034"
received="Fri Aug 16 21:09:52 2002"
isoreceived="20020817010952"
sent="Fri, 16 Aug 2002 21:09:52 -0400 (EDT)"
isosent="20020817010952"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="[XAG] auto-testing 1.3"
id="Pine.LNX.4.30.0208162058580.29412-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To: WAI Cross-group list<wai-xtech@w3.org>



Hi,

testing checkpoint 1.3 would be easy if we defined which modules should be
included. I suspect that isn't so hard - I don't see a reason not to bless
SVG for graphics and animation (although obviously we need more work on how
to do that - when to use scripts and when to use SVG animation). I am not
sure what other modules we have for other media types (no timed-text yet) but
I will propose a way of representing multiple media types in RDF that might
be auseeful model in general.

The basic idea is that an element is suitable for a particular set of needs,
and that it is possible to collect these in something like a switch element
that would by default behave like a switch but would require a user agent to
be able to choose from any of the alternatives, as per UAAG 2.3
http://www.w3.org/WAI/UA/WD-UAAG10-20020809/guidelines.html#tech-conditional-content

This can be written in simple form as XML, although I would propose that it
be RDF as well. A sample of some RDF that I scribbled together to try and
get an idea:

<rdf:RDF
  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns:NS0='http://www.w3.org/2002/05/rough#'
 >
  <rdf:Description rdf:about='http://www.example.com/collection2'>
    <rdf:type rdf:resource='http://www.w3.org/2002/05/rough#ccppHack'/>
  </rdf:Description>
  <rdf:Description rdf:about='#A0'>
    <rdf:type rdf:resource='http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag'/>
    <rdf:li rdf:resource='http://www.example.org/bar.htm'/>
    <rdf:li rdf:resource='http://www.example.com/barfoo.vnd'/>
    <rdf:li rdf:resource='http://www.example.org/foo.avi'/>
    <NS0:useProfile rdf:resource='http://www.example.com/collection2'/>
  </rdf:Description>
  <rdf:Description rdf:about='http://example.org/someSMIL#foobar'>
    <rdf:type rdf:resource='http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag'/>
    <rdf:li rdf:resource='http://www.example.net/foobar.au'/>
    <rdf:li rdf:resource='http://www.example.org/barf.oo'/>
    <rdf:li rdf:resource='http://www.example.org/foo.avi'/>
    <NS0:useProfile rdf:resource='http://www.example.com/collection2'/>
    <NS0:equivalent rdf:resource='#A0'/>
    <rdf:type rdf:resource='http://example.org/foo#SMILelementPAR'/>
  </rdf:Description>
</rdf:RDF>

If this were properly writtne up it should be easy to use it directly. It
should also be possible to use this kind of RDF to annotate an existing
schema or instance (for example SMIL content) and work out what formats an
existing presentation could do, collecting together several presentations or
schemata to cover a wider set of user needs.

Chaals



