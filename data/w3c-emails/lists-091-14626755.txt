docno="lists-091-14626755"
received="Mon Sep 23 11:20:03 2002"
isoreceived="20020923152003"
sent="Mon, 23 Sep 2002 11:20:03 -0400 (EDT)"
isosent="20020923152003"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="[XAG] Auto-testing cp 2.4, 2.5, 2.6 and 2.7"
id="Pine.LNX.4.30.0208170459410.4026-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To: WAI Cross-group list<wai-xtech@w3.org>



Looking at the structure of an XML vocabulary for what can be gleaned
automatically gives rise to some ideas.

Some simple tests:
ensure that there are multiple layers in the tree - if it is a completely
flat tree then there will be little by way of containment.

look for recursive langauges - if an element allows a variety of content,
including itself, or if the tree is "fairly deep" then there is likely to be
containment. Looking at a handful of instance documents may show whether
these elements are commonly used. An example of a false negative would be
looking at the list elements of HTML - although they can do very good
containment they are not the basic units of content - that is header and p
elements.

checking for elements that can include pcdata at each level of a tree, or an
element that can include pcdata at multiple levels, suggests that there is
something that can provide summary/abstract information. The SVG elements
title, desc, and metadata and the HTML attribute title are examples of this.

to test for elements identifying important text content in DTDs, it may be
helpful to look for elements which are often used in places that allow CDATA
- the inline elements of HTML, for example. Of course this is fairly
difficult to test completely.

(None of these are failsafe, but nor is alt-testing in HTML. If they help
users then they are worthwhile...)

Cheers

Chaals



