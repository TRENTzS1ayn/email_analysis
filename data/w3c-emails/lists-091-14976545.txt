docno="lists-091-14976545"
received="Sat Dec 27 02:53:00 2003"
isoreceived="20031227075300"
sent="Sat, 27 Dec 2003 08:51:47 +0100"
isosent="20031227075147"
name="Charles McCathieNevile"
email="charles@sidar.org"
subject="Shared Responsibilities Re: Classification of AT in ATAG2"
id="8585B674-3841-11D8-BA3C-000A958826AA@sidar.org"
charset="ISO-8859-1"
inreplyto="OFCCA0E469.2CF9B8F6-ON86256E08.0066EA0E-86256E08.00699C32&#64;us.ibm.com"
expires="-1"

Cc:wai-xtech@w3.org
To: Phill Jenkins<pjenkins@us.ibm.com>



[to Xtech, Bcc AU, since this is very much cross-guideline discussion]

I agree with Phill that there is a question to be solved about where 
responsibilities lie between user agents and Web Content. I think that 
this isn't such an important question for authoring tools, since the 
answer for them is most sensibly "whatever WCAG and UAAG work out 
between them". This is important - there is no sense in expecting that 
people who use authoring tools do one thing, and people who follow WCAG 
by hand do something else, since that just leads to User Agents having 
to develop for two different sets of content. ATAG 1 seems pretty clear 
that it means to apply the principles of accessibility throughout the 
design cycle - having systems that don't allow people with disabilities 
to create content would fail one of the explicit goals of ATAG 1.

I agree also that what should be discussed first are the 
characteristics of a situation, but to get to those we need to begin in 
the real world with particular software, applications, etc. Likewise, 
to test these, we need to check different real-world situations. The 
abstraction just helps us get away from producing a list of good ideas 
lacking a coherent logical explanation for why some are included and 
others aren't.

And in particular I agree with Phill that checking across the 
guidelines for consistency is a crucial part of the development - when 
I was a WAI employee I tended to insist on it as a condition of 
participation in my areas of responsibility.

However there is also a need to recognise the overlap that the real 
world imposes. If developers all worked in harmony with each other and 
WAI, we could assume that real people could get tools with a particular 
set of characteristics. Naturally enough, this doesn't happen in 
practice, and people's tools are not so consistent. We can therefore 
either take account of this by building in some redundancy of 
responsibility - content should work in less-than-perfect tools (that 
are available currently) and tools should handle less-than-perfect 
content (since most content is). Or we can design for an ideal world, 
and leave real people to fall through the gaps between implementation 
and specification (and that is before taking into account that 
specifications themselves are less-than-perfect).

Ian Jacobs used to write about this - most notably in the W3C 
Recommendation User Agent Accessibility Guidelines - which I presume is 
familiar.

cheers

Chaals

On Friday, Dec 26, 2003, at 20:11 Europe/Rome, Phill Jenkins wrote:

> Jason wrote:
>> It is better to make guidelines conditional on the characteristics of 
>> software or content, rather than to design them around a 
>> classification thereof. The main reason for this preference is that 
>> such classifications tend to become artificial and problematic as 
>> technologies and practices evolve. Further, the purposes of 
>> guidelines are better served not by trying to categorize, but by 
>> clearly stating and documenting the preconditions under which 
>> individual guidelines or success criteria apply. This way, the 
>> guidelines continue to work when conventional categories break down.
>
> I understand your explanation to not try to create categories or to 
> use classification that eventually breakdown.  However, I think there 
> is also a problem in creating the "preconditions under which 
> individual guidelines or success criteria apply."  I think the 
> problem, or need, is to better define the boundary between the tool, 
> the content, and the browser and the overlap between the guideline 
> documents.  WCAG applies to the content, and ATAG applies to the tool, 
> but who is responsible when the content is the tool or is affected by 
> the tool?  For example, when pseudo content is entered by the 
> developer for the purpose of giving instructions to the tool regarding 
> the eventual content that is created and delivered to the browser - is 
> that pseudo content part of WCAG's guidelines, or ATAG, or both?  
> Think of a Web services scenario where the traditional roles of 
> author, tool, and content changes several times throughout out the 
> life cycle.  A software developer creates a tool called a portal 
> server that facilitates the delivery of web services (content and 
> tools) to application developers who create portal applications that 
> are used by end users that also have the option (or responsibility) to 
> edit and customize the tool and content independent of the browser 
> and/or AT customization.  We have been very diligent in defining the 
> guidelines for content, authoring tool, and browser, but sometimes 
> there are gray areas, or preconditions, that have yet to be clarified 
> across all three guidelines.  ATAG was designed primarily as guidance 
> to the developers of the tool or software.  And WCAG is inherently 
> part of ATAG because the resulting content produced by the tool needs 
> to comply, it's just *when* does the content need to comply? - at each 
> stage
> in it's life cycle, only when real people come in contact with the 
> content or tool's user interface, or only when it is finally delivered 
> to the end user?  Since many of us consider the full life cycle in WAI 
> guidelines, the UAAG guidelines come into the equation because some of 
> the responsibility relies on the browser (and also implied is the end 
> user).
>
> I think more guidance may be needed to direct developers (especially 
> in complex situations) to use and understand the guidelines in all 
> three documents.  We as WAI members need to also review all three sets 
> of guidelines to insure they in fact do not conflict and do in fact 
> provide all the preconditions needed to understand them correctly.  
> The developers of tools and content need to understand all three when 
> determining if they comply or if they need to comply.
--
Charles McCathieNevile                          Fundaci?n Sidar
charles@sidar.org                                http://www.sidar.org



