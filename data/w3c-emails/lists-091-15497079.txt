docno="lists-091-15497079"
received="Fri Nov  7 14:38:54 2003"
isoreceived="20031107193854"
sent="Fri, 07 Nov 2003 14:38:48 -0500"
isosent="20031107193848"
name="Al Gilman"
email="asgilman@iamdigex.net"
subject="[turingtest] Inviting discussion on Anti-Robot tests"
id="5.1.0.14.2.20031107142015.023e3ec0@pop.iamdigex.net"
charset="us-ascii"
expires="-1"


To:wai-xtech@w3.org


A white paper (draft) went up on the W3C Technical Reports page Wednesday.

  Inacessibility of Visually-Oriented Anti-Robot Tests: Problems and 
Alternatives
   http://www.w3.org/TR/turingtest/

Kelly Ford summed up the status in this are succinctly when he said

<quote
cite="mid:001301c3a4db$eaf2ce40$1e02a8c0@wingroup.windeploy.ntdev.microsoft.com">

This is worth a read if you haven't already explored the issue.  There's no
perfect solution to this problem today though in my opinion.

</quote>

So given that there is no perfect solution right now, can we do a little 
brainstorming?

Answers in any of the following areas are relevant:  Some points in each
area are already in the Working Draft.  Can you add any?  Use the keywords
in [brackets] below in your subject line for a jump-start framing your
comment.

[turingtest - squeaks]
More examples of where this kind of inaccessibility is creeping into practice?
What is it, precisely, that is problematical?

[turingtest - works]
What is out there and in use that partially works or works, but not well 
enough?

[turingtest - sky]
If you had a fresh sheet of paper and could design a solution from scratch, 
how should it ideally work?

[turingtest - steps]
What incremental changes would make things a bit better?

Al



