docno="lists-091-6986082"
received="Wed Aug 29 04:17:54 2001"
isoreceived="20010829081754"
sent="Wed, 29 Aug 2001 04:17:48 -0400 (EDT)"
isosent="20010829081748"
name="Charles McCathieNevile"
email="charles@w3.org"
subject="Re: ACCESSKEY-an actual strength in a perceived weakness"
id="Pine.LNX.4.30.0108290415390.28466-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="CEEMJDFDIKKPEJJLKBKJOELMCAAA.oedipus&#64;hicom.net"
expires="-1"

To:"gregory j. rosmaita"<oedipus@hicom.net>
cc: WAI Cross-group list<wai-xtech@w3.org>


Well, implementing it like that would be an improvement. I am hoping that
Amaya's implementation will be allowing this choice soon.

The weakness in the current spec (in my opinion) is that this is not clear.
Therefore it is possible to use two implementations that conform to the
current specification, and be confused about the behaviour because it is
different.

Cheers

Charles McCN

On Tue, 28 Aug 2001, gregory j. rosmaita wrote:

  the ambiguity in the HTML4 technical recommendation as to the "expected
  action" that a user agent should/must take when an "accesskey" is invoked is
  actually a strength, in that it enables the user to choose whether or not to
  "move focus to" the element for which an "accesskey" has been defined, or to
  "activate" the element for which the "accesskey" has been defined -- the
  minimum requirement for a user agent should be a configuration option which
  allows the user to select whether to establish focus on or to activate the
  element for which an "accesskey" has been defined; a more advanced (and far
  more useful/flexible) technique would be to endow the user with on-the-fly
  control over the setting -- a simple toggling mechanism of the sort that
  opera implements so well for providing control over the rendering of a
  document from the keyboard, but, of course, one which is invoked
  programmatically, so that it can be toggled/triggered in a device
  independent manner)



