docno="lists-094-15012407"
received="Tue Sep 19 05:33:43 2000"
isoreceived="20000919093343"
sent="Tue, 19 Sep 2000 11:33:31 +0200"
isosent="20000919093331"
name="Irene VATTON"
email="Irene.Vatton@inrialpes.fr"
subject="Re: Jamaya [Repost with word wrap] (was: RE: Hello All &amp; an Amaya   problem!)"
id="200009190933.LAA16979@tahiti.inrialpes.fr"
charset="us-ascii"
inreplyto="amayalist&#64;mail.com"
expires="-1"


To:"Marc Rubin, Jay's Island Software Development Solutions&Consulting"<amayalist@mail.com>
cc:www-amaya@w3.org, Edward Muller<emuller@PaineWebber.com>

> An Amaya-like html editor/browser, written in Java, sounds
> like an interesting project. Edward's idea of porting libwww
> might be a useful exercise, but to reproduce Amaya's user
> interface, a fresh code base might be more efficient for
> several reasons:

I suggest you to use the Jigsaw code instead of porting the libwww
code. But you're right, if you port to Java you have to drop
all the current Amaya's user interface.

> First, Amaya's architecture is complex, including layers such
> as Thot and some intermediate languages. Some of this may

I guess this is not the most complex. The thotlib API is clean
and can be easily adapted to a Java interface.

> duplicate functionality already present in the Java language
> and libraries. So we might glean some Amaya design details
> from its source code, rather than planning a straight port.

> Second, the w3c Amaya team have considered Java and concluded
> that it would be inappropriate for Amaya. Their reasons have
> been posted here a few times, and are available via a search
> for "Java" in the archives of both Amaya mailing lists
> (www-amaya and www-amaya-dev).

The lesson of our Java experiment is that we must have only one event loop.
Java interpretors have their own event management and we absolutely need
to follow their philosophy.
I guess it will work if you use the Thot code for building document
trees and view boxes and Java specific code for managing windows,
menus, etc.

> 
> One caveat is whether any Java-based browser can offer
> adequate performance? Java 1.3 is reputedly much improved in
> client-side speed, so we might test the latest versions of
> Jazilla (a Java port of Netscape's Mozilla), and Sun's own
> HotJava browser, to check real-world performance. 
> 
> I'd be interested in designing an initial proof-of-concept
> demo in Java, targeting key Amaya features such as integrated
> editor/browser, and multiple views. As an initial shortcut to
> porting libwww, I'd propose to write JNI wrapper functions for 
> testing access from Java. 
> 
> Any comments from the Amaya team, or from other interested
> developers? 
> 
> Marc Rubin
> http://www.jaysisland.com/
> 
> 
> At 01:20 PM 9/14/2000 -0400, Edward Muller wrote:
> >
> >I don't know of any single consoliated, open source .jar file 
> >that would provide all of the functionality of libwww... 
> > 
> >...my real goal, when I started thinking about this, was to 
> >port amaya to java... 
> > 
> >Anyway what does everyone think? 
> 

-- 
     Irene.



