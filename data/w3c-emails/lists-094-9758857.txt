docno="lists-094-9758857"
received="Thu Jan 20 02:45:37 2000"
isoreceived="20000120074537"
sent="Wed, 19 Jan 2000 18:59:27 -0500 (EST)"
isosent="20000119235927"
name="bglbv@my-deja.com"
email="bglbv@my-deja.com"
subject="Re: creating netscape/explorer-readable HTML with Amaya"
id="20000119210431.786.qmail@my-deja.com"
charset="iso-8859-1"
inreplyto="creating netscape/explorer-readable HTML with Amaya"
expires="-1"


To:www-amaya@w3.org

In reply to Reynier Peletier's query about how to make Amaya-generated
documents that use MathML readable with non-MathML compliant browsers,
I would suggest that he stick to old-fashioned approaches like latex2html
until such time as the browser market catches up.

I'm impressed by his statement that he was able to use Amaya's MathML
authoring support effectively. I still haven't got the hang of it. Could
he, or anyone else, explain succinctly how to quickly compose what I would
express in TeX as
$$ R^{\mu}\!_{\rho}{}^{\nu\rho} $$?
A stumbling block has been how to put two symbols in a superscript. 
Getting the indices to line up properly is also... interesting.

I'm also disappointed that Amaya has chosen to implement the "presentation"
variant of mathematical mark-up rather than the content-oriented one. I would
find the latter more natural (and more likely to be supported by aural
browsers, not to mention future versions of latex2html). I understand it's
only a prototype and that resources are limited, but still.

(Will the new box model Ir?ne is working on be good enough to match the
power of TeX's? _That_ would be interesting to have.)

Back to Reynier's question: most people know that the <img> HTML element
supports an attribute called "alt" that lets one supply an alternative
for situations where the image cannot be displayed. Is there an easy way
in XHTML to specify one or more "alt"ernatives for those browsers that
don't support MathML mark-up? (One such alternative might be an inline
image, but when using Lynx I'd actually prefer to see straight TeX or
similar mark-up since the image won't display either.) If it turns out
there is a good solution, maybe someone will actually implement it.



