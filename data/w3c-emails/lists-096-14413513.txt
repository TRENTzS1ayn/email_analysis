docno="lists-096-14413513"
received="Tue Mar  9 10:01:16 2004"
isoreceived="20040309150116"
sent="Tue, 9 Mar 2004 16:01:16 +0100"
isosent="20040309150116"
name="Chris Lilley"
email="chris@w3.org"
subject="When to use OpenGL"
id="1777245366.20040309160116@w3.org"
charset="us-ascii"
expires="-1"


To:www-amaya@w3.org


Hello www-amaya,

Given that Amaya can use OpenGL, this site about the benefits and
drawbacks of using OpenGL to accelerate Java2D may be of interest.

http://www.cs.umd.edu/hcil/agile2d/

>> OpenGL provides a number of interesting hardware acceleration
>> capabilities, including alpha blending, double buffering,
>> antialiasing, and texturing, which can be used to deliver
>> impressive two-dimensional graphical applications. There are
>> downsides. In particular, OpenGL does not perform well with very
>> large images, large quantities of text, or dynamic 2D polygons.
>> Some applications perform better under OpenGL acceleration. Others
>> perform significantly worse.

>> ... drawing simple lines and filling rectangles is significantly
>> faster under OpenGL. Most image operations are faster too. And as a
>> general trend, notice that operations involving alpha blending are
>> much faster under OpenGL.

>> Importantly, drawing generic shapes and text is sometimes slower
>> under OpenGL. The issue with general shapes can be somewhat
>> mitigated by using immutable shapes - Agile2D caches immutable
>> shapes using OpenGL display lists and can render them significantly
>> faster (on the order of 50,000 shapes per second using the same
>> test conditions above).

-- 
 Chris Lilley                    mailto:chris@w3.org
 Chair, W3C SVG Working Group
 Member, W3C Technical Architecture Group



