docno="lists-096-15990612"
received="Sat Apr 10 12:05:52 1999"
isoreceived="19990410160552"
sent="Sat, 10 Apr 1999 12:05:44 -0400"
isosent="19990410160544"
name="Rolf H. Nelson"
email="rnelson@w3.org"
subject="Re: [Laurent.Denoue&#64;univ-savoie.fr: Re: Yawas : new Web annotation   system]"
id="199904101605.MAA06840@tux.w3.org"
inreplyto="370CA32B.73B7D2BE&#64;univ-savoie.fr"
expires="-1"


To:Laurent.Denoue@univ-savoie.fr
CC:www-annotation@w3.org

>>>>> "Laurent" == Laurent Denoue <Laurent.Denoue@univ-savoie.fr> writes:

    >> However, if you do decide to leverage the XPointer work, I
    >> would advise embedding the XPointer inside a URL rather than
    >> embedding the annotation inside an XPointer and ending up with
    >> a new construct that is neither a URL nor an XPointer.

    > Ok, I've answered to your email, telling you that the current
    > prototype uses this kind of encoding :
    > http://localhost:port/url?note=...&comment=...&...

    > In fact, as you suggested, it would let people use a third party
    > server like www.yawas.com to see the annotation, and it would
    > not define a new thing which is not a URL, nor a XPointer.

    > But I really think that extending the current definition of
    > XPointers could be very nice.  I agree that Xpointers are good
    > to identify a subpart of a document, and I think next versions
    > of Yawas should use XPointers instead of the current
    > "minimalist" encoding.

    > I see two possibilities to encode an annotation (xURL) : -
    > extending the current XPointer definition to incorporate user
    > defined "tags", like "comment", "type", "date", "author", ...

    > This would lead to urls like :
    > http://www.yahoo.com/#STRING(0,"word",1)COMMENT("ok")AUTHOR("laurent")...
    > - or using the current ? notation to extend a XPointer This
    > would lead to urls like :
    > http://www.yahoo.com/#STRING(0,"word",1)?COMMENT=ok&AUTHOR="laurent"&...

    > Best regards, Laurent.


One problem is that this would collide with the semantics of existing
urls.  Most applications expect that http:// is followed by the host
name that the web resource lives on, followed by a path that holds
meaning only to the destination host, followed by a # and a fragment
identifier, where the fragment identifier points to a specific part of
a document but does not alter the document in any way.  

Also, in general, it's good to have a clean separation between the mechanism
you use to point to part of a document (which could be xpointer, or a
more minimalist encoding) and the mechanism to state what annotation
should be attached to that point.  That way you can mix and match
between annotation content encodings and pointing mechanisms.

-Rolf

-- 
| Rolf Nelson (rolf@w3.org), Project Manager, W3C at MIT
|   "Try to learn something about everything
|             and everything about something."  --Huxley

 



