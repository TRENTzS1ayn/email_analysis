docno="lists-096-16418879"
received="Fri Aug 27 19:11:01 1999"
isoreceived="19990827231101"
sent="Fri, 27 Aug 1999 19:12:13 -0400"
isosent="19990827231213"
name="Adrian Heilbut"
email="adrian.heilbut@utoronto.ca"
subject="Re: about CritLink and annotation systems in general"
id="37C71B4D.E389D8B9@utoronto.ca"
charset="us-ascii"
inreplyto="3.0.3.32.19990827151005.00b17b0c&#64;manitoba.bbn.com"
expires="-1"


To:www-annotation@w3.org

I've also been lurking for a bit, and thinking quite a lot about annotations.

Another possible starting point for prototyping is a product called Muffin
(http://muffin.doit.org), which is a GPLed, HTTP proxy in Java with very nice
interfaces for what it calls "filters," which allow one to modify documents
before sending them to the browser.  It actually already contains a very
rudimentary glossary filter, although one that only works with a local glossary
file.

On proxies vs. mediators: (partly to see if my understanding is correct...)

A mediator is a more abstract concept than a proxy.  A proxy is an
implementation mechanism for a mediator.  A proxy is any software that supports
the http proxy protocols.  The reason that the term "local proxy" makes sense
is that "proxy" is a well understood and universally supported mechanism for
piping http requests through an extra level of sofware.  Local just means that
it runs on the same machine as a browser.  If an annotation system is going
look like a proxy as far as the browser is concerned, it remains a proxy, even
if it mediates by modifying the data passing through.

Muffin, by this definition, is a local proxy.  Thirdvoice is not.  Both,
however, are local mediators.

Crit, a mediator,  is not a proxy, but it could be modified to be a "mediating
remote proxy", which would eliminate the funny URLs.

There is not going to be a single optimal implementation.  A remote mediator
might well be the optimal solution to annotating pages on a handheld device,
for example.  Proxy implementations suffer from the limitations of a web
interface, so the slickest software might well be a "client helper" like
Thirdvoice, or code integrated in Mozilla.

As Jon pointed out, the most important thing is to come up with a consistent
ontology for annotations, and then to specify annotation documents, ideally in
XML, that would be transported through HTTP.   It should be possible for the
description of an annotation to be completely independent of its
implementation.  The mediator would be responsible for finding annotations,
through indexes, subscriptions, or whatever.  (I like the idea of web pages
suggesting annotation channels.)

I'm going try to start hacking something together with Muffin, starting off
with a first shot at a very simple XML annotation spec.  I'm also be interested
in the workshop.


Cheers,

Adrian

--
adrian.heilbut@utoronto.ca
http://www.syncytium.net
tel: 416-781-5341
ICQ: 8932453



