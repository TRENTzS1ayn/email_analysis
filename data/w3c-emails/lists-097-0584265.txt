docno="lists-097-0584265"
received="Fri Mar 23 10:15:43 2001"
isoreceived="20010323151543"
sent="Fri, 23 Mar 2001 10:15:01 -0500"
isosent="20010323151501"
name="Ralph R. Swick"
email="swick@w3.org"
subject="Re: Questions about properties in examples."
id="200103231515.KAA26350@tux.w3.org"
charset="us-ascii"
inreplyto="LAEMKGDBDFAKFNKPFEKLOEKNDIAA.jason&#64;injektilo.org"
expires="-1"


To:"Jason Diamond"<jason@injektilo.org>
Cc:<www-annotation@w3.org>

Excellent questions, Jason.  You've obviously been
paying close attention to the details.

At 09:04 PM 3/20/2001 -0800, Jason Diamond wrote:
...
>Is the d:date property meant to indicate when the annotation was last
>modified? The RDF Schema at [2] includes an a:modified property, though.

Yes, we are using http://purl.org/dc/elements/1.0/date
to provide the date-last-modified.  The property
http://www.w3.org/2000/10/annotation-ns#modified
is a subproperty of http://purl.org/dc/elements/1.0/date
and we expect to use it in the future.

Our current implementation of the RDFdb service does
not know how to reason about property classes; that is,
it doesn't recognize the rdfs:subPropertyOf  relationships
in the schema.  So as a temporary work-around Amaya
is just storing the parent class property.

>The examples also include a d:creator property while the schema defines an
>a:author property. Are these interchangeable?

http://www.w3.org/2000/10/annotation-ns#author is
rdfs:subPropertyOf http://purl.org/dc/elements/1.1/creator
so they're not strictly interchangeable per RDF Schema
semantics but you can use a:author anywhere you can
use d:creator.

Again, our current implementation uses the parent
property due to the lack of inferencing support in our
current server.

>Finally, I'm curious as to why each example includes two r:type properties?
>Each annotation is declared as being of type a:Annotation and also of type
>http://www.w3.org/2000/10/annotationType#Comment (or #Question or #Example).
>All of the classes specified at [3] are sub classes of a:Annotation so isn't
>the first type property unnecessary?

same as above; no inferencing in the server.  Actually, in this
case we don't strictly need to store the explicit parent class
type relationship but for historic (old code that could be
improved but was low priority) reasons we've continued to
store the rdf:type a:Annotation relationship explicitly.

>[2]
>http://www.w3.org/2000/10/annotation-ns
>[3]
>http://www.w3.org/2000/10/annotationType


Thanks for asking these insightful questions, Jason.

-Ralph Swick
 W3C/MIT/LCS



