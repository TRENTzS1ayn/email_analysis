docno="lists-097-10119070"
received="Tue Dec 11 05:51:15 2001"
isoreceived="20011211105115"
sent="Tue, 11 Dec 2001 10:51:04 -0000"
isosent="20011211105104"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: WebOnt General Requirements Subgroup - Initial E-mail"
id="JAEBJCLMIFLKLOJGMELDGEKOCCAA.jjc@hplb.hpl.hp.com"
charset="US-ASCII"
inreplyto="p05101035b83ac4a918b9&#64;[65.212.118.193]"
expires="-1"

To:"Pat Hayes"<phayes@ai.uwf.edu>
Cc:"Jeff Heflin"<heflin@cse.lehigh.edu>,"Deborah McGuinness"<dlm@ksl.stanford.edu>,<ned.smith@intel.com>,<jeremy_carroll@hp.com>,<connolly@w3.org>,<jos.deroo.jd@belgium.agfa.com>,<herman.ter.horst@philips.com>,<hendler@cs.umd.edu>,<www-archive@w3.org>


Jeremy:
> >Justifications of Ns & ?s
> >-------------------------
> >N> data persistence
> >N> security
> >N> xml interfaces
> >?> internationalization
> >
> >are part of the metadata layer of semantic web architecture
> (RDF), not part
> >of the ontology layer.
Pat:
> I fail to follow this distinction. (I know it is taken from the
> 'layer cake' slide. I fail to follow it there as well.) RDF, for
> example, is surely a (simple) ontology language. Do y'all have some
> idea that metadata is somehow distinct from , and more primitive
> than, ontology? (?? In what sense?)
Pat:
> Maybe xml and internationalization (maybe), but I don't see any way
> to isolate security and data persistence issues from the ontology
> 'layer', wherever that happens to be.
>


I see RDF as giving primitives for describing any data, and the ontology
layer as describing constraints on how to use those primitives. These
constraints are themselves data, described in RDF, and subject to a set of
constraints!

Not exactly layers; & I certainly don't see TBL's layered picture as Gospel
Truth,; but it is a fair enough starting point.

Aspects of security that appear in database schemata include access control.
If we can include access control info in our ontology language that will be
good, but it is not a MUST HAVE for me. It seems that in order to define
such a thing we need to have a much better model of web security than we
currently have, so I think it is more profitable to duck it for now.

I understand persistence as about storing our data on a disk, or similar.
This seems to be a general problem for any RDF data and not ontology
specific. Unless we wish to annotate ontologies to say that this property
should be stored persistently, and this property not. (Again not a feature I
would die for).

I am suggesting a meta criteria that we should address issues that do not
appear for RDF; and not address issues for which an RDF solution would also
be a WebOnt solution. But I am not dogmatic, and having expressed my opinion
don't wish to get in the way of people coming up with good security or data
persistence solutions!

Jeremy



