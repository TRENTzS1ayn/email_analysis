docno="lists-097-10599965"
received="Fri Dec 14 10:52:11 2001"
isoreceived="20011214155211"
sent="Fri, 14 Dec 2001 10:51:58 -0500"
isosent="20011214155158"
name="Jeff Heflin"
email="heflin@cse.lehigh.edu"
subject="WOLREQS: R3. Ontology Evolution"
id="3C1A201E.1E4C3836@cse.lehigh.edu"
charset="us-ascii"
inreplyto="p0510030cb83c8786cab9&#64;[192.168.0.101]"
expires="-1"


To:herman.ter.horst@philips.com,dlm@ksl.stanford.edu,phayes@ai.uwf.edu,jos.deroo.jd@belgium.agfa.com,jjc@hplb.hpl.hp.com,ned.smith@intel.com,connolly@w3.org
CC:hendler@cs.umd.edu,www-archive@w3.org

In order to get the ball rolling, I'd like to start the discussion on
one of my pet candidate requirements -- ontology evolution. Currently,
Pat is the only one that is undecided on this issue, so I suppose this
is mainly addressed to him.

For reference, here is a snippet about the requirement:

R3. Ontology evolution 
      Ontologies can be changed over time and data sources can specify
which version of the ontology they commit to.

Issues: 
a) How does this differ from ontology extension (R2)? In R2, the
original ontology is unchanged. 
b) Pat believes that this needs a deeper analysis of the meanings of
URIs 

I think it is clear that we can't expect ontologies on the web to be
permanent/unchanging things. Over time, people will want to change
ontologies to correct errors, reflect new ways of thinking about things,
or to accomodate changes in the world itself (particulary those caused
by technology). While some changes may be perfectly satisfied by
extending ontologies, other changes will require that we withdraw
previous definitions. We may need to reorganize class taxonomies or
remove rules that were too restrictive. However, since other resources
depend on the ontology to define the terms used in them, simple changes
can have far-reaching side effects. A web ontology language must provide
features that allow these side effects to be minimized, or at least
controlled. Detailed discussion of some of these issues can be found in
Heflin and Hendler [1], Klein and Fensel [2], and Heflin [3 (Sect.
3.4)]. I think a few simple language features are useful here: the
ability to have each version exist simultaneously, the ability to
determine the sequence of ontology versions, the ability to specify if
one version is backwards-compatibile with another, and the ability to
specify if a term is deprecated (it is maintained only for
backwards-compatibility). Although this idea is still a little
researchy, I think it is essential.

Pat had raised the issue that this needs a deeper analysis of the
meanings of URIs. Pat, would you care to expand on this, so that we can
understand what you mean by it? Thanks!

Jeff


[1] J. Heflin and J. Hendler. Dynamic Ontologies on the Web. In:
Proceedings of the Seventeenth National Conference on Artificial
Intelligence (AAAI-2000). AAAI/MIT Press, Menlo Park, CA, 2000. pp.
443-449. http://www.cse.lehigh.edu/~heflin/pubs/aaai2000.pdf

[2] M. Klein and D. Fensel. Ontology Versioning on the Semantic Web. In
First International Semantic Web Working Symposium (SWWS'01), 2001.
http://www.semanticweb.org/SWWS/program/full/paper56.pdf

[3] J. Heflin. Towards the Semantic Web: Knowledge Representation in a
Dynamic, Distributed Environment. Ph.D. Thesis, University of Maryland,
College Park. 2001.
http://www.cse.lehigh.edu/~heflin/pubs/heflin-thesis.pdf



