docno="lists-097-10726106"
received="Sat Dec 15 08:46:39 2001"
isoreceived="20011215134639"
sent="Sat, 15 Dec 2001 14:43:29 +0100"
isosent="20011215134329"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: UPDATE: initial message concerning syntax"
id="OF66D949BA.5434D089-ONC1256B23.004AF46A@bayer-ag.com"
charset="us-ascii"
inreplyto="UPDATE: initial message concerning syntax"
expires="-1"

To:pfps@research.bell-labs.com
Cc:las@olin.edu,phayes@ai.uwf.edu,jjc@hplb.hpl.hp.com,Frank.van.Harmelen@cs.vu.nl,horrocks@cs.man.ac.uk,mdean@bbn.com,lynn.stein@olin.edu,www-webont-wg@w3.org,www-archive@w3.org,hendler@cs.umd.edu,connolly@w3.org


Hi Peter,

[...]
> If any of you would prefer not to have compatibility between RDF and a web
> ontology language, just let me know, I'm sure that that can be arranged.  :-)

I think SWOL is really nice.
In the RDF/RDFS MT we have, among other things, a bunch
of entailment rules. I think SWOL should just extend that
idea via additional SWOL entailment rules.
So using SWOL vocabulary brings extra SWOL entailment rules.
Let's start with a simple example:

  :Person a swol:Class; swol:disjointUnionOf ( :Man :Woman ) .

where the range of swol:disjointUnionOf a list of classes
(and it is always a list, even when it is a singleton)
Now we can entail stuff via following entailment rule
for all :C, :D, :L, :x

  { :C swol:disjointUnionOf :L . :L :member :D . :x a :D  }
    log:implies { :x a :C } .

(maybe we should also add { :L a swol:List } to the LHS)
and for :member one has also entailment rules
for all :x, :a, :b

  ( :x / :b ) :member :x .
  { :b :member :x } log:implies { ( :a / :b) :member :x } .

where ( :x / :y ) is syntactic sugar for
[ a swol:List; swol:first :x; swol:rest :y ]

I think if we can do that for all SWOL vocabulary
there should be no trouble for SWOL entailment
and actually for ANY entailment.
It is also interesting to use SWOL vocabulary for
RDFS entailment rules e.g.

  rdfs:subPropertyOf a swol:TransitiveProperty .
  rdfs:subClassOf a swol:TransitiveProperty .

instead of the RDF/RDFS MT rules rdfs5 and rdfs8.
(just as we already use log:implies) so it's
not hierarchically layered, but wild web like :-)

--
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



