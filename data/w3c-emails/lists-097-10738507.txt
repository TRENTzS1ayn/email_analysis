docno="lists-097-10738507"
received="Sat Dec 15 09:08:42 2001"
isoreceived="20011215140842"
sent="Sat, 15 Dec 2001 15:10:55 +0100"
isosent="20011215141055"
name="Frank van Harmelen"
email="Frank.van.Harmelen@cs.vu.nl"
subject="Re: UPDATE: initial message concerning syntax"
id="3C1B59EF.94F65C0F@cs.vu.nl"
charset="us-ascii"
inreplyto="20011214121720U.pfps&#64;research.bell-labs.com"
expires="-1"


To:pfps@research.bell-labs.com,phayes@ai.uwf.edu,jjc@hplb.hpl.hp.com,horrocks@cs.man.ac.uk,mdean@bbn.com,lynn.stein@olin.edu
CC:www-webont-wg@w3.org,www-archive@w3.org,hendler@cs.umd.edu,connolly@w3.org

Taken from Peter's "example" attachment:

> ** A normal way of specifying a primitive class:
> 
> <swol:Class rdf:about="Person">
>   <rdfs:subClassOf rdf:resource="Animal" />
>   <rdfs:subClassOf rdf:resource="SentientBeing" />
>   <rdfs:subClassOf>
>     <swol:toClass swol:property="SSN" swol:class="xsd:integer" />
>   </rdfs:subClassOf>
> </swol:Class>

Your proposed syntax get's closer to what I really would like in SWOL, namely a more frame-based look and feel.

The users that I talk to (and they are still of the sophisticated variety, in comparison to the Web community at large), simply want to say that 
"the slot Property SSN for the class Person is restricted to integer values". 

The statement
    <swol:toClass swol:property="SSN" swol:class="xsd:integer" />
get's pretty close to that. 
What still feels very unnatural to these people is having to state this 
as a subclass relationship (ie stating that Person is a subclass of all things with an integral SSN-property. 

People simply don't think of abstract constructions like
"the class of all things with an integral SSN-property", 
and can't get their head around having to model slot restrictions in this way. 

Clearly, I have no problem with the fact that slot-restrictions will be "compiled out" into subclass relationships in the semantics. 

The question is to what extend we can hide this in the syntax.

Your current proposal still makes this construction explicit in the syntax.
And the usual argument that "tools will hide this" only works partially, since (a) it is actually tool builders that get confused by this, and (b) experience tells us that people will end up looking at this stuff a fair amount anyway (at least in the early stages, which are in a way the most critical). 

So ideally, I would like a more radical departure from the DL-based constructions in the syntax, but I understand that this interferes heavily with your attempts to glue this on top of RDF Schema. In particular, a naive suggestion would be to replace:

>   <rdfs:subClassOf>
>     <swol:toClass swol:property="SSN" swol:class="xsd:integer" />
>   </rdfs:subClassOf>

with something like:

<swol:slotRestriction swol:property="SSN" swol:class="xsd:integer" />

But I guess this introduces exactly the problems on top of RDF that you were trying to get rid of?

Frank.
   ----



