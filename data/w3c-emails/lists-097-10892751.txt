docno="lists-097-10892751"
received="Tue Dec 18 18:58:10 2001"
isoreceived="20011218235810"
sent="Wed, 19 Dec 2001 00:57:30 +0100"
isosent="20011218235730"
name="Frank van Harmelen"
email="Frank.van.Harmelen@cs.vu.nl"
subject="Input from Enrico Motta"
id="3C1FD7E9.280841@cs.vu.nl"
charset="iso-8859-1"
expires="-1"


To: Mike Dean<mdean@daml.org>,www-archive@w3.org
CC: Enrico Motta<E.Motta@open.ac.uk>, Dieter Fensel<dieter@cs.vu.nl>, Guus Schreiber<guus@swi.psy.uva.nl>, Rudiger Klein<ruediger.klein@daimlerchrysler.com>


Mike,

Below a contribution from Enrico Motta for the DAML+OIL usage/experience input to the January meeting of the Web Ont WG.
It is a well-argued position, although I don't agree with everything.

My reaction in a nutshell is:

- even if the most useful contributions of DAML+OIL ("cardinality, type-restrictions") are "standard frame representations" , it is a non-trivial benefit that these come with a formal semantics (unlike many/most/all typical frame-based languages).

- I was genuinely surprised by the broad call for reification-style/meta-level features at the OntoWeb meeting last week, but the case was well argued by some in the audience. I will send my notes on this around in a minute.

- I fail to understand your example for this, though. I could understand if it said that the class medical-activity-target is defined to be a subclass of either generic-care-giver or patient, but that seems not what you want to say? Can you clarify?

- I don't understand that "daml+oil has no language to make statements about individuals". Presumably, you want to state other things about individuals than giving values to their properties. Can you give an example?

- I understand your (and Ruediger's) desire for n-ary relations.

(Dieter, Ruediger, Guus: Mike has agreed to collect all input for this effort)

Frank.
   ----


-------- Original Message --------
   Subject: More input for Ontoweb SIG on web languages
      Date: Fri, 14 Dec 2001 18:09:50 +0000
      From: Enrico Motta <e.motta@open.ac.uk>
        To: Frank.van.Harmelen@cs.vu.nl
        CC: dieter@cs.vu.nl, ruediger.klein@daimlerchrysler.com,schreiber@swi.psy.uva.nl
References: <BC630F6C39BFAB4CA1B35EFA0C7F217F0556FD@stan.fzi.de><3C17D7B1.9A25CDEC@mitre.org> <p05010406b83e44aa343e@[212.126.149.135]>

Hi all, PREMISE:This msg follows up up from teh discussions at the ontoweb sig last week and from the messages that Frank and Ruediger posted to the webont mailing list  (Frank wrote about the wrong 80/20 balance in DAML+OIL and Ruediger wrote about the need for a different kind of expressivity in DAML+OIL, esp. n-ary relations and some meta-level features).  Hence, it is primarily addressed to Frank, who is collecting the ontoweb input, but it is also cc-ed to other people who have raised 'concerns' about the current expressivity of daml+oil. BODY:Having just joined webont and spent a couple of days catching up with developments on DAML+OIL I am becoming convinced that while  DAML+OIL is clearly a very sophisticated KR language, much of this sophistication has been put in the wrong place. Specifically, the main strength of DAML+OIL (compared to other frame languages) is that one can construct quite complex class descriptions by combining operators, to specify union, intersection, complement and disjiointnes.  This is really what DAML+OIL is all about.  Everything else is standard frame representation (cardinality, qualified cardinality, type restrictions). However, it seems to me that if I want to go beyond simple frame representation, then what I would like to do is to be able to define relations, use them to make statements and link these statements to classes.  This basic feature is missing in daml+oil.  In addition, as Rudiger pointed out and as I also stated in my presentation at Ontoweb, in many real-world applications one needs the ability to refer to terms of the languages, especially classes (and ideally also relations). This is also missing in daml+oil. Indeed, it does not even make sense to talk about the latter without the former (i.e., daml+oil has no language to make statements about individuals, let alone about classes). Last week I showed this example, taken from one of the ontologies we have in webonto (def-class medical-activity-target () ?x  :iff-def (or (subclass-of ?x generic-care-giver   
ust be either a subclass of class generic-care-giver or a patient. I don't think there is any way I can express this kind of statements in daml+oil, even forgetting about the meta-level bits. At the same time, as rudiger pointed out, this kind of statements are ubiquitous in real-world applications and some languages like flogic, ontolingua and ocml do not seem to have any problem in coping with them. So, what about a language which is 80% consistent with daml+oil (probably we will have to remove operators such as complementof which are tricky to handle unless one follows a description logic approach), but which is extended with the ability to specify n-ary relations, which can be used to make statements about teh world and link them to classes, as in the example above?  It seems to me this approach would be much closer to the rdf philosophy (which is relation-centric) than the current version of daml+oil and would provide a much simpler basis for defining rule extensions than the currrent version of daml+ol. Any comments? Enrico PS Of course, there are other things that may be missing in daml+oil.  However, IMHO these two are the crucial ones.  --
Enrico Motta, PhD
Director,
Knowledge Media Institute,
The Open University,
Walton Hall, Milton Keynes
MK7 6AA, United Kingdom

Tel: +44 1908 653800
Fax: +44 1908 653169
http://kmi.open.ac.uk/~enrico



