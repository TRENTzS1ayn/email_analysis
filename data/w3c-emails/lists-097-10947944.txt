docno="lists-097-10947944"
received="Wed Dec 19 07:50:35 2001"
isoreceived="20011219125035"
sent="Wed, 19 Dec 2001 12:49:29 +0000"
isosent="20011219124929"
name="Enrico Motta"
email="e.motta@open.ac.uk"
subject="Re: Input from Enrico Motta"
id="p05100304b8462ebcc058@[212.67.109.60]"
charset="us-ascii"
inreplyto="3C1FD7E9.280841&#64;cs.vu.nl"
expires="-1"


To: Frank van Harmelen<Frank.van.Harmelen@cs.vu.nl>, Mike Dean<mdean@daml.org>,www-archive@w3.org
Cc: Enrico Motta<E.Motta@open.ac.uk>, Dieter Fensel<dieter@cs.vu.nl>, Guus Schreiber<guus@swi.psy.uva.nl>, Rudiger Klein<ruediger.klein@daimlerchrysler.com>

Frank,

some additional clarifications/observations.  These issues seem quite 
important to me, so please forgive me for sending quite a long msg.


At 12:57 am +0100 19/12/01, Frank van Harmelen wrote:
>Mike,
>
>Below a contribution from Enrico Motta for the DAML+OIL 
>usage/experience input to the January meeting of the Web Ont WG.
>It is a well-argued position, although I don't agree with everything.
>
>My reaction in a nutshell is:
>
>- even if the most useful contributions of DAML+OIL ("cardinality, 
>type-restrictions") are "standard frame representations" , it is a 
>non-trivial benefit that these come with a formal semantics (unlike 
>many/most/all typical frame-based languages).

Please don't get me wrong!  I did not say that "the most useful 
contributions of DAML+OIL are standard frame representations".  Au 
contraire I said that it is "clearly a very sophisticated KR 
language".  The problem is that for each language you have to choose 
among some trade-offs (in an ideal world, I would like to have 
everything that daml+oil provides plus everything else which is not 
provided, but this is just not possible).  So, in my msg I pointed 
out that with my experience as a developer of KB applications I would 
find it very difficult to live without the ability to link statements 
to class definitions and the ability to use classes (and possibly 
relations too) as objects of discourse (as it is allowed in 
Ontolingua).

>
>- I was genuinely surprised by the broad call for 
>reification-style/meta-level features at the OntoWeb meeting last 
>week, but the case was well argued by some in the audience. I will 
>send my notes on this around in a minute.

Happy to hear that you regard these meta-level concerns as valuable.

>
>- I fail to understand your example for this, though. I could 
>understand if it said that the class medical-activity-target is 
>defined to be a subclass of either generic-care-giver or patient, 
>but that seems not what you want to say? Can you clarify?

I have a KB which supports "semantic search" of web-based material 
and query answering  for medical guidelines. A typical query is 
something like "Who is this guideline (or guideline activity) 
targeted at?".  Answers can be: "to a doctor", "to a specialist in 
dermatology", "to a nurse", "to a paramedic", "to a patient", "to a 
non-professional carer", etc....So, the way we model is we have a 
hierarchy of care-givers

GENERIC-CARE-GIVER
    DOCTOR
      DERMATOLOGIST
      .......
    NURSE
    PARAMEDIC
    NON-PROFESSIONAL-CARE-GIVER

Of course these are all classes linked by subclass-of relations.  At 
the same time we want to say that the answer to teh above question 
must be one of these classes. The way we do it as follows:

(def-class medical-activity-target () ?x
   :iff-def (or (subclass-of ?x generic-care-giver )
                     (= ?x patient)))

That is we define the class of all possible targets for a medical 
activity.  The 'trick' here is that  medical-activity-target is a 
metaclass and that the instances of this class are all the subclasses 
of class GENERIC-CARE-GIVER, plus class PATIENT.

Clearly, to do this you need the ability to define metaclasses.

Incidentally the above example is almost exactly the same as the 
'modelling challenge' that Guus presented in Crete. Using the same 
approach as above, one can define the notion of natural-category as 
teh set of all subclasses of either chromatic-colour or neutral-colour

(def-relation natural-category (?x)
   :sufficient (or (subclass-of ?x chromatic-colour)
                   (subclass-of ?x neutral-colour)))

>
>- I don't understand that "daml+oil has no language to make 
>statements about individuals". Presumably, you want to state other 
>things about individuals than giving values to their properties. Can 
>you give an example?

Well, if I take teh example above and get rid of all the meta-level 
stuff, I get something like

(def-relation natural-category (?x)
   :sufficient (or (domain-level-relation ?x individual-1)
                          (another-domain-level-relation ?x individual-2)))

I don't really know how to express this in daml+oil. Of course, one 
possible answer could be that the above should be expressed as a rule 
and teh a rule language will be defined outside daml+oil.  However, 
what about the following example:

(def-relation natural-category (?x)
   :constraint (or (domain-level-relation ?x individual-1)
                          (another-domain-level-relation ?x individual-2)))

I don't see an obvious way to express this in DAML+OIL (I guess 
:constraint will have to become rdfs:domain and somehow I will have 
to translate  the statement (or (domain-level-relation ?x 
individual-1) (....individual-2))) into a class expression.

Hope this helps


Enrico


PS
>- even if the most useful contributions of DAML+OIL ("cardinality, 
>type-restrictions") are "standard frame representations" , it is a 
>non-trivial benefit that these come with a formal semantics (unlike 
>many/most/all typical frame-based languages).

[Sorry I cannot resist replying to the bit about formal semantics.....]

Pat Hayes wrote "The logic of frames" a long time ago and since then 
there has been a huge amount of research on formal frame-based 
representations. So, I think if we were to claim that the primary 
achievement of daml+oil was its formal semantics, we would be in big 
trouble!

PPS Personally I think that the great achievement of daml+oil on the 
formal side is not just that it has a formal semantics but that it 
has a formal semantics which builds as much as possible on RDF(S).

PPPS Nevertheless my hunch is that at the end of the day DAML+OIL 
will succeed if web application developers will find it useful, not 
because they will be impressed by its formal semantics.

>
>- I understand your (and Ruediger's) desire for n-ary relations.
>
>(Dieter, Ruediger, Guus: Mike has agreed to collect all input for this effort)
>
>Frank.
>    ----
>
>
>-------- Original Message --------
>    Subject: More input for Ontoweb SIG on web languages
>       Date: Fri, 14 Dec 2001 18:09:50 +0000
>       From: Enrico Motta <e.motta@open.ac.uk>
>         To: Frank.van.Harmelen@cs.vu.nl
>         CC: dieter@cs.vu.nl, 
>ruediger.klein@daimlerchrysler.com,schreiber@swi.psy.uva.nl
>References: 
><BC630F6C39BFAB4CA1B35EFA0C7F217F0556FD@stan.fzi.de><3C17D7B1.9A25CDEC@mitre.org> 
><p05010406b83e44aa343e@[212.126.149.135]>
>
>Hi all, PREMISE:This msg follows up up from teh discussions at the 
>ontoweb sig last week and from the messages that Frank and Ruediger 
>posted to the webont mailing list  (Frank wrote about the wrong 
>80/20 balance in DAML+OIL and Ruediger wrote about the need for a 
>different kind of expressivity in DAML+OIL, esp. n-ary relations and 
>some meta-level features).  Hence, it is primarily addressed to 
>Frank, who is collecting the ontoweb input, but it is also cc-ed to 
>other people who have raised 'concerns' about the current 
>expressivity of daml+oil. BODY:Having just joined webont and spent a 
>couple of days catching up with developments on DAML+OIL I am 
>becoming convinced that while  DAML+OIL is clearly a very 
>sophisticated KR language, much of this sophistication has been put 
>in the wrong place. Specifically, the main strength of DAML+OIL 
>(compared to other frame languages) is that one can construct quite 
>complex class descriptions by combining operators, to specify union, 
>intersection, complement and disjiointness.  This is really what 
>DAML+OIL is all about.  Everything else is standard frame 
>representation (cardinality, qualified cardinality, type 
>restrictions). However, it seems to me that if I want to go beyond 
>simple frame representation, then what I would like to do is to be 
>able to define relations, use them to make statements and link these 
>statements to classes.  This basic feature is missing in daml+oil. 
>In addition, as Rudiger pointed out and as I also stated in my 
>presentation at Ontoweb, in many real-world applications one needs 
>the ability to refer to terms of the languages, especially classes 
>(and ideally also relations). This is also missing in daml+oil. 
>Indeed, it does not even make sense to talk about the latter without 
>the former (i.e., daml+oil has no language to make statements about 
>individuals, let alone about classes). Last week I showed this 
>example, taken from one of the ontologies we have in webonto 
>(def-class medical-activity-target () ?x  :iff-def (or (subclass-of 
>?x generic-care-giver )     (= ?x patient))) which says: The target 
>of a medical guideline must be either a subclass of class 
>generic-care-giver or a patient. I don't think there is any way I 
>can express this kind of statements in daml+oil, even forgetting 
>about the meta-level bits. At the same time, as rudiger pointed out, 
>this kind of statements are ubiquitous in real-world applications 
>and some languages like flogic, ontolingua and ocml do not seem to 
>have any problem in coping with them. So, what about a language 
>which is 80% consistent with daml+oil (probably we will have to 
>remove operators such as complementof which are tricky to handle 
>unless one follows a description logic approach), but which is 
>extended with the ability to specify n-ary relations, which can be 
>used to make statements about teh world and link them to classes, as 
>in the example above?  It seems to me this approach would be much 
>closer to the rdf philosophy (which is relation-centric) than the 
>current version of daml+oil and would provide a much simpler basis 
>for defining rule extensions than the currrent version of daml+oil. 
>Any comments? Enrico PS Of course, there are other things that may 
>be missing in daml+oil.  However, IMHO these two are the crucial 
>ones.  --
>Enrico Motta, PhD
>Director,
>Knowledge Media Institute,
>The Open University,
>Walton Hall, Milton Keynes
>MK7 6AA, United Kingdom
>
>Tel: +44 1908 653800
>Fax: +44 1908 653169
>http://kmi.open.ac.uk/~enrico


-- 
Enrico Motta, PhD
Director,
Knowledge Media Institute,
The Open University,
Walton Hall, Milton Keynes
MK7 6AA, United Kingdom

Tel: +44 1908 653800
Fax: +44 1908 653169
http://kmi.open.ac.uk/~enrico



