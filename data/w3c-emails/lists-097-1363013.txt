docno="lists-097-1363013"
received="Fri May 18 08:43:41 2001"
isoreceived="20010518124341"
sent="Fri, 18 May 2001 14:43:20 +0200"
isosent="20010518124320"
name="Jose Kahan"
email="jose.kahan@w3.org"
subject="Re: Annotea And EARL"
id="20010518144320.E364@inrialpes.fr"
charset="us-ascii"
inreplyto="01aa01c0de6b$c6b08ce0$08ed93c3&#64;z5n9x1"
expires="-1"

To:"Sean B. Palmer"<sean@mysterylights.com>
Cc:www-annotation@w3.org


Hello Sean,

[About merging EARL and annotea]

Thanks for your message.

I browsed the EARL URLs you gave me. I think that what you are requesting
is a way to be able to use structured annotations in Annotea.

IMO, Merging EARL with Annotea would require having an RDF object of type
EARL or some other type that would include some or most of the Annotea
properties, as well as the EARL properties. See it as an annotation whose
type is described with EARL.

It's very use to combine properties from different RDF schemas. We are
currently working on adding discussion threads to Annotea and that's what
we just did. This didn't require any change on the server side, because 
we're using a generic RDF dbase. WE may have to add a new protocol query
to make a more optimized query for threads, but that would be a minor change.

Most of the work has been on the client side, where we had had to make Amaya
be able to interpret the semantics of threads. Note that adding new RDF
properties won't break other Annotea clients which are based on an RDF parsers.
That's because they would just ignore the properties they don't know
anything about (they should save those properties back to the server if
they want to save a modification of some properties, though.)

One thing we had been talking about is to be able to show RDF properties
that we don't know how to interpret. That would mean that we could browse
the EARL properties for a given resource, but, as we wouldn't know the
semantics, we couldn't modify them or attach new properties. In the long
term, it would be nice to use an Annotea client to be able to attach any kind
of RDF property, but we are not there yet.

Another thing about EARL... as far as I understood, you're considering
storing the EARL reports on-line. I think you should also consider just sending
them back to the user. For example, you submit a page to a WAI validator and
get back an automatic report consisting of a list of annotations that link
parts of the page to some WAI guidelines, that explains where they are
WAI problems. The report only exists in the answer from the WAI validator.
This is interesting because if you modify the page to enhance its WAI
aspects, some of the annotations would not be valid anymore. If you store
the report on-line, it would become quickly obsolete.

Of course, my reply here isn't the absolute, definitive reply :) Comments,
flames, and feedback are welcome.

-jose



