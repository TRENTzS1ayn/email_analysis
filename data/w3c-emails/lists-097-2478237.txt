docno="lists-097-2478237"
received="Wed Jan  9 18:16:26 2002"
isoreceived="20020109231626"
sent="Wed, 09 Jan 2002 18:15:39 -0500"
isosent="20020109231539"
name="Ralph R. Swick"
email="swick@w3.org"
subject="Re: [FYI] More annotation support in the latest Amaya release"
id="200201092316.SAA27646@tux.w3.org"
charset="us-ascii"
inreplyto="4.3.2.7.1.20020109200233.00b1ba30&#64;pop3.demon.co.uk"
expires="-1"


To: Matthew Wilson<matthew@mjwilson.demon.co.uk>
Cc:www-annotation@w3.org

At 08:08 PM 1/9/2002 +0000, Matthew Wilson wrote:
...
>At the moment Annozilla (my Mozilla client) is confused by the RDF it's 
>getting back from requesting a list of annotations for a page, presumably 
>because of the changes to the schema.

oops, that's unfortunate.

>Annozilla iterates over all RDF resources assuming them to be annotations. 

no need to make assumptions -- in RDF, those things that say they
have type Annotation are annotations.  You need not assume that
anything else is, unless you want to get into deduction (which is
on our future horizon, and we'd be happy to talk about but we're
not doing that yet.)

>The new RDF served up includes things like
>
>       <example.org:huh
>        xmlns:example.org="http://example.org/">
>          <r:Description>
>             <a:Email
>              r:resource="mailto:matthew+test@mjwilson.demon.co.uk" />
>             <a:Family>Wilson</a:Family>
>             <a:Given>Matthew</a:Given>
>          </r:Description>
>       </example.org:huh>

yep.  This is not exactly what we had intended; a bug snuck in
at the last moment.  The 'http://example.org/huh' property is
not defined anywhere.  It was supposed to be another dc:creator
property.  But despite this error, this RDF is syntactically correct.
No RDF parser should be too upset by it, though the '.'s in the
namespace prefix might be considered a little unusual.

>which appears to be causing additional resources to be created.

Yes, it defines another property of an annotation and the value
(object) of that property is an anonymous node about which
you are told three properties.  If you are not prepared to handle
this additional node and its properties, you are free to discard
them.  Parsing this whole thing as a traditional fixed DTD is
the wrong thing to do.  That has always been the case for RDF.

> I can hack 
>around the problem by ignoring resources without an <a:body/> property (is 
>that right right term?

I don't understand the relationship between lack of a body property
and the extra property above.  Annotations are not required to have
a body property.  But your client could choose to ignore annotations
that do not have bodies if you wish.

>The bookmarklet servlet seems to be confused as well. Any advice?

we'll investigate that.



