docno="lists-097-5283229"
received="Mon Nov 18 14:41:12 2002"
isoreceived="20021118194112"
sent="Mon, 18 Nov 2002 13:41:09 -0600"
isosent="20021118194109"
name="Doug Daniels"
email="rainking@rice.edu"
subject="Re: robustness of string matching XPointers"
id="3DD94255.7010006@rice.edu"
charset="ISO-8859-1"
inreplyto="20021118161912.GD4164&#64;inrialpes.fr"
expires="-1"


To:jose.kahan@w3.org
CC:www-annotation@w3.org


We can use the predicate [ n ] to filter out which match we desire, but 
this method can still produce confusion if another copy of the string 
we're trying to match is inserted before the desired match point. 
If I have time, I'm going to look at creating and resolving 
string-matching xpointers.  I wrote some code a long time ago to do this 
stuff, but I scrapped it when Amaya couldn't resolve the output.

I think the Amaya method of informing the user of orphaned annotations 
is a good manual solution to the problem.  It would be nice to have an 
automated solution one day, but this requires versioning information to 
be stored somewhere, either in the document or the annotation.  It's a 
difficult problem.

There is one thing that I'd suggest.  Amaya pops up an alert box 
whenever it finds orphaned annotations on a page.  It'd be nice if that 
alert box would only appear for users who can actually fix the problem. 
The quantity of pages with orphaned annotations should steadily increase 
with the running time of an annotations server.  This in turn will 
increase the number of alert boxes, which should decrease the amount of 
attention paid to such alerts.  If the alert could only come up for the 
author of the annotation, this could be beneficial.

Doug

Jose Kahan wrote:

> For your proposed XPointer expression for annotations, it does seem to
> make annotations more robust to a number of changes. You may wish to 
> limit it to the nth instance of the pattern, rather than have XPointer 
> function
> resolve to more than one location.
>
> -jose
>



