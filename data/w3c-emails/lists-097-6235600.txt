docno="lists-097-6235600"
received="Sat Mar  8 05:48:41 2003"
isoreceived="20030308104841"
sent="Sat, 8 Mar 2003 11:48:39 +0100"
isosent="20030308104839"
name="Reto Bachmann-Gmuer"
email="reto@gmuer.ch"
subject="Re: Annotea's context property"
id="8593A93A-5153-11D7-9700-003065CDBE5C@gmuer.ch"
charset="ISO-8859-1"
inreplyto="3E678EA9.4080204&#64;ece.rice.edu"
expires="-1"

To:www-annotation@w3.org



-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Gioved?, 6 Mar 2003, alle 19:08 Europe/Paris, Brent Hendricks ha 
scritto:
> I don't mean to be a stick-in-the-mud, but to be *usefully* 
> interoperable, standards need to be explicit.  If the Annotea protocol 
> says "This property can be a resource or a literal, do what you want", 
> then we'll end up with a myriad of incompatible client implementations 
> that can't read each others' annotations.  This defeats the point of 
> having a standard to begin with.  I would much rather see an Annotea 
> spec/schema that explicitly lays out a basic set of well defined 
> properties *and* their allowed values.  Anyone who implemented that 
> would be able to claim "Annotea X.Y" compliance.  Anyone wishing to 
> extend the protocol could add properties to the a:Annotation resource, 
> and clients that don't understand the extensions could just safely 
> ignore them, confident that they're still getting the core 
> functionality.
I think it's the beauty of RDF to allow interoperability even with only 
partial understanding. Of course the use of interaction is higher the 
bigger the common vocabulary, however flexibility is greater if this 
vocabulary is made up from a set of schemas rather than one 
comprehensive schema. Ideally the annotea schema should define nothing 
that can be expressed with another schema and should avoid references 
to other schema where the user could possibly choose between functional 
equivalent schemas.
The apparent disadvantage of this is that an annotea/foaf and an 
annotea/vcard client dont' understand the author attribute created by 
the other, but this transparent and partial incompatibility is still 
much better than if one would have to replace the annotea standart 
because she need to improve the possibility of describing the author 
(e.g. anonymous unambiguous identification). Not to forget that keeping 
the annotea protocol small, clients can develop and exchange much more 
information that initially planned without the servers having to know 
anything about this development (think of how the web would have 
developed if http would have constrained the content to be hypertext). 
Furthermore, by the use of inference engines I guess that it should be 
easy to write client that support various schemas, even if I write my 
client with only annotea/vcard in mind it should still be able to 
partially handle annotea/foaf because of concluded statements the 
inference engine added to the model.

cheers,

reto
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (Darwin)

iD8DBQE+aG2jD1pReGFYfq4RArB5AJ9/j4g82+QVrX8Irq86oyQ8zo1tqQCfRiLO
Xrs57H/LFCTKuG24otnJD2o=
=PRxi
-----END PGP SIGNATURE-----



