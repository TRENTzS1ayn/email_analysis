docno="lists-097-8455205"
received="Sat Aug  4 12:08:45 2001"
isoreceived="20010804160845"
sent="Sat, 04 Aug 2001 17:05:56 +0100"
isosent="20010804160556"
name="Brian McBride"
email="bwm@hplb.hpl.hp.com"
subject="RDFCore F2F IRC Log 1/Aug/2001"
id="3B6C1D64.39BCEA09@hplb.hpl.hp.com"
charset="us-ascii"
expires="-1"


To:www-archive@w3.org

16:51:07 <logger_1> logger_1 has joined #rdfcore
16:51:07 <sagan.openprojects.net> Users on #rdfcore: logger_1 DanC_ Aaron-F2F 
16:51:09 <dajobe> dajobe has joined #rdfcore
16:51:19 <Aaron-F2F> * Aaron-F2F waves to logger_1
16:51:35 <dajobe> who is op here and can set topic?
16:51:39 <Aaron-F2F> Danbri
16:54:04 <Aaron-F2F> Issue List: http://www.w3.org/2000/03/rdf-tracking/
16:58:20 <danbri-f2f> danbri-f2f has joined #rdfcore
17:01:06 <gk> gk has joined #rdfcore
17:01:45 <gk> gk is now known as GK-f2f
17:03:20 <DanC_> er... none of us has op privileges. we can't kick out wierdos
that wander in. if that bothers anybody, we'll all have to leave and rejoin
17:03:34 <DanC_> I can't set the topic
17:03:51 <DanC_> ====== EricM presents T-shirts, courtesy of HP
17:04:01 <Aaron-F2F> Only danbri can set the topic, danc.
17:04:06 <Aaron-F2F> I came in first and it deopped me.
17:04:08 <danbri-f2f> that's my fault or the opennetworks bot; the password i
set i either forgot or it broke
17:05:12 <danbri-f2f> * danbri-f2f suggests we might move to #rdfcore-meet
17:05:12 <Aaron-F2F> danbri, you probably need to change your nick to plain
danbri
17:05:24 <DanC_> the logger is here, though, danbri
17:06:05 <barstow> barstow has joined #rdfcore
17:06:12 <DanC_> * DanC_ thanks the host for the great net connectivity
17:06:16 <Aaron-F2F> Aaron-F2F is now known as AaronSw
17:06:43 <DanC_> BLURB: RDF Core WG convenes in Sebastepol CA
17:07:17 <DanC_> er... where's the chump?
17:07:23 <DanC_> meeting home: http://www.w3.org/2001/sw/RDFCore/20010801-f2f/
17:07:25 <AaronSw> in the other room, DanC
17:07:25 <dajobe> not on this channel
17:07:38 <dajobe> we could move there but might get distracted
17:07:38 <DanC_> * DanC_ blushes... wrong channel
17:08:27 <DanC_> * DanC_ suggests Somebody make a link from the meeting home
page to the log of this channel
17:09:34 <danbri-f2f> dave, url for logs?
17:09:37 <AaronSw> see http://ilrt.org/discovery/chatlogs/rdfcore/2001-08-01.txt
17:09:57 <dajobe> * dajobe scribes
17:10:05 <AaronSw> ---- ROLL CALL
17:10:05 <dajobe> bwm introductions
17:10:22 <dajobe> +art barstow
17:10:24 <AaronSw> Art Barstow, W3C, visiting engineer from HP
17:10:28 <dajobe> +dan connolly
17:10:43 <dajobe> jos de roos
17:10:45 <dajobe> dave beckett
17:10:47 <dajobe> rael dpnrfest
17:10:49 <dajobe> dan brickley
17:10:53 <dajobe> martyn horner
17:10:54 <dajobe> pat hayes
17:10:57 <dajobe> frank manola
17:11:02 <dajobe> ron daniel
17:11:12 <dajobe> sergey melnik
17:11:23 <dajobe> kwon, national ., korea
17:11:25 <dajobe> mike dean
17:11:27 <dajobe> eric miller
17:11:31 <dajobe> graham klyne
17:11:40 <dajobe> stephen p
17:11:50 <dajobe> jan grant
17:11:53 <dajobe> aaron swartz
17:12:00 <dajobe> brian mcbride (chair)
17:12:43 <dajobe> ... logistics ...
17:14:52 <danbri-f2f> * danbri-f2f adds quick link to raw irc log from meeting
page, http://www.w3.org/2001/sw/RDFCore/20010801-f2f/
17:14:53 <dajobe> f2f page:
17:15:06 <dajobe> bwm: intro
17:15:21 <dajobe> agenda review
17:16:47 <dajobe> first section - context from users of rdf, get some problems
from apps
17:16:50 <dajobe> (bwm)
17:17:16 <DanC_> agenda review:
http://www.w3.org/2001/sw/RDFCore/20010801-f2f/#agenda
17:17:52 <dajobe> changed to proposed schedule
17:18:47 <dajobe> forfeit if we actually get through the schedule...
17:18:58 <dajobe> emiller goads us to complete it :-)
17:19:10 <dajobe> review of Wed
17:19:29 <dajobe> gk: review of issues list?
17:19:59 <dajobe> emiller: user stories can help us prioritise
17:20:17 <dajobe> artb: non-listed issue - xml:lang
17:20:41 <dajobe> bwm: progress made but will make in context of parsetype
literal discussions rather than alone
17:21:20 <dajobe> END REVIEW OF AGENDA
17:21:55 <dajobe> rael dornfest RSS
17:22:23 <dajobe> rss is a syndication format and site descr. format
17:22:39 <DanC_> who's got the display? how about putting some RSS sites/stuff
on screen?
17:22:41 <dajobe> review of rss 1.0 history
17:22:52 <dajobe> 1.0 now out
17:23:03 <dajobe> interesting rss1.0 places used
17:23:11 <dajobe> rss091 used more but uptake slowing
17:23:37 <dajobe> examples slashcode
17:23:51 <dajobe> uses a lot of rss1.0 behind it to return all query results
17:23:52 <DanC_> slashcode is an rss 1.0 example, that is
17:24:02 <dajobe> see http://slashcode.com/ (or .org?)
17:24:09 <dajobe> rpc-like interfaces
17:24:22 <dajobe> http://slashcode.net/slashcode.rss is rss1.0 version
17:24:27 <dajobe> useperl.org
17:24:40 <dajobe> any data-peeks are avaialble as rss1.0
17:24:45 <DanC_> * DanC_ notes the creator is an email address... as if the
mailbox created the page.
17:25:07 <dajobe> ximian's red-carpet package update system 
17:25:13 <dajobe> very close to rss1.0
17:25:22 <dajobe> talking to them
17:25:22 <AaronSw> send them an email, DanC ;-)
17:25:41 <dajobe> subscribe to package feeds of softrware updates
17:25:43 <DanC_> that would oblige me to answer any questions they have. I have
previous obligations.
17:26:10 <dajobe> axkit.org - matt sergent
17:26:10 <dajobe> axkit app - take23.org
17:26:10 <Seth> Seth has joined #rdfcore
17:26:12 <dajobe> ... site for mod_perl and all feeds built out of rss 1.0
17:26:17 <DanC_> anybody sitting near EricM? can you paste the addresses of the
pages he's showing?
17:26:21 <dajobe> to create the portal
17:26:26 <AaronSw> http://take23.org/
17:26:40 <dajobe> RSS BOF at OSCON - yahoo! finance using rss1.0 internally
17:27:07 <dajobe> ... spoke to about exporting that, need consider business
issues
17:27:28 <dajobe> OSCOn .. ave wrigely ITN news feed and used a lot internally
17:27:34 <dajobe> fascinating uses ...
17:27:42 <dajobe> rael's meerkat - meerkat.oreillnet.com
17:27:44 <AaronSw> http://meerkat.oreillynet.com/
17:27:53 <dajobe> aggregator of tech-related feeds
17:28:16 <dajobe> various views as rss, n3 now!
17:28:29 <dajobe> AaronSw: can you do url-pasting for me
17:28:47 <dajobe> rael demos n3, rss versions
17:28:56 <AaronSw> sure, dajobe
17:28:56 <dajobe> can search by dc attributes
17:29:11 <AaronSw> http://meerkat.oreillynet.com/?_fl=n3 - N3 version
17:29:17 <AaronSw> http://meerkat.oreillynet.com/?_fl=rss10 - rdf version
17:29:18 <dajobe> demo of seraching
17:29:23 <AaronSw> can also search by dublin core data
17:29:31 <dajobe> shows dc createor and language, format etc.
17:29:39 <dajobe> ... lots going on in rss1.0 land..
17:29:51 <dajobe> .. good thing, easy gateway into rdf
17:30:02 <dajobe> ... without making them scream
17:30:24 <dajobe> problems: ns-prefixes sort-of
17:30:44 <dajobe> like to see more rdf engines that can allow him to make
meerkat an rdf system
17:30:47 <dajobe> e.g. provenance
17:31:04 <dajobe> where did e.g. a certain title came from
17:31:18 <dajobe> would be greate to get such an engine out there
17:31:38 <dajobe> can't build it at present with curent tools
17:31:49 <dajobe> don't caare about reification for this app
17:32:20 <dajobe> issue of squishing is greate, need to unsquish
17:32:38 <dajobe> danc: tims' python code knows about provenance
17:32:56 <dajobe> rael: daves' redland big enough needs provenance
17:33:09 <dajobe> rael: impl. stuff people can use and get it right later. 
hackers aren't reading the spec
17:33:22 <dajobe> END RAEL
17:33:37 <dajobe> frankm: if we take that approach...
17:33:55 <dajobe> ... need to make sure we don't have to keep that stuff in if
we later try to do it right...
17:34:12 <dajobe> emiller: would love to have that problem
17:34:32 <dajobe> frankm: keep in mind balancing act
17:34:59 <dajobe> rael: would like something just to work, if later "correct"
api turns up later, great
17:35:29 <dajobe> nat torrington (perl6) - got contact, no tool to show him
17:35:39 <dajobe> jos: syndication - what do you mean?
17:35:55 <dajobe> rael: an xml representation of your site that someone can take
up and carry off (basically)
17:36:10 <dajobe> ... site description.  Aggregating.  syndicating links
17:36:21 <dajobe> RON DANIEL - PRISM
17:36:32 <dajobe> ron: a metadata spec for the magazine publishing industry
17:37:02 <dajobe> ... a spec for exchanging descriptive metadata
17:37:11 <dajobe> came from big project from mag publisher
17:37:20 <dajobe> ... intergrating materials from multiple mags
17:37:34 <dajobe> ... found hard.  wanted to reuse content
17:37:56 <dajobe> ... had no metadata.  formed prism group june 99
17:38:15 <dajobe> founders are time, getty, sothebys, lots (see web site)
17:38:20 <dajobe> released 1.0 april 2001
17:38:26 <AaronSw> http://www.prismstandard.org
17:38:41 <dajobe> working onimpl. projects
17:39:03 <dajobe> goal is to help pubs deal with customers to do better search,
personalisation, aleters, better portals, intranets
17:39:19 <dajobe> ... for print and web.  also for internally
17:40:06 <dajobe>  Arno Gourdol from adobe enters...
17:40:18 <dajobe> rond: rights management
17:40:43 <dajobe> interested in much simpler problems too
17:41:25 <dajobe> example of vogue syndication of content to france...
17:41:51 <dajobe> ... marking up bits of content using PDF annotations by hand
...
17:42:16 <dajobe> ... contract searches, messy, sucks 
17:42:24 <dajobe> interopability of toos to use/create metadata
17:42:27 <dajobe> s/toos/tools/
17:43:03 <crunch> crunch has joined #rdfcore
17:43:14 <dajobe> other aps for business needs
17:43:30 <dajobe> ... prism spec for marking companies, places, people
17:43:35 <crunch> crunch has left channel
17:43:46 <dajobe> ... stock ticker symbols 
17:44:05 <dajobe> ... also can be used by business (ad sales) as well as web
site 
17:44:41 <dajobe> ... assisting ad sales; additional applications will emerge
17:44:54 <dajobe> prism designed not to reinvent wheel - using xml, rdf, dublin
core
17:45:05 <dajobe> recommends iso8601, country couds, industry codes
17:45:20 <dajobe> standard is for interchange
17:45:32 <dajobe> no behaviour specified
17:45:50 <dajobe> ... mona lisa problem: GIF image of mona lisa.  Who is
creator?
17:46:09 <dajobe> ... leonardo, photographer, scanner, file formatter ...
17:46:15 <dajobe> ... can say any of these
17:46:45 <dajobe> ... so who cares, people can search for leo
17:46:56 <dajobe> .... overview of contents
17:47:15 <dajobe> ... controlled vocabs
17:47:30 <dajobe> ... vendors++
17:47:41 <dajobe> problems: what is the audience of the rdf spec?
17:48:03 <dajobe> ... not for end users.  Intended users are metadata designers
17:48:17 <dajobe> ... who are designing such things as prism and solving things
for particiular reasons
17:48:33 <dajobe> ... e.g. doing structured values - how?
17:48:49 <dajobe> problem: difficult to extend if you don't know what is going
on
17:49:42 <dajobe> example of editmode
17:49:50 <dajobe> and might have been modelled wrong
17:50:04 <dajobe> END RON
17:50:32 <dajobe> danc: you are using lots of namespaces.  Did they have issues
with lots of nspaces?
17:50:53 <dajobe> rond: publishers didn't care if it did the job ...
17:50:58 <dajobe> ... tech group were OK with it
17:51:23 <dajobe> danc: prism and newsml?
17:51:38 <dajobe> rond: got along pretty OK
17:51:51 <dajobe> ... taking prism elements so can be used in newsml
17:51:58 <dajobe> emiller: how about prism in rss?
17:52:12 <dajobe> rond: emiller noted this
17:52:33 <dajobe> emiller: oclc robots noting rdf told emiller
17:52:40 <dajobe> ... noted news feeds appearing
17:53:01 <dajobe> ... can syndicate prism with rss easily
17:53:14 <dajobe> ... unexpected and nice pleasure
17:53:19 <dajobe> MIKE DEAN - DAML+OIL
17:54:12 <dajobe> users of daml+OIL
17:54:26 <dajobe> ... fundede researchers under daml program and eu sw program -
ontoweb and wonderweb, ....
17:54:28 <DanC_> * DanC_ thinks prism is nifty... should be more visible from
W3C RDF pages
17:54:39 <dajobe> prism - yeah
17:55:11 <dajobe> ... lots of volunteers
17:55:22 <dajobe> ... lots of students
17:55:30 <dajobe> biomed community
17:55:50 <dajobe> near term users: other darpa programs, military users
17:56:10 <dajobe> Semantic Web for military 
17:56:46 <dajobe> ACTION MikeD: mention public URL
17:57:01 <dajobe> daml+oil apps
17:57:04 <dajobe> lots of tools
17:57:13 <dajobe> lots of specific tools
17:57:40 <dajobe> lifecycle- language, ontologies, back end etc.
17:57:58 <dajobe> (mikeD speaking BTW)
17:58:13 <dajobe> ... rather loose categories
17:58:35 <dajobe> ... kind of worried about front-end empasis, but good to see
more back end stuff emerging
17:58:44 <dajobe> ... reasoning
17:58:58 <dajobe> ... lots of groups in project doin reasoning
17:59:37 <dajobe> end-to-end apps
17:59:37 <dajobe> ... see http://www.daml.org/applications/
17:59:50 <dajobe> ... ittalks
17:59:56 <dajobe> "dog fooding"
18:00:16 <dajobe> web pages generated from DAML, via XSLT
18:00:33 <dajobe> requests from DAML to RDF-Core WG
18:02:32 <dajobe> ... coordination points doc - Frank vH, Peter P-S, ..
18:02:32 <dajobe> bwm: key things?
18:02:32 <dajobe> miked: schema domain & ranges, subclass
18:02:32 <dajobe> ... daml+oil doesn't address reification
18:02:32 <dajobe> ... would liek to use tagging of sources of information
(provenance)
18:02:39 <dajobe> ... not quoting 
18:02:54 <dajobe> phayes: careful with clumps
18:03:02 <dajobe> mike: individual arcs/statements
18:03:23 <dajobe> phayes: tagging 1 statement, both OK
18:03:35 <dajobe> miked: rest of doc things are user experience things being
addressed
18:03:58 <dajobe> frankm: some daml+oil things were done some way that clashes
are obvious indicating required changes
18:04:11 <dajobe> ... other places daml+oil way is consisntent since rdf is
vague in that place
18:04:32 <dajobe> miked: daml+oil collection parsetype
18:04:38 <dajobe> ... or "closed collection"
18:05:36 <dajobe> phayes: 3 cats;1) rdf problems - didn't care what rdf meant...
18:05:47 <dajobe> 2) did care eg rdf class cycles and thougt rdf wrong
18:05:58 <dajobe> 3) stuff not in rdf, can do ourselves
18:06:08 <dajobe> ... middle one is issue
18:06:19 <dajobe> ... e.g. RDF use of URIs doesn't matter too much to daml
18:06:21 <dajobe> miked: aggreed
18:06:34 <dajobe> phayes: keen to see this
18:06:42 <dajobe> miked: xml schema datatypes for rdf - key 
18:06:59 <dajobe> artb: long term plans?
18:07:14 <dajobe> miked: continuing daml work for 2-3 years likely
18:07:26 <dajobe> gklyne: xml schema datatypes?
18:07:41 <dajobe> miked: e.g. value of property is a float 
18:07:54 <dajobe> gklyne: something like this in CC/PP
18:08:08 <dajobe> rdaniel: apps you are trying to address?
18:08:46 <dajobe> miked: some portal apps, int community, search, structured
data
18:08:59 <dajobe> ... not stressing agent aspects
18:09:48 <AaronSw> http://www.daml.org/2001/02/rdfcore-f2f/
18:09:52 <dajobe> ARNOT: RDF
18:10:01 <dajobe> RDF in ADobe
18:10:06 <dajobe> (wearing RDF t-shirt)
18:10:11 <AaronSw> Hmm, that URL 404s...
18:10:26 <dajobe> ... customers as they need more pdfs and files ...
18:10:37 <dajobe> ... want to have better searching
18:10:38 <DanC_> pdfs and files.... "assets" in their lingo.
18:11:05 <dajobe> ... want richer associated metadata (although tey might not
put it that way)
18:11:31 <dajobe> ... get metadata available in workflow
18:11:44 <dajobe> ... codename product ZAP - targeting for seybold
18:12:13 <danbri-f2f> s/ZAP/XAP/ i think
18:12:39 <dajobe> ... make the metadata associated with the asset
18:12:52 <dajobe> ... joining them together
18:12:57 <dajobe> ... file format neutral
18:13:10 <dajobe> ... some are pdf, other such as jpg, gif
18:13:25 <dajobe> ... might be others e.g. quark, other products
18:13:31 <dajobe> s/other/other companies/
18:13:50 <dajobe> ... xml packets which can identify xml inside a binary stream
18:13:59 <dajobe> ... scanned and extracted that can be used 
18:14:39 <dajobe> ... rdf, several schemas - 1) Dublin Core 2) PDF 3) graphic
files 4) ...
18:14:46 <dajobe> ... want to be neutral on schemas also
18:15:09 <dajobe> ... pdf schema uses author mapped to dc:creator
18:15:29 <dajobe> ... so if you know DC, you will get answers if you don't know
the pdf schema
18:15:44 <dajobe> ... using existing open standards
18:15:54 <dajobe> ... public (or is that public-er?) at seybold
18:16:00 <DanC_> * DanC_ thinks this is cool! subPropertyOf in actions!
18:16:02 <dajobe> ... howto do xml-packet
18:16:17 <dajobe> ... tools
18:16:44 <dajobe> ... kindof already shipped in one form
18:16:50 <dajobe> ... has been shipping with acrobat 5
18:17:00 <dajobe> ... acrobat5 files today already have rdf
18:17:08 <dajobe> ... moving forward to other apps
18:17:22 <dajobe> ... e.g. illustrator
18:18:08 <barstow> XAP:
http://www.gca.org/papers/xmleurope2001/papers/html/sid-03-9b.html
18:18:18 <dajobe> ... Interested in rdf community about application classes
18:18:33 <dajobe> ... and way to describe schemas
18:18:50 <dajobe> ... input into schema description and on-the-fly guis for
schema data entry
18:18:58 <dajobe> ... stronger datatypeing
18:19:17 <dajobe> ... additional UI interface - human readable labels
18:19:24 <dajobe> ... (might be just for us)
18:19:37 <dajobe> ... no good solutions yet, working on
18:19:50 <dajobe> ... incremental approach with acrobat5, XAP release, evolving
18:19:54 <DanC_> * DanC_ thinks RDF schema properties for documentation/UI are
an interesting thing to persue: a forExample property is something I've made up
a few times.
18:20:00 <dajobe> seybold is end of september
18:20:02 <dajobe> END
18:20:40 <dajobe> jos: jdf?
18:20:45 <dajobe> (need refernece)
18:21:05 <dajobe> arnot: once we have rdf, lots of interesting things can happen
18:21:10 <dajobe> ... workflow
18:21:29 <dajobe> bwm: problems
18:21:40 <dajobe> arnot: don't want to have to support reficiation
18:22:14 <danbri-f2f> danbri notes on dublin core:
http://lists.w3.org/Archives/Public/www-archive/2001Aug/0000.html
18:22:21 <dajobe> jdf - job description format 
18:22:27 <AaronSw> Dan Brickley's notes on Dublin Core:
http://lists.w3.org/Archives/Public/www-archive/2001Aug/0000.html
18:22:31 <dajobe> DANBRI - DUBLIN CORE
18:23:01 <dajobe> DC since 95, nearly finished
18:23:13 <dajobe> specs going through - DC in XML (actually is RDF)
18:23:16 <DanC_> perhaps relevant to JDF? The Open Source JDF Parser Project
http://www.gca.org/papers/xmleurope2001/papers/html/sid-03-4.html
18:23:33 <dajobe> sometimes hurts - xml and rdf tools pull different ways
18:23:41 <dajobe> also doc - dc in rdf model
18:23:56 <dajobe> with community extensions
18:24:01 <dajobe> which have been tricky to do in DC
18:24:04 <dajobe> ... getting there
18:24:26 <dajobe> ... 2 user communities - metadata, more tighthy focussed needs
18:24:52 <dajobe> ... now in DC using more schema stuff rather than fussy XML
element stuff
18:25:07 <dajobe> ... want decentralised community extensions - namespaces give
this
18:25:15 <dajobe> ... endorsing of certain things for communities
18:25:23 <dajobe> ... xml:lang issue important
18:25:31 <dajobe> ... issue: rdf versus xml - xml schema.
18:25:52 <dajobe> ... dcarch - need xml schema / rdf schema story
18:26:05 <dajobe> ... percieived syntactic uglyless and lack of tools
18:26:11 <dajobe> ... test cases is great for dc
18:27:10 <dajobe> ... containers - names of things, lists of things mixed up and
confusing - when to use container machinery or other stuff e.g. createor
ordering
18:27:30 <dajobe> ... clearer advice on when to use rdf:Seq etc.
18:27:40 <dajobe> ... like: a common structure to make dist. apps easier
18:27:52 <dajobe> ... e.g. rss1.0 =could just use it, not need to do DTD merging
nightmare
18:27:57 <dajobe> ... want something soon
18:28:14 <dajobe> ... DC mostly biblio circles, rdf has gone too much to KR/AI
18:28:23 <dajobe> ... soon, simple and basic for creating dc vocabs
18:28:32 <dajobe> END DANBRI
18:29:00 <dajobe> phayes: entangled in AI means what?
18:29:10 <dajobe> danc: not addressing practical problems maybe?
18:29:15 <dajobe> phayes: not seems to me
18:29:20 <dajobe> emiller: working in the mid point ...
18:29:45 <dajobe> ... e.g. sitemaps, theasauri (from 97) etc. not yet delivered
18:30:01 <dajobe> phayes: not being delivered is clear advice
18:30:19 <dajobe> emiller: DC people just want to use spec.
18:30:27 <dajobe> danbri: want numbners and data datatypes
18:31:36 <dajobe> emiller: and onwards to other things such as dewey numbers
18:31:45 <dajobe> danc: which may not be datatypes by the XML schema spec
18:32:00 <dajobe> emiller: functional requirements and advice
18:32:12 <dajobe> ... where to use xml schema datatypes, where not etc.
18:32:18 <dajobe> ... expect standards group to indicate this
18:32:35 <dajobe> bwm: summing up ...
18:32:57 <dajobe> ... wide spectrum of users - hackers, industrial standard
(prism), daml, adobe product, dublin core, ...
18:33:04 <DanC_> * DanC_ noodles on this a bit... perhaps it's time to put the
issues list we've got aside and start assigning WG members to put together
example/HOW-TO stuff. on dates, collections, provenance, etc.
18:33:09 <dajobe> ... some commonalityu of problems
18:33:28 <dajobe> ... broad spectrum to satisfy rather than just one set of
users
18:33:35 <DanC_> * DanC_ noodles... or start offering t-shirts to folks in the
IG who write up solutions to these.
18:33:38 <dajobe> gklyne: provenace came out clearly and not reification ...
18:33:49 <dajobe> ... or what has been called it
18:33:57 <dajobe> mike: 4xstatements is not good
18:34:09 <dajobe> gklyne: design of reification in rdf was aiming at wrong
target?
18:34:15 <dajobe> rdaniel: bad solution to right problem?
18:34:17 <DanC_> * DanC_ wonders why 4xstatements is so scary
18:34:33 <dajobe> ... round tripping, is-asserted
18:34:39 <dajobe> jang: not sure if it is so bad
18:34:57 <dajobe> ... can be represented without huge explosion of triples
18:35:04 <dajobe> emiller: test cases
18:35:18 <dajobe> BREAK
18:35:28 <DanC_> thru 11:45
18:46:48 <dajobe> dajobe is now known as jang
18:47:17 <jang> recommencing
18:47:39 <jang> pat hayes
18:47:52 <jang> model theory presentation (formal semantics)
18:48:13 <jang> pat's presentatino: URI forthcomin
18:48:43 <jang> AP: get pa's production online (PAT + others)
18:49:25 <danbri-f2f> danbri-f2f has quit
18:49:37 <jang> Te aim: to give a mathematical characterisation of the meaning
of expressions in the lnguage
18:50:24 <jang> (I'm only going to record stuff that isn't in the presentation
here)
18:52:01 <jang> aside: PH you can do this for anything (eg a model theory for
"maps")
18:52:07 <danbri-f2f> danbri-f2f has joined #rdfcore
18:52:19 <jang> [ap: pat can you supply a pointer to this as an interesting
example/aside?]
18:54:09 <DanC_> 27Jul draft of MT, from PatH
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0437.html
18:54:45 <jang> PH stresses model theory supplies _just enough_ detail for the
interpretation to be useful
18:54:46 <DanC_> my transcription (of a slightly refined theory, after chatting
with Pat) to larch http://www.w3.org/XML/9711theory/RDFCoreMT.lsl
18:55:46 <jang> "Basic model theory for RDF" slide:
18:56:41 <jang> danc: why is IR nonempty?
18:56:55 <jang> ph: for RDF we could omit that condition
18:57:26 <jang> ph: handy for handling universal quantifiers. But pragmatically:
will we ever _wnat_ an empty universe?
18:57:41 <jang> aaron: we could have an empty document
18:57:53 <jang> ph: an empty document is true in this MT
18:58:25 <jang> an interpretation can apply to a larger universe than the
document it's applied to
18:58:59 <jang> ph: also stresses IR and LV (literal values) could overlap
19:00:16 <jang> ph: don't read too much into the fact the MT calls a particular
set LV
19:01:24 <jang> ph: indicates that we might want to have unasserted triples in
the future
19:01:43 <jang> AP: whoever puts PH's slides on the web to include the example
from the email
19:02:39 <AaronSw> Pat takes the action
19:02:49 <jang> PH: clarifies "subject" and "Object" are shorthand for "subject
of the triple" or "subject of the interpretation" etc. depending on context
19:03:53 <GK-f2f> A trivvial example of Pat's model theory is contained in
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0437.html
19:04:43 <DanC_> (trivial but very useful for understanding)
19:05:15 <jang> PH: stresses the exsistential quantification for anon nodes in a
document
19:06:38 <jang> SP: doesn't see the benefit of anon nodes as done here.
19:07:25 <jang> PH: you're talking about satisfiability. There are other uses of
MT, for example: when can we infer X from Y?
19:07:38 <jang> This is entailment (which talks about _all possible_
interpretations)
19:08:09 <jang> SP: still doesn't see there is a complete justification that we
_need_ ann nodes
19:08:40 <jang> PH: I've actually included both uses of anon nodes here
19:08:53 <jang> i a "set of triples" an anon nodes are "anonymous uris"
19:09:09 <jang> in a document, we use the existential quantification
19:09:57 <jang> SP: you could have another object, and an interpretation for
such a "pumpkin" of triples
19:10:06 <jang> ... that are universally quantified
19:10:29 <jang> PH: you could, but what I've done here is cover what's been
debated thus far
19:10:47 <jang> Brian: we're going to have a precise definition of the options,
and discuss this this afternoon
19:11:59 <jang> FM: expands on what Pat just said
19:12:45 <jang> Danbri: agrees with sergei, we need concrete examples
19:13:42 <jang> ora lassila example "ora wrote this docuemtn" happens
19:13:47 <jang> (ora just arrived)
19:16:01 <AaronSw> Graham draws an example on the board:
19:16:21 <AaronSw> Vocab (set of things in the universe): Red, Ron, dc:creator
19:16:27 <AaronSw> Pat Hayes comes up to help
19:16:46 <AaronSw> vocab is just symbols, actual thing exists at table
19:16:51 <AaronSw> we'll call them a and b.
19:17:11 <jang> danc proposes the example "ron wrote this book"
19:17:20 <AaronSw> ... no wait, draws a stick person and little book
19:17:36 <AaronSw> and property p
19:17:44 <jang> we attempt to embed ron and the book into the whiteboard (for
this interpretation)
19:18:54 <jang> AARON: can you just photograph this once pat's done?
19:19:14 <AaronSw> sure... but i think the explanation will be lost
19:19:19 <AaronSw> IS maps between symbols and thingies
19:19:47 <jang> pat shows the interpretation of the symbols "ron" "dc:creator"
and "red" (the book)
19:19:59 <jang> then:
19:20:05 <jang> red dc:creator ron
19:20:10 <jang> is true in this interpretation
19:20:32 <jang> because I(red), I(ron) is in the extension of IP(DC:creator)
19:20:48 <jang> red dc:creator _:somebody
19:21:53 <jang> going back a step..
19:22:01 <jang> I(red dc:creator ron) = true
19:23:57 <jang> SP: if I does many things, why doesn't it have multiple names?
19:24:04 <jang> danc: I is a polymorphic function
19:24:13 <AaronSw> SP? s/SP/SM/ no?
19:24:23 <jang> yes, sorry
19:24:43 <jang> PH: I is the interpretation we're talking about here
19:25:51 <danbri-f2f> danbri-f2f has quit
19:25:59 <jang> PH: you don't generally include truth values in your universe
19:26:24 <jang> ...because they then come under the scope of quantifiers
19:26:46 <jang> going on with the example....
19:27:12 <jang> adding _:somebody to the vocab, and mapping it to pat
19:27:25 <jang> then I(red dc:creator _:somebody) = false
19:27:53 <jang> PH: however, if we make a document ou of these things...
19:28:16 <jang> then I(
19:28:23 <jang> red dc:creator ron
19:28:29 <jang> red dc:creator _:somebody
19:28:33 <jang> )= true
19:29:36 <jang> or ratehr i[A] (...) = true for the A that maps _:somebody to
ron (that s, ron in the world rather than the symbol "ron" in the vocab)
19:32:32 <jang> talk moves on:
19:33:18 <jang> PH explains why I(p) for a property p doesn't map directly onto
the extension of the interpretation of the property
19:33:28 <jang> ... so you can apply a property to itself.
19:34:42 <danbri-f2f> danbri-f2f has joined #rdfcore
19:35:30 <jang> PH talks about the usefulness of the IEXT indirection
19:35:44 <jang> PH also talks about set theories that permit sets to contain
themselves
19:35:56 <jang> slideshow carris on: a fe lemmas
19:36:11 <jang> definitions of "satifsfies" and "entails"
19:36:31 <jang> * jang apologises for bouncing ketbroad and trying mistakes
19:37:49 <jang> pat sketches proofs tof the lemmas
19:38:06 <jang> eg. lemma 1 any rdf expression has a satisfying interpretation
19:38:11 <jang> [ after herbrand]
19:39:15 <jang> typing mistake in lemma 3:
19:39:21 <jang> E entails its subsets
19:41:26 <jang> SM: asks for examples for lemmas 3->5
19:42:11 <jang> danc: ron wrote red & red is called "the little red book"
19:42:23 <jang> it's safe to conclude simply "ron wrote red"
19:42:25 <jang> (example due to danc)
19:44:33 <jang> SM: complaint: you can't ever connect anon nodes in one document
with another
19:46:58 <jang> SM: doesn't believe in anonymous nodes
19:48:39 <jang> confusion between labels for anon nodes and the nodes
19:51:16 <jang> danc: an anon nodes is identified by the (docent, node label)
pair
19:51:26 <jang> SM: what happens when I parse the same document twice?
19:51:38 <jang> (I supose the answer is: each parsing of the ocument is
distinct)
19:52:33 <jang> we note there are issues about anon node identity issues
19:54:05 <jang> PH: deliver me a BNF together with a proper categorisation of
what's going on, I'll attach a model theory to it
19:54:14 <jang> PH moves on: skolemisation
19:56:45 <jang> next slide: what does it mean to publish some RDF?
19:57:51 <jang> Pat shows that queryng and assertion can both be done with this
19:59:25 <jang> next slide:
19:59:34 <jang> shared content/relative entailment
20:00:00 <jang> (PH talks about the buyer/seller example BmcB gave onthe list)
20:00:45 <jang> (this is such good stuff we carry on into lunchtime!)
20:01:04 <jang> ^^^ not facetious. thank goodness for this (scribe's opinion
here)
20:02:32 <jang> PH talks about the "google" interpretati example (bt all the
content here is already in the slide)
20:03:24 <jang> next slide: rdfs interpretations
20:03:39 <jang> pat adds a class to the whiteboard example
20:04:12 <jang> and shows about ICEXT: IC -> 2^(IR + LV)
20:04:55 <jang> rest of the slide shows rdfs (without reification and
collections)
20:06:04 <jang> pat points out the interpretation of rdfs:Resource here
currently means "the resources in the universe of this interpretation"
20:06:34 <jang> PH: possible to do something "larger" but it makes me slihtly
nervous
20:07:20 <jang> danc: does everyone who extends RDF have to do model theory?
20:07:33 <ambient> ambient has joined #rdfcore
20:07:38 <jang> PH: yes, really, otherwise they are saying something without
telling us what it means
20:08:17 <jang> PH: ... but this isn't hard, or too onerous, once you get used
to it.
20:08:36 <jang> PH: interesting question as to how little of this you can get
away with and derive everything else
20:09:56 <jang> PH: I'm not telling you what this means: just renderig it into
mathematics
20:11:04 <jang> ron: are there tings popping up in this process that you
thinkneed fixing?
20:11:10 <jang> PH; yes: domain in particular
20:11:33 <jang> (reiterates the DAML reedback)
20:13:09 <jang> danbri: does this differ majorly from the DAML+OIL work?
20:13:14 <jang> PH: only with the IEXT stuff
20:13:30 <jang> PH: but we could probably trasnscribe DAML+OIL into this without
problems
20:13:48 <jang> (unchecked assertion)
20:14:48 <jang> danc: "rdfs:Class is a class" - how can I include that from
these?
20:15:00 <jang> PH:oops, that's missing
20:15:58 <jang> SM: the rdfs spec includes an RDF document that gives this to
you
20:16:39 <jang> PH: yes, it's still an omission: the idea is that with this, you
don't need to refer back to the spec
20:18:17 <jang> PH: classes ar treated intensionally here
20:19:11 <jang> ie, we can have I(c1) = c1', I(c2) = c2' and ICEXT(c1') =
ICEXT(c2') with c1'<> c2'
20:19:25 <jang> next slide: reification
20:20:35 <danbri-f2f> aside from http://www.w3.org/2000/01/rdf-schema :
20:20:36 <jang> next slide: simplifying reification
20:20:49 <danbri-f2f> <rdfs:Class rdf:ID="Class">
20:20:49 <danbri-f2f>   <rdfs:label xml:lang="en">Class</rdfs:label>
20:20:49 <danbri-f2f>   <rdfs:label xml:lang="fr">Classe</rdfs:label>
20:20:49 <danbri-f2f>   <rdfs:comment>The concept of Class</rdfs:comment>
20:20:49 <danbri-f2f>   <rdfs:subClassOf rdf:resource="#Resource"/>
20:20:50 <danbri-f2f> </rdfs:Class>
20:21:09 <danbri-f2f> * danbri-f2f stresses this wasn't from the slides, just
cropped up in discussion
20:23:44 <jang> SM: clarification question about "Reifcation of V" slide; why is
syntax the domain of REIF?
20:23:59 <jang> why not IR?
20:25:58 <jang> SM: my view is that REIF: IR -> IR
20:27:31 <jang> dan: move this discussion to lunch an report result.
20:28:23 <jang> AP: SM to discuss the eification interpretation alternatives (if
any) with PH
20:29:03 <jang> last slide: till to come
20:29:25 <jang> aboutEachPrefix (it's gone; PH: "good")
20:29:52 <jang> DANC: we don't need to worry about relative URIs
20:30:04 <jang> PH: ok, but it intrigues me so I'd like to think about it
20:30:36 <jang> PH: alt is "a weaselly way of extending the syntax"
20:44:44 <tim> tim has joined #rdfcore
20:45:05 <tim> * tim lurking as invited
20:48:48 <danbri-f2f> danbri-f2f has quit
20:49:24 <jang> "good")
20:49:25 <jang> [21:27] <jang> DANC: we don't need to worry about relative URIs
20:49:25 <jang> [21:27] <jang> PH: ok, but it intrigues me so I'd like to think
about it
20:49:25 <jang> [21:27] <jang> PH: alt is "a weaselly way of extending the
syntax"
20:49:29 <jang> oops!
21:04:55 <danbri-f2f> danbri-f2f has joined #rdfcore
21:05:03 <danbri-f2f> danbri-f2f is now known as danb-scribe
21:05:23 <danb-scribe> brian: following on from model theory discussion...
21:05:42 <danb-scribe> "is this the sort of thing the WG think they want? We
have a need for more precision, for specs that build on top...
21:06:07 <danb-scribe> "there may be other options for how we do that. Don't
want to just assume the WG buys into use of model theory. So: What do you think?
21:06:22 <danb-scribe> rond: what we use as a tool vs what gets published is an
important distinction
21:06:33 <danb-scribe> "my audience would be scared away by the model theory
21:06:35 <danb-scribe> pat: amen
21:06:43 <danb-scribe> "a separate spec perhaps would be better
21:06:47 <danb-scribe> martin, steve: yup
21:07:04 <danb-scribe> pat: yes but... other communities _would_ find this
useful in a spec
21:07:22 <danb-scribe> agenda 2pm: Abstract model / issues
21:07:39 <danb-scribe> rond: who is the audience for this spec? there are
several, would be poorly served by all in one spec
21:07:43 <danb-scribe> danc + others: amen
21:07:55 <danb-scribe> rond: 1st time around did poor analysis
21:08:00 <danb-scribe> pat: one doc with many appendices?
21:08:04 <danb-scribe> rond: Nope!
21:08:11 <danb-scribe> brian: concern noted; moving on...
21:08:30 <danb-scribe> brian: when you say 'shouldn't be part of the spec,
should it be normative'
21:08:38 <danb-scribe> rond: we could have a dtd or a schema or a dtd or...
21:08:46 <danb-scribe> danc: that's same question; spec = normative
21:08:51 <danb-scribe> brian: would you object to it being normative
21:09:04 <danb-scribe> graham + jos: a dtd won't capture what a model theory
tells you
21:09:15 <danb-scribe> pat: the model theory renders into math the content of
our prose
21:09:41 <jang> jang is now known as dajobe
21:09:47 <danb-scribe> "i'll try this... would make content more accessible to
non mathematicians
21:10:04 <danb-scribe> "just a matter of back-translating it. would like
somewhat like current m+s minus bugs
21:10:24 <danb-scribe> frank: caution not to overload the term 'specification',
there are other things such as illustrative figures that WGs produce
21:10:51 <danb-scribe> "...ron's right that we must consider our audience. we
must note that some of these audiences are consumers of the tech, but not of the
spec
21:11:02 <danb-scribe> danc: "what does that tell us about how to proceed?
21:11:20 <danb-scribe> frank: "yes, we can consider whether the primary purpose
of the doc is specifying with some degree of precision
21:11:35 <danb-scribe> "...ie. what the M+S is versus our intentions about how
it'll be used"
21:11:40 <danb-scribe> * danb-scribe not sure captured that point
21:11:55 <danb-scribe> brian: I'm hearing that the model theory is perceived by
the WG as a useful tool
21:12:01 <danb-scribe> (many nods, yeps)
21:12:13 <danb-scribe> pat: shouldn't be the case that RDF users are all forced
to read the model theory
21:12:25 <danb-scribe> brian: we captured some issues from this morning
21:12:35 <danb-scribe>  - parsing the same document twice
21:12:52 <danb-scribe>  - question of splitting a doc into two, are the
anonymous nodes in the split portions the same?
21:13:06 <danb-scribe>  - issue around an alternative interpretation of
reification
21:13:25 <danb-scribe>  - no syntactic representation of a doc (mentioned during
pat's talk), bracketing a lump of ntriple
21:13:32 <danb-scribe> From issue list:
21:13:35 <danb-scribe>  - formal sematnics
21:13:38 <danb-scribe>  - anon resources
21:13:39 <danb-scribe>  - nature of graph
21:13:43 <danb-scribe>  - uri substructure
21:13:51 <danb-scribe>  - literal as an xml structure
21:14:03 <danb-scribe> brian: "we've got to tackle these in some sort of order.
which to take them in?
21:14:24 <danb-scribe> danc: no rush w/ reification
21:14:32 <danb-scribe> emiller: yes, that's not urgent
21:14:53 <danb-scribe> danbri: would like to hear views on literals as xmls
21:15:05 <danb-scribe> emiller: can we use this morning's intros as a guide?
21:15:21 <danb-scribe> ...folks who presented this morning: are the issues here
ones you've grappled with
21:15:45 <danb-scribe> danc: does uri substructure bother folk?
21:15:48 <danb-scribe> graham: yes but
21:16:01 <danb-scribe> emiller: literals/xmls crops up a lot for DC
21:16:18 <danb-scribe> brian: anon resources takes up a lot of time on list...
perhaps use f2f time to progressthis
21:16:41 <danb-scribe> emiller: w.r.t. rdfs:range/domain, i have sense that we
all agree this is a low hanging fruit... we all agree...
21:17:13 <danb-scribe> brian: we have time for that tommorrow; i'd prefer to
focus on base model theory
21:17:44 <danb-scribe> graham: without going into detail, could we go for a
quick Y/N on whether folk want a syntactic representation of docs
21:17:51 <danb-scribe> summary:
21:18:04 <danb-scribe> literals as xml struct; anon resources; syntactic
representation of doc
21:18:19 <danb-scribe> brian: starting with literal as xml struct
21:18:52 <danb-scribe> ron: i felt we came to an acceptable compromise on
list...
21:19:40 <danb-scribe> ..."basic result was that these things would be treated
as strings, and we'd know they'd had a parsetype as a string. But the first
character might be an opening anglebracket. There'd be some extra info that'd
let you know it was parseType literal, so you could go off and xml parse it"
21:19:57 <danb-scribe> danc: there are 1000 details to work out, but broadly
agree. I'd like to see 100 test cases.
21:20:11 <danb-scribe> dave: for a literal, would be a sequence of characters
plus the parseType
21:20:24 <danb-scribe> ron: we have to have namespace info available
21:21:28 <danb-scribe> danbri: RDFS says that we consider literals to be members
of rdfs:class-es
21:21:48 <danb-scribe> emiller: people feel they can "just stick html in there"
w/ parseType=Literal
21:21:59 <danb-scribe> dave: this is 'mere detail'
21:22:10 <danb-scribe> danc: i don't want a decision w/out test cases
21:22:14 <danb-scribe> dave: we can't do that here and now
21:22:21 <danb-scribe> danc: we certainly can!
21:22:37 <danb-scribe> dave: <sighs>, encoding formats... entities... 
21:23:01 <danb-scribe> ron: in addition, flag if wellformed?
21:23:09 <danb-scribe> danc: that's impossible, must be wellformed
21:23:16 <danb-scribe> danbri: could come in via n3
21:23:20 <danb-scribe> danc: don't do that!
21:23:32 <AaronSw> i believe danc said, you can't do that.
21:23:40 <danb-scribe> ??: is it important to reflect in daml parsetype
21:23:45 <danb-scribe> ron: eg use a qname
21:23:51 <danb-scribe> aaron: ack'd. yes.
21:24:04 <danb-scribe> brian: are there any components we're missing?
21:24:12 <danb-scribe> jang: xml carries a base URI
21:24:32 <danb-scribe> danc: to be complete, its all the info you can have about
that xml
21:24:34 <danb-scribe> dave: a serialised infoset
21:24:39 <danb-scribe> danb: yeah
21:24:49 <danb-scribe> brian: is this what we want to do (now)
21:24:55 <danb-scribe> dan: ...not sure
21:25:05 <danb-scribe> brian: do we want to take the time and work out at least
an initial set of test cases
21:25:17 <danb-scribe> sergey: could you remind me what the motiviation is to be
doing this w/ xml literals
21:25:29 <danb-scribe> dan: for example, markup inside rss 
21:25:43 <danb-scribe> sergey: why not just write it as CDATA
21:25:53 <danb-scribe> dan: then xml parser misses out xml wellformedness errors
21:25:53 <danb-scribe> sergey: big deal!
21:26:04 <danb-scribe> dan: it _is_ a big deal... these things need to play well
21:26:24 <danb-scribe> mike: this connects strongly to literal value typing too 
21:26:51 <danb-scribe> rond: i want to find where we'd gotten to on this issue;
next stage would be making test cases (which we needn't do here). put a piton in
the cliff face...
21:27:37 <danb-scribe> sergey: this whole issue is closely coupled to
assumptions w.r.t. whether this is the one single rdf syntax
21:27:46 <danb-scribe> dan: we have at least to deal with the currnt syntax
21:27:55 <danb-scribe> * danb-scribe misses a few lines trying to participate
21:28:09 <danb-scribe> dan: straightforward way is to say all this is
represented w/ triples
21:28:23 <danb-scribe> rond: yeah but that's not what any current M+S 1.0
processors are doing
21:28:29 <ora> ora has joined #rdfcore
21:28:29 <danb-scribe> dan; they're all consistent with that
21:28:46 <danb-scribe> ron: but they're not implementing that. what they're
exchanging doesn't incdicate they're doing that
21:29:00 <danb-scribe> ..."current stuff isn't decorated w/ namespaces etc
21:29:16 <danb-scribe> sergey: my experience... A year ago i trashed
parseType=literal in parser
21:29:32 <danb-scribe> ron: but I use that in things i'm doing. Often I need
multi-parag definitions, need html tags
21:29:53 <danb-scribe> emiller: there are people that complained (about dropping
parseType=literals)
21:30:05 <danb-scribe> ron: i use rdffilter, megginsons parser, it tells me
these things are xml literals
21:30:21 <danb-scribe> ...you don't get explicit treatment of namespaces in a
srtuct, though that info can be gotten
21:30:29 <danb-scribe> sergey: can you get the string itself as a dom object?
21:30:37 <danb-scribe> ron: it's a callback, for literal xml content
21:30:42 <danb-scribe> sergey: so you can get the string
21:30:50 <danb-scribe> ron: one of the args of the callback is a  string
21:30:59 <danb-scribe> sergeyt: sounds fair enough to me; if a string then its a
literal
21:31:11 <danb-scribe> "a convention that all namespaces must be local in this
xml piece...
21:31:38 <danb-scribe> brian: possible solutions... if you're going to put any
xml in a parsetype literal it is very minimal. m+s examples break this.
21:31:44 <danb-scribe> danbri: makes instance data verbose
21:31:51 <AaronSw> AaronSw has quit
21:32:05 <danb-scribe> ron; if we're advising implementors 'make sure namespaces
are there' is ok. but we still need an ntriples representation of this
21:32:31 <danb-scribe> brian: there's a solution here...
21:32:38 <danb-scribe> danbri: is 'user' hear a parser writer or content creator
21:32:49 <danb-scribe> ron and brian: opposite replies (forget which way)
21:33:30 <danb-scribe> * danb-scribe requests clarification on last point w.r.t.
whose view is which
21:33:30 <danb-scribe> brian notes options:
21:33:30 <danb-scribe>  - standalone xml
21:33:32 <danb-scribe>  - parser adds namespaces
21:33:49 <danb-scribe>  - (danc's suggestion of) represent entire infoset as xml
21:33:57 <danb-scribe> dave: some of these are not going to work.
21:34:05 <danb-scribe> ..."there's also xml fragments w3c work
21:34:13 <danb-scribe> ..."which is incmpleete
21:34:26 <danb-scribe> - Aaron 
21:34:48 <danb-scribe> * danb-scribe misses detail of dave's point
21:35:03 <danb-scribe> dave: "we'd have to keep adding in new stuff the xml
specs invent"(?)
21:35:49 <danb-scribe> brian: byu 'standalone xml' i mean the content creator
has to include it
21:35:49 <danb-scribe> dave: but this often can't be included many times in body
of xml doc. therefore doesn't work. charsets etc.
21:35:49 <danb-scribe> another option...
21:35:52 <danb-scribe>  - a serialised infoset
21:36:49 <danb-scribe> sergey: what's a serialised infoset?
21:36:49 <danb-scribe> dave: an xml file representing the structure of a parsed
xml doc
21:36:49 <danb-scribe> dan: sounds like fragments
21:36:49 <danb-scribe> sergey: is this standardised 
21:36:55 <danb-scribe> dan: the value of a property doesn't have to be an xml
element with only one root... xml frag spec addresses this... how to make it
standalone
21:37:07 <danb-scribe> * danb-scribe seeks a uri for fragments spec (cand rec)
21:37:24 <danb-scribe> brian: we have a list of possible options, not really in
a position to make much progress?
21:38:37 <danb-scribe> dan: <offers to draw up some examples for discussion>
21:38:38 <danb-scribe> 20 mins (until 3pm)
21:38:38 <danb-scribe> dan: <grabbing example from spec>
21:38:38 <danb-scribe> 7.5 from spec 
21:39:07 <danb-scribe> dan on 7.5 example... [[[
21:39:21 <danb-scribe> (this is the mathmpl example)
21:39:27 <danb-scribe> "anyone want to suggest what this looks like in ntriples?
21:39:35 <danb-scribe> "i'll start writing, see who objects...
21:40:49 <danb-scribe> (danc+emiller edit example on emiller's laptop, @@TODO:
grab for permenant record)
21:42:25 <danb-scribe> * danb-scribe doesn't try to re-capture ntriples from the
overhead projector
21:43:07 <danb-scribe> dan: this example... <apply><power/> don't within the
parsetype/literal have namespaces attached? should they in the ntriple? (folk
seeem to agree)
21:44:05 <danb-scribe> (dan adds xmlns stuff scattered throughout; draws analogy
with typical output of an xslt transformation)
21:44:20 <danb-scribe> graham: i have a potential objection... if this is signed
xml, you'll break the signature
21:44:26 <danb-scribe> dan: is this an objection or not?
21:44:45 <danb-scribe> graham: if it was signed, if you change the content of
the literal, you break it
21:45:11 <danb-scribe> dan: there are ways i _can_ change it (eg adding
whitespace between attributes) that don't change the canonicalised form
21:45:30 <danb-scribe> (some discussion about whether canonicalisation is
mandatory in xml sig @@TODO: ref to spec) 
21:46:18 <danb-scribe> dave: this is acceptable to me
21:46:23 <danb-scribe> emiller: i might quibble
21:47:29 <danb-scribe> danbri: where you have 'Literal' i'd like a full uri; we
have an opportunity to clarify from the un-uri'd M+S style at this point
21:48:08 <danb-scribe> dan: i don't know how to address graham's objection;
don't know how to parse xml through rdf tools keeping it intact... hmm...
Actually fragments would do that.
21:48:15 <danb-scribe> dan: should I continue with this exercise?
21:48:35 <danb-scribe> jos: this ntriple notation w/ round brackets
21:48:48 <danb-scribe> dave: some of this not ntriple
21:48:58 <danb-scribe> dan: i'm trying to demonstrate how ugly this is! 
21:49:05 <danb-scribe> dave: i see entities all the time in RSS
21:49:20 <danb-scribe> dan: are they declared (or are we seeing a lot of broken
xml in that regard)
21:49:39 <danb-scribe> example: ampersand... 
21:49:46 <danb-scribe> rael: apostrophe, quote
21:49:56 <danb-scribe> dave: &nbsp; is common
21:50:21 <danb-scribe> dan: apostrophe, quote are builtins for xml, wouldn't
expect probs there. For &nbsp; it needs to be declared
21:50:45 <danb-scribe> jos: i'm thinking about an expression usign
interpretation propeerites...
21:51:15 <danb-scribe> dan: (not replying to jos' point, i tihnk) i'd expect to
end up with &#160; etc in the ntriple
21:51:37 <danb-scribe> emiller: we've had some people say these are ok...
anything we can do to win over others to this approach?
21:51:51 <danb-scribe> dan: i think xml fragments will make these probs go
away...
21:51:58 <barstow> XML fragment spec: http://www.w3.org/TR/xml-fragment
21:52:13 <danb-scribe> "...if you have a piece of what they call 'well balanced
xml', ie xml minuse root element, and want to ship it around...
21:52:29 <danb-scribe> "it is basically a dummy root element whose sole purpose
is to provide a single root for multiple sub-docs
21:52:34 <danb-scribe> (noises of approval)
21:52:44 <danb-scribe> dave: didn't realise its a CR, thought was less mature
21:53:38 <danb-scribe> dan: its (been) in the 'nice idea, why do people care'
category
21:53:38 <danb-scribe> dave; i wonder if theres an impact on apps
21:53:38 <danb-scribe> dan: almost cdertainly
21:53:39 <danb-scribe> sergey: we noted earlier its important to take advantage
of the xml parser (ie the CDATA comment above)
21:54:03 <danb-scribe> "...so this isn't really enough. I think that it would be
helpful in a specific implementation.... if we could say 'i know this is a
special kind of literal so give me a specific implementation', eg. getObject()
returning a DOM tree or something
21:54:17 <danb-scribe> "...otherwise it doesn't make much sense, if we get back
an xml string all the time
21:54:33 <danb-scribe> dan: yeah... the way we're looking at this through
ntriple glasses may not be helping here
21:54:46 <danb-scribe> sergey: seems that this is very much an artifcat of the
current XML serialisation
21:54:57 <danb-scribe> dan: for ntriples, another idea is something like...
21:55:35 <danb-scribe> (dan shows an blob of xml quoted in ntriple with
*xml1     ....angle brackets... *xml1 escaping)
21:55:47 <danb-scribe> jos: is the triplequote mechanism (from python) useful
here?
21:55:56 <danb-scribe> dan: i think as that as more like general string quoting
21:56:06 <danb-scribe> ..."or maybe ntriple docs have somethnig like an XML
appendix"
21:56:15 <danb-scribe> brian: I'm not sure this is going anywhere fast.
21:56:32 <danb-scribe> ..."theres a spec out there, fragments, that I at least
don't feel sufficiently familiar with.
21:56:51 <danb-scribe> "suggest we hold discussion for now. Action Connolly to
investigate Fragments approach
21:57:01 <danb-scribe> dan: except i don't like that, i prefer doing it all with
triples
21:57:15 <danb-scribe> graham: (...) say we're doing this from N3 (or another
syntax)...
21:57:30 <danb-scribe> emiller: we have, for better or worse, based this stuff
around our main XML serialisation
21:57:44 <danb-scribe> dan: the reason N3 is there is to allow us to ask
conformance questions
21:57:55 <danb-scribe> ...how do we ask conformance questions about this current
example?
21:58:27 <danb-scribe> Pat: indep of N3, graham's point about incorporating 'all
of xml' into RDF... DAML folk would likely share this concern. Too much to take
on board
21:58:51 <danb-scribe> dan: that's why simply saying 'use triples; there are
uris for xml stuff' 
21:59:06 <danb-scribe> dan: anyone want to look into using fragments?
21:59:26 <danb-scribe> sergey: pls write down another proposal in list above:
deprecate and use CDATA
21:59:43 <danb-scribe> dave: i commented on 1st one. add namespaces proposal
also incomplete
22:00:04 <danb-scribe> brian: nobody is willing to look into applicability of
fragments
22:00:16 <danb-scribe> dan: does anyone even think its a good idea?
22:00:33 <danb-scribe> brian: we're at an impass here; we'll come back to it.
22:00:50 <danb-scribe> ---
22:00:52 <danb-scribe> next issue:
22:01:00 <danb-scribe> Syntactic Representation of the document.
22:01:18 <danb-scribe> dan: i thought he chose ntriple-doc, what's the issue?
22:01:29 <danb-scribe> dave: he wanted to model multiple docs in an ntriple
style
22:01:44 <danb-scribe> dan: but that doesn't mean we need two docs in one
ntriple doc
22:01:59 <danb-scribe> pat: when i did the model theory i overloaded the term
'document' in a new way
22:02:06 <danb-scribe> ..."feel free to un-overload that"
22:02:43 <danb-scribe> brian: (sans chair hat) I propose we add a bracketing
syntax
22:02:44 <danb-scribe> dan: No! you can't put that back into an rdf doc
22:03:01 <danb-scribe> pat: answer is, yes you can: you choose how to do it. you
can decide its meaningless in rdf (a decision w.r.t. anon nodes)
22:03:16 <danb-scribe> graham: its decided, an rdf document begins rdf:RDF etc
22:03:25 <danb-scribe> dan: but you can't have two of those in one doc
22:04:28 <danb-scribe> pat: you can put documents in document
22:04:29 <danb-scribe> danbri; you can put rdf:rdf in head and in body of an
xhtml doc
22:06:06 <danb-scribe> pat: my u/standing is that with RDF, certtainly ntriples,
theres a notion of a document... and that a document cannot contain another
document.
22:06:12 <danb-scribe> brian: what you needed for model theory was a scoping for
quantifiers
22:06:12 <danb-scribe> brian: i'm proposing add bracketing into ntriple syntax
22:06:12 <danb-scribe> pat: there's no syntactic mark in ntriple forgrouping
22:06:12 <danb-scribe> dan: this would harm, the existing syntax would be
expensive; we have a body of code for ntriple...
22:06:12 <danb-scribe> "not a huge deal but a pain. if what you've done works,
lets move on."
22:06:12 <danb-scribe> dan: its fundamental that an rdf doc has exactly one
scope
22:06:20 <danb-scribe> pat: what's missing there's no syntax  for 'set of
triples' as opposed to document
22:06:24 <danb-scribe> dan: and we don't need one
22:06:37 <danb-scribe> frank: where/what's the synyax for an rdf document?
rdf:RDF etc?
22:06:54 <danb-scribe> dan: you/we intuit that from spec, in fact not really
clear
22:07:11 <danb-scribe> graham: section 6 of M+S explains this usage 
22:07:22 <danb-scribe> dan: but does it exactly say 'this is syntax for An RDF
Document'
22:07:30 <danb-scribe> dave: since its optional
22:07:53 <danb-scribe> dan: Where does it say its optional?
22:08:01 <danb-scribe> danbri: its in there; p3p wanted it...
22:08:21 <danb-scribe> sergey: i'm unsure what the scope of ntriple is... first
i thought it was a convention for exchanging in email..
22:08:32 <danb-scribe> "then it turned out to be machine-readable..."
22:09:00 <danb-scribe> "i think these are 2 distinct issues. The expectations
are different. For one you want a complex syntax; for the other you don't necc
want such precision...
22:09:46 <danb-scribe> "the human readable way... different variants, with
square/angle/whatever brackets, we generally can read it. But for machine
exchange, there are bunch of simple requirements for syntactic exchange. It
should embeddable in a doc, streamable, quickly hackable in perl. 
22:09:57 <danb-scribe> "but nobody will ever try to encode this in email as too
verbose
22:10:05 <tim> tim has quit
22:10:11 <danb-scribe> dan: theres an existence proof that this is false; there
are many cases where we've done justr that
22:10:18 <danb-scribe> sergey: this is a problem, we shouldn't be doing that
22:10:27 <danb-scribe> dan: puropse of ntriples is for conformance testing
22:10:42 <danb-scribe> sergey: there's a tradoff between these two roles, they
pull in diffent directions
22:10:56 <danb-scribe> sergey: would prefer to use different for humans and
machines
22:11:31 <danb-scribe> ...it doesn't make sense to use ...
22:11:52 <danb-scribe> dan: its for conformance testing
22:12:25 <danb-scribe> danbri: our ambitions for ntriple grew; intially it was
for 'how many triples come out' then 'lossless represeentation of the data', now
'very very lossless ;-)'....
22:12:48 <danb-scribe> frank: we're using 'scope' in two ways here; (ntriple
scope creep versus scope of document production and model theory)
22:13:22 <danb-scribe> frank: (...) ntriple has clarified a lot of stuff which
the rdf reprsentation has made less clear
22:13:42 <danb-scribe> ..."but they don't clarify much w.r.t. notion of a
document
22:13:45 <danb-scribe> pat: agree
22:14:01 <danb-scribe> brian: Pat this morning gave us a model theory based on
"here's the ntriple, here's what it means"
22:14:23 <danb-scribe> .."as he did this, he said: i have trouple finding a hook
to represent notion of a statement block
22:14:33 <danb-scribe> "do we want characters added into ntriple for this
22:15:15 <danb-scribe> frank: extend this, do we want to put something into all
our notatoins to do this?
22:15:15 <danb-scribe> ..."ie we want it in all the notations
22:15:31 <danb-scribe> dan: so, certainly we want this in future RDF syntaxes.
But i don't propose to put it in 1.0 syntax, and hence not into ntriple
22:15:47 <danb-scribe> graham: i'd argue this is in there really, ie the wrapper
element from rdf's bnf
22:15:57 <danb-scribe> dan: if there's only one it doesn't really matter
22:16:25 <danb-scribe> pat: there's a real issue: Whether RDF in whatever
form... can be broken up into collections of isolated triples, and then put back
together again.
22:16:35 <danb-scribe> "can one put in sets of triples and have them retain
their meaning
22:16:50 <danb-scribe> "in order to maintain the distinction that i relied on in
the model theory, you'd need to ...
22:16:58 <danb-scribe> * danb-scribe misses detail
22:17:16 <danb-scribe> dan: example...
22:17:49 <dajobe> pat said: could replace the two things with one. i.e. from 1)
set of triples and 2) document -> one concept, pick one
22:17:50 <danb-scribe> "ron wrote something. then you write another doc, which
says 'something wrote moby dick'... (@@TODO; get detail)
22:17:54 <danb-scribe> thanks.
22:18:30 <danb-scribe> pat: could say, "a doc isn't a marked entity, but a set
of triples plus assumption that its anon nodes are distinct from those of other
triplesets" and then take care when merging.
22:18:37 <danb-scribe> pat: if two sets don't contain the same anon nodes...
22:19:40 <GK-f2f> I have made some comments about this at:
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0397.html
22:19:41 <danb-scribe> ...its only when you get the same anon node in diff docs
you get a problem
22:19:41 <danb-scribe> dan: you asked about splitting and remerging in api
terms... does this answer it for you? (to sergey)
22:19:41 <danb-scribe> mike: we're adding a lot of hair here to just qualify
anon nodes
22:19:41 <danb-scribe> ...all implementations i see qualify wr..t. uri of source
doc
22:20:16 <danb-scribe> (danc comment missed)
22:20:16 <danb-scribe> pat: if we tweak the ntriple syntax on this we can leave
the ntriples alone
22:20:16 <danb-scribe> dan: my udnersanding is that ntriple rperesentss the
rdf/xml syntax, and we can't redo that
22:20:35 <danb-scribe> pat: assumption that...you can't have two diff docs w/
same anon node (for all conceivable syntaxes)
22:20:41 <danb-scribe> danbri: i think we need that
22:21:12 <GK-f2f> * GK-f2f but we already it that not all RDF "models" can be
represented in the XML syntax
22:21:12 <danb-scribe> sergey: that's bad... violates assumption that anyone can
say anything about anything
22:21:16 <danb-scribe> pat: you can't use my anonymous-name for it
22:21:32 <danb-scribe> dan: there are cases where you can say something about
something described in a doc
22:21:38 <danb-scribe> ...but you can still talk about them
22:21:58 <danb-scribe> sergey: if you're referring to the same thing...
22:22:09 <danb-scribe> dan: in the general case, maybe not a way to get a handle
on it
22:22:33 <barstow> danbri: the phrase annon node is a mis-nomer, it should be
"unknown"
22:22:41 <danb-scribe> danbri: the term anonymous node does us no favours
22:22:56 <ora> ora has quit
22:23:02 <ora> ora has joined #rdfcore
22:23:33 <barstow> * barstow thinks N-Triples does what Mike is asking for
22:23:33 <danb-scribe> mike: you can refer to a node in another doc... my
suggestion is that we make a standard syntax for naming anon nodes, even if
don't define that you get the same name in same context
22:23:33 <danb-scribe> pat: yes
22:23:56 <danb-scribe> mike: two parsers would output different generated names,
but in a common style/syntax
22:24:00 <ora> ora has left channel
22:24:16 <danb-scribe> frank: important to have a more thorough treatment of
scoping issues...(?)
22:24:22 <danb-scribe> pat: don't worry, not a trick, sanctioned by almost any
variety of model theory 
22:24:38 <danb-scribe> frank: for dealing with this... concern is whether this
covers other issuesw.r.t. scoping problem
22:25:06 <danb-scribe> pat: the only qualification i'd make: you'd have to make
your anon nodes public
22:25:26 <danb-scribe> dan: i disagree. someone could come back and prove it
false
22:25:32 <danb-scribe> pat: but they can't bind to your variables
22:25:40 <danb-scribe> jos: they're identified by their content (?)
22:25:54 <danb-scribe> pat: the content picked out by eg '?x' 
22:26:17 <danb-scribe> ...
22:26:32 <danb-scribe> pat: there'd be no way to refer to them
22:26:41 <danb-scribe> ..."we need to be clear on this
22:27:03 <danb-scribe> emiller: why do we need to be clear on this? at a certain
level, we want to try to enable fact of making simple things simple, comlex
things possible...
22:27:23 <danb-scribe> "if we can agreee on name of node, good; if not, we need
some additional things handy 
22:27:48 <danb-scribe> pat: this isn't hard; we just need to decide which of the
story parts to through away
22:27:57 <danb-scribe> pat: if rdf just amounts to sets of triples
22:28:26 <danb-scribe> ...you could get acccidental collisions
22:28:46 <danb-scribe> danbri: can't we just use uuids and move on?
22:28:56 <danb-scribe> pat: but then you can't use RDF docs in "query mode"
22:29:05 <danb-scribe> danbri: fine by me, i use another language for that
22:29:19 <danb-scribe> pat: two files in assertion mode can be merged
22:29:40 <danb-scribe> ..."query mode: someone publishes a question, someone
publsihes some statements; a service notices that one matches the other
22:30:14 <danb-scribe> danb-scribe has quit
22:30:14 <ambient> ambient has quit
22:30:14 <dajobe> dajobe has quit
22:31:33 <dajobe> dajobe has joined #rdfcore
22:31:33 <ambient> ambient has joined #rdfcore
22:31:33 <danb-scribe> danb-scribe has joined #rdfcore
22:31:38 <GK-f2f> * GK-f2f test
22:35:10 <db> db has joined #rdfcore
22:36:30 <danb-scribe> danb-scribe has quit
22:36:30 <ambient> ambient has quit
22:36:30 <dajobe> dajobe has quit
22:37:56 <dajobe> dajobe has joined #rdfcore
22:37:56 <danb-scribe> danb-scribe has joined #rdfcore
22:38:09 <db> db has quit
22:39:08 <Seth> Seth has quit
22:39:08 <barstow> barstow has quit
22:39:08 <GK-f2f> GK-f2f has quit
22:39:28 <GK-f2f> GK-f2f has joined #rdfcore
22:39:28 <barstow> barstow has joined #rdfcore
22:39:28 <Seth> Seth has joined #rdfcore
22:47:17 <Seth> Seth has quit
22:47:17 <barstow> barstow has quit
22:47:17 <GK-f2f> GK-f2f has quit
22:47:37 <GK-f2f> GK-f2f has joined #rdfcore
22:47:37 <barstow> barstow has joined #rdfcore
22:47:37 <Seth> Seth has joined #rdfcore
22:48:26 <danb-scribe> repeating content from earlier lost due to irc netsplit:
22:48:27 <danb-scribe> [[[
22:48:28 <danb-scribe>  pat: if rdf just amounts to sets of triples
22:48:28 <danb-scribe> <danb-scribe> ...you could get acccidental collisions
22:48:28 <danb-scribe> <danb-scribe> danbri: can't we just use uuids and move
on?
22:48:28 <danb-scribe> <danb-scribe> pat: but then you can't use RDF docs in
"query mode"
22:48:29 <danb-scribe> <danb-scribe> danbri: fine by me, i use another language
for that
22:48:31 <danb-scribe> <danb-scribe> pat: two files in assertion mode can be
merged
22:48:33 <danb-scribe> <danb-scribe> ..."query mode: someone publishes a
question, someone publsihes some statements; a service notices that one matches
the other
22:48:36 <danb-scribe> <danb-scribe>
22:48:38 <danb-scribe> ]]
22:48:40 <danb-scribe> ---
22:48:42 <danb-scribe> coffee break
22:48:44 <danb-scribe> ----
22:53:50 <Seth> Seth has quit
22:53:50 <barstow> barstow has quit
22:53:50 <GK-f2f> GK-f2f has quit
22:53:51 <GK-f2f> GK-f2f has joined #rdfcore
22:53:51 <barstow> barstow has joined #rdfcore
22:54:05 <danb-scribe> danb-scribe is now known as danb-notscribe
22:54:32 <ora> ora has joined #rdfcore
22:55:38 <dajobe> meeting continues
22:55:38 <dajobe> bwm: reagendaing
22:55:48 <danb-notscribe> danb-notscribe is now known as danbri
22:56:22 <dajobe> bwm: have 2 questions
22:57:09 <dajobe> 1) if I get some rdf/xml which has <rdf:Description/> can I
tell that apart from <rdf:Description rdf:about="someuri"/> ?
22:57:27 <dajobe> ... difference between nodes with URis and without
22:58:11 <dajobe> frankm: do generated identifiers have a disting.
representation?
22:58:24 <dajobe> bwm: cannot use words anonymous resource, just don't know
their name
22:58:41 <GK-f2f> * GK-f2f For anon nodes, see:
http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0397.html
22:58:51 <dajobe> 2) If I can tell these things apart, in the model theory does
does it become a variable with an extensistential 
22:58:57 <DanC_> re cannot use words anonymous nodes: we should put that in the
errata right away.
22:58:59 <dajobe> path: if so, where is the ext.#
22:59:08 <dajobe> bwm: is this a resonable way forward
22:59:10 <dajobe> general agreement
23:00:09 <dajobe> Q: are there going to be anon nodes at all?
23:00:24 <dajobe> If no, zap _:names else ..
23:00:31 <dajobe> straw poll
23:00:54 <dajobe> taking poll...
23:01:09 <dajobe> most people say yes
23:01:20 <dajobe> ask people who say no, ask why
23:01:33 <dajobe> path: because they serve no purpose, if asserting rdf,
conceptual confusion
23:01:43 <dajobe> ... if not then it is rdf++
23:02:00 <dajobe> path: they are not needed for assertions, hence not needed
23:02:16 <dajobe> sergey: agrees, also wants: demonstrate they are needed
23:02:16 <ora> ora has left channel
23:02:32 <dajobe> ... suggestion to make table with two approaches and criteria
23:02:50 <dajobe> bwm: reasons for why they aren't in the model, got 1 (not
useful)
23:02:55 <dajobe> ... what are their use?
23:03:12 <dajobe> gk: easier and more compact and dependable than generating
unique IDs
23:03:22 <dajobe> ... alternative is to generate unique IDs
23:03:28 <dajobe> sergey: for what purpose,use case
23:03:54 <dajobe> danc: for what purpose?
23:04:01 <dajobe> gk: in order to create n-triples
23:04:18 <dajobe> ... rdf/xml permits description of resources that have no name
23:04:36 <dajobe> ... parser has to generate names, it is easier to generate
names that are not globally unique
23:05:01 <dajobe> miked: 2 uses that may be different - 1) variable, an objet
that has this property 2) just want to generate some structure, don't care about
name
23:05:19 <dajobe> bwm: lazyness argument?
23:05:22 <dajobe> +ericm
23:05:47 <dajobe> bwm: daml:collection having parsed in, cannot be n-triple
written because anon has been lost
23:06:07 <dajobe> path: don't follow, explain more
23:07:05 <dajobe> bwm: if you read in rdf with daml:collection and a load of
anon nodes and you assign uris for them in the model, and later you want to
write it out, the 
23:07:12 <dajobe> ...(looses it)
23:07:27 <dajobe> gk: make distinguisable and globally unique?
23:07:31 <dajobe> bwm: can yo tell them apart?
23:08:05 <dajobe> danbri: why we want them.  If I make an assertion, critical
part is which names I used and which are machine generated - information loss if
we can't keep that clear.
23:08:09 <dajobe> bwm: information loss
23:08:41 <dajobe> path: argument and need yes but is not anon nodes, is to do
with tracking rather than anonymity.  anon nodes is a hack
23:09:35 <dajobe> fmanola: not needed for assertions - clarify.  wasn't about
replacing existentially quant variables with skolemisation, ...
23:10:19 <dajobe> ... are we intro alternative semantics in q 
23:10:30 <dajobe> ... do generated identifiers have a distinguished
represetnation?
23:10:37 <dajobe> (rather than anon characteristic)
23:10:58 <dajobe> bwm: summarises
23:11:55 <dajobe> path: new topics about anon nodes, used for a number of things 
23:12:01 <dajobe> ... only considering them as part of assertions
23:12:12 <dajobe> danbri: was using assertions
23:12:39 <dajobe> path: serve no utility
23:12:47 <dajobe> fmanola: want to change vote
23:13:10 <dajobe> ... was thinking about generated identifiers rather than anon
nodes
23:13:17 <dajobe> ... want to tell skolem identifers from URIs
23:13:22 <dajobe> danc: don't understand?
23:13:43 <dajobe> bwm: two categories of names?
23:13:57 <dajobe> path: two recognisable subsets of URIs? danc: says no
23:14:53 <dajobe> danbri: two categories of names - URIs we all know, ones we
locally use in software (capturing this?)
23:14:57 <dajobe> ... species of name
23:15:07 <dajobe> path: if species of name - yes
23:16:04 <dajobe> sergey: syntax stuff.  If we have a MT, do these things have
special represetnations
23:16:30 <dajobe> danbri: yes we have two distinguished species of names and
track them
23:16:38 <dajobe> just asking can we tell the names apart?
23:17:07 <dajobe> bwm: restating questions recorded above
23:18:30 <dajobe> AGREED: answer to 1) YES with 2 abstentions
23:18:37 <dajobe> bwm: on toq2
23:19:12 <DanC_> re recognizable subsets of URIs: cf "The Opacity Axiom" in
"Universal Resources Identifiers -- Axioms of Web Architecture" 
23:19:18 <DanC_> http://www.w3.org/DesignIssues/Axioms.html#opaque
23:19:20 <dajobe> sergey: from the MT, not the syntax, there are special roles
for anon nodes ...
23:19:23 <dajobe> ... we don't need this
23:19:53 <dajobe> bwm: q is - are these distinguished nodes?
23:20:02 <dajobe> ... from the nodes that are identified from the URIs
23:20:33 <dajobe> are the distinguished nodes that come from the description
elements with/without the about treated differentely from the nodes...
23:20:55 <dajobe> ... that are identified by a URI in the MT
23:21:36 <dajobe> straw poll: yes, no, abstain mostly equal
23:21:52 <dajobe> gk: brings up resource/uri question...
23:22:22 <dajobe> mike: preference for no difference, no compelling reason
23:22:30 <dajobe> bwm: for those people see a diff, why?
23:22:38 <dajobe> danc: example..
23:23:10 <dajobe> ... rdf/xml with description, two properties and no about or
URI ...
23:23:32 <dajobe> ... "there exists something with properties ... of it etc."
23:23:47 <dajobe> ... seems like a there exists
23:23:58 <dajobe> path: not that simple, 
23:24:20 <dajobe> ... involves introducing a document 
23:24:32 <dajobe> path: doc is not a set of triples?
23:24:43 <dajobe> bwm: reads as there exists, what for?
23:24:53 <dajobe> danc: use case as above
23:25:13 <dajobe> ... real life 
23:25:33 <dajobe> ... there exists is what I'm using it for inside W3C
23:26:25 <dajobe> frankm: considering two inconsistent ideas
23:26:41 <dajobe> ... idea is making generated identifiers behave like URIs
23:27:18 <dajobe> ... if this is the case (i.e. be URIs) then whatever generates
them is committing to making them have URI behaviour
23:27:25 <dajobe> ... which may not turn out to be a good thing
23:27:28 <dajobe> bwm: yes
23:27:55 <dajobe> danbri: try to prise apart ; happy with there exists, not
convinced it has to be different with/without
23:28:25 <dajobe> danbri: agreed want to preserve whether a uri was supplied or
not
23:28:38 <dajobe> ... q1: if existential was supplied or not
23:28:43 <dajobe> ... q2: if it had a URI
23:28:47 <dajobe> general confusion (!)
23:29:42 <dajobe> path: distinction between there exists, and there exists with
a genid
23:29:48 <dajobe> i.e. an actual name
23:30:17 <dajobe> bwm: danc would be unhappy if a system assigned a name to an
unnamed description?
23:30:36 <dajobe> danc: object to saying my document entails their document
23:30:43 <dajobe> bwm: drilling down
23:31:06 <dajobe> ... machine generated, distinguishable name, can be
differentiated from your name?
23:31:14 <dajobe> ... or maybe not
23:31:28 <dajobe> * dajobe looses it again
23:31:43 <dajobe> path: refering to at-present off-line examples
23:32:13 <dajobe> ... if in publishing the existential name, do you supply a
name or refuse to do it?
23:32:21 <dajobe> danc: no; q is did rdf 1.0 do it?
23:32:29 <dajobe> phayes: vague
23:32:30 <dajobe> danc: no
23:32:55 <dajobe> bwm: examples where it makes a difference
23:33:25 <dajobe> jang: if we use skolemisation and we are still using
existential assertions, same amout of work from genids
23:33:34 <dajobe> ... not requiring genids is cleaner
23:34:03 <dajobe> ... have to do the same kind of thing
23:34:11 <dajobe> danc: make this closer to what Impls. have to do
23:34:25 <dajobe> phayes: have to make MT match what impl. do
23:34:44 <dajobe> fmanola: I got get rdf and ge agenerated id for the person
23:35:10 <dajobe> ... is it expected that tomorrow I when I have addition info
about genid:foo, can I say more?
23:35:15 <dajobe> danc: no, not in general case
23:35:34 <dajobe> ... since systems can decide not to keep that around
23:35:52 <dajobe> fmanola: from URIs, we understand that genid:foo is not a URI
23:36:10 <dajobe> ... an argument from telling them apart, since we must be able
to tell them apart and can use later
23:36:39 <dajobe> ... very important for issue
23:36:49 <dajobe> bwm: examples please where difference matters?
23:37:07 <dajobe> ... this is one - I have something with a name, can I go back
later and get more/say more or pass on?
23:37:12 <dajobe> ... that is a difference
23:37:23 <dajobe> sergey: where is the difference?
23:38:05 <dajobe> danc: looking at examples again, get a non-URI genid for
unnamed node
23:38:26 <dajobe> ... doesn't want that
23:38:54 <dajobe> ... published rdf/xml with no genid so don't want it invented
23:39:15 <dajobe> phayes: cannot have anon nodes and make description with no
id, illegal
23:39:34 <dajobe> danc: graph may differ from xml
23:40:32 <dajobe> fmanola: whatever I get back from source whether its a node
without URI, it is still something I can point to ...
23:41:09 <barstow> * barstow thinks that Ora created this mess and thus he'd
like to hear his position :-)
23:41:54 <DanC_> * DanC_ is having trouble following
23:41:58 <dajobe> ... if it is making a commitment that it is a URI, that is one
thing, otherwise if a non-URI with commitments, we need to enumerate this
commitment
23:42:06 <dajobe> s/this/these/
23:42:29 <dajobe> bwm: if I send you some rdf with a node that I want to refer
again, it must have a name that I send you ...
23:42:38 <dajobe> ... what if I don't give a URI, why would I want to do that?
23:42:51 <dajobe> ... that I can never refer to it again
23:43:25 <dajobe> jos: test cases I have are mostly assertions with nesting ...
23:43:34 <dajobe> ... small bit is non-assertional and I don't want to loose
that
23:43:38 <dajobe> ... use case is query i.e.
23:43:41 <DanC_> 1741 uses cases, Jos said.
23:43:50 <DanC_> er... 1741 test cases.
23:44:12 <dajobe> jos: same thing could be asserted and used as aquery ...
23:44:31 <dajobe> ... rdf should not commit to one only
23:44:44 <dajobe> bwm: when youare using anon disting nodes for assertions, does
it make a difference?
23:45:06 <DanC_> * DanC_ is interested in the query (non-assertional) case too,
but doesn't expect to convince the WG that it's part of RDF 1.0
23:45:08 <dajobe> jos: I am using internal Java null for subjects
23:45:57 <dajobe> phayes: take care between the two cases when language is
assertional and for queryies
23:46:13 <dajobe> bwm: is the q that RDF should be able to represent queries and
itnerpret queries?
23:46:32 <dajobe> danbri: many cases I don't supply a URI when I don't have one
23:46:46 <dajobe> ... I don't know any URI for that node
23:46:56 <dajobe> phayes: could make one
23:47:04 <dajobe> various comments - is impractical to gen them
23:47:27 <dajobe> fmanola: and keeping around, check for reuse etc.
23:47:40 <dajobe> sergey: they are some abbrev mechanism for rdf/xml typing
23:48:25 <dajobe> ... if you need this mechanism, specify an algorithm for this
23:48:30 <dajobe> ... and everything remains the same
23:49:00 <dajobe> danc: I have use cases that convince me
23:49:23 <dajobe> bwm: can I get a set of use cases we can put to convince
people?
23:49:43 <dajobe> jang: people (me) don't have URIs - aesthetic/may be illegal
in URIs
23:49:48 <dajobe> s/in URIs/to have URIs/
23:50:00 <dajobe> danc: use cases W3C ...
23:50:11 <dajobe> ... people connected with tel, home pages, deployed with no
23:50:15 <dajobe> ... uris for people
23:50:27 <dajobe> ... ditto no uris for wgs
23:50:42 <dajobe> ... ditto goals for w3c documents, visualised, joined with no
URIs for concepts
23:51:01 <dajobe> bwm: interested in they *had* to have no URIs?
23:51:22 <dajobe> danc: no; I can do what I did in rdf 1.0
23:51:41 <dajobe> ... travel constraints with no URIs for large document merge
23:52:01 <dajobe> ... query use case, not sure I can convince using this
evidence?
23:52:18 <dajobe> ... system for mapping rdf -> pics, many examples with no URIs
23:52:25 <dajobe> ... Could I have made URIs? No.
23:52:42 <dajobe> ... If forced?  Then the apps wouldn't have happened at all,
or so quick.
23:52:45 <dajobe> phayes: if done auto?
23:52:51 <dajobe> danc: not likely
23:53:25 <dajobe> danbri: use case is not having 2000 year old discussions. 
Question of URis for things is something we shouldn't go down
23:53:33 <dajobe> ... not within the scope of this group
23:54:10 <dajobe> jang: limited this to the assertional case ...
23:54:19 <dajobe> ... which is great, argumetns are taste and deployed apps
23:54:31 <danbri> aside: my uri use case is exemplified in data such as
http://lists.w3.org/Archives/Public/www-rdf-interest/2001Jul/0066.html
23:54:47 <danbri> ie not knowing the URI names for many entities i'm describing
23:54:48 <dajobe> jang: phayes is right from assertional point of view
23:54:59 <dajobe> ... but there is more to it than that
23:55:18 <dajobe> gk: I have two cases one with URIs, other with a distinguished
identifer form (in N3)
23:55:45 <DanC_> * DanC_ suggests a practial problem with the "phayes is right"
i.e. "in the assertional case it doesn't matter" position: keeping the generated
URIs from ever being used again is a real, practical problem.
23:55:55 <dajobe> * dajobe nods
23:56:13 <dajobe> (can someone paste URI)
23:56:15 <danbri> * danbri nods too
23:56:17 <danbri> will do
23:56:38 <danbri>
http://lists.w3.org/Archives/Public/www-archive/2001Aug/0002.html
23:56:42 <dajobe> gk: in 2nd case, the statements are applied to the same
subject are being used in different docs...
23:57:08 <dajobe> ... do we want these statements to be about different subjects
23:57:35 <dajobe> emiller: does anyone think first case is talking about the
same thing?
23:57:37 <dajobe> might?
23:57:50 <dajobe> bwm: they might be talking about something different?
23:58:06 <dajobe> phayes: same thing if same string
23:58:18 <dajobe> ... else not, we need a mechanism to make sure this happens
23:58:25 <dajobe> danc: which line of model theory applies?
23:59:13 <dajobe> discussion...
23:59:14 <DanC_> PatH agreed that the question of which model theory line to
apply is the question of _:bob in one document denotes something different from
_:bob in another.
23:59:22 <dajobe> sergey: in rdf/xm, this is n3/ntriples
23:59:39 <dajobe> fmanola: ambiguity based on particular form of identifier used 
23:59:53 <dajobe> ... if source doc ID was there somewhere, would have been
unique



