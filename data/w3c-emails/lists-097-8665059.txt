docno="lists-097-8665059"
received="Mon Aug  6 11:31:14 2001"
isoreceived="20010806153114"
sent="Mon, 6 Aug 2001 11:31:14 -0400 (EDT)"
isosent="20010806153114"
name="Dan Brickley"
email="danbri@w3.org"
subject="RDFCore F2F day 2: RDF Schema session notes"
id="Pine.LNX.4.30.0108061128570.15857-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<www-archive@w3.org>



[[
F2F Day 2: 2001-08-02 RDF Schema 1.0 Discussion

This is the collectively edited version of the RDF Schema overhead slides
from day 2 session, recording decisions on RDF Schema. Forward to
www-archive for reference.

--danbri
]]



Progressing RDF Schema:

- dan brickley (rdfs editor)
- brian mcbride (chairing)

What are we trying to achieve?
-----------------------------

   - agree a closure of our 2 active open issues
   - seeking working hypotheses on other RDFS issues for next WD
     (see how many we can crank through in ?n minutes)
   - understand the context and status of RDFS

Context:
-------

   * RDF Schema is a W3C Candidate Recommendation. This means W3C
     community consider it "as good as done; need implementor feedback"

   * RDF Issue List, DAML+OIL feedback provide this feedback

   * We waited for XML Schema datatypes; DAML+OIL makes a proposal for
     these in RDF

   * How much flexibility:
- more flexible than M+S, in that we're not fiddling with a
          "Recommendation";
     - less flexible: RDFS isn't as contested/buggy, a CR means "almost done"
        - time/resources: we have our work cut out with the model/syntax; if we
           spend a lot of effort on RDFS polishing, we distract from the M+S work.
  * RDF Schema is one major application of RDF Core's Model+Syntax work;
    progressing RDFS is a an important sanity check for the M+S work.


   * W3C context:
- Other WGs are using this spec (CC/PP, P3P, WAI EARL)
   - A successor WG is planned
    to do "RDF Schema 2.0" aka "Web Ontology" (DAML+OIL+???)
- we did the right thing and waited for XML Schema; now its time
          to get this thing moving again.
        - Simplicity Simplicity Simplicity: XML Schema took 3 years and a
          huge WG to publish a rather complex spec;
            W3C and RDFCore can't afford to do this. RDF Schema's value is
            in its simplicity,
    and (we hope) genuine extensibility: fancy stuff comes later.
            (3 years ago we discussed class specific constraints,
             intentionally defined classes etc for RDFS; the RDFS design
             leaves these to future work; a WebOnt WG will probably do
             that work).


How to make progress
--------------------


We note:

   * Our next step is not our last step: we work to draft some answers to
     implementor feedback
   * for each of these issues, we need a working hypothesis for our Working Draft(s) *
   * Consensus:
- we do not need 100% consensus to publish Working Drafts
- we have a duty to document and acknowledge dissent (within WG,
          W3C and wider community)
   * Strawpoll answers to (some) open issues, edit these into an RDF
     Schema WD, and see how it looks _as a spec_ (for us, and wider
     community; users of rdfs 1.0)
   * There will be opportunities to refine the spec (and decisions) in
     light of further testing
   * If we get strawpoll answers to all issues, Eric will eat a spoonful
     of vegemite.


Opened Issues
-------------
rdfs-domain-and-range: Should a property be allowed more than one
rdfs:range property? What should the semantics of
     multiple domain and range properties be? (Dan Brickley)

PROCESS: We can spend 5, 10, 20 or 45 minutes on this. Or 2 days. But we
         *must* come out of the discussion with an ACTION for the editor.  Or
         we don't go home. (for brian: time mgmnt 10 mins?)


PROPOSAL: * conjunctive semantics for domain and for range
* multiple ranges are not forbidden

[discussion point...]

Art: is there any evidence that anyone has done an implmentation that
is contrary to this proposal?  (how much will this hurt current
implementation if we change this?)

Ron: is it possible that we have something different than rdfs:domain that
will solve this problem?

Danbri: if possible I'd like to discuss some of these issues without
opening up the issue of different namespaces.

Vote on Proposal:
(look into Jan's notes on status of vote)



rdfs-domain-unconstrained: The rdfs:domain and rdfs:range constraints
for rdfs:domain are missing from the RDF Schema for RDF Schema (Dan
Brickley)

PROPOSAL: * editorial oversight

[discussion point...]





Other RDF Schema Issues
-----------------------

- rdfs-constraining-containers: Should it be possible to constrain the
members of a container to be of a given type?

PROPOSAL:
  * No change to current specification

REASONS:
  * No compelling case has been made for additional features  in 1.0
  * We already allow subclasses of the containers
  * Other languages (DAML+OIL; WebOnt; Prose...) can express those constraints



- rdfs-xml-schema-datatypes: A suggestion that the RDF Schema Spec
might usefully use XML Schema datatypes in examples and/or in some
formal specification of the mapping of these datatypes into the RDF
model.

PROPOSAL:
  * A task force to investigate the DAML+OIL approach for using XML Datatypes
  * Seek implementor feedback on this explicitly in our next WD

NOTE: We don't consider this as a requirement for the next version of the draft




- rdfs-primitive-properties: A suggestion that properties such as
rdfs:subClassOf, rdf:type and others should not be instances of
rdf:Property, but should be primitive

PROPOSAL:
  * Providing some explanatory text.

REASONS:
  * We don't believe this is a problem.
  * Not critical path for next working draft
  * The model theory (and associated documentation) tells us what rdfs:Class is an rdfs:Class means.
  * Defer to model theory.





- rdfs-no-cycles-in-subClassOf: Cycles of subClassOf (subPropertiesOf) properties are prohibited

PROPOSAL:

  * Open this issue (Frank M.)

  * Flag this in the next draft ... flag the point that we're thinking of removing this retriction and to see how this affects implementation

  * Action (Pat) to go back to DAML+OIL with this




- rdfs-subPropertyOf-semantics: The inheritance semantics of the subPropertyOf relationship needs to be clarified.

PROPOSAL:
  * clarify prose (subProperties inherit domain and range of their superProperties)




- rdfs-subClassOf-a-Property: Clarify whether a Property can have a
subClassOf property, and if so, what that would mean?

PROPOSAL:
  * do nothing with respect to the next working draft
  * clarify this issue by considering "are rdf:Property and rdfs:Class disjoint"?

REASON:
  * with the range/domain fix, this becomes: are Property and Class disjoint




- rdfs-online-char-encoding: There is problem with the character
encoding of the online RDF Schema.

PROPOSAL:
  * Editor to fix the encoding

REASON:
  * editorial oversight
  * spend no time here talking about whether to change ns uri




- rdfs-versioning: RDF Schema does not deal adequately with versioning.

PROPOSAL:
  * Do nothing

REASON:
  * known hard problem
  * Note that the problem is very difficult to solve, and outside of the scope of this working group.  Propose to not solve this problem.




- rdfs-transitive-subSubProperty: Is a sub-property of
rdfs:subPropertyOf necessarily transitive?

PROPOSAL:
  * Make no changes in next version of the draft




- rdfs-clarify-subClass-and-instance: Suggestion of clearer discussion
of use of subClass and instance relationships simultaneously.

PROPOSAL:
  * editorial wordsmithing needed




- rdfs-isDefinedBy-semantics: Must the value of an rdfs:isDefinedBy property be a schema?

PROPOSAL:
 * not critical path




- rdfs-editorial: General editorial comments.

PROPOSAL:
 * so noted.



