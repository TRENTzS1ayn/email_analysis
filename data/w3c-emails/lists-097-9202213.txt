docno="lists-097-9202213"
received="Sat Dec  1 21:35:08 2001"
isoreceived="20011202023508"
sent="Sat, 1 Dec 2001 21:35:06 -0500 (EST)"
isosent="20011202023506"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: Cryptography In CWM: Hashes"
id="Pine.LNX.4.30.0112012125270.7450-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="01ee01c17ad3$ddc0c210$e9001d12&#64;CREST"
expires="-1"

To: Tim Berners-Lee<timbl@w3.org>
cc:"Sean B. Palmer"<sean@mysterylights.com>, Dan Connolly<connolly@w3.org>,<www-archive@w3.org>


On Fri, 30 Nov 2001, Tim Berners-Lee wrote:

> > The properties that one can use at the moment are:-
> >
> >    crypto:md5 a rdf:Property; rdfs:label "md5";
> >       rdfs:comment "The MD5 hash of a string";
> >       rdfs:domain string:String; rdfs:range string:String .
> >
> >    crypto:sha a daml:UnambiguousProperty,
> >       daml:UniqueProperty; rdfs:label "sha";
> >       rdfs:comment "The SHA hash of a string";
> >       rdfs:domain string:String; rdfs:range string:String .
>
> I notice your higher trust of sha1!

I've been using a sha1 property too, to talk about photos, MP3s, MPEG
video content etc indirectly. Agonized a bit about whether it was really a
daml:UnambiguousProperty, decided it wasn't. Toying with using a utility
class like FOAF:NearAsDammitUnambiguousProperty, since such info would be
useful for query planners, database indexes etc. The only other thing I
could think was to just baldly assert that util:sha1 _is_ unambiguous, and
make sure the defintion gives some account of which bag-o-bytes is the
'right' one, for the astronomical nitpicky case where two chunks of data
have the same sha1.

Kind of use I have in mind is a little different... but wonder if a single
schema would serve both apps:

  <foaf:Work>
   <dc:title>Some Movie's Title</dc:title>
   <foaf:encodedPart>
        <foaf:Document
                dc:size="691423423424"
                dc:format="video/mpg"
                foaf:partNo="1"
                digit:sha1="3ffbecf36520245ecb6aff020a3etcetcetc"/>
   <!-- rights management metadata goes here... -->
   </foaf:encodedPart>
 <...etc>

Wonder what cwm would do if you found two strings that had the same sha1...

Dan



