docno="lists-097-9544227"
received="Fri Dec  7 10:12:35 2001"
isoreceived="20011207151235"
sent="Fri, 07 Dec 2001 10:12:31 -0500"
isosent="20011207151231"
name="Jeff Heflin"
email="heflin@cse.lehigh.edu"
subject="Re: WebOnt General Requirements Subgroup - Initial E-mail"
id="3C10DC5F.6D506D9B@cse.lehigh.edu"
charset="us-ascii"
inreplyto="OFFE9FF5B1.2388CFF3-ONC1256B1B.00488719&#64;bayer-ag.com"
expires="-1"


To:jos.deroo.jd@belgium.agfa.com
CC:dlm@ksl.stanford.edu,ned.smith@intel.com,jeremy_carroll@hp.com,phayes@ai.uwf.edu,connolly@w3.org,hendler@cs.umd.edu,www-archive@w3.org

Thanks for the responses. I've replied inline...

jos.deroo.jd@belgium.agfa.com wrote:
> 
> [...]
> > Given this as a starting point, I'd like to solicit feedback on the
> > following issues:
> >
> > 1) Is the name "General Requirements" appropriate? Do we prefer
> > something else? Perhaps "Core Requirements?" Other suggestions?
> 
> WOL Requirements???

My only hesitation with this is that one of the duties of the various
use case groups is to develop requirements for their use cases. If we go
with "WOL Requirements" then that implies that we are producing the
complete set of requirements for the language. My understanding is that
we are really producing some fundamental or common set of requirements
that don't fit neatly into any one use case area.

> > 2) How should we proceed? I recommend that Deborah and I merge our
> > initial requirements and then present these to the rest of the group as
> > a straw man. For those interested, my initial sketch of requirements for
> > a Web Ont language can be found at
> > http://www.cse.lehigh.edu/~heflin/webont/reqs.html
> 
> I've read both "initial requirements" pieces and I think
> that an merge is a good first step

Okay, unless I hear otherwise, I'll assume that everyone else supports
this idea as well.

> > 3) What format should the detailed requirements take? Guus Schreiber's
> > suggestion for Use Case format doesn't fit, since we are describing
> > requirements. I propose the following format:
> >
> > ----------------------------------------------------------------------
> > REQUIREMENT:
> > A short name for the requirement
> >
> > SUPPORTED TASKS:
> > Which use cases (or classes of use cases) will benefit from this
> > requirement?
> >
> > JUSTIFICATION:
> > Why is the requirement important? What will it achieve?
> >
> > POSSIBLE APPROACH:
> > How might our language design satisfy or support the requirement?
> > ----------------------------------------------------------------------
> 
> OK, that's a good proposal (and let's see how it works in the straw man)

Sounds like a plan.

> --
> Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



