docno="lists-097-9999814"
received="Mon Dec 10 17:24:13 2001"
isoreceived="20011210222413"
sent="Mon, 10 Dec 2001 23:23:58 +0100"
isosent="20011210222358"
name="jos.deroo.jd@belgium.agfa.com"
email="jos.deroo.jd@belgium.agfa.com"
subject="Re: WebOnt General Requirements Subgroup - Initial E-mail"
id="OF09BEE00B.E0CF0ED1-ONC1256B1E.0079BA00@bayer-ag.com"
charset="us-ascii"
inreplyto="WebOnt General Requirements Subgroup - Initial E-mail"
expires="-1"

To:connolly@w3.org
Cc:phayes@ai.uwf.edu,heflin@cse.lehigh.edu,dlm@ksl.stanford.edu,ned.smith@intel.com,jeremy_carroll@hp.com,jos.deroo.jd@belgium.agfa.com,herman.ter.horst@philips.com,hendler@cs.umd.edu,www-archive@w3.org


[...]

> About inconsistency... I'm happy with
> a requirement that our language should
> (a) have the ability to express
> inconsistent facts (e.g. using disjoint)
> and (b) the specification should have
> clear semantics for what's an inconsistency
> and what's not, but I don't want to
> go as far as (c) that it be straightforward, computationally,
> to determine, given any two expressions
> in our language, whether they're consistent.
>
> i.e. the sort of use cases I have in mind
> for a requirement about inconsistencies
> are, for example, catching common
> ontology-design errors (flag empty
> classes, flag empty classes that have
> things in them ;-), or well-known
> errors in the use of some ontology,
> like perhaps units mismatches in
> a space-ship-parts ontology.
>
> But I don't have any use cases that
> motivate a general decidability requirement.

my thoughts *intersect* with that
kind of inconsistency requirement
I think the examples I gave in
http://lists.w3.org/Archives/Public/www-webont-wg/2001Nov/0126.html
are *consistent* with that :-)

--
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/

--
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



