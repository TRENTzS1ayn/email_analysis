docno="lists-098-0814072"
received="Sat Oct 13 10:52:12 2001"
isoreceived="20011013145212"
sent="Sat, 13 Oct 2001 10:52:09 -0400 (EDT)"
isosent="20011013145209"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: extracting statements from XML (again)"
id="Pine.LNX.4.30.0110131037210.10386-100000@tux.w3.org"
charset="ISO-8859-1"
inreplyto="20011013103048R.pfps&#64;research.bell-labs.com"
expires="-1"

To:"Peter F. Patel-Schneider"<pfps@research.bell-labs.com>
cc:<connolly@w3.org>,<em@w3.org>,<www-archive@w3.org>




(copying danc, eric and the www-archive, hope you don't mind)

On Sat, 13 Oct 2001, Peter F. Patel-Schneider wrote:

> From: Dan Brickley <danbri@w3.org>
> Subject: Re: extracting statements from XML (again)
> Date: Sat, 13 Oct 2001 10:24:44 -0400 (EDT)
>
> > On Sat, 13 Oct 2001, Peter F. Patel-Schneider wrote:

[ XSV stuff snipped ]

> > That's what I figured a while ago, but I didn't know enough python then so
> > postponed the project (indefinitely). If you have specific questions,
> > Henry, although busy, can be quite helpful.
> >
> > My original goal was to hack the thing to output an RDF view of his
> > in-memory represntation of an RDF schema, since the XML Schema spec says
> > that a schema can be modelled as an edge-labelled graph.
>
> I don't see how this would work.  One of the differences between XML and
> RDF is that XML is node-labelled (only) and RDF is edge labelled.  I tried
> to merge these two points in my recent post, but there are difficulties.

I entirely agree. The point was slightly different: the XML syntax for
exchanging XML Schemas in XML does something similar, but more specific,
to RDF's syntax spec. It angle-bracket-encodes the nodes and properties
which constitute an XML schema in the abstract. So the XML document itself
isn't an edge-labelled graph, but the data structure it encodes (and XML
Schema) can be modeled as one.

Re XML Schema:

http://www.w3.org/TR/xmlschema-1/ [[
3.1.1 Components and Properties

Components are defined in terms of their properties, and each property in
turn is defined by giving its range, that is the values it may have. This
can be understood as defining a schema as a labeled directed graph, where
the root is a schema, every other vertex is a schema component or a
literal (string, boolean, number) and every labeled edge is a property.
The graph is not acyclic: multiple copies of components with the same name
in the same ?symbol space? may not exist, so in some cases re-entrant
chains of properties must exist. Equality of components for the purposes
of this specification is always defined as equality of names (including
target namespaces) within symbol spaces.
]]

That sounds pretty RDFish to me. If I can find out enough about XSV then
dumping these into RDF/DAML would I think be a very useful exercise in
technology convergence.

Dan

ps. I'll talk to Henry about XSV documentation

pps. Some scruffy related notes / pointers on
edge-labelled graphs and XML: http://www.w3.org/2000/09/XGraph/



