docno="lists-098-1006758"
received="Tue Oct 23 12:51:38 2001"
isoreceived="20011023165138"
sent="Tue, 23 Oct 2001 12:51:27 -0400 (EDT)"
isosent="20011023165127"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: question"
id="Pine.LNX.4.30.0110231244220.31412-100000@tux.w3.org"
charset="ISO-8859-1"
inreplyto="3.0.5.32.20011023175522.008f7af0&#64;eteo.muni.es"
expires="-1"

To: jon kepa gerrikagoitia<jkgerrik@eteo.muni.es>
cc:<www-archive@w3.org>



(I'm copying the public www-archive list for future reference)

> Do you think Semantic Web is close or far from sw
> vendors(IBM,Microsoft,Oracle..) and their Component based models (.NET,
> J2EE).?Are independent areas or is possible to be relationed?

Hi

Hard to give a short answer, but yes, the two are clearly parts of a
larger whole.

SOAP, for example, adopts a very RDF-like graph model for encoding
structured data.

RDF query services will likely incorporate remote services that expose
SOAP APIs (such as those listed at http://xmethods.com/

There's a difference in emphasis, of course. Generally, SW folk are more
interested in loosly-couple, wide-area interop, whereas SOAP etc tends to
be used for systems where the participating parties have advance knowledge
of of each other, their interfaces etc. RDF/SW tries to make it possible
for systems to have some very loose commonalities so that SW services can
be composed from parts that were independently designed and deployed. You
can think of it as an additional set of conventions or design patterns
that sit on top of 'bare' XML. Or an answer to the question "so, we're all
using XML... what more can our systems have in common?".

In practical terms, the existence of SOAP means that soon we may be able
to throw away our screenscrapers and other pragmatic cludges, and design
SW systems that offer services based on aggregations of (previously
uncoordinated) Web Services.

For some sense of "soon" ;-)

Hope this helps. You might also try asking on www-rdf-interest[1]

Dan


[1] http://www.w3.org/RDF/Interest/



