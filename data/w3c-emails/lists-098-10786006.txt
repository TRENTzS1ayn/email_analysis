docno="lists-098-10786006"
received="Thu Mar 21 06:47:16 2002"
isoreceived="20020321114716"
sent="Thu, 21 Mar 2002 06:47:15 -0500 (EST)"
isosent="20020321114715"
name="Dan Brickley"
email="danbri@w3.org"
subject="Xml Serialization for Ruby: serialization styles"
id="Pine.LNX.4.30.0203210641020.22047-100000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<chrismo@charter.net>
cc:<www-archive@w3.org>


(copying www-archive public mail archive so I can reference this later; I
guess I should subscribe to ruby-talk... (feel free to fwd if relevant))


Hi

Just found your announcement, http://www.ruby-talk.org/blade/36052

This is pretty cool :)

I was wondering whether you had looked at a couple of common graph
serialization conventions: RDF (usually used for structured data exchange)
and the SOAP XML protocol Encoding format (more often used for objects /
RPC etc).

I've got some rough notes on both at
http://www.w3.org/2001/sw/interest/soaptech/ if you're interested.

One issue is that there are various ways in which one might turn an object
graph into XML elements and attributes. SOAP and RDF do it slightly
differently: SOAP uses element names for edge names, always. RDF
alternates between elements-as-nodes and elements-as-edges. It'd be
neat if your package could expose one of these formats, or offer some user
control over the serialization style. Using XML namespaces might be
an interesting thing to explore too.

BTW the marshalling code in the  SOAP4R package implements this sort of
thing for SOAP Encoding, it might be worth taking a look at that if you
haven't already.

Nice work :)

Dan


-- 
mailto:danbri@w3.org
http://www.w3.org/People/DanBri/



