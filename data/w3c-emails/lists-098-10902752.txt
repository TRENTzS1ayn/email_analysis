docno="lists-098-10902752"
received="Sat Mar 30 16:45:44 2002"
isoreceived="20020330214544"
sent="Sat, 30 Mar 2002 21:45:00 -0000"
isosent="20020330214500"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="CWM Crypto Stuff"
id="001201c1d834$26e93040$50b80150@localhost"
charset="iso-8859-1"
expires="-1"


To:"Tim Berners-Lee"<timbl@w3.org>
Cc:"Dan Connolly"<connolly@w3.org>,<www-archive@w3.org>

Hi,

This is the crypto-for-CWM builtin that I've been working on for
a while. The module itself is attached as <<cwm_crypto.py>>, and
the test & result are attached as <<crypto-test.n3>> and
<<crypto-test-out.n3>> respectively.

As you can tell from the test, it can create keys (limitation:
one per session!), sign, and verify. It should be a trivial
matter to add other builtin properties based on the stuff in the
PyCrypt and mxCrypto packages.

I had to invent my own format for the keys, since after a
considerable amount of time spent trying to figure how how PGP et
al. represent their keys, I didn't have a clue. All I did was to
encode the encryption exponent and the modulus of the key as
base64 printed quotable blocks (plus the other 3 important bits
of the key for keypairs). If you have a relatively granular
cryptographic package, it should be possible to reconstruct a key
from the blocks quite easily. I know that PGP etc. add
time/author/etc. information to their keys.

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://purl.org/net/swn#> .
:Sean :homepage <http://purl.org/net/sbp/> .




text/plain attachment: cwm_crypto.py

text/plain attachment: crypto-test.n3

text/plain attachment: crypto-test-out.n3




