docno="lists-098-11119235"
received="Thu May  9 17:57:48 2002"
isoreceived="20020509215748"
sent="Thu, 9 May 2002 11:57:23 -1000"
isosent="20020509215723"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Cannonical output"
id="BE54072C-6397-11D6-BABB-000393914268@w3.org"
charset="US-ASCII"
expires="-1"

Cc: Dan Connolly<connolly@w3.org>, Public Archive at W3C<www-archive@w3.org>
To:jjc@hpl.hp.com


Jeremy,

The question which I was just going to ask but slipped my mind;

For test results, I find it useful to make a human readable cannonical 
form.

This means that the algorithm has to produce repeatable results, even 
though  arbitrary.

In other words, you can make a suboptimal choice from the point of view 
of prettiness, especially in screw cases, but you have to make the same 
choice each time on the same graph.  The problem is ordering of things, 
when it comes to anonymous nodes.
The basic idea is that you compare (for ordering) two anonymous nodes as 
a function
of the properties they have, which often ends up being very recursive, 
and in screw cases, being circular.  You can, afetr all, have a graph  
which is syymetric in the two arbitrary names _:a and _:b.

I understand from skip-reading some graph isomorphism stuff that solving 
that problem involves creating an ordering, and I wondered about picking 
up code or algorithms from that community (I don't think it was open 
source though).

If you have any thoughts, inspiration, then I would be interested!

Tim BL



