docno="lists-098-11736499"
received="Thu Nov 14 11:40:43 2002"
isoreceived="20021114164043"
sent="Thu, 14 Nov 2002 08:36:28 -0800 (PST)"
isosent="20021114163628"
name="M. Jones"
email="sweetidad@yahoo.com"
subject="text for packaging/attachments"
id="20021114163628.96919.qmail@web40507.mail.yahoo.com"
charset="us-ascii"
expires="-1"


To:www-archive@w3.org
Cc:jones@research.att.com


- Use cases / real world need for the feature

For some applications, a purely XML-based
representation of the
payload is awkward or inefficient.  Examples of such
cases include
payloads which contain binary data, recursively
structured envelopes,
syntactically ill-formed XML fragments, etc.


- Outline of one or more proposed solutions

The most common packaging tactic in such cases is to
introduce a
multipart representation which carries the SOAP
envelope and its
related data (commonly referred to as "attachments"). 
"SOAP Messages
with Attachments", published as a W3C note
[http://www.w3.org/TR/SOAP-attachments], is one
proposed scheme;
"Direct Internet Message Encapsulation (DIME)"
[http://www.ietf.org/internet-drafts/draft-nielsen-dime-02.txt]
is
another.  An abstract model for the SOAP 1.2
attachment feature
[http://www.w3.org/TR/soap12-af/] specifies how SOAP
1.2 bindings use
attachments and how those attachments are referenced
from the
envelope.


- Discussion of the controversies surrounding the
feature

1. How does serialization of the SOAP envelope
(primary part) interact
with serialization of the attachments themselves (the
secondary parts)
and the serialization of the packaging glue itself? 
For example, if
the SOAP HTTP binding is normally responsible for
serialization of
the SOAP envelope in a non-packaging context, how does
a packaging
feature binding extension modularly interact with the
base binding?
How does the packaging serialization interact with
other features
that involve re-codings for encryption, compression,
etc.? 

2. Concerns have been expressed about the issue of
references.  SOAP
1.2 has taken the position that web resources that get
copied into
attachments are new resources with their own URI
schemes.  The binding
(in particular, the packaging feature binding
extension) has the
responsibility for resolving references to these
resources.  Is this
the correct model for attachments?  Can dereferencing
schemes smoothly
handle cases in which the attachments need to be
treated as cached
representations of web resources?


__________________________________________________
Do you Yahoo!?
Yahoo! Web Hosting - Let the expert host your site
http://webhosting.yahoo.com



