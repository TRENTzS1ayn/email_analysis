docno="lists-098-11890867"
received="Tue Nov 19 17:17:32 2002"
isoreceived="20021119221732"
sent="Tue, 19 Nov 2002 17:17:31 -0500 (EST)"
isosent="20021119221731"
name="Dan Brickley"
email="danbri@w3.org"
subject="Qualified Dublin Core XML Schema for you to do with as you please  (fwd)"
id="Pine.LNX.4.30.0211191716190.30890-103000@tux.w3.org"
charset="US-ASCII"
expires="-1"

To:<www-archive@w3.org>



for reference... (email address snipped)

---------- Forwarded message ----------
Date: Tue, 19 Nov 2002 16:27:46 -0500 (EST)
From: Dan Brickley <danbri@w3.org>
To: danbri@w3.org
Subject: Qualified Dublin Core XML Schema for you to do with as you please
    (fwd)



---------- Forwarded message ----------
Date: Tue, 19 Nov 2002 10:50:31 -0800
From: Adam van den Hoven

To: dave.beckett@bristol.ac.uk, emiller@w3.org, Danbri@w3.org
Subject: Qualified Dublin Core XML Schema for you to do with as you please

Hi guys,

Since I wasn't sure what I should do with this, I figured I'd pass it on
to all three of you and let you do with it what you will.

I have a need to use Dublin Core but I don't need, or want, the overhead
of RDF parsing. This is particularly true since this will be populated
by a template in a content management system that barely understands
DTDs (forget about RDF Schemas). Since "my" developers understand XML
Schema and I can convert that back into DTDs easily enough, I needed an
XML Schema for Dublin Core. Your document "Expressing Simple Dublin Core
in RDF/XML" was a good start but I really want to make use of the
qualifiers and encoding schemes. As a result, I went out an built my own
XML Schemas for Qualified Dublin Core.

To do, this I relied heavily on your work (ok, I stole some of it) and
expanded (hopefully correctly) to explicitly allow the encodings and
qualifications.

The encodings are achieved using the recommendations from
http://dublincore.org/documents/dc-xml-guidelines/. Basically this means
creating a simple type that is a union of xsd:string and simple types
for the encodings, allowing for the use of xsi:type. Now I've
established a requirement that all the content of my metadata be simple.
I know its not generally useful but it works for me in this case. Any
mark-up I need will be handled via rdf:Resource links.

In the interest of sharing knowledge I'm sending you the schemas to do
with what you please. They are not consistently (or even well)
documented. That is the next step for me. Since I started from your
files, dcmes-dc and dcmes-rdf are the file names I used. Only -dc has
changed. dcterms is my own work.

They all should validate, although on my ide, I get error reports
against dcterms when validating dcmes-dc and errors in dcmes-dc when
validating dcterms. I suspect that's a function of the validator not
handling circular imports well.

I hope this is somehow useful to you in your continuing work.


H. Adam van den Hoven
[...]




APPLICATION/OCTET-STREAM attachment: dcterms.xsd

APPLICATION/OCTET-STREAM attachment: dcmes-rdf.xsd

APPLICATION/OCTET-STREAM attachment: dcmes-dc.xsd




