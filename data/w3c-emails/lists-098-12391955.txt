docno="lists-098-12391955"
received="Wed Nov 27 15:18:18 2002"
isoreceived="20021127201818"
sent="Wed, 27 Nov 2002 20:18:10 +0000 (GMT)"
isosent="20021127201810"
name="Ian Hickson"
email="ian@hixie.ch"
subject="Re: Understanding RDF"
id="Pine.LNX.4.21.0211271746380.2539-100000@dhalsim.dreamhost.com"
charset="US-ASCII"
inreplyto="3B4E8F70-017B-11D7-A048-003065F376B6&#64;aaronsw.com"
expires="-1"

To: Aaron Swartz<me@aaronsw.com>
Cc:"www-archive@w3.org"<www-archive@w3.org>



On Tue, 26 Nov 2002, Aaron Swartz wrote:
>>> You represent you by giving yourself a URI
>> Which URI?
> 
> Any URI, but preferably a short, simple, persistent one. Mine, for 
> example, is http://me.aaronsw.com/

So how do I make assertions about the Web page http://me.aaronsw.com/ ?

What does the following RDF mean?:

   http://validator.w3.org:8001/check?uri=http%3A%2F%2Fme.aaronsw.com%2F&charset=%28detect+automatically%29&doctype=XHTML+1.0+Strict&output=n3

Based on what you said "http://me.aaronsw.com/" represented, I think that
RDF implies whole new things about you... ;-)

(Incidentally, that RDF doesn't make any sense to me based on what
you've explained so far.)


>> If there are just three types in RDF, namely resources with URIs,
>> resources without URIs, and strings, then how do you say things about
>> strings?
> 
> You say things about strings just like anything else:
> 
> "foo" x:anagram "oof" .
> 
> in most serializations, strings can only be objects, though.

So strings are really just resources with identifiers that aren't URIs?


>>> The date is in standard W3CDTF format[1].
>> So there is no RDF-based way of reifying a date? For example, if I have
>> two statements in the form:
>>
>>    foo:a bar:born "1970-01-01T00:00:01Z" .
>>    foo:b bar:born "1970-01-01T00:00:02Z" .
>>
>> ...can my generic RDF engine derive:
>>
>>    foo:a bar:born-before foo:b .
>>
>> ...? (Does this even make sense?)
> 
> No, a generic RDF engine can't.

Hmm, that seems unduly restrictive. Shouldn't there be a way of extending
RDF like this?


>> Ok, so if it is a data handling format, how is it better than 
>> specialised MySQL databases?
> 
> MySQL is a database. It stores things on disk and gives them back in 
> response. It's easy to represent MySQL database schemas as RDF. (A 
> table "people" with columns "name" and "dob" would become a class 
> "Person" with Properties "name" and "dob"; the primary key would become 
> the subject URI.) Then you can put your database on the Web and share 
> it with other databases or non-database programs (like a GUI or XUL 
> application) or combine it with another database to draw further 
> conclusions (Amacrook: "people who bought this product also got 
> arrested for ..."), etc.

So RDF is a kind of database exchange format?


>> Thanks, by the way, this is really helping with my understanding.
> 
> Glad to help! Hopefully I'll be able to fix up the primer so it 
> explains this stuff better.

That would be great.

-- 
Ian Hickson                                      )\._.,--....,'``.    fL
"meow"                                          /,   _.. \   _\  ;`._ ,.
http://index.hixie.ch/                         `._.-(,_..'--(,_..'`-.;.'



