docno="lists-098-12818429"
received="Tue Oct  8 06:14:54 2002"
isoreceived="20021008101454"
sent="Sun, 08 Sep 2002 23:11:07 +0100"
isosent="20020908221107"
name="Frank van Harmelen"
email="Frank.van.Harmelen@cs.vu.nl"
subject="Consensus on semantic layering"
id="250709944.1031526667@dhcp-w3c-209.hpl.hp.com"
charset="us-ascii"
expires="-1"

To: Jim Hendler<hendler@cs.umd.edu>, Guus Schreiber<guus@swi.psy.uva.nl>, Dan Connolly<connolly@w3.org>
Cc:www-archive@w3.org



Below are the notes on which the WebOnt WG agreed in a straw poll concerning 
the semantics for OWL.

Frank.
   ----

Consensus on Semantics for OWL
------------------------------

SYNTAX
------

- Large OWL does not impose any restrictions on how the OWL vocabulary
  can be combined (as long as they form legal RDF)

- Fast OWL assigns meaning to a subset of this
  Characterisation 1 of Fast OWL:
    any RDF graph generated from the abstract syntax via its proposed
    translation to RDF
  Characterisation 2 of Fast OWL:
    any set of RDF triple that conform to the restrictions in Pat/section 6
    - names are separated into classes/objects/properties
    - logical vocabulary is not applied to logical vocabulary

Unclear whether these two characterisations actually coincide
or whether another triple-based characterisation is needed

Any Fast OWL RDF graph is a Large OWL RDF graph, but not vice versa
Intuition: Fast OWL \approx DAML+OIL
Intuition: Fast OWL does not permit to mix OWL contents with arbitrary
           RDF contents

SEMANTICS
---------
- Three styles of defining semantics:
  - native FOL-style
    rdf:type = unary predicate application
    john type person = person(john)
        rdfs:subClassOf = implication between unary predicates
     person subClassOf mamal = person(X) -> mamal(X)
    rdf:Property = binary predicate
    union/intersection/complement = or/and/not
  - SKIF-style
    allows quasi-higher order expressions
    rdfs:Class rdf:type rdfs:Class  = Class(Class)

[
  - situation-calculus style:
    rdf(O,A,V) + full axiomatization
    e.g. need to axiomatised transitivity of subClassOf
    Dan's work, axiomatic DAML+OIL semantics
]

- native FOL-style semantics has been given for Fast OWL
- SKIF-style semantics can be given for Large OWL
- on Fast OWL, these two model theories hopefully correspond:
  if KB+C is in Fast OWL, then

  KB large-OWL-entails C  iff  KB Fast-OWL-entails C

Question: precise characterisation of requirements on KB+C for this to hold

- if the two happen not to agree, then Fast-OWL-entails is normative

MODUS OPERANDI
--------------
- Given a knowledge-base, tool1 must support the tight semantics
  while tool2 may support the liberal semantics
- On any expression in Fast OWL, these two would agree,
  For any expression outside Fast OWL,
  Tool1's behaviour would be undefined,
  while tool2 would return answer according to liberal semantics.



