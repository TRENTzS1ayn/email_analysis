docno="lists-098-14690202"
received="Sat Sep  7 16:09:42 2002"
isoreceived="20020907200942"
sent="Sat, 7 Sep 2002 16:09:41 -0400 (EDT)"
isosent="20020907200941"
name="Dan Brickley"
email="danbri@w3.org"
subject="Re: [RSS-DEV] Why not separate the RSS part form the RDF part?"
id="Pine.LNX.4.30.0209071554570.28652-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="008501c256a7$e1ee1940$657ba8c0&#64;c1457248a.sttls1.wa.home.com"
expires="-1"

To: rss-dev<rss-dev@yahoogroups.com>
cc:<www-archive+rss@w3.org>



On Sat, 7 Sep 2002, Seth Russell wrote:

> Why not separate a super simple (yet extensible) RSS ... say like Aaron's
> RSS 3.0 proposal, or whatever .. from the full power of RDF ?

We did. It's called RSS 1.0! RSS 1.0 limits the full RDF syntax, and
allows for RDF extension data to be included both inline or by reference.

> Keep the RSS
> documents seaprate from the RDF documents, and just specify how they refer
> to each other.  That way the RDF is not restrained by the RSS, and the RSS
> is not complicate by the RDF.

RSS 1.0 allows for inline RDF in certain places in the XML doc, but also
(like all RDF) allows you to point off to further RDF docs elsewhere.

> We could use a property called semref to refer from one document to the
> other.

I'd much prefer to use the property we put in the RDF specs for this,
rdfs:seeAlso. If you want to add more precision w.r.t. the format of the
thing pointed to, use the RDF mimetype in it's dc:format.

Here's an example, adding Person info into the job example I just posted.

<item rdf:about="http://example.com/job2.html">
            <title>The title of job1 goes here</title>
            <link>http://example.com/job2.html</link>
            <description>
(Job2-Job2-Job2...) A simple textual description of the
job (ie. abstract of the job advert we reference) goes
here.
            </description>

            <job:advertises>
                 <wn:Job job:title="Job title for job2 goes here"
 job:salary="150000"
 job:currency="UKP"
 >
<job:orgHomepage rdf:resource="http://ilrt.org/"/>
<!-- this is the new bit -->
<job:contactPerson>
 <foaf:Person foaf:name="Dan Brickley">
  <foaf:mbox rdf:resource="mailto:danbri@w3.org"/>
                          <rdfs:seeAlso>
                            <rdf:Description rdf:about="http://rdfweb.org/people/danbri/rdfweb/danbri-foaf.rdf">
                             <dc:format>application/rdf+xml</dc:format>
                            </rdf:Description>
                           </rdfs:seeAlso>
                          </foaf:Person>
                         </job:contactPerson>
                  </wn:Job>
             </job:advertises>
          </item>


This fragment:


                          <rdfs:seeAlso>
                            <rdf:Description rdf:about="http://rdfweb.org/people/danbri/rdfweb/danbri-foaf.rdf">
                             <dc:format>application/rdf+xml</dc:format>
                            </rdf:Description>
                           </rdfs:seeAlso>


I would just write:

<rdfs:seeAlso rdf:resource="http://rdfweb.org/people/danbri/rdfweb/danbri-foaf.rdf"/>

since rdfs:seeAlso is a pretty strong hint that the thing pointed to is
RDF.

Note that once you de-reference
http://rdfweb.org/people/danbri/rdfweb/danbri-foaf.rdf that's not the end
of the story; that document (which describes some stuff to do with me) has
rdfs:seeAlso pointers off to more information about other people and
things.

So, yes, allowing for "RDF as hypertext" is an important aspect of
deploying RSS 1.0 and for bootstrapping the semantic web. We don't need to
include everything in the channel feed, just the most interesting/relevant
bits and pointers off to more info elsewhere.

But *please* note that this design is deployable already, using RSS 1.0 as
specified and the existing rdfs:seeAlso property. We do not need to go
proposing RSS 3 4 or 5 before we can do such things.

rdfs:seeAlso is deployed and deployable already.

BTW http://www-106.ibm.com/developerworks/xml/library/x-foaf2.html and
http://www-106.ibm.com/developerworks/xml/library/x-foaf.html gives a nice
overview of how we're using this technique in FOAF to link RDF documents
together.

Dan


-- 
mailto:danbri@w3.org
http://www.w3.org/People/DanBri/



