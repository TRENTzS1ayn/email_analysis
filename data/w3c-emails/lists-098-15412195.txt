docno="lists-098-15412195"
received="Tue Sep 17 19:08:04 2002"
isoreceived="20020917230804"
sent="Tue, 17 Sep 2002 23:49:34 +0100"
isosent="20020917224934"
name="Sean B. Palmer"
email="sean@mysterylights.com"
subject="RSS: Set Those Semantics Free"
id="002301c25e9c$808f9dc0$36540150@localhost"
charset="utf-8"
expires="-1"


To:"Ziv Caspi"<zivca@netvision.net.il>
Cc:"Shelley Powers"<shelleyp@burningbird.net>,"Sjoerd Visscher"<sjoerd@w3future.com>,<www-archive+rss@w3.org>


[Outlines a (i.e. yet another) proposal for making RSS 2.0 RDF compatible,
based upon Ziv's comments. Shelley and Sjoerd are CC'd since they've shown
the most interest in this whole line of investigation.]

[[[
The RDF/XML Syntax Specification (let's make that RXSS) is a completely
different beast. Where stylesheets and XML Schema are out-of-band, RXSS is
in-band.
]]] - http://radio.weblogs.com/0106548/2002/09/11.html#a81

It is possible, with current technologies such as XSLT (and perhaps even
Notation3), to transform an RSS 2.0 document into RDF on a syntactic level.
There are a few obstacles to actually getting it all to work smoothly, and
be accepted by the community, that I want to address here.

Sjoerd created an XSLT stylesheet [1] (a kind of program) that transforms
RSS 2.0 into RDF. The two immediate problems that this approach raises
are:-

* How do people know that this mapping to RDF is the one that the creator
of RSS 2.0 (i.e. Dave/UserLand) intends?
* For someone just getting into RSS 2.0, and wanting to convert it to RDF,
how can they *find* this transformation?

The obvious answer to both of these questions is RDDL [2]. RDDL is a
namespace catalogue format that enables one to associate certain documents
(usually text documentation, schemata, transformations, stylesheets, and
behaviours) with a language via. its namespace. It ended years of flamewars
on the xml-dev mailing list as to what should come at the end of a
namespace; it works, and it's a deployed technology.

Basically, a RDDL document is an ordinary XHTML Basic document, but with a
few special XLinks (the standard XML linking technology) and other elements
added that can be read by machines. The W3C's experimental XML Schema
validator, XSV, can actually validate documents that use a RDDL namespace
by parsing the RDDL and getting the linked schemata.

With RSS 2.0, it would be feasible for Dave to simply convert his RSS 2.0
schema document to RDDL. (N.B. I'll be emailing Dave separately to ask him
about this). I've prepared a possible example of this at:-

   http://infomesh.net/2002/rss2/rss2ns.html

Now, this serves the immediate purpose of informing anyone who comes to RSS
2.0 through the namespace where all the documentation and implementations
are. Technically, it should also satisfy those for whom "RSS" is synonymous
with "RDF application".

The great thing about RDDL is that it's extensible: Sjoerd's transformation
only converts to a non-RSS 1.0 application of RDF, but should someone write
another stylesheet, that can easily be added. Should anyone write some kind
of DTD or schema for RDDL, that can be added too.

The only remaining problem is that this introduces a dependency on XSLT for
anyone wanting to create RDF out of RSS 2.0. The argument against RSS 2.0
at the moment is that RSS 2.0 could easily be an RDF application *and*
remain simple enough to be true to its RSS 0.9x roots, and be implementable
by UserLand's customers and developers. This puts extra burden on RDF
developers, but to be quite frank, RDF developers have enough syntactic
worries already that requiring a nice little XSLT transform isn't going to
make much difference. And all XML parsers should come with an XSLT engine
anyway :-) Perhaps some folk will beg to differ, and that's the main
debating point of this proposal.

[1] http://w3future.com/weblog/gems/rss2rdf.xsl
[2] http://www.rddl.org/

--
Kindest Regards,
Sean B. Palmer
@prefix : <http://purl.org/net/swn#> .
:Sean :homepage <http://purl.org/net/sbp/> .



