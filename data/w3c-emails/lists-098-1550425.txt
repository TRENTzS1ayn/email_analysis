docno="lists-098-1550425"
received="Sat Sep  8 06:26:16 2001"
isoreceived="20010908102616"
sent="Sat, 8 Sep 2001 06:26:12 -0400 (EDT)"
isosent="20010908102612"
name="Dan Brickley"
email="danbri@w3.org"
subject="SOAP/NTriples testing and visualization"
id="Pine.LNX.4.30.0109080606030.15795-100000@tux.w3.org"
charset="US-ASCII"
inreplyto="200109072344.f87Nibb12049&#64;theinfo.org"
expires="-1"

To: Aaron Swartz<aswartz@upclink.com>
cc:<hugo@w3.org>,<em@w3.org>,<connolly@w3.org>,<www-archive@w3.org>




> Yeah, why waste your time on checking when there are prizes to
> be figured out! :-)

:)

I'll get thinking!

In the meantime, I took a look at your examples, unpacked them on w3.org, and
made a few tweaks. First, I started unpacking your msg into .xml, .n3, and
.t files; got halfway through and figured it'd be easier to get a .zip of
the originals from you.

I worked from the (derrived) .nt files since I'm not a huge .n3 fan yet,
chopped out some bits that appeared to be cruft from Cwm, and then ran
them through a cleanup of my rdfviz.org perl script hacked to eat a
(subset of! eek...) ntriples.

todo:
- need a Perl ntriples parser (Dan, did you write one of these?)
- if you're interested, get you write access to the directory
- refine the tests (maybe in .n3 or just in plain .nt ?)
        - generate .png visualisations
        - show to some selected SOAP folk (hi Hugo! ;-)

I found running the .nt through a visualiser made for a nice way of
picking up glitches in the data (eg. you need to s/Think/Thing/ in test001).

> > One nitpic: what's with the daml-equiv stuff? Why do we need that?
>
> It's a hack so that I can give the () list a name. You could
> just merge the two if you wanted.

I'm thinking that if we can avoid RDFisms in our representation of SOAP
data, we might get away with persuading them to adopt NTriples as a
testing format...

What do you reckon?

Anyway work so far (inc. a .png for 1st two tests; 2nd is prettier) is all
at
http://www.w3.org/2001/09/soap-ntriples/

I figure there are three reasons at least why this is interesting:

  - SOAP conformance testing
  - visualisation of SOAP data structures
  - RDF/SOAP interoperability

Dan



