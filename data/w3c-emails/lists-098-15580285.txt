docno="lists-098-15580285"
received="Wed Sep 18 15:38:02 2002"
isoreceived="20020918193802"
sent="Wed, 18 Sep 2002 15:37:27 -0400"
isosent="20020918193727"
name="Joseph Reagle"
email="reagle@mit.edu"
subject="Re: [RSS-DEV] Re: Time for a name change?"
id="200209181537.27601.reagle@mit.edu"
charset="iso-8859-1"
inreplyto="000701c25f48$c1331670$0300a8c0&#64;proteus"
expires="-1"

To:rss-dev@yahoogroups.com,"Peter Wilkinson"<pw-yahoogroups@thirdfloor.com.au>
Cc:www-archive@w3.org



On Wednesday 18 September 2002 03:22 pm, Peter Wilkinson wrote:
> RSS 1.0 has shown that RDF can work in an everyday spec but that getting
> folks to the stage where they feel comfortable takes some doing. I can't
> see that changing the spec now serves much purpose other than to confuse
> things more, thinking back to what I found when I read the spec was that
> a lot of it reads like the W3C RDF docs and that isn't a good thing if
> it is meant to be read by mere mortals. Things like 5.3.5 talking about
> <items> when it says "An RDF Seq (sequence) is used to contain all the
> items rather than an RDF Bag to denote item order for rendering and
> reconstruction. " confused me completely for the first half dozen
> readings. If this type of text was replaced with something along the
> lines of "<items> provides the order for display individual items in the
> channel".

Yes, exactly. There's a couple of cases under which RDF artifacts might 
appear in XML:
1. The artifact, or some extra level of nesting for striping, is necessary 
to make RSS parsers happy. They really have no relevance to the application 
(even *if* they do make an implicit semantic of its data model more 
explicit). Folks see this and say, "what the heck is this?" and then 
realize they don't really need it.
2. The artifact (e.g., rdf:about) actually serves some useful purpose. 
There'd be a corresponding piece of syntax regardless of the namespace from 
which it came. That means once you know what it does, encountering that 
same syntax in other specifications is actually a benefit which we 
frequently speak: syntactic *and* semantic interoperability. So someone 
will ask, "what the heck is this" and then realize it is useful.

Unfortunately, I think the RSS1.0 has a couple instances of the first, and a 
couple of the second. And of the latter, the RSS1.0 spec adds RDF elements 
without motivating or explaining the purpose; "go read the RDF spec" is an 
unreasonable request of someone who just wants to do RSS. Since this 
confusion tends to annoy some, once they've been through the ringer, they 
become allergic to *any* occurrence of an RDF artifact.



