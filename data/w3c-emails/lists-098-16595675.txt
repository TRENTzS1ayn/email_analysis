docno="lists-098-16595675"
received="Sat Apr  5 07:50:54 2003"
isoreceived="20030405125054"
sent="Sat, 5 Apr 2003 14:50:32 +0200"
isosent="20030405125032"
name="Jos De_Roo"
email="jos.deroo@agfa.com"
subject="cwm.py,v 1.128 and lldm test"
id="OF8BB0CD23.D08D7FAB-ONC1256CFF.00450EA8-C1256CFF.0046AD77@agfa.be"
charset="us-ascii"
expires="-1"

To:"timbl"<timbl@w3.org>
Cc:www-archive@w3.org



Tim,

cwm http://www.agfa.com/w3c/2002/10/medicad/op/lldmD.n3
    http://www.agfa.com/w3c/2002/10/medicad/op/lldmP.n3 --think

was working fine with
#Processed by Id: cwm.py,v 1.127 2003/03/28 14:11:20 timbl Exp


but with the next version we get
#Processed by Id: cwm.py,v 1.128 2003/04/02 03:42:04 timbl Exp
        #    using base file:/josd/WWW/2002/10/medicad/op/
        Traceback (most recent call last):
  File "/w3ccvs/WWW/2000/10/swap/cwm.py", line 789, in ?
    doCommand()
  File "/w3ccvs/WWW/2000/10/swap/cwm.py", line 641, in doCommand
    _store.think(workingContext, mode=option_flags["think"])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2228, in think
    step = self.applyRules(F, G, alreadyDictionary=bindingsFound,
mode=mode)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2274, in applyRules
    already=already, mode=mode)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2340, in tryRule
    total = query.resolve()
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2545, in resolve
    return self.unify(self.queue, self.variables, self.existentials)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2758, in unify
    bindings[:], nb, level=level+2, evidence = evidence + [reason])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2758, in unify
    bindings[:], nb, level=level+2, evidence = evidence + [reason])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2758, in unify
    bindings[:], nb, level=level+2, evidence = evidence + [reason])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2734, in unify
    return total + query.conclude(bindings, level, evidence=evidence)  # No
non-list terms left .. success!
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2603, in conclude
    self.store.copyContextRecursive(
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2159, in
copyContextRecursive
    total = total -1 + self.storeQuad(q2, why)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 1634, in storeQuad
    assert isinstance(obj, Term), "Should be a term:"+`obj`
AssertionError: Should be a term:-104.89999999999999


we also did a (local) test where we unquoted all numerals
(e.g. by writing ?x math:lessThan -2.25)
but then we get
#Processed by Id: cwm.py,v 1.128 2003/04/02 03:42:04 timbl Exp
        #    using base file:/josd/WWW/2002/10/medicad/op/
        Traceback (most recent call last):
  File "/w3ccvs/WWW/2000/10/swap/cwm.py", line 789, in ?
    doCommand()
  File "/w3ccvs/WWW/2000/10/swap/cwm.py", line 641, in doCommand
    _store.think(workingContext, mode=option_flags["think"])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2228, in think
    step = self.applyRules(F, G, alreadyDictionary=bindingsFound,
mode=mode)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2274, in applyRules
    already=already, mode=mode)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2340, in tryRule
    total = query.resolve()
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2545, in resolve
    return self.unify(self.queue, self.variables, self.existentials)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2758, in unify
    bindings[:], nb, level=level+2, evidence = evidence + [reason])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2758, in unify
    bindings[:], nb, level=level+2, evidence = evidence + [reason])
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2686, in unify
    nbs = item.tryBuiltin(queue, bindings, heavy=0, evidence=evidence)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 2960, in tryBuiltin
    result = pred.evalObj(subj, queue, bindings[:], proof)
  File "/w3ccvs/WWW/2000/10/swap\thing.py", line 523, in evalObj
    return self.store._fromPython(self.evaluateObject(self.store.
_toPython(subj, queue)), queue)
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 1950, in _toPython
    list.append(self._toPython(e, queue))
  File "/w3ccvs/WWW/2000/10/swap\llyn.py", line 1939, in _toPython
    if x.datatype is self.double: return double(x.string)
NameError: global name 'double' is not defined


and we like the latter kind of numerals


-- ,
Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/



