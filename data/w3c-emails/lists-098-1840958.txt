docno="lists-098-1840958"
received="Mon Sep 24 20:55:40 2001"
isoreceived="20010925005540"
sent="Mon, 24 Sep 2001 20:55:32 -0400"
isosent="20010925005532"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: extra axiom?"
id="01c201c1455c$cae09c30$bc061812@CREST"
charset="iso-8859-1"
inreplyto="OF178CE017.F74B8776-ON41256AD1.006FEEC1&#64;bayer-ag.com"
expires="-1"


To:<jos.deroo.jd@belgium.agfa.com>
Cc:<www-archive@w3.org>

Why do you do the RULE7 a rdfs:Resource. thing anyway?

How do you use that?

Tim

(No,  {} implies ... doesn't help cwm at all)

----- Original Message ----- 
From: <jos.deroo.jd@belgium.agfa.com>
To: <timbl@w3.org>
Cc: <www-archive@w3.org>
Sent: Monday, September 24, 2001 5:25 PM
Subject: extra axiom?


> Tim,
> 
> I came across http://ilrt.org/discovery/chatlogs/rdfig/2001-09-24.html
> and found
> [[
>   [03:14:20] tim
>   So I am left wondering whether to build
>   this log:forAll :x. {} log:implies { :x a rdf:Resource }.
>                                                ^s
>   into cwm so that I can use Jos's rules directly -- or is
>   the whole idea that you have to turn on each rule - you have
>   control of them. I didn't notice this axiom in his list.
> ]]
> 
> I see that adding that rule doesn't help CWM to infer
> more, and that Euler has a parser problem
> while I thought that I fixed that {} :-(
> Adding
> ->
>   { :s :p :o } log:implies { :s a rdfs:Resource }.
> 
> is better, and CWM now thinks
> ->
>     rdfs:Resource     a rdfs:Class,
>                 rdfs:Resource .
> 
>     rdfs:domain     a rdfs:ConstraintResource,
>                 rdfs:Resource .
> 
>     rdfs:range     a rdfs:ConstraintResource,
>                 rdfs:Resource .
> 
> however is see that it is not finding
> ->
>     rdfs:ConstraintResource a rdfs:Class.
> 
> whereas Euler thinks it is
> ->
>    {:RULE7 a rdfs:Resource.
>     rdfs:domain a rdfs:ConstraintResource} log:implies
>   {rdfs:ConstraintResource a rdfs:Class}.
> 
>    {:RULE7 a rdfs:Resource.
>     rdfs:range a rdfs:ConstraintResource} log:implies
>   {rdfs:ConstraintResource a rdfs:Class}.
> 
> We actually have that rule built in (and also the one
> to infer wether a thing is a rdf:Property) because we
> could,t find a way to do that in a back-chaining way...
> There was not an "idea that you have to turn on each rule"
> but that could be interesting :-)
> 
> --
> Jos De Roo, AGFA http://www.agfa.com/w3c/jdroo/
> 
> 



