docno="lists-098-2608885"
received="Wed Apr 24 19:45:34 2002"
isoreceived="20020424234534"
sent="Wed, 24 Apr 2002 19:45:30 -0400 (EDT)"
isosent="20020424234530"
name="Drew McDermott"
email="drew.mcdermott@yale.edu"
subject="Re: getting daml:imports right is easy? [was: DAML Level of Effort for FY03-FY05]"
id="200204242345.g3ONjUq06934@pantheon-po04.its.yale.edu"
inreplyto="1019672524.17366.202.camel&#64;dirk"
expires="-1"


To:connolly@w3.org
CC:drew.mcdermott@yale.edu,www-archive@w3.org,danbri@w3.org


   I'm not sure what log:semantics is either, formally;
   but re cyc-style lifting, see

     Contexts: A Formalization and Some Applications
     http://www-formal.stanford.edu/guha/guha-thesis.ps

I really must get around to reading this.

   > But, as I said on www-rdf-logic, importing an ontology just means
   > incorporating its contents.  What's hard about that?

   ont:imports isn't just magic syntax. It's a property
   that relates ontology documents. It can be specialized
   using subProperty.

   ...
   So Lassie is an animal; but you have to do reasoning
   to figure out what to import from OntX.

Well, our disagreement is clear, but, at least in part, easily
settled.  In our view, 'imports' *is* magic syntax, and not a property
of anything.  If the name is taken already, and is widely agreed to be
a "metaproperty" of ontologies, then we will pick a different name for
the operation of "including an ontology in a dataset."

The remaining disagreement appears to concern the meaning of
daml:imports when it occurs in an ontology.  The designers of the
language, by writing it as

   <> daml:imports "http:// whatever "

have indeed made daml:imports an ordinary property that could indeed
have subproperties, etc.  I propose that we undo or bypass this
decision and introduce magic syntax for the straightforward concept of
just importing another ontology.

Here's an argument that I think should convince you: Suppose I have

    <> my:imports1 <OntU>
    <> my:imports2 <OntV>

It happens that OntU declares

     my:imports2 daml:subPropertyOf daml:imports
    
whereas OntV declares

     my:imports1 daml:subPropertyOf daml:imports

Does anyone import anything?

Even in less pathological examples, you have to untangle a bunch of
labeled, unordered edges in a graph.  Some of these edges, according
to your view, allow me to import ontologies which would then, and only
then, allow me to view some of the other edges as importing yet other
ontologies.  Couldn't the meaning depend on the order in which I made
these importations?

Why insist on this mess when there is a useful and comprehensible
piece of magic syntax that we so obviously need?

                                             -- Drew



