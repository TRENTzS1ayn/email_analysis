docno="lists-098-2805997"
received="Tue Apr 30 05:25:09 2002"
isoreceived="20020430092509"
sent="Tue, 30 Apr 2002 12:28:14 +0300"
isosent="20020430092814"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Specific questions regarding rdfs:Literal, possible closure..."
id="B8F43E5E.143CB%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="B8F41B5A.1439B%patrick.stickler&#64;nokia.com"
expires="-1"

To:<www-archive@w3.org>



------ Forwarded Message
From: Patrick Stickler <patrick.stickler@nokia.com>
Date: Tue, 30 Apr 2002 09:58:50 +0300
To: ext Dan Brickley <danbri@w3.org>
Cc: Brian McBride <brian_mcbride@hp.com>, Pat Hayes <phayes@ai.uwf.edu>, ext
Sergey Melnik <melnik@DB.Stanford.EDU>
Subject: Specific questions regarding rdfs:Literal, possible closure...


Dan (et. al.),

I would appreciate some answers and clarifications to the following
specific questions regarding literals and rdfs:Literal:

My own understanding (how I would answer these questions) are
provided in square brackets.

1. Are all strings denoted by literal strings in the graph automatically
   members of the class rdfs:Literal?

   [Yes]

2. Are all members of rdfs:Literal also members of rdf:Resource? I.e.
   is rdfs:Literal rdfs:subClassOf rdf:Resource?

   [No]

3. Can a blank node or uriref denote a literal string and appear in
   the graph wherever that literal string might appear?

   [Yes]

4. Is the object of the following statement a member of rdfs:Literal?

   x:foo rdfs:comment "This is a foo." .

   [Yes]

   Is the object a literal node?

   [Yes]

5. Is the object of the following statement a member of rdfs:Literal?

   x:foo rdfs:comment _:y .

   [Yes, per rdfs:comment rdfs:range rdfs:Literal]

   Is the object a literal node?

   [No]

--

If the above answers are correct, then:

1. The addition of the following closure rule, IMO, resolves my objection
to the present datatyping specification:

IF

   ?p rdfd:datatype ?d .
   ?s ?p ?l .
   ?l rdf:type rdfs:Literal .

THEN

   ?s ?p ?x .
   ?x rdfd:lex ?l .


and:

2. The following 'template' constrains the property values to the
   inline idiom and the lexical forms of a given datatype:

   ?p rdfd:datatype ?d .
   ?p rdfs:range rdfs:Literal .

3. The following 'template' constrains the property values to the
   lexical form and datatype property idioms and the datatype values
   of a given datatype:

   ?p rdfd:datatype ?d .
   ?p rdfs:range ?d .
   
4. Conflicts with daml:uniqueProperty will remain when both the
   inline idiom and either the lexical form or datatype property
   idioms are used for such a property in the same graph. This
   is simply due to the fact that a lexical form will never equal
   a datatype value, and one may specify either as the object of
   a property -- unless one uses one of the constraints as defined
   in #2 or #3 above.

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com


------ End of Forwarded Message



