docno="lists-098-5517998"
received="Sun Dec 22 14:39:40 2002"
isoreceived="20021222193940"
sent="Sat, 21 Dec 2002 21:46:01 -0500"
isosent="20021222024601"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="Re: Recursive rules:  is this a bug in Cwm?"
id="81E61A72-1557-11D7-B2D0-000393914268@w3.org"
charset="US-ASCII"
inreplyto="5.1.0.14.2.20021219214053.043c41d0&#64;127.0.0.1"
expires="-1"

Cc: www-archive+n3bugs@w3.org, Dan<connolly@w3.org>
To: Graham Klyne<GK@NineByNine.org>



The error message you got in [1] (without looking at the code at all) 
is that
it was trying to output a list, and found two values stored as the 
first of the list.
In fact this should not be an error, one simple should conclude that
the two things are equivalent.

The earlier problem which indirectly led to that was that it isn't 
concluding
a bnode from a bnode - its making up a spurious node id.  I've put it 
into the
suite, but not fixed ityet...

Tim

On Thursday, Dec 19, 2002, at 16:41 US/Eastern, Graham Klyne wrote:

> [I sent this to RDF-IG, then DanC mentioned this route for Cwm reports 
> - #g]
>
> I've been experimenting with "recursive" rules in Cwm, and get some 
> unexpected results:
>
>   [1] http://www.ninebynine.org/SWAD-E/Intro.html#CwmRulesExperiments
>
> My test file is:
>   http://www.ninebynine.org/SWAD-E/Scenario-HomeNetwork/PlayRules.n3
>
> Which essentially reduces to this test case:
>
> [[
> {
>   ?A rule:append ( [ daml:first ?H ; daml:rest ?T ] ?T1 ) .
> }
> log:implies
> {
>   ?A daml:first ?H ;
>      daml:rest  [ rule:append ( ?T ?T1 ) ] .
> } .
>
> :A1 rule:append ( ( "L11" "L12" "L13" ) "L14" ) .
> ]]
>
> #g
>
>
> -------------------
> Graham Klyne
> <GK@NineByNine.org>
>
> -------------------
> Graham Klyne
> <GK@NineByNine.org>



