docno="lists-098-5868348"
received="Wed Feb 13 06:26:59 2002"
isoreceived="20020213112659"
sent="Wed, 13 Feb 2002 13:28:07 +0200"
isosent="20020213112807"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Proposal for Compromise and Closure (with all three idioms)"
id="B8901A67.E318%patrick.stickler@nokia.com"
charset="US-ASCII"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>, Brian McBride<brian_mcbride@hp.com>



I would like to make the following proposal, first just now to
you Pat (and Brian), and if you are cool with it, then to the
broader DT subgroup.

1. We keep all three idioms.

2. We include the following manditory/implied/automatic statements
   in the DT spec:

   rdfs:Datatype rdf:type rdfs:Class .
   rdf:dtype rdfs:subPropertyOf rdf:type .
   rdf:dtype rdfs:range rdfs:Datatype .
   rdfs:drange rdfs:subPropertyOf rdfs:range .
   rdfs:drange rdfs:range rdfs:Datatype .

   (if you don't like 'drange', feel free to suggest some other name,
    though actually, I think we can have alot of fun with it ;-)

   These give us a completely local idiom that applications
   can recognize without additional RDFS statements in the
   graph, based on the above fixed knowledge.

   It also allows lexical datatypes to be used to constrain
   only value spaces without recourse to defining non-lexical
   types just for that purpose. Thus rdfs:range entails rdf:type
   and rdfs:drange entails rdf:dtype.

   This also keeps the present semantics of rdf:type and
   rdfs:range untouched by the DT solution.

3. The definition of 'local' is corrected to reflect the
   meaning set forth in the desiderada, meaning not requiring
   any statements outside the idiom triples for recognition
   and interpretation (all automatic statements/closure rules in
   the MT though still apply)

4. It is clearly pointed out that the datatype triple idiom
   is not a proper local idiom, per the definition above,
   and requires the explicit statements
   
      ddd rdf:type rdfs:Datatype .
      ddd rdfs:subPropertyOf rdf:value .

   in order for an application to "know" that it is a datatyping
   idiom without special knowledge of the datatype itself (I don't
   accept any application specific knowledge as valid in this case,
   only knowledge in the RDF graph or mandated by the RDF DT spec)

5. It is stated clearly that the doublet idiom is the only
   fully local idiom, and users who need or wish to use a fully
   local idiom should use the doublet idiom.

6. That it is clearly pointed out that coreference/merging using
   the datatype triple idiom is not a feature of RDF datatyping
   (even if the datatype triple idiom facilitates this) but is
   application-specific and that no user should automatically
   presume that any arbitrary graph using the datatype triple
   idiom has fully merged coreferent bNodes -- though a given
   application providing access to a given graph, or the
   producer/publisher/owner of a single specific graph in
   isolation is free to make such claims.

The last three items serve as "guard rails" for users so that
they understand the nature/utility/limitations of the different
idioms and what to expect (and not expect) from each.

With the above changes, then I am happy to recommend the
convergence proposal, with all three idioms, both to the WG and
to the RDF community at large.

What do you say?

Patrick

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



