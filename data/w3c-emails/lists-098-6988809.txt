docno="lists-098-6988809"
received="Fri Jan 11 11:09:48 2002"
isoreceived="20020111160948"
sent="Fri, 11 Jan 2002 16:09:24 -0000"
isosent="20020111160924"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: PD datatyping doc plans"
id="CEECKEAMDAJDDEDGJNBEOEAJCAAA.jjc@hpl.hp.com"
charset="US-ASCII"
inreplyto="B864CDDE.B7F6%patrick.stickler&#64;nokia.com"
expires="-1"

To:"Patrick Stickler"<patrick.stickler@nokia.com>,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:<www-archive@w3.org>




> The "pairing" model itself should absolutely be defined as part of
> the MT. It was only the idioms that would be left out of the MT. But
> perhaps the idioms also need to be in the MT, but modularly, as a
> layer on top of the pairing model, so we retain the insulation of
> the core data typing model from changes/evolution of idioms.


A subtly with the P approach is that there isn't just one type, there can be
any number of range constraints. These, in the logicians world, create a
single intersection type, but for the rest of us they look suspiciously
different from one type. Thus P (in some instances) doesn't follow the
elegant pair picture.

The primer level material on PD needs to suppress that complication. I think
viewing the pairing as something that gets discussed in the less formal
section, gets implemented in actual code but is
extended/side-stepped/ignored in the more formal section will probably be
OK.


Jeremy



