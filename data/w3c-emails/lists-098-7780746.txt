docno="lists-098-7780746"
received="Sat Jan 19 05:15:16 2002"
isoreceived="20020119101516"
sent="Sat, 19 Jan 2002 12:15:58 +0200"
isosent="20020119101558"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Problem with TDL (EVEN BIGGER ONE)"
id="B86F13FE.BE0D%patrick.stickler@nokia.com"
charset="US-ASCII"
inreplyto="3C488887.58946437&#64;db.stanford.edu"
expires="-1"

To: ext Sergey Melnik<melnik@db.stanford.edu>
CC:<www-archive@w3.org>, Jeremy Carroll<jjc@hplb.hpl.hp.com>


On 2002-01-18 22:41, "ext Sergey Melnik" <melnik@db.stanford.edu> wrote:

> Patrick,
> 
> thank you for the clarification. In fact, your approach suggests a third
> original idiom, in which typed elements are interpreted as pairs (value,
> lexical representation). I'm going to accommodate this idiom in the
> datatyping document that I'm editing.
> 
> However, under the above interpretation, your document [1] is
> inconsistent. The figures in 3.1 and 3.2 can only be consistent with
> each other, if literals (rectangles) are interpreted as pairs. This is
> fine, but you run into the issue that the interpretation of literals is
> context-sensitive (i.e. not fixed, but depends on the property that the
> literals are handing off). So, for example, the literals hanging off
> rdf:value are now also interpreted as some kind of pairs.

I'm not sure I follow you. The idiom requires that rdf:value has
a literal value. It is not a recursive idiom. You can't have
an anonymous node with an rdf:value that is itself an anonymous
node with an rdf:value....

Perhaps this is not specified clearly enough in the discussion
of the idiom. I will try to make that clearer.

Note though, that this is an issue with the idiom, not the TDL
model.

The separation from the TDL model and the idioms employed is
intentionally strict -- so that each idiom is simply a means
of expressing a pairing, and the pairing itself is the foundation
of interpretation.

> Furthermore, your scheme *does* require modifications the the present
> RDF graph model: it is based on untidy graphs, quite in contrast to what
> you claim! In other words, you cannot just merge two literals with the
> same content together (they might represent two different pairs,
> depending on the properties they are hanging on).

My understanding of graph tidying is that nodes with literal labels
and anonymous nodes are never merged. Only nodes with URIref labels.

Thus, you would never merge two literals. Every literal node (every
instance of a lexical form) is unique in the graph.

If this is not correct, then that's *major* news to me, and I'll
have to go back and re-re-re-re-read the MT and other relevant
discussions.

Thus, per my present understanding, TDL is based on tidy graphs,
and both of the defined idioms are valid for tidy graphs without
the problems you indicate.

Also, again, if it turns out that I am mistaken about the tidying,
it is only an issue of the particular idiom, and not of the TDL
model itself.

Regards,

Patrick

> All in all, given your clarification, your scheme is a specialized
> variant of Patel-Schneider's/Hayes' one, but with some false claims...
> 
> Sergey
> 
> [1] http://www-nrc.nokia.com/sw/TDL.html
> 
> 
> Patrick Stickler wrote:
>> 
>> On 2002-01-18 4:42, "ext Sergey Melnik" <melnik@db.stanford.edu> wrote:
>> 
>>> Patrick,
>>> 
>>> there is a well-known problem with the rdf:type/rdf:value representation
>>> that you described in
>>> 
>>> http://www-nrc.nokia.com/sw/TDL.html
>>> 
>>> In essence, the interpretations of nodes _1 and _2 in
>>> 
>>> _1 rdf:value "3.0"
>>> _1 rdf:type us-double
>>> _2 rdf:value "3,0"
>>> _2 rdf:type german-double
>>> 
>>> fall together (_1 and _2 represent the same real value), and the pairing
>>> between the lexical representation and the type gets corrupted.
>>> Specifically, the semantics of the above four statements is equivalent
>>> to that of
>>> 
>>> _3 rdf:value "3.0"
>>> _3 rdf:value "3,0"
>>> _3 rdf:type us-double
>>> _3 rdf:type german-double
>>> 
>>> How do you suggest to work around this problem?
>> 
>> There is no problem.
>> 
>> The nodes _1 and _2 would *never* be merged in that fashion.
>> 
>> 1. They do not denote the same value space member of the same
>> datatype as us-double is not the same datatype as german-double.
>> 
>> 2. Neither anonymous nodes nor literal labeled nodes participate
>> in graph tidying.
>> 
>> The fact that the TDLs ("3.0",us-double) and ("3,0",german-double)
>> may correlate to the equivalent member in each other's value spaces or
>> in the value space of e.g. xsd:double is a matter
>> of interpretation -- not of representation.
>> 
>> E.g.
>> 
>> <rdfl:LexicalDatatype rdf:about="xsd:double"/>
>> 
>> <rdfl:LexicalDatatype rdf:about="us:double">
>>    <rdfl:lexicalSubClassOf rdf:resource="xsd:double"/>
>> </rdfl:LexicalDatatype>
>> 
>> <rdfl:LexicalDatatype rdf:about="german:double">
>>    <rdfs:subClassOf rdf:resource="xsd:double"/>
>> </rdfl:LexicalDatatype>
>> 
>> which defines, as we would expect, that the value
>> space of both us:double and german:double are subsets
>> of the value space of xsd:double but only the lexical
>> space of us:double is a subset of the lexical space
>> of xsd:double.
>> 
>> (note the difference between rdfs:subClassOf and
>> rdfl:lexicalSubClassOf!)
>> 
>> And if we know that the value spaces of us:double
>> and german:double are in fact a perfect intersection,
>> then we can also say
>> 
>> <rdfl:LexicalDatatype rdf:about="us:double">
>>    <rdfs:subClassOf rdf:resource="german:double"/>
>> </rdfl:LexicalDatatype>
>> 
>> <rdfl:LexicalDatatype rdf:about="german:double">
>>    <rdfs:subClassOf rdf:resource="us:double"/>
>> </rdfl:LexicalDatatype>
>> 
>> which says that any member of the value space of
>> us:double is also a member of the value space of
>> german:double and visa versa.
>> 
>> Thus, there is no problem.
>> 
>> The nodes in your example would never be merged, and
>> the relationships between the lexical and value spaces
>> of the datatypes in question are explicitly defined,
>> and interpretation about whether the two TDLs
>> ("3.0",us-double) and ("3,0",german-double) denote
>> the same value happen outside the RDF-space, yet
>> the RDF representation -- using the TDL scheme -- is
>> fully sufficient for making that interpretation.
>> 
>> Cheers,
>> 
>> Patrick
>> 
>> --
>> 
>> Patrick Stickler              Phone: +358 50 483 9453
>> Senior Research Scientist     Fax:   +358 7180 35409
>> Nokia Research Center         Email: patrick.stickler@nokia.com

--
               
Patrick Stickler              Phone: +358 50 483 9453
Senior Research Scientist     Fax:   +358 7180 35409
Nokia Research Center         Email: patrick.stickler@nokia.com



