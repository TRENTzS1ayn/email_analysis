docno="lists-098-8453438"
received="Wed Jan 30 13:27:33 2002"
isoreceived="20020130182733"
sent="Wed, 30 Jan 2002 17:30:30 +0000"
isosent="20020130173030"
name="Graham Klyne"
email="Graham.Klyne@MIMEsweeper.com"
subject="Re: (offlist) Re: Datatyping Summary"
id="5.1.0.14.2.20020130170951.00a12840@joy.songbird.com"
charset="us-ascii"
inreplyto="B87DF1CB.CC37%patrick.stickler&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@nokia.com>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>, Brian McBride<bwm@hplb.hpl.hp.com>,<www-archive@w3.org>

At 06:54 PM 1/30/02 +0200, Patrick Stickler wrote:
> >> Though I'd very much like your comments to my question in
> >> my MT commments to Pat, that insofar as the actual denoted
> >> values are concerned, I wonder if either TDL or S can
> >> ensure entailment, since RDF is stuck with non-canonical
> >> lexical forms. C.f. the last comment in
> >>
> >> http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0400.html
> >
> > Unfortunately the question doesn't make sense to me -- entailment is a
> > relationship between graphs, not something that happens to the values in
> > (or denoted by) a graph.
>
>Then I guess I really don't grok the problem.
>
>It seemed to me that Dan's expectations of tidy literals was
>that he was treating node equality with value equality, rather
>than just string equality.

I guess it's my turn to try and be clearer.

The strict treatment of literals advocated by DanC, and embodied in scheme 
S, is one way to ensure that literals don't break self-entailment of 
documents.  I don't believe it's the only way, so in my arguments I've not 
tried to rely on a graph being tidy over literals.

Self-entailment means:  there is no interpretation that satisfies one 
instance of a graph but does not satisfy another instance of the same graph 
(with the same labels and structure).  If the denotation of every node in a 
graph is fully defined by any interpretation together with the syntactic 
elements to which the interpretation is applied, then self-entailment must 
follow.

Jeremy's original theory for TDL did not provide a specific denotation for 
each literal in a graph, so a given interpretation could yield different 
denotations (or no denotation) for different instances of a graph.  And the 
truth-value of graph arcs (triples) depends on the denotations of 
nodes.  So it would be possible for a given graph to evaluate to true OR 
false under a given interpretation, and this is what breaks self-entailment.

Sergey has said he needs tidiness on literals to overcome this.  I don't 
agree:  that is a sufficient condition for self entailment, but I don't 
think it's necessary.  E.g. Pat uses a different approach in his MT for 
blank nodes, which also don't have a fixed denotation under a given 
interpretation...

[Enter my MT notes to Jeremy:
(http://lists.w3.org/Archives/Public/www-archive/2002Jan/0147.html).]

>Insofar as the graph itself is concerned, literals are just
>strings. They don't become values without interpretation
>based on a datatype context.
>
>So all you could entail between two literal nodes is string
>equality.

Now your language has departed from anything I can understand in terms of 
the words you use.  "entail between two literal nodes" just doesn't mean 
anything to me:  entailment is a relationship between expressions that 
evaluate to True or False.

>But I'll just but out of this particular discussion and let
>you more capable and learned folks hash it out.
>
>(I knew I should have slept less in math class...  ;-)

Me too... I've spent much of the past year learning something of what I 
should have learned in class.  (Though I must say, I think Pat's an 
excellent teacher.)

#g


------------------------------------------------------------
Graham Klyne                    MIMEsweeper Group
Strategic Research              <http://www.mimesweeper.com>
<Graham.Klyne@MIMEsweeper.com>
        __
       /\ \
      /  \ \
     / /\ \ \
    / / /\ \ \
   / / /__\_\ \
  / / /________\
  \/___________/



