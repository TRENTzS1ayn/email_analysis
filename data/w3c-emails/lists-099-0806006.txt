docno="lists-099-0806006"
received="Wed Aug  6 14:58:29 2003"
isoreceived="20030806185829"
sent="Wed, 06 Aug 2003 14:58:28 -0400"
isosent="20030806185828"
name="Sandro Hawke"
email="sandro@w3.org"
subject="Re: RDF Core / I18N"
id="200308061858.h76IwSn0003980@roke.hawke.org"
inreplyto="RDF Core / I18N"
expires="-1"


To: Martin Duerst<duerst@w3.org>
cc:www-archive@w3.org



It seems to me you (on behalf of I18N) want these RDF property
elements to mean the same thing:

1.    <title>Weaving the Web</title>

2.    <title rdf:parseType="Literal">Weaving the Web</title>

3.    <title rdf:datatype="xsd:string">Weaving the Web</title>

4.    <title xml:lang="">Weaving the Web</title>

5.    <title xml:lang="" rdf:parseType="Literal">Weaving the Web</title>

Right?

You also would LIKE these to be the same as each other:

7.    <title xml:lang="en">Weaving the Web</title>

8.    <title xml:lang="en" rdf:parseType="Literal">Weaving the Web</title>

9.    <title xml:lang="en" rdf:datatype="xsd:string">Weaving the Web</title>

but XML Schema says you can't have #9, because xml:lang does not
affect the datatype mapping.  They say #5 and #9 would be the same;
xml:lang is silently dropped.  And because XML Schema says this, RDF
Core is now trying to say the same thing: you can't even have #8,
because (according to RDF Core's view) parsetype-Literal as
essentially a kind of datatype.

So if XML Schema changed to allow xml:lang to affect the mapping,
you'd get what you wanted and RDF Core could also give you what you
wanted at no extra cost.   Right?

I realize this isn't practical in the next few weeks, but I wanted to
make sure I at least understood the situation.

      -- sandro



