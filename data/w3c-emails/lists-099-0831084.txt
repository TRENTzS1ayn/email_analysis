docno="lists-099-0831084"
received="Thu Aug  7 00:55:03 2003"
isoreceived="20030807045503"
sent="Thu, 07 Aug 2003 00:55:01 -0400"
isosent="20030807045501"
name="Sandro Hawke"
email="sandro@w3.org"
subject="Re: RDF Core / I18N"
id="200308070455.h774t1qM007951@roke.hawke.org"
inreplyto="4.2.0.58.J.20030806171112.0439c998&#64;localhost"
expires="-1"


To: Martin Duerst<duerst@w3.org>
cc:www-archive@w3.org



> >You also would LIKE these to be the same as each other:
> >
> >7.    <title xml:lang="en">Weaving the Web</title>
> >
> >8.    <title xml:lang="en" rdf:parseType="Literal">Weaving the Web</title>
> >
> >9.    <title xml:lang="en" rdf:datatype="xsd:string">Weaving the Web</title>
> >
> >but XML Schema says you can't have #9, because xml:lang does not
> >affect the datatype mapping.
> 
> Yes. I think 9. is not that important.

Huh.  I would have thought it would be as important, architecturally.
But I guess in practice no one will use that so it doesnt matter.

> What we never expected from them is to a) shoehorn XML Literals
> into datatypes (which may be okay if it helps them and doesn't
> hurt us), and b) turning around and nuking language information
> from XML Literals.

Putting XML literals into datatypes is the only known way to not have
the model, the APIs, and other RDF syntaxes cluttered up by the odd
presense of XML at this level.  N-Triples had this for a while, before
datatypes were done, with literals like this:
          :foo :bar XML"Baz".

There's a serious concern that people who don't care about XML wont
bother to implement these bits if they are bolted onto to the side
like that.  As just another datatype, it fits in smoothly, with no
particular extra work required.  (except for that language tag...)
Would you rather many implementations not support XML at all?
(Perhaps not really a fair question....)

The other coherent/elegant approach I can see would be to say all
non-datatyped literals are XPath Nodes.  So plain literals would be
XPath Text Nodes.  This way the model, the APIs, and the other
syntaxes would all have to deal with XML to do anything with even a
plain string.  An RDF implementation couldn't just skip the XML part;
people not happy with XML would just stay away from RDF, instead of
adopting RDF and ignoring the XML"Baz" bit.

It's too bad your view that <foo>Hello</foo> and <foo
rdf:parseType="Literal">Hello</foo> should mean the same thing wasn't
worked through ~2 years.  It's pretty hard to be trying to dig up and
reconsider that so long after the fact.

It's also too bad these two issues (A: xml:lang and B: markup-free
literals being plain literals) are so tightly associated in these
arguments, since my guess is the first is much more tractable, but no
one wants to try to work on it only to get clobbered by the second
one.  (This is of course just my outsiders-view guess.)

   -- sandro



