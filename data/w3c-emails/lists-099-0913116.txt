docno="lists-099-0913116"
received="Fri Aug 15 17:32:00 2003"
isoreceived="20030815213200"
sent="Fri, 15 Aug 2003 17:31:35 -0400"
isosent="20030815213135"
name="Sam Ruby"
email="rubys@intertwingly.net"
subject="Re: RDDL Proof-of-Concept for Atom"
id="3F3D5137.8010503@intertwingly.net"
charset="us-ascii"
inreplyto="014001c36369$92d11e00$8db80150&#64;localhost"
expires="-1"


To:"Sean B. Palmer"<sean@mysterylights.com>
CC: Ken MacLeod<ken@bitsko.slc.ut.us>,www-archive@w3.org


Sean B. Palmer wrote:
> Hi,
> 
> I've written an implementation in Python that, for an input Atom
> document with extensions in their own namespaces, will get the RDDL
> from that namespace, parse it to find links to xsl:templates that
> extend the main Atom2RDF stylesheet, and then actually extend the
> stylesheet and spit it out again.

Excellent!

> So the full dance for converting extendedAtom.xml to RDF is:-
> 
> ./makexslt.py extendedAtom.xml > extendedAtom2rdf.xsl
> saxon extendedAtom.xml extendedAtom2rdf.xsl > extendedAtom.rdf
> 
> Of course you can use whatever XSLT engine you want; you could even
> modify the Python script to do that all for you.

It really is a shame that Python doesn't have a built in XSLT class...

> Note that this has been CC'd to www-archive; the W3C's public mailing
> list archive for random technical issues and whatnot. I've decided
> that this should be conducted in the open, but away from the spotlight
> since I wanted to run the approach by you two first.

Just for future reference, there is really no need to run approaches by 
me first.  I'm not "angling" for a particular solution.  I truly want to 
explore all approaches...

- Sam Ruby



