docno="lists-099-10634822"
received="Sun Feb  8 15:10:31 2004"
isoreceived="20040208201031"
sent="Sun, 8 Feb 2004 12:08:39 -0500"
isosent="20040208170839"
name="Greg Elin"
email="elin@unitboy.com"
subject="Re: [w3photo] RDF and ID's"
id="7060D81A-5A59-11D8-B6FD-000393B64216@unitboy.com"
charset="US-ASCII"
inreplyto="Pine.GSO.4.58.0402081808440.2153&#64;mail.ilrt.bris.ac.uk"
expires="-1"

Cc:semantic-photolist@unitboy.com
To: Libby Miller<Libby.Miller@bristol.ac.uk>



(I'm keeping this on the list because I think it is relevant to other 
RDF newbies...)

On Sunday, February 8, 2004, at 01:26  PM, Libby Miller wrote:

>
> hi Greg
>
>> My questions:
>> 1) Is it okay if used the format of placing an ID also inside the
>> <image:hasPart> tag, e.g., <image:hasPart rdf:ID='hp1'> instead of, or
>> in addition to, being inside the <image:Rectangle rdf:ID='p1'> tag?
>> Does that form break it for other people?
>>   <image:hasPart rdf:ID='hp1' >
>>     <image:Rectangle rdf:ID='p1'>
>
> Unfortunately that breaks the RDF.
>
> RDF has objects and prooperties, which are usually syntactically
> differentiated using a 'striped' syntax[1]. So you have
>
> foaf:Image (an object)
>   image:width (a property)
>   image:height (a property)
>   image:hasPart (a property)
>     image:Rectangle (an object)

>
> (notice also that by convention objects start with a capital letter).
>
> You can only have ids (and nodeIds, and rdf:resources and rdf:abouts)
> referring to objects in RDF, never properties. So what's for you a
> little syntactic difference breaks the RDF syntax, unfortunately.

Why is the image:Rectangle an "object" and therefore can have an ID, 
but the image:hasPart is considered a property? Personally, I think of 
the part as being the object and the rectangle being a property of the 
part ("hasPart") just like image:width and image:height are properties 
of foaf:image object?

I mean we've talked about using rectangle or path, but if we are 
thinking recursively, wouldn't ultimately make more sense to say:
foaf:Image (an object)
      image:width (a property)
      image:height (a property)
      image:HasPart (an object)
         HasPart: width (a property)
         HasPart: height (a property)

Or put another way, would we *ever* have an image:hasPart without 
having an image:Rectangle? From the vocab, if an image has a 
image:hasPart it must have an image:points.

As I'm thinking about this, I'm wondering if the little "syntactic 
difference" is the RDF saying hasPart is a property instead of 
image:rectangle. Seems to me the Part is the object that part of the 
whole image and the rectangle is the property that describes the Part.

What is that says which of these two, hasPart and Rectangle is the 
property and which is the object?

>>
>> 2) What is the philosophy of putting the ID one level down and 
>> *inside*
>> the tag has a property? What's the principle advantage? I think I'm
>> open to following that form, but it seems to force a level of
>> complexity on the parsing code (and hence the developer). Can I gain
>> some insight?
>>
>
> see above, I hope. Essentially it is difficult to represent a graph
> structure using a heirarchical structure, and so you get some syntactic
> oddities with RDF. A quick way to check if something will work is to 
> use
> the RDF validator[2].
>
> In general, parsing RDF with XML is not a good idea....however I can't
> oddhand find a php libbary for RDF parsing - Redland[3] can do it but
> might be a bit heavyweight for your purposes.

And there lies a significant hurdle for me...and, IMHO, a challenge 
that is being faced: that
to adopt the strategy (e.g., RDF/semantic web) requires the use of 
heavy-weight tools.

On hand, it goes without saying that eventually I could incorporate the 
full range of RDF
into my code (and indeed would like to do so). On the other hand...it 
is proving non-trivial
to incorporate this level of RDF quickly...and I worry about that 
fact's impact on facilitating
adoption for others to follow in our path.

Perhaps there are other solutions? Perhaps someone could help me with 
my stumbling
point. Perhaps I could just keep the data in a Fotonotes style and it 
would be easy to transform
it to valid RDF in other repositories.

Greg


>
> Libby
>
> [1] http://www.w3.org/2001/10/stripes/
> (a bit old - and not all RDF syntax follows this pattern - but still
> very useful I think.)
> [2] http://www.w3.org/RDF/Validator/
> [3] http://www.redland.opensource.ac.uk/docs/php.html
> ==================================
> This is the TEMPORARY discussion list for the W3 Semantic-Photo History
> Project. For questions, contact greg@fotonotes.net.
>
> Subscribe Instructions
> To:   semantic-photolist-request@unitboy.com
> Body: subscribe
>
> Unsubscribe Instructions
> To:   semantic-photolist-request@unitboy.com
> Body: unsubscribe
>
> Help
> To:   semantic-photolist-request@unitboy.com
> Body: help
>

==================================
This is the TEMPORARY discussion list for the W3 Semantic-Photo History
Project. For questions, contact greg@fotonotes.net.

Subscribe Instructions
To:   semantic-photolist-request@unitboy.com
Body: subscribe

Unsubscribe Instructions
To:   semantic-photolist-request@unitboy.com
Body: unsubscribe

Help
To:   semantic-photolist-request@unitboy.com
Body: help



