docno="lists-099-10715843"
received="Mon Feb  9 01:54:41 2004"
isoreceived="20040209065441"
sent="Sun, 8 Feb 2004 22:51:40 -0500"
isosent="20040209035140"
name="Greg Elin"
email="elin@unitboy.com"
subject="Re: [w3photo] RDF and ID's"
id="44BB1742-5AB3-11D8-B0F5-000393B64216@unitboy.com"
charset="US-ASCII"
inreplyto="p04320400bc4cb273dd3a&#64;[[192.168.0.4]]"
expires="-1"

Cc: Libby Miller<Libby.Miller@bristol.ac.uk>,semantic-photolist@unitboy.com
To: Masahide Kanzaki<post@kanzaki.com>



This is helpful, Masaka, thanks. I think I will try and solve my 
specific
and urgent problem by first storing the information in Fotonotes' 
simplified
XML format and then add the code to generate(translate) that source to
RDF conforming to our proposed vocabularies.  The parsing of the RDF
represents significantly more work than the generation, and as long
as Fotonotes produces compliant RDF, it shouldn't matter what else 
happens
prior internally.

Also, I read a few of the links and I think I'm understanding Libby's 
point after I
really started thinking of things from the point of view of databases. 
Libby said:
 >>  I guess it's a modelling question. Here we have said that the image 
has
 >> a part and that part is a thing of type rectangle. which is 
reasonable,
 >> I think. The 'hasPart property connects the Image and the Rectangular
 >> part of the image.

The properties map to the predicate part of the triple, so...
<image>  (the subject, which itself is an "object" in the general sense 
of a member of class)

<haspart> (predicate, property, attribute)

<rectangle> (the object of the statement about the subject)

"Objects", which are the *values* of the property can be scalars or 
other objects.

So... the example,
>   <foaf:Image
> rdf:about='http://www94.web.cern.ch/WWW94/Images/ClosingPanel/
> Closingpanel5.gif'>
>    <image:width>535</image:width>
>    <image:height>367</image:height>
>    <image:hasPart>
>     <image:Rectangle rdf:ID='p1'>
>      <image:points>6,106 84,181</image:points>
>      <dc:description>Joseph Hardin looking interested</dc:description>
>      <image:regionDepicts>
>       <foaf:Person>
>         <foaf:name>Joseph Hardin</foaf:name>

Is read as:
<foaf:image> <width> "535"
<foaf:image> <height> "367"
<foaf:image> <hasPart> <image:Rectangle p1>
  <image:Rectangle p1> <image:points> "6,106 84,181"
  <image:Rectangle p1>  <dc:description>Joseph Hardin looking 
interested</dc:description>
<image:Rectangle p1>  <image:regionDepicts> <foaf:Person>
<foaf:Person> <foaf:name>"Joseph Hardin"

Is read as (in more plain English):
image [has] width 535
image [has] height 367
image hasPart Rectangle(ID P1)
Rectangle(ID P1) [has] image-points 6,106 84,181
Rectangle(ID P1) [has] Dublin Core description "Joseph Hardin looking 
interested"
Rectangle(ID P1) image region depicts [a] foaf:person
foaf:person [has] foaf:name "Joseph Hardin"

Is that right?

Greg

On Sunday, February 8, 2004, at 11:18  PM, Masahide Kanzaki wrote:

> Hi Greg,
>
>> I mean we've talked about using rectangle or path, but if we are
>> thinking recursively, wouldn't ultimately make more sense to say:
>> foaf:Image (an object)
>>      image:width (a property)
>>      image:height (a property)
>>      image:HasPart (an object)
>>         HasPart: width (a property)
>>         HasPart: height (a property)
>>
>> Or put another way, would we *ever* have an image:hasPart without
>> having an image:Rectangle? From the vocab, if an image has a
>> image:hasPart it must have an image:points.
>
>
> You can use rdf:parseType="Resource" to make hasPart behave as an 
> object
> while being a property.
>
>  <foaf:Image rdf:about='...Closingpanel5.gif'>
>   <image:width>535</image:width>
>   <image:height>367</image:height>
>   <image:hasPart rdf:parseType='Resource'>
>    <image:points>6,106 84,181</image:points>
>    <dc:description>Joseph Hardin looking interested</dc:description>
>    ...
>
> However, you cannot put rdf:ID on this hasPart (actually you can, but 
> with
> totally different meaning). Also, the spec defines the value of
> image:points to be interpreted according to its subject type, e.g., if 
> the
> parent is image:Circle, the value means "X,Y R", etc.
>
> I think the syntax with image:Rectangle is better for clarity and
> interoperability. But if image:Rectangle is a problem for you, maybe 
> you
> can use the above syntax for internal use of Fotonotes as a 
> transitional
> format (you may want to add an extra property like
> <fotonotes:selectionId>1</fotonotes:selectionId> inside the 
> image:hasPart).
> This is a legal RDF, and a clever tool may be able to guess that this
> implies a Rectangle from the value of image:points.
>
>
> cheers,
>
> -- 
> KANZAKI, Masahide a.k.a. masaka
> http://kanzaki.com/info/webwho.rdf
> mailto:webmaster(at)kanzaki.com
> #Please use above address for a personal mail
> #instead of post@kanzaki.com, which is for list only.
>

==================================
This is the TEMPORARY discussion list for the W3 Semantic-Photo History
Project. For questions, contact greg@fotonotes.net.

Subscribe Instructions
To:   semantic-photolist-request@unitboy.com
Body: subscribe

Unsubscribe Instructions
To:   semantic-photolist-request@unitboy.com
Body: unsubscribe

Help
To:   semantic-photolist-request@unitboy.com
Body: help



