docno="lists-099-11532819"
received="Thu Jan  8 15:10:53 2004"
isoreceived="20040108201053"
sent="Thu, 8 Jan 2004 15:10:51 -0500"
isosent="20040108201051"
name="Tim Berners-Lee"
email="timbl@w3.org"
subject="subst in n3"
id="C1CB3AA6-4216-11D8-B8A2-000A9580D8C0@w3.org"
charset="US-ASCII"
expires="-1"


Cc: Dan Connolly<connolly@w3.org>
To: Public W3C<www-archive@w3.org>


DanCon{ C setofall (V F) } <=> { this log:forall X. { X a C } <=> (X V 
F).subst }.
timblM setofall ( `x` { ?x :member W3C }).
DanConmy motivation for subst had much to do with figuring out how N3 
works; e.g. variables and quoting levels.
timblM setofall ( `x` { foo!log:semantics log:includes {?x :member W3C 
}}).
DanConmotivation came from proof checking, probably.
DanConthe list of things that log:includes finds is another RFE that 
I'm interested in, independently.
DanConDanC: substitution is a concept that you're allowed to use 
without explanation in logic papers
DanConup to simultaneous substituion of N exprs for N vars in F.
DanCon(usually called theta, I think)
DanCon(and rho)
timbl( "x" "1".literal { ?x p o }) subst { 1 p o }.
timbl( "x" "foo"^uri { ?x p o }) subst { <foo> p o }.
timbl( "x" "foo"^uriq { ?x p o }) subst { <foo> p o }.
timbl<foo> = <bar>
timbl( "x" "bar"^uri { ?x p o }) subst { <foo> p o }.
timblNOT ( "x" <bar> { ?x p o }) subst { <foo> p o }.
timblhence ^uriq not ^uri
timblChallenges:
timbl1. Define eth .literal etc vocabulary once and for all - 
arvbitrary chocei
timbl2. Define the param paters for subst, substN etc -- arbitrary 
choice



