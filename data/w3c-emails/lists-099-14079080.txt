docno="lists-099-14079080"
received="Wed Mar 10 07:34:34 2004"
isoreceived="20040310123434"
sent="Wed, 10 Mar 2004 14:34:23 +0200"
isosent="20040310123423"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Named graphs etc"
id="42E83B2A-728F-11D8-964D-000A95EAFCEA@nokia.com"
charset="US-ASCII"
inreplyto="404EF924.4030003&#64;hplb.hpl.hp.com"
expires="-1"


Cc: ext Pat Hayes<phayes@ihmc.us>,www-archive@w3.org, Chris Bizer<chris@bizer.de>
To:"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>



On Mar 10, 2004, at 13:16, ext Jeremy Carroll wrote:

>
> Mindful of time pressure ...
>
> I suggest the following approach for our paper ...
>
> 1) introduce a property
>    rdfx:assertedBy
>
> whose domain is graphs and range is agents union documents.

Would you restrict the interpretation of such a property only to cases
where the subject is the graph in which the statement occurs?

I.e., would you allow one graph to be qualified by an rdfx:assertedBy
statement in another graph?

Also, how do you determine trust of second graph? Perhaps some
clever agent knows that another agent trusts a particular
authority and therefore introduces a graph that asserts that
some other (questionable) graph is asserted by that trusted
authority.

???

I think that ultimately, the graph qualification has to be constrained
to the particular graph, and in addition there has to be some form
of graph signing with checksumming to know that the graph is 
uncorrupted.

Otherwise, you end up with a framework where one is chasing potentially
endless chains of assertions and/or which is easy to spoof.

Patrick

--

Patrick Stickler
Nokia, Finland
patrick.stickler@nokia.com



