docno="lists-099-14323275"
received="Thu Mar 11 07:19:23 2004"
isoreceived="20040311121923"
sent="Thu, 11 Mar 2004 11:54:35 +0200"
isosent="20040311095435"
name="Patrick Stickler"
email="patrick.stickler@Nokia.com"
subject="Re: Named graphs etc"
id="1A235185-7342-11D8-83FC-000A95EAFCEA@nokia.com"
charset="US-ASCII"
inreplyto="p06001f40bc74fa345fae&#64;[10.0.100.76]"
expires="-1"


Cc:"ext Chris Bizer"<chris@bizer.de>,<www-archive@w3.org>,<jjc@hplb.hpl.hp.com>
To:"ext Pat Hayes"<phayes@ihmc.us>



On Mar 10, 2004, at 19:08, ext Pat Hayes wrote:

>> Would constraining the interpretation of a given class of properties 
>> to
>> the graphs containing the statements in which they occur be 
>> overloading
>> RDF/OWL?
>
> Yes, I think so. It would require the entire MT to be rewritten, to do 
> it rigorously. It basically introduces indexicals into the language.

Wouldn't the distinct bootstrapping interpretation phase provide
a reasonable detour around overloading the RDF MT? I.e., it's
a specialized interpretation done by agents savvy about the
bootstrapping machinery for testing assertion and authentication,
such that, for other agents, the statements are innocuous (though
also useless) without that specialized "pre-interpretation" of
the graph.

???

Please forget about the "thisGraph" trick. Presume that all
graphs have distinct identity and all bootstrapping qualification
statements must refer to each particular graph distinctly.

> And it has all kinds of odd operational consequences for inference 
> engines; for example, in OWL, how would you know whether or not two 
> graphs references were referring to the same graph?

Because the two graph references would refer to different graphs,
since those graphs would be denoted either by distinct URIs or
by distinct bnodes.

>
>> Or would this rather be more of an application layer above,
>> but not directly impacting RDF/OWL?
>>
>>> ... what is more minimal than a single XML tag?
>>
>> It depends. For TriX, that is easy. And in fact, TriX *already* 
>> provides
>> that attribute, and has since the first published version.
>>
>> But for RDF/XML, you aren't honestly proposing a change already?! ;-)
>
> Maybe Im not familiar enough with XML, but would adding a property to 
> an element amount to a substantial change to RDF/XML?
> Seems kind of piffling to me. I assumed one could always add 
> properties without breaking anything.

Ask Dave...  ;-)

Technically, it's a trivial addition. In practice, though, it requires 
*every* RDF parser
to be updated. And since the new specs just required all the parsers to 
be revamped,
retested, etc. I don't think the parser folks would be very keen about 
*any* changes
so soon after the new specs.


>
>> Also, a single XML attribute is easy for one serialization, but what 
>> about
>> all the other forms of expression? N3, Turtle, TriX, Squish, TriQL, 
>> RDFQL, RDFQ,
>> RDQL, etc. etc.
>
> Well, good point, although the QLs are kind of irrelevant since one 
> wouldnt expect to be asserting a query.

Actually, one *would*.

If a graph makes it past the bootstrapping tests, and one has a KB and
QL that preserves graph membership (either by architecture or by
distributed queries over sets of graphs) then one would *need* to
hook into those bootstrapping statements to build the higher layers
of trust.

Patrick

--

Patrick Stickler
Nokia, Finland
patrick.stickler@nokia.com



