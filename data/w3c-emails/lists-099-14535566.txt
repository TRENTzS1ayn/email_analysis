docno="lists-099-14535566"
received="Fri Mar 12 08:11:26 2004"
isoreceived="20040312131126"
sent="Fri, 12 Mar 2004 15:10:56 +0200"
isosent="20040312131056"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Named graphs etc"
id="B2E0D962-7426-11D8-98B5-000A95EAFCEA@nokia.com"
charset="US-ASCII"
inreplyto="004c01c40818$5b0136a0$1f12fea9&#64;named4gc1asnuj"
expires="-1"


Cc:"ext Pat Hayes"<phayes@ihmc.us>,<www-archive@w3.org>,<jjc@hplb.hpl.hp.com>
To:"ext Chris Bizer"<chris@bizer.de>



On Mar 12, 2004, at 11:56, ext Chris Bizer wrote:

>
> I have serve problems with the idea that an agent owns a graph. Nobody 
> owns
> the english sentence "Water is blue.", thus I think it is also 
> impossible to
> own a graph expressing this sentence.
>
> I think we are mixing the agent/assertion/content- and the
> representation/document document layer here again.
>
> I would see it this way:
>
> 1. Graphs exist in an abstract way somewhere, similar to english 
> sentences
> abstractly existing somewhere even if nobody expresses them.

I was thinking more along the lines that graphs are akin to
speech acts (though I see where you might prefer to attribute
speech acts to documents of some sort rather to the graph itself).

This feels a bit like the Superman vs. Clark Kent quandry. We
may know that Superman and Clark Kent are the same being, but we
may still wish to make a distinction between the two "roles" or
"personas" when making statements.

Likewise, we may know that two graphs contain the exact same
statements, but we may wish to make a distinction in terms of
the source/authority/assertiveness/etc. of the graph.

> 2. Agents can assert/deny/quote graphs, which takes place on the
> agent/assertion/content-layer. Similar to me agreeing with or denying 
> the
> sentence the "Water is blue." Thus an assertion is the relation 
> between an
> agent and an abstract graph.

Fine. But if the assertion is independent from the graph being
asserted, then either we must use some extra-RDF machinery or
we end up chasing potentially endless sequences of graphs, since
while graph B may say that graph A is asserted, how do we
know that graph B is asserted, and hence that graph B actually
asserts graph A, etc.

I think there is an important distinction between "asserted/affirmed
by a particular agent" and simply "presumed to be asserted".

Most (all?) of the "graph B asserts graph A" examples seem to have
chains of the first kind which ultimately terminate in an assertion
of the second kind. This bothers me alot.

Since I think that reliable trust policies would need to be based
solely on the first, explicit kind of assertion where the authority
is always known, I just don't see how you can *ever* terminate
that chain of asserting graphs (unless extra-RDF machinery is
brought into play).

Hence my distinction between authoritative versus third-party
qualification, and the introduction of the 'bootstraping
interpretation/test' which provides grounding/termination
for the model.

> 3. An agent can publish his assertion on the document layer. This "web 
> act
> of publication" might have a "owner" but doesn't have to. I'm thinking 
> of a
> graph been published as a document, then crawled and moved into a
> knowledgebase by somebody else, who makes the graph accessible 
> afterwards
> though a web query interface.

This is precisely the kind of application I am also thinking about 
(mostly).

> I think this process definitifly requires all
> asserting- and provenance information been on the
> agent/assertion/content-layer and not linked in any way to the document
> layer.

Agreed. But if it is to be done in RDF, then you have to have a means
to terminate the chains of asserting graphs. And I don't see the 
inter-graph
vocabulary interpretation providing that.

>
> Taking the idee that a graph is disjunct from its assertion, just as 
> english
> sentences are disjunct from speech acts, we would get a Named Graph
> representation like this:
>
> G1 (ex:Water ex:colour ex:blue)
>
> G2 (G1 trix:assertedBy ex:Chris)
>
> G3 (G1 trix:denyedBy ex:Patrick.
>
>     G1 trix:assertedBy ex:Pat)                               )
>

And how do we know who asserts G3 and whether we can trust them?

I.e., you still haven't terminated your trust model and that
loose end makes it useless, since trust of the assertions in
G3, G2, and G1 depend on trusting whoever asserted G3. But
who is it?

>
> The graph G1 is independent from the agent. Asserting a graph is a 
> relation
> between the agent and the graph.
> It can be done everywhere. The graphs can be moved around, stored in
> different documents or repositories and whatever.

Having an intra-graph interpretation constraint still allows
graphs to be moved around and for different third party agents
to also assert the same graph as some other agent. The key
distinction is that we are able to ultimately ground the trust
of our graphs in particular authorities, one for each graph.

This approach also allows for non-explicitly asserted graphs, but
ensures that we have the mechanism by which to terminate our
chains of assertion relations between graphs and agents. E.g.

G1 (ex:Water ex:colour ex:blue)

G2 (G1 trix:assertedBy ex:Chris.)

G3 (G1 trix:assertedBy ex:Patrick.
     G2 trix:assertedBy ex:Pat.
     G3 trix:assertedBy ex:Chris.)

Now, given the ability to differentiate between authoritative
assertions and third party assertions, we have a set of three
graphs where we can terminate our trust determinations in
some authority/agent, and can then reason backwards whether
each of the graphs is to be trusted or relevant.

So, starting with G3, we decide if we trust ex:Chris. If so,
then we trust the statements in G3 about G1 and G2.

We then decide for G2 if we trust ex:Pat, who has asserted G2
in G3, according to ex:Chris whom we trust. If so, then we trust
the statement in G2 about G1.

We then decide for G1 whether we trust ex:Patrick. Let's say we
don't. But we do trust ex:Chris, who also asserts G1, so
we can then decide that we can also trust G1.

Thus, our decisions about trust are fully grounded. In the case
of G3, trust is grounded in terms of the authoritative assertions,
but in the case of G1 and G2 in terms of third party assertions.

In the example you provided above, we were left with no place
to start our deliberations, since we had no clue about who
asserted G3 and whether we trusted that authority.

It's not essential that every graph have an authoritative
assertion, but at some point, the chains of assertions/trust
have to terminate somewhere, so allowing for a special
interpretation of the assertion vocabulary in terms of a
particular graph as authoritative rather than third party
allows for that termination.

Eh?

Patrick

--

Patrick Stickler
Nokia, Finland
patrick.stickler@nokia.com



