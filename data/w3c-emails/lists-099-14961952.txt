docno="lists-099-14961952"
received="Mon Mar 15 08:13:38 2004"
isoreceived="20040315131338"
sent="Mon, 15 Mar 2004 14:12:57 +0100"
isosent="20040315131257"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="RE: Proposed draft RDF Graph vocabulary"
id="BHEGLCKMOHGLGNOKPGHDMENBCCAA.jjc@hpl.hp.com"
charset="US-ASCII"
inreplyto="5503FB52-7673-11D8-A711-000A95EAFCEA&#64;nokia.com"
expires="-1"

To:"Patrick Stickler"<patrick.stickler@nokia.com>,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>
Cc:<chris@bizer.de>,<phayes@ihmc.us>,<www-archive@w3.org>




> Suggestion: shall we use 'rdfg:' for "RDF Graph" rather than the more
> cryptic/arbitrary 'rdfx:'?

I'll use a latex macro, and then later, in a flush of ambition, we can
change it to rdf2:!


>
> --
>
>     rdfg:Graph
>        a rdfs:Class ;
>        rdfs:comment "An RDF graph (with intensional semantics)." .
>
>     rdfg:Authority
>        a rdfs:Class ;
>        rdfs:comment "An authority, or origin, of a graph." .
>
> We don't say more about what an rdfg:Authority actually is. We only
> (vaguely)
> define that such a class of entities exist which have a particular role
> with regards to trust.

"For example, a person or company."

>
>     rdfg:Signature
>        a rdfs:Class ;
>        rdfs:comment "A signature used to authenticate a graph." .
>
> Again, we don't say more about exactly what an rdfg:Signature is, only
> that it has a particular purpose in authentication of the statements
> and instances should be suitable for that purpose.

I was thinking more along the lines of a property rdfg:signature, and
possibly rdfg:signatureType (with some well-known values). I was also
thinking of putting references into: my earlier work on Sigs; a related
paper from HP colleagues; DanBri's point about foaf signatures. Maybe these
signaturetypes should be subclasses of rdfg:Signature?
Isn't a signature at the end of the day a byte-sequence, so having a
property
rdfg:signatureBytes with domain rdfg:Signature and range
xsd:hexEncodedByteSequence (I need to look up the correct name).

>
>     rdfg:sameAs
>        a rdf:Property ;
>        rdfs:comment  "The subject and object graphs are equivalent as
> defined by RDF Concepts." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Graph .
>
> I think that some localname recognition with OWL would be useful here,
> even
> if the semantics is not identical. But something like rdfg:equivalentTo
> would
> also be OK.
rdfg:equivalentGraph is my pref for this one - it mirrors the OWL names
better.

>
>     rdfg:subsumes
>        a rdf:Property ;
>        rdfs:comment "The object graph is equivalent to a subset of the
> subject graph." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Graph ;
>        owl:inverseProperty rdfg:subsumedBy .
>
>     rdfg:subsumedBy
>        a rdf:Property ;
>        rdfs:comment "The subject graph is equivalent to a subset of the
> object graph." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Graph ;
>        owl:inverseProperty rdfg:subsumes .
>
> I expanded rdfx:subGraphOf into a pair of inverse properties, allowing
> one to
> relate two perfectly intersecting graphs from either perspective.
>
Save space and delete one - I slightly prefer subGraphOf to subsumes - it is
clearer what one is talking about.

>     rdfg:authority
>        a rdf:Property ;
>        rdfs:comment "The object is the authority, or origin, of the
> subject graph." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Authority .
>
> This property simply associates an authority with a particular graph.
> It does
> not assert anything. This can be used to clearly indicate the origin of
> the
> graph without that origin/entity making any actual claims (e.g. the end
> result being akin to quoting, if not otherwise asserted by that
> authority
> elsewhere).

Not yet convinced here.

>
>     rdfg:assertedBy
>        a rdf:Property ;
>        rdfs:subPropertyOf rdfg:authority ;
>        rdfs:comment "The object is the asserting authority of the
> subject graph." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Authority .
>
> Note that rdfg:assertedBy is a subproperty of rdfg:authority, so one can
> both associate the authority and explicitly assert with a single
> statement.
> Those who don't care about quoting or the distinction between authority
> and assertion can happily just use this property and ignore
> rdfg:assertion
> and the distinction it provides for...
>

I think we need to go more fine-grain here, more later.
But I agree with you about following rdf-mt in its used of
assert(ion)(al)(ed) etc.


>     rdfg:signature
>        a rdf:Property ;
>        rdfs:comment "The object is the signature to be used to
> authenticate the subject graph." ;
>        rdfs:domain rdfg:Graph ;
>        rdfs:range rdfg:Signature .
>
> Again, we don't mandate what the signature is (there may be multiple
> alternatives
> in use) only provide the means to associate a signature with the
> particular graph.
>

Oh yes that works better ...

> --
>
> The bootstrapping interpretation/test looks specifically for the
> properties rdfg:assertedBy and (optionally) rdfg:signature where the
> subject of those "literal" statements is the same URIref as that
> naming the graph in which they occur.

I think we should avoid mandating a particular bootstrapping phase, more
indicate a possible bootstrapping phase. The bootstrapping is done by an SW
agent, and its policies should be decided by its user rather than
architecturally. I believe we have agreement on that.

>
> Statements using any of the above vocabulary are fully valid and
> compatible with both the RDF and OWL MTs irrespective of the
> special bootstrapping interpretation/test necessary for determination
> of (terminal) assertion and authentication.
>

Yes bootstrapping is not very special.

> Eh?
>
> --
>
> Patrick Stickler
> Nokia, Finland
> patrick.stickler@nokia.com
>
>



