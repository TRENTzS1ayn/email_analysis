docno="lists-099-15188561"
received="Tue Mar 16 02:45:06 2004"
isoreceived="20040316074506"
sent="Tue, 16 Mar 2004 09:44:50 +0200"
isosent="20040316074450"
name="Patrick Stickler"
email="patrick.stickler@nokia.com"
subject="Re: Graphs: intension and extension"
id="CE787B54-771D-11D8-9692-000A95EAFCEA@nokia.com"
charset="US-ASCII"
inreplyto="200403152236.56949.jjc&#64;hplb.hpl.hp.com"
expires="-1"


Cc:www-archive@w3.org,phayes@ihmc.us,chris@bizer.de
To:"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>



On Mar 15, 2004, at 23:36, ext Jeremy Carroll wrote:

> N3 is very poorly documented, however it does have some mindshare. 
> Given that
> this paper is likely to be an aggressively anti-N3 paper ever (it 
> needs to
> describe log:implies as incoherent or worse), we would be well-advised 
> to
> take some good features out of N3 where relevant ...
>
>
>> Look, its *logically valid* to substitute any bnode label for any
>> other, as long as you do it systematically throughout the graph. So
>> any use of a bnode to be a label is *logically invalid*.  No matter
>> how lexically convenient it might be, that's a bad place to start.
>
> SECOND VERSION OF RESPONSE
>
> We could modify the abstract syntax to permit a graph to be a node in 
> another
> graph - this would permit the nested graph within a formula that does 
> seem
> genuinely useful. This feels like hard work too ...
>

Seems to me like if we have inter-graph references that that would
absolutely require the use of URIs.

A graph that is named using a bnode can only be described by
statements within that graph alone, since the bnode is graph
specific.

A graph that is named using a URI can be described by statements
within that graph, or any other graph.

One would expect that only the latter would be widely useful,
even if we allow the former to be possible.

>
>
> Here's a simple test case:
>
> _:a ( eg:a eg:b eg:c )
> _:b ( eg:a eg:b eg:c .
>        eg:d eg:e eg:f )
> _:c ( _:a rdfg:subGraphOf _:b )
>
>

The question in my mind is that since bnode bindings are
graph-specific, how do you know that the bnode _:a labling
the first graph denotes the same thing as the bnode _:a
as the subject of the first statement of the third graph?

My (possibly flawed) understanding of the RDF MT is that
you simply can't.

I think the boundaries of bnode binding can be extended
to the explicit name of the graph itself, but not further.

If you want to describe the first graph in the third graph,
you simply *have* to use URIs.

Patrick


--

Patrick Stickler
Nokia, Finland
patrick.stickler@nokia.com



