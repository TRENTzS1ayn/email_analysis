docno="lists-099-15245108"
received="Tue Mar 16 03:42:52 2004"
isoreceived="20040316084252"
sent="Tue, 16 Mar 2004 09:41:24 +0100"
isosent="20040316084124"
name="Jeremy Carroll"
email="jjc@hpl.hp.com"
subject="Re: Named graphs etc"
id="200403160941.24242.jjc@hpl.hp.com"
charset="us-ascii"
inreplyto="Named graphs etc"
expires="-1"

To:patrick.stickler@nokia.com,chris@bizer.de,phayes@ihmc.us,www-archive@w3.org



>>It may simply take the statement about the authority at face value
>>and believe it.

>That sounds like a VERY poor idea. Think of the mindset of spammers. 
>Suppose one could generate, that easily and that rapidly, things that 
>looked just like purchase orders to be processed by software,

You are confusing different use cases - there is lots of RDF that is used 
already in this way without being a target of spam, but because of these 
weaknesses RDF is not currently suitable for purchase orders.

For instance there is a piece of RDF at www.w3.org claiming that Pat Hayes is 
the editor of rdf-mt. Now, since I wish to improve my CV I could create a 
piece of RDF that claimed that Jeremy Carroll edited rdf-mt, but it really 
isn't worth the bother! (nothing against rdf-mt)

If I read that piece of RDF I get it from www.w3.org which gives me grounds to 
believe it given what it is talking about.

However I am beginning to see what you are on about with "we need to do an MT 
job on this stuff" - I am not convinced we *need* an MT job, but it could 
look nice and I am beginning to see what it might be like: Essentially it is 
truth conditions on rdfg:hasSignature (or something like that), which 
actually tie in with the digital signature specs and existing (or future) 
digital signature technology, so that a forged piece of RDF with an 
rdf:hasSignature in it is, to the limits of crypto, known to be false - which 
looks like a very good thing.

It is not that any piece of RDF self-verifies, but merely that the 
hasSignature triple can be grounded in other specs - with truth conditions 
being drawn from them.

Jeremy



