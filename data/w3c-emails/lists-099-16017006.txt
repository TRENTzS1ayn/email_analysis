docno="lists-099-16017006"
received="Thu Mar 25 02:52:48 2004"
isoreceived="20040325075248"
sent="Wed, 24 Mar 2004 13:18:42 +0100"
isosent="20040324121842"
name="Chris Bizer"
email="chris@bizer.de"
subject="Re: Proposed draft RDF Graph vocabulary"
id="005401c4119a$28d0e0f0$1f12fea9@named4gc1asnuj"
charset="iso-8859-1"
inreplyto="p06001f03bc814752167c&#64;[10.0.100.76]"
expires="-1"


To:"Patrick Stickler"<patrick.stickler@nokia.com>,"Pat Hayes"<phayes@ihmc.us>
Cc:<www-archive@w3.org>,"ext Jeremy Carroll"<jjc@hplb.hpl.hp.com>


>
> 1. There are 'agents' or 'authorities' which can be identified by
> URIs and which can be identified in some way as the owner of a graph.
> That is, a graph (graph instance?) may be  'owned' by an authority.
> Exactly how ownership is determined and checked is left open for now,
> but we anticipate some kind of signature mechanism such as ....
>
> 2. There is a class of 'web performatives' which are actions
> connected with an RDF graph which can be done by agents. These
> include asserting and quoting. We do not mean to close off this
> class, and expect that people will invent others. Each one has a
> recognized rdfg: name which identifies it.
>

I basically agree, but would like to repeat my comments about "ownership"
and "authority".

It appears to me that we are having three classes:

1. Graphs
2. Web performatives
3. Agents

that are getting related.

There are two variations of graph:
1.1 an abstract graph like the sentence "The water is green."
1.2.an concrete graph / graph instance, that *is named* and can be
published. There is a 1-to-many relationship between the abstract graph "The
water is green." and it's named instances. So I would prefer to speak about
*graph instances* in the context of named graphs and web publishing.

Web performatives connect *named graph instances* with named agents.

There is also a 1-to-many relationship between a graph instance and the
agents connected to it via the performative. Thus I'm still not convinced
that we have to pick one of these agents and declare him as the owner of the
instance. What do we gain in a scenario where the "owner" is the agent who
did the original naming of the graph (that is how I understand your concept
of owner) and 20 other agents also perform performatives on this named graph
instance? I think nothing.

Using signatures also don't make signing agents special (=owners), because
several agent can sign the same named graph instance.

So wouldn't it be an idea to forget about ownership and authority and just
use the term *information provider* for agents instead. In our scenario we
are  having two basic roles an agent can embody: Information provider and
information consumers. Thus concerning publishing information provider would
be more precise than just calling the think "agent".

 "Eh?" as Patrick would say :-)

Chris



