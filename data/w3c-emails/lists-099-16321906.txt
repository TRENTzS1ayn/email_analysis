docno="lists-099-16321906"
received="Tue Mar 30 06:26:10 2004"
isoreceived="20040330112610"
sent="Tue, 30 Mar 2004 12:24:38 +0100"
isosent="20040330112438"
name="Jeremy Carroll"
email="jjc@hplb.hpl.hp.com"
subject="bnodes as graph names Re: version for review"
id="406958F6.6040201@hplb.hpl.hp.com"
charset="us-ascii"
inreplyto="2701919C-8224-11D8-BB53-000A95EAFCEA&#64;nokia.com"
expires="-1"


To: Patrick Stickler<patrick.stickler@Nokia.com>
Cc:www-archive@w3.org, ext Chris Bizer<chris@bizer.de>, Pat Hayes<phayes@ihmc.us>


> I think it's OK for bnodes to name graphs, but not for
> bnode graph names to span graphs.
> 

Here is the promised additional problem:

Currently the semantics of graph names uses
Gext to link a resource to a graph named by that resource.

Unfortunately this is too simple. The graph named by that resource still 
includes bnode identifiers e.g.


_:a ( a b c )
_:b ( _:a dc:creator "Peter" )
_:c ( _:b dc:creator "Fred"
       _:c assertedBy "Fred"
)
(simplified example)

Says that Fred asserts that Fred created a triple that says that Peter 
created ( a b c ). In the semantics, if we accept only the third graph, 
then the second graph is associated with the subject of the dc:creator 
statement. In that second graph is one triple, and the first graph is 
associated with the subject of that one triple through the node (not the 
resource, since we are only quoting) "_:a" ...

This is wholly unaddressed and is difficult.


Gext ought to relate resources to equivalence classes of graphs 
(effectively deleting the bnode identifier, without deleting the bnode 
identity) That would be a relatively minor edit to the text, but then 
bnodes as graph names is dead (since we really have bnode identifiers as 
graph names).

Proposed changes:
- prohibit bnodes as graph names (both abstract and concrete)
- change semantics of graph naming to use equivalence classes of graphs 
rather than graphs.

I note that we loose more N3 compatibility in that N3 allows nested unnamed 
formulae (even cycles of such formulae). It's a shame that there are so 
many problems with N3 - I am not even sure I could articulate this one to 
the satisifaction of the N3 enthusiasts.

Jeremy



