docno="lists-099-2793520"
received="Fri Feb 28 16:28:56 2003"
isoreceived="20030228212856"
sent="Fri, 28 Feb 2003 15:28:36 -0600"
isosent="20030228212836"
name="Dan Connolly"
email="connolly@w3.org"
subject="just strings, please [was: reagle-01, reagle-02 issues]"
id="1046467715.7451.121.camel@dirk.dm93.org"
inreplyto="p05111b0fba8528ad222e&#64;[10.0.100.86]"
expires="-1"

To: Pat Hayes<phayes@ai.uwf.edu>
Cc: Jeremy Carroll<jjc@hplb.hpl.hp.com>,www-archive@w3.org, Dan Brickley<danbri@w3.org>, Eric Miller<em@w3.org>, Brian McBride<bwm@hplb.hpl.hp.com>



(not to the WG, yet)

On Fri, 2003-02-28 at 09:00, pat hayes wrote:
[...]
> Then the entire rdf:XMLliteral datatype machinery is just an 
> elaborate way of encoding the old 'XML bit', which I thought was the 
> original intent in any case. Introducing XML canonicalization seems 
> to have been one those neat ideas that got slipped in without too 
> much discussion and has turned out to be a tar-pit. I am particularly 
> concerned that this ugly mess is now centrally included in the very 
> core of RDF. I would hope that many 'cheap and cheerful' RDF engines 
> wouldn't even want to know about XML, still less about XML 
> canonicalization.

Amen.

I'm starting to think it's worth unravelling all these
barnacles around literals and going back to just to just
strings, URIs, and bnodes as terms in RDF triples/graphs.

no lang

no c14n

no datatypes


rationale:

no lang: the RDF query guys have been collecting
use cases for a while; this one was suggested
last June, and unlike all the others,
nobody has reported a solution/implementation:

[[
Find the language specific value of a property  [image]
        Retrieve the value of a property for a particular language (as
        specified by xml:lang). Specifically, retrieve the english
        description of each class specified in
        http://www.w3.org/2000/01/rdf-schema#
        
        Published by Geoff Chappell on 2002-06-25
]]
 --
http://rdfstore.sourceforge.net/2002/06/24/rdf-query/query-use-cases.html

the folks that really need lang functionality are
using real triples: see
  4.2 Poor mans language qualification
  in
  http://www.dublincore.org/documents/dcq-rdf-xml/#sec4

When the WG made the xml literal decision, I yielded
because my alternative (representing XML infosets
ala lisp s-expressions) was more complex than
I could justify.

But if we use simple
  str xmlrep:parsesAs _:infosetDataStructure
interpretation properties, life gets much
simpler.

I haven't worked out all the details, but
I think it works better for stuff like XML
query integration in the long run;
Implementation experience:
  http://www.w3.org/2001/03swell/xml.n3
(EricM, cf your "XML infoset modelling"
action in the SemWeb CG)


I know interpretation properties work in my
apps for datatypes too; while I suspect
putting datatypes into the abstract syntax
doesn't minimize cost in the long term,
I don't have direct evidence yet,
the way I do for lang.

I wanna see our design integrated
with SQL engines. I pushed on that in after-hours
chat a bit today, and Dave B and Jeremy said
our design does fit with contemporary
SQL implementation work.

rationale against c14n is provided by reagle's issue,
plus webont's issues...




I'm not moving to reopen the WG decisions yet,
but I'm collecting evidence and designing
alternatives.


-- 
Dan Connolly, W3C http://www.w3.org/People/Connolly/



