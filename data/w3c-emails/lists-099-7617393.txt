docno="lists-099-7617393"
received="Wed Oct  8 13:37:33 2003"
isoreceived="20031008173733"
sent="Wed, 08 Oct 2003 13:32:35 -0400"
isosent="20031008173235"
name="Sandro Hawke"
email="sandro@w3.org"
subject="Re: A bit of running code for &quot;Tim's View&quot;"
id="200310081732.h98HWZeo023729@roke.hawke.org"
inreplyto="D3C8F903E7CC024C9DA6D900A60725D9025F34E5&#64;DLTKVMX1.ads.deltek.com"
expires="-1"


To:"John Black"<JohnBlack@deltek.com>,timbl@w3.org
Cc:www-archive@w3.org



Sorry, I simplified the inputs slightly for the e-mail.  I should have
been clearer about that.  The real files are in 

   http://www.w3.org/2000/10/swap/test/ferrell

and I see that myDingo.n3 has a temporary patch "For working on the
plane" (ie without the web handy).  So yes, I left out the ":" prefix
declaration.

> C:\Temp>python /python23/lib/site-packages/cwm/cwm.py --closure=por myDingo.n
> 3 --think
> #Processed by Id: cwm.py,v 1.143.2.1 2003/09/12 14:56:21 timbl Exp
>         #    using base file:/Temp/myDingo.n3
>         Traceback (most recent call last):
>   File "/python23/lib/site-packages/cwm/cwm.py", line 652, in ?
>     doCommand()
>   File "/python23/lib/site-packages/cwm/cwm.py", line 380, in doCommand
>     p.load(_inputURI)
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 209, in load
>     return self.loadBuf(stream.read())    # self._formula
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 217, in loadBuf
>     self.feed(buf)
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 235, in feed
>     i = self.directiveOrStatement(str,j)
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 248, in directi
> veOrStatement
>     j = self.statement(str, i)
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 341, in stateme
> nt
>     j = self.property_list(str, i, r[0])
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 594, in propert
> y_list
>     self.makeStatement((self._context, sym, subj, obj))
>   File "C:\python23\lib\site-packages\cwm\notation3.py", line 331, in makeSta
> tement
>     self._sink.makeStatement(quadruple, why=self._reason2)
>   File "C:\python23\lib\site-packages\cwm\llyn.py", line 1452, in makeStateme
> nt
>     self.storeQuad(q, why)
>   File "C:\python23\lib\site-packages\cwm\llyn.py", line 1481, in storeQuad
>     return context.add(subj=subj, pred=pred, obj=obj, why=why)
>   File "C:\python23\lib\site-packages\cwm\llyn.py", line 479, in add
>     self.checkClosure(subj, pred, obj)
>   File "C:\python23\lib\site-packages\cwm\llyn.py", line 617, in checkClosure
>     x.dereference("m" + self._closureMode, self)
>   File "C:\python23\lib\site-packages\cwm\term.py", line 212, in dereference
>     if "E" not in mode: F = self.store.load(inputURI)
>   File "C:\python23\lib\site-packages\cwm\llyn.py", line 1263, in load
>     p.feed(buffer)
>   File "C:\python23\lib\site-packages\cwm\sax2rdf.py", line 584, in feed
>     self._p.feed(data)
>   File "C:\Python23\Lib\site-packages\_xmlplus\sax\expatreader.py", line 216,
>  in feed
>     self._parser.Parse(data, isFinal)
>   File "C:\Python23\Lib\site-packages\_xmlplus\sax\expatreader.py", line 395,
>  in external_entity_ref
>     self._source.getSystemId() or
>   File "C:\Python23\Lib\site-packages\_xmlplus\sax\saxutils.py", line 515, in
>  prepare_input_source
>     f = urllib2.urlopen(source.getSystemId())
>   File "c:\python23\lib\urllib2.py", line 136, in urlopen
>     return _opener.open(url, data)
>   File "c:\python23\lib\urllib2.py", line 331, in open
>     type_ = req.get_type()
>   File "c:\python23\lib\urllib2.py", line 233, in get_type
>     raise ValueError, "unknown url type: %s" % self.__original
> ValueError: unknown url type: XMLSchema.dtd

Hm.  I don't know.  Tim?   (I've included him on the recipients)

     -- sandro



