docno="lists-099-7683492"
received="Mon Oct 13 12:23:20 2003"
isoreceived="20031013162320"
sent="Mon, 13 Oct 2003 18:23:10 +0200"
isosent="20031013162310"
name="Jacek Kopecky"
email="jacek.kopecky@systinet.com"
subject="Describing RDF services in WSDL (re: your last action item)"
id="1066062190.4012.3.camel@localhost"
expires="-1"

To: Bijan Parsia<bparsia@isr.umd.edu>
Cc:www-archive@w3.org



Bijan, sorry it took me so long to get back to you with this.

In my review of Appendix E [1] I noted that if we decide to limit WSDL
messages (not currently defined anywhere AFAIK, but consisting of body
and headers *in the form of XML Element declarations*) only to the body
and headers, we may require the use of XML Schema to describe the inputs
and outputs of services that don't necessarily communicate using
XML-Schema-describable XML, like a web service that returns a JPEG of
the current view on Prague.

Nobody on the call had any objections to this direction, and some
suggested that for such media types as JPEG it may be appropriate to
describe the data passed around using the media typing approaches
currently hovering between WS-Desc WG and XMLP WG (see [2]).

If we imagine a service that accepts or rejects RDF graphs, we might
want to be able to describe the allowable data using RDFS/OWL. That's
not describing the services, just the input/output message formats. But
since the current notion of message only allows XML Element
declarations, we could have to resort to using the generic rdf:RDF
element and possibly state the OWL/RDFS description using extensibility.

So basically - do you mind? 8-)

I can see it both ways, messages being restricted to XML element
declarations or messages extensible to just about any type system and
data model (MIME-typed binary objects, SOAP Data Model graph nodes and
edges, RDF ontologies etc.)

Hope this message clarifies your action a bit,

Jacek


[1] http://lists.w3.org/Archives/Public/www-ws-desc/2003Sep/0136.html
[2] http://lists.w3.org/Archives/Public/www-ws-desc/2003Sep/0088.html



