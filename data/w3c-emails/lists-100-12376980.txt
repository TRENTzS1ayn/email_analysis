docno="lists-100-12376980"
received="Mon Apr  9 08:39:27 2001"
isoreceived="20010409123927"
sent="Mon, 9 Apr 2001 13:17:31 +0200 "
isosent="20010409111731"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="[Design] Test case modularization"
id="9F67DC27F4CCD311ABA600508B6A66A4319B82@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

* Modularization of test cases.  The problem is that the DOM Spec
explicitly calls out exceptions to allow multiple implementation systems
to be compliant.  For example, in DOM Level 1 there are notes for
systems that do not support the concept of reporting exceptions and
implementations that are HTML-Only or XML.  The best way to incorporate
these exceptions in the spec is by having a modularized test suit.
[Categorization according to specification, being looked into; DD.] 
Yes, but maybe we should air some of the concerns on the dom-ts list and
try to come to agreement on the categorization [mb]
Suggestion for DOM Level 1:
o Core: HTML-Only With Exceptions
o Core: HTML-Only Without Exceptions
o Core: XML With Exceptions
o Core: XML Without Exceptions
o HTML (Exceptions are not used in HTML)
Dom Level 2: ???
Dom Level 3: ???
Would it be more useful to try to provide configurable exceptions -
maybe a set of entity def's that captures exceptions thrown by a
particular vendor, which are then used in the tests, or not check for
exceptions at all in cases where the method used is optional.  Doesn't
the spec indicate that an exception must be thrown? [mb]
The entity def approach could work, but it would require the XML file to
be edited/regenerated every time the script error message changes.  (I
don't know how often this might happen).  Also, the spec states "Some
languages and object systems do not support the concept of exceptions.
For such systems, error conditions may be indicated using native error
reporting mechanisms." So, the spec says that an error must be thrown,
but doesn't mandate that the error must be an exception. [jb]



