docno="lists-100-12577903"
received="Fri Apr 20 12:15:56 2001"
isoreceived="20010420161556"
sent="Fri, 20 Apr 2001 10:13:43 -0600"
isosent="20010420161343"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: [General] Language-independent test representation"
id="B2C1451A181BD411B88A00E018C1C19C08ABDD@THOR"
charset="iso-8859-1"
inreplyto="[General] Language-independent test representation"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

I think that what I have been doing in the last week or so with the "domunit" module at http://xmlconf.sourceforge.net really speaks to this point.

The only testing framework that I knew that was in wide use and implemented for most major languages was the xUnit family of test frameworks.  In my opinion, being able to produce tests for xUnit test
frameworks is a critical capability.  I think it is undesirable to try to create an "W3C" testing framework on multiple languages as a competitor to the xUnit family.  I haven't found any critical
missing capability in xUnit for the type of tests that we need to do, there is an existing xUnit community that has supports the framework in a wide variety of languages, and having the conformance
tests in a framework that a developer might be using for other tests definitely makes his life easier. 

Since JUnit, JSUnit, CppUnit, etc, all expose basically the same testing infrastructure in the specific language and all the languages that I have pursued so far (Java, JavaScript and C++) all have
very common expression format, all that has been required to port the Java tests to JavaScript and C++ has been porting a common test support class and fairly simple global search and replace type
operations on the tests themselves that could probably be automated using AWK or the something similar.  I would assume that porting to C# would be fairly painless too, but I don't have a C#
development system set up.  [I'm working on the support class for the C++ tests and will commit that this weekend hopefully)

I guess the question is, are there any languages that you want to support that don't resemble the C++ family of languages in their expression format? Even if there is, it may even still be more
straightforward to convert the Java expressed code into that language.

I wouldn't rule out an eventual XML language-neutral representation, however I think that it is distracting during development when the tests can be rapidly developed and run in Java and trivially
ported to JavaScript, C++, et al.  If there is such a format, then it could be generated from appropriately JavaDoc'd test code but it does not seem to be an initial requirement.

I'm definitely open to giving other people CVS commit rights to the xmlconf.sourceforge.net project and opening that as a incubator for tests to be submitted to the W3C.  You would have to place a
copyright and GPL notice on your tests to conform with the licensing requirements for the xmlconf.sourceforge.net project, however that would not prevent you from submitting the tests to the W3C with
the GPL and copyright removed.  If legal or organizational issues, prevent you from doing that, I will try to mirror any submission to the W3C in domunit.

The current structure of the project has the NIST derived tests in "net.sourceforge.xmlconf.domunit.dom1.nist".  If others wanted to participate, you would get an appropriate package names in the
hierarchy, ie "net.sourceforge.xmlconf.domunit.dom2.acmeinc" so that your tests can be segregated from the "official" conformance tests.



