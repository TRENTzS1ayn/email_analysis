docno="lists-100-12596733"
received="Fri Apr 20 12:59:21 2001"
isoreceived="20010420165921"
sent="Fri, 20 Apr 2001 18:54:37 +0200"
isosent="20010420165437"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="SV: [General] Language-independent test representation"
id="9F67DC27F4CCD311ABA600508B6A66A4319C5C@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'Arnold, Curt'"<Curt.Arnold@hyprotech.com>,"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

Hi Curt

Thanks for your comments. 

I take it your main point is that it seems to be besides the point to
introduce an XML-based vocabulary since we can use the Java form and port it
from there. 

Functionally, there is no difference. Code is code (the XMl-coded snippet
will eventually become code as well). Once you think of the test forming
only part of the test _submitted_, allowing for documentation, author info
and so forth (which is in XML), I think my point becomes clearer.
Streamlining this to allow only for XML-encoded information seems more
straightforward.

Also, the NIST tests on which the DOM TS level 1 builds, will have support
for this native XML format.

Of course, your points are valid (to say the least). Creating a W3C endorsed
competitor to the xUnit framework helps noone. Perhaps they could be seens
as complementing each other?

Again, thanks. 

Anyone else?

/Dimitris

-----Ursprungligt meddelande-----
Fr?n: Arnold, Curt [mailto:Curt.Arnold@hyprotech.com]
Skickat: den 20 april 2001 18:14
Till: 'www-dom-ts@w3.org'
?mne: RE: [General] Language-independent test representation


I think that what I have been doing in the last week or so with the
"domunit" module at http://xmlconf.sourceforge.net really speaks to this
point.

The only testing framework that I knew that was in wide use and implemented
for most major languages was the xUnit family of test frameworks.  In my
opinion, being able to produce tests for xUnit test
frameworks is a critical capability.  I think it is undesirable to try to
create an "W3C" testing framework on multiple languages as a competitor to
the xUnit family.  I haven't found any critical
missing capability in xUnit for the type of tests that we need to do, there
is an existing xUnit community that has supports the framework in a wide
variety of languages, and having the conformance
tests in a framework that a developer might be using for other tests
definitely makes his life easier. 

Since JUnit, JSUnit, CppUnit, etc, all expose basically the same testing
infrastructure in the specific language and all the languages that I have
pursued so far (Java, JavaScript and C++) all have
very common expression format, all that has been required to port the Java
tests to JavaScript and C++ has been porting a common test support class and
fairly simple global search and replace type
operations on the tests themselves that could probably be automated using
AWK or the something similar.  I would assume that porting to C# would be
fairly painless too, but I don't have a C#
development system set up.  [I'm working on the support class for the C++
tests and will commit that this weekend hopefully)

I guess the question is, are there any languages that you want to support
that don't resemble the C++ family of languages in their expression format?
Even if there is, it may even still be more
straightforward to convert the Java expressed code into that language.

I wouldn't rule out an eventual XML language-neutral representation, however
I think that it is distracting during development when the tests can be
rapidly developed and run in Java and trivially
ported to JavaScript, C++, et al.  If there is such a format, then it could
be generated from appropriately JavaDoc'd test code but it does not seem to
be an initial requirement.

I'm definitely open to giving other people CVS commit rights to the
xmlconf.sourceforge.net project and opening that as a incubator for tests to
be submitted to the W3C.  You would have to place a
copyright and GPL notice on your tests to conform with the licensing
requirements for the xmlconf.sourceforge.net project, however that would not
prevent you from submitting the tests to the W3C with
the GPL and copyright removed.  If legal or organizational issues, prevent
you from doing that, I will try to mirror any submission to the W3C in
domunit.

The current structure of the project has the NIST derived tests in
"net.sourceforge.xmlconf.domunit.dom1.nist".  If others wanted to
participate, you would get an appropriate package names in the
hierarchy, ie "net.sourceforge.xmlconf.domunit.dom2.acmeinc" so that your
tests can be segregated from the "official" conformance tests.



