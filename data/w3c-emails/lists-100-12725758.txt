docno="lists-100-12725758"
received="Mon Apr 23 16:18:34 2001"
isoreceived="20010423201834"
sent="Mon, 23 Apr 2001 16:17:59 -0400 (EDT)"
isosent="20010423201759"
name="Fred L. Drake, Jr."
email="fdrake@acm.org"
subject="RE: [General] Language-independent test representation"
id="15076.36343.839733.95170@cj42289-a.reston1.va.home.com"
charset="us-ascii"
inreplyto="B2C1451A181BD411B88A00E018C1C19C08ABEA&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>
Cc:<www-dom-ts@w3.org>


Arnold, Curt writes:
 > It would be interesting to see how difficult it would be to port the tests to
 > the Perl or Python variants of xUnit, but I'm not fluent with those
 > languages.  If it does require something beyond regular expression 
 > then there are plenty of options to parse the Java source and generate
 > equivalent code without inventing a new language.

  I've only used the PyUnit flavor of xUnit, and have been fairly
impressed.  I don't know how simple the translation from one version
to another is, however -- I expect things would be different when
testing for raised exceptions (they certainly *could* be very
different).
  The tests for the Python DOM that we've developed at Digital
Creations uses PyUnit, and I don't think we could have done it without
something like it.  I've not had time to look at the NIST tests to
determine possible integration, but we'd certainly like to be able to
contribute.  Our tests are freely available from our public anonymous
CVS server.

 > The sample node.xml still seems to maintain a limitation of one string
 > assertion per test.  If we are bringing in tests from other sources,
 > this limitation could be barrier to integration.  Plus, it doesn't allow
 > any tests of object identity or other type specific tests or 
 > distinguishing a method returning a string containing "null" vs a null string.

  These should be considered real problems.  One of the supposed
advantages of xUnit is that it is easy & quick to run a serious set of
tests, but having to test (for example) the old and new nodes from
Text.splitText() separately seems quite wasteful -- two assertions
makes more sense.  This is the case in many instances for the DOM.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Digital Creations



