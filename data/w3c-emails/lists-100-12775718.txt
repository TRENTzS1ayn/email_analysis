docno="lists-100-12775718"
received="Tue Apr 24 14:56:17 2001"
isoreceived="20010424185617"
sent="Tue, 24 Apr 2001 12:54:08 -0600"
isosent="20010424185408"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: DOM conformance tests"
id="B2C1451A181BD411B88A00E018C1C19C08ABEF@thor.aeathtl.com"
charset="iso-8859-1"
inreplyto="DOM conformance tests"
expires="-1"


To:"'xerces-c-dev@xml.apache.org'"<xerces-c-dev@xml.apache.org>
Cc:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

Thanks for the reference, it does appear that the issue was settled in the DOM WG. I would have personally leaned the other way, preferring to detect and throw an exception when an expression has
resulted in a negative count instead of interpreting it as a platform-dependent large number.  I personally don't see the elimination of "unsigned" as a limitation of the Java platform, but a
purposeful elimination of a dangerous behavior.  I would lobby that you reconsider the use of unsigned in future DOM interfaces.

It does mean that the tests that pass negative positions or counts (for example, CharacterDataIndexSizeErrSubstringNegativeOffset, CharacterDataIndexSizeErrSubstringCountNegative,
CharacterDataIndexSizeErrDeleteDataOffsetNegative, CharacterDataIndexSizeErrDeleteDataCountNegative, have different expectations on platforms that use unsigned values and should be written to reflect
that.



