docno="lists-100-13169691"
received="Fri Aug 10 14:39:46 2001"
isoreceived="20010810183946"
sent="Fri, 10 Aug 2001 12:36:23 -0600"
isosent="20010810183623"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: [General] Status?"
id="70E215722F6AD511820A000103D141D40AA4B2@thor.aeathtl.com"
inreplyto="[General] Status?"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

> Arnold, Curt writes:
>  > They could be in the same directory as long as we use a 
> distinct  > extension for test definitions.  If they are all 
> .xml files, then  > ANT can't determine which files are test 
> definitions and should be  > validated or transformed and 
> which are test resources.
> 
>   I'm not sure I understand just what the limitation is.  
> I'll have to dig into Ant a little more to figure it out.
> 

There needs to be some pattern so the build can determine which files are test definitions and should be transformed and which files are resource files used in the test and should be copied without
transformation.

Explicitly listing the tests (or excluding the resource files) in build.xml is undesirable.  Running everthing through the transform is unacceptible since some files aren't XML (for example, the
DTD's) and the extension is determined outside the transform, so resource files would all end up with .java, .js, .cs, et al extensions and cause problems in compilation.

The options are to either use pattern to test definitions file names (such as *.domtest or test*.xml), or to keep the test definitions and resource files in different locations.  Since all the scraped
test files had .xml extensions and there were also resource files with .xml extensions, I chose to keep them in parallel hierarchies.  Using a files subfolder is just a slightly different approach.

It is basically the same problem as if you used a .java extension for non-Java files, the build process would become much more complicated since it would assume that those files were Java source code
and try to compile them.



