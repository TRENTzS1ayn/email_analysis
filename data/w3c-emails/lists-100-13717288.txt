docno="lists-100-13717288"
received="Mon Aug 20 09:20:31 2001"
isoreceived="20010820132031"
sent="Mon, 20 Aug 2001 07:14:32 -0600"
isosent="20010820131432"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: Full compile, almost ready to run"
id="70E215722F6AD511820A000103D141D40AA4EA@thor.aeathtl.com"
inreplyto="Full compile, almost ready to run"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

Okay, that is impressive.  I got the test suite to build only 5 hours ago and ran out of steam before I trying to run it, and somebody replicates the build and runs it first.

Using multiple asserts (as suggested) is definitely much preferred over building expected and results lists and then doing an assertEquals.  With the multiple asserts, you will know which part failed.
If there isn't some kind of iterative loop, then you shouldn't be using assertEquals(List,List) or assertEquals(Collection,Collection).  However, when you do have an iterative loop, then those
constructs are extremely useful.  The pattern was inherited from the early NIST work which could only have one assert per test.

While repairing some other issues, I did take the liberty of rewriting a few other places where assertEquals(Collection/List, Collection/List) were used, but I did not try to fix any others that
compiled successfully.

I had noticed the discontinuation of Avalon testlet development (announced 1 Aug, I believe) right after completing the Avalon testlet adapter.  Definitely, JUnit was primary emphasis.  I had done the
Avalon Testlet since the Batik project were interested by the DOM test suite, but couldn't run Junit as part of their build process.  I assume that Apache and JUnit have found some way to work with
each others licenses.  I apparently bungled the JUnit target when I added the Avalon code.



