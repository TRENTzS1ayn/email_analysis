docno="lists-100-14316309"
received="Wed Aug 22 13:47:29 2001"
isoreceived="20010822174729"
sent="Wed, 22 Aug 2001 13:46:02 -0400"
isosent="20010822174602"
name="Mary Brady"
email="mbrady@nist.gov"
subject="Re: Multiple potential exceptions: nodereplacechildnewchilddiffdocument"
id="020401c12b32$4f732570$293b0681@HAPPY"
charset="iso-8859-1"
inreplyto="008b01c12b2f$eba438b0$a800a8c0&#64;CurtMicron"
expires="-1"


To:"Curt Arnold"<carnold@houston.rr.com>,<www-dom-ts@w3.org>

The original java code checks for a WRONG_DOCUMENT_ERR, so I am sure 
that this was probably a cut-and-paste error -- I suspect that the test that was 
originally immediately before this one probably checks for a NOT_FOUND_ERR.
Please do change it.

--Mary
  ----- Original Message ----- 
  From: Curt Arnold 
  To: www-dom-ts@w3.org 
  Sent: Wednesday, August 22, 2001 1:28 PM
  Subject: Multiple potential exceptions: nodereplacechildnewchilddiffdocument


  nodereplacechildnewchilddiffdocument.xml is a strange case.  

  It calls Node.replaceChild with a old node that is not a child of the target node and attempts to replace it with a node that isn't part of this document.  So it could conceivable throw either NOT_FOUND_ERR or WRONG_DOCUMENT_ERR depending on which condition it tested first.  I don't believe there is anything in the DOM spec that would prescribe which exception code should take precedence and DOMTSML doesn't have a construct to support an ambiguous exception code.

  The test is internally inconsistant since the description says
  The "replaceChild(newChild,oldChild)" method raises a 
  WRONG_DOCUMENT_ERR DOMException if the "newChild" was
  created from a different document than the one that 
  created this node.

  But the test checks for NOT_FOUND_ERR.  I'm going to make the body consistent with the description.



