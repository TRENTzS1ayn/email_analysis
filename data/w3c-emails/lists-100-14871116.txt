docno="lists-100-14871116"
received="Mon Dec 10 00:50:21 2001"
isoreceived="20011210055021"
sent="Sun, 9 Dec 2001 23:48:13 -0600"
isosent="20011210054813"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="contentType/offline fixes"
id="01ae01c1813e$4289b100$7600a8c0@CurtMicron"
charset="iso-8859-1"
expires="-1"


To:<www-dom-ts@w3.org>

I spent most of the weekend adding support for the specification of contentType in test suites.  Basically, that means now you can test XML, SVG or HTML DOM implementations in a browser by selecting an appropriate test suite (xml_alltests, svg_alltests or html_alltests respectively).  If you just run alltests, then the "default" contentType for the processor under test is used.

The HTML tests can now be run in IE5 using the text/html and in Mozilla using text/xml.  Tests that depend on HTML specific interfaces will fail in IE using text/xml (since it is using the MSXML parser which doesn't implement the HTML interfaces) and will fail (at least on a fairly old nightly build) in Mozilla using text/html due to what appears to be a serious problem in the DOM structure (none of the nodes under body appear to be there).  I haven't had a chance to try it in a more recent build.

The text/html tests will cause unsightly stray windows to appear, if anyone wants to tweak DOMTestCase.js to hide those or make them less innocuous, please feel free.

I have not propagated any of the changes to the Java side, other than adding the ".xml" extension that I removed from all href attributes.  I have also not done anything on moving the patch files or adding descriptions to the tasks in build.xml.

I have however guarded all the <get> tasks in build.xml, so once you have downloaded the DOM specs, subsequent builds do not attempt to check the W3C server to check the timestamp.  



