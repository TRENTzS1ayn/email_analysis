docno="lists-100-15897655"
received="Tue Jun  5 14:45:33 2001"
isoreceived="20010605184533"
sent="Tue, 5 Jun 2001 20:45:01 +0200 "
isosent="20010605184501"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="SV: Second attempt at DOM 1 generation"
id="9F67DC27F4CCD311ABA600508B6A66A44A66E6@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'Curt Arnold'"<carnold@houston.rr.com>,www-dom-ts@w3.org

comments inlined

-----Ursprungligt meddelande-----
Fr?n: Curt Arnold [mailto:carnold@houston.rr.com]
Skickat: den 1 juni 2001 10:19
Till: www-dom-ts@w3.org
?mne: Second attempt at DOM 1 generation


My second attempt is at http://home.houston.rr.com/curta/domtest/dom1.zip
<http://home.houston.rr.com/curta/domtest/dom1.zip>  which includes
minimally checked schema, DTD, documention and one sample.
 
The following significant changes from previous versions.
 
1) <declare> was changed to <var> to eliminate conflict with
HTMLObjectElement.declare
 
I'm open to other suggestions.  Basically:
 
<declare var="node" type="Node"/>
 
has been replaced by
 
<var name="node" type="Node"/>
 
2) <size> changed to <hasSize> and <add> to <plus> to avoid other conflicts
 
3) assertDOMException now uses a child element for the code
 
<assertDOMException>
    <INDEX_SIZE_ERR>
        <substringData obj="str" start="-1" count="5"/>
    </INDEX_SIZE_ERR>
</assertDOMException>
 
The content model for the child elements is determined by seeing if the text
description has
code name + ":".  Seems to work okay, but is a kludge.  "data" gets
generated twice for
one code and needs to be manually removed.
 
4) Used named templates for organization, pure static schema content
isolated
 
5) <package> added, <suite> removed
 
6) interface optional (but only one choice) when unambiguous
 
Things that need to be done:
 
1) Add optional id attributes to everything that doesn't already have them
(assertions and tests have required IDs)
 
[dd] OK  
 
 2) Write transform that will extract interface information from DOM
specification docs and generate a compact representation
 
3) Write equivalent transform to produce DTD
 
[dd] to simplify things, we could run the schema through a schema editod and
look through it and make any changes by hand
 
4) Explore generating schema/DTD from DOM 2, DOM 3 or SVG spec
 
 



