docno="lists-100-16387790"
received="Mon Jun 11 15:49:46 2001"
isoreceived="20010611194946"
sent="Mon, 11 Jun 2001 15:47:48 -0400"
isosent="20010611194748"
name="Mary Brady"
email="mbrady@nist.gov"
subject="Re: Early XSLT's"
id="007c01c0f2af$64511d50$293b0681@HAPPY"
charset="iso-8859-1"
inreplyto="B2C1451A181BD411B88A00E018C1C19C08ACEC&#64;thor.aeathtl.com"
expires="-1"


To:<www-dom-ts@w3.org>


----- Original Message -----
From: "Arnold, Curt" <Curt.Arnold@hyprotech.com>
To: <mbrady@nist.gov>
Sent: Monday, June 11, 2001 12:58 PM
Subject: RE: Early XSLT's


> I try to spend some time on the transforms tonight and put in into the
xmlconf project with a GPL license and with a personal copyright.  This will
provide a fallback in case any official transform is
> under the document license, then someone who wants to create a transform
for a different language can base it on this work and not have to start from
scratch.
>

[mb] I would prefer not to see additional efforts, rather for those who are
interested in DOM testing to contribute to the
W3C DOM WG effort.  I'm sure we can work out a way that a generic
transformation can be made available as a
starting point for a particular language -- I would think that placing
additional licenses and personal copyrights on
the transformations will inhibit the overall effort, not contribute to it.

> With the IPR still being fuzzy, I'd prefer to try to keep sole authorship
at this time and I'd prefer to complete my intended scope before opening it
up for contributions.
>

[mb] This approach is tying our hands.  The test suite effort is supposed to
be public, with contributions from anyone who is
interested.  Much more can be accomplished if we help each other.

> I should be able to make the code JUnit independent, however test classes
will require that the base class, DOMTestCase, provide JUnit-like functions
such as assertTrue, assertFalse, etc in addition
> to implementing utility functions like load, implementation, wait, etc.
>

[mb] I would expect that these functions would be implemented as part of the
transformation, given that they will have to be
done for each language.  There can be a set of helper functions that get
created for each language, and are then called -- which
makes for good coding practice, but requires that these functions be
available along with the tests, or the logic can be inlined
in the transformation -- which makes for stand-alone tests, and fits in with
contributions coming from many places.

--Mary

>
>



