docno="lists-100-16525517"
received="Fri Jun 15 16:24:42 2001"
isoreceived="20010615202442"
sent="Fri, 15 Jun 2001 14:24:44 -0600"
isosent="20010615202444"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: Early XSLT's"
id="B2C1451A181BD411B88A00E018C1C19C08AD0A@thor.aeathtl.com"
charset="iso-8859-1"
inreplyto="Early XSLT's"
expires="-1"


To:"'Philippe Le Hegaret'"<plh@w3.org>
Cc:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

Thanks for the clarification, Philippe.  The software license with the caveats
seems just about the right balance between maintaining the sanctity of the
test suite and enabling reasonable use of it.

I'd like clarifications on the following:

1. The contribution grant statement

I definitely have no problem with this.  Is there a specific
form that you would like this in and where should I mail it?

2. Copyright notices on schemas, transforms, tests, etc.

Is this an acceptible notice to place in the transforms, schemas,
et al (from your prior message but replaced "Document" with "Software"

/*
 * Copyright (c) 2001 World Wide Web Consortium,
 * (Massachusetts Institute of Technology, Institut National de
 * Recherche en Informatique et en Automatique, Keio University). All
 * Rights Reserved. This program is distributed under the W3C's Software
 * Intellectual Property License. This program is distributed in the
 * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE.
 * See W3C License http://www.w3.org/Consortium/Legal/ for more details.
 */


3. Compatibility and/or Dependency on xUnit frameworks

Compatibility with the xUnit frameworks seems very desirable.
However, I gather from your statements that is may be a requirement
to run independently since, for example, JUnit is licensed
under the IBM Public License.

The generated tests currently depend on their base class (DOMTestCase)
to provide methods such as assertTrue, assertFalse, assertEquals, etc,
that could either be inherited from junit.framework.TestCase or could
be independently implemented.  I do not expect that the tests would
rely on any of the fancier stuff in JUnit (such as building the test
suite by reflection), so that it would be fairly simple to support the
subset used by the tests.



