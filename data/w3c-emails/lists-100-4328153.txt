docno="lists-100-4328153"
received="Mon Apr 14 08:25:04 2003"
isoreceived="20030414122504"
sent="Mon, 14 Apr 2003 14:23:43 +0200"
isosent="20030414122343"
name="Francesco Cannistr?"
email="fracan@inwind.it"
subject="Re: FW : CC/PP Components"
id="00f101c30280$b12b4be0$36971d97@Matrix"
charset="iso-8859-1"
inreplyto="5C76D29CD0FA3143896D08BB1743296A0169C06B&#64;bsebe001.americas.nokia.com"
expires="-1"


To:<Art.Barstow@nokia.com>,<www-di@w3.org>


Hi Art and All,

> ... (RDF itself certainly does not care.)

I don't agree at all. RDF does not impose formal constraints (e.g. if a
property has domain rdf:Resource, then for each resource can be asserted
that property, provided that everything pertains to this type because of
class specialization transitiveness). But in all case it's intended that a
property has its own identity that is associated with a precise meaning. For
semantic consistency it's not possible that a property has different
meanings when applied to subjects of different types. This kind of
polymorphism is not issued in the RDF-RDFS domain (I think). This could work
within a certain application domain, but not within the standard RDF-RDFS
domain.

> If CC/PP does not permit an Attribute (e.g. ExpirationDate) to
> be in different Components (i.e. CreditCard and Session) then
> it seems to me that CC/PP is broken.

CC/PP does permit that an attribute pertains to different components. What
you must do is just associate the attribute with your components' superclass
(e.g. ccpp:Component). But for whatever type of profile component you assert
that attribute, it's always the same vocabulary attribute that you instance,
with the same semantic. You cannot use the same attribute and intend
different thinks when it's asserted for profile components that are
instances of different component classes that extend the component
superclass with which you associated the attribute in your vocabulary. For
these goals you should define different attributes.

Regards,
Francesco



