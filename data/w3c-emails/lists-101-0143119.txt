docno="lists-101-0143119"
received="Tue Jun 26 15:58:15 2001"
isoreceived="20010626195815"
sent="Tue, 26 Jun 2001 15:56:32 -0400"
isosent="20010626195632"
name="Mary Brady"
email="mbrady@nist.gov"
subject="Re: Test to java transform"
id="00bb01c0fe7a$1923dda0$293b0681@HAPPY"
charset="iso-8859-1"
inreplyto="70E215722F6AD511820A000103D141D40AA3E7&#64;thor.aeathtl.com"
expires="-1"


To:<www-dom-ts@w3.org>

I've just updated the test matrix to include ptr's to the xml file, and
transformed java file for some
of our tests.  We've done domimplementation, node, document, namednodemap,
characterdata, attr,
element -- others will be forthcoming -- still checking them on this end.
URL for test matrix is
http://xw2k.sdct.itl.nist.gov/brady/w3c-dom/test-matrix.html

With respect to if, I get an 'unrecognized element if' -- either I'm missing
something or it's
not yet fully supported in the transform.  If you have any ideas, let me
know.  You can view
the xml file by looking at the xml link for nodecommentnodename ...

--Mary

----- Original Message -----
From: "Arnold, Curt" <Curt.Arnold@hyprotech.com>
To: <www-dom-ts@w3.org>
Sent: Tuesday, June 26, 2001 2:11 PM
Subject: RE: Test to java transform


> I think that I updated dom-to-xsd.xsl (at least in the xmlconf CVS) to add
id attributes to every element that didn't have them, but that shouldn't
break existing tests.  I also added <ignoreComments>
> as an implementation condition, I noticed that I had overlooked it as a
JAXP switch, however it is such an odd-ball that maybe it should be dropped.
I didn't rebuild dom1.xsd, however.
>
> An if construct (from memory, so I could be slight off) should look like:
>
> <test>
>     <..../>
>     <if>
>         <equals actual="variable" expected="variableOrLiteral"/>
>         <!--  body of if statement goes here   -->
>         <!--  else is optional   -->
>         <else>
>             <!--  body of else clause goes here  -->
>         </else>
>     </if>
> </test>
>
> If the expected attribute is a string literal, it should be
> represented by containing a double quoted string inside a
> set of single quotes, that is (spaces added for emphasis):
>
> expected = ' "domestic" '
>
> I haven't tested the code gen on this construct.
>
>



