docno="lists-101-0152015"
received="Wed Jun 27 01:27:58 2001"
isoreceived="20010627052758"
sent="Wed, 27 Jun 2001 00:28:09 -0500"
isosent="20010627052809"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="if production"
id="001701c0fec9$f41e9360$7600a8c0@CurtMicron"
charset="iso-8859-1"
expires="-1"


To:<www-dom-ts@w3.org>

I updated test-to-java.xsl and DOMTestFramework.java in the CVS to correct the "if" production, the initial problem was that I had left off the mode="body" attribute on the template.

test-to-java.xsl page in CVS browser: http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/xmlconf/www-dom-ts/test-to-java.xsl

DOMTestFramework.java: http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/xmlconf/www-dom-ts/org/w3c/dom/testing/DOMTestFramework.java

Here is my (partially) corrected version of nodeCommentNodeName.xml:

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test SYSTEM "dom1.dtd">
<test xmlns="http://xmlconf.sourceforge.net/domunit/2001-05-17" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance" targetURI="http://xw2k.sdct.itl.nist.gov/brady/w3c-dom/xml/nodeCommentNodeName.xml" package="net.sourceforge.xmlconf.domunit.dom1" name="nodeCommentNodeName">
<var name="doc" type="Document"/>
<var name="elementList" type="NodeList"/>
<var name="commentNode" type="Node"/> 
<var name="nodeType" type="int"/>
<var name="commentNodeName" type="DOMString"/>
<load var="doc" href="staff.xml" willBeModified="false"/>
<childNodes obj="doc" var="elementList"/>
<for-each collection="elementList" member="commentNode">
<nodeType obj="commentNode" var="nodeType"/>
<if>
<equals actual="nodeType" expected="8" />
<nodeName obj="commentNode" var="commentNodeName"/>
<assertEquals actual="commentNodeName" expected='"#comment"' id="nodeCommentNodeNameAssert1" ignoreCase="false"/>
</if>
</for-each>
</test>


Partial list of changes: tagname in DOCTYPE, DOMString instead of String, fixed two mismatched variable names (elementList and commentNodeName)

Things left to fix: 

test namespace: 

My last transform built the test namespace by adding #test-definition to the spec URI.  For example:

http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001#test-definition

for DOM Level 1.  The test-to-java.xsl transform was rewritten so it doesn't depend on the namespace of the test, however the namespace could be used to select the appropriate version of interfaces.xml.

package name:

Since we will probably have to avoid name collisions for JavaScript, putting all the tests into one unnamed (or fixed named) package might be expedient.

I'll try to build up an Ant script that will download the DOM specs, generate the schemas, and transform and compile tests.  But that will be tomorrow.



