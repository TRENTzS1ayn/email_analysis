docno="lists-101-10144251"
received="Tue Mar 12 16:23:04 2002"
isoreceived="20020312212304"
sent="12 Mar 2002 16:23:04 -0500"
isosent="20020312212304"
name="Philippe Le Hegaret"
email="plh@w3.org"
subject="Re: Tests that depend on node being inserted for default attributes"
id="1015968184.7232.59.camel@jfouffa"
inreplyto="009801c1c97f$6896d6f0$a800a8c0&#64;CurtMicron"
expires="-1"

To:www-dom-ts@w3.org


On Mon, 2002-03-11 at 23:35, Curt Arnold wrote:
> I'd like to have a affirmation or rejection of each of the following
> statements:
> 
> Providing Attr nodes for default attributes specified in an external subset
> is required when loading a document using a validating processor.

true. This is required by the XML 1.0 specification and consequently,
the DOM specification must follow this requirement.

> Providing Attr nodes for default attributes specified in an internal subset
> is required when loading a document using any processor.

Not exactly:
[[
Except when standalone="yes", they [non-validating processors] must not
process entity declarations or attribute-list declarations encountered
after a reference to a parameter entity that is not read, since the
entity may have contained overriding declarations.
]]
http://www.w3.org/TR/2000/REC-xml-20001006#proc-types

So, if no unparsed parameter entities appeared before reading the
attribute declarations, it is required to provide Attr nodes for default
attributes when loading a document using any processor.

> Providing Attr nodes for default attributes specified in an external or
> internal subset is never prohibited.

true.

> The initial form of the default attribute tests*  demanded behavior that was
> optional for non-validating parsers and therefore were not valid conformance
> tests.

true.

> The current form of the default attribute tests (which mark the tests as not
> applicable to non-validating parsers) only demands required behavior and are
> valid conformance tests.
>
> * attrdefaultvalue.xml, attrnotspecifiedvalue.xml,
> attrspecifiedvalueremove.xml, documentcreateelementdefaultattr.xml,
> elementremoveattribute.xml, elementremoveattributerestoredefaultvalue.xml,
> elementretrieveallattributes.xml, namednodemapremovenameditem.xml,
> namednodemapremovenameditemgetvalue.xml

true.

Philippe



