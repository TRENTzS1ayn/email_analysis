docno="lists-101-10239557"
received="Wed Mar 13 06:39:31 2002"
isoreceived="20020313113931"
sent="Wed, 13 Mar 2002 13:39:04 +0200"
isosent="20020313113904"
name="Manos Batsis"
email="m.batsis@bsnet.gr"
subject="RE: Using existing staff.xml based tests with HTML processors"
id="E657D8576967CF448D6AF22CB42DD26908BE92@ermhs.Athens.BrokerSystems.gr"
charset="us-ascii"
inreplyto="Using existing staff.xml based tests with HTML processors"
expires="-1"


To:"Curt Arnold"<carnold@houston.rr.com>
Cc:<www-dom-ts@w3.org>


True. The only way to use one could have used the same tests both for
XML and HTML, would be to use HTML element and attribute names (and
values) for the XML tests as well and have a stylesheet producing each
version from the same source doc only to test the XML interfaces. What
I'm doing now is actually quite the opposite.

Unfortunately and against some of my original intentions, HTML UAs  are
supposed to ignore unknown elements and attributes or unknown attribute
values ( at least as far as rendering goes) according to [1]. Existing
tests of course *may* work as HTML tests, but they wouldn't stand a
chance as formal tests even if the HTML interfaces where actually
tested.

Still, this work can benefit from m12n now and even more in the future. 

One pursuit is web accessible tests for browsers(?); both XML and HTML
tests can be packed in such a document accessible on line but the only
formal way to do so is to build a m12n schema.

But I'm afraid that the real benefit of the m12n approach will only
start showing on Level2 tests, if used.

[1] http://www.w3.org/TR/html4/appendix/notes.html#h-B.1


-----Original Message-----
From: Curt Arnold [mailto:carnold@houston.rr.com] 
Sent: Tuesday, March 12, 2002 10:00 PM
To: www-dom-ts@w3.org
Subject: Fw: Using existing staff.xml based tests with HTML processors


Manos,

Maybe I have misinterpreted your efforts, but I don't think they address
our immediate objective.  Moving staff.xml into modularized XHTML does
not address the lack of DOM Core tests for existing (not X) HTML
processors.



