docno="lists-101-10377503"
received="Sun Mar 17 18:33:32 2002"
isoreceived="20020317233332"
sent="Mon, 18 Mar 2002 00:33:21 +0100"
isosent="20020317233321"
name="Dimitris Dimitriadis"
email="dimitris@ontologicon.com"
subject="Re: DOMC Test Suite"
id="5E27C20E-39FF-11D6-BD15-000393556882@ontologicon.com"
charset="US-ASCII"
inreplyto="004001c1ce07$c3364050$a800a8c0&#64;CurtMicron"
expires="-1"

Cc:"Michael B Allen"<mballen@erols.com>,<www-dom-ts@w3.org>
To:"Curt Arnold"<carnold@houston.rr.com>


Welcome, Michael

Please note that the C binding will not form aprt of the official DOM 
TS, which contains ECMA and Java (the two official DOM bindings) only.

However, as the DOM TS group has said from the start, we encourage other 
bindings, as Curt pointed out earlier in the thread. I'll have to look 
in to where transforms to other bindings should reside. I'll get back to 
the list about this.

Nice to see that work is done in areas other than ECMA and Java.

/Dimitris Dimitriadis, DOM WG representative to the DOM TS Group

On Monday, March 18, 2002, at 12:02 , Curt Arnold wrote:

> Not going to be able to work on this today.  Pretty beat from a couple 
> of
> marathon nights on the <cc> task for ant.
>
> Do you want to do this as a part of the W3C effort?  If you'd like to do
> this as part of the W3C effort, email the transform to
> www-dom-ts-submission@w3.org which will make sure that all the IPR 
> issues
> are dotted and crossed.
>
>> o The assertions assume certain type evaluations can be made like
>>   assertEquals might warrant == or strcmp.
>
> Since the transform is aware of the types of the arguments, it is pretty
> easy for the transform to produce assertEqualsString, assertEqualInt, 
> etc.
> I'd prefer that over trying to inline the comparison with an strcmp.
>
>> o The for-each loop is not right but largely because ...
>> o I need a List type
>
> Doesn't need to be a very sophisticated, full featured list type.
>
>> o Memory management is not considered at all and would probably require
>>   modification of the templates.
>>
>> BTW: Saxon failed miserably with the Java suite. Are you sure
>> the problem is with the parsers?
>
> Nope.  It was just similar symptoms to stuff I've experienced before.  I
> just rebuilt the suite using Saxon without incident.  Could you give me 
> the
> specifics of your build configuration, O/S, Java vendor and version,
> anything else pertinent.  Definitely the test suite generation makes a 
> good
> stress test of an XSLT processor.
>
>
>



