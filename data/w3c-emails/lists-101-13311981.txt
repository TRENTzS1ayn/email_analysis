docno="lists-101-13311981"
received="Fri Dec 19 05:19:32 2003"
isoreceived="20031219101932"
sent="Fri, 19 Dec 2003 02:14:46 -0800"
isosent="20031219101446"
name="Johnny Stenback"
email="jst@w3c.jstenback.com"
subject="Re: Use of string literal (&quot;dummy&quot;) as namespace resolver in L3 XPath   tests and other schema validation issues"
id="3FE2CF96.9000100@w3c.jstenback.com"
charset="us-ascii"
inreplyto="3FE2B01F.7080101&#64;houston.rr.com"
expires="-1"


To: Curt Arnold<carnold@houston.rr.com>
Cc:www-dom-ts@w3.org


The reason Mozilla doesn't throw an exception when a string is passed as 
a namespace resolver is that the argument is still not used, so the 
string goes through the JS-to-C++ layer and gets converted to the 
appropriate type, but since it's not used, no exception is ever thrown. 
This is of course not the intent in Mozilla, and the fact that we don't 
throw an exception is just a shortcoming in Mozilla's current support 
for DOM XPath.

Curt Arnold wrote:

> 
> Several XPath tests (for example, 
> XPathExpression_evaluate_NOT_SUPPORTED_ERR) used the string literal 
> "dummy" as a namespace resolver.  I believe all of these tests expected 
> an exception for other reasons and the type mismatch would have 
> satisified the expectation of an exception.  If Mozilla actually takes a 
> string literal as an namespace resolver, we should add a test that 
> asserts that an implementation specific exception be thrown.
> 
> Most if not all <load> statements were missing willBeModified 
> attributes.  The DTD can't distinguish between the inner class load  
> method definition element and the framework load statement element, so 
> willBeModified is optional in the DTD.  However, it is required for the 
> framework load statement element in the schema.
> 
> Conformance_Expressions used a lot of <append> statements to add items 
> to a list of statements.  These were change per the previous message.
> 
> 

-- 
jst



