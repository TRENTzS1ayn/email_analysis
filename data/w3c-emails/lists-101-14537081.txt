docno="lists-101-14537081"
received="Wed Jul  2 14:07:40 2003"
isoreceived="20030702180740"
sent="Wed, 2 Jul 2003 14:07:05 -0400"
isosent="20030702180705"
name="Rick Rivello"
email="richard.rivello@nist.gov"
subject="Re: Test suite problems"
id="000d01c340c4$bfba4850$573b0681@sdct.nist.gov"
charset="iso-8859-1"
inreplyto="20030623210604.GA9663&#64;doxdesk.com"
expires="-1"


To:<www-dom-ts@w3.org>


I've committed some changes to the test suite for
a few of the problems that were addressed below.

comments are inlined.


----- Original Message ----- 
From: "Andrew Clover" <and-w3@doxdesk.com>
To: <www-dom-ts@w3.org>
Sent: Monday, June 23, 2003 5:06 PM
Subject: Test suite problems


> 
> Evening,
> 
> I've just run my implementation through the current CVS's L2 tests
> (including ibmtests - what is the status of these?), and unfortunately
> this seems to have turned up a few more test suite problems.
> 
> Here are my notes:
> 
> level1/core/hc_nodeinsertbeforeinvalidnodetype
>   This can generate a NOT_FOUND_ERR as well as a HIERARCHY_REQUEST_ERR.
>   getElementsByTagName("p") will select elements that aren't inside the
>   root node, so can't be used as a refChild on a root node insertBefore.
> 
> level1/core/hc_nodereplacechildinvalidnodetype
>   Can also generate NOT_FOUND_ERR for the same reason.
> 
> level2/core/internalSubset01
>   Forgets to actually test anything, and the description text is
>   nonsense.
> 
     [rr] internalSubset01 has been modifed to test for a null value that
           could be returned by the internalSubset() method if an internal
           subset does not exist as per the DOM Level 2 errata.

            staff2.xml and staff2.dtd have been committed to the test suite
            for this test since there were not any test files that contained a 
            DOCTYPE that was empty.

            An additional test will be added at a later date to test
            for an internal subset that is not null.

> level2/core/namednodemapgetnameditemns01
>   Entities and notations cannot be dealt with like this using Level 2 NS
>   methods, they are defined as having null localNames. Implementations
>   should return null; the subsequent nodeName calls then cause null
>   dereference exceptions.
> 
> level2/core/namednodemapremovenameditemns05
>   Same entities/notations problem. Hence removeNamedItemNS can raise
>   NOT_FOUND_ERROR.
> 
> level2/core/namednodemapsetnameditemns03
>   The attribute is already used by another element in a different
>   document; the implementation could raise INUSE_ATTRIBUTE_ERR as well
>   as WRONG_DOCUMENT_ERR.
> 
> level2/core/namednodemapsetnameditemns05
>   Fails to get entity/notation for same reasons before. Passing it to
>   setNamedItemNS could generate an implementation-defined null-related
>   exception as well as NO_MODIFICATION_ALLOWED_ERR.
> 
> level2/core/namednodemapsetnameditemns10
>   Same again, null error possible.
> 
> level2/core/prefix06
>   There is a ':' in the prefix name, so this could cause a NAMESPACE_ERR
>   as well as an INVALID_CHARACTER_ERR.
> 

       [rr]  The ':' was removed from the prefix name.


> level2/core/removeNamedItemNS03
>   Tries to remove a non-existant attribute, so could generate NOT_FOUND_ERR
>   as well as NO_MODIFICATION_ALLOWED_ERR.
> 

> level2/core/setNamedItemNS04
>   The namespaceURI doesn't match that of the attribute in the entity
>   reference, so getNamedItemNS returns null, and an implementation-defined
>   null-related exception can be raised as well as
>   NO_MODIFICATION_ALLOWED_ERR.
> 

     [rr]  The namespaceURI was changed to match that of the attribute in the
             entity reference.
> -- 
> Andrew Clover
> mailto:and@doxdesk.com
> http://www.doxdesk.com/
> 



