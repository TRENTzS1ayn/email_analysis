docno="lists-101-15803394"
received="Mon Mar  1 12:38:18 2004"
isoreceived="20040301173818"
sent="Mon, 1 Mar 2004 11:38:12 -0600"
isosent="20040301173812"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="Re: Proposal for ECMAScript binding rewrite"
id="36AE277E-6BA7-11D8-BFC5-000393B97126@houston.rr.com"
charset="US-ASCII"
inreplyto="403B4365.9090602&#64;bclary.com"
expires="-1"


To:www-dom-ts@w3.org


Sorry about the delay on responding.  I'm unclear on the difference 
between "Parser Configuration" and "Test Implementation Attributes".  
Is the latter is a way of subselecting tests that, for example, require 
namespace awareness?  Could you explain the motivation for that, I 
don't see it.

Could you also explain what you were trying to do with the test feature 
and version combo?  If I select "XML" and "Ignore", then 83 tests are 
identified as compatible and 439 are identified as incompatible, 
however all L1 Core tests are compatible with an implementation 
returning true for hasFeature("XML", null).  Maybe only 83 explicitly 
declare that they require "XML".

There is a requirement to be able to tweak the parser configuration 
(when possible).  The list of compatible and incompatible tests was 
just to provide some feedback since the JSUnit will report incompatible 
tests as being successfully completed where they won't appear in a 
JUnit run.  If there is a need to be able to find, for example, all 
tests that require feature "HTML" to be true, then that should probably 
be in the test matrix since it would apply to all platform bindings.

If we could add a "warning" result to JSUnit, then we could skip the 
listing of compatible and incompatible tests in the test configuration. 
  The incompatible tests could just note that they were effectively 
skipped during test evaluation.



