docno="lists-101-16492186"
received="Tue May  2 15:17:59 2000"
isoreceived="20000502191759"
sent="Tue, 2 May 2000 21:17:53 +0200"
isosent="20000502191753"
name="Julian Reschke"
email="reschke@muenster.de"
subject="RE: Test message"
id="NCBBIPMOPKLLGKJPBINCMEMEECAA.reschke@muenster.de"
charset="us-ascii"
inreplyto="390F0AB4.8A4F30AF&#64;redrice.com"
expires="-1"

To:<francis@redrice.com>,"Julian Reschke"<reschke@muenster.de>
Cc:<dave.pawson@virgin.net>,<www-dom-xpath@w3.org>


> From: Francis Norton [mailto:francis@redrice.com]
> Sent: Tuesday, May 02, 2000 7:05 PM
> To: Julian Reschke
> Cc: dave.pawson@virgin.net; www-dom-xpath@w3.org
> Subject: Re: Test message
>
>
>
>
> Julian Reschke wrote:
> >
> ...
> > data.selectNodes("//Record[Name='"+WScript.Arguments(1)+"']/Phone");
> >
> > in the current MSXML implementation.
> >
>
> Yes. Perhaps I should have used that - the only problem is that I can't
> get it to work in my build of MSXML, even with "/Record[Name='" +
> WScript.Arguments(1) + "']/Phone/text()", which I assume is the correct
> expression. And it explodes any time I try to use an explicit "child::"
> axis. Time for another install...

If you need XPath rather than the IE5-XSL-Pattern-Language, you will have to
tell MSXML(3) to do that:

xml.setProperty ("SelectionLanguage", "XPath");

> > The example also exposes another problem that has been
> discussed recently:
> > this code will fail if WScript.Arguments(1) contains an
> apostrophe. That's
> > why I think that a well-defined API should allow to bind values to
> > variables, and to reference these variables just like in XSLT.
> >
> That seems like a good point - I could have been searching for "Patrick
> O'Brien". Are there any other features from XSLT which are key to the
> successsful use of XPath?

I think this is it -- we need to bind variables and possibly extension
functions (MSXML already allows to pass objects to XSLT, and then to access
these objects using xsl:value-of and a user name space)..



