docno="lists-101-16569815"
received="Tue May  2 16:30:27 2000"
isoreceived="20000502203027"
sent="Tue, 2 May 2000 16:10:15 -0400"
isosent="20000502201015"
name="Scott Boag/CAM/Lotus"
email="Scott_Boag@lotus.com"
subject="Re: [dom-xpath] XPath or? (was RE: Announcing www-dom-xpath&#64;w3.org)"
id="OF22A814CC.9D791D98-ON852568D3.006DF823@lotus.com"
charset="us-ascii"
inreplyto="[dom-xpath] XPath or? (was RE: Announcing www-dom-xpath&#64;w3.org)"
expires="-1"

To:www-dom-xpath@w3.org



"Michael Champion" <Mike.Champion@SoftwareAG-USA.com> wrote:
> The main argument for putting it *in* the
> DOM is efficiency - one can do a lot inside a DOM implementation to
support
> indexing/inverted lists/etc. that would make XPath queries work well that
> would be much harder *on top of* the DOM.

You can still do that, and throw a DOMImplNotSupportedException or some
such if an implementation can't work with generic DOM APIs.  You get more
choices in terms of handling generic DOMs using one design, and less
choices using the other.

> Anyway, I'm
> not sure what "lesson" JDOM has for DOM;

Don't get me wrong, I don't like JDOM in a big way.  But I think it's a
message.  People are finding the DOM overly complex.  Things like the
StyleSheet interface, which should never have gone into the DOM, in my
opinion, are adding to this.

-scott



