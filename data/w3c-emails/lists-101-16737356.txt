docno="lists-101-16737356"
received="Wed May  3 14:02:42 2000"
isoreceived="20000503180242"
sent="Wed, 3 May 2000 14:02:24 -0400"
isosent="20000503180224"
name="Michael Champion"
email="Mike.Champion@softwareag-usa.com"
subject="Re: [dom-xpath] XPath or? (was RE: Announcing www-dom-xpath&#64;w3.or g)"
id="0ba701bfb529$beb012c0$a20c1e18@WORKGROUP"
charset="Windows-1252"
inreplyto="43C2F98D8414D411865A00508BC22AB908CAF6&#64;odin.cromwellmedia.co.uk"
expires="-1"


To:<www-dom-xpath@w3.org>


----- Original Message -----
From: "Miles Sabin" <msabin@cromwellmedia.co.uk>
To: <www-dom-xpath@w3.org>
Sent: Wednesday, May 03, 2000 1:23 PM
Subject: RE: [dom-xpath] XPath or? (was RE: Announcing www-dom-xpath@w3.or
g)



> 1. As far as I understood form Mike, XPath support would be an
>    option DOM module

That is definitely true.  It's not clear HOW we would add XPath support to
the DOM; a NodeXPath interface is one reasonable idea; allowing the
method(s) to
throw a NOT_IMPLEMENTED exception is another ... Basically this is an open
issue for this list to consider.

>
> 2. Allowing a DOM implementation to _optionally_ implement
>    XPath itself opens up the possiblity for _significant_
>    optimizations over what can be achieved via the exisiting
>    public API. (Mike, maybe you should chip on how that might
>    pan out in the case of a DOM API to an XML database).

Sure! This is a clear example of how an XPath implementation inside the DOM
could be many orders of magnitude faster than on on top of the DOM.
XPath *is* our (Software AG's) query language, built into our database
engine.



