docno="lists-101-16746343"
received="Wed May  3 14:05:45 2000"
isoreceived="20000503180545"
sent="Wed, 3 May 2000 14:06:05 -0400"
isosent="20000503180605"
name="Scott Boag/CAM/Lotus"
email="Scott_Boag@lotus.com"
subject="RE: [dom-xpath] XPath or? (was RE: Announcing www-dom-xpath&#64;w3.or g)"
id="OF5FAFCF20.2F315A32-ON852568D4.0062DB4B@lotus.com"
charset="us-ascii"
inreplyto="[dom-xpath] XPath or? (was RE: Announcing www-dom-xpath&#64;w3.or g)"
expires="-1"

To:www-dom-xpath@w3.org



Miles Sabin <msabin@cromwellmedia.co.uk> wrote:
> So whose implementation will you cast to to get hold of those
> optimized query hooks? Yours, obviously.

Right, using my optimizations.

> But what about ours?
> Jonathan and Mikes?; Suns? etc. etc.

In the case of my XPath implementation, I would support these via the
public DOM interfaces (yes, it would be slower).  Other implementations may
throw an error.

> And do you expect me to support _your_ implementation

No, not if you don't support generic DOMs.

> Adding an XPath query API to the DOM allows optimized XPath
> queries to be _portable_.

I don't think having a method on the Node object vs. having a method on an
XPath object that takes a node as a context makes one smidgen of difference
in terms of optimization or portability.  On the contrary, the method with
context is more portable.

According to your argument, anything that is ever optimized must be a
method on the DOM.

-scott



