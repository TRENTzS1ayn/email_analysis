docno="lists-101-1838660"
received="Sat May 26 10:50:37 2001"
isoreceived="20010526145037"
sent="Sat, 26 May 2001 16:54:20 +0200"
isosent="20010526145420"
name="Jeroen van Rotterdam"
email="jeroen@x-hive.com"
subject="TS question"
id="001a01c0e5f3$bf3db5c0$1300a8c0@coo"
charset="iso-8859-1"
expires="-1"


To:<www-dom-ts@w3.org>

Hi, 

Just back from Berlin, trying to catch up with the TS.
After a quick read I understand that we are moving into a direction where interface methods are defined as Elements within the TS dtd.
After a series of method calls a set of assertions are issued.

With the limited knowledge I've got now from the DTD I'm trying to image how a test for a DOM L3 LS call would look like.

example:

void       writeNode(in DOMOutputStream destination, in Node node) raises(DOMSystemException);

Would probably something like <DOMWriter.writeNode var="........

One of the options for this DOM L3 call is Namespace fixup:

true: Check namespace declarations and prefixes for consistency, and fix them in the serialized data if they are inconsistent.
false: Perform no special checks on name space declarations, prefixes or URIs.
default: true;
supported values: true: required; false: required. 

It seems to me that it could be difficult to check the result of this method by a set of asserts.
Do you think it would be doable to test these kind of methods ?

Regards,


Jeroen



