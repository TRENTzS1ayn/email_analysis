docno="lists-101-1960426"
received="Sun May 27 18:11:14 2001"
isoreceived="20010527221114"
sent="Sun, 27 May 2001 17:11:16 -0500"
isosent="20010527221116"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="Interface attribute"
id="005201c0e6f9$f38f16a0$ce44a018@curtbnmqewb54k"
charset="iso-8859-1"
expires="-1"


To:<www-dom-ts@w3.org>

I think that I have a pretty good solution to the whole <Node.nodeValue> vs <Node><nodeValue> vs <Text><nodeValue> issue that can hopefully let us proceed and resolve later whether it is useful to express the intended derived type when invoking a method or property inherited from the base class.

I've introduced an "interface" attribute on the element corresponding to any method or property name that is either defined in multiple interfaces (for example, ProcessingInstruction.target and Event.target) or is inherited by derived interfaces (Node.nodeValue inherited into all the more specific Attr, Element, etc).  In cases where the name is defined in multiple interfaces, the attribute is required.  When an name is inherited by a more specific interface, the attribute is optional.

I'll still contend that it would be better to use an explicit <assertInstanceOf/> instead specifying the interface on an inherited property invocation, however the eventual resolution after the tests are written (either leaving the attribute or removing it) will not structurally impact the test documents.

I've updated http://home.houston.rr.com/curta/domtest/domtest.zip with schema, DTD and documentation.

At this point, I expect any additional work to be on writing sample tests, transforms or looking into metadata.  



