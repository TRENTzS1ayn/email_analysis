docno="lists-101-2088977"
received="Mon May 28 13:07:21 2001"
isoreceived="20010528170721"
sent="Mon, 28 May 2001 12:08:00 -0500"
isosent="20010528170800"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="Re: 28 May 2001 WAI ER WG Telecon"
id="002d01c0e798$bffc6b90$ce44a018@curtbnmqewb54k"
charset="iso-8859-1"
inreplyto="9F67DC27F4CCD311ABA600508B6A66A44A6614&#64;VXOIMP1"
expires="-1"


To:<www-dom-ts@w3.org>

I see three specific phases where we could use EARL.  One is the test
results reporting, which is appropriately out of the scope of the test suite
definition.  The second is to capture the relationships between tests and
the debate and judgement on tests after their submission, but we aren't
there yet.  The third is self-description of submitted tests.

In this third use, using EARL and other RDF vocabularies places a pretty
steep learning curve to test submitters and high potential for error in the
test description.

My current thinking is that we keep the <metadata> element that is in my
current schema and continue to allow it to contain an <rdf:RDF/> element for
power users or unanticipated metadata but also allow it to contain elements
from the test definition namespace.  These elements should have the same
semantics as some attribute in an established RDF vocabulary and it should
be straightforward to use XSLT to either generate external RDF or to recast
the test using exclusively rdf expression.

<test>
    <metadata>
        <creator>John Doe</creator>
        <publisher>Example Software, Co</publisher>
        <date>2001-05-28</date>
    </metadata>
</test>

Then it just becomes of question to identify what properties defined by
Earl, Dublin Core, etc are appropriate for self-description but are not
obvious (such as <dc:format>text/xml<dc:format>) and define a representation
for them in our schemas and/or DTDs.



