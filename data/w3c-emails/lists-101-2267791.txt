docno="lists-101-2267791"
received="Tue May 29 16:22:02 2001"
isoreceived="20010529202202"
sent="Tue, 29 May 2001 22:21:20 +0200"
isosent="20010529202120"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="SV: Re tying into existing standards..."
id="9F67DC27F4CCD311ABA600508B6A66A44A6649@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'Joseph Kesselman'"<keshlam@us.ibm.com>,"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

comments inlined

-----Ursprungligt meddelande-----
Fr?n: Joseph Kesselman [mailto:keshlam@us.ibm.com]
Skickat: den 29 maj 2001 18:59
Till: 'www-dom-ts@w3.org'
?mne: Re tying into existing standards...



Quoting Steven Boies: "Make it work. Make it good. Make it great."
Implied subtext: "In that order."

I do like the idea of tying the test suite langauge into other evolving
standards. But I'm slightly concerned that the time invested in doing so
could be time stolen from the most essential step, that being to make the
test suite actually function usefully.

*** I have similar concerns. It would be a nice thing to have support for
(in this case EARL) but we have to wait for what the WAI/EARL team proposes
that we ask of implementors to put in their harness to run our test suite.
We write the tests and can only provide those. Any additional constraints
will have to be argued for but cannot be endorsed by us.

Simply pulling together a reasonable test suite is tough. Making it
language-independent is tougher. If we gain some real leverage out of RDF
etc. that _reduces_ the effort involved, great. If we can't establish that
fairly quickly, I'd suggest going with something that works for now, and
searching for something more elegant as a secondary effort. We can always
do a stylesheet-assisted cutover to the fancier language later...

*** One way of solving the need for future support for other languages. I
second that since we have no other proposal on the table.

Just an uninformed personal reaction. Your milage may vary.

______________________________________
Joe Kesselman  / IBM Research



