docno="lists-101-2307382"
received="Wed May 30 09:17:21 2001"
isoreceived="20010530131721"
sent="Wed, 30 May 2001 15:16:54 +0200"
isosent="20010530131654"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="SV: First pass at generated schema for DOM 1 + HTML"
id="9F67DC27F4CCD311ABA600508B6A66A44A666D@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'Curt Arnold'"<carnold@houston.rr.com>,www-dom-ts@w3.org

I've added the simpleTypes 

<xsd:simpleType name="DOMExceptionCode">
<xsd:annotation>
<xsd:documentation>DOMExceptions raised</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string">
<xsd:pattern value="[A-Z][_]*"/>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="RangeExceptionCode">
<xsd:annotation>
<xsd:documentation>RangeExceptionCode</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string">
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="EventExceptionCode">
<xsd:annotation>
<xsd:documentation>EventExceptionCode</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string">
</xsd:restriction>
</xsd:simpleType>

to my local Copy as well as preliminary definitions of the followinf (taken
from Curt's original schema)

<xsd:element name="dispatchEvent" substitutionGroup="DOMFunction">
<xsd:annotation>
<xsd:appinfo>
<!--<annot:function featureOf="EventTarget"
return="boolean"/>-->
</xsd:appinfo>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="DOMFunction">
<xsd:attribute name="event" type="variable"
use="required"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:complexType name="DOMFunction">
<xsd:attribute name="obj" type="variable" use="required"/>

<xsd:attribute name="var" type="variable" use="required"/>
</xsd:complexType>
<xsd:element name="DOMFunction" type="DOMFunction" abstract="true"/>

and it seems to work fine. I'll continue tuning it and post the result later
today.

I have som eproblems with my source files, though, for example the
Document.xml for level 1 doesn't have a root node. This goes for some of the
HTML interfaces as well.

/Dimitris


-----Ursprungligt meddelande-----
Fr?n: Curt Arnold [mailto:carnold@houston.rr.com]
Skickat: den 30 maj 2001 08:53
Till: www-dom-ts@w3.org
?mne: First pass at generated schema for DOM 1 + HTML


I've posted an XSLT transform and a generated XML Schema from the DOM 1 xml
sources at http://home.houston.rr.com/curta/domtest/genschema.zip   It is
really fresh and only superficially checked.  I executed the transform with
SAXON 6.2.2.
 
It should be pretty easy to generate both XML Schema and DTD's from the DOM
specs XML sources and so eliminate the need for XML Schema to DTD
conversion.  However, I started with XML Schema first, as always.
 
The transform isn't smart enough yet to handle an read-write property name
that has different types in different uses or methods with different calling
signatures in different uses.
 
I've not tried the transform against the level 2 sources, but I did take a
quick look at them.  There were a couple of issues, first the directory
entries in the xml-sources.zip file contained "..", for example, one file
was named "..\..\..\pubtext\xmlspec-v21-dom.dtd".   This requires you to
unpack to a directory at least 3 levels deep.  It would also be helpful to
know what parameters can accept a null string or node.
 
 



