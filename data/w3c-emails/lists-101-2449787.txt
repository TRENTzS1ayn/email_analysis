docno="lists-101-2449787"
received="Thu May 31 13:27:43 2001"
isoreceived="20010531172743"
sent="Thu, 31 May 2001 19:27:22 +0200"
isosent="20010531172722"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="Minutes in brief and action items"
id="9F67DC27F4CCD311ABA600508B6A66A44A6698@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

Hi all

This is a quick account of theminutes from Tuesday's telcon:

1. We decided to unify the schemas that have been proposed so far. We will
produce _one- schema for the DOM TS ML, which will exist in XML Schema and
DTD form, without losing any information (it is obvious that we will loose
some schemas-specific constraint checking in the DTD).Keep the IDL-ish
naming conventions, boil both existing frameworks down to this set, extend
with construct parts, metadata and packaging/suite defs. 

2. The Schema will rely on the DOM Specification's IDl interfaces and not
entities or interface/method names as before.

3. The test suite should be allowed to consist of both inlined and linked
tests. Tests will be separate documents.

4. The test suite should include information on what is needed of an
implementation to take the tests (for example, support for events)

5. The test suite will be able to support export to and import from the
xUnit-type frameworks.

6. It's hard enough for people to learn the DOM TS ML, so use of RDF should
be kept to a minimum. Our schema will allow for 
optional RDF-encoded metadata. We anticipate word from WAI/EARL on how we
should convince implementors to include EARL-specific functionality.


Action items (persons primarily responsible indicated):
1. Supply the schema with the construct parts (Curt/Mary/Dimitris)
2. Write the XSL for generating the Schema from the DOM XML specifications
(Curt has alreaddy done this, needs final polishing)
3. Start work on architecture for submitting/editing/approving tests (All,
Curt to submit a proposal)
4. Look into an issue tracking system (there is no such colution within the
W3C) (Philippe/Jason)
5. Rewrite styelsheets for code generation (Java and ECMA primarily, others
welcome) (NIST for the Java one, ECMA open)
6. Work on the details for test suite packaging (Curt, Dimitris?)
7. Produce documentation (faq, help documentation, test production
descriptions) (Dimitris)
8. Produce a test matrix (Mary/Dimitris)
9. Produce a list of semantic requirements (Mary, is connected to the test
matrix)



