docno="lists-101-2491491"
received="Thu May 31 13:58:06 2001"
isoreceived="20010531175806"
sent="Thu, 31 May 2001 19:57:42 +0200"
isosent="20010531175742"
name="Dimitris Dimitriadis"
email="dimitris.dimitriadis@improve.se"
subject="SV: First pass at generated schema for DOM 1 + HTML"
id="9F67DC27F4CCD311ABA600508B6A66A44A669B@VXOIMP1"
charset="iso-8859-1"
expires="-1"


To:"'Mary Brady'"<mbrady@nist.gov>,www-dom-ts@w3.org

comments inlined

-----Ursprungligt meddelande-----
Fr?n: Mary Brady [mailto:mbrady@nist.gov]
Skickat: den 31 maj 2001 18:02
Till: www-dom-ts@w3.org
?mne: Re: First pass at generated schema for DOM 1 + HTML



----- Original Message -----
From: "Dimitris Dimitriadis" <dimitris.dimitriadis@improve.se>
To: "'Mary Brady'" <mbrady@nist.gov>; <www-dom-ts@w3.org>
Sent: Wednesday, May 30, 2001 9:51 AM
Subject: SV: First pass at generated schema for DOM 1 + HTML


> I think we should create a thread to discuss exactly what vocabulary we
> intend to produce. Generating directly from the schema lets us use the
> native inerface and method names. I'd like to see that we do this.
>

Okay --here's a start--

    * Use IDL for attribute / method names

[dd] OK

    * Specify var's, parameters, and returnTypes according to the spec:
                Spec always --> required in the schema
                Spec sometimes --> optional in the schema
                Spec never --> should not appear in the schema

[dd] sounds fine to me. I don't quite understan how we infer the 'sometimes'
though

    * Interface name -- should be inferable from somewhere, or defined
       as an attribute on the method name
                - defaulted as an attribute in cases where it is unambiguous
                - one of a list if it is available in more than one place.

[dd] ok. how does this sound to you, curt?

    * Exceptions -- correspond according to the spec -- ie, only be able
       to specify the particular exceptions that can be thrown on a given
       attribute or method.

[dd] these could even be defined upfront in the schema as per the dom spec
instead ofhaving to write them out. pointing should do.

      any others ...

> For the rest I propose the following for immediate action:
>
> 1. separate the dom ts ml generating parts from the language construct
parts
> in the schema
> 2. write a simple app to run the xsl against all dom source files
> 3. collect the schema snippets into one file, or create a master schema
> (perhaps with the constructs and the packaging/suite info) and include the
> other files.
>

Does any of this still need to be done?  I have some cycles that I can spend
...
Later today, I should be able to put out a NIST Test Matrix Table, that
indicates what tests we have for a given interface.  This is a first pass,
much
of which has been automatically generated -- it still needs work, but will
give everyone an idea of the kind of coverage we have to offer.

[dd] Good, thanks. Then we'll have a doog idea of how many and what kind of
tests we need to supply the suite with before release.



