docno="lists-101-2754979"
received="Mon Nov 12 17:33:00 2001"
isoreceived="20011112223300"
sent="Mon, 12 Nov 2001 14:32:10 -0800"
isosent="20011112223210"
name="Jason Brittsan"
email="jasonbri@microsoft.com"
subject="RE: ECMA harness"
id="D5C70EA9DF70694391969A1494875A120509F7B8@red-msg-05.redmond.corp.microsoft.com"
charset="us-ascii"
inreplyto="ECMA harness"
expires="-1"


To:"Mary Brady"<mbrady@nist.gov>,<www-dom-ts@w3.org>

Hi Mary... my apologies for not responding sooner.  Today is my first
day back from vacation.

Of course, I will be happy to provide any assistance I can with the test
harness.

The test harness should be able to run tests based on the capabilities
of the client.  Therefore we need to support this in the harness UI.

I believe that flexibility in reporting is our best strategy.

-----Original Message-----
From: Mary Brady [mailto:mbrady@nist.gov] 
Sent: Tuesday, October 30, 2001 8:39 AM
To: www-dom-ts@w3.org
Subject: ECMA harness

In building the ECMA harness, I have started with the original harness 
that was provided from the NIST web site:

    http://xw2k.sdct.itl.nist.gov/dom/index.html
This harness uses whatever DOM implementation is running on the 
client side, attempts to run available tests, and reports the results.
Each of the tests expect to have access to common xml load routines
and common assertion routines.  I expect that we can use the same 
code that is currently being used by the jsunit harness. The following 
needs to be done:

1) Integrate current load/assertion routines -- Mary
2) Validate load routines
            -- IE (Jason)
            -- Mozilla (Do we have a Netscape volunteer?)
3) Validate DOMException codes 
            -- IE (Jason)
            -- Mozilla ?
4) Determine high level interface -- all
            -- Do we want to run all tests, or be able to 
                discriminately pick appropriate tests?
5) Determine reporting mechanism
            -- simply dump returns from tests?
            -- color-code results?
            -- display expected vs actual?
            -- possibly modify code to accomodate 
                what we want to display.
6) Access to other testing resources ?
            -- test assertions, <subjects>
            -- view source code
            -- view portion of spec being tested.

Anything else?

--Mary 



