docno="lists-101-3431289"
received="Wed Nov 28 10:37:48 2001"
isoreceived="20011128153748"
sent="Wed, 28 Nov 2001 09:36:13 -0600"
isosent="20011128153613"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="More thoughts on multi media-type tests"
id="001201c17822$6a696dc0$7600a8c0@CurtMicron"
charset="iso-8859-1"
expires="-1"


To:<www-dom-ts@w3.org>

I've had some more thoughts about tests that can work on different media-types.  For example, most of the core tests can work on both XML and SVG implementations, most of the HTML tests could work on both XHTML and HTML implementations.

However, since some processors could support distinct DOM implementations for multiple document classes (for example, a browser could have a distinct implementation for XHTML and HTML), you can't just stiff the browser and pick one document class.

Another issue is that HTML implementations are case-insensitive and XHTML implementations are case-sensitive (at least on the Core methods).  The base tests should use lower case tagnames for parameters.  However, there should be some methods that test the case-insensitivity of HTML implementations.

To declare that a test depends on a case-insensitive implementation (i.e. HTML not XHTML), I would suggest adding an:

<implementationAttribute name="caseInsensitive" value="true"/>

to the prologue of a test.  Again most HTML tests should not have this which would allow it to test both XHTML and HTML implementations.

For tests that could apply to multiple media-types, probably would add a <mediaType> to test suites that would allow you to have an XHTML suite and an HTML (or XML and SVG) suite without having distinct XHTML and HTML versions of the tests.  Will think about that a little more.



