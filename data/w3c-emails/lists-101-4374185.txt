docno="lists-101-4374185"
received="Thu Oct 25 15:03:00 2001"
isoreceived="20011025190300"
sent="Thu, 25 Oct 2001 14:51:28 -0400"
isosent="20011025185128"
name="Mary Brady"
email="mbrady@nist.gov"
subject="Re: isSupported12.xml"
id="007b01c15d86$0e48d6e0$293b0681@HAPPY"
charset="iso-8859-1"
inreplyto="70E215722F6AD511820A000103D141D40AA62F&#64;thor.aeathtl.com"
expires="-1"


To:<www-dom-ts@w3.org>


----- Original Message -----
From: "Arnold, Curt" <Curt.Arnold@hyprotech.com>
To: <www-dom-ts@w3.org>
Sent: Thursday, October 25, 2001 2:30 PM
Subject: RE: isSupported12.xml


>
> > [mb] That's only valid if the spec indicates what should
> > happen with an unrecognized or malformed feature or version.
> > In this case, no DOMExceptions are defined.  By the way, I
> > think that all of the isSupported tests could be replaced
> > with a modified version of isSupported12.xml, where we run
> > through all of the known features, and assert that a variable
> > = "done" after successful completion.
>
> The spec says that No Exceptions are thrown.  Well, possibly unless you
are passing a null string for feature (which might be covered by a general
caveat in the Exceptions section).  Being able to
> pass an arbitrary string that does not correspond to a well known feature
and having a value returned is a behavior that is depended upon.  If the
spec writers had intended for the implementation to
> throw an exception if the feature or version did not been some
expectation, it would have been explicitly stated.
>

[mb]  I'm not following you here.

> >
> > In looking into this problem, we've also noticed that the
> > feature "XML" corresponds to all of the extended interfaces.
> > These interfaces do not have to be supported by a HTML-only
> > implementation, and therefore should not be included in core.
> >  Maybe we should identify a different tree, called XML, for
> > the tests that correspond to these interfaces, so that there
> > is a clear mapping to the spec.
>
> Any test that starts by loading an XML document (as I believe that all the
current tests do) should also support the "XML" feature.  When we start
putting "HTML" tests into core (for core features
> within an HTML implementation), then we would need to guard the XML
specific tests with a <hasFeature feature="XML"/> in the prolog and HTML
specific tests with a <hasFeature feature="HTML"/>
>
>
[mb] I disagree.  The spec clearly states that the extended interfaces are
optional --

The interfaces found within this section are not mandatory. A DOM
application may use the hasFeature(feature, version) method of the
DOMImplementation interface with parameter values "XML" and "2.0"
(respectively) to determine whether or not this module is supported by the
implementation.

It's misleading to include them as CORE tests, as CORE functionality must be
implemented by everyone, but these interfaces do not have to be.

--Mary



