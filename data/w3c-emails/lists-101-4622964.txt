docno="lists-101-4622964"
received="Tue Oct 30 13:45:54 2001"
isoreceived="20011030184554"
sent="Tue, 30 Oct 2001 11:32:53 -0700"
isosent="20011030183253"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: Assert functionality"
id="70E215722F6AD511820A000103D141D40AA641@thor.aeathtl.com"
inreplyto="Assert functionality"
expires="-1"


To:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>

All the "generic" assert calls are patterned after the corresponding xUnit assert calls.  Except in the case of special DOM specific asserts, the asserts are delegated to the underlying test framework
(or the adaption layer).  So if we are writing our own ECMAScript test framework, then we have to provide implementations for the assert's that we use.  An exhaustive list of asserts used in the tests
can be gathered by looking at DOMTestCase.java.
 
In the Java framework, a call to assertEquals(string,string,string), for example, is a call to DOMTestCase.assertEquals(string,string,string).  The implementation of the asserts in DOMTestCase
delegate this by calling the corresponding method of the DOMTestFramework interface.  When used with JUnit, JUnitTestAdapter (I think that is its name) implements DOMTestFramework and implements
assertEquals(string,string,string) by calling the JUnit implementation.  When used with Avalon Testlet, AvalonTestAdapter (probably not isn't name but similar) implements the same method by calling
the Testlet implementation.
 
Still haven't heard back from Philippe if either the IBM Public License (JUnit) or Apache license (Avalon Testlet) passes the W3C license requirements.



