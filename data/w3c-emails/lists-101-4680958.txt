docno="lists-101-4680958"
received="Wed Oct 31 16:03:57 2001"
isoreceived="20011031210357"
sent="Wed, 31 Oct 2001 16:03:58 -0500"
isosent="20011031210358"
name="Philippe Le Hegaret"
email="plh@w3.org"
subject="Re: Assert functionality"
id="3BE0673E.9DBE6071@w3.org"
charset="us-ascii"
inreplyto="70E215722F6AD511820A000103D141D40AA647&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>
Cc:www-dom-ts@w3.org

"Arnold, Curt" wrote:
> The Java tests have run (and I'll double check the CVS to make sure that
> I have put the code out there) with both JUnit and Avalon Testlet, so I
> feel pretty confident that the test jar could be run with any arbitrary
> test framework after somebody has modified the adapter classes.
> 
> Using JUnit would be the preferred approach for Java testing, since you
> would assume that the target audience would be parser developers who want
> to integrate DOM tests into their build process or external developers who
> want to determine compliance of a particular parser.

ok, so let's ship the official DOM Conformance Test Suite for Java with JUnit
in that case. We'll also point users to the Avalon Testlet from the pages.

> JSUnit while usable, isn't ideal for a relative novice who wants to determine
> how well a browser adheres to the recommendations.

> Ideally, they could point their browser at a URL and run the tests without
> any setup.

IMHO, this should be on main goal. A user should be able to direct his user agent
at an URI, and sees if it is in conformance with the test suite. Once we get
this ability, it is easy to do the same "offline", i.e. the user downloads a set
of files and starts them from his own computer. I wonder if it is possible to test
the Adobe SVG plugin DOM implementation with our system.

Philippe

[1] http://www.w3.org/QA/WG



