docno="lists-101-4946920"
received="Mon Apr  1 11:58:20 2002"
isoreceived="20020401165820"
sent="Mon, 01 Apr 2002 11:57:24 -0500"
isosent="20020401165724"
name="Robert Clary"
email="bclary@netscape.com"
subject="Re: jsUnit, Cross Browser Support, Asynchronous Data"
id="3CA89174.9090307@netscape.com"
charset="us-ascii"
inreplyto="7D74DEDE-458F-11D6-BAAD-000393556882&#64;ontologicon.com"
expires="-1"


To: Dimitris Dimitriadis<dimitris@ontologicon.com>
CC:edward@jsunit.net,www-dom-ts@w3.org

Dimitris Dimitriadis wrote:
> On a different note, I'd also like to point out that enhancing JsUnit is 
> very important to the DOM TS, but we would need to separate the 
> projects, at least speaking for the DOM TS group, in order to be able to 
> release our updated level 1 TS, which we were aiming at doing fairly soon.
> 
> Any improvements to JsUnit are of course improvements to the DOM TS, but 
> I feel that we should try to concentrate on DOM TS specific issues in 
> order to make possible releases quickly. Interdependencies between the 
> two are obvious, so we may want to spend some time on dealing with this.
> 
> /Dimitris
> 

True. I did want to approach these two aspects as independently as 
possible.

I did not want to ask Edward to make changes in jsUnit solely for the 
DOM TS and wanted to make sure that everyone was aware of the approach I 
was taking with jsUnit and how that might affect it's use in the DOM TS.

I am not clear as to some of the modifications that were made to jsUnit 
for the DOM TS and wanted to discuss/study the rationale behind the 
changes. Help and guidance would be appreciated here.

One of the features of jsUnit which does not appear to be utilized in 
the DOM TS at the moment is the "Test Suite". I believe that this would 
be very helpful in producing different sets of tests which would address 
the differing needs of browsers.

For example, it would be useful to have a suite of tests which would 
require a validating parser. Another set could use minimalistic methods 
of loading XML documents which did not depend on browser specific 
methods. Others could use browser specific methods of loading documents 
such as Document.load or XMLHttpRequest or whatever would be appropriate.

I would very much appreciate guidance on these issues.

Bob



