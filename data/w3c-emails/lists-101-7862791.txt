docno="lists-101-7862791"
received="Fri Feb 22 03:06:22 2002"
isoreceived="20020222080622"
sent="Fri, 22 Feb 2002 10:09:35 +0200"
isosent="20020222080935"
name="Manos Batsis"
email="m.batsis@bsnet.gr"
subject="RE: Issues about the DOM TS brought up in the DOM WG Telcon"
id="E657D8576967CF448D6AF22CB42DD2690FF219@ermhs.Athens.BrokerSystems.gr"
charset="us-ascii"
inreplyto="Issues about the DOM TS brought up in the DOM WG Telcon"
expires="-1"


To:"Curt Arnold"<carnold@houston.rr.com>,"Dimitris Dimitriadis"<dimitris@ontologicon.com>
Cc:<www-dom-ts@w3.org>



> From: Curt Arnold [mailto:carnold@houston.rr.com] 

> > 1. Browser sniffing -- it seems that the sniffing is not elaborate
> > enough, makes Mozille, for example, run code with calls to 
> an ActiveX
> > object.
> 
> I'll admit that it isn't elaborate, but under what scenario 
> does Mozilla run
> an ActiveX object?

IE programmatically implements DOM Documents as ActiveX objects. So, I
guess some of the test that require this, use (in JavaScript)

var myDomDoc = new ActiveXObject("Msxml2.XMLDOM"); 

You may encounter an msxml version_dependent_ProgId like
Msxml2.XMLDOM.4.0. The above is IE specific. Mozilla instead uses the
factory style (as DOM Level 2 likes it):

var myDomDoc = document.implementation.createDocument("", "", null);

Anyway, it should be something like the above situation: need of vendor
dependent code and lack of browser sniffing.

I'd be happy to give a hand fixing this if you pass it on.

Manos

 



