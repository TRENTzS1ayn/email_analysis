docno="lists-101-9713654"
received="Tue Mar  5 13:02:40 2002"
isoreceived="20020305180240"
sent="Tue, 5 Mar 2002 13:01:52 -0500"
isosent="20020305180152"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="RE: DOM L1 HTML changes"
id="OF40B6E381.7F63927F-ON85256B73.0061D00E@pok.ibm.com"
charset="us-ascii"
inreplyto="DOM L1 HTML changes"
expires="-1"

To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>
Cc:"'www-dom-ts@w3.org'"<www-dom-ts@w3.org>



>when we attempted to use pre-release
>versions of at Xalan-J 2.3, there were still problems with the large
number
>of document() calls being made in the transforms

Current versions of Xalan should be able to handle many more documents at
once than earlier versions, so I do think it's worth trying again. (If
you're using global variables  I'd recommend trying the current CVS code,
since I just discovered and fixed an annoying bug in 2.3.1's handling
thereof.)

If we still fail please do post a bug report, with a pointer to the current
testcase source so whoever tackles this can reproduce the failure on their
own machine.


Possibly relevant tip: If you're using for-each to step through a series of
documents, there's a special-purpose optimization in Xalan which lets you
tell it to discard these documents from memory (and recover the storage)
after that iteration of the for-each loop is complete, rather than caching
them for possible re-examination as is the default. To select this mode of
operation, insert the <?xalan:doc-cache-off?> processing instruction as an
immediate child of the <xsl:for-each/> element. This PI should be harmless
for other XSLT processors.

(Yes, we're aware that a more centralized and automated approach to
managing the document cache is needed.)

______________________________________
Joe Kesselman  / IBM Research



