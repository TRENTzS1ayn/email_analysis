docno="lists-102-0335572"
received="Mon May  8 09:15:49 2000"
isoreceived="20000508131549"
sent="Mon, 8 May 2000 09:15:19 -0400"
isosent="20000508131519"
name="Michael Champion"
email="Mike.Champion@softwareag-usa.com"
subject="Re: [dom-xpath] Competing Proposals Proposal"
id="007801bfb8ef$75a84600$a20c1e18@WORKGROUP"
charset="iso-8859-1"
inreplyto="OF93CAD55A.5EC1A069-ON852568D8.0064235C&#64;lotus.com"
expires="-1"


To:<www-dom-xpath@w3.org>


----- Original Message -----
From: "Scott Boag/CAM/Lotus" <Scott_Boag@lotus.com>
To: <www-dom-xpath@w3.org>
Sent: Sunday, May 07, 2000 2:28 PM
Subject: [dom-xpath] Competing Proposals Proposal


>
> I would propose that we create three rough competing proposals for a DOM
> XPath:
>
> 1) Ultra Minimal (e.g. Microsoft/Oracle selectNodes as they exist today).
>
> 2) Minimal but with separate interface+namespace context support.
>
> 3) Complete as makes sense (e.g. full context initialization, variable
> support, maybe matching, maybe compiled queries, etc.)
>

OK, how about an informal poll.  a) Which of these are *necessary* for the
first round of a DOM-compatible XPath API? b) Which are *sufficient* (i.e.,
we can stop when we get there)?

I personally believe that 1 is necessary (backwards compatibility, make the
simple cases simple) and 2 is sufficient.  3 would be nice for the next
iteration.  I could live with any consensus, however.



