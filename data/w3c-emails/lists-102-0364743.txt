docno="lists-102-0364743"
received="Mon May  8 10:36:15 2000"
isoreceived="20000508143615"
sent="Mon, 8 May 2000 08:33:41 -0600"
isosent="20000508143341"
name="Aaron Skonnard"
email="aarons@develop.com"
subject="RE: [dom-xpath] Competing Proposals Proposal"
id="NDBBJHEMDDKHIDLCDFAOAEFHCKAA.aarons@develop.com"
charset="iso-8859-1"
inreplyto="007801bfb8ef$75a84600$a20c1e18&#64;WORKGROUP"
expires="-1"

To:"Michael Champion"<Mike.Champion@SoftwareAG-USA.com>,<www-dom-xpath@w3.org>


>
> >
> > I would propose that we create three rough competing proposals for a DOM
> > XPath:
> >
> > 1) Ultra Minimal (e.g. Microsoft/Oracle selectNodes as they
> exist today).
> >
> > 2) Minimal but with separate interface+namespace context support.
> >
> > 3) Complete as makes sense (e.g. full context initialization, variable
> > support, maybe matching, maybe compiled queries, etc.)
> >
>
> OK, how about an informal poll.  a) Which of these are *necessary* for the
> first round of a DOM-compatible XPath API? b) Which are *sufficient*
(i.e.,
> we can stop when we get there)?
>
> I personally believe that 1 is necessary (backwards
> compatibility, make the simple cases simple) and 2 is sufficient.  3 would
be nice
> for the next iteration.  I could live with any consensus, however.
>

I don't think 1 can be done properly without addressing namespace context
support (see my last post). 1 & 2 are really a single option in my eyes.
Hence, I think 1 + ns context is all that's absolutely necessary for the
first iteration. And yes, 3 would be nice for the next iteration.

-aaron



