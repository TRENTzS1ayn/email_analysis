docno="lists-102-0727293"
received="Fri May 12 17:28:04 2000"
isoreceived="20000512212804"
sent="Fri, 12 May 2000 23:28:00 +0200 (CEST)"
isosent="20000512212800"
name="jeroen@tcf.nl"
email="jeroen@tcf.nl"
subject="RE: [dom-xpath] Competing Proposals Proposal"
id="200005122128.XAA05458@webmail2.xs4all.nl"
inreplyto="[dom-xpath] Competing Proposals Proposal"
expires="-1"


To:www-dom-xpath@w3.org


scott wrote:

>     To be clear, here's how it would look:
     
>     ExpressionFactory efactory = ExpressionFactory.newInstance("Xpath");
>     Expression expr = efactory.create("foo/baz[greeting=$foo]",
>     myPrefixResolver);
>     myXEnvironment.pushVariable("foo", "hello");
>     XObject val1 = expr.evaluate(myNode, myXEnvironment);
>     myXEnvironment.popVariable();
>     myXEnvironment.pushVariable("foo", "goodby");
>     XObject val2 = expr.evaluate(myNode, myXEnvironment);
>     myXEnvironment.popVariable();

I don't like the idea of the stack behind the variable list.
Why not a simple addVariable("what", "this"), removeVariable("what") ?

You might considering a variable interface to make the interface more extendable

Which would mean:

 XPathExpression expr      = PAXFactory.createXPathExpression("foo/baz");
 PaxVariableList variables = expr.getVariableList();
 variables.addVariable( new Variable("a","b") );
 XPathResultSet  results   = expr.evaluate(myNode);
     
 

Jeroen

--------------------------------
Jeroen van Rotterdam
The Connection Factory
http://www.xhive.com
--------------------------------



