docno="lists-102-0778502"
received="Sat May 13 09:45:18 2000"
isoreceived="20000513134518"
sent="Sat, 13 May 2000 15:45:16 +0200 (CEST)"
isosent="20000513134516"
name="jeroen@tcf.nl"
email="jeroen@tcf.nl"
subject="RE: [dom-xpath] Competing Proposals Proposal"
id="200005131345.PAA11132@webmail2.xs4all.nl"
inreplyto="OFAA38B0BD.5C0CDE09-ON852568DD.007CFC65&#64;lotus.com"
expires="-1"


To:www-dom-xpath@w3.org

scott wrote:


> > If you split up PAX in a PAX core and expression specific interfaces you
> can use
> > the same mechanisme where an implementation can be DOM-PAX compliant if
> it has
> > implemented f.i. the pax-core and the pax-xpath interfaces. (or pax-core
> and
> > pax-inquirer patterns.. ).
> 
> Hmm.. OK, I think.  What would be in PAX-core?  Sorry if I'm being dense.
> I'm not familiar with the details of the DOM complience stuff... I guess I
> should do some studying.  To me, there is only core and optional.

If you set it up like dom2 than an implementation is DOM-PAX compliant if it 
implements the PAX-CORE interface and at least one PAX-Expression module 
interface.

Variable, Variable lists can be shared among Expression modules (f.i. xpath) and 
should therefore be in the PAX-core interface;.


 
> >>  ExpressionFactory efactory = ExpressionFactory.newInstance("Xpath");
> ...
> > compare it to:
> >    XPathExpression    aExpression = PAXFactory.createXPathExpression();
> >        or
> >    InquirerExpression aExpression = PAXFactory.createInquirerExpression
> ();
> 
> In yours, you have to have exposure to a specific interface for
> XPathExpression.  In mine, the interface is obtained at runtime, based on a
> property registration mechanism, and the interface is abstract.

That's the difference, the same thing is done in DOM level 2. 
You don't have a createNode("Element"), createNode("Attr") in DOM it is done 
through createElement, createAttr...

This enables you to vary the variablelist of a specific expression language 
create.

 
> > It sounds more DOMmish in my point of view, and I think it's easier to
> make it
> > language independent.
> 
> Not sure what more DOMmish means.


DOMmish... ehhh I meant it "feels" like DOM. (don't ask me for a definition of 
"feels like DOM" ;-))

> Why is it more language independent?  Do
> you mean, Java vs. COM language independent?  Why?

That's what I meant but I agree it isn't a strong point, what I had in mind was 
that in certain programming languages you're not able to create an instance 
based on a string but there are simple workarounds. 

 
> > I still think so but you might call it something like
> "ValidateExpression".
> > The purpose was not to precompile stuff separately but to validate the
> > expression separately without executing it.
> 
> Can you give a use case?

In company A, employee "clever" is creating an expression for employee "dummer" 
which he validates before shipping it to "dummer". "dummer" executes the 
expression.

Compare it to compile time errors and runtime errors in a programming 
environment.


Best regards,

Jeroen



