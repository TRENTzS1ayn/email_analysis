docno="lists-102-10192589"
received="Tue Oct 20 15:55:24 1998"
isoreceived="19981020195524"
sent="Tue, 20 Oct 1998 16:40:27 -0400"
isosent="19981020204027"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="Re: An observation about &quot;live&quot; NodeLists"
id="852566A3.0070AEC9.00@us.ibm.com"
charset="us-ascii"
inreplyto="An observation about &quot;live&quot; NodeLists"
expires="-1"

To:www-dom@w3.org


1.  Our implementation directly implements children as lists, so this is
not an issue when processing child lists.

Child lists are relatively easy. My implementation's tree-based, but Node
implements NodeList for the getChildren case and it works well enough.

2.  getElementsByTagName is not something we call much on the server

I don't think I can make that assumption for my users. But I also think
that there are going to be _relatively_ few cases of intensively
interleaved find-and-edit similar to Steve's remove-all case. I've set up
non-editing access to be reasonably fast, and editing access to be
not-intolerably-slow (I hope); I'm not delighted with it and am considering
alternatives, but it's functional and fairly compact in both codesize and
memory use.

4.  If we ever did forsee a use case that might stress test it, I would
quickly build indexes.

Miles' trick may overcome the problems I had with that approach.
______________________________________
Joe Kesselman  / IBM Research
Unless stated otherwise, all opinions are solely those of the author.



