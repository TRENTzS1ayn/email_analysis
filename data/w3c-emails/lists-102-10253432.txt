docno="lists-102-10253432"
received="Thu Oct 22 14:57:30 1998"
isoreceived="19981022185730"
sent="Thu, 22 Oct 1998 16:12:20 -0400"
isosent="19981022201220"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="Re: Comment about DocumentType"
id="852566A5.006E563C.00@us.ibm.com"
charset="us-ascii"
inreplyto="Comment about DocumentType"
expires="-1"

To:www-dom@w3.org


>> b) The type(s) and sequence(s) of children that each kind of element
will
>> permit. To insulate us from possible variation in how these rules are
>> expressed in the schema langauges, I'd suggest making this a query that
>> asks "If I was to do  nodeX.insertBefore(nodeY,nodeZ), where X and Z are
>> known, what types of nodes would be permitted as Y?"
>
>It's not clear that such a list is easy to compute.  I would rather
>make the legal element types known, and then simply ask: is this
>type a legal predecessor of existing node Z?

I think my version is essentially your two stages combined, with the second
used to filter the first. That filtered list is a good basis for
content-directed editing. Of course, the filtering could be done in user
code rather than the DOM, but I think moving it into the DOM would
generally produce a significantly more efficient implementation.



______________________________________
Joe Kesselman  / IBM Research
Unless stated otherwise, all opinions are solely those of the author.



