docno="lists-102-10481919"
received="Tue Nov  3 11:47:31 1998"
isoreceived="19981103164731"
sent="Tue, 03 Nov 1998 17:47:26 +0100"
isosent="19981103164726"
name="Arnaud Le Hors"
email="lehors@w3.org"
subject="Re: XML APIs"
id="363F339E.B3AA1DDE@w3.org"
charset="us-ascii"
inreplyto="363E2F22.4EE275D9&#64;locke.ccil.org"
expires="-1"


To: DOM List<www-dom@w3.org>

John Cowan wrote:
> 
>         (leftSibling(rightSibling(node)) = node,
>                 unless node is a lastChild;
>         (rightSibling(leftSibling(node)) = node,
>                 unless node is a firstChild;
>         (firstChild(parent(node)) = node,
>                 if node is a firstChild;
>         (lastChild(parent(node)) = node,
>                 if node is a lastChild;
>         (rightSibling(firstChild(node)) = 2nd child of node
>                 provided there is one,
>         the algorithm "go to firstChild if there is one, otherwise
>         to rightSibling if there is one, otherwise to parent's
>         (grandparent's (great-grandparents (etc.))) rightSibling
>         until you reach the starting point" walks the descendants.
> 
> etc. etc. etc.  All of these are false under the DOM.

This not true. All of these _may_be_ false under the DOM. This is, they
will be false _if_ the DOM implementation, such as the browser, changes
the structure underneath as you're browsing through it.

This said, I also think this is not enough and I hope we can add some
locking mechanism in Level 2, so that you can make sure it is _always_
true.
-- 
Arnaud  Le Hors  -  W3C, DOM Activity Lead  - 
http://www.w3.org/People/Arnaud



