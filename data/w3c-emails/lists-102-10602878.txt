docno="lists-102-10602878"
received="Tue Nov  3 15:05:48 1998"
isoreceived="19981103200548"
sent="03 Nov 1998 12:11:07 -0800"
isosent="19981103201107"
name="Stephen R. Savitzky"
email="steve@rsv.ricoh.com"
subject="Re: XML APIs"
id="qcr9vkr0ys.fsf@gelion.crc.ricoh.com"
inreplyto="Tue, 3 Nov 1998 14:03:16 -0500"
expires="-1"

To:keshlam@us.ibm.com
Cc:www-dom@w3.org


keshlam@us.ibm.com writes:

> >either it is being traversed or it is being edited, but not both at once
> 
> Apologies for the shorthand. Obviously accessors would have to be held off
> while edits are in progress and vice versa (at least when they're in the
> same area of the DOM tree), as well as edits versus edits. The trick is
> reducing the granularity of locking, and trying to allow simultaneous
> non-editing access, so performance impacts are minimized.

There is no way to make locking local in the presence of live NodeLists and
of iterators that are ``robust'' over arbitrary changes in the tree.

I would like to see _some_ variant of the DOM that does _not_ require
locking, caching, lazy evaluation, and all the other machinery that is
required by Level 1.

To put it another way, I would like to see a specification that specifies
the INTERFACES, BUT NOT THE BEHAVIOR, because it doesn't seem possible for
the people developing the DOM to avoid specifying behaviors that have
massive non-local effects that render it all but impossible to implement
correctly, and totally impossible to implement efficiently.

-- 
 Stephen R. Savitzky   Chief Software Scientist, Ricoh Silicon Valley, Inc., 
<steve@rsv.ricoh.com>                            California Research Center
 voice: 650.496.5710   fax: 650.854.8740    URL: http://rsv.ricoh.com/~steve/
  home: <steve@starport.com> URL: http://www.starport.com/people/steve/



