docno="lists-102-10731698"
received="Tue Nov  3 20:16:51 1998"
isoreceived="19981104011651"
sent="Tue, 03 Nov 1998 17:09:42 -0800"
isosent="19981104010942"
name="Claude Zervas"
email="claude@utlco.com"
subject="Re: Walking the DOM (was: XML APIs)"
id="199811040116.UAA25593@www10.w3.org"
charset="us-ascii"
inreplyto="Walking the DOM (was: XML APIs)"
expires="-1"


To:www-dom@w3.org

Again, I think that in light of all the severe disagreements about NodeList
'liveness'
and iterator behaviour there should be a branching of the spec for
applications that
are not designed for naive script writers and where performance is of foremost
importance.

This 'server-or-whatever' DOM would have at least the following
characteristics:

1. NodeLists do not need to be 'live'

2. Node.Next/PreviousSibling attributes are deprecated or are simply
convenience methods that may (or may not) be horribly slow.

3. Iterators are introduced and provide behaviour that may
be undefined if the tree is modified underneath them.
I would also be ok with the idea that the iterators simply
throw an exception if the tree is mutated.

4. EntityReferences are really references and no copying is done.

It would also be nice to have a standard  DOM factory for creating objects
outside
of the context of a document. This is very useful for creating partial
documents that
can be used in templates, etc. (I'm thinking HTML DOM here).

Regards,
Claude Zervas
UNIPLANET



