docno="lists-102-11562928"
received="Fri Dec 11 14:28:47 1998"
isoreceived="19981211192847"
sent="Fri, 11 Dec 1998 14:29:54 -0500"
isosent="19981211192954"
name="Paul Butkiewicz"
email="arabbit@earthlink.net"
subject="RE: [XML-SIG] RE: Equality tests on DOM nodes"
id="000701be253c$a1688680$da39bfa8@arabbit"
charset="iso-8859-1"
inreplyto="3.0.1.32.19981211141205.00767594&#64;mail.csihq.com"
expires="-1"

To:"John Day"<jday@csihq.com>,"Andrew M. Kuchling"<akuchlin@cnri.reston.va.us>,<www-dom@w3.org>
Cc:<xml-sig@python.org>


OK, I hadn't really thought about that.  But can you come up with a way of
ordering nodes that deserves to be defined as part of a global and timeless
standard instead of being merely implementation specific?

Paul

-----Original Message-----
From: John Day [mailto:jday@csihq.com]
Sent: Friday, December 11, 1998 2:12 PM
To: Paul Butkiewicz; Andrew M. Kuchling; www-dom@w3.org
Cc: xml-sig@python.org
Subject: Re: [XML-SIG] RE: Equality tests on DOM nodes


At 12:59 PM 12/11/98 -0500, you wrote:
>Not to sound facetious, but to put this question in context, I might well
>ask how we implement < and > for nodes?  We generally don't use those
>particular operators on something real.  I would never say rock a > rock b,
>but I might say rock a weighs more than rock b.

This is a valid question with a meaningful reply. Operators like '<' and '>'
can be implemented by any relation which is transitive, reflexive, and
anti-symmetric. Since reflexive implies A<B -> B<A is more correct to use
notations like '>=' and '<='. The relation doesn't have to mean 'greater'
or 'less'. It can be _any_ relation which satisfies the partial order
defintion. A very useful one is "IS_A_SUBSET_OF".

[It is understood that 'rock' itself is an "extential" object, understood
by some set of "intents" (attributes) such as 'heavy', 'gray', 'hard',
'big' etc. The relation can be written in extential form
but its meaning is usually  applied to the intents. A extent like a rock
cannot be perceived unless it has intents]

Such relations define a "partial order" which have many uses in information
retrieval, which XML certainly applies to.

Let's say I'm searching for documents containing Concept X, where a concept
if defined by the presence of a certain element node ("extent"), possibly
qualified by attributes("intents". So 'equality' could be viewed as
equivalence
in the sense that two documents are equivalent if they contain the same
concept(s).

There may be other concepts in the documents that don't match, but this
does not necessarily destroy the equivalence that we're searching for.

Doesn't this imply that there is room for 'shallow' kinds of matching' to
support this kind of reasoning? Of course, there is still a need for
relations like "exactly identical", but subsethood is also a useful
relation.

-jday



