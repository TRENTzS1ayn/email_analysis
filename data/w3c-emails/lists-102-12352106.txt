docno="lists-102-12352106"
received="Tue Apr  6 03:01:48 1999"
isoreceived="19990406070148"
sent="Tue, 6 Apr 1999 09:01:11 +0100"
isosent="19990406080111"
name="claudio.vernacotola@crpht.lu"
email="claudio.vernacotola@crpht.lu"
subject="Specs questions."
id="4125674B.007BD073.00@mmfileserver.crpht.lu"
charset="us-ascii"
expires="-1"

To:www-dom@w3.org


Hi everybody.
I'm beginning to get some insight in the DOM specs, nevertheless some
points still seem dark to me:
I would really appreciate if some one could illuminate myself (and others
interested maybe) on the following points.
Can an attribute have more than one entity reference as a child?
What should a DOM implementation behave like, if a DOM user appends to an
Attr node an unexpanded entity reference that contains Element nodes as
child?
In other words is it true that if an entity reference is appended to an
Attr node, it can contain only Text nodes as children ?
Can an Attr node have non null  value and, at the same time, no Text
children?
When cloning an Attr node with deep set to false, does the cloned Attr node
retain the attribute value? In this case should it also have a Text child?
So, if the original attribute had its value splitted among several Text
child nodes, the cloned attribute will contain only one text child holding
the attribute value? Or is all this implementation specific
(irrelevant to the DOM specs)?
What should the getOwnerDocument method return for an Entity node (or for a
Notation or for a DocumentType), as no createX method is specified in the
Document interface?
Last question:
Form the DOM specs, the getOwnerDocument method should return null for a
Document node.
Why wouldn't be better to return the Document node itself, as this (seems
to me) would simplify a little bit implementation efforts
(For example when checking the owner Document of a Node when appending it
as child of a Document node).
Thanks a lot.
Regards, Claudio.



