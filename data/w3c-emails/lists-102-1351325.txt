docno="lists-102-1351325"
received="Wed Aug  6 07:26:26 1997"
isoreceived="19970806112626"
sent="Wed, 6 Aug 1997 13:20:02 +0200"
isosent="19970806112002"
name="Martin Schl?ter"
email="martin.schloeter@mb-interactive.de"
subject="AW: AW: coping with overlapping elements in the DOM"
id="11203838200286@mb-interactive.de"
charset="iso-8859-1"
expires="-1"

To:<www-dom@w3.org>,"Paul Prescod"<papresco@technologist.com>


Hi,

Paul Prescod wrote:
> Martin Schl?ter wrote:
>> I would like to suggest an approach usally used in software development
>> environments (most professional class libraries are using such an
approach).
>> In normal "runtime mode" the browser should do it's best to show the end
>> user a "normal" looking HTML documents. The HTML-engine should fix as
much
>> inconsistencies as possible.
>> BUT: The developers/producers of Web-Browser/HTML-engines should be
>> encouraged (comitted?) to implement a kind of "debug mode" in their
>> HTML-Engines. Running in this "debug mode" all failures in the HTML page
>> shall be explicit and obvious marked/shown as an error.

>I would like to argue against this approach.
Accepted.

> There is no way you can force them to implement the debug mode, and they
> will not.
What are this words trying to tell us? "Resistance is futile."?
The technical effort to implement a debug-mode in the internal HTML state
engine isn't large, especially when you are already able to handle faulty
code.
May be only a problem of convincing. I can image some marketing people
at ...  let's say Microsoft (can be substituted with which company ever) who
would be very happy to have such an additional feature in the product.

It's no option to restrict the future HTML-Engine to the described strict
"Debug-Mode". You would break existing web sites.
That's like changing a compiler with the result, that existing code will be
broken.  Really no option!

>We have been asking for a debug mode for HTML for what, 3
>years now?
Sorry, was not involved in this process. So I have incomplete informations.

>> More details on this two mode concept is found in "Writing Solid Code",
>> Steve Maguire, Microsoft Press.

>I always thought that book must be satire.
Why? Because it's written by a guy who is somehow related to Microsoft?
There may be a difference between theoretical KnowHow and real world
product politic. But this doesn't reduce the value of this KnowHow.
The book is really worth reading. This a an "duty lecture" for Software
Developers would cut the number of lousy application to a half.
But that's another topic, I think.

Regards

Martin Schloeter



