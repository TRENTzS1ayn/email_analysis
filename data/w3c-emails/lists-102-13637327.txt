docno="lists-102-13637327"
received="Thu Jan  7 04:50:25 1999"
isoreceived="19990107095025"
sent="Wed, 6 Jan 1999 17:32:04 -0500 (EST)"
isosent="19990106223204"
name="David Beech"
email="DBEECH@us.oracle.com"
subject="RE: Definition of cloneNode method"
id="199901062231.OAA26655@mailsun3"
charset="iso-8859-1"
inreplyto="Definition of cloneNode method"
expires="-1"


To:www-dom@w3.org

Mike Champion wrote: 
 
> You can't count on a DOM implementation doing anything more than  
> what a very literal interpretation of the spec insists that it do,  
> and a literal reading of the spec says that cloneNode() creates an  
> exact duplicate, with all attribute values in the result identical  
> to those in the original, with no special treatment for ID or IDREF  
> attributes. 
 
We obviously want to be able to trust the spec, but does everyone agree  
with previous replies on this thread, which have departed from "a very  
literal reading of the spec" for cloneNode in two ways: 
 
(1) for shallow clone, all the navigational attributes are set to null, 
and not just parentNode as stated.  This would presumably include the 
various Child and Sibling attributes - what about ownerDocument? 
 
(2) for deep clone, the recursive cloning alters all the navigational  
attributes to replicate the original structure in the cloned structure 
(and does not set parentNode to null in the subnodes). 
 
Given this commonsense treatment of deep clone, I have to admit that 
I share Jeff's interest in similar questions about ID and IDREF, e.g.  
where the targets of the IDREFs are local to a subtree being cloned. 
 
 
Thanks, 
 
  David  
  
========================================================================  
David BeechOracle Corporation, 500, Oracle Parkway,    
Consulting MTSM/S 4op8, Redwood Shores, CA 94065   
Server TechnologyPhone: (650)506-6420, fax: (650)506-7582 
======================================================================== 
 
DISCLAIMER:  Any statements made in this message are at best my own  
opinions, and are not necessarily endorsed by Oracle Corporation.



