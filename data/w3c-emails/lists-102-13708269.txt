docno="lists-102-13708269"
received="Tue Jan 12 05:19:56 1999"
isoreceived="19990112101956"
sent="Tue, 12 Jan 1999 12:16:42 +0200"
isosent="19990112101642"
name="Michael Leventhal"
email="mle@citec.fi"
subject="Re: Level 2 - DTDs?"
id="3.0.5.32.19990112121642.00986b90@citec.fi"
charset="us-ascii"
inreplyto="3690FF0F.25589A36&#64;sqwest.bc.ca"
expires="-1"


To:www-dom@w3.org

At 09:49 AM 1/4/99 -0800, Lauren Wood wrote:
>What would help would be some idea of the relative importance of things
>commonly covered under the term "DTD". For example, you say just a list
>of the elements permitted in context would be useful. I can think of a
>number of things along this line, and to have some idea of relative
>priority would help the DOM WG along. 
>
>Here is a non-exclusive list:
>Validation:
>data typing valid (would need to wait for schemas)

Yes, I agree it can and should wait.  There is no meaningful
subset of data typing checking that can done based on DTD
types.

>this element is allowed here 

Related of course to the DTD information question "what elements
are permitted here".  On careful reflection these are certainly
the very top priority and sufficient to do some useful work even
by themselves.  I can give many examples of applications I could
and would implement if desired.

>this document is currently valid

Yes, of course something either quite close or identical can be
accomplished just with "this element is allowed here".  Personally
I don't have an immediate application but I could imagine that a
simple test for validity could help the quality of documents on
the Web in general.

>DTD information (probably to be extended with schemas):
>elements allowed within this element (no repetition or ordering info)

Essential.

>elements allowed within this element (with repetition and ordering info)

Interesting to have it, while implicit in "is this element allowed
here" I perhaps don't see giving this information to the user in very
many applications - even editors.  I wonder if the DTD content models
are: 1) a subset of eventual schema content models 2) complete and
sufficient.  I think definitely not 2, I can imagine having an
exact number of repetitions for regular expressions and perhaps also
inheritance playing a part in the content model.  In short, I think
this area is questionable with respect to being able to define the
a basic set of operations common to DTDs and schemas.  But maybe if
one thought harder ...

>allowed attribute names for this element

Essential.

>allowed attribute values for this attribute on this element

For enumerated values.  I don't see attribute value typing,
see comments on data typing in general.

>Then the question as to read-only and read-write comes up. Is read-only
>sufficient to start? 

Absolutely.  For those that consider R-W essential please let them
somehow justify this.  Yes, of course it could be interesting, very
interesting, but, in fact, there has never been a R-W DTD SGML or
XML application.

>Does the information in the internal subset need to be distinguished
>from that in the external subset?

No, I feel strongly that it should not.  That there should be no
difference for DTD-driven applications is my "religious" point
of view.  Religion aside though, I think that whether or not the
application reads the external subset it still never needs to
know explictly that DTD information came from one or the other
or both.

Including a follow-up comment to Lauren's message:

At 10:51 AM 1/6/99 -0500, Borden, Jonathan wrote:
> How about (just) a full tree based representation of the data contained in

No, don't agree because this would almost certainly be DTD-specific.
My proposal was a small set of baseline functions that we would
be pretty sure would be common to both schemas and DTDs.

> rw is preferable.

Why is rw preferable?  Not just in the abstract - whaddya going to do
with it now?  Remember that if you insist on rw you are more likely
to get NOTHING!  Lauren asked for priorities.  What is your sense
of this as a priority?

> DOM <-> text needs to roundtrip with 100% fidelity... this IMHO should

My understanding is that this is demonstratably already not the case
with DOM Level 1.  Too late.

> Issues concerning *behavior* of the interfaces should wait until the
> interfaces themselves have been defined. Certainly behavior is important for

I was going to say something but I think we would just get embroiled
in a discussion about terminology.  So I'll just reiterate that the
problem is that there is no DTD/schema information/behavior/interface
proposed for DOM Level 2.  The chairperson has suggested, I gather,
that something might be considered if something "do-able" were put
together and has asked for priorities.  I gather that you consider
simply representing the DTD in a node structure to be the top priority.
OK, maybe it isn't a bad suggestion.  But what if DTDs are entirely
replaced by schemas?  Can DTD information be represented in a node
structure which will be compatible with schemas?  I doubt it.

Michael Leventhal
CITEC
mle@citec.fi


Michael Leventhal                     mle@citec.fi
Architecture/Development              +358 6 324 0738
CiTEC Information Technology          +358 50 537 6091 (GSM)



