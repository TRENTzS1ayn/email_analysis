docno="lists-102-1375345"
received="Wed Aug  6 10:57:24 1997"
isoreceived="19970806145724"
sent="Wed, 06 Aug 1997 10:57:32 -0400"
isosent="19970806145732"
name="Paul Prescod"
email="papresco@technologist.com"
subject="Re: AW: AW: coping with overlapping elements in the DOM"
id="33E890DC.A54EEA02@technologist.com"
charset="iso-8859-1"
inreplyto="11203838200286&#64;mb-interactive.de"
expires="-1"


To:www-dom@w3.org

Martin Schl?ter wrote:
> > There is no way you can force them to implement the debug mode, and they
> > will not.
> What are this words trying to tell us? "Resistance is futile."?
> The technical effort to implement a debug-mode in the internal HTML state
> engine isn't large, especially when you are already able to handle faulty
> code.
> May be only a problem of convincing. I can image some marketing people
> at ...  let's say Microsoft (can be substituted with which company ever) who
> would be very happy to have such an additional feature in the product.

Both browser vendors make money by encouraging people to buy *separate*
development products. "Trouble making correct HTML? BUY THIS!!!"
 
> It's no option to restrict the future HTML-Engine to the described strict
> "Debug-Mode". You would break existing web sites.
> That's like changing a compiler with the result, that existing code will be
> broken.  Really no option!

We are only talking about sites that will use the new document object
model. By definition, these pages are undergoing revision. The other
important thing to note is that these documents *never* right, so this
is not the same as changing the definition of what is correct.
 
> >I always thought that book must be satire.
> Why? Because it's written by a guy who is somehow related to Microsoft?
> There may be a difference between theoretical KnowHow and real world
> product politic. But this doesn't reduce the value of this KnowHow.
> The book is really worth reading. This a an "duty lecture" for Software
> Developers would cut the number of lousy application to a half.
> But that's another topic, I think.

I was speaking tounge in cheek. I've heard many other good things about
this book. Still, I want to see the book that describes how to actually
implement the ideas in an organization to produce an organization that
consistently produces solid code.

 Paul Prescod



