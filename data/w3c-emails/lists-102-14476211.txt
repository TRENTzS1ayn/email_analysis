docno="lists-102-14476211"
received="Fri Mar  5 11:56:10 1999"
isoreceived="19990305165610"
sent="Fri, 05 Mar 1999 11:55:48 -0500"
isosent="19990305165548"
name="John Cowan"
email="cowan@locke.ccil.org"
subject="Re: Level 2 iterators"
id="36E00C94.4E432BD5@locke.ccil.org"
charset="us-ascii"
inreplyto="c=US%a=_%p=Cromwell_Media%l=ODIN-990305155407Z-17079&#64;odin.cromwellmedia.co.uk"
expires="-1"


To: DOM List<www-dom@w3.org>

Miles Sabin wrote:

> [...] work directly with Node's parent,
> child and sibling operations [...] really rather
> a shame ... a standard iterator interface with broad
> applicability would have been a real gain.

Actually, there is no guarantee that walking the tree yourself
with parent, child, and sibling attributes doesn't lead you into
a cul-de-sac either, when arbitrary tree mutations are going on.
I chose to use these attributes in DOMParser (a SAX parser that
walks a DOM tree and fires events based on it), in order not to
use an unbounded stack when walking a DOM of arbitrary depth,
but there is no guarantee that DOMParser can even terminate if
the tree is being cleverly mutated in just the wrong ways.

IMHO what DOM needs is an interoperable *locking* mechanism.

-- 
John Cowanhttp://www.ccil.org/~cowancowan@ccil.org
You tollerday donsk?  N.  You tolkatiff scowegian?  Nn.
You spigotty anglease?  Nnn.  You phonio saxo?  Nnnn.
Clear all so!  'Tis a Jute.... (Finnegans Wake 16.5)



