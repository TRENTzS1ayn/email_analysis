docno="lists-102-1896329"
received="Wed Dec  3 14:24:12 1997"
isoreceived="19971203192412"
sent="Wed, 03 Dec 1997 14:25:20 -0500"
isosent="19971203192520"
name="Joe Lapp"
email="jlapp@acm.org"
subject="Re: Validity of DOM documents"
id="3.0.3.32.19971203142520.00908bb0@pop.access.digex.net"
charset="us-ascii"
inreplyto="199712031730.RAA08048&#64;nathaniel.eps.inso.com"
expires="-1"


To:www-dom@w3.org

Gavin Nicol <gtn@eps.inso.com> wrote:
>Yes. It should be possible (once all the smoke has settled down) to
>write a fairly simple peice of software that will validate a DOM
>representation of a document using the instance and DTD
>representations. Note that the latter is only available in XML, so
>only XML document can be validated in this manner (not good, I
>think...). 
>[...]
>The problem for the DOM is that some of the reference applications
>(editors and scripts) will *often* create documents that are invalid
>according to the content model defined in the DTD. Which is why we
>have the comment in the documents. [...]

Okay, this is helping to clarify the role that DOM is to play, but I
think I'm going to need to ask a few more questions:

(1) Will the DOM XML spec layer on top of the core (hiding the core),
    or will it live beside the core, leaving both core interfaces and
    DOM XML interfaces exposed?  Or is some other role intended?

(2) Will the DOM XML interfaces be expected to function with an
    underlying DOM document that is invalid with respect to its DTD?
    It seems that such a model would need to expose ways for the
    client to correct the document, which might require the client
    to force the document through a series of invalid states before
    ultimately arriving at a valid one.

(3) Will the DOM XML interfaces be able to enforce XML-specific
    document rules so that a client generating (or modifying) an
    XML document through the interfaces cannot create an invalid
    document?  (This might require layering DOM XML on top of the
    core XML so that the client cannot tweak the document directly.)

(4) Will other "levels" of DOM interact directly with the core DOM
    and hence bypass constraints that might be specific to XML or
    HTML or some other type of document?

I'm trying to get a picture of how the various pieces of DOM will fit
together.  I may be looking a little ahead of the WG's current focus,
but I'm having trouble making sense of the core DOM without putting
it into the perspective of an overriding architecture.
--
Joe Lapp (Java Apps Developer/Consultant)
Unite for Java! - http://www.javalobby.org
jlapp@acm.org



