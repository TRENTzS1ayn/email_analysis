docno="lists-102-2945056"
received="Fri May  1 22:17:14 1998"
isoreceived="19980502021714"
sent="Fri, 1 May 1998 19:17:07 -0700"
isosent="19980502021707"
name="David Brownell"
email="David.Brownell@Eng.Sun.COM"
subject="Re: Hello and NodeIterator Revisited"
id="199805020217.TAA25494@argon.eng.sun.com"
inreplyto="Hello and NodeIterator Revisited"
expires="-1"


To:donpark@quake.net,www-dom@w3.org

Peter wrote:

> >I don't think you are going to get much sympathy with that kind of
> >argument.
> >You might not be aware that several of the companies represented on the DOM
> >WG have had implementations similar to the DOM for years. We have plenty of
> >scars and we have not put anything into the DOM that we believe it would be
> >difficult to adapt our implementations to support.

Hmm, that doesn't make me feel sympathetic ... it seems like it's trying to
negate the years of implementation experience in the folk who have reported
that NodeIterator has significant problems, when we all know that how "similar
to" correct code a bug is.

Plus, I suspect that few (if any) of the implementations that are "similar
to" DOM used either IDL, ECMA Script, or Java.  It's quite normal that
problems came up in the translation -- and there's feedback that in fact
such problems did arrive!


Don wrote:

> >Having said that, I don't think that any of us have actually implemented
> >this in Java, although there certainly is lots of Java experience in the
> >WG. So if there are particular requirements for that language that we are
> >not aware of, then we would very much like to hear about them.
> 
> I think there is a clear problem in trying to target DOM at both general
> programming languages as well as scripting languages.  ECMAScript offers a
> lot of handy member access constructs which are not available in languages
> like Java.  My position is that DOM for scripting languages should be
> separate from DOM for general programming languages.

I'm not sure I'd go that far, but then I'm not an ECMAScript hacker.  What
sorts of things make you say that?


> I have been programming C++ since the days of prototype C++ compilers and I
> do not see any problem implementing the DOM in C++.  Java, on the other
> hand, is more demanding IF efficiency is required.

Usually, demanding that you not do bit twiddling.  Just _try_ to get those
block ciphers as fast as native code, when you don't access to the barrel
shifter on the CPU!!  (Current JIT systems are quite good -- use one.)

The NodeIterator problems I'm aware of don't relate either to efficiency or
to Java ... they seem to be more conceptual problems.

- Dave



