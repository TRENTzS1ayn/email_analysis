docno="lists-102-2978167"
received="Sat May  2 01:32:11 1998"
isoreceived="19980502053211"
sent="Fri, 1 May 1998 22:24:03 -0700"
isosent="19980502052403"
name="Don Park"
email="donpark@quake.net"
subject="Re: Hello and NodeIterator Revisited"
id="001301bd758a$afcd35c0$2ee044c6@arcot-main"
charset="iso-8859-1"
inreplyto="Hello and NodeIterator Revisited"
expires="-1"


To:<www-dom@w3.org>

David,

>> I think there is a clear problem in trying to target DOM at both general
>> programming languages as well as scripting languages.  ECMAScript offers
a
>> lot of handy member access constructs which are not available in
languages
>> like Java.  My position is that DOM for scripting languages should be
>> separate from DOM for general programming languages.
>
>I'm not sure I'd go that far, but then I'm not an ECMAScript hacker.  What
>sorts of things make you say that?

Two things:

1. ECMAScript might look similar to Java but is actually very different
especially in the member access and error handling.  ECMAScript is also used
differently than Java.

2. ECMAScript also suffers from the constraints of compatibility with
existing DOM implementations in the browsers.

DOM API for scripting languages could be made a lot simpler to use and
remain compatible with current browsers.  For scripting languages also has
less constraint as far as 'live' DOM goes.  Only requirement I see is that
the API be able to handle asynchronous download of XML.  This is a lot
easier to handle than the general 'anything goes' requirement.

DOM API for general languages can be made more sophisticated without having
to be constrained by browser DOM implementations.  For example, rather than
forcing iterators to deal with volatile data structure, synchronization
locks can be used with Nodes.

>The NodeIterator problems I'm aware of don't relate either to efficiency or
>to Java ... they seem to be more conceptual problems.

True but, with C++, I can make the problem go away (at least kick it into
submission)through brute force.  I can't handle the problems in Java unless
I do some deep Java Voodoo magic (i.e. bytecode modification during
runtime).

Regards,

Don Park
http://www.docuverse.com/personal/index.html



