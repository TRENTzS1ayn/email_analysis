docno="lists-102-3025809"
received="Sun May  3 14:37:50 1998"
isoreceived="19980503183750"
sent="Sun, 3 May 1998 11:45:52 -0700"
isosent="19980503184552"
name="Andrew n marshall"
email="amarshal@usc.edu"
subject="RE: Some more suggestions and a DOM OM"
id="000a01bd76c3$b26dc300$48e37d80@philica"
charset="iso-8859-1"
inreplyto="004c01bd7595$c60a90c0$dc8ae5cf&#64;jmackay-4.soho.enteract.com"
expires="-1"

To:"Jeff"<jmackay@vtopia.com>,<www-dom@w3.org>


> -----Original Message-----
> From: Jeff McKay
> Subject: Some more suggestions and a DOM OM
 . . .
> > - Transform Node into a very simple interface that has a parent Node (and
> possibly a "validate" method).

validate() seem like an implementation specific issue that should not be in
the interface specification IMO.

> - Create a new CompositeNode interface derived from Node with methods to
> manage children. This includes indexed access, getFirstChild, getLastChild,
> getNextSibling, getPrevSibling, removeChild, insertChild, appendChild,
> replaceChild.
>
> - Comment and PI will be derived from Node (it may also make sense to create
> an EmptyElement interface derived directly from Node).
>
> - Element, Entity, DocumentFragment, Text, and Attribute are derived from
> CompositeNode.

This is very similar to David Brownell's proposal for DocumentFragment.
Why is Text derived from your CompositeNode?  And hasn't Attribute been
changed so it is not a subclass of Node?

> - Create a DOMException class. All DOM exceptions should be derived from
> this class.  This is just a convenience mechanism, but many users won't
> really care about WHICH exception is being thrown.

Great idea that should have been thought of a long time ago!!



Andrew n marshall
??student - artist - programmer
???? http://www.media-electronica.com/anm-bin/anm
??????"Everyone a mentor, Everyone a pupil"



