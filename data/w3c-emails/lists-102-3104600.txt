docno="lists-102-3104600"
received="Mon May  4 04:34:14 1998"
isoreceived="19980504083414"
sent="Mon, 04 May 1998 10:30:26 +0200"
isosent="19980504083026"
name="Arnaud Le Hors"
email="lehors@w3.org"
subject="Re: Hello and NodeIterator Revisited"
id="354D7CA2.87832342@w3.org"
charset="us-ascii"
inreplyto="001301bd758a$afcd35c0$2ee044c6&#64;arcot-main"
expires="-1"


To:www-dom@w3.org

Don Park wrote:

> As you pointed out, I also felt that none of the
> WG members have actually implemented DOM in Java. 

I for one am implementing the DOM in Java. This is within Amaya on top
of a Java binding surfacing the internal C structure. I must say that
efficiency is not my prior concern as I am more looking for a proof of
concept type of implementation. But anyway, I'd maintain that concerning
efficiency nothing can definitely be stated based on the DOM spec.
Simply because efficiency highly depends on your internal structure and
what can be expensive for one implementation can be very cheap for
another. If we'd really wanted to design the most efficient model we'd
have to design the internal structures as well as the API. But this is
not what we are doing. We are only defining an API. In the future people
may choose to redesign their internal structures to get better
efficiency through the DOM but, for now, most are implementing the DOM
on top of existing structures. So differences in efficiency depending on
the operations and the software you're using should be expected. This is
the price to pay for having a common API.

> ECMAScript offers a
> lot of handy member access constructs which are not available in languages
> like Java.

Like what? If ECMAScript provides anything that other programming
language doesn't and that makes the DOM API unusable with these other
languages please name it.

> The fact that the Java
> interface files that came with the latest spec could not even be compiled
> filled me with even more despair.

This is merely to be considered as a bug.

> I can't handle the problems in Java unless
> I do some deep Java Voodoo magic (i.e. bytecode modification during
> runtime).

Really? like what problem?
-- 
Arnaud Le Hors - W3C, User Interface Domain - www.w3.org/People/Arnaud



