docno="lists-102-3198129"
received="Mon May  4 14:47:39 1998"
isoreceived="19980504184739"
sent="Mon, 4 May 1998 14:46:38 -0400"
isosent="19980504184638"
name="David Megginson"
email="ak117@freenet.carleton.ca"
subject="Re: xxxML on top of, embedded in XML"
id="199805041846.OAA01407@unready.microstar.com"
charset="us-ascii"
inreplyto="354E0716.68B4B49D&#64;netscape.com"
expires="-1"


To:www-dom@w3.org

Vidur Apparao writes:

 > A couple of responses:

 > 1) The purpose of a standardized DOM is to have a common and
 > consistent way to access and modify XML documents. This allows a
 > developer to create scripts or programs that operate on arbitrary
 > documents, irrespective of their specific tag set. In the same way
 > that XML might not be the most compact way to represent data (one
 > can, for example, think of a slightly more efficient representation
 > for the record you have below), the DOM might not be the most
 > optimal way to operate on it.
 >
 > 2) The DOM specifies a set of *interfaces* to modify a
 > document. The implementor of the document engine is expected to
 > provide implementations of these interfaces on demand. This does
 > not mean, however, that the internal representation of a document
 > must immediately contain concrete implementations of the DOM
 > interfaces. In some cases, the DOM interfaces may be implemented by
 > objects that already exist in the internal representation. In other
 > cases, objects may need to be constructed on-the-fly specifically
 > for the DOM.

You are absolutely correct -- there is no reason not to provide a DOM
interface on top of some other object structure, and in fact, I expect
that such an approach will be quite common (though a read-write
interface could be surprisingly tricky to implement, depending on how
closely the XML view and the internal storage are aligned).

I think that the last sentence of your first point is very important,
however: it is one thing to expose a DOM view of an object structure
so that general scripting tools can work with it; it is quite another
to do primary processing (say, rendering a large PGML graphic) through
a DOM interface.


All the best,


David

-- 
David Megginson                 ak117@freenet.carleton.ca
Microstar Software Ltd.         dmeggins@microstar.com
      http://home.sprynet.com/sprynet/dmeggins/



