docno="lists-102-3409547"
received="Wed May  6 13:06:02 1998"
isoreceived="19980506170602"
sent="Wed, 6 May 1998 09:58:57 -0700"
isosent="19980506165857"
name="Don Park"
email="donpark@quake.net"
subject="Re: Hello and NodeIterator Revisited"
id="00a301bd7910$43cd0830$2ee044c6@arcot-main"
charset="iso-8859-1"
inreplyto="Hello and NodeIterator Revisited"
expires="-1"


To:"www-dom"<www-dom@w3.org>

>>I would imagine it would stay within it's subtree.  The NodeIterator
>>doesn't seem to know that the tree or subtree exists.  It just talks
>>about the current Node's contents.  The TreeIterator is aware of
>>parents and can navigate between different levels in the tree, so I
>>would assume that it would stick with the subdoc it is in, and if that
>>is removed, it would go with those nodes and now it's ability to
>>navigate would be bounded to those nodes in the subtree.  Makes it a
>>little easier to deal with security issues, just return a TreeIterator
>>to a subdoc that has been ripped out of the whole document.  let them
>>make their changes and then push it back into the major tree.
>
>I agree.

I really like the idea but it would fit much better if we were talking about
a visitor rather than an iterator.  By its nature a Visitor can not assume
too much about the context.  An iterator on the other hand is more like a
probe being steered by an external agent which could assume anything about
the context of the probe.

In another word, DOM for Dummies would be rather difficult to write when
concurrency is assumed.

Don Park
http://www.docuverse.com/personal/index.html



