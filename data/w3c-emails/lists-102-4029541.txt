docno="lists-102-4029541"
received="Mon Jun  1 14:23:49 1998"
isoreceived="19980601182349"
sent="Mon, 1 Jun 1998 11:24:04 -0700"
isosent="19980601182404"
name="David Brownell"
email="David.Brownell@Eng.Sun.COM"
subject="Re: [www-dom] deprecate tree traversal? (Was: &lt;none&gt;)"
id="199806011824.LAA25527@argon.eng.sun.com"
inreplyto="[www-dom] deprecate tree traversal? (Was: &lt;none&gt;)"
expires="-1"


To:claude@utlco.com,www-dom@w3.org

> From: Claude Zervas <claude@utlco.com>
> 
> IMHO the following methods can be summarily deprecated:
> 
> Node.getFirstChild()
> Node.getPreviousSibling()
> Node.getNextSibling()

You seem to be saying this can be done because the iterators
could be used to perform similar tree traversals, but that would
call for more memory allocation and moreover ...


> Also, I saw some previous posts requesting that reference
> counting be somehow tacked on to the DOM. I vote no on that.

That was more a reflection that the current iterator (Tree and Node)
APIs have some serious problems which are most naturally fixed by
something like a NodeIterator.release() method.  I don't think anyone
really liked that fix.


This isn't to say that iterators are bad at all; but I sure can't
recommend the flavor in the April DOM draft.  Personally, I'd prefer
to treat iterators as convenience functions on top of the standard
tree traversal API; that's the classic approach, it has virtues.

- Dave



