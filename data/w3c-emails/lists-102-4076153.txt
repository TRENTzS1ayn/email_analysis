docno="lists-102-4076153"
received="Tue Jun  2 09:30:06 1998"
isoreceived="19980602133006"
sent="Tue, 2 Jun 1998 09:29:05 -0400"
isosent="19980602132905"
name="Mike Champion"
email="mcc@arbortext.com"
subject="Re: iterators, etc. + Attribute question"
id="98Jun2.092619edt.26884@thicket.arbortext.com"
charset="us-ascii"
inreplyto="3.0.3.32.19980601222048.009228d0&#64;mail.blarg.net"
expires="-1"


To: Claude Zervas<claude@utlco.com>,www-dom@w3.org

At 01:20 AM 6/2/98 -0400, Claude Zervas wrote:
>At 09:34 AM 6/1/98 -0400, Mike Champion wrote:
>>At 03:31 AM 6/1/98 -0400, Claude Zervas wrote:

>But I would still like to know if the Attribute interface should
>inherit from Node or not because Element.getAttributes() is very
>handy but since it returns a NodeIterator (in the current spec)
>I'm kind of confused. I'm assuming there is a typo either in the
>declaration of the Attribute interface or in the declaration
>of Element.getAttributes() but I can't know which. Kent Tamura's (IBM)
>implementation of Attribute inherits from Node but this may just
>be to facilitate the implementation. Am I missing something here?
>The prose is pretty unhelpful on this, it mentions "attrubute node"
>but does not explicitly state or show inheritance of Node.

Give us a week; there's a face to face DOM WG meeting coming up, and this
will be resolved.  My best guess is that individual attributes will
continue to be Nodes, the set of attributes will be a NodeList with
associative array semantics (or AttributeList).  


To answer your question in another message, the whole point of
AttributeList is to provide associative array semantics so that attributes
can be looked up by name.  NamedNodeList was once used as the name for
this, but we found that attributes were the only objects that needed these
semantics.

Mike Champion



