docno="lists-102-4668490"
received="Tue Mar 10 09:31:18 1998"
isoreceived="19980310143118"
sent="Tue, 10 Mar 1998 09:30:03 -0500"
isosent="19980310143003"
name="Mike Champion"
email="mcc@arbortext.com"
subject="RE: Question about getNextSibling/getPre"
id="98Mar10.093023est.18820@thicket.arbortext.com"
charset="us-ascii"
inreplyto="98Mar10.044219est.18817&#64;thicket.arbortext.com"
expires="-1"


To:www-dom@w3.org

At 04:35 AM 3/10/98 -0500, Alfie Kirkpatrick wrote:
>Mike,
>
>Thanks a lot for the reply. My point is really that DOM nodes
>may contain nodes from different implementors, correct? 

This question keeps coming up, but I don't really understand the scenario:
You're writing an application and exposing the DOM as its API; how will
you get nodes from different implementors in YOUR application?  Forgive
me if I'm missing something obvious here ...


>Perhaps there should be a statement in the DOM spec about
>whether or not nodes from different implementations can be
>mixed.

I'd be glad to write such a statement, but again it would help to
understand a plausible scenario that we're forbidding.  I suspect that you
could use mix nodes from COM or CORBA compliant implementations, but that
would be leveraging the capabilities that those programming architectures
bring to the table.  Random thought: Are we confusing people by calling DOM
an "object model", so that people assume it has the kind of
cross-application, cross-language, (and possibly cross-machine) referencing
capabilities of COM/DCOM and CORBA?  Maybe this DOES need clarification ...
Obviously, we plan to let Microsoft and OMG do their thing, and we'll do
ours; they should complement each other, but have very minimal overlap.
Even more random thought: I *hope* no one expects us to be coming up with a
meta-object model that will subsume both and make them inter-operable  ...
well, we were GOING to do that, but we thought we'd take on the task of
bringing peace to the Middle East first ;~)

>
>This brings up a related point. In COM, interfaces are identified
>by GUIDs. Are there plans to release a Microsoft COM IDL file
>which people can use for implementations? Otherwise, it will
>be much harder for C++ applications to work with nodes from
>different implementations. I'd be willing to help with this effort
>since I have a fairly complete IDL file already.

Microsoft says they will release a COM IDL translation of the CORBA IDL DOM
spec as a "W3C Note" shortly after the DOM is finalized. Others who want to
translate the DOM IDL to the language of their choice (Perl? Scheme? Tcl?)
can do likewise.


Mike Champion



