docno="lists-102-4685775"
received="Tue Mar 10 10:58:55 1998"
isoreceived="19980310155855"
sent="Tue, 10 Mar 1998 15:58:44 GMT"
isosent="19980310155844"
name="Gavin Nicol"
email="gtn@eps.inso.com"
subject="RE: Question about getNextSibling/getPre"
id="199803101558.PAA02253@nathaniel.eps.inso.com"
inreplyto="98Mar10.093023est.18820&#64;thicket.arbortext.com"
expires="-1"


To:mcc@arbortext.com
CC:www-dom@w3.org

>>Thanks a lot for the reply. My point is really that DOM nodes
>>may contain nodes from different implementors, correct? 
>
>This question keeps coming up, but I don't really understand the scenario:
>You're writing an application and exposing the DOM as its API; how will
>you get nodes from different implementors in YOUR application?  Forgive
>me if I'm missing something obvious here ...

In JAVA, this would be trivial (in fact, even in C++). For example,
I have DOM implementation that read DynaText books, and use SAXDOM
to pull in an XML document I want to transclude into the ebook. Here
we'd have 2 different implementations with two very different sets
of performance characteristics.

This is also the *exact* scenario I was talking about with identity:

   1) I have a C++ implementation of DOM that exposes DynaBase
      documents.
   2) I use SAXDOM (via a C++ to Java gateway) to read an
      XML document in.

If I then transclude either of these into the other (using native
methods in JAVA, and a C++ --> JAVA gateway), checking for identity
with language specific mechanisms is unreliable.



