docno="lists-102-5427515"
received="Thu Jul 23 21:15:29 1998"
isoreceived="19980724011529"
sent="Thu, 23 Jul 1998 18:18:52 -0700"
isosent="19980724011852"
name="Ted Bashor"
email="bashor@crossroute.com"
subject="Re: More comments"
id="35B7E0FC.9EFD1F5B@crossroute.com"
charset="us-ascii"
inreplyto="98Jul23.170256edt.26925&#64;thicket.arbortext.com"
expires="-1"


To: Mike Champion<mcc@arbortext.com>
CC:www-dom@w3.org

Mike Champion wrote:
> >
> >o What were the objections to having a single NodeList interface
> >providing both an an index accessor and a name accessor (and not have
> >NamedNodeMap)?
> 
> There was much feeling in and outside of the WG that this would confuse
> more people than it enlightened.

I realize now that if, for instance, Element.childNodes() returned a
NodeList with a by name accessor, it would be ambiguous which child node
should be returned if the Element had two children with the same name.


> 
> >o I am trying to understand the exceptions in Data.
>
> The scenario here is to imagine that a DOM document has some Data object
> that is larger than the size of a wstring on some platform (it presumably
> would not be stored internally using the data type that wstring maps
> onto!).  We added a means of telling the user that extracting the entire
> Data object would cause an overflow, and give them a means of extracting
> the Data in manageable chunks.


It all makes much more sense with this explaination, I'm a bit slow.

You might need to define another exception type for the setter methods,
something like INTERNAL_DATA_OVERFLOW_ERR, (I would call it
DATA_SIZE_ERR but that is already taken for the offset errors). 
However, if the internal data storage space is assumed to be infinite
then this error code would not be needed.

ted



