docno="lists-102-5734408"
received="Tue Jul 28 02:05:51 1998"
isoreceived="19980728060551"
sent="Mon, 27 Jul 1998 23:13:52 -0700"
isosent="19980728061352"
name="Claude Zervas"
email="claude@utlco.com"
subject="Re: Implementing NodeList"
id="3.0.3.32.19980727231352.009346e0@mail.blarg.net"
charset="us-ascii"
inreplyto="qcn29uajb9.fsf&#64;gelion.crc.ricoh.com"
expires="-1"


To:steve@crc.ricoh.com(Stephen R. Savitzky), Mike Champion<mcc@arbortext.com>
Cc:keshlam@us.ibm.com,www-dom@w3.org

>...  In a
>multithreaded environment (which we have in our application) with very large
>documents (such as a database or document store) this kind of implementation
>trick is unacceptable.  Using ``live'' NodeLists is simply impossible in most
>cases -- ...

I completely agree with Steve on this. I'm using the DOM on a server
side application with extremely large HTML document trees. Despite the
current DOM spec's notice about the DOM not being usable in a multithreaded
environment it really has to be on the server-side when many clients
are accessing the same document at once. Otherwise resource usage becomes
intolerable. To make NodeList and HTMLCollection always live is
really asking for non-standard implementations. Maybe there needs to
be a 'Scripting DOM' for the browser implementors and a spec for
everything else that lends itself to somewhat efficient implementations.

I'm fairly certain that the most intensive use of the DOM will
not be for client-side special effects but on the server for
more interesting document services via servlets et al.

- Claude Zervas, UTL Co.

P.S. Am I correct in assuming that the usage of 'long' in the
HTML DOM Java interfaces should really be 'int' ?



