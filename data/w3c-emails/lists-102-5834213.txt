docno="lists-102-5834213"
received="Tue Jul 28 11:48:00 1998"
isoreceived="19980728154800"
sent="Tue, 28 Jul 1998 11:45:59 -0700"
isosent="19980728184559"
name="Gavin Thomas Nicol"
email="gtn@eps.inso.com"
subject="RE: Implementing NodeList"
id="000a01bdba57$f6577610$577670c6@endymion.eps.inso.com"
charset="iso-8859-1"
inreplyto="3.0.3.32.19980727231352.009346e0&#64;mail.blarg.net"
expires="-1"

To:"Claude Zervas"<claude@utlco.com>,"Stephen R. Savitzky"<steve@crc.ricoh.com>,"Mike Champion"<mcc@arbortext.com>
Cc:<keshlam@us.ibm.com>,<www-dom@w3.org>


> Despite the current DOM spec's notice about the DOM not being usable in a
> multithreaded environment it really has to be on the server-side when many
clients
> are accessing the same document at once. Otherwise resource usage becomes
> intolerable. To make NodeList and HTMLCollection always live is
> really asking for non-standard implementations. Maybe there needs to
> be a 'Scripting DOM' for the browser implementors and a spec for
> everything else that lends itself to somewhat efficient implementations.
>
> I'm fairly certain that the most intensive use of the DOM will
> not be for client-side special effects but on the server for
> more interesting document services via servlets et al.

The current spec indicates that we have not defined the *standard* way
a user can use the DOM in a threaded environment: that stuff will be
added in level 2.

Also, as I noted, one way to handle "liveness" is to simply say that
documents are locked... effectively making them read-only, in which
case liveness is moot.



