docno="lists-102-5918711"
received="Tue Jul 28 15:19:39 1998"
isoreceived="19980728191939"
sent="Tue, 28 Jul 1998 12:19:50 -0700"
isosent="19980728191950"
name="Lauren Wood"
email="lauren@sqwest.bc.ca"
subject="DOM Level 1 doesn't do everything"
id="199807281920.MAA23250@sqwest.bc.ca"
charset="us-ascii"
inreplyto="qc3eblajo1.fsf&#64;gelion.crc.ricoh.com"
expires="-1"


To:www-dom@w3.org

At 28/07/98 11:56 AM , Stephen R. Savitzky wrote:

>My point is that there is more than one kind of application.  Applications
>that _consume_ XML files do not need to "see" entity references.  However,
>applications that _produce_ or _edit_ XML files _must_ be able to manipulate
>entity references directly.  The failure to make this distinction in the
>specification is a serious problem, because it means that an XML editor, for
>example, cannot possibly conform to the specification!

An XML editor can add to the specification. You're not limited to the Level
1 DOM interfaces.

>What's even worse, an XML editor cannot make use of an XML parser or DOM
>class library that conforms to the specification (unless I have seriously
>misread something).  I think that this fact should be sufficient to prove
>that the specification is inadequate.

I don't think that this is true - my company is working on an XML editor,
for example, and there are other companies working on the DOM specification
that are also working on XML or SGML editors. It is more likely that we
haven't documented it all properly. (But of course, it's not impossible
that we completely missed something vital).

We know that an XML editor would need to add functionality to the DOM
interfaces to be able to be an editor. And it is planned to add this
functionality to the DOM as soon as we can. Since we can only do a few
things at a time, we figured it was best to finalize what we can do now,
and then start work on the rest of the requirements with at least something
to show for our efforts of the last 18 months.

We are also planning on adding back iterators in a future level, and
potentially other things to make life easier for server-style applications
that have large documents. 

But for now, we need to get the current spec out, limited though it may be
in functionality. We can always add functionality later. It's harder to
undo the mistakes that would likely happen if we tried to do too much too
fast. 

No DOM implementation is *limited* to the DOM interfaces - you are free to
add what you think you need. When we start work on the rest of the DOM, it
would be good if you could then share with us any information as to what
worked, and what didn't, in your implementations. And what you think we
should add, or not add.


Lauren



