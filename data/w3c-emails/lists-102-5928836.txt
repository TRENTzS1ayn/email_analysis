docno="lists-102-5928836"
received="Tue Jul 28 16:11:28 1998"
isoreceived="19980728201128"
sent="Tue, 28 Jul 1998 16:11:30 -0400"
isosent="19980728201130"
name="Mike Champion"
email="mcc@arbortext.com"
subject="Re: DOM Level 1 doesn't do everything"
id="98Jul28.160757edt.26886@thicket.arbortext.com"
charset="us-ascii"
inreplyto="199807281920.MAA23250&#64;sqwest.bc.ca"
expires="-1"


To:www-dom@w3.org

At 03:19 PM 7/28/98 -0400, Lauren Wood wrote:
>At 28/07/98 11:56 AM , Stephen R. Savitzky wrote:
>
>>My point is that there is more than one kind of application.  Applications
>>that _consume_ XML files do not need to "see" entity references.  However,
>>applications that _produce_ or _edit_ XML files _must_ be able to manipulate
>>entity references directly.  The failure to make this distinction in the
>>specification is a serious problem, because it means that an XML editor, for
>>example, cannot possibly conform to the specification!
>
>An XML editor can add to the specification. You're not limited to the Level
>1 DOM interfaces.
>
>>What's even worse, an XML editor cannot make use of an XML parser or DOM
>>class library that conforms to the specification (unless I have seriously
>>misread something).  I think that this fact should be sufficient to prove
>>that the specification is inadequate.
>
>I don't think that this is true - my company is working on an XML editor,
>for example, and there are other companies working on the DOM specification
>that are also working on XML or SGML editors. It is more likely that we
>haven't documented it all properly. (But of course, it's not impossible
>that we completely missed something vital).
>
>We know that an XML editor would need to add functionality to the DOM
>interfaces to be able to be an editor.

Right.  The DOM requirements are geared more toward editor vendors who wish
to expose the DOM APIs via their extension/scripting languages than toward
those who wish to write an editor on top of the DOM.  We hope to make the
latter more feasible in Level 2, but for the moment editor vendors would
have to "embrace and extend" the DOM with proprietary APIs in order to
implement a working product.  You couldn't write a browser on top of the
Level 1 DOM either, but that's not its purpose.  It *should* be possible to
write scripts, JavaBeans, etc. that do useful things and work equally well
across a number of browsers and editors, and that *is* the DOM's purpose.

Mike Champion



