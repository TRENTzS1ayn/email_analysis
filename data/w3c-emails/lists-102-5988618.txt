docno="lists-102-5988618"
received="Tue Jul 28 17:30:55 1998"
isoreceived="19980728213055"
sent="Tue, 28 Jul 1998 17:31:10 -0400"
isosent="19980728213110"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="Re: DOM Level 1 doesn't do everything"
id="8525664F.00741495.00@us.ibm.com"
charset="us-ascii"
inreplyto="DOM Level 1 doesn't do everything"
expires="-1"

To:www-dom@w3.org


As you say: Next/prevous on Node is functionally _different_ than
next-previous on a ByTagName NodeList. The latter does not currently exist
in the spec; only integer access (with all the associated pain) is
supported.

I have confidence that Level 2 will address this. I just wish Level 1
wasn't asking us to implement a substantial chunk of code which we expect
and hope to throw away.

Of course there's always the other approach to resolving the conflict: Is
it Really Necessary that NodeList be "live"? How often is this going to
matter, and is it in fact the behavior you want (as opposed to requesting a
new NodeList when you know that changes have been made that you need to
respond to)?


On a slightly different note, here's a suggestion from a friend: Have you
considered picking up some of the Model/View/Controller ideas and applying
them to the DOM? Specifically, it might make sense to add the ability to
register some flavor(s) of TreeChangeListener, which would be called when
the relevant portion of the document was altered. That will become
especially necessary when you start dealing with multiple access, and
particularly if the integer indices are preserved -- you'll have to know
what happened in order to adjust those appropriately.



