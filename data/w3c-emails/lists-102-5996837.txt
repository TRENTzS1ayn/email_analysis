docno="lists-102-5996837"
received="Tue Jul 28 17:41:34 1998"
isoreceived="19980728214134"
sent="28 Jul 1998 14:45:36 -0700"
isosent="19980728214536"
name="Stephen R. Savitzky"
email="steve@crc.ricoh.com"
subject="Re: parentNode"
id="qcu3418xa6.fsf@gelion.crc.ricoh.com"
inreplyto="Tue, 28 Jul 1998 17:05:27 -0400"
expires="-1"

To: Mike Champion<mcc@arbortext.com>
Cc:www-dom@w3.org


Mike Champion <mcc@arbortext.com> writes:

> [I'll send a separate message proposing wording explaining why Atrribute nodes
> should not have parents; this *is* under discussion by the WG]

 [wording deleted]

> [In short, by insisting that DOM implementers always have a
> DocumentFragment associated with a Node or subtree that has not yet been
> put in a tree or has been cut out of a tree, we make it easier for users to
> track and manipulate those nodes.]

I would be willing to accept this ONLY if there were a way to determine
whether a node was really an orphan without actually creating the ghost
DocumentFragment.  Otherwise it's actually more difficult to keep track of
nodes that are presumably already in a NodeList or variable.

I suppose it's not unreasonable for the node-creation operations on Document
to create a DocumentFragment as a parent, but it would be useful in that
case to have some way of reaching the new nodes from the Document.  There
are other ways of creating nodes, however: most languages have a "new"
operator.  Nodes created in that way will _not_ have an identifiable
parent. 

-- 
 Stephen R. Savitzky   Chief Software Scientist, Ricoh Silicon Valley, Inc., 
<steve@rsv.ricoh.com>                            California Research Center
 voice: 650.496.5710   fax: 650.854.8740    URL: http://rsv.ricoh.com/~steve/
  home: <steve@starport.com> URL: http://www.starport.com/people/steve/



