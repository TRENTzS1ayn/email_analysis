docno="lists-102-6141754"
received="Wed Jul 29 09:16:49 1998"
isoreceived="19980729131649"
sent="Wed, 29 Jul 1998 09:16:53 -0400"
isosent="19980729131653"
name="Mike Champion"
email="mcc@arbortext.com"
subject="Re: EntityReference"
id="98Jul29.091314edt.26881@thicket.arbortext.com"
charset="us-ascii"
inreplyto="85256650.00453BED.00&#64;us.ibm.com"
expires="-1"


To:www-dom@w3.org

At 08:47 AM 7/29/98 -0400, keshlam@us.ibm.com wrote:
>I think I'll second the confusion. Given that the application processing
>the EntityRef  knows what kind of node it's processing, why does the value
>need to be attached as an actual Child rather than being available via a
>method invocation on the EntityRef itself (which would leave the
>implementation relatively unconstrained)?
>
>Again, apologies if this has all been hashed over in the past; feel free to
>say "Oh, not that again" and ignore me...

OH NO! NOT THIS AGAIN ... yup, we've been around this track a few times.
There are numerous reasonable ways to do this, and we decided that this is
the cleanest.  Remember that we try to balance the needs of the users and
the implementers, the old-time SGML weenies and the HTML users born again
as XML users, etc.  
>
>(BTW, in your copious spare time <grin!> it'd be Real Nice to have an
>annotated DOM spec -- like the annotated XML spec now available -- where
>you could put standard explanations of why particular design decision were
>made and other commentary which doesn't really belong in the spec per se.
>The answers posted here would probably be a good start on those footnotes.)

I'm planning to write a bestselling self help book "DOM for the Confused"
to do just that.  In the great tradition of our industry, I've helped make
it impossible for ordinary mortals to understand the DOM unless they buy my
book ;~)

Seriously, that's a reasonable idea.

Mike

 



