docno="lists-102-6150351"
received="Wed Jul 29 12:13:21 1998"
isoreceived="19980729161321"
sent="29 Jul 1998 09:17:42 -0700"
isosent="19980729161742"
name="Stephen R. Savitzky"
email="steve@crc.ricoh.com"
subject="Re: EntityReference"
id="qc7m0w8wd5.fsf@gelion.crc.ricoh.com"
inreplyto="Wed, 29 Jul 1998 12:46:41 +0900"
expires="-1"

To: KAZUMI Saito<ksaito@flab.fujitsu.co.jp>
Cc:www-dom@w3.org


KAZUMI Saito <ksaito@flab.fujitsu.co.jp> writes:

> Why "The replacement value, if it is available, will appear
> in the child list of the EntityReference" ?
> 
> I have believed the DOM Object tree is another representation of
> XML (text) file. Then EntityReference needs only entity's identifier
> not replacement value, I think.

This neatly illustrates a point I have been trying to make for some time,
namely that the behavior required by the specification is appropriate for
some DOM applications, BUT NOT ALL.

In a scripting application, which the DOM is clearly aimed at, replacing
entity references with their values, keeping nodelists up-to-date with a
file being read in, and constructing nonce parents for nodes under
construction, are all appropriate. 

What I want to see is SOME consideration in the specification for different
kinds of applications, such as server-side processing, document
transformation, syntactic verification, indexing, and editing, for which
these behaviors are NOT appropriate.  I want the specification to make it
clear that these behaviors are OPTIONAL, and required only in applications
where they make sense.

Please note:  I'm not asking for any extensions, and I'm not asking for any
changes whatever in the attributes and methods defined in the interfaces.
All I'm asking for is changes in the _descriptions of the semantics_ of those
interfaces, and mainly by changing "is" or "must" to "may".  Is that too
much to ask?

What I really want is the right to claim that my code "implements the DOM"
instead of having to say: "implements the interfaces defined by the DOM
specification, but with the major changes in the semantics necessary for an
efficient implementation of my application".

I think that the DOM continues in its present course, it is in danger of
becoming the ``Scripting Object Model'' and being essentially useless for
any other purpose.

-- 
 Stephen R. Savitzky   Chief Software Scientist, Ricoh Silicon Valley, Inc., 
<steve@rsv.ricoh.com>                            California Research Center
 voice: 650.496.5710   fax: 650.854.8740    URL: http://rsv.ricoh.com/~steve/
  home: <steve@starport.com> URL: http://www.starport.com/people/steve/



