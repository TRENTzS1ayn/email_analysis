docno="lists-102-6407814"
received="Thu Aug  6 16:20:11 1998"
isoreceived="19980806202011"
sent="Thu, 06 Aug 1998 16:20:47 -0400"
isosent="19980806202047"
name="Jonathan Robie"
email="jonathan@texcel.no"
subject="Re: DOM and Xptrs"
id="3.0.3.32.19980806162047.009dbab0@pop.mindspring.com"
charset="us-ascii"
inreplyto="35C9E894.9DD4FF46&#64;crossroute.com"
expires="-1"


To: Ted Bashor<bashor@crossroute.com>
Cc:www-dom@w3.org

At 10:32 AM 8/6/98 -0700, Ted Bashor wrote:

>I was wondering if someone could comment on the relationship of the
>current DOM API and the XPointer spec.

It must be possible to implement XPointers on top of the DOM. That does not
mean that the DOM has to provide an XPointer API. And certainly not in
Level 1!

>I was sort of expecting that the DOM, in particular its ECMA script
>bindings, would include accessor methods like 
>an_element.child(2, "foo"), etc.

Personally, I might prefer to have a function that executes an entire
XPointer - I see no point to having the ECMA masquerade as XPointers when
XPointer notation can do that itself. If I were to implement something like
this, I might prefer something like this:

  this_node=that_node.traverse("child(3,DIV1).child(4,DIV2).child(29,P)");

The Java or ECMA script code need not mimic the structure of the XPointer
syntax, it can just use it as a parameter. But we're not working on that.

>Was this not done because A) not enough time B) it doesn't belong in
>level 1 C) the XPointer api sucks D) the XPointer api is expected to
>change E) other?

We've been working on other things. XPointer is a lower priority than the
things we've managed to finish so far.

Jonathan
 
jonathan@texcel.no
Texcel Research
http://www.texcel.no



