docno="lists-102-6799401"
received="Mon Aug 17 10:08:56 1998"
isoreceived="19980817140856"
sent="Mon, 17 Aug 1998 15:33:12 +0200"
isosent="19980817133312"
name="ANOQ of the Sun"
email="anoq@vip.cybercity.dk"
subject="Re: Anybody for a server-DOM spec?"
id="35D83118.51C54AF4@vip.cybercity.dk"
charset="us-ascii"
inreplyto="3.0.3.32.19980816233534.00976250&#64;mail.blarg.net"
expires="-1"


To: DOM List<www-dom@w3.org>

Claude Zervas wrote:
> It is impossible to implement Node.append/insertChild() etc. without
> casting the Node argument to a known implementation. Otherwise,
> how would you set the parent and next/previousSibling attributes
> of the new child?  Casting is slow (in Java) and it assumes a homogeneous
> implementation. What if I'm using remote objects and all I can
> count on is the Node interface? Do I need to clone the new node

In the C++ implementation I'm creating, I have added these methods
in IDL:

//Implementaion specific methods - DO NOT USE THESE!
void                setParentNode__(in Node newParent);
void                setPreviousSibling__(in Node newPrevSib);
void                setNextSibling__(in Node newNextSib);

The DOM client does not need to know about these methods. They're
called only by the DOM implmentation. And as for use with CORBA,
it's OK to pass pointers to objects, since a remote object
will have pointers to proxy-objects.

Also, since all nodes are created with the create* methods in
the Document interface, all nodes in a document should belong
to the same DOM implementation.

Comments?


Cheers
-- 
,
ANOQ of the Sun / Johnny Andersen

E-Mail:   anoq@vip.cybercity.dk or anoq@berlin-consortium.org
Homepage: http://users.cybercity.dk/~ccc25861/



