docno="lists-102-6988287"
received="Tue Aug 18 17:41:03 1998"
isoreceived="19980818214103"
sent="Tue, 18 Aug 1998 17:38:01 -0400"
isosent="19980818213801"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="Re: Anybody for a server-DOM spec -&gt; transferring nodes and  listener model."
id="85256664.007453B9.00@us.ibm.com"
charset="us-ascii"
inreplyto="Anybody for a server-DOM spec -&gt; transferring nodes and  listener model."
expires="-1"

To:www-dom@w3.org


Re deprecating the next/previous sibling attributes: I would actually
expect my user set to use them more than the item() accessor. I grant that
this may just reflect my own programming practices, but I'd still be Real
Unhappy to see them go away. "Aren't very useful" depends on how the
application wants to handle the document. (And "aren't very efficient",
which is my problem with item() and getSize(), probably depends on how the
implementation is storing the document.)

In fact, these accessors seem to be the one place where mixing
implementations gets into the worst trouble, since it's a place where
non-DOM-specified optimizations (such as "has this changed since I last
looked at it" flags for the "live" behavior) may not know how to talk with
each other. Maybe the answer there is for Level 2 to actually define those
support channels, if this can be done in a sufficiently general way that it
isn't bound to specific implementations, so mixing node types doesn't break
that connection. But that may not belong in the base DOM; it's more code
and I'm sure some folks are going to want to put DOM-based code into
palmtops and smaller, where 10KB still makes a real difference.

Distributed documents is an interesting question. I'm not sure if that's
best addressed at the DOM, above DOM, or below DOM. If all the distributed
fragments independently honor the DOM API, this looks to be basically the
same question as mixed implementations -- a mechanism is needed to allow
crossing DOM boundaries -- plus the issue of dealing with a node which may
be in more than one document and hence doesn't have a "parent" except in
the context of a particular set of operations. (Which may be a point in
favor of making the accessors be a separate interface, which could maintain
this higher-level connectivity information.)




______________________________________
Joe Kesselman  / IBM Research
Unless stated otherwise, all opinions are solely those of the author.



