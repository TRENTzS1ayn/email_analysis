docno="lists-102-7027438"
received="Tue Aug 18 18:40:18 1998"
isoreceived="19980818224018"
sent="Tue, 18 Aug 1998 15:31:26 -0700"
isosent="19980818223126"
name="Don Park"
email="donpark@quake.net"
subject="Re: Anybody for a server-DOM spec -&gt; transferring nodes and    listener model."
id="003501bdcaf7$f2b25bf0$2ee044c6@arcot-main"
charset="iso-8859-1"
inreplyto="Anybody for a server-DOM spec -&gt; transferring nodes and    listener model."
expires="-1"


To:<www-dom@w3.org>

>I guess either next/previousSibling or NodelList.item() can be efficient
>but usually not both. The best way to solve this would be to introduce
>iterators. I am advocating the deprecation of next/previousSibling
>only if they are replaced with iterators (and only for the "server-DOM").


Latest implementation of FreeDOM (yet-to-be released and renamed to
Docuverse DOM SDK) implements both item() and next/previousSibling() fairly
efficiently with performance difference about 10% in most case.  For
example, enumeration of 24000 elements took 200 milliseconds using item()
and 220 milliseconds using getNextSibling().

As far as DOM allowing sharing of nodes between implementations is
concerned, I think it is a bad solution to a worthy problem.  Have you
considered using well-formed external entities and/or XPointers?

Don Park



