docno="lists-102-7381914"
received="Mon Aug 24 14:48:59 1998"
isoreceived="19980824184859"
sent="24 Aug 1998 11:54:25 -0700"
isosent="19980824185425"
name="Stephen R. Savitzky"
email="steve@crc.ricoh.com"
subject="Re: DOM enhancements..."
id="qcd89qmcri.fsf@gelion.crc.ricoh.com"
inreplyto="Sun, 16 Aug 1998 15:20:19 -0700"
expires="-1"

To: Michael Amster<mamster@webeasy.com>
Cc: ANOQ of the Sun<anoq@vip.cybercity.dk>,www-dom@w3.org


Michael Amster <mamster@webeasy.com> writes:

> 1. Streaming DOM (so entire tree is not in memory)
> 2. Node addressing or indexing

YES!  Streaming requires three things:

1. reliance on iterators for traversal, rather than indexing or link
   traversal.  (I was _really_ sorry to see NodeIterator and TreeIterator
   go; I've built an entire system around them.)

2. Allowing parent, child, and sibling links to be invalid at various
   times.  (In other words, an iterator can produce the next sibling even if
   a node's nextSibling attribute is null.)  (It might be better if there
   were a way to distinguish _really_ empty links from ``lazy'' links).

3. Allowing NodeList's to be static rather than ``live'' so that you can
   use them in a program as collections of nodes which might be appended to
   during a traversal.

-- 
 Stephen R. Savitzky   Chief Software Scientist, Ricoh Silicon Valley, Inc., 
<steve@rsv.ricoh.com>                            California Research Center
 voice: 650.496.5710   fax: 650.854.8740    URL: http://rsv.ricoh.com/~steve/
  home: <steve@starport.com> URL: http://www.starport.com/people/steve/



