docno="lists-102-7899854"
received="Wed Sep  9 12:03:00 1998"
isoreceived="19980909160300"
sent="Wed, 09 Sep 1998 10:03:20 -0600"
isosent="19980909160320"
name="Ray Whitmer"
email="ray@imall.com"
subject="Re: Should Document.cloneNode() work in Level 1?"
id="35F6A6C8.328438EF@imall.com"
charset="us-ascii"
inreplyto="000d01bddbd0$2de254d0$2ee044c6&#64;arcot-main"
expires="-1"


To:www-dom@w3.org

Don Park wrote:

> Alfie,
>
> >The problem with transferNode below is that it assumes that
> >the destination node can change the ownerDocument for the
> >node, which currently isn't possible between implementations.
>
> Yeah, I realized my forgetfulness right after posting it.  This basically
> forces transferNode implementation to always move by copying the content.
>
> However, your suggestion also forces cloning.  The question is, are there
> any way to do this without cloning?  Just change the definition of
> insertChild/appendChild?

The point is that an implementation which is transferring a node of an
implementation it recognizes can do whatever it wants beyond the public APIs
to change ownerDocument.  It is only immutable through current public APIs.

But I will clone in any case, because that is more efficient in my
implementation.

Ray Whitmer
ray@imall.com



