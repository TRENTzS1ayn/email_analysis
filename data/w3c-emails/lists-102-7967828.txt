docno="lists-102-7967828"
received="Wed Sep  9 14:38:49 1998"
isoreceived="19980909183849"
sent="09 Sep 1998 11:45:02 -0700"
isosent="19980909184502"
name="Stephen R. Savitzky"
email="steve@crc.ricoh.com"
subject="Re: Should Document.cloneNode() work in Level 1?"
id="qcogsp86s1.fsf@gelion.crc.ricoh.com"
inreplyto="Wed, 9 Sep 1998 15:18:17 -0400"
expires="-1"

To:keshlam@us.ibm.com
Cc:www-dom@w3.org


keshlam@us.ibm.com writes:

> John Cowan asks:
> >Am I missing something?
> 
> No, you've accurately described what has to be done in order to deep-clone
> a Document.
>      "For each Node, invoke the proper createXXX factory method on the new
>       Document and copy all the (IDL) attributes: then insert it into place
>       in the new tree"

There's more.  The problem is that some of the Node's might be instances of
some (possibly local) _subclass_ and may contain information which cannot be
correctly copied by any of the public createXXX methods.

> That's a significant amount of additional code which in Level 1 would exist
> _only_ to support Document.cloneNode(). It could be argued that, given
> Level 1's decision not to handle the more general uses of this logic,
> implementing it for this one specific case is less reasonable than
> declining to support cloning of Documents would be.

I think it would be a tragic mistake if it was not possible to copy a
document, or to copy a node from one document to another, using Level 1.
That's the kind of omission that would seriously impact the credibility of
the specification (not to mention its usefullness).

-- 
 Stephen R. Savitzky   Chief Software Scientist, Ricoh Silicon Valley, Inc., 
<steve@rsv.ricoh.com>                            California Research Center
 voice: 650.496.5710   fax: 650.854.8740    URL: http://rsv.ricoh.com/~steve/
  home: <steve@starport.com> URL: http://www.starport.com/people/steve/



