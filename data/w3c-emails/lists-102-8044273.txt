docno="lists-102-8044273"
received="Thu Sep 10 04:43:25 1998"
isoreceived="19980910084325"
sent="Thu, 10 Sep 1998 09:37:38 +0100"
isosent="19980910083738"
name="Kirkpatrick, Alfie"
email="akirkpatrick@ims-global.com"
subject="RE: Should Document.cloneNode() work in Level 1?"
id="199809100843.EAA01357@www10.w3.org"
inreplyto="Should Document.cloneNode() work in Level 1?"
expires="-1"


To:www-dom@w3.org, Ray Whitmer<ray@imall.com>

Ray, I haven't read the (many) other thoughts on this in my mailbox
this morning. I just want to point out that I wasn't suggesting that
cloneNode should modify the parentNode and ownerDocument to
avoid cloning, but that appendChild could do this as an alternative
to calling cloneNode, in certain circumstances.

Alfie.

> ----------
> From: Ray Whitmer
> Sent: 09 September 1998 17:11
> To: www-dom@w3.org
> Subject: Re: Should Document.cloneNode() work in Level 1?
> 
> > A performance boost might be to say that if the newChild is the same
> > implementation, has a different ownerDocument but doesn't have a parent
> > (perhaps after a removeChild), the custom interface could be used to
> modify
> > the ownerDocument and the parentNode, and thus avoid cloning.
> 
> I strongly disagree.  This is far worse than simply adding transferNode.
> cloneNode should always clone the node.  The type of complex behavior you
> describe should never be a part of cloneNode, i.e. sometimes it clones and
> sometimes it returns the original.  If you want transferNode, then call it
> that.
> 




application/ms-tnef attachment: stored




