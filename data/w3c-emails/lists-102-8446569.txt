docno="lists-102-8446569"
received="Fri Sep 25 16:54:36 1998"
isoreceived="19980925205436"
sent="Fri, 25 Sep 1998 13:54:33 -0700"
isosent="19980925205433"
name="Claude Zervas"
email="czervas@Adobe.COM"
subject="Re: NodeList interface"
id="3.0.5.32.19980925135433.013b4c70@seattle"
charset="us-ascii"
inreplyto="8525668A.0079231F.00&#64;us.ibm.com"
expires="-1"


To:www-dom@w3.org


At 06:20 PM 9/25/98 -0400, keshlam@us.ibm.com wrote:
>>> The standard kluge-around for almost tolerable efficiency seems to be to
>>> have NodeList cache everything it finds,
>>Is this really necessary, as opposed to just caching the current
>>(i.e. last fetched) position?
>
>Depends on how you expect people to use this monstrosity, and how
>inefficient you're willing to be if they insist on accessing nodes out of
>order.
>
>>> refresh that cache if the tree structure has changed
>>This is the really expensive item, I think.  Does anyone have a
>>quick'n'dirty way of doing this?
>
>... check its recorded count
>against the actual count ... etc

When the DOM becomes thread-safe in Level 2 (which I assume is a goal) most of
these NodeList cursor cacheing techniques will probably fail. (At least in the
case of two threads traversing the same NodeList).

It would be a good idea for the WG to release a interim iterator spec before
Level 2 so that implementors/users who need them will all be on the same page
and not have to wait another year for the complete level 2 draft.

- Claude Zervas



