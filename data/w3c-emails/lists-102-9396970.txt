docno="lists-102-9396970"
received="Thu Oct  8 19:38:22 1998"
isoreceived="19981008233822"
sent="Thu, 8 Oct 1998 16:37:54 -0700"
isosent="19981008233754"
name="Don Park"
email="donpark@quake.net"
subject="Re: Document cloneNode"
id="00bc01bdf314$af984790$2ee044c6@arcot-main"
charset="iso-8859-1"
inreplyto="Document cloneNode"
expires="-1"


To:<www-dom@w3.org>

Tom,

>The method cloneNode utilizes three protected methods: shallowClone, to do
>the immediate cloning stuff; an overload of cloneNode that accepts an owner
>parameter; and a cloneChildren method that clones the children as well as
>sets their owners.


cloneNode(Document owner, boolean deep) scheme should work as well.  I just
chose the double tree walk scheme because a) double tree walk is costs is
insignificant when there is a large number of object instantiation going on,
b) cloneNode is likely to be overriden by user's own subclasses so I did not
want my users to have to deal with extra details of owner document switching
while cloning, and c) I prefer not to introduce unnecessary methods when
dealing with design 'glitch' like this.

Best,

Don Park
Docuverse



