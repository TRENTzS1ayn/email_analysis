docno="lists-102-9442116"
received="Fri Oct  9 11:28:03 1998"
isoreceived="19981009152803"
sent="Fri, 09 Oct 1998 16:27:56 +0100"
isosent="19981009152756"
name="\"
email="assini@kamus.it"
subject="Re: Remote DOM access ??"
id="361E2B7C.D50A786A@kamus.it"
charset="us-ascii"
inreplyto="3.0.5.32.19981009055531.0098b570&#64;pophost.fsc.fujitsu.com"
expires="-1"


To:"'DOM list'"<www-dom@w3.org>


Ralph Ferris wrote:

> >Are you aware of any existing implementation of an XML cache ?
> >
> >I can't believe that I'm the only one to have stumbled on this problem.
>
> The problem has been on some people's minds for quite a while... One reason
> it hasn't received more attention is the previous history of SGML file
> *distribution*. In the pre-Web days, SGML files were generally distributed
> on CD-ROM along with the browser. When the Web came along, absent a
> widely-available Web browser that could read SGML, publishers took to
> "down-translating" SGML files to HTML. The main attempt to introduce an
> SGML Web browser, SoftQuad (now Interleaf's) Panorama, met with only
> limited success. So the problems associated with serving SGML over the Web
> haven't received the attention that's required.
>

Actually I was not thinking of  it as a way of distributing XML data to a browser,
the reason being that in that case you normally have to download the whole page
anyway so a cache would make no sense.

Naturally it would make a lot of sense if the user were navigating on a huge
quantity of  (possibly dynamically generated) information.
If so you would definitly want to download only the parts he/she actually requires
to see.

> Second, sending less than an entire document raises the problem of
> supplying context for the "fragment". Context is essential for proper
> rendering, for example of numbered list items, sections or chapters.
> Context could be specified using XLink/XPointer syntax; a standard message
> format for returning this information to the browser along with the
> fragment itself would need to be specified though.
>

This is interesting. Could you please provide some details about how it could work
?

I would say that the problem of dealing with incomplete XML trees should be deal
within the cache itself.

The whole point in having a cache is actually in hiding the fact that we dont'
have a complete tree so that the client can still 'see' a plain, complete, DOM
tree.

Thanks for your feedback.

--
Pasqualino "Titto" Assini
The Data Archive - University of Essex, UK



