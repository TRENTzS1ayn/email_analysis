docno="lists-103-0242401"
received="Thu Oct  7 10:24:35 1999"
isoreceived="19991007142435"
sent="Thu, 07 Oct 1999 16:24:23 +0200"
isosent="19991007142423"
name="Arnaud Le Hors"
email="lehors@w3.org"
subject="Extending the DOM"
id="37FCAD17.D86BF642@w3.org"
charset="us-ascii"
expires="-1"


To:www-dom@w3.org

Back to the original question whether the DOM spec should provide
implementors with a way to extend the DOM by adding new node types.

I'm actually sympathic with the desire to avoid possible collision with
future revisions of the DOM spec. However, I don't see a real need for
the spec to provide a standard way to do so. As I stated earlier, the
IDL uses an unsigned short, so if you're programing in Java, you can
safely use any negative value for your own node types and exception
codes. In other languages, I suggest you simply use the largest numbers
the actual type allows. _Practically_speaking_ I can't imagine W3C ever
defining enough node types and exception codes to reach those numbers.
Or there will be other reasons to be worried...
-- 
Arnaud



