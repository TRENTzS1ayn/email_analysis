docno="lists-103-0258395"
received="Thu Oct  7 11:44:58 1999"
isoreceived="19991007154458"
sent="Thu, 7 Oct 1999 11:43:59 -0400"
isosent="19991007154359"
name="Michael Champion"
email="michael_champion@ameritech.net"
subject="Re: The DOM is not a model, it is a library!"
id="009d01bf10da$cd4e02e0$2f1b12d1@mccdell"
charset="iso-8859-1"
inreplyto="qcyadfp5tj.fsf&#64;congo.crc.ricoh.com"
expires="-1"


To:"DOM Mailing List"<www-dom@w3.org>


----- Original Message -----
From: Stephen R. Savitzky <steve@rsv.ricoh.com>
To: DOM Mailing List <www-dom@w3.org>
Sent: Thursday, October 07, 1999 11:07 AM
Subject: Re: The DOM is not a model, it is a library!


> My Java implementation, also with (a different set of) extensions is about
> twice that and is also _almost_ complete.  But making it fully compliant
> would mean rewriting large parts of my application, so it isn't going to
> happen.

One major purpose of the "Last Call" period is to let implementors give the
working group feedback on the difficulty, efficiency, etc. of various items
in the spec.  It would be very helpful to get specific feedback from
developers as to WHICH 10% of the spec gives the most trouble, etc.

I can't even imagine that Level 1 features such as live NodeLists will be
deprecated in the Level 2 spec, but I *can* imagine some hasFeature() string
being put into the spec that defines some subset of the DOM that removes
problematic interfaces that are of little use to some identifiable subset of
users.  For example, if *everyone* stumbles over live NodeLists, it seems
reasonable to me to put in the Level 2 spec some interoperable way for users
to query for the lack of this feature and continue accordingly.  Again, I
don't know how widely this view is shared in the WG, but some concrete
suggestion that would really help ensure that people implement the same
subset of the DOM would have some chance of getting into Level 2.

Mike Champion



