docno="lists-103-0277490"
received="Thu Oct  7 12:00:23 1999"
isoreceived="19991007160023"
sent="Thu, 7 Oct 1999 17:00:20 +0100 (BST)"
isosent="19991007160020"
name="Kasper Peeters"
email="K.Peeters@damtp.cam.ac.uk"
subject="Re: The DOM is not a model, it is a library!"
id="14332.50068.353583.605431@hopf.amtp.cam.ac.uk"
charset="us-ascii"
inreplyto="009d01bf10da$cd4e02e0$2f1b12d1&#64;mccdell"
expires="-1"


To:"DOM Mailing List"<www-dom@w3.org>


> I can't even imagine that Level 1 features such as live NodeLists
> will be deprecated in the Level 2 spec, but I *can* imagine some
> hasFeature() string being put into the spec that defines some subset
> of the DOM that removes problematic interfaces that are of little
> use to some identifiable subset of users.

Just my 0.02, but the DOM `standard' is IMHO of very little use if
anyone can restrict it at will by using hasFeature(). If one wants a
javascript program to run on all DOM implementations, and some of them
have NodeLists while others don't, the program will have to work with
NodeIterators anyway. What's the point of writing the same routine yet
once more using NodeLists, in that case? (now I would love to see
NodeLists go away, but that's not the point here).

There are already way too many `this is up to the implementor to
define' statements in the W3C standards. Please don't make it any
worse than it is already.

Kasper



