docno="lists-103-0293839"
received="Thu Oct  7 12:27:26 1999"
isoreceived="19991007162726"
sent="Thu, 07 Oct 1999 18:27:17 +0200"
isosent="19991007162717"
name="Arnaud Le Hors"
email="lehors@w3.org"
subject="Live NodeLists (Re: The DOM is not a model, it is a library!)"
id="37FCC9E5.5E205479@w3.org"
charset="us-ascii"
inreplyto="qcyadfp5tj.fsf&#64;congo.crc.ricoh.com"
expires="-1"


To: DOM Mailing List<www-dom@w3.org>

While I don't like NodeList myself, I personnaly don't have any
particular problem to implement the live aspect of them. It's actually
easier for me to have them live since they are a simple wrapper on top
of my own structure which has nothing like that, and which is definitely
"live". Making NodeLists "dead" would mean for me to actually allocate
an array to "save" their state at creation time, which is something I
don't currently need. Could someone tell me what the problem with live
NodeLists is? Actually, my expectation is rather that they cause more
troubles to the user than the implementor.

Side note: I really wonder how we came up with this term "live"
nodelists. I would really call them "dynamic", as opposed to "static"
(and not "dead").
-- 
Arnaud



