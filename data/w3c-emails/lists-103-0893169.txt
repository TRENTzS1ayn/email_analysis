docno="lists-103-0893169"
received="Tue Nov  9 09:12:51 1999"
isoreceived="19991109141251"
sent="Tue, 9 Nov 1999 09:12:28 -0500"
isosent="19991109141228"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="Re: Intent to make a Debian package with DOM Java bindings"
id="85256824.004E0CA0.00@D51MTA03.pok.ibm.com"
charset="us-ascii"
inreplyto="Intent to make a Debian package with DOM Java bindings"
expires="-1"

To:www-dom@w3.org


The problem here may be multiple definitions of the word "package", and
multiple packages in a single application... Let's try a concrete example:
IBM's XML4J parser, which currently includes two implementations of the
DOM.

The DOM API Interfaces themselves (Node.java and so on) are included
un-altered as the org.w3c.dom package.

The implementations live in their own packages (eg com.ibm.xml.dom). They
reference the DOM APIs, and are operated primarily in terms of the DOM
APIs, but their code is kept distinct from the W3C's code. They may provide
additional functions, or implement additional interfaces, as well.

All these packages wind up in a single jar-file when IBM distributes the
compiler. But by keeping the packages distinct, they maintain a clear line
between which features are defined by the DOM and which are custom
additions. Doing so ensures that if this code is linked with other
DOM-based code, compiled seperately with another copy of org.w3c.dom,
everything will connect up properly. Even without the copyright issue, that
is a Darned Good Reason to do it this way.

______________________________________
Joe Kesselman  / IBM Research



