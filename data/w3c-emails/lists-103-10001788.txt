docno="lists-103-10001788"
received="Fri Nov 17 13:56:46 2000"
isoreceived="20001117185646"
sent="Fri, 17 Nov 2000 11:55:32 -0800"
isosent="20001117195532"
name="K. Ari Krupnikov"
email="ari@iln.net"
subject="Re: CM: Re: l3 content model"
id="3A158D34.D31823D8@iln.net"
charset="iso-8859-15"
inreplyto="3A14DD1E.E84D44A0&#64;oracle.com"
expires="-1"


To:Ben.Chang@oracle.com
CC:www-dom@w3.org

"Benjamin C. Chang" wrote:
> 
> "K. Ari Krupnikov" wrote:
> >
> > It seems to me that it could be advantageous to have an option for
> > continuos validation of the document, something like
> >
> > boolean         Document.continuosValidation
> > or
> > boolean         DOMImplementation.continuosValidation
> >
> > In the optional validating mode I'm talking about, insertBefore() could
> > throw something like a CM_HIERARCHY_REQUEST_ERR if the operation would
> > violate the CM.
> 
> You're talking about changing the signature/behavior of insertBefore(), to
> take care of validation, thus breaking compatibility for a DOM CORE
> function.

G-d forbid! 
Neither signature nor behavior of insertBefore() or similar functions
need change.
Signature:insertBefore() already throws DOMException. What I'm
suggesting is a new code (16?) for DOMException.
Behavior:I'm suggesting a switch: if continuosValidation is set, this
new type of DOMException may be thrown. If it is unset, no validation
occurs. Implementations would be free to set the default value for
continuosValidation to false and thus be completely l2 compatible.

> > Note that this does not create any additional strain on teams developing
> > traditional DOM implementations: the difference between normal and
> > continuos validation mode would be that insertBefore()'s first statement
> > will be canInsertBefore()

-- 
K. Ari Krupnikov

DBDOM - bridging XML and relational databases
http://www.iter.co.il



