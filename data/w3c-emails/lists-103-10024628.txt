docno="lists-103-10024628"
received="Sun Nov 19 12:14:23 2000"
isoreceived="20001119171423"
sent="Sun, 19 Nov 2000 17:13:48 GMT"
isosent="20001119171348"
name="Jill Beppu"
email="jbeppu@jps.net"
subject="remove"
id="3a180a4c.9b0.0@jps.net"
charset="iso-8859-1"
expires="-1"

To:"K. Ari Krupnikov"<ari@iln.net>,Ben.Chang@oracle.com,www-dom@w3.org


remove from list


>"Benjamin C. Chang" wrote:
>> 
>> "K. Ari Krupnikov" wrote:
>> >
>> > It seems to me that it could be advantageous to have an option for
>> > continuos validation of the document, something like
>> >
>> > boolean         Document.continuosValidation
>> > or
>> > boolean         DOMImplementation.continuosValidation
>> >
>> > In the optional validating mode I'm talking about, insertBefore() could

>> > throw something like a CM_HIERARCHY_REQUEST_ERR if the operation would

>> > violate the CM.
>> 
>> You're talking about changing the signature/behavior of insertBefore(), to

>> take care of validation, thus breaking compatibility for a DOM CORE
>> function.
>
>G-d forbid! 
>Neither signature nor behavior of insertBefore() or similar functions
>need change.
>Signature:insertBefore() already throws DOMException. What I'm
>suggesting is a new code (16?) for DOMException.
>Behavior:I'm suggesting a switch: if continuosValidation is set, this
>new type of DOMException may be thrown. If it is unset, no validation
>occurs. Implementations would be free to set the default value for
>continuosValidation to false and thus be completely l2 compatible.
>
>> > Note that this does not create any additional strain on teams developing

>> > traditional DOM implementations: the difference between normal and
>> > continuos validation mode would be that insertBefore()'s first statement

>> > will be canInsertBefore()
>
>-- 
>K. Ari Krupnikov
>
>DBDOM - bridging XML and relational databases
>http://www.iter.co.il
>
>
>



