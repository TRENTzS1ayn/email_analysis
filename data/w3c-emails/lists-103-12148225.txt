docno="lists-103-12148225"
received="Tue May 15 15:01:15 2001"
isoreceived="20010515190115"
sent="Tue, 15 May 2001 13:00:01 -0600"
isosent="20010515190001"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="DOM 3 Core: Overlap with JAXP, Document order of attributes, getC hildElementsByTagName, Exceptions"
id="B2C1451A181BD411B88A00E018C1C19C08AC58@thor.aeathtl.com"
charset="iso-8859-1"
expires="-1"


To:"'www-dom@w3.org'"<www-dom@w3.org>

I just gave a cursory read of the DOM 3 Working Draft and I know I'm
a few months out but I didn't see any of these issues mentioned in the
public mailing list.

Section 1.2: DOM Level 3 Java Binding Extension

JAXP seems established and useful and covers this requirement, 
why does it need to be replicated within the DOM spec.
I could see it if it was trying to replicate the same
architecture for the other bindings, but then there should
be a generic discussion in a core and discussion of the Java
and ECMAScript implementations in the bindings section.

Enumeration DocumentOrder and TreePosition:

What would be the result of comparing the order of two attributes 
of the same element, two attributes of a different element, an
attribute and a child of the same element.

getChildElementsByTagName:

Newbies are typically suprised to find out that getElementsByTagName()
returns all descendant elements with the specified tag name.  Would it
be useful to add a method that supports getting only the immediate
children of the target object?

Exceptions:

Trying to determine the nature of an exception is difficult to do in
a implementation portable way on non-Java platforms.  The HRESULT's
and messages used in IE or the Adobe SVG Viewer don't have a ready
correspondance to each other or to the DOMException.code's.  Is there
any mechanism that DOM 3 could add to map these platform specific
exceptions back to the defined DOMException codes, maybe a 
domImplementation.getExceptionCode(Object exception) method?



