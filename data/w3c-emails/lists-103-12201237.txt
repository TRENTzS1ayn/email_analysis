docno="lists-103-12201237"
received="Tue May 15 22:56:20 2001"
isoreceived="20010516025620"
sent="Tue, 15 May 2001 22:25:41 -0400 (EDT)"
isosent="20010516022541"
name="Fred L. Drake, Jr."
email="fdrake@acm.org"
subject="RE: DOM 3 Core: Overlap with JAXP, Document order of attributes,  getChildElementsByTagName, Exceptions"
id="15105.58661.293547.854554@cj42289-a.reston1.va.home.com"
charset="us-ascii"
inreplyto="B2C1451A181BD411B88A00E018C1C19C08AC5C&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>
Cc:"'www-dom@w3.org'"<www-dom@w3.org>


Arnold, Curt writes:
 > If the DOM was local and in-memory, I would agree, but if the DOM is 
 > out-of-process or a API for a datastore, then the difference could
 > be pretty substantial.  

  This also depends on the memory management model; for older versions
of Python (which used only reference counting for garbage collection
and note the more elaborate cycle detection that we use now), a proxy
architecture can be used to avoid circular references.  This causes a
lot of object instantiations while iterating over a NodeList --
specific implementations may be able to do this fairly cheaply, but
nowhere near as cheap as avoiding the proxy creations.
  Whether or not .getChildrenByTagName() in particular is a good idea,
the WG needs to keep in mind that a DOM may be remote (out of process
or on another machine) or may not use what a Java programmer would
consider an obvious implementation.  For runtime systems with
significantl different behaviors in low-level details like memory
management, this can have a substantial effect.

 > a particular locale (US English).  It might be something that is 
 > specific to the ECMAScript binding, since it doesn't affect Java
 > implementations.

  I'm not even sure I understood this concern!  For Python, each
specific exception code is mapped to specific subclasses of the
DOMException, and all such exceptions have the appropriate .code
attribute.


  -Fred




-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Digital Creations



