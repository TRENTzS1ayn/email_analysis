docno="lists-103-12231775"
received="Wed May 16 09:52:01 2001"
isoreceived="20010516135201"
sent="Wed, 16 May 2001 09:50:55 -0400 (EDT)"
isosent="20010516135055"
name="Fred L. Drake, Jr."
email="fdrake@acm.org"
subject="RE: DOM 3 Core: Overlap with JAXP, Document order of attributes,   getChildElementsByTagName, Exceptions"
id="15106.34239.203520.642744@cj42289-a.reston1.va.home.com"
charset="us-ascii"
inreplyto="B2C1451A181BD411B88A00E018C1C19C08AC5E&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>,<PBWiz@mail.pbwizard.com>
Cc:"'www-dom@w3.org'"<www-dom@w3.org>


Arnold, Curt writes:
 > If you are accessing a COM DOM using JScript (and probably true
 > for other ECMAScript implementations), there is no portable
 > mechanism for determining the DOMException code for the exception.
[...example code...]

  This is an enlightening example!  I must confess I don't know enough
ECMAScript -- I didn't even know it *had* a try/catch construct!  It's
good that it does.

 > However, I'm not saying that that is the right solution, however
 > I do think the problem is legitimate.

  Sounds like it, but...


Jeff Yates writes:
 > If the DOM you are using follows the W3C Recomendation then you use
 > the instanceof operator in JavaScript to find out what exception
 > object was thrown.  After you get that then you use the value of
 > the code property to get the exact error thrown.
 > 
 > If the DOM you are using follows the W3C Recomendation you can use
 > the following:
[...example code...]

  This example seems to indicate that an implementation which follows
the W3C bindings doesn't need any additional functions.  So let's
avoid the extra method.
  Perhaps Curt is using a non-conforming implementation?



-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Digital Creations



