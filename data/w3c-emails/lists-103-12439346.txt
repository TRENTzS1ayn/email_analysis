docno="lists-103-12439346"
received="Mon May 21 18:42:12 2001"
isoreceived="20010521224212"
sent="Mon, 21 May 2001 15:43:19 -0700"
isosent="20010521224319"
name="Gavin Stokes"
email="gavin@AmbitiousProductions.com"
subject="DOM - odd absent tag-setting method"
id="5.0.0.25.2.20010521152328.00a68af0@pop.enteract.com"
charset="us-ascii"
inreplyto="OF384CF444.71CEF8F0-ON85256A53.004DE17D&#64;pok.ibm.com"
expires="-1"


To: W3C DOM mailing list<www-dom@w3.org>

Thanks to all for the responses.  I just want to be able to pass empty 
elements into subroutines, have them filled (including tag), and then add 
the resulting elements to an XML doc.

Not being able to change the tag will make it harder to break the code into 
tidy routines that take a C++ object and and turn it into an 
element.  Let's say I have a bunch of overloaded methods in an XML 
generator called ObjectToXML(const ClassName&, DOM_Element*).

I'd simply like to set the tag to be the class name.  Because this same 
type of object may be stored at various levels and places in one XML 
document, passing the entire document itself is not attractive.  The 
subroutine should not have any knowledge of where the resulting XML is 
going in the big document.  It would be nice to build elements individually 
at the behest of a higher-level routine, which would be assembling them 
into the document.

Of course, I don't know the inner workings of element-generation as some of 
you do, so if they're actually different classes generated at runtime then 
maybe what I want is impractical.

Regards,
Gavin



