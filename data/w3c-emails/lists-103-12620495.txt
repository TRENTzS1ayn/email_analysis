docno="lists-103-12620495"
received="Tue May 29 14:57:39 2001"
isoreceived="20010529185739"
sent="Tue, 29 May 2001 11:55:18 -0700"
isosent="20010529185518"
name="Barbara Samson"
email="bsamson@cisco.com"
subject="Re: guidance needed"
id="4.3.2.7.2.20010529114049.00b91e90@MIRA-SJC5-1.cisco.com"
charset="us-ascii"
inreplyto="OF2FEF11A5.808B7E26-ON85256A5B.0063C08F&#64;pok.ibm.com"
expires="-1"


To:"Joseph Kesselman"<keshlam@us.ibm.com>
Cc:"Tom Leuntjens"<tom.leuntjens@bricsnet.com>,<www-dom@w3.org>

I apologize for my thoughtlessness, Joseph. You are right that this is not 
the forum for a discussion of JDOM, which has little to do with www-dom. 
It's just that I have implemented an XML-intensive project twice in Java, 
the first time using the Xerces implementation of the org.w3c.dom 
interfaces and the second time using JDOM on top of Xerces. I found JDOM 
much easier to deal with and more intuitive for new team members. Since it 
provides everything I need, I have not run into the downsides of using it, 
but of course there must be important features that this highly simplified 
API lacks.

Barbara Samson

At 02:32 PM 5/29/2001 -0400, Joseph Kesselman wrote:

>Folks: If you're going to recommend JDOM over the standardized, portable
>W3C DOM, please at least have the courtesy to say _why_ you're steering
>folks in that direction so we can discuss whether your advice makes sense.
>There are some things that JDOM does make more convenient, but there are
>also downsides to using it... and if folks asked the question here on the
>www-dom mailing list rather than on XML-DEV, it'd be sorta polite to at
>least initially assume they want a DOM-specific answer.
>
>(I'm not intimately familiar with JDOM, but as far as I can tell from what
>little I do know, it _doesn't_ have strong advantages over the DOM for this
>case. Either way, you have to loop over the <company> elements, then
>retrieve and process the desired children thereof. JDOM may have a few
>minor convenience methods like getChildText which could be helpful, but
>that's really not a huge reduction in programming effort.)
>
>______________________________________
>Joe Kesselman  / IBM Research



