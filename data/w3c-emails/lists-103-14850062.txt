docno="lists-103-14850062"
received="Mon Feb 19 09:43:37 2001"
isoreceived="20010219144337"
sent="Mon, 19 Feb 2001 15:43:34 +0100"
isosent="20010219144334"
name="Martijn Pieters"
email="mj@digicool.com"
subject="DOMImplementation.hasFeature and 'Core', 'XML' and '1.0'."
id="20010219154334.A32535@zopatista.com"
charset="us-ascii"
expires="-1"

To:www-dom@w3.org


Hi,

It is unclear to me how a DOM level 2 compliant DOM implementation should
react on a DOMImplementation.hasFeature('Core', '1.0') or
.hasFeature('XML', '1.0') call.

In DOM level 1, what are now the 'Core' and 'XML' were together called the
'XML' feature. Returning true on 'XML', '1.0' meant that both the
fundamental and the extended interfaces were supported. This was not
consistent with the rest of the DOM spec, because the Extended interfaces
were optional for 'HTML' feature DOM implementations.

In DOM level 2, with the clearer 'Core' feature name for the fundamental
interfaces it now is unclear to me if hasFeature should still return true
for hasFeature('XML', '1.0'). I can also image that returning true for
hasFeature('Core', '1.0') is a good idea; after all, we also support the
DOM level 1 methods of the fundamental interfaces.

Would this be the compliant behaviour? Or would this make a DOM
implementation non-compliant? Or is this outside the scope of the DOM
specification; a DOM can return either true or false as this is undefined?

-- 
Martijn Pieters
| Software Engineer  mailto:mj@digicool.com
| Digital Creations  http://www.digicool.com/
| Creators of Zope   http://www.zope.org/
---------------------------------------------



