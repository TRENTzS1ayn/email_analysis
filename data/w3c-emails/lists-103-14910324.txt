docno="lists-103-14910324"
received="Tue Feb 20 09:57:16 2001"
isoreceived="20010220145716"
sent="Tue, 20 Feb 2001 09:57:06 -0500"
isosent="20010220145706"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: candidate for errata?"
id="OF4B2EB9FA.8E897BB1-ON852569F9.00511546@pok.ibm.com"
charset="us-ascii"
inreplyto="candidate for errata?"
expires="-1"

To:www-dom@w3.org



>"The DOM implementation may not put arbitrary limits on the amount of
>data that may be stored in a CharacterData node."
>The Java bindings specify that CharacterData.getLenght() return int.
>Is there an implicit assumption that in Java a CharacterData would not
>exceed 2Gb?

Yes, the standard Java bindings make that assumption. Other bindings may
bind the IDL "int" to other datatypes, of course.

We probably overstated the case slightly when we said no arbitrary limits
were permitted; at some point, you must exceed the number of bits in the
machine. What was intended was that the user should never run into whatever
limit was imposed by the implementation when processing plausible
documents.

Frankly, if you've got a single CharacterData that contains more than 2GB,
it is extremely unlikely that _any_ off-the-shelf XML software will handle
it, and one can argue that you were foolish to embed that much unstructured
data in an XML document in the first place. In that sense, one can argue
that 2GB is _not_ arbitrary, nor -- in practical terms -- a limit.

But if someone has a better way to phrase this, we can consider it as a
purely editorial erratum and fix it at some point... or I can add it to the
FAQ document, if folks think it really is going to be asked more than once
a year.

______________________________________
Joe Kesselman  / IBM Research



