docno="lists-103-14943074"
received="Tue Feb 20 15:52:52 2001"
isoreceived="20010220205252"
sent="Tue, 20 Feb 2001 12:53:26 -0800"
isosent="20010220205326"
name="K. Ari Krupnikov"
email="ari@iln.net"
subject="Re: candidate for errata?"
id="3A92D946.52C7EC86@iln.net"
charset="us-ascii"
inreplyto="OF4B2EB9FA.8E897BB1-ON852569F9.00511546&#64;pok.ibm.com"
expires="-1"


To: Joseph Kesselman<keshlam@us.ibm.com>
CC:www-dom@w3.org

Joseph Kesselman wrote:
> 
> >"The DOM implementation may not put arbitrary limits on the amount of
> >data that may be stored in a CharacterData node."
> >The Java bindings specify that CharacterData.getLenght() return int.
> >Is there an implicit assumption that in Java a CharacterData would not
> >exceed 2Gb?
> 
> Yes, the standard Java bindings make that assumption. Other bindings may
> bind the IDL "int" to other datatypes, of course.
> 
> Frankly, if you've got a single CharacterData that contains more than 2GB,
> it is extremely unlikely that _any_ off-the-shelf XML software will handle
> it, and one can argue that you were foolish to embed that much unstructured
> data in an XML document in the first place.

I certainly agree. The reason I asked is that I'm working on an
SQL-based implementation with Java wrappers, and there 2 GB
CharacterData _are_ possible, if ill-advised. I was wondering if I
should limit the size of CharacterData to the maximum size of VARCHAR
(or clob) field (1GB in PostgreSQL), or normalize CharacterData into a
one-to-many with its parent. And then the int question came up.

Would limiting CharacterData to 1GB be reasonable? What would you
consider to be a 'practical' limit?

-- 
K. Ari Krupnikov

DBDOM - bridging XML and relational databases
http://www.iter.co.il



