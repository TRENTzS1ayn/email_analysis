docno="lists-103-15790605"
received="Thu Mar 22 14:03:02 2001"
isoreceived="20010322190302"
sent="Thu, 22 Mar 2001 14:02:57 -0500"
isosent="20010322190257"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: Type-safe iteration over the DOM in DOM 2 &amp; 3?"
id="OF36553FE9.ABBFEE67-ON85256A17.006605B0@pok.ibm.com"
charset="us-ascii"
inreplyto="Type-safe iteration over the DOM in DOM 2 &amp; 3?"
expires="-1"

To:www-dom@w3.org



>myvisitor.execute(mynode);
> To my best knowledge, this proposal does simply **not** work

Given our inabilty to rely upon methods being overloaded by argument
signature,  we couldn't define the Visitor API as having both the methods
     execute(Element e)
and
     execute(Attr t)

We could instead code accept() separately in each node type, so it calls
executeElement() and executeAttr(). But note that this locks in a specific
set of methods on the Visitor; if we added a new node type in the future
(perhaps under DocumentType, as part of the Content Model support),  older
visitors would be unable to support it... though it might be possible to do
something with subclassing Visitor to extend it and saying that the new
nodes will only call back to a suitable ExtendedVisitor.

______________________________________
Joe Kesselman  / IBM Research



