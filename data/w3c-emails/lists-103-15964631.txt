docno="lists-103-15964631"
received="Wed Mar 28 11:29:20 2001"
isoreceived="20010328162920"
sent="Wed, 28 Mar 2001 11:29:00 -0500"
isosent="20010328162900"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: Read Only Attributes"
id="OF7A4EDB55.D8710126-ON85256A1D.00597AE3@pok.ibm.com"
charset="us-ascii"
inreplyto="Read Only Attributes"
expires="-1"

To:"WWW DOM"<www-dom@w3.org>



As of DOM Level 2, , the answer is that if you invent a stopgap solution
involving your own custom APIs to make the attribute and/or its contents
read-only, the DOM does provide a description of what that should mean in
terms of resulting behavior. But as of DOM Level 2, there is no portable
API for making individual attributes -- or individual nodes in general --
read-only.

The DOM does have the concept of a read-only node, but only puts nodes into
this state when they are within the subtree of an EntityReference or Entity
(and doesn't actually explain how the Entity's readonly subtree is to be
built).

There is a known open issue requesting application-level control of a
node's readonly status and/or some equivalent form of data locking. We
haven't yet reached a consensus on that issue, and it is currently tabled
pending new insights and/or some spare cycles to work on it.


(I do hope to get the Open Issues list into a form that can be published on
the public part of the DOM's web page, when I can find some time to work on
it. That'll help answer some of the "have you ever considered" questions.)


______________________________________
Joe Kesselman  / IBM Research



