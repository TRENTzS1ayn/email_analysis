docno="lists-103-2251255"
received="Thu Apr 13 17:14:58 2000"
isoreceived="20000413211458"
sent="Thu, 13 Apr 2000 17:14:36 -0400"
isosent="20000413211436"
name="Keith W. Boone"
email="kboone@ebt.com"
subject="Questions about import and Multithreading issues."
id="000101bfa58d$4616bbd0$767770c6@ebt.com"
charset="iso-8859-1"
inreplyto="000001bfa588$894fb1e0$767770c6&#64;ebt.com"
expires="-1"

To:<www-dom@w3.org>



When deeply importing a Node from another DOM Implementation, it is possible
in a multi-threaded environment for children to change while the import is
going on.  The only way that I can correctly implement a deep importNode()
is to first perform a deep clone of the imported node, which will give me a
copy that I control, and then perform the recursive import.  This
implementation creates a bunch of short-lived temporary objects in a Java
programming environment.

I do not believe that a conforming implementation should be required to
attempt this.  Instead, I think that this sort of use should not be
attempted by applications.  Applications that attempt to modify nodes in one
thread while importing them in another should get implementation dependent
behavior, and this should be clearly stated in the specification.

Keith



