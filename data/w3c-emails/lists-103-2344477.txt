docno="lists-103-2344477"
received="Fri Apr 14 10:11:12 2000"
isoreceived="20000414141112"
sent="Fri, 14 Apr 2000 10:10:37 -0400"
isosent="20000414141037"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="RE: createEntity and createNotation and importing these"
id="852568C1.004DD2D7.00@D51MTA03.pok.ibm.com"
charset="us-ascii"
inreplyto="createEntity and createNotation and importing these"
expires="-1"

To:www-dom@w3.org


> Your last statement is an argument for putting createEntity() and
> createNotation() in DOM Level 2.

It is somewhat easier, architecturally, to add a new method than to change
behavior of an existing method.  And it is a bit less clear where the
factory methods for these nodetypes should reside; that's going to depend
on how the data structures for Content Models are organized. But I do grant
your point that asking the Document to replicate these might not be
optimal.

We did consider the alternative of saying that these can not be imported
yet, and decided that changing that in Level 3 was going to be more
contentious than including them in Level 2. I'm not absolutely wedded to
that conclusion -- we may wind up introducing new node types in the future,
in which case we'd be in the same position of having to decide whether to
extend importNode() to handle them.

> P.S.    Is this issue a dead horse yet, or is there still a chance to
> change
> the DOM?  ;-)

"Is it dead?" "Well, it was coughing up blood last night." -- Monty Python

We're in Candidate Recommendation phase. Officially, that means that the
decisions have been made, and only changes which are required to overcome
_serious_ design flaws are really on the table. If it isn't likely to
impede future development of the DOM, and doesn't create an unacceptable
impact on impelemntability or performance, then officially it shouldn't be
on the table. We had to make that promise in order to get folks to commit
to building and testing early implementations, which is what the CR phase
is really for.

But it's always worth raising the question; that kind of feedback is also
what CR is for.


Right now, I still put this in the "mostly harmless" category -- the only
special knowledge needed is in how to access you own implementation's
constructors/factories for these objects, and while nobody else may have
that information you (as implementor) certainly do. It'll be almost unused
right now, I grant, but it's only a few lines.

That's not an overwhelmingly strong opinion. I've been chiding someone else
for "a foolish consistancy"; maybe this is mine. But since it doesn't seem
to be actively harmful, my inclination is to stick with status quo.

______________________________________
Joe Kesselman  / IBM Research



