docno="lists-103-2440424"
received="Sun Apr 16 02:49:28 2000"
isoreceived="20000416064928"
sent="Sun, 16 Apr 2000 00:47:57 -0600"
isosent="20000416064757"
name="Aaron Skonnard"
email="aarons@develop.com"
subject="RE: adding addressing capabilities to the DOM"
id="NDBBJHEMDDKHIDLCDFAOAELNCIAA.aarons@develop.com"
charset="iso-8859-1"
inreplyto="005701bfa75e$88bb3d80$5df5c13f&#64;PaulTchistopolskii"
expires="-1"

To:"Paul Tchistopolskii"<paul@qub.com>,<aaron@skonnard.com>,"Xml-Dev@Xml. Org"<xml-dev@xml.org>
Cc:<www-dom@w3.org>


[inline]
>
> Also:
>
> Isn't:
>
> NodeList  getElementsByTagName(java.lang.String tagname);
>
> a degenerated form of :
>
> NodeList getNodes(scheme, expression, currentNode)
>

Similar...but getElementsByTagName only returns Element nodes by name where
XPath expressions are capable of returning all *core* node types, not just
element nodes. It really makes sense to have the API available on the Node
interface because relative expressions can be applied to all *core* node
types (element, attribute, text, comment, pi).

> Currently  getElementsByTagName resides in Document
> interface.
>

Yes, but it also exists in the Element interface (it's just in Document for
convenience). If this API is in the Node interface, it's available
everywhere.

-aaron



