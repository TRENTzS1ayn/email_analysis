docno="lists-103-2482184"
received="Sun Apr 16 11:38:12 2000"
isoreceived="20000416153812"
sent="Sun, 16 Apr 2000 09:36:47 -0600"
isosent="20000416153647"
name="Aaron Skonnard"
email="aarons@develop.com"
subject="FW: adding addressing capabilities to the DOM"
id="NDBBJHEMDDKHIDLCDFAOOELPCIAA.aarons@develop.com"
charset="iso-8859-1"
inreplyto="adding addressing capabilities to the DOM"
expires="-1"

To:"www-Dom"<www-dom@w3.org>


Here is an opinion that didn't make it to the list.

-aaron

> -----Original Message-----
> From: Rich Anderson [mailto:rja@arpsolutions.demon.co.uk]
> Sent: Sunday, April 16, 2000 2:57 AM
> To: aaron@skonnard.com
> Subject: Re: adding addressing capabilities to the DOM
> 
> 
> Hi,
> 
> I've not read the level 3 spec, but here are a few thoughts..
> 
> > there has been some discussion on adding an addressing API 
> (similar to the
> > selectNodes function in MSXML). The proposed idea is to 
> introduce a method
> 
> MSXML, IBM and Vivid support this so it is common enough to add I think
> asap.
> 
> > NodeList books = doc.getNodes("xpath",
> "/books//book[@topic='xml']/author");
> 
> I'd prefer:
> 
> NodeList books = doc.getNodes("xpath:/books//book[@topic='xml']/author");
> 
> With the default being xpath, overrideable at the document level 
> as you say:
> 
> document.setDefaultSearchSchema( "xpath");
> 
> > Who wants it?
> 
> EVERYbody is already using this, and will continue to us it 
> whatever the W3C
> do.  It is foolish not to add it, and I already feel the W3C just 
> dont keep
> up with the pace of innovation anyway.
> 
> Cheers,
> 
> Rich.
> 
> 
> 



