docno="lists-103-2523404"
received="Mon Apr 17 09:21:57 2000"
isoreceived="20000417132157"
sent="Mon, 17 Apr 2000 09:21:21 -0400"
isosent="20000417132121"
name="keshlam@us.ibm.com"
email="keshlam@us.ibm.com"
subject="RE: adding addressing capabilities to the DOM"
id="852568C4.00495D11.00@D51MTA03.pok.ibm.com"
charset="us-ascii"
inreplyto="adding addressing capabilities to the DOM"
expires="-1"

cc:"Xml-Dev@Xml. Org"<xml-dev@xml.org>,www-dom@w3.org


Before folks go too far on this:  Note that the DOM Level 2 "traversal"
chapter was, in fact, originally designed as a first step toward richer
queries, and is arguably better suited for this purpose than the NodeList
API.

Also, keep in mind:

1) It is not particularly difficult to implement querying as an operation
upon the DOM, rather than within the DOM. (Liveness issues are a challenge,
but DOM Level 2, via mutation events may address these, especially if Level
3 adds "listener groups" as has been proposed.)

2) It probably makes sense to allow time for the XML Query Working Group to
produce unified semantics for XML Querying before designing a standardized
query API, to reduce the risk of creating conflicts with those semantics.
Otherwise, why have a query WG?

3) It is unclear that a querying API actually belongs inside the DOM at
all. One can argue that querying applies across document models -- one
might wish to apply a query to a SAX stream, for example -- and thus it may
want an independent API, which DOM implementations could support but which
might also be available in other contexts.


(Personally, I'd suggest that the discussion be held on a single mailing
list rather than copied to both, to reduce the risk that a reply might be
posted to only one and not reach all participants.)

______________________________________
Joe Kesselman  / IBM Research



