docno="lists-103-2548196"
received="Mon Apr 17 17:29:22 2000"
isoreceived="20000417212922"
sent="Mon, 17 Apr 2000 17:27:51 -0400"
isosent="20000417212751"
name="Michael Champion"
email="Mike.Champion@softwareag-usa.com"
subject="Re: adding addressing capabilities to the DOM"
id="034101bfa8b3$ca07bba0$a20c1e18@WORKGROUP"
charset="iso-8859-1"
inreplyto="852568C4.00495D11.00&#64;D51MTA03.pok.ibm.com"
expires="-1"


To:<www-dom@w3.org>


----- Original Message -----
From: <keshlam@us.ibm.com>
To: <www-dom@w3.org>
Cc: "Xml-Dev@Xml. Org" <xml-dev@xml.org>; <www-dom@w3.org>
Sent: Monday, April 17, 2000 9:21 AM
Subject: RE: adding addressing capabilities to the DOM


>
> 3) It is unclear that a querying API actually belongs inside the DOM at
> all. One can argue that querying applies across document models -- one
> might wish to apply a query to a SAX stream, for example -- and thus it
may
> want an independent API, which DOM implementations could support but which
> might also be available in other contexts.


[replying just to www-dom]

The way I understood the demand, it's not for a generic querying interface
but for specifically XPath navigation support.  Since XPath is a W3C
Recommendation and that WG did not specify a DOM interface, it's up to the
DOM WG to do so --- or to continue the status quo of multiple inconsistent
APIs that do this.  I agree that we should make it clear to the Query WG
that the Right Thing to Do is to specify the API implications of what
they're doing, but that is irrelevant to the question at hand: a request for
XPath support in the DOM.

This logically could be done on top of the DOM rather than in a DOM
implementation, but I'm quite sure that a DOM interface to an XPath engine
could be much, much faster than a DOM application that implemented XPath.



