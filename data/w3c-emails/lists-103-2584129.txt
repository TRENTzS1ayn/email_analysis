docno="lists-103-2584129"
received="Mon Apr 17 21:47:02 2000"
isoreceived="20000418014702"
sent="Mon, 17 Apr 2000 19:44:54 -0600"
isosent="20000418014454"
name="Aaron Skonnard"
email="aarons@develop.com"
subject="RE: FW: adding addressing capabilities to the DOM"
id="NDBBJHEMDDKHIDLCDFAOGENLCIAA.aarons@develop.com"
charset="US-ASCII"
inreplyto="852568C4.004826B6.00&#64;D51MTA03.pok.ibm.com"
expires="-1"

To:"www-Dom"<www-dom@w3.org>


>
> Caveat: You're going to get strong pushback if you advocate the use of
> NodeLists for this purpose.  Remember, the Traversal chapter was
> originally
> designed specifically because we wanted better return objects for queries
> and other filtered views. Some of us VERY strongly prefer these to
> NodeLists.
>

I think it's a great idea to combine XPath with the Traversal API (maybe as
a parameter type to createNodeIterator/createTreeWalker). Nevertheless, it
would also be useful as part of the Core API. This way it doesn't place as
big of a burden on implementations that don't wish to address the Traversal
API. I see NodeList as a very *natural* implementation of the XPath node-set
abstraction. I don't see why you would need or want anything more in this
case.

XPath expressions accomplish the same purpose as a custom NodeFilter without
explicitly writing the code. XPath users only care about the result node-set
from the expression.

-aaron



