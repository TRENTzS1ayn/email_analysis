docno="lists-103-2659289"
received="Tue Apr 18 13:03:54 2000"
isoreceived="20000418170354"
sent="Tue, 18 Apr 2000 11:01:46 -0600"
isosent="20000418170146"
name="Aaron Skonnard"
email="aarons@develop.com"
subject="RE: adding addressing capabilities to the DOM"
id="NDBBJHEMDDKHIDLCDFAOOEPACIAA.aarons@develop.com"
charset="US-ASCII"
inreplyto="852568C5.004A71A1.00&#64;D51MTA03.pok.ibm.com"
expires="-1"

To:<keshlam@us.ibm.com>
Cc:<www-dom@w3.org>


>
> > Based on my assumption that most DOM code is eventually going to use
> XPath
> > to some degree, not adding this API makes it _impossible_ to write
> > implementation independent code.
>
> No. It just means that your code has to carry around an XPath
> implementation.

Yuckk!!

>
> > XPath _IS_ the "independent API"
>
> If that were true, there'd be nothing the DOM need do.  But I don't think
> that's what you're trying to say.
>

You're right, that's *not* what I'm trying saying. In your previous email
you implied that we might need to define another higher-level querying API
that is independent of both DOM & SAX for this purpose:

Joe Kesselman wrote:
> 3) It is unclear that a querying API actually belongs inside the DOM at
> all. One can argue that querying applies across document models -- one
> might wish to apply a query to a SAX stream, for example -- and
> thus it may want an independent API, which DOM implementations could >
> support but which might also be available in other contexts.

What I'm saying is -- this is *exactly* what XPath was intended for. What we
need is the *bridge* between XPath->DOM, XPath->SAX, and XPath->???, etc.

-aaron



