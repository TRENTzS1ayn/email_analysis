docno="lists-103-3466584"
received="Fri May 26 10:50:33 2000"
isoreceived="20000526145033"
sent="Fri, 26 May 2000 07:46:41 -0700"
isosent="20000526144641"
name="Eric Richardson"
email="maxwell@telesoft.com"
subject="Re: A quick question"
id="392E8E51.CF8EE439@telesoft.com"
charset="us-ascii"
inreplyto="392E74C9.CE2ADF4F&#64;w3.org"
expires="-1"


To: DOM<www-dom@w3.org>

Philippe Le Hegaret wrote:

> The load and save module is part of DOM Level 3 and is not in DOM Level
> 2. For the moment, the implementations have their own API for the
> serialization. Check their documentation.
>
> Philippe
>
> Mark Torr wrote:
> >
> > I am using the DOM via a Java Server Page and need to render my output. I
> > currently have the following code:
> >
> > <html>
> > <body>
> > <%@ page import="javax.xml.parsers.*"%>
> > <%@ page import="org.w3c.dom.*" %>
> > <%
> >    try {
> >       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance ();
> >       DocumentBuilder db = dbf.newDocumentBuilder ();
> >       Document doc = db.newDocument ();
> >       Element root = doc.createElement ("mytest");
> >       doc.appendChild (root);
> >       root.appendChild (doc.createElement ("header"));
> >       root.appendChild (doc.createTextNode ("\n  some data is text\n  "));
> >       root.appendChild (doc.createElement ("footer"));
> >     } catch (Exception e) {}
> > %>
> > </body>
> > </html>
> >
> > Can someone tell me how to get the document to write itself out? Or do I
> > have to go through the whole tree myself?

Hi Mark,
In a non-portable way you can cast the Document to XmlDocument and use the
non-portable
write methods. This assumes you are using xml-tr2 as your underlying DOM.
eric :-)



