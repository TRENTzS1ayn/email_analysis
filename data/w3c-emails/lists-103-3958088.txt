docno="lists-103-3958088"
received="Mon Jun 26 12:16:04 2000"
isoreceived="20000626161604"
sent="Mon, 26 Jun 2000 12:16:01 -0400"
isosent="20000626161601"
name="Philippe Le Hegaret"
email="plh@w3.org"
subject="Re: Missing Exception for the setCssText method of the CSSValue   interface."
id="395781C1.1F150704@w3.org"
charset="us-ascii"
inreplyto="fc.0085846d000094270085846d00009427.9428&#64;savagesoftware.com"
expires="-1"


To: Blaine Brodie<bbrodie@savagesoftware.com>
CC:www-dom@w3.org

Blaine Brodie wrote:
> 
> Should an INVALID_MODIFICATION_ERR be added to the list of possible
> exceptions that can be generated using the setCssText() method, for the
> case where the user attempts to change the value type from
> CSS_PRIMITIVE_VALUE, CSS_CUSTOM, or CSS_VALUE_LIST to a different type via
> the setCssText() method? (e.g. from type CSS_PRIMITIVE_VALUE to
> CSS_VALUE_LIST).

CSSValue.setCssText() raises a SYNTAX_ERR in that case:
SYNTAX_ERR: Raised if the specified CSS string value
has a syntax error (according to the attached property) or is
unparsable. 

CSSValue are typed (according to the underlying property).

But it means also that we are inconsistent with CSSRule.cssText.
It raises an INVALID_MODIFICATION_ERR if you try to change the
underlying type on a CSS rule.
What about removing the INVALID_MODIFICATION_ERR and changing
the CSSRule.cssText
from:
SYNTAX_ERR: Raised if the specified CSS string value
has a syntax error and is unparsable.
to:
SYNTAX_ERR: Raised if the specified CSS string value
has a syntax error (according to the underlying rule)
or is unparsable.

It would mean that we can remove this exception from the
DOMException exception.

Philippe



