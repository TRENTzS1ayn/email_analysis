docno="lists-103-4353578"
received="Wed Jan 12 03:59:16 2000"
isoreceived="20000112085916"
sent="Wed, 12 Jan 2000 09:58:44 +0100"
isosent="20000112085844"
name="Thierry Kormann"
email="Thierry.Kormann@sophia.inria.fr"
subject="Re: DOM2 implementation questions"
id="200001120858.JAA28961@quokka.inria.fr"
charset="us-ascii"
inreplyto="raph&#64;onan.artofcode.com"
expires="-1"


To: Raph Levien<raph@onan.artofcode.com>
cc:www-dom@w3.org,gdome-list@rpmfind.net,Thierry.Kormann@sophia.inria.fr

Hi,

> EventTarget::removeEventListener
> 
> What happens if there are two listeners A and B on a target, and A
> removes B? Is B guaranteed to be called?

yes. The chain of EventListeners is determined _before_ the initial dispatch. 
i.e: your
EventListener list is "cloned" at the beginning of the dispatch process.

> What if A and B are bubble listeners on an an ancestor of the target?

same.

> What if A and B are bubble listeners on two different ancestors of the
> target (B ancestor of A)?

The ancestor listener won't be called in bubbling phase. Notice that in 
capturing phase
it's the child listener that won't be called.

> Attr::value
> 
> What is the difference between Attr::nodeValue and Attr::value?

It's the same. The first method is a generic one from Node and the second
one has a convenient syntax  for the attributes.

> Node::normalize
> 
> What events are appropriate? Deletion of additional Text nodes
> followed by mutation of the first Text node? (this is what I percieve
> to be the reverse of Text::splitText).

Don't  know. Your solution sounds good.

In our implementation, we call Node::removeChild then Node::appendChild.
The events are the ones posted by those 2 methods but I don't know
if it's the solution.

Thierry.

-- 
Thierry Kormann
email: Thierry.Kormann@sophia.inria.fr  http://www.inria.fr/koala/tkormann/
Koala/Dyade/Bull @ INRIA - Sophia Antipolis



