docno="lists-103-4531852"
received="Thu Jan 27 18:02:14 2000"
isoreceived="20000127230214"
sent="27 Jan 2000 15:01:13 -0800"
isosent="20000127230113"
name="Stephen R. Savitzky"
email="steve@rsv.ricoh.com"
subject="Re: Another Java Language Binding Question"
id="qcvh4f2k7a.fsf@congo.crc.ricoh.com"
inreplyto="Thu, 27 Jan 2000 14:32:49 -0800"
expires="-1"

To: Arnaud Le Hors<lehors@us.ibm.com>
Cc:www-dom@w3.org


Arnaud Le Hors <lehors@us.ibm.com> writes:

> I don't know what you mean by "artificially", but the reason it is
> abstract is that it's the closest we could get to an interface. Ideally
> the DOM java binding would only define interfaces. This is unfortunately
> impossible due to the way Java defines exceptions.

What he means is that there's no real reason beyond a desire for some kind
of philosophical purity to make it abstract: as far as I know no exception
anywhere in the Java classes is abstract; you can construct and throw an
IOException or even an Exception if you want to.  The fact is that the
implementation of the IDL concept of an Exception is mapped onto a
language binding in a language-dependent way; it isn't even logically
necessary for it to be an object at all.

Philosophical purity is not a good excuse for making things unnecessarily
complicated.

-- 
Stephen R. Savitzky  <steve@rsv.ricoh.com>  <http://rsv.ricoh.com/~steve/>
Platform for Information Applications:      <http://RiSource.org/PIA/>
Chief Software Scientist, Ricoh Silicon Valley, Inc. Calif. Research Center
 voice: 650.496.5710  front desk: 650.496.5700  fax: 650.854.8740 
  home: <steve@theStarport.org> URL: http://theStarport.org/people/steve/



