docno="lists-103-4924171"
received="Tue Feb  8 17:32:36 2000"
isoreceived="20000208223236"
sent="Tue, 08 Feb 2000 14:32:32 -0800"
isosent="20000208223232"
name="David Brownell"
email="david-b@pacbell.net"
subject="Re: Novice Java Language Binding Question"
id="38A09980.FBF6063C@pacbell.net"
charset="us-ascii"
inreplyto="002801bf71be$67a53b30$f9cb2cc3&#64;backoffice"
expires="-1"


To: John Duffy<jbduffy@cwcom.net>
Cc:www-dom@w3.org

> John Duffy wrote:
>
> My plan, when I first discovered DOM, was to load the page containing the
> table into the browser once, at load, and then use a Java Applet to create a
> socket connection to a data server and update the table via the DOM
> HTMLTable... interfaces.
> 
> Apologies if I have completely got the wrong idea about what DOM is all
> about.

That is, you want your web browser to support a DOM implementation
coupled to that data server, instead of only one that's built into
the web browser?  Or do you also want that same DOM implementation
to be coupled to the display, so you don't need that "http-equiv"?

I'd sure prefer to see architectures which completely separate the
notions of a "DOM that renders" and a "DOM tied to a database".  It
should be no trouble at all for a programming environment to support
both of those notions -- separately.  Glueing them together could be
a huge barrier to new market entrants, which would be a bad thing.

It's completely natural to expect that web browsers provide access
to DOM from Java that's as complete as what they provide to JavaScript
programs.  If your browser vendor doesn't support that, let them know
about their bug.

- Dave



