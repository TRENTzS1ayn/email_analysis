docno="lists-103-6114880"
received="Mon Mar  6 12:07:20 2000"
isoreceived="20000306170720"
sent="Mon, 6 Mar 2000 12:06:48 -0500"
isosent="20000306170648"
name="Keith W. Boone"
email="kboone@ebt.com"
subject="DocumentTraversal"
id="000101bf878e$5c584de0$767770c6@ebt.com"
charset="us-ascii"
inreplyto="38C3DF00.2C9D7786&#64;pacbell.net"
expires="-1"

To:<www-dom@w3.org>


First: The DocumentTraversal methods appears to be an extension of the Node
Interface, rather than an additional interface that may be supported by the
Document.  You should be able to create a TreeWalker or NodeIterator that
works with any conforming DOM 2 implementation using only the Node, flags
and filter.  Since the TreeWalker or NodeIterator is rooted at a specific
node, this would seem to imply that the factory method might be most
appropriately placed on Node, so that the root of the walker or iterator
thus created is simply the node that it was created from.  If the
implementation needs the owner document to create the node from, then it can
obtain that information from the node.  This puts the onus of getting the
owner document on the implementation if necessary, instead of the
application using the DOM API, where it shouldn't be necessary.

Secondly, the expandEntityReferences flag on the factory method should
really just be another constant that can be passed into whatToShow:
SHOW_ENTITY_REFERENCE_EXPANSION or SHOW_ENTITY_REFERENCE_CHILDREN.   This
change doesn't remove any functionality from the API, and it does eliminate
a parameter from one of the methods.

Keith



