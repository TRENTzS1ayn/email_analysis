docno="lists-103-9043688"
received="Sun Oct  1 12:59:34 2000"
isoreceived="20001001165934"
sent="Sun, 01 Oct 2000 10:02:17 -0700"
isosent="20001001170217"
name="Ray Whitmer"
email="rayw@netscape.com"
subject="Re: Document Views?"
id="39D76E19.E73873B3@netscape.com"
charset="us-ascii"
inreplyto="014c01c02a94$44bd58c0$3300a8c0&#64;NEWHOGGY"
expires="-1"


To: John Ky<hand@syd.speednet.com.au>
CC:www-dom@w3.org

John Ky wrote:

> The Views module doesn't seem to have very much in it.
>
> Is it about:
>
> + discovering what views are in use?

Not yet, although that would be useful.

> + discovering what the default view is?

The default view is currently the only one accessible, but the design is
such that hopefully all that would be missing is the discovery mechanism
(of course this would not apply much to implementations that only
support a single view).

> + discovering what document is associated with a view?

No.

> I would really like to see in the DOM - a special case
> view that involves having another document as a view
> of the first - both statically and dynamically.
>
> As a static view, it'll probably just be a transformation
> from document A to document B according to some
> rule.
>
> As a dynamic view - document B would be able to
> see document A and mutate itself according to a set
> of rules whenever document A mutates.  Much like
> the observer/subject pattern.  (I am just so obsessed
> with that pattern)
>
> Ideally I would have it event driven based on
> Mutation Events.

I understand the desire for this.  Connecting 1 DOM to another shouldn't
be much different from connecting a more-conventional presentation to a
DOM.

Thus far, the views/formatting module mainly address how to map between
physical parts of a conventional view (especially, but not limited to
visual) and the content being presented.

Events on the view have not been fleshed out yet, nor committed for
level 3.

You already have a specification for mutation events on the DOM document
hierarchy that could probably be used to drive an arbitrary presentation
of that document.

Other things being considered in level 3 core that might make this
easier:

1.  A unique ID on each node which makes it easier to associate
presentational data or other additional data with DOM nodes.
2.  Grouping of event targets so that, for example, the reception of the
mutation events by a particular presentation is not inadvertantly
cancelled or altered by other presentations or recipients of the events.

Ray Whitmer
rayw@netscape.com



