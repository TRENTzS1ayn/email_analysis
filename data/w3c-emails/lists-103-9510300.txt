docno="lists-103-9510300"
received="Thu Oct 19 15:14:02 2000"
isoreceived="20001019191402"
sent="Thu, 19 Oct 2000 15:13:44 -0400"
isosent="20001019191344"
name="Alan Meyer"
email="ameyer@ix.netcom.com"
subject="Re: Why levels instead of versions"
id="39EF0FA8.2246.135A8DB@localhost"
charset="US-ASCII"
inreplyto="F292TW5k1Ed28kIN4Mm00008be7&#64;hotmail.com"
expires="-1"

To:"Kyle Smithson"<skyle2@hotmail.com>
CC:www-dom@w3.org


On 17 Oct 2000, at 13:39, Kyle Smithson wrote:

> Why does DOM have "Levels" instead of "normal" version numbers?

Levels are not the same as versions in this context.  

Level 1 defines a basic level of functionality.  A particular DOM 
implementor may to choose to only implement level 1.  He may release 
his software as version 1 of his implementation.  Later, he fixes 
bugs and releases version 2.  Then he finds a way to optimize the 
speed, so he does so and releases version 3.  Then he finds a way to 
economize on memory and fix more bugs, and releases version 4.  Four 
versions of software were released, but all are strictly Level 1 DOM.

Level 2 defines a higher level of functionality.  Again, a particular 
implementor may have multiple versions of his level 2 DOM 
implementation.

If you, as an applications programmer, write a program that only uses 
DOM level 1 functionality, you can use either implementation.  Either 
one will do what you need to do.  You can pick the latest version of 
either implementation and choose based on the reliability and 
efficiency of the implementations.

If, however, you need to use some functions that are defined in level 
2 but not level 1, then you can only use the second implementor's 
software.
--
Alan Meyer
AM Systems, Inc.
Randallstown, MD USA
ameyer@ix.netcom.com



