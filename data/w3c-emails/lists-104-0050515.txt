docno="lists-104-0050515"
received="Wed Jul 11 17:57:40 2001"
isoreceived="20010711215740"
sent="Wed, 11 Jul 2001 17:57:38 -0400"
isosent="20010711215738"
name="Philippe Le Hegaret"
email="plh@w3.org"
subject="[Erratum] core-14. DOMImplementation.hasFeature (Re: hasFeature with   &quot;unspecified&quot; version)"
id="3B4CCBD2.74B52D03@w3.org"
charset="us-ascii"
inreplyto="B2C1451A181BD411B88A00E018C1C19C08AC13&#64;thor.aeathtl.com"
expires="-1"


To:www-dom@w3.org
Cc:"Arnold, Curt"<Curt.Arnold@hyprotech.com>


See
http://www.w3.org/2000/11/DOM-Level-2-errata#core-14

Thank you,
Philippe

> Message-ID: <B2C1451A181BD411B88A00E018C1C19C08AC13@thor.aeathtl.com>
> From: "Arnold, Curt" <Curt.Arnold@hyprotech.com>
> Date: Wed, 2 May 2001 11:47:56 -0600
> Subject: hasFeature with "unspecified" version
> 
> The NIST Java Test domimplementationFeatureNoVersion basically
> calls asserting that docimpl.hasFeature("XML","") == true.
> 
> The DOM Level 2 spec says this about the version parameter:
> 
> version of type DOMString
> 
> This is the version number of the feature to test. In Level 2, the string can be either "2.0" or "1.0". If the version is not specified, supporting any version of the feature causes the method to
> return true.
> 
> The most obvious way of "not specifying" the version would be to call
> docimpl.hasFeature("XML",null).
> 
> It would probably be good to add an explicit test with a null version parameter
> and to clarify the spec on how a zero-length version parameter should be interpreted.
> 
>   ---------------------------------------------------------------------------------



