docno="lists-104-0202762"
received="Thu Jul 12 17:18:14 2001"
isoreceived="20010712211814"
sent="Thu, 12 Jul 2001 17:16:04 -0400 (EDT)"
isosent="20010712211604"
name="Fred L. Drake, Jr."
email="fdrake@acm.org"
subject="Re: hasFeature continued"
id="15182.5012.986461.159095@cj42289-a.reston1.va.home.com"
charset="us-ascii"
inreplyto="70E215722F6AD511820A000103D141D40AA441&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>
Cc:"'www-dom@w3.org'"<www-dom@w3.org>


Arnold, Curt writes:
 > Maybe:
 > 
 > This is the version number of the feature to test. In Level 2, the
 > string can be either "2.0" or "1.0". If the version is an empty
 > string (or a null string when the value space of the string type
 > contains such a value), supporting any version of the feature
 > causes the method to return true.

  For the second sentence, why not:

If the version is an empty string or null, supporting any
version of the feature causes the method to return true.

  This expresses the possible values in terms of IDL; if the IDL
mapping for a language doesn't support the null value, there's no
loss, and there's no need for convoluted language in the general
portion of the specification.


  -Fred

-- 
Fred L. Drake, Jr.  <fdrake at acm.org>
PythonLabs at Digital Creations



