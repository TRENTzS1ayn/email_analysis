docno="lists-104-0289140"
received="Fri Jul 13 12:39:36 2001"
isoreceived="20010713163936"
sent="Fri, 13 Jul 2001 10:35:39 -0600"
isosent="20010713163539"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: hasFeature continued"
id="70E215722F6AD511820A000103D141D40AA444@thor.aeathtl.com"
charset="iso-8859-1"
inreplyto="hasFeature continued"
expires="-1"


To:"'www-dom@w3.org'"<www-dom@w3.org>

Joe Kesselman wrote:
> Given those, it still seems to me that this isn't a 
> hasFeature issue. 

Based on the flimsy research that I've done and by
gross speculation about what is going on behind the scenes,
I think this might be more pervasive than just hasFeature,
but also impacting the createElementNS and other *NS methods
and properties and impacts use from JScript, Visual Basic and
Visual Basic Script.

The results someone posted from the Mac version of IE
definitely seems at odds with the behavior that I have observed
on the Win version of IE.  There is definitely a chance that
this could turn out to be a phantom and would be nice to have
someone from Microsoft or Netscape sanity check our observations.

Shouldn't impact createDocument however since that null
is an object parameter.

> The binding must decide what "null" means for string arguments. 
> If they aren't
> allowed to accept the language's basic null, that's fine; the 
> binding must
> define a suitable replacement. That could be a magic reserved 
> string value,
> if all else fails -- preferably with a mnemonic assigned to 
> it so nobody
> codes dependencies on that specific string. (Simplest kluge, if you're
> working in Unicode, might to use a string containing a 
> character normally
> forbidden in XML.) 

That's the simplest kludge?  An empty string seems a lot simpler.  
Though an empty string is a legal URI, would treating it as equivalent
to a null namespace cause any serious harm?

> But it should be solved once, at the level where we map
> from IDL into that language's conventions, and be consistant 
> across the
> whole API.



