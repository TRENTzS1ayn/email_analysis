docno="lists-104-1124350"
received="Fri Aug  3 14:07:30 2001"
isoreceived="20010803180730"
sent="Fri, 3 Aug 2001 12:03:48 -0600 "
isosent="20010803180348"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="Level 3 Events"
id="70E215722F6AD511820A000103D141D40AA48B@thor.aeathtl.com"
expires="-1"


To:"'www-dom@w3.org'"<www-dom@w3.org>

I had overlooked this draft until the recent mention of it.  I guess I have some questions about the symmetry between the grouped and ungrouped (or default grouped) event listeners.  

You should be able to manipulate the ungrouped event listeners through the EventTargetGroup interface.  To do this you would need some value for the eventGroup argument that corresponds to default
group.  This value could either be null or you could add a defaultEventGroup attribute to the DocumentEventGroup interface that is used to identify the default group.  I think the defaultEventGroup
approach would be preferable.

Also, is there a specific reason why EventTargetGroup does not have a dispatchEvent method?  It would seem that it might be useful to direct an event to a specific group of listeners by passing in a
group argument (null could be used for all groups, DocumentEventGroup.defaultGroup for the default group).

I think the name overlap between the methods on EventTarget and EventTargetGroup may cause problems on some platforms.  Might it not be better to use distinct names such as addGroupedEventListener?  I
think it would cause problems if you were trying to expose both the Level 2 methods and Level 3 methods on one COM interface for access by Jscript.

I would assume that dispatchEvent's return value would be false if any listener in any group called preventDefault?

You could potentially add the same listener to the same event target on multiple groups.  Should the Event or EventListener interface be extended so that you could detect which group is active?



