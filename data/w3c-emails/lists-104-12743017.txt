docno="lists-104-12743017"
received="Thu Dec 19 03:53:12 2002"
isoreceived="20021219085312"
sent="Thu, 19 Dec 2002 02:53:25 -0600"
isosent="20021219085325"
name="Shelby Moore"
email="shelby@coolpage.com"
subject="Re: Exposing the critical ACTUAL style values?"
id="4.1.20021219023057.01c9df00(null)"
charset="us-ascii"
inreplyto="Exposing the critical ACTUAL style values?"
expires="-1"


To: Ray Whitmer<rayw@netscape.com>
Cc:www-dom@w3.org


I wanted to elaborate on why one-to-one correspondence between the
presentation state and markup state (objects (DOM) and their style) is the
only useful way to ask questions about the presentation state, when the
goal is to change the presentation state without reducing markup state to
presentation state abstraction.  And this same logic would apply to any
transformed state derived from markup state.

Say you have markup objects, Foo, with style FooStyle.  Now say you ask
some question about presentation state, which does NOT include Foo.  To
modify the presentation state based on the answer, then you would need a
new model of changing the presentation state which is not markup.  Thus
markup is no longer the only way to create a presentation state.  Thus
markup becomes the union of what was markup and the new model of creating
presentation state.  Thus markup abstraction is reduced to presentation
abstraction.

Now say you ask some question about presentation state, which DOES include
Foo and FooStyle.  You can then change Foo and FooStyle to change the
presentation state based on the answer.  Thus markup abstraction remains
markup.

A counter logic might be that the presentation layer is optional.  That is
fine with me, especially if you trust that people won't use it in all cases
where they could reasonably accomplish same with markup only.  Thus, you
must expose the one-to-one correspondences between the markup state and the
transformed derived state, to give the greatest opportunity for markup to
be used exclusively for changing the presentation state.

The only other logic is do not expose transformed states.  But as I pointed
out, then it is impossible to enable scripting on the presentation state,
which is obviously in high demand.

-Shelby Moore



