docno="lists-104-12752001"
received="Thu Dec 19 12:28:51 2002"
isoreceived="20021219172851"
sent="Thu, 19 Dec 2002 11:29:13 -0600"
isosent="20021219172913"
name="Shelby Moore"
email="shelby@coolpage.com"
subject="Re: Exposing the critical ACTUAL style values?"
id="4.1.20021219111407.01859560(null)"
charset="us-ascii"
inreplyto="001001c2a771$85a01880$16dbfc9e&#64;a"
expires="-1"


To:"Joe D Williams"<JOEDWIL@earthlink.net>
Cc:www-dom@w3.org, Ray Whitmer<rayw@netscape.com>


At 07:15 AM 12/19/2002 -0800, Joe D Williams wrote:
>
>I think I found this somewhere in SMIL: 
>
>'In CSS2 and the DOM 2 CSS-OM, the terms
>"specified", "computed" and "actual" are
>used to describe the results of evaluating
>the syntax, the cascade, and the presentation
>rendering...See also section 6.1,
>"Specified, computed, and actual values," of [CSS2]


http://www.w3.org/TR/REC-CSS2/cascade.html#actual-value

What is slightly ambiguous to me from the specification is whether the
ACTUAL values are the values presented (e.g. "displayed") or can the
presentation layer make additional transformations before display the
ACTUAL values???


>and section 5.2.1, "Override and computed style
>sheet," of [DOM2CSS].'


I think you meant section 2.2.1:

http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.html#CSS-Overri
deAndComputed

This is a 1:1 correlation between DOM Element Nodes and CSS computed
styles.  And it is read-only as I suggest should be the case from any
derived transformation layer.


>For me, it is in the idea of serialization.
>That I ought to be able to read the current 
>'style' values in order to sample even reconstruct 
>the instant in an animated interactive interface. 

Interesting point.  In order to serialize time state, in essense we are
serializing presentation state.  The question is what abstraction of
presentation state should we serialize.  The answer is I think contained in
the logic I presented here:

http://lists.w3.org/Archives/Public/www-dom/2002OctDec/0176.html

In summuary, we should only serialize the states that are specified from
markup.  Else we create a brittle standard.  By "brittle", I mean
easy-to-break, difficult to maintain, difficult to conceptualize as a
whole, etc..


>significant parts won't work for html. xhtml1 less limited. 
>xhtml2 yes. 


Could you please elaborate on that statement??

>There is nothing in XML/Schema that forbids this activity. 


But isn't the semantic design question the more important one?


>
>I might be behind in this but I think CSS OM
>is a key because it gives access to attribute values 
>which probably can contain the data you want. 


Actual or computed??

Without actual values, then will not be very useful for modeling the
presentation state in the detail that programming web pages needs.

>As you are obverving and commenting upon, all that 
>is needed is standardized interfaces. 


Thanks very much for you interest and excellent point of relating this
issue to serialization.

-Shelby Moore


>
>Thank You and Best Regards, 
>Joe
>
>
>  
>



