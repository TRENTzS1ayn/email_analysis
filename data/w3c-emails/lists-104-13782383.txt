docno="lists-104-13782383"
received="Thu Jun 12 13:11:25 2003"
isoreceived="20030612171125"
sent="Thu, 12 Jun 2003 10:11:15 -0700"
isosent="20030612171115"
name="Ken Rehor"
email="ken@rehor.com"
subject="Comments on DOM Level 3 events"
id="053c01c33105$a1c92f60$7000a8c0@krehor"
charset="iso-8859-1"
expires="-1"


To:<www-dom@w3.org>,<plh@w3.org>


DOM Events Editor and Working Group:

Thank you for the changes you made in the DOM Level 3 Events specification to support the requirements of VoiceXML 2.0.   In particular, the ordering of events within a group enables our current VoiceXML 2.0 event structure.  

I have a few comments you may want to consider for a future version of the specification.

Ordering of Event Groups

Even though the specification supports ordering of events within a group, it doesn't support the ordering of events between event groups.  Some of the requirements we're considering for VoiceXML 3.0 include changes to the 2.0 event model, in particular handling external asynchronous events.  One potential use of ordered event groups would be to include 'standard' VoiceXML events in one group, and 'external' asynchronous events in a second group.  It may also be useful to enable prioritization of events, assigned by the interpreter developer and possibly even within an application by the developer. For example, external events may need to be handled at a higher priority than other events; on the other hand, it might be necessary in some circumstances to allow the developer to block some or all events by priority.

Event selection

An event handler is selected (see sect 5.2.4 Catch Element Selection http://www.w3.org/TR/voicexml20/#dml5.2.4) based on several conditions that are evaluated at the event throw time. The count attribute specifies the occurance for that event; the cond attribute is an ECMAScript expression which specifies whether the event applies at that time. 

Hierarchical Namespace

In Section 1.5.3, you discuss the concept of the hiearchical name spaces that we've included in VoiceXML, but it isn't clear how this is compatible with your specification.  We have found it to be a very powerful mechanism for selecting categories of events, or as needed, subcategories as well.  It would be helpful to have the DOM Events spec support this.

Please let me know if you would like to discuss our requirements further.

Thanks again for all your support,

Ken Rehor
Co-editor VoiceXML 2.0
ken@rehor.com



