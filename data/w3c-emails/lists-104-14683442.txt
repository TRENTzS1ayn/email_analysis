docno="lists-104-14683442"
received="Tue Mar 18 23:36:10 2003"
isoreceived="20030319043610"
sent="Tue, 18 Mar 2003 23:35:59 -0500"
isosent="20030319043559"
name="Steve Schafer"
email="steve@fenestra.com"
subject="DocumentLS may be more than just a convenience"
id="i1sf7v096b4jqeibsllsfksr230nl6ocl8@4ax.com"
charset="us-ascii"
expires="-1"

To:www-dom@w3.org



The description of the DOM3 Load and Save "convenience interfaces"
states that "The interfaces in this section provide no direct
functionality that can not be achieved with the load and save interfaces
defined in the earlier sections of this specification." But that doesn't
appear to be quite true. DocumentLS.load() and DocumentLS.loadXML() both
replace the contents of an existing document object with the results of
the parse. On the other hand, DOMBuilder.parse() and
DOMBuilder.parseURI() both return newly-instantiated document objects.

It would seem that DOMBuilder.parseWithContext() is capable of doing the
job, but the description of the "is" parameter explicitly states that
"The source document must be an XML fragment, i.e. anything except a
complete XML document."

So there doesn't seem to be any way of using the basic DOMBuilder
interface to replace the contents of an existing document object, short
of creating an entirely new document object and then importing all of
its nodes into the original document. And even that won't work if the
original document's DTD isn't the same as the new one's.

Steve Schafer
Fenestra Technologies Corp.
http://www.fenestra.com/



