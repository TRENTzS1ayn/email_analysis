docno="lists-104-16337849"
received="Fri Aug 29 00:46:52 2003"
isoreceived="20030829044652"
sent="Thu, 28 Aug 2003 23:21:39 -0500"
isosent="20030829042139"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="Re: More L3 Core Comments"
id="3F4ED4D3.9060902@houston.rr.com"
charset="ISO-8859-1"
inreplyto="1062087609.23313.68.camel&#64;jfouffa.w3.org"
expires="-1"


To:www-dom@w3.org


Philippe Le Hegaret wrote:

>On Thu, 2003-07-17 at 00:25, Curt Arnold wrote:
>  
>
>>Interface DOMImplementationSource:
>>
>>I dislike the form of this interface for a couple of reasons: 
>> it 
>>requires that each implementation source to parse the features list 
>>which could have been done once for all implementation sources
>>    
>>
>
>correct, but no having a single String would requires passing a more
>complex structure between the DOMImplementationRegistry and the
>DOMImplementationSource.
>
Since an implementation probably has code to parse the feature string to 
support hasFeature(), preparsing the feature string wouldn't effectively 
reduce the complexity of an implementation.

>We clarified the description of getDOMimplementation as follows:
>[[
>This method returns the first item of the list returned by
>getDOMImplementationList.
>]]
>
>(note that getDOMimplementationList used to getDOMImplementations but
>has been renamed)
>
It was fairly obvious that they should be consistent, but requiring 
duplicate implementations leaves the possibility that they aren't.  
getDOMImplementationList also appeared to be used by nothing which could 
also hide implementation errors.

>>I believe that eliminates any use of DOMImplementationList so that 
>>interface could be eliminated.
>>    
>>
>
>This seems orthogonal to your proposal. getDOMImplementationList returns
>a list of DOM implementations.
>
>  
>
getDOMImplementations() seemed to be required of an implementation 
source but never used by a DOMImplementationRegistry.



