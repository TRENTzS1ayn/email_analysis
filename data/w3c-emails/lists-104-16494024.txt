docno="lists-104-16494024"
received="Mon Sep  8 18:22:12 2003"
isoreceived="20030908222212"
sent="08 Sep 2003 18:22:12 -0400"
isosent="20030908222212"
name="B. Smedberg"
email="bsmedberg@covad.net"
subject="Re: Last Call for DOM Level 3 Load and Save - Non-XML Loaders/Parsers?"
id="3F50DA28.5090408@covad.net"
charset="us-ascii"
inreplyto="Last Call for DOM Level 3 Load and Save - Non-XML Loaders/Parsers?"
expires="-1"


To:www-dom@w3.org





Well, I'm afraid that I may be too late to alter DOM Load and Save, 
because I just discovered the issues, but I would like to raise two issues.

1) DOM Load supports sync/async loading, but DOM Save does not. I don't 
see why an async DOM Save to URI (http PUT or FTP upload, for example) 
should not be supported.

2) a simple extension to the DOM Load and Save interfaces would make the 
interface compatible with serializing non-XML formats. Of course, the 
XML format would be the only "required" format per the spec, but others 
could be supported by particular implementations. For example, mozilla 
contains a serializer that formats a DOM into a plain text 
representation (for multi-part emails, and "save as Text"). In addition, 
it contains an HTML serializer. I think the DOMImplementationLS 
interface could be modified with a single "contentType" parameter:

   DOMParser          createDOMParser(in DOMSTring contentType,
                                      in unsigned short mode,
                                      in DOMString schemaType)
                                         raises(DOMException);
   DOMSerializer      createDOMSerializer(contentType);

The default content-type "text/xml" would be required... other 
content-types, such as "text/plain" or "text/html" would be optional 
implementation extensions.

--BDS



