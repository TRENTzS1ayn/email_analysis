docno="lists-104-1920463"
received="Thu Aug 23 18:03:49 2001"
isoreceived="20010823220349"
sent="Thu, 23 Aug 2001 14:09:58 -0700"
isosent="20010823210958"
name="David Flanagan"
email="david@oreilly.com"
subject="Comment on new Events draft"
id="200108232109.OAA00917@oxymoron.oreilly.com"
expires="-1"


To:www-dom@w3.org


Overall, I like what's been done with the TextEvents module.  Much
clearer in this draft.  I've got 3 comments:

1) I'm still not satisfied with the name of the "textEvent" event type,
however.  Except for the case of one letter, the name of this event type
is the same as the name of the module itself.  And, it is the only event
type name that has the word "event" in its name.  How about just calling
this event type "text".  Then the module would define "keydown", "keyup"
and "text" events.

2) Also, with the introduction of EventListenerList, please also include a
note that explains the interaction between addEventListener(),
removeEventListener() and eventListenerList.item().  I think you either
have to say that addEventListener() appends listeners to the list, or
say that calling addEventListener() may scramble the order of listeners
in the list.  In this latter case, it is never really safe to call
addEventListener() while iterating through the set of listeners with
item(), and this should be noted.  Does removeEventListener() preserve
the order of the registered event listeners that are not removed?  This
needs to be specified.

If it is never useful to call addEventListener() or
removeEventListener() while iterating with item(), then you should
reconsider the requirement that an EventListenerList be live.

3) Finally, the first paragraph of 1.6.3 Text events has a cut-and-paste
error and refers to MouseEvents.

      David Flanagan



