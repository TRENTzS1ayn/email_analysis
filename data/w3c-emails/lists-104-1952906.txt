docno="lists-104-1952906"
received="Fri Aug 24 15:53:53 2001"
isoreceived="20010824195353"
sent="Fri, 24 Aug 2001 13:50:34 -0600"
isosent="20010824195034"
name="Arnold, Curt"
email="Curt.Arnold@hyprotech.com"
subject="RE: DOM 3 Events comments (EventListenerList)"
id="70E215722F6AD511820A000103D141D40AA50E@thor.aeathtl.com"
inreplyto="DOM 3 Events comments (EventListenerList)"
expires="-1"


To:"'www-dom@w3.org'"<www-dom@w3.org>,"'w3c-wai-uq@w3.org'"<w3c-wai-uq@w3.org>

Philippe Le Hegaret wrote:
> The WAI folks would like to have access to scripting 
> semantics and activation schemes, and thus have access to 
> scripting or role of each event attached to element. the 
> EventListener list improves a bit the situation. We cannot 
> provide a documentation on event handlers to describe what 
> they do, tough. We're going to reconsider the security concerns.

Instead of allowing an external agent to determine who's listening, maybe the better approach is to define an event that listeners MAY respond to with the appropriate information.  This might involve
a custom event type  (or the property bag event that I discussed in the earlier message).

propBagEvent = doc.createEvent("PropertyBagEvents");
propBagEvent.initPropBag("SemanticRequest");
Element.dispatchEvent(propBagEvent,false);
If(propBagEvent.getProperty("http://www.w3.org/2001/ImEvil#") == "true") {
alert("At least one listener is Evil");
}

----

function handleEvent(evt) {
    if(evt.type == "SemanticRequest") {
if(!evt.getProperty("http://www.w3.org/2001/ImEvil#","true"))
evt.setProperty("http://www.w3.org/2001/ImEvil#","true");
}
    }
}


From the example, you can tell I have no idea of the types of information that the WAI is trying to collect, but maybe some time of optional disclosure approach could address the issue instead of
leaving listeners exposed to interference.



