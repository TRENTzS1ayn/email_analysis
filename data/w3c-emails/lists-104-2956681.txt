docno="lists-104-2956681"
received="Wed Oct 10 13:22:10 2001"
isoreceived="20011010172210"
sent="Wed, 10 Oct 2001 13:21:36 -0400"
isosent="20011010172136"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: DOM Level 3 XPath Specification and entity references"
id="OFA7F1B774.B0A4BF0A-ON85256AE1.005DD1F6@pok.ibm.com"
charset="us-ascii"
inreplyto="DOM Level 3 XPath Specification and entity references"
expires="-1"

To:www-dom@w3.org



On Wednesday, 10/10/2001 at 09:52 MST, David Brownell <david-b@pacbell.net>
wrote:
> ... I presume that any discussions about converging the data
> models haven't been successful?

Since the Infoset has decided that its role is descriptive rather than
prescriptive ("if the data happens to exist, this is one way in which it
might appear -- but it might not"), I don't expect this to change.

> The DOM house has a little too much gingerbread for most
> purposes I've seen.

Some of that's left over from "DOM Level 0" compatability requirements.
Some is because, as with any committee project, one man's gingerbread is
another man's foundation. I think the DOM core has actually managed to stay
tolerably clean, given the requirements it's had to face and given how many
of those (eg namespaces) were afterthoughts.

The DOM WG has periodically investigated the concept of defining official
subsets smaller than Core DOM, but  every time we look at that it turns out
that there's no clear agreement on what subsets are universal enough to be
worth standardizing.

>Better defaults would help

Before DOM Level 3, we had no API addressing how a DOM tree would be built
and thus couldn't specify defaults or how to override them. The
introduction of the Load/Save chapter gives us a possible handle on that
issue... but of course, that still only affects DOMs produced by that API;
if the DOM was built by other code, we can make suggestions but really
can't enforce them... and generally shouldn't try, since there are
legitimate reasons for not doing so.

The DOM's built-in operations have to be able to deal with any legitimate
state of the DOM, and should do so without undue side effects, so our XPath
support has to be able to work within that framework. This yields a few
minor warts, easily hidden from folks who don't care about them.

(The Namespace Node support may not be such a minor wart, especially as
future versions of XPath are likely to redesign how those are handled. Oh
Well.)

______________________________________
Joe Kesselman  / IBM Research



