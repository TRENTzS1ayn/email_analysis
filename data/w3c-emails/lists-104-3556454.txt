docno="lists-104-3556454"
received="Thu Nov  8 17:53:21 2001"
isoreceived="20011108225321"
sent="Thu, 8 Nov 2001 16:06:27 -0500"
isosent="20011108210627"
name="Jesse McCarthy"
email="mccarthy36@earthlink.net"
subject="What is the meaning of the DOM ECMAScript binding?"
id="MWMail.ijnkknbr@host.none"
expires="-1"

To:www-dom@w3.org


I asked a similar question on this list previously (see http://lists.w3.
org/Archives/Public/www-dom/2001OctDec/0064.html ), but I am not completely 
convinced / satisifed with the answer I got. 

Is the DOM ECMAScript binding intended to be taken literally?  For instance, is 
the meaning of the binding that the 'Document' interface should be accessed as 
an object called 'Document', and not 'document' or 'custardPudding', or 
_anything_ else? 

It seems to me that the answer must be yes, that it is intended to be taken 
literally.  In my initial post I cited the example of the Netscape 6.1 browser 
which I have been using to experiement with the DOM, and which provides an 
object called 'document' that represents the 'HTMLDocument' interface (which 
inherits from 'Document', of course).  I asked if that implementation _fails_ 
to comply with the ECMAScript binding and the individual who replied answered 
that it "is not inconsistent".  I think that is wrong.  I don't see anything in 
the DOM Core spec or the ECMAScript binding identified as 'document' so it must 
be proprietary (I'm well aware that it is historical).  If the purpose of the 
binding is not to establish actual object names, then I don't see what purpose 
it would serve. 

Can someone please answer this question for me definitively?

Thanks,
Jesse McCarthy



