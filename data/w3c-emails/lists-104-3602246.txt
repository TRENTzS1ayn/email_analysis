docno="lists-104-3602246"
received="Fri Nov  9 08:17:29 2001"
isoreceived="20011109131729"
sent="Fri, 9 Nov 2001 08:06:10 -0500"
isosent="20011109130610"
name="Jesse McCarthy"
email="mccarthy36@earthlink.net"
subject="Re: What is the meaning of the DOM ECMAScript binding?"
id="MWMail.rfjnahin@host.none"
inreplyto="What is the meaning of the DOM ECMAScript binding?"
expires="-1"

To:neil_laurance@yahoo.co.uk,www-dom@w3.org


Neil Laurance <neil_laurance@yahoo.co.uk> wrote on 11/9/01 6:39:04 AM:
>Jesse,
>I think you can rely on Navigator and Explorer to follow DOM, since they are
>both involved in its conception. A bit of example code should illustrate how to
>use the DOM API in NS, and IE:
>
>var myDocument = window.document;  // Document object

>I hope this explains how to use DOM. Apologies for any bugs or bad practices ;)
>
>Cheers, Neil

The problem with that, Neil, is that, as a couple of individuals have been good 
enough to explain to me, there is nothing in the DOM specification that 
indicates what the name of the object representing the 'Document' object will 
be -- it could be anything.  So, as I understand it, Netscape and Microsoft can 
both release browsers that are 100% DOM compliant but _do not_ provide access 
to the 'Document' object with the same object name.  There is no guarantee that 
the 'Document' object will be exposed as 'window.document'.  E.g. Netscape 
could release a browser that exposes the 'Document' object as 'document' and 
Microsoft could expose the same object as 'Microsoft'.  If my understanding of 
the situation is correct, then you can see the dilemma. 



