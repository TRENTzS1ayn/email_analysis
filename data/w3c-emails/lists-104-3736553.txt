docno="lists-104-3736553"
received="Fri Nov  9 21:23:57 2001"
isoreceived="20011110022357"
sent="Fri, 09 Nov 2001 16:49:38 -0800"
isosent="20011110004938"
name="David Brownell"
email="david-b@pacbell.net"
subject="Re: What is the meaning of the DOM ECMAScript binding?"
id="037101c1698e$89b07540$6800000a@brownell.org"
charset="iso-8859-1"
inreplyto="OFCEDF27BA.F98CB1D3-ON85256AFE.007F5B24&#64;pok.ibm.com"
expires="-1"

To: Joseph Kesselman<keshlam@us.ibm.com>
Cc:www-dom@w3.org


> The DOM is an API, not a set of specific variables. It expressed absolutely
> no opinion on what your variable are called; it just says that if you have
> an object which presents the Document interface, it will have thus-and-such
> methods and properties and behaviors.

On the other hand, to the extend that it's an API that can't be bootstrapped
(through standard-specified symbols) it's guaranteeing portability bugs.

I see no reason why DOM shouldn't standardize ways to get at a Document
in those contexts where a particular implementation ("the one glued to this
browser window/database/...") isn't needed.

- Dave



