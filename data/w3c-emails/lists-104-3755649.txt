docno="lists-104-3755649"
received="Mon Nov 12 10:35:45 2001"
isoreceived="20011112153545"
sent="Mon, 12 Nov 2001 09:38:04 -0500"
isosent="20011112143804"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: What is the meaning of the DOM ECMAScript binding?"
id="OF2ED8A0EC.8471CE44-ON85256B02.004E9B9B@pok.ibm.com"
charset="us-ascii"
inreplyto="What is the meaning of the DOM ECMAScript binding?"
expires="-1"

To:www-dom@w3.org



> On the other hand, to the extend that it's an API that can't be
bootstrapped
> (through standard-specified symbols) it's guaranteeing portability bugs.

I have to disagree strongly with this statement. Not guaranteeing
portability, and guaranteeing nonportability, are two different things. We
guarantee portability of the APIs defined in our spec.

Yes, we could enlarge what we cover. We're already doing so; the Load/Save
API will provide a standard way to access a document given a
DOMImplementation. And we have looked at the question of how to boostrap a
DOMImplementation.

But the question of which is/are "the current document(s)" is extremely
specific to individual platforms, and I'm still not convinced that it's
something the DOM should be specifying. "Document" is definitely a DOM
concept; "current" really isn't.


We completely agree that it would be nice if the rest of the browser
platform was standardized. I don't think the DOM Working Group is the best
place to do it, either from an architectural point of view or from the
simple question of available developer hours. And in fact I think our
experience with the Views chapter established that the DOM doesn't have the
resources or interest to accept that kind of broadening of its mission.


Remember, the DOM isn't -- and doesn't want to be! -- the sole W3C API.

______________________________________
Joe Kesselman  / IBM Research



