docno="lists-104-4220058"
received="Thu Dec 13 09:29:05 2001"
isoreceived="20011213142905"
sent="Thu, 13 Dec 2001 09:28:26 -0500"
isosent="20011213142826"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="RE: Enumeration of EventListeners in DOM Level 3 Events"
id="OFDBC345E0.D92CA921-ON85256B21.004ED200@pok.ibm.com"
charset="us-ascii"
inreplyto="Enumeration of EventListeners in DOM Level 3 Events"
expires="-1"

To:www-dom@w3.org,w3c-wai-ua@w3.org



>As Ray mentioned, the current proposal would only give you the object
>address of the handler and the assistive technology would have to
fabricate
>appropriate UIEvents by deceiphering from some sort of universal bytecode
>reflection on the Java, JavaScript, VBScript, Java, Python, C#, etc,
>implementation of the handler.  Without diving into the source code, how
>would you know what keystrokes a keydown handler responded to?

For what it's worth, that's the rock that past requests for this function
have foundered on.  Returning references to the handlers is not difficult,
and within a dedicated application which may have its own mechanisms for
looking up those instances and determining who attached them and why it
might be useful. But I had real trouble figuring out how it would address
WAI's needs, since WAI needs to operate in an environment where the
handlers in use are not so predictable or controlled.

Might it make sense to work through a real WAI use case, so we can look at
what the real need is and whether this proposal addresses it at all.

______________________________________
Joe Kesselman  / IBM Research



