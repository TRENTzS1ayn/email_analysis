docno="lists-104-4515861"
received="Tue Dec 18 18:44:16 2001"
isoreceived="20011218234416"
sent="Tue, 18 Dec 2001 15:44:08 -0800"
isosent="20011218234408"
name="Stanley Guan"
email="Stanley.Guan@oracle.com"
subject="AS: ASContentModel instead of ASElementDeclaration"
id="3C1FD4C8.8B60D3DD@oracle.com"
charset="us-ascii"
expires="-1"


To:www-dom@w3.org,"Benjamin C. Chang"<Ben.Chang@oracle.com>, K Karun<kkarun@us.oracle.com>

In the example, (A, (B* | C), D+) was represented by:

(snip)

ASContentModel exE = {
                 listOperator          = AS_SEQUENCE;
                 minOccurs             = 1;
                 maxOccurs             = 1;
                 subModels             = {(ASElementDeclaration A),
                                          (ASContentModel exBC),
                                          (ASContentModel exD)};
             }

(snip)

ASContentModel exBC = {
                 listOperator          = AS_CHOICE;
                 minOccurs             = 1;
                 maxOccurs             = 1;
                 subModels             = {(ASContentModel exB),
                                          (ASElementDeclaration C)};
             }

(snip)

They should be changed to:
ASContentModel exE = {
                 listOperator          = AS_SEQUENCE;
                 minOccurs             = 1;
                 maxOccurs             = 1;
                 subModels             = {(ASContentModel exA),
                                          (ASContentModel exBC),
                                          (ASContentModel exD)};
             }
and
ASContentModel exBC = {
                 listOperator          = AS_CHOICE;
                 minOccurs             = 1;
                 maxOccurs             = 1;
                 subModels             = {(ASContentModel exB),
                                              (ASContentModel exC)};
             }

The reason for changing from ASElementDeclaration to
ASContentModel is occurrences can only be specified in
ASContentModel.

For the 2nd declaration, we want to specify that it corresponds
to:
    (B* | C)
not
    (B* | C+) or something else



