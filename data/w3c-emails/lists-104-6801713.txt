docno="lists-104-6801713"
received="Fri Jan 18 15:56:32 2002"
isoreceived="20020118205632"
sent="Fri, 18 Jan 2002 15:55:55 -0500"
isosent="20020118205555"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: TreeWalker detach()"
id="OF6A61C501.F63EC61E-ON85256B45.0072219A@pok.ibm.com"
charset="us-ascii"
inreplyto="TreeWalker detach()"
expires="-1"

To: Elliotte Rusty Harold<elharo@metalab.unc.edu>
Cc:www-dom@w3.org



>Is there any particular reason NodeIterator has a detach() method and
>TreeWalker doesn't?

Because NodeIterator repairs itself as the document changes under it ("list
position semantics"), its implementations may involve event listeners or
the like which impose a performance burden on the DOM as long as the
NodeIterator is active. Having a way to deactivate it is therefore
important. Being able to do so immediately, rather than waiting until the
garbage collector (in GC langauges) gets around to cleaning it up, may make
a significant difference in application performance.

TreeWalker's "current node semantics" do not require fixup in response to
document mutation, so the same situation doesn't arise.

______________________________________
Joe Kesselman  / IBM Research



