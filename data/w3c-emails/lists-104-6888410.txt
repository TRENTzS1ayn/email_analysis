docno="lists-104-6888410"
received="Mon Jan 21 12:40:25 2002"
isoreceived="20020121174025"
sent="Fri, 11 Jan 2002 13:07:27 -0500 (EST)"
isosent="20020111180727"
name="Thierry Kormann"
email="tkormann@ilog.fr"
subject="Re: ISSUE: clientX and clientY coordinates in DOM MouseEvents"
id="200201111807.g0BI74919848@quokka.inria.fr"
charset="iso-8859-1"
inreplyto="70E215722F6AD511820A000103D141D40AA724&#64;thor.aeathtl.com"
expires="-1"


To:"Arnold, Curt"<Curt.Arnold@hyprotech.com>,"'www-dom@w3.org'"<www-dom@w3.org>
Cc:"'www-svg@w3.org'"<www-svg@w3.org>

On Friday 11 January 2002 18:30, Arnold, Curt wrote:
> Thierry wrote:
> > The SVG specification has changed this definition and the
> > clientX and clientY attributes represents viewport
> > coordinates for the coresponding svg element.
>
> Could you provide a specific reference for that "change".  I don't recall
> and couldn't find anything in the SVG 1.0 recommendation (and haven't
> checked in the 1.1 drafts).  The SVG 1.0 drafts seem to link directly to
> the DOM 2 Events specs for the definitions of MouseEvent.

http://www.w3.org/TR/SVG/svgdom.html#RelationShipWithDOM2Events

> From my experience with SVG (specifically the Adobe SVG Viewer), I had to
> jump through hoops to get the coordinates from user agent coordinates back
> into the coordinate space of the svg element.
>
> If it is not there already, a better option that A or B is adding a method
> to SVGElement that can take a user agent coordinate and return an SVGPoint
> in that coordinate space.
>
> function onmouseover(e)
> {
>    var pointhere = e.target.ConvertClient(e.clientX,e.clientY);
> }

That's a possible solution. We still have the issue that both SVG and DOM are 
a Rec where clientX and clientY have a different meaning.

Thierry.



