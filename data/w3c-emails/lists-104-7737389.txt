docno="lists-104-7737389"
received="Mon Feb 11 20:02:32 2002"
isoreceived="20020212010232"
sent="11 Feb 2002 20:02:07 -0500"
isosent="20020212010207"
name="Philippe Le Hegaret"
email="plh@w3.org"
subject="Re: HTMLFormElement submit Method"
id="1013475728.25719.342.camel@jfouffa"
inreplyto="1013421437.2099.253.camel&#64;cy209696-a"
expires="-1"

To: John Keiser<jkeiser@iname.com>
Cc: Steven Elliott<elliott@mail.cibertribe.pt>, WWW DOM<www-dom@w3.org>


On Mon, 2002-02-11 at 04:57, John Keiser wrote:
> It should be defined to not fire onSubmit.  No JavaScript functions fire
> events that I know of (at least in forms).  onChange doesn't happen when
> you change .value or .checked.  It is not the user who is calling JS
> .submit().  It is the page designer.  We presume that the designer knows
> enough about his app that when he calls submit() without validating he's
> *deliberately* circumventing his stuff for whatever reason.  This gives
> the prog
> 
> IE, NS4.x, NS6.x, and Konqueror work this way.  What widely-used
> implementations *do* fire onSubmit() that make it impossible to define
> it this way in the DOM?

As reported by Glenn Adams:
"In DM3, the invocation of the submit() method causes the firing of the
ONSUBMIT event prior to performing its intended semantics, and, if the
event returns a value that is equivalent (coercable) to FALSE, then
those intended semantics (form submission) are ignored."

So you do have implementation that are firing the event. This is why we
were not able to take one direction on an other. Now, regarding Steven's
message, i don't have anything against some wording in the specification
saying the onsubmit event is not guaranteed to be called.

Philippe



