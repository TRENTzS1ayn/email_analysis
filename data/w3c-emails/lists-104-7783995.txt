docno="lists-104-7783995"
received="Thu Feb 14 10:02:22 2002"
isoreceived="20020214150222"
sent="Thu, 14 Feb 2002 10:01:45 -0500"
isosent="20020214150145"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="Re: C++ binding"
id="OFCE7AD291.B84FDFE8-ON85256B60.00513213@pok.ibm.com"
charset="us-ascii"
inreplyto="C++ binding"
expires="-1"

To:<www-dom@w3c.org>



There have been several DOM bindings for C++. The problem is that there
isn't a clear agreement on whether to make them behave like the Java and
Javascript bindings, with automatic memory management, or like a more
traditional C/C++ design with the requirement that users explicitly keep
track of when data goes out of use and discard/free its memory at that
time. Since the DOM WG left memory management as a topic to be addressed by
the language binding, both approaches are entirely legitimate, and each has
advantages and disadvantages -- implicit is significantly easier to use,
explicit is easier to implement (and may be more efficient).

There are also debates over which version of UTF-16 text strings should be
used as the binding for DOMString, and a few smaller issues.

So far, those disagreements -- and the fact that it's often a matter of
picking an application niche rather than there being a clear better/worse
choice -- has kept the DOM WG from officially recognizing any one specific
solution and blessing a set of abstract classes to represent it. I'd love
to see that gap closed, but we need to find some way to get the C++
community to duke it out and come up with a consensus proposal ... or at
least a small number of proposals.


You might want to look at existing C++ implementations of the DOM, to see
where the disagreements are. Some (probably not all) of them are listed at
http://dmoz.org/Computers/Programming/Internet/W3C_DOM/


______________________________________
Joe Kesselman  / IBM Research



