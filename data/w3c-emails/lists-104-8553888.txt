docno="lists-104-8553888"
received="Thu Mar 14 07:58:30 2002"
isoreceived="20020314125830"
sent="Thu, 14 Mar 2002 14:03:18 +0100"
isosent="20020314130318"
name="Jonas Sicking"
email="sicking@bigfoot.com"
subject="Re: Comments and questions on text node interface"
id="002901c1cb58$9cfd6fa0$b3e0d0d9@telia.com"
charset="iso-8859-1"
inreplyto="3C90707E.1080302&#64;netscape.com"
expires="-1"


To:<www-dom@w3.org>
Cc:"Ray Whitmer"<rayw@netscape.com>

Ray Whitmer wrote:
> Stefan Wachter wrote:
> > 2. replaceWholeText method
> >
> > This method has a lot of tree-processing logic that should not be
> > executed by a child node on its parent node. I would prefer the parent
> > node to have control over the process. Therefore I propose a method on
> > the node interface:
> >
> > /**
> > * Replaces the logically-adjactent text nodes always by a NEW text node.
> > */
> > public Text replaceWholeText(int anIndex); // alternatively:
> > replaceWholeText(Text aTextNode);
>
> See the above objections to using an index and the more-complex signature.

I have to ask what is the intended use for replaceWholeText? I can defenetly
see the use getting WholeText since it fits better with XPath. But chainging
it feels very awkward since it could morph big parts of tree. I think a
better way of editing a tree using an "XPath/infoset model" would be to have
users normalize the tree first and then use the normal interfaces.

/ Jonas Sicking



