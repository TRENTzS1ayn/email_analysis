docno="lists-104-9294092"
received="Mon Jul  8 02:34:06 2002"
isoreceived="20020708063406"
sent="Sun, 7 Jul 2002 23:34:03 -0700"
isosent="20020708063403"
name="Susan Lesch"
email="lesch@w3.org"
subject="Comments for DOM Level 2 HTML"
id="p05111b00b94ee1890b20@[192.168.123.158]"
charset="us-ascii"
expires="-1"


To:www-dom@w3.org


Hello,

These are editorial comments for your DOM Level 2 HTML Candidate
Recommendation [1]. They're about a week late so please ignore if they
are no longer useful.

s/ArborText/Arbortext/
s/working group/Working Group/
s/upper case/uppercase/
s/lower case/lowercase/
s/API's/APIs/
s/and is independent of the case/and are independent of the case/
s/necessarely/necessarily/
s/Corba/CORBA/
s/Java Language/Java language/
s/chair/Chair/

1.3 has one long paragraph that could be rewritten as three:

   The DOM HTML Level 1 APIs [DOM Level 1] were originally intended to
   be used only for HTML 4.01 documents [HTML 4.01]. The APIs were
   defined well before XHTML 1.0 [XHTML 1.0] became a specification,
   and before it was worked on by the HTML Working Group.

   From the DOM point of view, the biggest difference between HTML 4.0
   (and earlier) and XHTML 1.0 is that XHTML is case sensitive,
   whereas HTML 4.01 is case insensitive. The HTML case insensitivity
   is also reflected in the DOM HTML APIs. For consistency, element
   and attribute names are exposed as all uppercase when used on an
   HTML document, regardless of the character case used in the markup.
   Since XHTML is based on XML, in XHTML everything is case sensitive,
   and element and attribute names must be lowercase in the markup.

   Developers need to take two things into account when writing code
   that works on both HTML and XHTML documents. When comparing element
   or attribute names to strings, the string compare needs to be case
   insensitive, or the element or attribute name needs to be converted
   into lowercase before comparing against a lowercase string. Second,
   when calling methods that are case insensitive when used on a HTML
   document (such as getElementsByTagName() and namedItem()), the
   string that is passed in should be lowercase.

By the time we get to the note in 1.3, we've read this three times:
   Note: The interfaces provided in this document are only for [HTML
   4.01] and [XHTML 1.0] documents and are not guaranteed to work with
   any future version of XHTML.
Suggest omitting this note and/or one occurrence in 1.1.

In 1.5:
   An HTMLDocument is the root of the HTML hierarchy and holds the
   entire content. Besides providing access to the hierarchy, it also
   provides some convenience methods for accessing certain sets of
   information from the document.
could be:
   An HTMLDocument is the root of the HTML hierarchy and holds the
   entire content. It provides access to the hierarchy, and some
   convenience methods.

In 1.6.3, no need to repeat all of this:
   If the document is an HTML 4.01 document the element type names
   exposed through a property are in uppercase. For example, the body
   element type name is exposed through the tagName property as BODY.
   If the document is an XHTML 1.0 document the element name is
   exposed as it is written in the XHTML file. This means that the
   element type names are exposed in lower case for XHTML documents
   since the XHTML 1.0 DTDs defines element type names as lower case,
   and XHTML, being derived from XML, is case sensitive.
could be:
   If the document is HTML 4.01, element type names
   exposed through a property are in uppercase. If the document is XHTML
   1.0, element names are lowercase, exposed as written in the XHTML file.

In A.1, "now" will mean nothing later.
   The DOM Level 2 specifications are now using Corba 2.3.1 instead of
   Corba 2.2.
could be:
   The DOM Level 2 specifications use CORBA 2.3.1.

   Therefore, case sensitivity in methods depends on the Document
   supports the feature "XML" as well as "HTML".
could be:
   Therefore, case sensitivity in methods depends on Document
   support for the feature "XML" as well as "HTML".


In B, is this still important or can it be omitted or cut somewhat?
   Unfortunately the OMG IDL in this appendix is not conformant due to
   problems in the validator that was used to validate Level 1. The
   readOnly attribute on the HTMLInputElement and HTMLTextAreaElement
   interfaces, as well as the object attribute on the
   HTMLAppletElement interface, are not conformant with OMG IDL 2.2.
   The valueType attribute on the HTMLParamElement interface is not
   conformant with OMG IDL 2.3.1, which hadn't been released when DOM
   Level 1 [DOM Level 1] was published.
For example, you could state facts rather than problems:
   The readOnly attribute on the HTMLInputElement and
   HTMLTextAreaElement interfaces, as well as the object attribute on
   the HTMLAppletElement interface, are not conformant with OMG IDL
   2.2. The valueType attribute on the HTMLParamElement interface is
   not conformant with OMG IDL 2.3.1.

[1] http://www.w3.org/TR/2002/CR-DOM-Level-2-HTML-20020605/

Best wishes for your project,
-- 
Susan Lesch           http://www.w3.org/People/Lesch/
mailto:lesch@w3.org               tel:+1.858.483.4819
World Wide Web Consortium (W3C)    http://www.w3.org/



