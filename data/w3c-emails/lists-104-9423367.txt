docno="lists-104-9423367"
received="Wed Jul 17 11:50:47 2002"
isoreceived="20020717155047"
sent="Wed, 17 Jul 2002 11:50:13 -0400"
isosent="20020717155013"
name="Joseph Kesselman"
email="keshlam@us.ibm.com"
subject="RE: Mixed level 1 and level 2 nodes woes"
id="OFBC902F4A.AF733D03-ON85256BF9.0055DC07@us.ibm.com"
charset="US-ASCII"
inreplyto="Mixed level 1 and level 2 nodes woes"
expires="-1"

To:"Sander Bos"<sander@x-hive.com>
Cc:"WWW DOM"<www-dom@w3.org>


                                                                                                               
                                                                                                               
                                                                                                               


This too was discussed. We felt we couldn't deprecate the Level 1 non-
namespaced node creation methods because in the proper context -- writing a
pure Level 1 application but compiling/running it against a Level 2 parser,
for example -- the old calls actually are the right answer. Thus, until
we're ready to withdraw Level 1 entirely, deprecation isn't really the
right answer.

At least, not as long as there are managers out there who insist that a
clean compilation means no deprecated calls rather than letting folks
explicitly accept and sign off on specific warnings. (And frankly, I'm not
sure they're wrong.)


I agree that it's an ugly situation. It's what we've got.


I do sorta like the idea of an importNode operation which would try to
reconcile namespaces as it went. But I'm not sure whether that should be
core DOM rather than a utility function written on top of the DOM. Among
other things, I suspect that the question of what to do when this fix-up
_can't_ be performed -- when a Level 1 node uses a prefix which can't be
resolved in the source document -- is going to be application-specific.

______________________________________
Joe Kesselman  / IBM Research



