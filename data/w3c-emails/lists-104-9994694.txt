docno="lists-104-9994694"
received="Thu Aug 29 22:55:46 2002"
isoreceived="20020830025546"
sent="Fri, 30 Aug 2002 13:32:36 +1100"
isosent="20020830023236"
name="Duncan_Stodart@insession.com"
email="Duncan_Stodart@insession.com"
subject="Comment/Suggestion: DOM L3 L&amp;S"
id="OFF2FE892C.F083431C-ONCA256C25.000D5B79-CA256C25.000E13B9@LocalDomain"
charset="us-ascii"
expires="-1"

To:www-dom@w3.org


With the current interfaces there is good no way for a calling application 
to programatically decide what action to take according to the reason for 
parsing failure.

My suggestion is to extent the exising DOMError interface to include two 
more read only attributes: domain (DOMString) and error code (unsigned 
short).  W3C could define a set of general error codes that parser 
implementations can choose to implement, but allows different 
implementations to extend the error code set in seperate domains.  This 
way calling applications can look at the domain and error code and easily 
make a decision on what action to take (eg poorly formed XML versus I/O 
error versus validation error).



