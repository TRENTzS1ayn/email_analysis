docno="lists-105-0089054"
received="Thu Sep 18 12:44:41 2003"
isoreceived="20030918164441"
sent="Thu, 18 Sep 2003 12:40:01 -0400"
isosent="20030918164001"
name="Elliotte Rusty Harold"
email="elharo@metalab.unc.edu"
subject="Re: i18n reviews of DOM 3 Core and Load&amp;Save"
id="p06002000bb8f901e9eac@[192.168.254.4]"
charset="us-ascii"
inreplyto="OF2D72DEEC.53AB1FA5-ON85256DA5.004797FD-85256DA5.004805F4&#64;us.ibm.com"
expires="-1"


To: Joseph Kesselman<keshlam@us.ibm.com>
Cc: Francois Yergeau<FYergeau@alis.com>, Johnny Stenback<jst@w3c.jstenback.com>,"'www-dom@w3.org'"<www-dom@w3.org>,www-dom-request@w3.org


At 9:06 AM -0400 9/18/03, Joseph Kesselman wrote:


>Since parsers are required to accept all three (UTF8 and both byte-orders
>of UTF16, with appropriate byte-order mark), generating any of the three as
>the default output encoding should result in a document that all parsers
>will accept.

I'm thinking of Java code, (or C++, or Perl) but not XML. If I tell 
the serializer to generate UTF-8 I don't want it to work in one 
implementation but fail in another that only supports UTF-16.

-- 

   Elliotte Rusty Harold
   elharo@metalab.unc.edu
   Processing XML with Java (Addison-Wesley, 2002)
   http://www.cafeconleche.org/books/xmljava
   http://www.amazon.com/exec/obidos/ISBN%3D0201771861/cafeaulaitA



