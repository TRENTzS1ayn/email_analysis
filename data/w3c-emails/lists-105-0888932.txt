docno="lists-105-0888932"
received="Wed Oct 29 12:52:13 2003"
isoreceived="20031029175213"
sent="Wed, 29 Oct 2003 11:48:06 -0600"
isosent="20031029174806"
name="Curt Arnold"
email="carnold@houston.rr.com"
subject="L3 Last call issue arnold-16"
id="3F9FFD56.8030406@houston.rr.com"
charset="ISO-8859-1"
expires="-1"


To:www-dom@w3.org


Regarding http://www.w3.org/2003/06/09-dom-core-issues/issues.html#arnold-16

The response only addressed only some of the issues raised in the 
original message.  The issues were

1. Bitmask operations are difficult to use
2. Determining all possible relationships between the nodes may be more 
expensive than just the relationship of interest to the caller.

On these two issues, I'm satisified with preserving a single method 
returning a bitmask.

3. Fabrication of order between nodes in different documents and between 
attributes.

I am not sure of the motivation, but the spec seems insistant on 
fabricating a sequence where there is none.   The  need for order is 
such that if nodes in different documents are compared, not being able 
to fabricate an order is considered cause for an exception when the 
caller might only want to know if they are in the same document or not.

4. Introduction of an axes set inconsistent with XPath

The CONTAINS and CONTAINED_BY axes are similar, but not identical, to 
XPath's descendant:: and ancestor:: axes.  I would prefer not 
introducing a different set of axes, but defining the bit's in terms of 
XPath expressions that should be true when the bit is set.  For example,

DOCUMENT_POSITION_DESCENDANT:    $other = descendant::*
DOCUMENT_POSITION_ANCESTOR:          $other = ancestor::*
DOCUMENT_POSITION_SELF                       $other = .
DOCUMENT_POSITION_FOLLOWING        $other = following::*

etc



