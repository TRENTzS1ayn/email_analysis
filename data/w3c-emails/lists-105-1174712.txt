docno="lists-105-1174712"
received="Thu Dec 18 05:05:09 2003"
isoreceived="20031218100509"
sent="Thu, 18 Dec 2003 11:05:02 +0100"
isosent="20031218100502"
name="Martin Bernauer"
email="bernauer@big.tuwien.ac.at"
subject="[Announcement] DOM Composite Events"
id="005001c3c54e$67512d00$d0a8a8c0@merzouga"
charset="us-ascii"
expires="-1"

To:<www-dom@w3.org>,<xerces-j-user@xml.apache.org>



Hello all,

(This is closely related to the DOM Events module and non-commercial)

we have developed an approach and implemented a prototype to detect
composite events in XML documents using the DOM Event module and Xerces'
implementation of it. Whereunder a "composite event" we refer to a
combination of "primitive events", most likely DOM mutation events, which
represent modifications of XML documents. 

The motivation behind our work was that applications often need to react to
situations that are not represented by a single primitive event but by a
combination of multiple primitive events, i.e., a composite event. For
example if one wants to re-calculate a purchase order's total order value
(by multiplying price by quantity for each item and summing it up) one
cannot react upon the insertion of a price element or quantity element,
because the respective other element may not have been inserted yet, but has
to wait until both elements are inserted into the document. Such composite
events can be declaratively defined and detected by our approach.

Thereby the logic to detect composite events is not coded into the
application but can be defined separately in a declarative way.

You can find more information, examples, and the prototype at
http://www.big.tuwien.ac.at/research/prototypes/composite-events

Regards,
Martin Bernauer

Institute for Software Technology and Interactive Systems
Vienna University of Technology
Austria



