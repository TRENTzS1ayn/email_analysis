docno="lists-105-1450863"
received="Sat May  1 06:03:03 2004"
isoreceived="20040501100303"
sent="Sat, 1 May 2004 05:09:44 -0400"
isosent="20040501090944"
name="Elliotte Rusty Harold"
email="elharo@metalab.unc.edu"
subject="Re: Request for review: XOP"
id="p06010204bcb9177849c6@[192.168.254.88]"
charset="us-ascii"
inreplyto="76743B48-9AF2-11D8-9F73-000A95BD86C0&#64;bea.com"
expires="-1"


To: Mark Nottingham<mark.nottingham@bea.com>
Cc:www-dom@w3.org, XMLP Dist App<xml-dist-app@w3.org>,xmlp-comments@w3.org


I have no particular problem with the idea of packaging binary data 
along with an XML document in a MIME envelope. It seems a reasonable 
thing to do for some use cases. However, a XOP envelope is not an XML 
document, though it contains such a document, in addition to binary 
data.

It is therefore unreasonable to expect XML APIs such as DOM to do 
more than process the XML content of a XOP envelope. Doing so would 
be actively harmful to the XML community. It would pollute DOM with 
features that have no function when processing XML, as opposed to 
XOP. Processing XOP requires a XOP API, not an XML API.

All the fancy language about infosets notwithstanding, it's clear 
you're not interested in processing XML. A XOP document is not an XML 
document, and you're not even willing to expose it through standard 
XML APIs. XOP may be useful, but it's clearly not XML. Please don't 
ask the XML community to break its standards to fit your new and 
different invention.
-- 

   Elliotte Rusty Harold
   elharo@metalab.unc.edu
   Effective XML (Addison-Wesley, 2003)
   http://www.cafeconleche.org/books/effectivexml
   http://www.amazon.com/exec/obidos/ISBN%3D0321150406/ref%3Dnosim/cafeaulaitA



