docno="lists-105-1683884"
received="Sun Jan  4 04:03:23 2004"
isoreceived="20040104090323"
sent="Sun, 4 Jan 2004 10:04:26 +0100"
isosent="20040104090426"
name="Sander Bos"
email="sander@x-hive.com"
subject="Re: L3 LS: Configuration parameter to enable/disable application specific  DOM"
id="001501c3d2a1$c0f42820$9600000a@mycomp"
charset="iso-8859-1"
inreplyto="3FF74F8B.9060401&#64;houston.rr.com"
expires="-1"


To:<www-dom@w3.org>



Dear Curt,

> I'd like comments on this if anyone has thought this through.  Assume
> that you have an implementation that supports Core on generic XML
> documents and application specific DOM, such as L2 HTML, SVG or MathML.
> If you automatically created the application specific elements when you
> encounted recognized elements, you may incur additional overhead in DOM
> building and may reject documents that are valid XML but aren't valid
> XHTML or SVG.  However, if you don't automatically do that, you always
> get a generic DOM implementation.  I think that doing this right would
> require an additional configuration parameter in LSParser, but I haven't
> thought through what that would look like.

Not hindered by any knowledge of either CORE-3 or domain specific DOMs (so
not sure on 'thought this through' part), let me try to add something to the
discussion. Is this problem not taken care of by DOMImplementationSource of
CORE-3? There you can get a DOMImplementation supporting features you want
(e.g. SVG?). And that DOMImplementation you cast to DOMImplementationLS, and
get a parser on. So if you were a DOM implementor and wanted to distuinguish
between regular DOM building and e.g. SVG DOM Building you could control it
in your DOMImplementationSource impl?
(And if you do LS but not CORE3, then you can add your own impl specific
params on LSParser as you suggest)

Kind regards,

--Sander.



