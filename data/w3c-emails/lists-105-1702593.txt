docno="lists-105-1702593"
received="Sun Jan  4 23:12:08 2004"
isoreceived="20040105041208"
sent="Sun, 04 Jan 2004 23:10:55 -0500"
isosent="20040105041055"
name="Steve Schafer"
email="steve@fenestra.com"
subject="Re: L3 LS: Configuration parameter to enable/disable application  specific  DOM"
id="ptohvv06o2s773i3tod2j2m7shuq85k4o7@4ax.com"
charset="us-ascii"
inreplyto="3FF78313.6090701&#64;houston.rr.com"
expires="-1"

To:www-dom@w3.org



On Sat, 03 Jan 2004 21:05:55 -0600, Curt Arnold <carnold@houston.rr.com>
wrote:

>When populating a DOM tree by loading a document using DOM L&S, the 
>application has no hook to control the type of nodes created during parse.

Aha. I understand your point now. My mistaken assumption was that you
were talking about an integrated parser/application, but you're actually
thinking of a standalone, off-the-shelf parser, and you're looking for a
mechanism to selectively turn on/off its "smart" parsing capabilities.

In that case, I agree that your proposal makes sense. But I have to ask:
Won't _any_ parser that's capable of "smart" parsing necessarily contain
a heavy dose of implementation-dependent features? It seems to me that
an application-specific DOM tree that doesn't actually do anything isn't
much more use than a generic DOM tree.

Steve Schafer
Fenestra Technologies Corp
http://www.fenestra.com/



