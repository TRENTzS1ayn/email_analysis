docno="lists-105-1752800"
received="Mon Jan  5 14:46:47 2004"
isoreceived="20040105194647"
sent="Mon, 5 Jan 2004 19:45:44 +0000 (UTC)"
isosent="20040105194544"
name="Ian Hickson"
email="ian@hixie.ch"
subject="Re: node.insertBefore(child, child)"
id="Pine.LNX.4.58.0401051934060.13203@dhalsim.dreamhost.com"
charset="US-ASCII"
inreplyto="1073329203.28169.17.camel&#64;jfouffa.w3.org"
expires="-1"

To: Philippe Le Hegaret<plh@w3.org>
Cc: WWW DOM<www-dom@w3.org>



On Mon, 5 Jan 2004, Philippe Le Hegaret wrote:
>>
>>    node.insertBefore(child, child)
>
> It is indeed the behavior of common UAs, but unfortunately, it is not
> the case on Xerces. Given that at least one significant implementation
> is following the specification, we cannot render it non conformant by
> modifying the specification to accomodate and describe the behaviors of
> the UA implementations.

Why not?

Is there any code anywhere that depends on Xerces raising an exception?

Does Xerces really do what the spec says? (i.e. both remove the node and
raise an exception.)


> node.insertBefore(child, child) and node.replaceChild(child, child) are
> now described as "implementation dependent" in the specification. It
> does not clarify anything except that DOM applications should now be
> aware of no interoperability for those cases.

That's even less useful than raising an exception! :-)


> Let us know if this decision satisfies or not your request,

Not really. :-)

I'd rather the behaviour be well specified and useless than not specified
at all (and would much rather it was well specified and useful, especially
given the number of interoperable implementations, even if there is one
implementation that currently removes the node and raises an exception).

Cheers,
-- 
Ian Hickson                                      )\._.,--....,'``.    fL
U+1047E                                         /,   _.. \   _\  ;`._ ,.
http://index.hixie.ch/                         `._.-(,_..'--(,_..'`-.;.'



