docno="lists-105-1897485"
received="Tue Jan  6 18:18:38 2004"
isoreceived="20040106231838"
sent="Tue, 6 Jan 2004 22:53:10 +0000"
isosent="20040106225310"
name="Andrew Clover"
email="and-w3@doxdesk.com"
subject="Re: Comments on DOM Level 3 Core Nov-03 CR"
id="20040106225310.GC488@doxdesk.com"
charset="us-ascii"
inreplyto="1073332891.28167.67.camel&#64;jfouffa.w3.org"
expires="-1"

To:www-dom@w3.org



Philippe Le Hegaret <plh@w3.org> wrote:

> This behavior has been in the DOM since DOM Level 2. DOM Level 2 Events
> does indicate, when using EventListener: [...]

Hmm. True for EventListener, but not for NodeFilter, which LSSerializerFilter
explicitly inherits from. (Traversal section 1.1.2.2.)

Perhaps from previous behaviour it makes sense that UserDataHandler.handle
should have exceptions swallowed, since it is rather like an EventListener
(eg. there may also be other UserDataHandlers that still wish to receive
handle calls in the case of the handler throwing an exception). For
LS*Filter though I'd consider the existing NodeFilter model far more
appropriate.

> True enough, ignoring exceptions can render your
> implementation unstable, but the intent is to prevent DOM applications
> to rely on behaviors resulting from an exception thrown in the handler.

Fully agree, but I'd expect such a reliance situation to occur more readily
with the exceptions-swallowed model than the exceptions-propagated model - it
is possible a faulty filter throwing execeptions would go entirely unnoticed.

Oh, and I'd like to Ack-Agreement issues andrew1-andrew4 also. Cheers!

-- 
Andrew Clover
mailto:and@doxdesk.com
http://www.doxdesk.com/



