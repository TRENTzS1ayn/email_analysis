docno="lists-105-2602919"
received="Thu Mar 11 01:12:52 2004"
isoreceived="20040311061252"
sent="Wed, 10 Mar 2004 22:12:47 -0800"
isosent="20040311061247"
name="Johnny Stenback"
email="jst@w3c.jstenback.com"
subject="Re: DOMErrorHandler, EventListener, et al in ECMAScript binding"
id="4050035F.90803@w3c.jstenback.com"
charset="us-ascii"
inreplyto="00EC1398-730C-11D8-BFC5-000393B97126&#64;houston.rr.com"
expires="-1"


To: Curt Arnold<carnold@houston.rr.com>
Cc:www-dom@w3.org


Curt Arnold wrote:
[...]
> It is pretty explicit that a function object is used for EventListeners  
> and NodeFilters.  Am I right in interpreting that the DOMErrorHandler,  
> UserDataHandler, LSSerializerFilter, LSParserFilter and  
> ResourceResolver are passed as objects, something like:

I would argue that it should be able to pass a JS function as any 
callback interfaces that contain only one method (i.e. one method, no 
attributes, but constants are ok). That would mean that one can pass a 
JS function as a DOMErrorHandler, UserDataHandler, or 
LSResourceResolver, but not as a LSSerializerFilter nor as a LSParserFilter.

-- 
jst



