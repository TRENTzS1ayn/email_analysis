docno="lists-107-13834805"
received="Fri Jan 26 14:14:25 1996"
isoreceived="19960126191425"
sent="Fri, 26 Jan 1996 19:14:09 +0000 (GMT)"
isosent="19960126191409"
name="lilley"
email="lilley@afs.mcc.ac.uk"
subject="Re: display vs text faces"
id="8999.9601261914@cguhpa.cgu.mcc.ac.uk"
charset="US-ASCII"
expires="-1"


To:i-simond@microsoft.com(Simon Daniels)
Cc:www-font@w3.org


> For text fonts I think Bill is right. You need to have a scalable 
> format so that the type works in print as well as on screen. 


Also so that displays of different sizes and resolutions can display 
type at sizes that individual readers find comfortable.

> But for display text (anything over HTML font size=7) perhaps a 
> different approach would be more suitable. The great thing about using 
> bitmaps for display typography, such as titles and logos, is that you 
> can perform all manner of digital jiggery-pokery on them using 
> Photoshop etc. The bad thing is that they don't print out very well.

But you still have the problem of rescaling. I wrote a short paper
on this issue a while ago [1].

It is of course also possible to perform all sorts of digital jiggery-pokery
on vector fonts, such as using them as masks for images to show through.

> Perhaps a vector format like eps should be used... Display typography 
> which is resolution independent, scalable, can be multi coloured and 
> with no complicated copyright issues associated with distributing fonts 
> that can be downloaded and reused elsewhere.

You speak of course of ISO 9541-3: 1991  Glyph shape representation ?

(warning, I am working from a draft, dated June 1991, not the final standard)

9541-3 speaks coyly (in a non-normative anex) of backwards compatibility 
with an "installed base of glyph interpreters" by which it means that it is
a slight generalisation of the Adobe Type 1 font format.

9541-3 even suggests using a value of 4330 for the encryption key and a
value of 5839 for the password, for compatibility with this installed
base ;-)

> Perhaps Adobe could be 
> persuaded to release the rasterizing/ antialiasing routines from 
> PhotoShop for inclusion in browsers.

IBM release an Adobe Type 1 rasteriser for use in X11R5.  It is in the
contrib area.  It allows resizable fonts to be used by an X server, but
was not widely used because it seemed tricky (as I recall you had to 
recompile the X server, so this was something vendors had to do).

Regardless, it means the code to do this is sitting on ftp servers all
over the world though I have not seen the copyright statement. Anyway, 
IBM are W3C members so I'm sure something could be worked out on that 
score.

Adding antialiasing is trivial.  It just increases the computational
load and meory requirements by a factor of 4, 9 or 16 depending on the
quality you want ;-)

Adaptive antialiasing is not all that hard either - if all the
neighboring pixels are the same colour as yourself, you don't need to do
it.  Anyway, if working from a vector format you always know where the
edges are, so adaptive antialiasing of type is even possible if it has 
colour gradients or texture mapping.


[1] http://info.mcc.ac.uk/CGU/staff/lilley/test/scaling/
-- 
Chris Lilley, Technical Author and JISC representative to W3C 
+-------------------------------------------------------------------+
|  Manchester and North Training & Education Centre   ( MAN T&EC )  |
+-------------------------------------------------------------------+
| Computer Graphics Unit,             Email: Chris.Lilley@mcc.ac.uk |
| Manchester Computing Centre,        Voice: +44 161 275 6045       |
| Oxford Road, Manchester, UK.          Fax: +44 161 275 6040       |
| M13 9PL                            BioMOO: ChrisL                 |
| Timezone: UTC        URI: http://info.mcc.ac.uk/CGU/staff/lilley/ | 
+-------------------------------------------------------------------+



