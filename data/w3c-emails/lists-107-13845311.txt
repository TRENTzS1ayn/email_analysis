docno="lists-107-13845311"
received="Fri Jan 26 16:07:17 1996"
isoreceived="19960126210717"
sent="Fri, 26 Jan 1996 21:07:01 +0000 (GMT)"
isosent="19960126210701"
name="lilley"
email="lilley@afs.mcc.ac.uk"
subject="Re: display vs text faces"
id="9203.9601262107@cguhpa.cgu.mcc.ac.uk"
charset="US-ASCII"
expires="-1"


To:billhill@microsoft.com(Bill Hill)
Cc:i-simond@microsoft.com,www-font@w3.org

 Bill Hill makes the very valid point:
 

> for a start, why should we be saddled with the anti-aliasing used in Photoshop?
> research has shown that people recognize words mostly by the 
> high-frequency information - the contrasts between dark stems and light 
> backgrounds, or light stems and dark backgrounds. PhotoShop's 
> anti-aliasing blurs ALL of the letters, degrading the high-frequency 
> parts as well.

Yes.  I posted earlier about adaptive antialiasing, and doing frequency
domain filtering rather than spatial domain is of course gratly
superior.

> The (TrueType) anti-aliasing in Windows 95 Plus! is much more 
> sophisticated in its approach, since it first grid-fits the letters to 
> regularize stems, etc., then applies anti-aliasing only to the places 
> it's needed (curves and diagonals) while leaving stems, crossbars and 
> serifs alone. the high-frequency information is retained.

Yes.  Using the hinting to do pixel snap so that hstems and vstems do
not require any anti-aliasing.


> also, Win95's anti-aliasing is applied "on the fly", 

All such anti-aliasing should be applied on the fly on the client side,
because this allows arbitrary scaling and other manipulations of the fonts 
and allows their display against arbitrary background colours and textures.

Plus, different platforms will have different engines for font handling,
and some will have sophisticated anti-aliasing while others will be more
crude - or have none at all - a PDA or other mobile Web client with,
perhaps, a monochrome lcd screen is not going to use any anti-aliasing
because the display does not benefit and the CPU capability is also
lacking.

What is needed is 

1) agreement on a font interchange specification that has a freely available 
   specification, and 
   
2) a mechanism whereby fonts can be downloaded on the fly over the web and
   if necessary converted to the format required by a particular platform.

> which means your 
> text is still text, not a bit-map. so it's scalable, searchable, 
> editable, localizable, etc.. if you've ever been involved in puting out 
> information that has to be updated, or localized into other languages, 
> you'll know what a complete pain anti-aliased bitmaps are to deal with. 
> How are you going to use software to search for a heading if it's in a 
> vector graphics format?

I think this confuses the point. We are talking about a font technology 
to be aplied, via stylesheets, to HTML text. Whether the font information 
is a series of bitmaps or a series of vector outlines does not affect the
searchability etc of the HTML text that is being displayed using that font 
technology.

>  now, Win95 anti-aliasing isn't cross-platform, obviously. but 
> well-hinted TrueType is.

I note that the Unix version of Corel Draw continues to use Adobe Type 1
fonts while the PC version has moved to TrueType.  TrueType is not in
general use on Unix platforms.

> With properly-designed and hinted faces, some faces will work well for 
> both text and display. For the sake of variety, we probably do need 
> some faces which are display-only. These could be handled differently; 
> for example, they might have reduced character-sets.

I don't see how headings (display type) requires a reduced character 
repertoire.

> They could be 
> hinted only down to, say, 14 point on VGA (a lot of hinting data in a 
> text font is taken up by delta instructions aimed at getting the best 
> representation at small sizes - 12pt and below). 

OK, fine, I see that would be a win.

-- 
Chris Lilley, Technical Author and JISC representative to W3C 
+-------------------------------------------------------------------+
|  Manchester and North Training & Education Centre   ( MAN T&EC )  |
+-------------------------------------------------------------------+
| Computer Graphics Unit,             Email: Chris.Lilley@mcc.ac.uk |
| Manchester Computing Centre,        Voice: +44 161 275 6045       |
| Oxford Road, Manchester, UK.          Fax: +44 161 275 6040       |
| M13 9PL                            BioMOO: ChrisL                 |
| Timezone: UTC        URI: http://info.mcc.ac.uk/CGU/staff/lilley/ | 
+-------------------------------------------------------------------+



