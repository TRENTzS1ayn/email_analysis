docno="lists-107-14242957"
received="Wed Mar 27 15:03:20 1996"
isoreceived="19960327200320"
sent="Wed, 27 Mar 96 21:03:33 +0100"
isosent="19960327200333"
name="Erik van Blokland"
email="evb@knoware.nl"
subject="WebFonts"
id="199603272002.VAA09321@clausplein.dataweb.nl"
charset="US-ASCII"
expires="-1"


To:"Hannes Famira"<hannes@dataweb.nl>,"Martin Wenzel"<Wenzel@dataweb.nl>,"Jonathan Hoefler"<hoefler@aol.com>,"Www"<www-font@w3.org>

Dear typepeople,
our contribution to the webtype discussion.

WebFonts
So far most of the disussion on webfonts is about providing some sort of 
outline format that can be sent along with a document. Given how 
computers deal with typefaces today that seems a logical step, because a 
new thing should be as good as possible, and with type outlines are the 
best solution for fonts, so there. But is it the best idea for typefaces 
in webbrowser? Is it really necessary to send outline data of a typeface 
along? There seem to be a couple of advantages, but the disadvantages 
seem to be bigger and more. 

Scalability
Having outlines available at the client makes it possible to scale the 
text and print a page. But if one of the incentives to send fonts along 
in the first place is to make sure that the page looks like its 
author.producer.designer intended it to be, then why go through great 
lengths to make it easier for a user to screw it up by changing sizes 
again? During the design phase of a page a typesize is chosen, and that 
is what the user of a page has to see in the best possible way. Some sort 
of anti-aliased bitmap font will do just fine.

Printing
Other argument: printing a webpage. First, are there figures available on 
the amount of webpages that actually get printed? I think that the ratio 
of number of read webpages that get printed to the number of unprinted 
ones favors the unprinted pages in such a major way that making 
complicated and expensive provisions to make webpages printable from the 
start is not necessary.
Secondly, typography for the screen is different from typography for the 
printed page. Unless screen and pages actually become the same physical 
object, a design for one medium will always look bad on the other. Not 
just because of the fonts, the typography for each medium requires 
different solutions: the way the text is read differs.
That is not a problem when it is recognised. Make a format that functions 
well on screen, and make another that look good on paper. Or make some 
very smart automatic conversion system between the two, same thing. Some 
sort of anti-aliased bitmap font will do fine again: make a provision 
that the bitmap knows what typeface it was rendered from, and if a user 
really wants to print it, he can find the font that goes with it, or get 
it at a local vendor, or just print the whole thing in a font of his own. 

Economy
Outline font are more economic (smaller) compared to a bag of bitmaps 
that contains all sizes one could make with the outline font. That makes 
it a good solution for desktop publishing where you don't know what the 
next job will bring. But a web page contains a limited number of 
characters in a limited number of sizes. Up to a fairly large bodyheight 
a pre-rendered bitmap font is smaller than an outline font describing the 
same thing. Of course this is not entirely fair because the same outline 
font can then be used to render all other sizes on the same page, whereas 
more bitmap fonts would have to be downloaded. This advantage is gone 
when more than one font is used on a page. Also the technique of only 
including characters that are used on a page, proposed for outline 
formats can also be applied to bitmapped characters. Then bitmaps will be 
more economic for a long time. 

Platform
Paul Haeberli's webfont proposal 
(http://reality.sgi.com/grafica/webfonts/) suggests to add a bitmap 
format within HTML, where all characters are placed in one single image. 
Widths and additional information are included, or available separately. 
The image can be compressed with normal (and future) compression methods. 
The letters can be even be colored with many colors in one letter and 
modified using normal image processing software. This is, I think, a must 
for popular acceptance of a type on screen system, just look at what 
people are doing with text in images on the web right now. It's not just 
fonts, its what you can do with them: Blurry, shaded, photographed, 
color-in-color, reversed and even animated fonts! i.e. _use_ the 
typefaces. Webdesigners won't go for a solution that offers less 
flexibility.
All the browser needs to do is to 'parse' the font-image and place the 
bits and pieces on the right place. This is rather simple to implement 
compared to building a rasteriser that works every platform, support 
colored fonts, imagery, antialiasing etc. Not to mention the:

Copyright & piracy issues
As a typedesigner I've seen and experienced how people deal with fonts 
and ownership, and it sucks. If a system came to be where 
character-outlines are broadcast to every single browser in the world I 
would stop making type, or at least, stop using anything nice and new 
because it would become instant public domain. A bitmapped font of course 
has the same problem but on a much smaller scale: besides putting it on 
your own webpage there is basically nothing else you can do with that 
font. Redigitizing does not work: the result might make a good grunge 
font, it will not be comparable to the original. Has anyone bothered to 
take a gif image from a website and reshuffle the letters into a new 
word? Nope, because it is easier to make a new one. 
Outlines are much more valuable because they are much more versatile: 
they can print, they can render new bitmaps, well, you know what outlines 
can do. Bitmaps are cheap and can be stolen as well, but they are 
available to all anyway, so why bother. If you want to police the use of 
a font on a network, make a webcrawler that looks for your it.
Schemes where outline fonts are hacked in pieces and only the characters 
that are used in a document get send along are only a temporary solution 
to font piracy. It would become very interesing to build a machine that 
looks at all characters coming by over a network and starts 'collecting' 
fonts. "alt.binaries.fonts.characters" will pop up in a matter of weeks, 
every single webfont in the world will be available! No thanks.

..
Everybody making webpages could be generating and using webfonts. 
WebMap-Fontrendering apps can be small, cheap, plentiful and available to 
all. There will be an advantage to make pages better, readable and 
sometime even make sense, and to use good and or new typefaces, thus to 
buy more type. Much work for typedesigners, typographers, and designers.


------------------------------------------------------------------
|--      |                       -|-             
|   /-| -|-   |/|/| /-| |/ /-|    |  | | |/| /-| 
|-    |  |    | | | | | |  | |    |  | | | | | | 
|   /-|  |    | | | | | |  |-/    |  | | | | |-/ 
|   | |  |    | | | | | |  |      |  |/| | | |   
|-- |/|  |/   | | | |-/ |  |-/    |    | |-/ |-/ 
                                     --/ |       
erik van blokland                                                         
        
www.letterror.com
------------------------------------------------------------------



