docno="lists-107-14803414"
received="Sun Aug 11 10:58:20 1996"
isoreceived="19960811145820"
sent="Sun, 11 Aug 1996 07:54:02 -0700"
isosent="19960811145402"
name="Bill McCoy"
email="mccoy@mv.us.adobe.com"
subject="Re: SuperATM and MM fonts instead of embedding (was Re: pixel fonts)"
id="2.2.32.19960811145402.0090b660@mail-sea"
charset="us-ascii"
inreplyto="SuperATM and MM fonts instead of embedding (was Re: pixel fonts)"
expires="-1"


To:www-font@w3.org
Cc:mccoy@mv.us.adobe.com

Walter Ian Kaye writes:

>Here's my question: Are there people who feel same-metric MM fonts are not
>sufficient for substituting when the actual font is not on the user's system?

Yes. Our user testing and product experience with Adobe Acrobat have
overwhelmingly pushed us to favor embedding vs. substitution. Note that we
had to be dragged kicking and screaming to this... we thought that MM
substitution was the neatest thing since sliced bread, and continued to push
it despite ample evidence that it wasn't viewed as satisfactory by users.
The reality is that users want the real fonts. It really is the "digital
paper" model. How would you like MM substitution in your copier?

And of course MM substitution (and even much higher quality font fauxing,
such as Ares Chameleon, now part of Adobe) doesn't work at all for anything
other than normal text faces. Even faces that users may think of as text -
Tekton, Lithos - cannot be reasonably approximated. It is no coincidence
that all the vendors of font technology that had been pushing
"imitation"-type technology have in the last couple of years added
"embedded"-type technology - Bitstream, Ares, and HP/Elsewhere. We think
fauxing technology does have a good future, but primarily as a way of
providing highly compressed fonts. I.e., so that a desktop (or a printer)
can appear to have, say, 300 fonts installed, while consuming a much smaller
disk (or ROM) footprint.

>I, for one, do not want fonts to be embedded. Metrics sure, but not the font
>itself. If someone needs to show a logo on the Web, use a GIF.

One additional point following on from my earlier message. With appropriate
identification, code-signing, etc., it's possible to set up a link from
embedded font subsets back to electronic commerce with the vendor of that
font, and this is one of Adobe's goals with our multi-partner OpenType
initiative and with our work with the W3C on Web font tags for HTML.

Thus, every font used in an online document can become an advertisement for
the font. When someone views an electronic document, the font subset will
not be installed in the user's system and thus will not be available for
editing use (this is how Acrobat works today). But an editing application
could be smart enough that if the user tries to edit document text that uses
an embedded subset not on the system, the options presented - e.g., change
to another font, abort the edit - can include the useful option of buying
and on-the-fly installing the font.

Yes, with font subsets flying around the web in this fashion there is no
doubt going to be some increased piracy. This seems an eminently reasonable
cost of doing business in return for the increased revenue from this kind of
exposure. Whereas a GIF just ain't going to sell many fonts. :-)

--Bill


Bill McCoy
Adobe Systems Incorporated
mccoy@adobe.com



