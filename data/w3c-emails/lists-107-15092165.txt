docno="lists-107-15092165"
received="Mon Aug 12 18:39:21 1996"
isoreceived="19960812223921"
sent="Mon, 12 Aug 96 18:41:36 -0000"
isosent="19960812184136"
name="The Hoefler Type Foundry"
email="hoefler@typography.com"
subject="Re: One font embedding idea"
id="199608122231.SAA23392@echonyc.com"
charset="US-ASCII"
inreplyto="One font embedding idea"
expires="-1"


To:<www-font@w3.org>

Andrew C. Bulhak suggested:

>When embedding a font in a document, the font per se would not be 
>embedded; rather, a table of common digraphs and trigraphs (two-
>and three-character sequences) in the text is built up.  For each
>polygraphic sequence, the respective characters are ligatured automatically,
>using kerning information, into a synthetic glyph.  That way, most if not
>all characters in a document can be displayed using these glyphs, which
>are in an encoding unique to the document.
>
>To pirate the font, as with the random encoding, the pirate would have
>to extract the outline data into an editable format and use an
>editor to manually pull apart the characters, which would be rather 
>laborious.  However, this would not impede searching;  the text can be 
>stored in standard ASCII, and converted into the ligated encoding within 
>the browser.  Since there is no one-to-one mapping, the font cannot 
>easily be automatically broken up into a normal font.


That's a really interesting idea. But don't confines on the size of a 
character set (commonly one byte) limit the space for these multigraphs 
(polygraphs?) If the basic principle is that a document which makes no 
use of the paragraph mark could rely upon the substitution of an "nn" 
digraph for this character (for instance), wouldn't the transmission of a 
single document featuring the full character set defeat this sort of 
protection, by indicating no "free" glyphs?

Also, I don't think it's mathematically possible to dissect even the most 
rudimentary English into enough digraphs to no longer require the 
presence of discrete glyphs.

Still an intriguing prospect, though.


Jonathan Hoefler
The Hoefler Type Foundry, Inc.
www.typography.com



