docno="lists-107-15140143"
received="Tue Aug 13 03:01:36 1996"
isoreceived="19960813070136"
sent="Tue, 13 Aug 1996 17:00:54 +1000 (EST)"
isosent="19960813070054"
name="Andrew C. Bulhak"
email="acb@cs.monash.edu.au"
subject="Re: One font embedding idea"
id="199608130700.RAA09288@silas.cc.monash.edu.au"
charset="US-ASCII"
inreplyto="199608122231.SAA23392&#64;echonyc.com"
expires="-1"


To:hoefler@typography.com(The Hoefler Type Foundry)
Cc:www-font@w3.org

[The Hoefler Type Foundry]
> 
> Andrew C. Bulhak suggested:
> 
> >When embedding a font in a document, the font per se would not be 
> >embedded; rather, a table of common digraphs and trigraphs (two-
> >and three-character sequences) in the text is built up.  For each
> >polygraphic sequence, the respective characters are ligatured automatically,
> >using kerning information, into a synthetic glyph.  That way, most if not
> >all characters in a document can be displayed using these glyphs, which
> >are in an encoding unique to the document.
> >
> >To pirate the font, as with the random encoding, the pirate would have
> >to extract the outline data into an editable format and use an
> >editor to manually pull apart the characters, which would be rather 
> >laborious.  However, this would not impede searching;  the text can be 
> >stored in standard ASCII, and converted into the ligated encoding within 
> >the browser.  Since there is no one-to-one mapping, the font cannot 
> >easily be automatically broken up into a normal font.
> 
> That's a really interesting idea. But don't confines on the size of a 
> character set (commonly one byte) limit the space for these multigraphs 
> (polygraphs?) If the basic principle is that a document which makes no 
> use of the paragraph mark could rely upon the substitution of an "nn" 
> digraph for this character (for instance), wouldn't the transmission of a 
> single document featuring the full character set defeat this sort of 
> protection, by indicating no "free" glyphs?

Since the encoding is worked out at document creation time, not
necessarily.  If one wants to send  t e x t  l i k e  t h i s, 
glyphs for "t h" can be generated and such.  If one wants to 
send complete alphabets with various bozotic spacings, they 
just make for a bigger document.  And if they want to send a
document consisting of one character per line, then they're
probably up to no good...  ;-)

> Also, I don't think it's mathematically possible to dissect even the most 
> rudimentary English into enough digraphs to no longer require the 
> presence of discrete glyphs.

Perhaps;  but if you have half a dozen discrete glyphs here and there,
that doesn't jeopardise the purpose of the encoding method, being to
make piracy bloody hard.  It may be possible to design the glyph 
mapping algorithm to skew the probabilities so that certain characters
predominate among the discrete glyphs, making the "collect-enough-documents-
to-extract-a-complete-font" approach even less plausible.

-- 
  http://www.zikzak.net/~acb/       "`HAVE A NICE DAY' died for your sins."
           <acb@dev.null.org>                                  -- Mumbles



