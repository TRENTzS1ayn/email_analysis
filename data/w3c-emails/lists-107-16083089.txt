docno="lists-107-16083089"
received="Sat Nov  9 21:04:51 1996"
isoreceived="19961110020451"
sent="Sun, 10 Nov 96 03:06:02 +0200"
isosent="19961110010602"
name="Erik van Blokland"
email="evb@knoware.nl"
subject="Re: PDF (was Re: mailing list)"
id="199611100204.DAA07896@kalvermarkt.denhaag.dataweb.net"
charset="US-ASCII"
inreplyto="PDF (was Re: mailing list)"
expires="-1"


To:"w3 webfonts"<www-font@w3.org>

Todd Fahrner:
>But to address Erik van Blokland's weightier objections to font embedding:
>you (Erik) assert in your piece online that it is feasible to extract
>outlines from PDFs containing embedded fonts, and to reconstitute usable
>fonts with a little work in Fontographer or other editor. 
Yep.

>You go on to
>imply (I think) that big, diversified Adobe is less concerned with this
>problem than the smaller, specialized shops, that this is a threat to your
>livelihood specifically and to original type design generally. Is this a
>fair summary?
Yes. Though Adobe is beginning to show signs of understanding the scale 
of the possible problems. Note that Amber has been delayed, and the 
opentype spec uses the word 'encryption' a lot more. I'd be surprised if 
a really satisfactory solution to embedding would emerge in the near 
future. If it can be done safely, I don't mind, but I have to be 
convinced before I would allow my fonts to be subjected to some 
technology that will send my types to potentially millions of people 
without my control of consent. For the time being with current 
technologies, I just cannot allow embedding the outlines of my typefaces, 
and I think that bitmaps are ok for the time being, until something 
better comes along. It will provide the possibility of using type on the 
web, and leaves room for improvement.

Adobe does a good job making them and designing some new ones as well, 
but it is not their only (or even biggest) source of revenue. I license 
my typefaces, but I don't have many applications I can sell, nor 
technology I can make OEM deals with. Therefore I have a somewhat 
different perspective on the problems caused by embedding.

>Just how feasible is this extraction, exactly, and has anything changed
>with PDF 1.2/Acrobat 3? Specifically, If I put two PDFs (latest format) on
>the Web, each containing half the character set of a certain obscure face,
>how much trouble will it be for you to post a PDF of another text set in
>that face?
About 15 minutes work, most of the time dialing in and uploading. Some 
people might be able to do it a lot faster I'm sure.

Note also in this context that Trudoc fonts (used in Envoy) have already 
been extracted in about 30 minutes and basically offer no more protection 
than pdf does at the moment. Except for the fact that Trudoc uses a shady 
semantic trick to get around the copyright issue that will not work 
outside US jurisdiction.

>I honestly don't know how you'll fare. (You could cheat, but that would be
>cheating.) If you can do it in much less time than it would take to scan,
>trace, kern, hint and otherwise refine a few magazine pages' worth of type,
>you'll have made your point in a very convincing, public way - a service to
>us all.
Scanning, tracing, justifying, hinting etc. of a normal textface would be 
several weeks work, doing it badly. Finding the font used in a pdf takes 
a couple of seconds.

>Failing this - after all, who has time for it? - could you say a little
>more about how one steals a font from a (current format) PDF? Intrigued by
>your assertion, I tried once and failed, though I gave up quickly. Under
>which conditions (if any) would hypothetical terrors like FontSucker or
>FontCrawler fail with current embedding technology?
A FontSucker would only be a helper, not an enabler. Fonts can be 
extracted from pdf with simple texteditors under unix or NT, and save 
with a new extension. On mac it can be done even easier, using something 
like resedit, and some fontapp. Anyone with some mac experience can do it 
if you know where to look. Please forgive me for not telling you where in 
an open forum, it's bad as it is already. Other people on this list (Lee, 
Clive?) will be able to confirm this without explaining exactly how.

Perhaps the kerning info is missing as it is digested in the rest of the 
pdf document, the rest of the font is certainly most present. Adobe's 
subsetting in acrobat only kicks in if less than 10% of the font is used. 
That's 25 different characters in one font or more will cause the whole 
font to be embedded. "The Quick brown fox jumps over the lazy dog" would 
probably do it.
FontSucker could even be (perish the thought) a browser plugin. It only 
takes 1 nut to write something like that and distribute it in a couple of 
newsgroups to bring the wonderful of typography to everybody. [irony]

Acrobat 3 apparently is better and lets users determine how much of the 
font needs to be used in order to be fully embedded, but chances are 
users won't care much. Of course you can have the font subsetted. But if 
it is a popular one I can find other docs with the rest. Subsetting is a 
compression method, not a protection scheme.

erik

erik van blokland, LettError: Typestuff
      letterror  http://www.letterror.com
      fontfonts  http://www.fontfont.de
NEW!  typelab    http://www.typelab.org



