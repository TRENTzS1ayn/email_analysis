docno="lists-108-1107847"
received="Mon Feb  9 12:19:23 1998"
isoreceived="19980209171923"
sent="Mon, 09 Feb 1998 09:22:06 -0800"
isosent="19980209172206"
name="Bill McCoy"
email="mccoy@Adobe.COM"
subject="Re: Freedom for Fonts"
id="3.0.32.19980209092201.012eea38@mail-sea"
charset="us-ascii"
inreplyto="Freedom for Fonts"
expires="-1"


To:mike@jmaca.com
Cc:www-font@w3.org

Mike, I think *you* are missing the real problem. It's not proprietary
technology, it's protection of intellectual property (an issue not specific
to fonts, but exacerbated for fonts by the murky copyright status granted
to font programs). 

Both Type 1 and TrueType, the industry standard font formats, have
specifications that are public. Type 1 has even achieved ISO "PAS"
(Publicly Available Specification) status - i.e., it's further along the
standardization road than Java. There is an ongoing effort to unify and
further standardize these formats, with enabling Web typography an
important goal, see:

http://www.adobe.com/supportservice/devrelations/opentype/main.htm

OpenType (Type 1 and TrueType) are as "free" as anything gets in this
industry - i.e., you can create and/or interpret a font object without
owing anyone money. This is not true of all font solutions (e.g.
Bitstream's TrueDoc) but it means that adding yet another font format
(YAFF) based on serialized Java bytecodes wouldn't improve anything for the
industry - in fact, it would make things worse, given that we're trying to
make things simpler by unifying the existing formats.

Conversely, a new Java-based format as per your proposal wouldn't solve the
*real* IP issue for fonts - protection of property. This is the same issue
for all web-based intellectual property, and I believe will be solved via a
uniform crypto mechanism. OpenType and the W3C font work puts in place a
framework to enable IP protection - this doesn't by itself solve the
problem, but neither would a Java format.

--Bill

P.S. IMHO if the industry *did* need yet another font format there would be
strong motivation to make it XML based not Java...

At 09:34 AM 2/9/98 -0700, you wrote:
>Dan I read your web page.
>http://www.alumni.caltech.edu/~dank/javafont.htm
>
>But I think your missing the real problem Its not Javasoft.
>The problem is fonts are proprietary. Plus there is a strong precedence
>for control of
>font readers creators and where and how they display there glyphs.
>Downloaded fonts being a
>big problem. Javasoft  for convince want's to use Adobe and MS fonts
>that are
>available on each machine unfortunately they cannot allow uninhibited
>redistribution
>via java because of copyright.
>I would be extremely hesitant to build the technology that would allow
>trivial transmission and use of fonts with todays copyrights.
>
>As you know the browsers are barley able to use downloaded fonts in a
>crippled way.
>This is not sufficient for a real program.
>
>With the new "web" old style proprietary fonts are as crippling as
>Microsoft controlling
>all web browsers.
>
>The   only answer in my opinion is to develop a new free font
>technology in Java.
>With  "fonts" represented by serialized objects.
>
>The creation of a "Font" object is font file/Tool  dependent but after
>that it is trivial to
>simply serialize the font objects.  One simply has to use freely
>available fonts.
>
>Bitmap fonts are easy. I have not  yet worked on "outline" fonts but
>they are also
>quit doable. You just have to come  up with a serialization scheme.
>And since the object knows how to recreate itself this scheme need not
>be standard.
>There are tons of free fonts out there so there is nothing preventing
>you from creating
>enough to satisfy basic programing needs.
>
>These serialized objects can be read by "c" programs if  you had too.
>
>Its actually fairly trivial the only real problem is in the beginning
>you will have to avoid
>all the copywrited  fonts until they become irrelevant.  Adobe  won't
>change its
>copyright policy  until consumers demand it.
>
>
>This is the way to break the "Font" monopoly IMHO.
>
>Just do it : )
>
>
>Mike
>
>mike@jmaca.com
>
>
>
>
>



