docno="lists-108-1132341"
received="Mon Feb  9 14:18:28 1998"
isoreceived="19980209191828"
sent="Mon, 9 Feb 1998 11:19:26 -0800"
isosent="19980209191926"
name="Carl Peterson"
email="carlp@vcd.hp.com"
subject="RE: Freedom for Fonts"
id="199802091917.LAA24679@popmail1.vcd.hp.com"
charset="iso-8859-1"
inreplyto="Freedom for Fonts"
expires="-1"


To:<www-font@w3.org>

Rather than copy his entire message, let me paraphrase the case that Mike
made in his message. Mike, you can correct anything I get wrong. Mike's
premise is that using Type 1 or TrueType fonts in Java is a bad thing
because they are proprietary (copyrighted or patented by various font
foundries). Mike concludes that this makes uninhibited distribution
impossible. There seems to be a hidden implication that this also makes them
expensive. Specifically, Mike rails against Adobe, its pricing, and its
protection of its intellectual property.

In my work at the printer divisions of Hewlett-Packard, I've been involved
with type, and type distribution for years. I've learned several lessons
about type and the type industry. For one, good type takes a great deal of
time and effort to develop. Companies charge what they do because they have
to recover their development costs in a ('gasp') profitable manner. Nobody
that I know of is getting rich off of the sales of type. The margins can be
surprisingly low. I will concede that Adobe's pricing is higher than most
others, but I have to say that their quality is second to none, and that
many of the fonts are unique and innovative. [I also rankle at Adobe's
prices, but one does pay more for a Mercedes than a Huyndai].

Anyone can produce a TrueType or Type 1 font using relatively inexpensive
font tools. Most fonts designed for font companies start out being designed
using a relatively inexpensive tool called Fontographer. Fontographer
produces good fonts. Font companies go further in that they extensively test
the fonts, and hand tune the hinting to produce a superior product.

There is nothing terribly wrong with the TrueType or Type 1 font formats.
They have their differences, advantages and disadvantages, but both produce
good font output. Both formats have wide support on the most popular
computing platforms. Font rasterizing engines that can handle bitmaps,
TrueType and Type 1 are available. Sun can license its choice for unlimited
distribution with Java. Sun can also license a set of default fonts for
unlimited distribution (or pay to have a set designed, but why reinvint the
wheel)?

As to the creating of a serializable font object; it sounds good to me. I
see no advantage in not designing the font object to support both TrueType
and Type 1 formats. I also fail to see much advantage in having it support a
new propriatary format for rich there are no design tools, and no existing
set of fonts.

So, I've argued that there is nothing inhertly wrong with the TrueType or
Type 1 font formats. In fact, they have the advantage of being natively
supported on many computing platforms. Secondly, that Sun can aquire a font
engine and TrueType and Type 1 fonts for free distribution at a reasonalbe
cost to them. Third, anyone can produce their own TrueType or Type 1 fonts
for relatively low cost. And fourth, that a new font format would require
the development of production tools, and would have few fonts unless there
was a financial reason for people to create them. Mike, if you still think
that a new font format is a good idea, I suggest that you spend some time in
understanding why font formats, such as, TEX, Hershey and TrueType GX didn't
catch on.

Carl Peterson



