docno="lists-108-1157518"
received="Mon Feb  9 16:33:53 1998"
isoreceived="19980209213353"
sent="Mon, 09 Feb 1998 14:40:00 -0700"
isosent="19980209214000"
name="Michael Emmel"
email="mike@jmaca.com"
subject="Re: Freedom for Fonts"
id="34DF77B0.AFDC448D@jmaca.com"
charset="us-ascii"
inreplyto="199802091917.LAA24679&#64;popmail1.vcd.hp.com"
expires="-1"


To: Carl Peterson<carlp@vcd.hp.com>,www-font@w3.org

Carl Peterson wrote:

> Rather than copy his entire message, let me paraphrase the case that Mike
> made in his message. Mike, you can correct anything I get wrong. Mike's
> premise is that using Type 1 or TrueType fonts in Java is a bad thing
> because they are proprietary (copyrighted or patented by various font
> foundries). Mike concludes that this makes uninhibited distribution
> impossible. There seems to be a hidden implication that this also makes them
> expensive. Specifically, Mike rails against Adobe, its pricing, and its
> protection of its intellectual property.

No I rail agianst the font's industry protection of the "pencil"
Modern  computers require a decent set of fonts for operation.
They also require a font rendering engine.

I dont care about specialty fonts just for example Courier Roman Helvitica etc
The 10 - 12 fonts that are used in 99% of computer applications.
Plus a basic rendering engine.





>
>
> In my work at the printer divisions of Hewlett-Packard, I've been involved
> with type, and type distribution for years. I've learned several lessons
> about type and the type industry. For one, good type takes a great deal of
> time and effort to develop. Companies charge what they do because they have
> to recover their development costs in a ('gasp') profitable manner. Nobody
> that I know of is getting rich off of the sales of type. The margins can be
> surprisingly low. I will concede that Adobe's pricing is higher than most
> others, but I have to say that their quality is second to none, and that
> many of the fonts are unique and innovative. [I also rankle at Adobe's
> prices, but one does pay more for a Mercedes than a Huyndai].
>
> Anyone can produce a TrueType or Type 1 font using relatively inexpensive
> font tools. Most fonts designed for font companies start out being designed
> using a relatively inexpensive tool called Fontographer. Fontographer
> produces good fonts. Font companies go further in that they extensively test
> the fonts, and hand tune the hinting to produce a superior product.

I'm talking about  a few fonts for the poor Linux user.

Every man has the right to ten fonts : )

>
>
> There is nothing terribly wrong with the TrueType or Type 1 font formats.
> They have their differences, advantages and disadvantages, but both produce
> good font output. Both formats have wide support on the most popular
> computing platforms. Font rasterizing engines that can handle bitmaps,
> TrueType and Type 1 are available. Sun can license its choice for unlimited
> distribution with Java. Sun can also license a set of default fonts for
> unlimited distribution (or pay to have a set designed, but why reinvint the
> wheel)?
>

Because there is no  free wheel .

> As to the creating of a serializable font object; it sounds good to me. I
> see no advantage in not designing the font object to support both TrueType
> and Type 1 formats. I also fail to see much advantage in having it support a
> new propriatary format for rich there are no design tools, and no existing
> set of fonts.
>
> So, I've argued that there is nothing inhertly wrong with the TrueType or
> Type 1 font formats. In fact, they have the advantage of being natively
> supported on many computing platforms.

Umm not the ones I'm  intrested in mainly because I'm writing the
platform.Javux : )

> Secondly, that Sun can aquire a font
> engine and TrueType and Type 1 fonts for free distribution at a reasonalbe
> cost to them. Third, anyone can produce their own TrueType or Type 1 fonts
> for relatively low cost. And fourth, that a new font format would require
> the development of production tools, and would have few fonts unless there
> was a financial reason for people to create them. Mike, if you still think
> that a new font format is a good idea, I suggest that you spend some time in
> understanding why font formats, such as, TEX, Hershey and TrueType GX didn't
> catch on.
>
> Carl Peterson

You are not working on writing a font rendering engine I  am.
I have asked bitstream and am working on adobe to see if they are
willing to release a basic java font rendering engine so far  no go.
So I have to reinvent the wheel. Why should I follow  the standards ??
 What you failed to understand is that Java does not require a "standard" font
file format
the standardization is done at the class/interface level.

YOU DONT NEED OPENTYPE, TYPE 1,   TRUETYPE,   ETC FILE FORMATS!!!!!

whew : (

If you wish to serialize classes the you must have the same classes to create
new instances.
The  file format does not matter. It can acutally be the "standard" ones if
required.
I have no plans to write a Opentype font handler too much work but it  is
trival for
me to serialize objects created from and opentype file or ANY  font file. Give
me a week
with the sources to the renderer  and the font files.

These serialized objects represent a real cross platform   format for saving
fonts in java IMH0.
Any idiot (me ) could do it. With about 5 lines of code. I don't need to
distribute or
understand any other format.

If it becomes popular then any java enabled font engine can trivally support
the format they
dont even have to write "any" code just use the same classes.


I am quite willing to give up the "standard" file formats and become simply
java dependent.



Mike

mike@jmaca.com



