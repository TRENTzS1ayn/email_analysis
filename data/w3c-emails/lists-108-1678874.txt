docno="lists-108-1678874"
received="Wed Jul 15 17:26:23 1998"
isoreceived="19980715212623"
sent="Wed, 15 Jul 1998 22:26:10 +0000"
isosent="19980715222610"
name="Clive Bruton"
email="clive@typonaut.demon.co.uk"
subject="text encoding (may be a little off topic)"
id="1311580611-14890599@mail.indx.co.uk"
charset="US-ASCII"
expires="-1"

To:<www-font@w3.org>


I'm trying to discover the ins and outs of various encoding schemes 
identified in HTML thus:

     <META HTTP-EQUIV="Content-Type"  Content="text/html; 
charset=ISO-nnnn">

My main reason for this is to avoid encoding text in it's source form, 
and let the browser decode it as necessary. Which pretty much seems to be 
the point of this META tag.

So, rather than encode specific characters "&#nnn;" you just declare 
their original encoding. Brilliant!

How then is it that you declare Mac Roman encoding to work on other 
platforms?

     <META HTTP-EQUIV="Content-Type"  Content="text/html; 
charset=x-mac-roman">

As far as I can tell the above only works on a Mac, which seems rather 
pointless. I can understand that some Mac encoded glyphs won't display on 
Win or Unix (unless they have unicode fonts, and the encoding specifies 
unicode glyphs/mapping), but for the most part the sets for each overlap, 
and those are the parts I'm interested in anyway.

Is it therefore possible to write a custom encoding (that some level of 
browsers will automatically pick up) of the form:

     <META HTTP-EQUIV="Content-Type"  Content="text/html; 
charset=http://www.mydomain.com/enc/my.enc">

or

     <META HTTP-EQUIV="Content-Type"  Content="text/html; charset=

          128 &ent;
          129 &ent;
          ...">

Where the integers are octal values and the "&ent;" may equal a numeric 
or mnemonic entity value, or may equal a unicode number (u-0099). The 
http reference would pick up a file of similar content.

And if not... seems like a good idea to me.

TIA


-- Clive



