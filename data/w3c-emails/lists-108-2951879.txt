docno="lists-108-2951879"
received="Sat Feb  5 08:20:38 2000"
isoreceived="20000205132038"
sent="Sat, 5 Feb 2000 14:02:47 +0100"
isosent="20000205130247"
name="Jelle Bosma"
email="jelleb@euronet.nl"
subject="Re: ascender, descender, cap-height and x-height"
id="01bf6fd9$4c8898b0$64646464@jel-nt.jelle.com"
charset="iso-8859-1"
inreplyto="ascender, descender, cap-height and x-height"
expires="-1"

To:"Erik van der Poel"<erik@netscape.com>,"David Lemon"<typenerd@slip.net>
Cc:<www-font@w3.org>




>That's a pity. Since you started talking about Microsoft being in a
>"bind" and em vs bounding boxes, it immediately reminded me of Windows's
>rather peculiar negative lfHeight thing. I mean, who would normally
>specify a negative number for a height?
>


Don't know about history.

The positive size is the point size, where the system
calculates ppem size (pixels per em - there you have the em again).
The ppem size is typically 96/72*point-size for the screen,
because Windows uses a "logical" resolution of 96 pixels
per Inch, while there are 72 points in an Inch.

The negative size can be used to specify ppem size
directly. Useful for screen typography where you do not want
to be interfered with by the fact that the screen resolution
isn't always set to the same value.

For +12 this gives an em of 16 by 16 pixels
For -12 an em of 12 by 12 pixels.
(regardless of the width of the M ;-)

Jelle



