docno="lists-108-7329326"
received="Fri Apr 30 10:24:18 2004"
isoreceived="20040430142418"
sent="Fri, 30 Apr 2004 10:23:29 -0400"
isosent="20040430142329"
name="Karandikar, Shailesh"
email="Shailesh.Karandikar@dendrite.com"
subject="RE: Ian Hickson (Opera) On W3C's XForms"
id="3101F58237A7CF468D6F1DB16778EB620B1F9F98@diexus1.us.drte.com"
charset="us-ascii"
inreplyto="Ian Hickson (Opera) On W3C's XForms"
expires="-1"


To:<www-forms@w3.org>
Cc:"Gerald Bauer"<luxorxul@yahoo.ca>


I do like XForms. However, as a Devil's advocate, here are some evil
comments:

Besides combining a well known algorithm from graph theory (for
dependency-graph calculations) with XPath, can XForms 1.0 really claim
any other innovations? Probably not!? Using XPath to provide
@nodeset/@ref is pretty trivial. It seems like the whole effort started
out with the idea of using graphs, which is a wonderful thought in
itself, of course. One can create such graphs either declaratively or
programmatically (XForms doesn't have any mechanism for programmatic
control and if an object model is created, it will limit the
innovation!)

Now, as the applications become more complex and large, I can see that
space/time complexity may be too large to justify its usage. It is also
not completely suitable for an incremental behavior. In addition (a weak
but valid observation), the XForms designer must be careful to keep
track of the unexpected ordering problems arising out of complex XPath
calculations, which somewhat defeats the original purpose of automating
the same calculations.


Again, I'm not trying to annoy XForms committee, but we should have
satisfying answers to these questions/objections.

To me, XAML does not bring any innovations. It looks more like an
adaptation of SVG + SMIL + UI markups, etc.


Regards,
Shailesh

-----Original Message-----
From: www-forms-request@w3.org [mailto:www-forms-request@w3.org] On
Behalf Of Gerald Bauer
Sent: Friday, April 30, 2004 3:33 AM
To: www-forms@w3.org
Subject: Ian Hickson (Opera) On W3C's XForms


Hello,

  allow me to highlight the mailinglist post by Ian
Hickson (Opera) titled "XForms and Mozilla" that
argues that W3C's XForms is bloated committee-ware and
has no future.

  Ian writes:

> 2) Would implementing the [W3C XForms] standard
advance mozilla's mission?

A good question as well. With XForms, the answer is
again no -- the mission of the Mozilla project is to
preserve choice and innovation on the Internet, and to
do this it needs to compete effectively with Internet
Explorer. IE will never implement XForms; Microsoft
have stated in no uncertain terms that the way forward
for IE is Avalon/XAML. Therefore the way to compete
with IE, as far as browser features go, is to provide
technologies that are more attractive to the majority
of Web developers than Avalon/XAML. One key way to do
this is to make the languages easy to use and easy to
author for. XForms is neither: it uses multiple levels
of indirection, multiple namespaces, XML Schema,
XPath, and, probably most importantly, is not
backwards compatible with existing content.

   More @
http://article.gmane.org/gmane.comp.mozilla.devel.layout/1347
     
         
   What's your take on it? Do you share Ian's outlook
about W3C's XForms? Are there any better, faster,
lighter alternatives to W3C's XForms heavy machinery?

    - Gerald

-------------------
Gerald Bauer
Open XUL Alliance - A Rich Internet For Everyone |
http://xul.sourceforge.net  
XUL News Wire | http://news.gmane.org/gmane.comp.lang.xul.announce

______________________________________________________________________ 
Post your free ad now! http://personals.yahoo.ca




**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

**********************************************************************



