docno="lists-108-7351700"
received="Fri Apr 30 12:32:08 2004"
isoreceived="20040430163208"
sent="Fri, 30 Apr 2004 12:30:56 -0400"
isosent="20040430163056"
name="Robert Bateman"
email="bobbateman@sequoiallc.com"
subject="Re: Ian Hickson (Opera) On W3C's XForms"
id="200404301230.56193.bobbateman@sequoiallc.com"
charset="iso-8859-1"
inreplyto="3101F58237A7CF468D6F1DB16778EB620B1F9F98&#64;diexus1.us.drte.com"
expires="-1"

To:<www-forms@w3.org>



On Friday 30 April 2004 10:23 am, Karandikar, Shailesh wrote:
> I do like XForms. However, as a Devil's advocate, here are some evil
> comments:
>
> Besides combining a well known algorithm from graph theory (for
> dependency-graph calculations) with XPath, can XForms 1.0 really claim
> any other innovations?

It's not really any "innovations" that makes XForms so much superior to HTML + 
JavaScript.  One item that XForms has going for it that "sold" me on the 
technology is that XForms (in a pure client implementation) relieves me of 
much of the validation work at the server.  This is because an xforms plug-in 
can and does validate input against a schema and will not send invalid data 
to the server.

One really big problem I have with many of the technologies involved with the 
web is their insistance on bringing much of their work onto the server (the 
thin client approach.)  This is traditionally how HTML content was dealt with 
- all validation was done at the server.  JavaScript has taken some of that 
burden back to the client - but JavaScript is not a perfect solution either.

Thinking more about what XForms has done innovatively - I can think of 
something:  XForms brings to us the ability to create (relatively) simple XML 
based input forms.  Given that the content sent to the server is an XML 
document, XForms makes hooking forms to new and existing WebServices 
something that has been sorely needed.  

Prior to XForms, what did we as web designers need to do to feed XML content 
from a form into a web service?  And *where* did that "interface" between the 
form and the web service run (usually on the server.)


Just my 2 cents worth.

Bob



